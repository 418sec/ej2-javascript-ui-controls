{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/utility/uml-util.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/ruler/ruler.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/objects/annotation.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/interaction/selector.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = void 0;\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode) {\n    var laneIndex = findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane) {\n    var shape = swimLane.shape;\n    if (shape.lanes.length === 1) {\n        diagram.remove(swimLane);\n    }\n    else {\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        var row = void 0;\n        var i = void 0;\n        var cell = void 0;\n        var j = void 0;\n        var child = void 0;\n        var grid = swimLane.wrapper.children[0];\n        var laneIndex = findLaneIndex(swimLane, lane);\n        var undoObj = cloneObject(shape.lanes[laneIndex]);\n        removeLaneChildNode(diagram, swimLane, lane);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                redoObject: cloneObject(lane), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        shape.lanes.splice(laneIndex, 1);\n        if (shape.orientation === 'Horizontal') {\n            row = grid.rows[lane.rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeRow(lane.rowIndex);\n        }\n        else {\n            swimLane.width = (swimLane.width !== undefined) ?\n                swimLane.width - grid.rows[0].cells[lane.columnIndex].actualSize.width : swimLane.width;\n            for (i = 0; i < grid.rows.length; i++) {\n                cell = grid.rows[i].cells[lane.columnIndex];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeColumn(lane.columnIndex);\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        ChangeLaneIndex(diagram, swimLane, lane.rowIndex);\n        diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phase.columnIndex];\n            prevCell = (row.cells.length - 1 === phase.columnIndex) ? row.cells[phase.columnIndex - 1] :\n                row.cells[phase.columnIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phase.columnIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phase.columnIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    grid.removeColumn(phase.columnIndex);\n    if ((phase.columnIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phase.columnIndex].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phase.columnIndex - 1].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    row = grid.rows[phase.rowIndex];\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phase.rowIndex - 1] : grid.rows[phase.rowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    grid.removeRow(phase.rowIndex);\n    if ((phase.rowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phase.rowIndex].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phase.rowIndex - 1].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var trigger;\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)));\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj, oldValues);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector, oldValues);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj.shape.type === 'SwimLane') {\n                connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n            }\n            if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                    this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                    target = this.diagram.getObject(target.parentId);\n                }\n            }\n            if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                target.container && target.container.type === 'Canvas' && target.isLane &&\n                obj.isLane && target.parentId === obj.parentId) {\n                laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                history.isPreventHistory = true;\n            }\n            else {\n                var parentNode = this.diagram.nameTable[obj.parentId];\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    obj.offsetX = helperObject.offsetX;\n                    obj.offsetY = helperObject.offsetY;\n                    if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                        obj.width = helperObject.width;\n                        obj.height = helperObject.height;\n                    }\n                    obj.rotateAngle = helperObject.rotateAngle;\n                }\n                var undoElement = void 0;\n                if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                    this.diagram.startGroupAction();\n                    hasGroup = true;\n                }\n                if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                    var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                    undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                    if (index > -1) {\n                        var children = parentNode.children;\n                        children.splice(children.indexOf(obj.id), 1);\n                        this.diagram.nameTable[obj.id].parentId = '';\n                        hasStack = true;\n                        parentNode.wrapper.children.splice(index, 1);\n                    }\n                }\n                moveChildInStack(obj, target, this.diagram, this.action);\n                parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                    (this.diagram.nameTable[obj.parentId] || obj);\n                if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                    parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                    parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                    isChangeProperties = true;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                }\n                if (obj.shape.lanes) {\n                    this.updateLaneChildNode(obj);\n                }\n                if (isChangeProperties) {\n                    parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                    parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                }\n                if (hasStack) {\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    var entry = {\n                        type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                        undoObject: undoElement, category: 'Internal'\n                    };\n                    if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                        this.diagram.addHistoryEntry(entry);\n                    }\n                }\n                if (obj && obj.container && (obj.container.type === 'Stack' ||\n                    (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                    });\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = false;\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, this.diagram);\n            history.hasStack = hasGroup;\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition, updatePathElement } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.nodes[index],\n                                newValue: newProp.nodes[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.connectors[index],\n                                newValue: newProp.connectors[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = { element: this, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldObject, newValue: node };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ?\n                        this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo);\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","ReadOnly","verticalAlignment","horizontalAlignment","initObject","nodes","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","scale","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","updateDiagramObject","renderContainerHelper","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","maxHeight","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","isLane","measure","Size","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","currentSymbol","getObject","indexOf","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","totalHeight","phases","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","annotation","addObjectToGrid","addObject","headerDefine","phaseDefine","laneCollection","isPhase","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeChildren","removePhase","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","removeColumn","removeHorizontalPhase","prevChild","removeRow","removeVerticalPhase","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","property","Array","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","getChildNode","Browser","info","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","canMeasure","textNodes","textWrapBounds","imageSource","stretch","measureImage","Hyperlink","Annotation","InheritReadOnly","Complex","defaultValue","isArray","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Connect","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","updatePortEdges","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","PreventHistory","updateSvgNodes","updateProcesses","moveNode","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","removeSwimLane","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","removeLane","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","refreshCanvasDiagramLayer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","allowDrag","refreshPalettes","accordionDiv","Accordion","updatePalettes","measureElemnt","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"4dAIA,SAAgBA,EAAgBC,GAC5B,IACIC,EADAC,KAEAC,EAAkBC,EAAcJ,GACpC,GAAIG,EAAgBE,OAAS,EACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAgBE,OAAQC,IAAK,CAC7C,IAAIC,EAAKJ,EAAgBG,GACrBE,EAAO,GAEX,QADAA,EAAOD,EAAG,IACGE,eACT,IAAK,IACD,IAAKR,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMI,EAAGL,EAAGN,GAAIY,EAAGN,EAAGN,EAAI,KACrDA,GAAQ,EACK,MAATO,EACAA,EAAO,IAEO,MAATA,IACLA,EAAO,KAGf,MACJ,IAAK,IACL,IAAK,IACD,IAAKP,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMI,EAAGL,EAAGN,GAAIY,EAAGN,EAAGN,EAAI,KACrDA,GAAQ,EAEZ,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMI,EAAGL,EAAGN,KAE3C,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMK,EAAGN,EAAGN,KAE3C,MACJ,IAAK,IACDC,EAAWQ,MAAOC,QAASH,IAC3B,MACJ,IAAK,IACD,IAAKP,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MACPC,QAASH,EAAMM,GAAIP,EAAGN,GAAIc,GAAIR,EAAGN,EAAI,GAAIe,GAAIT,EAAGN,EAAI,GAAIgB,GAAIV,EAAGN,EAAI,GAAIW,EAAGL,EAAGN,EAAI,GAAIY,EAAGN,EAAGN,EAAI,KAEnGA,GAAQ,EAEZ,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMQ,GAAIT,EAAGN,GAAIgB,GAAIV,EAAGN,EAAI,GAAIW,EAAGL,EAAGN,EAAI,GAAIY,EAAGN,EAAGN,EAAI,KACnFA,GAAQ,EAEZ,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMM,GAAIP,EAAGN,GAAIc,GAAIR,EAAGN,EAAI,GAAIW,EAAGL,EAAGN,EAAI,GAAIY,EAAGN,EAAGN,EAAI,KACnFA,GAAQ,EAEZ,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MACPC,QAASH,EAAMU,GAAIX,EAAGN,GAAIkB,GAAIZ,EAAGN,EAAI,GAAImB,MAAOb,EAAGN,EAAI,GAAIoB,SAAUd,EAAGN,EAAI,GAC5EqB,MAAOf,EAAGN,EAAI,GAAIW,EAAGL,EAAGN,EAAI,GAAIY,EAAGN,EAAGN,EAAI,KAE9CA,GAAQ,GAM5B,OAAOC,EAGX,SAAgBE,EAAcJ,GAC1B,IAAIuB,EAAY,wCACZC,KACAC,KACAC,KACJH,EAAUI,UAAY,EACtB,IAAIC,GAAgB,EAEpB,IADAF,EAAQH,EAAUM,KAAK7B,GAChB0B,GACc,MAAbA,EAAM,GACNE,GACgB,EAEXF,EAAM,IACoB,OAA3BA,EAAM,GAAGjB,eACLe,EAAQnB,QACRoB,EAASf,KAAKc,GAElBC,EAASf,MAAM,MACfc,GAAWE,EAAM,GAAGI,UAAU,EAAG,MAG7BN,EAAQnB,QACRoB,EAASf,KAAKc,GAElBA,GAAWE,EAAM,KAErBE,GAAgB,IAGXJ,EAAQnB,SACTmB,MAECI,GACDJ,EAAQd,KAAKqB,OAAOL,EAAM,KAE9BE,GAAgB,GAEpBF,EAAQH,EAAUM,KAAK7B,GAK3B,OAHIwB,EAAQnB,QACRoB,EAASf,KAAKc,GAEXC,EAKX,SAAgBO,EAAiBC,EAAcC,EAAQC,GACnD,IAUIC,EACAC,EATAC,EAAO,GACPC,IAAY3B,EAHR,EAGeqB,EAAcpB,EAF7B,IAEuCD,EAHvC,EAG8CuB,EAAQF,EAAcpB,EAFpE,IAGFD,EAJE,EAIKuB,EAAOtB,EAHZ,EAGmBoB,IAAkBrB,EAJrC,EAI4CuB,EAAOtB,EAHnD,EAG0DqB,EAASD,IACrErB,EALE,EAKKuB,EAAQF,EAAcpB,EAJ3B,EAIkCqB,IAAYtB,EAL9C,EAKqDqB,EAAcpB,EAJnE,EAI0EqB,IAC5EtB,EANE,EAMIC,EALJ,EAKWqB,EAASD,IAAkBrB,EANtC,EAM4CC,EAL5C,EAKmDoB,IAEvDO,IAAa5B,EART,EAQgBuB,EAAOtB,EAPvB,IAOiCD,EARjC,EAQwCuB,EAAOtB,EAP/C,EAOsDqB,IAAYtB,EARlE,EAQwEC,EAPxE,EAO+EqB,IAAYtB,EAR3F,EAQiGC,EAPjG,IAQJ4B,EAAS,EAGbH,EAAO,IAAMC,EAAO,GAAG3B,EAAI,IAAM2B,EAAO,GAAG1B,EAC3C,IAAIP,EACJ,IAAKA,EAAI,EAAGA,EAAIiC,EAAOlC,OAAQC,GAAQ,EAEnCgC,GAAQ,KADRF,EAASG,EAAOjC,EAAI,IACCM,EAAI,IAAMwB,EAAOvB,EACtCwB,EAAOE,EAAOjC,EAAI,IAAMiC,EAAO,GAC/BD,GAAQ,IAAME,EAAQC,GAAQ7B,EAAI,IAAM4B,EAAQC,GAAQ5B,EAAI,IAAMwB,EAAKzB,EAAI,IAAMyB,EAAKxB,EACtF4B,IAEJ,OAAOH,EAKX,SAAgBI,EAAexC,GAC3B,IACIyC,EADAL,EAAO,GAEXA,EAAO,IAAMpC,EAAW,GAAGU,EAAI,IAAMV,EAAW,GAAGW,EACnD,IAAIP,EACJ,IAAKA,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IAE/BgC,GAAQ,KADRK,EAAMzC,EAAWI,IACCM,EAAI,IAAM+B,EAAI9B,EAGpC,OADAyB,GAAQ,IAIZ,SAAgBM,EAAsB1C,GAClC,IAAI2C,EACAC,EACAhC,EACAC,EACAC,EACAC,EACAL,EACAC,EACAR,EACAC,EAGAyC,KACJ,IAAKnC,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGD,EAASH,EAAWG,OAAQC,EAAID,IAAUC,EAAG,CACnE,IACIqC,EADMzC,EAAWI,GAEjBE,EAAO,GACXA,EAAOmC,EAAIhC,QACP,OAAQgC,IACR5B,EAAK4B,EAAI5B,IAET,OAAQ4B,IACR1B,EAAK0B,EAAI1B,IAET,OAAQ0B,IACR7B,EAAK6B,EAAI7B,IAET,OAAQ6B,IACR3B,EAAK2B,EAAI3B,IAET,MAAO2B,IACP/B,EAAI+B,EAAI/B,GAER,MAAO+B,IACP9B,EAAI8B,EAAI9B,GAEZ,IAAImC,EAAOD,EAASA,EAAS1C,OAAS,GACtC,OAAQG,GACJ,IAAK,IACDuC,EAASrC,MAAOC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,IACvC,MACJ,IAAK,IACDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIlC,EAAGA,EAAGC,EAAGA,IACvD,MACJ,IAAK,IACDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIlC,EAAGA,EAAGC,EAAGiC,IACvD,MACJ,IAAK,IACDC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIlC,EAAGiC,EAAIhC,EAAGA,IACxD,MACJ,IAAK,IACDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIhC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIL,EAAGA,EAAGC,EAAGA,IACvF,MACJ,IAAK,IACD,GAAImC,EAAM,CACN,IAAIC,OAAO,EAOPC,GAAStC,EAAG,EAAIiC,GALhBI,EADiB,MAAjBD,EAAKrC,SAAoC,MAAjBqC,EAAKrC,SACpBC,EAAGoC,EAAKhC,GAAIH,EAAGmC,EAAK/B,KAGpBL,EAAGiC,EAAIhC,EAAGiC,IAEOlC,EAAGC,EAAG,EAAIiC,EAAKG,EAAKpC,GAClDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIhC,GAAIoC,EAAKtC,EAAGG,GAAImC,EAAKrC,EAAGG,GAAIA,EAAIC,GAAIA,EAAIL,EAAGA,EAAGC,EAAGA,IAEnG,MACJ,IAAK,IAEDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIhC,GAAIA,EAAIC,GAAIA,EAAIH,EAAGA,EAAGC,EAAGA,IACvE,MACJ,IAAK,IACD,GAAImC,EAAM,CACFC,OAAO,EAOPC,GAAStC,EAAG,EAAIiC,GALhBI,EADiB,MAAjBD,EAAKrC,SACIC,EAAGoC,EAAKlC,GAAID,EAAGmC,EAAKjC,KAGpBH,EAAGiC,EAAIhC,EAAGiC,IAEOlC,EAAGC,EAAG,EAAIiC,EAAKG,EAAKpC,GAClDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIhC,GAAIoC,EAAKtC,EAAGG,GAAImC,EAAKrC,EAAGD,EAAGA,EAAGC,EAAGA,IAEnF,MACJ,IAAK,IACD,IAAIsC,EAASR,EACbQ,EAAOxC,QAAU,IACjBoC,EAASrC,KAAKyC,GACd,MACJ,IAAK,IACL,IAAK,IACDJ,EAASrC,MAAOC,QAAS,MACzBC,EAAIiC,EACJhC,EAAIiC,EAGZD,EAIKjC,EACLkC,EAAKjC,EAET,OAAOkC,EAGX,SAAgBK,EAAcC,EAAKC,EAAIC,EAAIC,EAAGC,EAAIC,EAAIC,EAAIC,GACtD,IAEI9C,EACAC,EACAC,EACAC,EACAL,EACAC,EACAR,EACAC,EACA6C,EACJ,IAAKvC,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGD,EAASgD,EAAIhD,OAAQC,EAAID,IAAUC,EAAG,CAC5D,IACIqC,EADMU,EAAI/C,GAEVE,EAAOmC,EAAIhC,QACX,MAAOgC,IACP/B,EAAI+B,EAAI/B,GAER,MAAO+B,IACP9B,EAAI8B,EAAI9B,GAER,OAAQ8B,IACR5B,EAAK4B,EAAI5B,IAET,OAAQ4B,IACR1B,EAAK0B,EAAI1B,IAET,OAAQ0B,IACR7B,EAAK6B,EAAI7B,IAET,OAAQ6B,IACR3B,EAAK2B,EAAI3B,IAETwC,QACUK,IAANjD,IACAA,EAAIkD,EAAclD,EAAG0C,EAAIG,EAAIE,SAEvBE,IAANhD,IACAA,EAAIiD,EAAcjD,EAAG0C,EAAIG,EAAIE,SAEtBC,IAAP/C,IACAA,EAAKgD,EAAchD,EAAIwC,EAAIG,EAAIE,SAExBE,IAAP9C,IACAA,EAAK+C,EAAc/C,EAAIwC,EAAIG,EAAIE,SAExBC,IAAP7C,IACAA,EAAK8C,EAAc9C,EAAIsC,EAAIG,EAAIE,SAExBE,IAAP5C,IACAA,EAAK6C,EAAc7C,EAAIsC,EAAIG,EAAIE,WAIzBC,IAANjD,IACAA,EAAImB,QAAQnB,EAAI0C,GAAIS,QAAQ,UAEtBF,IAANhD,IACAA,EAAIkB,QAAQlB,EAAI0C,GAAIQ,QAAQ,UAErBF,IAAP/C,IACAA,EAAKiB,QAAQjB,EAAKwC,GAAIS,QAAQ,UAEvBF,IAAP9C,IACAA,EAAKgB,QAAQhB,EAAKwC,GAAIQ,QAAQ,UAEvBF,IAAP7C,IACAA,EAAKe,QAAQf,EAAKsC,GAAIS,QAAQ,UAEvBF,IAAP5C,IACAA,EAAKc,QAAQd,EAAKsC,GAAIQ,QAAQ,OAItCZ,EAASa,EAAerB,EAAKnC,GADVI,EAAGA,EAAGC,EAAGA,EAAGC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIyB,EAAIzB,GAAIC,GAAIwB,EAAIxB,IACpCqC,EAAGF,EAAIC,MAElDF,EAAI/C,GAAK6C,GASjB,OADec,EAAcZ,GAIjC,SAAgBW,EAAeE,EAAS1D,EAAM2D,EAAKC,EAASd,EAAIC,GAC5D,OAAQ/C,GACJ,IAAK,IAIL,IAAK,IACD0D,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChB,MACJ,IAAK,IACDqD,EAAQtD,EAAIuD,EAAIvD,EAChB,MACJ,IAAK,IACDsD,EAAQrD,EAAIsD,EAAItD,EAChB,MACJ,IAAK,IACDqD,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChBqD,EAAQpD,GAAKqD,EAAIrD,GACjBoD,EAAQnD,GAAKoD,EAAIpD,GACjBmD,EAAQlD,GAAKmD,EAAInD,GACjBkD,EAAQjD,GAAKkD,EAAIlD,GACjB,MACJ,IAAK,IACDiD,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChBqD,EAAQlD,GAAKmD,EAAInD,GACjBkD,EAAQjD,GAAKkD,EAAIlD,GACjB,MACJ,IAAK,IACDiD,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChBqD,EAAQpD,GAAKqD,EAAIrD,GACjBoD,EAAQnD,GAAKoD,EAAIpD,GACjB,MACJ,IAAK,IACDmD,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChB,MACJ,IAAK,IACD,IAAIK,EAAKiD,EAAIjD,GACTC,EAAKgD,EAAIhD,GACTiD,IACAD,EAAIjD,GAAKA,GAAWoC,EACpBa,EAAIhD,GAAKA,GAAWoC,GAExBW,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChBqD,EAAQhD,GAAKiD,EAAIjD,GACjBgD,EAAQ/C,GAAKgD,EAAIhD,GACjB,MACJ,IAAK,IACL,IAAK,IACD+C,GAAYvD,QAAS,KAG7B,OAAOuD,EAGX,SAAgBJ,EAAcO,EAAKC,EAAaC,EAAWC,GAevD,OAdIH,IAAQE,EAEJF,EADAG,IAAcD,EACLF,EAAMC,GAAgBvC,OAAOwC,GAAaD,EAAcvC,OAAOwC,KACjEC,EAAYzC,OAAOwC,IAGlBxC,OAAOsC,GAAOC,GAAgBvC,OAAOwC,GAAaD,EAAcvC,OAAOwC,IAI/EC,IAAcD,IACdF,EAAMG,GAGPzC,OAAOsC,EAAIN,QAAQ,IAG9B,SAAgBU,EAAqBtE,GACjC,IAAI0C,EACAC,EACAhC,EACAC,EACAC,EACAC,EACAL,EACAC,EACAR,EACAC,EACJ,IAAKM,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGD,EAASF,EAAgBE,OAAQC,EAAID,IAAUC,EAAG,CACxE,IACIqC,EADOxC,EAAgBG,GAEvBE,EAAOmC,EAAIhC,QACf,GAAI,cAAc+D,KAAKlE,GACf,MAAOmC,IACPA,EAAI/B,EAAIA,EAAI+B,EAAI/B,GAEhB,MAAO+B,IACPA,EAAI9B,EAAIA,EAAI8B,EAAI9B,OAGnB,CACG,OAAQ8B,IACRA,EAAI7B,GAAKA,EAAKF,EAAI+B,EAAI7B,IAEtB,OAAQ6B,IACRA,EAAI3B,GAAKA,EAAKJ,EAAI+B,EAAI3B,IAEtB,OAAQ2B,IACRA,EAAI5B,GAAKA,EAAKF,EAAI8B,EAAI5B,IAEtB,OAAQ4B,IACRA,EAAI1B,GAAKA,EAAKJ,EAAI8B,EAAI1B,IAEtB,MAAO0B,IACPA,EAAI/B,EAAIA,GAAK+B,EAAI/B,GAEjB,MAAO+B,IACPA,EAAI9B,EAAIA,GAAK8B,EAAI9B,GAErB,IAAIsC,OAAS,EACb,OAAQ3C,GACJ,IAAK,IACL,IAAK,IACD2C,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,GAClC,MACJ,IAAK,IACL,IAAK,IACDsC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,GAClC,MACJ,IAAK,IACL,IAAK,IACDsC,GAAWxC,QAAS,IAAKC,EAAGA,GAC5B,MACJ,IAAK,IACL,IAAK,IACDuC,GAAWxC,QAAS,IAAKE,EAAGA,GAC5B,MACJ,IAAK,IACL,IAAK,IACDsC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,EAAGC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,GACjE,MACJ,IAAK,IACL,IAAK,IACDkC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,EAAGG,GAAIA,EAAIC,GAAIA,GACjD,MACJ,IAAK,IACL,IAAK,IACDkC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,EAAGC,GAAIA,EAAIC,GAAIA,GACjD,MACJ,IAAK,IACL,IAAK,IACDoC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,GAClC,MACJ,IAAK,IACL,IAAK,KACDsC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,IAC3BK,GAAKyB,EAAIzB,GAChBiC,EAAOhC,GAAKwB,EAAIxB,GAChBgC,EAAO/B,MAAQuB,EAAIvB,MACnB+B,EAAO9B,SAAWsB,EAAItB,SACtB8B,EAAO7B,MAAQqB,EAAIrB,MACnB,MACJ,IAAK,IACL,IAAK,IACD6B,GAAWxC,QAAS,KACpBC,EAAIiC,EACJhC,EAAIiC,EACJK,EAAShD,EAAgBG,GAG7B6C,IACAhD,EAAgBG,GAAK6C,GAGhB,MAAT3C,GAAyB,MAATA,IAChBqC,EAAKjC,EACLkC,EAAKjC,GAGb,OAAOV,EAGX,SAAgB8D,EAAc9D,GAC1B,IACIG,EADAqE,EAAe,GAEnB,IAAKrE,EAAI,EAAGA,EAAIH,EAAgBE,OAAQC,IAEhCqE,GADM,IAANrE,EACgBsE,EAAUzE,EAAgBG,IAG1B,IAAMsE,EAAUzE,EAAgBG,IAGxD,OAAOqE,EAGX,SAAgBC,EAAUT,GACtB,IAAIU,EAAS,GACb,OAAQV,EAAIxD,SACR,IAAK,IACL,IAAK,IACDkE,EAASV,EAAIxD,QACb,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACDkE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIvD,EAAI,IAAMuD,EAAItD,EAC/C,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIrD,GAAK,IAAMqD,EAAIpD,GAAK,IAAMoD,EAAInD,GAAK,IAAMmD,EAAIlD,GAAK,IAAMkD,EAAIvD,EAAI,IAAMuD,EAAItD,EAC3G,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIrD,GAAK,IAAMqD,EAAIpD,GAAK,IAAMoD,EAAIvD,EAAI,IAAMuD,EAAItD,EAC7E,MACJ,IAAK,IACL,IAAK,IACD,IAAIiE,EAAMX,EAAIxD,QACVoE,EAAMZ,EAAI/C,MACV4D,EAAKb,EAAI9C,SAAW,IAAM,IAC1BmC,EAAKW,EAAI7C,MAAQ,IAAM,IAC3BuD,EAASC,EAAM,IAAMX,EAAIjD,GAAK,IAAMiD,EAAIhD,GAAK,IAAM4D,EAAM,IAAMC,EAAI,IAAMxB,EAAI,IAAMW,EAAIvD,EAAI,IAAMuD,EAAItD,EACrG,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIvD,EACjC,MACJ,IAAK,IACL,IAAK,IACDiE,EAASV,EAAIxD,QAAU,IAAMwD,EAAItD,EACjC,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAInD,GAAK,IAAMmD,EAAIlD,GAAK,IAAMkD,EAAIvD,EAAI,IAAMuD,EAAItD,EAC7E,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIvD,EAAI,IAAMuD,EAAItD,EAEvD,OAAOgE,EC/jBX,SAAgBI,IACZ,OAAO,IAAIC,GAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,cAAYC,UAGpD,SAAgBC,EAAuBC,EAAQC,GAC3C,IAAIC,EA0DR,SAAuBF,EAAQ1E,EAAGC,GAC9B,OAAQyE,EAAOG,MACX,KAAKN,cAAYC,SAAU,MAC3B,KAAKD,cAAYO,YACb9E,GAAK0E,EAAOK,QACZ9E,GAAKyE,EAAOM,QACZ,MACJ,KAAKT,cAAYU,QACbjF,GAAK0E,EAAOQ,IACZjF,GAAKyE,EAAOS,IACZ,MACJ,KAAKZ,cAAYO,YAAcP,cAAYU,QACvCjF,GAAK0E,EAAOQ,IACZlF,GAAK0E,EAAOK,QACZ9E,GAAKyE,EAAOS,IACZlF,GAAKyE,EAAOM,QACZ,MACJ,QACI,IAAII,EAAMnF,EAAIyE,EAAOW,IAAMX,EAAOK,QAC9BO,EAAOtF,EAAI0E,EAAOa,IAAMb,EAAOM,QACnChF,GAAK0E,EAAOQ,IACZlF,GAAKoF,EACLnF,GAAKyE,EAAOS,IACZlF,GAAKqF,EAGb,OAAStF,EAAGA,EAAGC,EAAGA,GApFTuF,CAAcd,EAAQC,EAAM3E,EAAG2E,EAAM1E,GAC9C,OAASD,EAAGyF,KAAKC,MAAa,IAAPd,EAAG5E,GAAW,IAAKC,EAAGwF,KAAKC,MAAa,IAAPd,EAAG3E,GAAW,KAG1E,SAAgB0F,EAAwBjB,EAAQ/C,GAE5C,IAAK,IADDiE,KACKC,EAAK,EAAGC,EAAWnE,EAAQkE,EAAKC,EAASrG,OAAQoG,IAAM,CAC5D,IAAIlB,EAAQmB,EAASD,GACrBD,EAAkB9F,KAAK2E,EAAuBC,EAAQC,IAE1D,OAAOiB,EAGX,SAAgBG,EAAarB,EAAQlE,EAAOwF,EAASC,GAEjDC,EAAexB,EAgCnB,SAA+BlE,EAAOwF,EAASC,GAC3C,IAAIE,EAAS9B,IACTe,EAAMK,KAAKW,IAAI5F,GACf8E,EAAOG,KAAKY,IAAI7F,GAChBuE,EAAUiB,GAAW,EAAMV,GAAQW,EAAUb,EAC7CJ,EAAUiB,GAAW,EAAMX,GAAQU,EAAUZ,EAGjD,OAFAe,EAAOtB,KAAON,cAAY+B,QAC1BC,EAAUJ,EAAQb,EAAMF,GAAMA,EAAKE,EAAMP,EAASC,GAC3CmB,EAxCgBK,CAA8B,qBADrDhG,GAAS,KACkEwF,GAAoB,EAAGC,GAAoB,IAG1H,SAAgBQ,EAAY/B,EAAQgC,EAAQC,EAAQX,EAASC,QACzC,IAAZD,IAAsBA,EAAU,QACpB,IAAZC,IAAsBA,EAAU,GACpCC,EAAexB,EAmBnB,SAAuBgC,EAAQC,EAAQX,EAASC,GAC5C,IAAIE,EAAS9B,IAGb,OAFA8B,EAAOtB,KAASmB,GAAWC,EAAiC1B,cAAYU,QAAUV,cAAYO,YAAxDP,cAAYU,QAClDsB,EAAUJ,EAAQO,EAAQ,EAAK,EAAKC,EAAQX,EAAUU,EAASV,EAASC,EAAUU,EAASV,GACpFE,EAvBgBS,CAAcF,EAAQC,EAAQX,EAASC,IAGlE,SAAgBY,EAAgBnC,EAAQK,EAASC,GAC7C,OAAIN,EAAOG,KAAON,cAAYC,UAC1BE,EAAOG,KAAON,cAAYO,iBAC1ByB,EAAU7B,EAAQ,EAAK,EAAK,EAAK,EAAKK,EAASC,IAG/CN,EAAOG,KAAON,cAAY+B,SAC1B5B,EAAOK,SAAWA,OAClBL,EAAOM,SAAWA,KAGtBN,EAAOK,SAAWA,EAClBL,EAAOM,SAAWA,OAClBN,EAAOG,MAAQN,cAAYO,cAkD/B,SAAgBoB,EAAeY,EAASC,GACpC,IAAIlC,EAAOiC,EAAQjC,KACfmC,EAAQD,EAAQlC,KACpB,GAAImC,IAAUzC,cAAYC,SAA1B,CAGA,GAAIK,IAASN,cAAYC,SAGrB,OAFAyC,EAAaH,EAASC,QACtBD,EAAQjC,KAAOkC,EAAQlC,MAG3B,GAAImC,IAAUzC,cAAYO,YAMtB,OALAgC,EAAQ/B,SAAWgC,EAAQhC,QAC3B+B,EAAQ9B,SAAW+B,EAAQ/B,aACvBH,IAASN,cAAY+B,UACrBQ,EAAQjC,MAAQN,cAAYO,cAIpC,GAAID,IAASN,cAAYO,YAAa,CAClC,IAAIM,EAAMP,GAAQ,EAAImC,EACtB,OAAQ5B,GACJ,KAAK,GAGD,OAFA0B,EAAQ5B,KAAO6B,EAAQ7B,SACvB4B,EAAQ3B,KAAO4B,EAAQ5B,KAE3B,KAAK,GAMD,OALA2B,EAAQ5B,KAAO6B,EAAQ7B,IACvB4B,EAAQ3B,KAAO4B,EAAQ5B,IACvB2B,EAAQ/B,QAAUgC,EAAQhC,QAC1B+B,EAAQ9B,QAAU+B,EAAQ/B,aAC1B8B,EAAQjC,KAAQN,cAAYO,YAAcP,cAAYU,SAE1D,KAAK,GAAI,MACT,QAEQ,OAAQG,GACJ,KAAK,GAKD,OAJA0B,EAAQ5B,KAAO6B,EAAQ7B,IACvB4B,EAAQ3B,KAAO4B,EAAQ5B,IACvB2B,EAAQ/B,SAAWgC,EAAQ7B,SAC3B4B,EAAQ9B,SAAW+B,EAAQ5B,KAE/B,KAAK,GAKD,OAJA2B,EAAQ5B,KAAO6B,EAAQ7B,IACvB4B,EAAQ3B,KAAO4B,EAAQ5B,IACvB2B,EAAQ/B,QAAUgC,EAAQ7B,IAAM4B,EAAQ/B,QAAUgC,EAAQhC,aAC1D+B,EAAQ9B,QAAU+B,EAAQ5B,IAAM2B,EAAQ9B,QAAU+B,EAAQ/B,SAE9D,KAAK,GAAI,MACT,QACI,OAAQI,GACJ,KAAK,GACL,KAAK,GACL,KAAK,GAAI,MACT,QAAS,SAOjC,IAAIe,EAAS9B,IAyBb,OAlBAkC,EAAUJ,EANGW,EAAQ5B,IAAM6B,EAAQ7B,IAAM4B,EAAQvB,IAAMwB,EAAQ1B,IAClDyB,EAAQ5B,IAAM6B,EAAQxB,IAAMuB,EAAQvB,IAAMwB,EAAQ5B,IAClD2B,EAAQzB,IAAM0B,EAAQ7B,IAAM4B,EAAQ3B,IAAM4B,EAAQ1B,IAClDyB,EAAQzB,IAAM0B,EAAQxB,IAAMuB,EAAQ3B,IAAM4B,EAAQ5B,IAC/C2B,EAAQ/B,QAAUgC,EAAQ7B,IAAM4B,EAAQ9B,QAAU+B,EAAQ1B,IAAM0B,EAAQhC,QACxE+B,EAAQ/B,QAAUgC,EAAQxB,IAAMuB,EAAQ9B,QAAU+B,EAAQ5B,IAAM4B,EAAQ/B,SAEpFmB,EAAOd,KAAOc,EAAOZ,IACrBY,EAAOtB,KAAON,cAAY+B,UAGtBH,EAAOjB,KAAsB,IAAfiB,EAAOjB,KAAeiB,EAAOhB,KAAsB,IAAfgB,EAAOhB,OACzDgB,EAAOtB,KAAON,cAAYU,UAE1BkB,EAAOpB,SAAWoB,EAAOnB,WACzBmB,EAAOtB,MAAQN,cAAYO,cAE1BqB,EAAOtB,MAAQN,cAAYO,YAAcP,cAAYU,YAAcV,cAAYC,WAChF2B,EAAOtB,KAAON,cAAYC,UAE9B2B,EAAOtB,KAAON,cAAYU,QAAUV,cAAYO,aAEpDmC,EAAaH,EAASX,QACtBW,EAAQjC,KAAOsB,EAAOtB,MAG1B,IAAIE,EAAU+B,EAAQ/B,QAClBC,EAAU8B,EAAQ9B,QACtB8B,EAAQ/B,QAAUA,EAAUgC,EAAQ7B,IAAMF,EAAU+B,EAAQ1B,IAAM0B,EAAQhC,QAC1E+B,EAAQ9B,QAAUD,EAAUgC,EAAQxB,IAAMP,EAAU+B,EAAQ5B,IAAM4B,EAAQ/B,QACtEgC,IAAUzC,cAAY+B,QAI1BQ,EAAQjC,KAAQN,cAAYO,YAAcP,cAAYU,QAHlD6B,EAAQjC,KAAON,cAAY+B,SAMnC,SAASC,EAAUW,EAAKhC,EAAKK,EAAKF,EAAKF,EAAKnF,EAAGC,GAC3CiH,EAAIhC,IAAMA,EACVgC,EAAI3B,IAAMA,EACV2B,EAAI7B,IAAMA,EACV6B,EAAI/B,IAAMA,EACV+B,EAAInC,QAAU/E,EACdkH,EAAIlC,QAAU/E,EAGlB,SAASgH,EAAaH,EAASC,GAC3BD,EAAQ5B,IAAM6B,EAAQ7B,IACtB4B,EAAQvB,IAAMwB,EAAQxB,IACtBuB,EAAQzB,IAAM0B,EAAQ1B,IACtByB,EAAQ3B,IAAM4B,EAAQ5B,IACtB2B,EAAQ/B,QAAUgC,EAAQhC,QAC1B+B,EAAQ9B,QAAU+B,EAAQ/B,QAC1B8B,EAAQjC,KAAOkC,EAAQlC,KC3O3B,SAAgBsC,EAAcC,GAC1B,OAAOC,GAAYD,EAAME,YCD7B,SAAgBC,EAAaH,GACzB,OAAOI,GAAWJ,EAAME,YAG5B,SAAgBG,EAAkBL,EAAOM,GACrC,MAAc,WAAVN,EACOM,EAAUC,SAEdC,GAAgBR,GAO3B,SAAgBS,EAAaC,GACzB,IAAI1I,EACJ,OAAQ0I,EAAKV,OACT,IAAK,QACDhI,EAAO,gBACP,MACJ,IAAK,OACDA,EAAO,4BACP,MACJ,IAAK,UACDA,EAAO,0BACP,MACJ,IAAK,YACDA,EAAO,wBACP,MACJ,IAAK,OACDA,EAAO0I,EAAKH,SAGpB,OAAOvI,EClCX,SAAgB2I,EAAaX,GACzB,OAAOY,GAAWZ,EAAME,YCsD5B,SAAgBW,EAAYC,GACxB,IAAIC,EAAgB,IAAIC,UACxBD,EAAgBE,EAAqBH,EAAQI,QAASH,GACtD,IAAIG,EAAU,IAAIF,UAAQD,GAO1B,OANAG,EAAQC,gBAAkBA,EAC1BD,EAAQE,WAAaA,EACrBF,EAAQG,SAAW,oBACnBH,EAAQI,QAAU,SAClBJ,EAAQK,SAAS,IAAMT,EAAQU,QAAQC,IACvCP,EAAQQ,QACDR,EAEX,SAASE,EAAWO,GACM,KAAjBC,KAAKC,cAAmChG,IAAjB+F,KAAKC,UAC7BF,EAAKH,QAAQM,MAAMC,QAAU,QAGrC,SAASZ,EAAgBQ,GAChBA,EAAKK,kBAAoBL,EAAKK,mBAAqBJ,KAAKK,WACzDN,EAAKH,QAAQM,MAAMC,QAAU,QASrC,SAAgBG,EAAcpB,EAASqB,GACnC,IAAIjB,EACAkB,EAAgBtB,EAAQsB,cAG5B,OAFAlB,EAAUiB,EAAOA,EAAKjB,QAAUJ,EAAQI,QACxCD,EAAqBC,EAASkB,GACvBA,EAEX,SAASnB,EAAqBC,EAASkB,GAiBnC,OAhBIlB,EAAQW,SACRO,EAAcP,QAAUX,EAAQW,QAChCO,EAAcH,SAAWf,EAAQe,SACjCG,EAAcC,eAAiBnB,EAAQmB,eACvCD,EAAcjI,MAAQ+G,EAAQ/G,MAC9BiI,EAAclI,OAASgH,EAAQhH,OAC1BgH,EAAQoB,UAITF,EAAcE,UAAYpB,EAAQoB,UAHlCF,EAAcE,WAAcZ,OAASa,OAAQ,UAOjDH,EAAcV,QAEXU,ECpGX,SAAgBI,EAAoBhB,EAASiB,GACzC,IAAIC,EACAC,EAUJ,OALIA,EAJiB,aAAjBnB,EAAQ/D,MAAwB+D,EAAQoB,cAI1BpB,EAAQoB,cAAcpI,QAAQqI,OAOpD,SAAwBrB,GACpB,IAAIsB,EACJ,GAAItB,EAAQuB,kBAAmB,CAC3B,IAAIC,EAAUxB,EAAQuB,kBAClBE,EAAUzB,EAAQoB,cAClBpF,GAAO5E,EAAGoK,EAAQrF,QAAS9E,EAAGmK,EAAQpF,SAC1BsF,GAAiB1F,EAAI2F,GAA4BF,GAAUA,EAAQG,QAAQ,GAC3FN,EAAWtF,OAEV,GAAIgE,EAAQ6B,UAAY7B,EAAQoB,cACjC,GAAIpB,EAAQ8B,cAAe,CACvB,IAAIC,EAAS/B,EAAQoB,cAAcpI,QAAQqI,OACvCW,EAAShC,EAAQ8B,cAAc9I,QAAQqI,OAC3CC,EAAWW,GAAgBjC,EAASA,EAAQoB,cAAeW,EAAQC,GAAQ,QAG3EV,EAAWtB,EAAQmB,iBAIvBG,EAAWtB,EAAQmB,YAEvB,OAAOG,EAhCWY,CAAelC,GAKjCkB,EA+CJ,SAA6BlB,EAASsB,EAAUa,EAAUlB,GACtD,IAeImB,EACAC,EAhBAC,EAAatC,EAAQoB,cACrBmB,EAAavC,EAAQ8B,cACrBU,EAAaxC,EAAQuB,kBACrBkB,EAAazC,EAAQ0C,kBAGrBxB,KAOAyB,GAAW3J,aATX4J,EAS+B7G,MAAOuF,EAAUuB,eALhDC,EAKmEC,QAFlDC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,IAGpDC,GAAWpK,aATXqK,EAS+BtH,MAAOoG,EAAUU,eALhDS,EAKmEP,QAFlDC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,SAKrC9I,IAAfiI,QAA2CjI,IAAfkI,IAC5BH,EAAgBT,GAA4BW,GAC5CD,EAAgBV,GAA4BY,GAC5CI,EAAO3J,QAAUsJ,EAAWtJ,QAC5BoK,EAAOpK,QAAUuJ,EAAWvJ,SAEhC,QAAmBqB,IAAfmI,EAA0B,CAC1B,IAAIe,GAASnM,EAAGoL,EAAWrG,QAAS9E,EAAGmL,EAAWpG,SAClDuG,EAAOE,UAAYnB,GAAiB6B,EAAMnB,EAAeE,EAAWV,QAAQ,GAEhF,QAAmBvH,IAAfoI,EAA0B,CAC1B,IAAIe,GAAcpM,EAAGqL,EAAWtG,QAAS9E,EAAGoL,EAAWrG,SACvDgH,EAAOP,UAAYnB,GAAiB8B,EAAWnB,EAAeE,EAAWX,QAAQ,GAErF,QAAmBvH,IAAfiI,QAA2CjI,IAAfkI,EA+C5B,YA9CyBlI,IAArBsI,EAAOE,gBAAgDxI,IAArB+I,EAAOP,YACrC5B,EApDhB,SAAsB0B,EAAQS,EAAQnC,GACR,gBAAtBA,GACA0B,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,QACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,QAE9B,gBAAtB5B,GACL0B,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,OACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,SAE9B,gBAAtB5B,GACL0B,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,SACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,OAE9B,gBAAtB5B,IACL0B,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,MACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,UAsCjDY,CAAad,EAAQS,EAAQnC,GAGzB0B,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,QACpCrG,KAAK6G,IAAIf,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,QACxCP,EAAOI,OAAOI,IAAMR,EAAOI,OAAOG,QACvCP,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,MACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,UAEpDF,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,KAC5CtG,KAAK6G,IAAIf,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,KAC3CR,EAAOI,OAAOG,OAASP,EAAOI,OAAOI,KAC1CR,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,SACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,OAEnDF,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAC5CnG,KAAK6G,IAAIf,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAC1CL,EAAOI,OAAOE,MAAQN,EAAOI,OAAOC,MACvCL,EAAO3J,QAAQiK,MA1ClB,GA0CqCG,EAAOpK,QAAQgK,MAC9CI,EAAOpK,QAAQiK,OAASN,EAAO3J,QAAQgK,KA3C7C,IA2CgEL,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,MACpGL,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,QACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,QAEnDF,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,OAC3CpG,KAAK6G,IAAIf,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,OAAUN,EAAOI,OAAOC,KAAOL,EAAOI,OAAOE,OACzFG,EAAOpK,QAAQiK,MAjDlB,GAiDqCN,EAAO3J,QAAQgK,MAC9CL,EAAO3J,QAAQiK,OAASG,EAAOpK,QAAQgK,KAlD7C,IAmDYL,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,MAChDL,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,OACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,SAGrDP,EAAWrC,KAAOsC,EAAWtC,KAAQmC,EAAcuB,OAAOvB,EAAeC,IACzEA,EAAcuB,cAAcxB,EAAcyB,UAAWlB,EAAOI,OAAOI,MACnER,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,SACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,QAGzDF,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,MACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,WAkoBjF,SAAgCiB,EAAKhB,EAAQQ,EAAQS,EAAKC,GACtD,IAKIC,EALAC,EAAYJ,EAAI1C,cAChB+C,EAAYL,EAAIhC,cAChBN,EAAUsC,EAAIvC,kBACd6C,EAAUN,EAAIpB,kBACdxB,KAGAmD,EAASH,EAAUlL,QACnBsL,EAASH,EAAUnL,QAKnB2J,GAJQ2B,EAAOjD,QAIJrI,QAASqL,EAAQtI,MAAOgI,EAAKlB,UAAWC,EAAQC,QAF1CC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,KAGpDC,GAAWpK,QAASsL,EAAQvI,MAAOiI,EAAKnB,UAAWS,EAAQP,QAF1CC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,IAGpDoB,EAAYC,EAAWN,EAAWG,EAAQP,EAAI1C,cAAcQ,QAC5D6C,EAAYD,EAAWL,EAAWG,EAAQR,EAAIhC,cAAcF,QAC5D8C,GAAc,EACdZ,EAAI1C,eAAiB0C,EAAIhC,gBACzB4C,EA3FR,SAAuCtD,EAAeU,EAAe6C,GAGjE,IAAK,IAFDC,EAAgBC,EAAyBzD,EAAeuD,EAAUG,eAClEC,EAAgBF,EAAyB/C,EAAe6C,EAAUK,eAC7DlO,EAAI,EAAGA,EAAI8N,EAAc/N,OAAS,EAAGC,IAE1C,IAAK,IADDmO,EAAaL,EAAc9N,GACtBL,EAAI,EAAGA,EAAIsO,EAAclO,OAAS,EAAGJ,IAAK,CAC/C,IAAIyO,EAAYH,EAActO,GAC9B,GAAI0O,GAAWF,EAAYC,GAAWE,QAClC,OAAO,EAInB,OAAO,EA+EWC,CAA8BvB,EAAI1C,cAAe0C,EAAIhC,cAAegC,IAEtF,QAAgBzJ,IAAZmH,EAAuB,CAEvB,OADAmB,EAAO5G,OAAU3E,EAAGoK,EAAQrF,QAAS9E,EAAGmK,EAAQpF,SACxCuG,EAAOE,WACX,IAAK,SACL,IAAK,MACDF,EAAO5G,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAC9B,MACJ,IAAK,OACL,IAAK,QACDsL,EAAO5G,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EAGlC0M,EAAIgB,gBAAkBJ,IAClBN,IACAhB,EAAOrH,OACH3E,EAAGgN,EAAQjI,QACX9E,EAAG+M,EAAQhI,UAGnBuG,EAAO5G,MAAQuJ,EAAsBxB,EAAKnB,EAAQS,GAAQ,QAI7C,eAAbU,EAAI7H,MACA6H,EAAIvK,UAAYuK,EAAIvK,SAAS1C,OAAS,GAAKiN,EAAIvK,SAAS,GAAGsJ,YAC3DF,EAAOE,UAAYiB,EAAIvK,SAAS,GAAGsJ,WAEvCF,EAAO5G,MAAQwJ,GAAUhB,EAAW5B,EAAOE,WAC3CoB,EAAWsB,GAAUhB,EAAWiB,GAAqB7C,EAAOE,YAC5DF,EAAO5G,MAAQkG,GAAgB6B,EAAKI,EAAWvB,EAAO5G,MAAOkI,GAAU,IAGvEtB,EAAO5G,MAAQmI,EAAUlL,QAAQqI,OAGzC,QAAgBhH,IAAZ+J,EAAuB,CAKvB,OAJAhB,EAAOrH,OACH3E,EAAGgN,EAAQjI,QACX9E,EAAG+M,EAAQhI,SAEPgH,EAAOP,WACX,IAAK,SACL,IAAK,MACDO,EAAOrH,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC9B,MACJ,IAAK,OACL,IAAK,QACD+L,EAAOrH,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAGlC0M,EAAIkB,gBAAkBN,IACtBtB,EAAOrH,MAAQuJ,EAAsBxB,EAAKnB,EAAQS,GAAQ,QAI7C,eAAbU,EAAI7H,MACJmH,EAAOrH,MAAQwJ,GAAUd,EAAWrB,EAAOP,WAC3CoB,EAAWsB,GAAUd,EAAWe,GAAqBpC,EAAOP,YAC5DO,EAAOrH,MAAQkG,GAAgB6B,EAAKK,EAAWf,EAAOrH,MAAOkI,GAAU,IAGvEb,EAAOrH,MAAQoI,EAAUnL,QAAQqI,OAGzC,GAAiB,eAAbyC,EAAI7H,KAAuB,CAC3B,IAAIvB,OAAU,EACV+K,OAAQ,EAEZ,GADAC,EAA2B5B,QACGzJ,IAA1ByJ,EAAIvC,kBAAiC,CACrCoB,EAAO5G,MAAQ4G,EAAO3J,QAAQqI,OAC1ByC,EAAIvK,UAAYuK,EAAIvK,SAAS1C,OAAS,IACtC4O,EAAQ3B,EAAIvK,SAAS,GACrBmB,EAAYiL,GAAMC,aAAaH,EAAM1J,YAAkB1B,EAARoL,GAEnD,IAAItD,OAAwB9H,IAAZK,EAAyBA,EAAQqB,MAAQqH,EAAOrH,MAChE,GAAiB,WAAb+H,EAAI7H,MAAqB6H,EAAIvK,SAAS1C,OAAS,GAC/CiN,EAAIvK,SAAS,GAAGsM,QAAQjO,OAASkM,EAAIvK,SAAS,GAAGsM,QAAQC,SAAU,CACnE,IAAIC,EAAQlJ,KAAKmJ,IAAIrD,EAAO3J,QAAQL,MAAOgK,EAAO3J,QAAQN,QAC1DyJ,EAAWwD,GAAMM,UAAUtD,EAAO5G,MAAO+H,EAAIvK,SAAS,GAAGsM,QAAQjO,MAAOmO,EAAQ,GAEpFpD,EAAO5G,MAAQ2I,EAAcZ,EAAI1C,cAAcQ,OAAOP,OAASY,GAAgB6B,EAAKI,EAAWvB,EAAO5G,MAAOoG,GAAU,GAE3H,QAA8B9H,IAA1ByJ,EAAIpB,kBAAiC,CACrCU,EAAOrH,MAAQqH,EAAOpK,QAAQqI,OAC1ByC,EAAIvK,UAAYuK,EAAIvK,SAAS1C,OAAS,IACtC4O,EAAQ3B,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAC3C6D,EAAYiL,GAAMC,aAAaH,EAAM1J,YAAkB1B,EAARoL,GAEnD,IAAInE,EAAW,EAAY5G,EAAQqB,MAAQ4G,EAAO5G,MAClD,GAAiB,WAAb+H,EAAI7H,MAAqB6H,EAAIvK,SAAS1C,OAAS,GAC/CiN,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAAGqP,QAAQtO,OAC9CkM,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAAGqP,QAAQJ,SAAU,CACxD,IAAIC,EAAQlJ,KAAKmJ,IAAIrD,EAAO3J,QAAQL,MAAOgK,EAAO3J,QAAQN,QAC1D4I,EAAWqE,GAAMM,UAAU7C,EAAOrH,MAAO+H,EAAIvK,SAAS,GAAG2M,QAAQtO,MAAOmO,EAAQ,GAEpF3C,EAAOrH,MAAQ2I,EAAcZ,EAAIhC,cAAcF,OAAOP,OAASY,GAAgB6B,EAAKK,EAAW7C,EAAU8B,EAAOrH,OAAO,GAE3HmF,EAAsBiF,EAA+BrC,EAAKnB,EAAQS,QAGlE,GAAiB,eAAbU,EAAI7H,MAA0B6H,EAAIvK,UAAYuK,EAAIvK,SAAS1C,OAAS,GACtC,OAA9BiN,EAAIvK,SAAS,GAAGsJ,UAChB3B,EAqLZ,SAAiC4C,EAAKnB,EAAQS,EAAQ5B,EAAS4C,EAASF,EAAWC,GAC/E,IAAIpI,EAEA5C,EACA1C,EACA2P,EACJV,EAA2B5B,GAC3B,IAAK,IAAIhN,EAAI,EAAGA,EAAIgN,EAAIvK,SAAS1C,OAAQC,IAAK,CAK1C,GAJAqC,EAAM2K,EAAIvK,SAASzC,GACf0K,GAAWmB,EAAOE,YAAc2C,GAAqBrM,EAAI0J,aACzD1J,EAAI0J,UAAYF,EAAOE,WAEvB/L,EAAI,GAAKgN,EAAIvK,SAASzC,EAAI,GAAG+L,YAAc1J,EAAI0J,UAC/C/L,EAAIuP,EAA6BvC,EAAKhN,EAAG6L,QAGzC,GAAIxJ,EAAI0J,UACJF,EAAO5G,MAAQuK,EAAoB3D,EAAQmB,EAAIvK,SAASzC,QAEvD,CACD,IAAI4D,EAAUoJ,EAAIvK,SAASzC,EAAI,GAC/B6L,EAAO5G,MAAQrB,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAG9D,GAAIC,IAAMgN,EAAIvK,SAAS1C,OAAS,EAU5B,GATA0P,EAAyBzC,EAAKnB,GAE1B5G,OADY1B,IAAZ+J,EACQoC,EAAiB1C,EAAKnB,EAAQS,GAG9BqD,EAAY3C,EAAKnB,EAAQS,GAErCsD,EAAqB3K,EAAO+H,EAAKnB,GACjCxJ,EAAIJ,UACAgD,EAAMlF,QAAU,EAChB,IAAKJ,EAAI,EAAGA,EAAIsF,EAAMlF,OAAQJ,IAC1B0C,EAAIJ,OAAO7B,KAAK6E,EAAMtF,SAI1B2P,EAAgBtP,EAUxB,QAPsBuD,IAAlB+L,IACIA,IAAkBtC,EAAIvK,SAAS1C,OAAS,IACxCiN,EAAIvK,SAAS6M,EAAgB,GAAGvD,UAAY,KAC5CiB,EAAIvK,SAAS6M,EAAgB,GAAGvP,OAAS,MAE7CiN,EAAIvK,SAASoN,OAAOP,EAAe,IAEnC5E,GAAiB,IAAN1K,EAAS,CACpB,IAAIqK,EAAcyF,EAAmB9C,EAAKtC,EAAS0C,GAC/C/C,IACAwB,EAAO5G,MAAQoF,IAI3B,OAAO0F,EAA0B/C,MA9OHgD,CAAwBhD,EAAKnB,EAAQS,EAAQ5B,EAAS4C,EAASF,OAEpF,CACD,IAAKJ,EAAIvK,SAAS,GAAI,CAClB,IAAImB,EAAU,IAAIqM,GAAkBjD,EAAK,YAAc7H,KAAM,eAAgB,GAC7E6H,EAAIvK,SAASrC,KAAKwD,GAEtBoJ,EAAIvK,SAAS,GAAGR,OAASmI,EAwSrC,SAA2B4C,EAAKnB,EAAQS,EAAQ4D,GAC5C,IAEI7N,EAFA8N,GAAO,GAGXA,EAgzCJ,SAAqBnE,EAAQQ,GACzB,IAAI2D,GAAO,EACX,OAAQnE,GACJ,IAAK,OACD,OAAQQ,GACJ,IAAK,QACL,IAAK,SACD2D,GAAO,EAGf,MACJ,IAAK,MACD,OAAQ3D,GACJ,IAAK,OACL,IAAK,QACL,IAAK,SACD2D,GAAO,EAGf,MACJ,IAAK,SACD,OAAQ3D,GACJ,IAAK,QACD2D,GAAO,GAKvB,OAAOA,EA50CAC,CAAYvE,EAAOE,UAAWO,EAAOP,aAExCsE,GAAWxE,EAAQS,GAEE,UAArBT,EAAOE,WAA8C,SAArBO,EAAOP,UACvC1J,EAiUR,SAAoC6G,EAAS2C,EAAQS,EAAQ6D,GACzD,IAEIG,EAFA5F,EAAUxB,EAAQuB,kBAGlB8F,GAFarH,EAAQ0C,kBAEb7F,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,KAE1D4L,GADQpG,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,KAChDA,EAAGyF,KAAKmJ,IAAIrD,EAAO5G,MAAM3E,EAAGuL,EAAO3J,QAAQiK,OAAQ5L,EAAGsL,EAAO5G,MAAM1E,IAC7E2L,GAAS5L,EAAGyF,KAAKyK,IAAIlE,EAAOrH,MAAM3E,EAAGgM,EAAOpK,QAAQgK,MAAO3L,EAAG+L,EAAOrH,MAAM1E,GAC3E0L,EAAS,GACb,GAAIkE,EAAM,CACN,IAAIlL,OAAQ,EACZA,EAAQiH,EACRA,EAAOC,EACPA,EAAQlH,EAEN4G,EAAO3J,QAAQkK,OAASH,EAASK,EAAOpK,QAAQmK,IAAMJ,GACxDJ,EAAO3J,QAAQmK,IAAMJ,EAASK,EAAOpK,QAAQkK,OAASH,IACtDA,EAAS,GAEbJ,EAAOI,QAAWC,KAAMD,EAAQE,MAAOF,EAAQI,IAAKJ,EAAQG,OAAQH,GACpEK,EAAOL,QAAWC,KAAMD,EAAQE,MAAOF,EAAQI,IAAKJ,EAAQG,OAAQH,GAGhEqE,EAFU,IAAVC,IAAgB1E,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAClDiE,GAAQtE,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAC5CuE,eAAaC,IAEd7E,EAAO5G,MAAM3E,EAAIuL,EAAOI,OAAOE,MAAQG,EAAOrH,MAAM3E,EAAIgM,EAAOL,OAAOC,KACrEuE,eAAaE,MAEdzH,EAAQoB,gBAAkBpB,EAAQ8B,gBACtCH,GAA4B3B,EAAQoB,eAAewC,cAAcZ,IAC9DrB,GAA4B3B,EAAQ8B,eAAe8B,cAAcX,IAC/DsE,eAAaE,MAEd9E,EAAO3J,QAAQkK,QAAUE,EAAOpK,QAAQmK,IACvCoE,eAAaG,KAEd/E,EAAO3J,QAAQmK,KAAOC,EAAOpK,QAAQmK,IACpCoE,eAAaG,UAEDrN,IAAZmH,GAAyBA,EAAQpF,SAAWgH,EAAOpK,QAAQmK,UACpD9I,IAAZmH,GAAyBmB,EAAO3J,QAAQiK,OAASG,EAAOpK,QAAQmK,IAC3DoE,eAAaG,WAEDrN,IAAZmH,GAAyBA,EAAQpF,SAAWgH,EAAOpK,QAAQkK,aACpD7I,IAAZmH,IAAyBmB,EAAO3J,QAAQiK,MAASG,EAAOpK,QAAQkK,QAC3DqE,eAAaG,MAKvB,OAAON,EAnXGO,CAA2B7D,EAAKnB,EAAQS,EAAQ6D,GAE5B,UAArBtE,EAAOE,WAA8C,UAArBO,EAAOP,UAC5C1J,EAkXR,SAAqC6G,EAAS4H,EAAWC,GACrD,IAEIT,EAFA5E,EAAaxC,EAAQuB,kBACrB6C,EAAUpE,EAAQ0C,kBAElBoF,EAAQF,EAAU7L,MAAM3E,EAAIyQ,EAAU9L,MAAM3E,EAC5CiQ,EAAQO,EAAU7L,MAAM1E,EAAIwQ,EAAU9L,MAAM1E,EAChDwQ,EAAU9E,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAC3D0E,EAAU7E,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAKnDkE,EAJJQ,EAAU5O,QAAQiK,OAAS4E,EAAU7O,QAAQiK,WACzB5I,IAAfmI,IAA6BA,EAAWpG,QAAUyL,EAAU7O,QAAQmK,KACrEX,EAAWpG,QAAUyL,EAAU7O,QAAQkK,cACvB7I,IAAfmI,GAA4BoF,EAAU5O,QAAQ+O,YAAY1Q,EAAIwQ,EAAU7O,QAAQmK,IAC3EoE,eAAaE,WAEEpN,IAAfmI,GAA4BA,EAAWpG,QAAUyL,EAAU7O,QAAQkK,OAAS2E,EAAU9E,OAAOG,QAChG0E,EAAU5O,QAAQmK,IAAM0E,EAAU7O,QAAQkK,aAC7B7I,IAAfmI,GAA4BoF,EAAU5O,QAAQ+O,YAAY1Q,EAAIwQ,EAAU7O,QAAQkK,OAC3EqE,eAAaE,WAEEpN,IAAfmI,GAA4BA,EAAWpG,QAAUyL,EAAU7O,QAAQmK,KACtEyE,EAAU5O,QAAQkK,OAAS2E,EAAU7O,QAAQmK,UAChC9I,IAAfmI,GAA4BoF,EAAU5O,QAAQ+O,YAAY1Q,EAAIwQ,EAAU7O,QAAQkK,OAC3EqE,eAAaE,MAEdG,EAAU5O,QAAQiK,MAAQ4E,EAAU7O,QAAQgK,MACjD6E,EAAU7O,QAAQiK,MAAQ2E,EAAU5O,QAAQgK,KACtCuE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,WAGLpN,IAAZ+J,GAAyBwD,EAAU5O,QAAQkK,OAASkB,EAAQhI,cACrD/B,IAAZ+J,GAAyBwD,EAAU5O,QAAQkK,OAAS2E,EAAU7O,QAAQ+O,YAAY1Q,EAC7EkQ,eAAaE,WAEDpN,IAAZ+J,GAAyBwD,EAAU5O,QAAQmK,IAAMiB,EAAQhI,cAClD/B,IAAZ+J,GAAyBwD,EAAU5O,QAAQmK,IAAM0E,EAAU7O,QAAQ+O,YAAY1Q,EAC1EkQ,eAAaE,WAEDpN,IAAZ+J,SAA0C/J,IAAfmI,GAA4BA,EAAWrG,QAAU0L,EAAU7O,QAAQgK,MACpGR,EAAWrG,UAAYiI,EAAQjI,SAAWqG,EAAWpG,UAAYgI,EAAQhI,SACxES,KAAK6G,IAAIkE,EAAU5O,QAAQiK,MAAQ4E,EAAU7O,QAAQgK,OAAS,SAC/C3I,IAAfmI,GAA4BoF,EAAU5O,QAAQiK,MAAQ4E,EAAU7O,QAAQgK,MACrE4E,EAAU5O,QAAQqI,OAAOjK,IAAMyQ,EAAU7O,QAAQqI,OAAOjK,GAAKwQ,EAAU5O,QAAQqI,OAAOhK,IAAMwQ,EAAU7O,QAAQqI,OAAOhK,GACnHkQ,eAAaE,MAEdG,EAAU5O,QAAQiK,MAAQ4E,EAAU7O,QAAQgK,KAC3CuE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,MAEvB,OAAOL,EA7aGY,CAA4BlE,EAAKnB,EAAQS,GAErB,UAArBT,EAAOE,WAA8C,QAArBO,EAAOP,UAC5C1J,EA4aR,SAAmC6G,EAAS2C,EAAQS,EAAQ6D,GACxD,IAIIG,EAJAhD,EAAUpE,EAAQ0C,kBAClBlB,EAAUxB,EAAQuB,kBAClB0B,GAAU7L,EAAGyF,KAAKmJ,IAAIrD,EAAO5G,MAAM3E,EAAGuL,EAAO3J,QAAQiK,OAAQ5L,EAAGsL,EAAO5G,MAAM1E,GAC7E8L,GAAQ/L,EAAGgM,EAAOrH,MAAM3E,EAAGC,EAAGwF,KAAKyK,IAAIlE,EAAOrH,MAAM1E,EAAG+L,EAAOpK,QAAQmK,MAI1E,GAFAC,EAAOL,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GACrDP,EAAOI,QAAWI,IAAK,EAAGD,OAAQ,EAAGF,KAAM,EAAGC,MAAO,GACjDgE,EAAM,CACN,IAAI1D,OAAO,EACXA,EAAO/B,EACPA,EAAU4C,EACVA,EAAUb,EAOF6D,OALK/M,IAAZmH,GAAyBA,EAAQpF,QAAUgH,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,UAClE9I,IAAZmH,GAAyBmB,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,IACjFR,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,SACtB9I,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQmB,EAAQjI,cAClE9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQG,EAAOpK,QAAQ6K,UAAUzM,EAC1FmQ,eAAaU,IAGbV,eAAaW,UAGL7N,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOoB,EAAQjI,cAChD9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQ6K,UAAUzM,EACnEmQ,eAAaW,KAGbX,eAAaU,SAGN5N,IAAZmH,GAAyB3E,KAAK6G,IAAIf,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,OAAS,IACtFnG,KAAK6G,IAAIlC,EAAQpF,QAAUgH,EAAOpK,QAAQmK,MAAQ,GAC5CoE,eAAaU,SAEF5N,IAAZ+J,GAAyBvH,KAAK6G,IAAIU,EAAQjI,QAAUwG,EAAO3J,QAAQ6K,UAAUzM,IAAM,IACxFuL,EAAO3J,QAAQ+O,YAAY1Q,EAAI+M,EAAQhI,QACjCmL,eAAaU,IAEdtF,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,KACrCuE,eAAaW,KAEdlI,EAAQoB,gBAAkBpB,EAAQ8B,gBACtCH,GAA4B3B,EAAQoB,eAAewC,cAAcT,IAC9DxB,GAA4B3B,EAAQ8B,eAAe8B,cAAcX,IAC/DsE,eAAaU,IAGbV,eAAaW,KAEvB,OAAOd,EAheGe,CAA0BrE,EAAKnB,EAAQS,EAAQ6D,GAE3B,UAArBtE,EAAOE,WAA8C,WAArBO,EAAOP,UAC5C1J,EA+dR,SAAsC6G,EAAS2C,EAAQS,EAAQ6D,GAC3DtE,EAAOI,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxDE,EAAOL,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxD,IAAIkE,EACA5F,EAAUxB,EAAQuB,kBAClB6C,EAAUpE,EAAQ0C,kBACL7F,KAAKmJ,IAAIrD,EAAO5G,MAAM3E,EAAGuL,EAAO3J,QAAQiK,OAAWN,EAAO5G,MAAM1E,EAC/D+L,EAAOrH,MAAM3E,EAAMyF,KAAKmJ,IAAI5C,EAAOrH,MAAM1E,EAAG+L,EAAOpK,QAAQkK,QAC7E,GAAI+D,EAAM,CACN,IAAI1D,OAAO,EACXA,EAAO/B,EACPA,EAAU4C,EACVA,EAAUb,EAOF6D,OALK/M,IAAZmH,GAAyBA,EAAQpF,QAAUgH,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,aACrE7I,IAAZmH,GAAyBmB,EAAO3J,QAAQ+O,YAAY1Q,EAAI+L,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,OAC3FP,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,YACnB7I,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQmB,EAAQjI,cAClE9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQG,EAAOpK,QAAQoP,aAAahR,EAC7FmQ,eAAaU,IAGbV,eAAaW,UAGL7N,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOoB,EAAQjI,cAChD9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQoP,aAAahR,EACtEmQ,eAAaW,KAGbX,eAAaU,SAGN5N,IAAZmH,GACL3E,KAAK6G,IAAIf,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,OAAS,IACxDnG,KAAK6G,IAAIlC,EAAQpF,QAAUgH,EAAOpK,QAAQkK,SAAW,GAC/CqE,eAAaU,KAEdtF,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,KACrCuE,eAAaW,MAKvB,OAAOd,EA3gBGiB,CAA6BvE,EAAKnB,EAAQS,EAAQ6D,GAE9B,WAArBtE,EAAOE,WAA+C,QAArBO,EAAOP,UAC7C1J,EA0gBR,SAAoCwJ,EAAQS,GACxC,IAAIgE,EACAU,EAAQnF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAItC2L,GAHQJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EACxBsL,EAAO5G,MAAM3E,EAAMyF,KAAKmJ,IAAIrD,EAAO5G,MAAM1E,EAAGsL,EAAO3J,QAAQkK,QAC9DE,EAAOrH,MAAM3E,EAAMyF,KAAKyK,IAAIlE,EAAOrH,MAAM1E,EAAG+L,EAAOpK,QAAQmK,KAC7D,IACPR,EAAO3J,QAAQiK,MAAQF,EAASK,EAAOpK,QAAQgK,KAAOD,GACxDJ,EAAO3J,QAAQgK,KAAOD,EAASK,EAAOpK,QAAQiK,MAAQF,IACtDA,EAAS,GAEbJ,EAAOI,QAAWC,KAAMD,EAAQE,MAAOF,EAAQI,IAAKJ,EAAQG,OAAQH,GACpEK,EAAOL,QAAWC,KAAMD,EAAQE,MAAOF,EAAQI,IAAKJ,EAAQG,OAAQH,GAEhEqE,EADU,IAAVU,GAAenF,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IAChDoE,eAAaC,IAEd7E,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASE,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,IACjFoE,eAAaE,MAEd9E,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQG,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,KAChFuE,eAAaG,MAEd/E,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAAOI,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,MAC/EsE,eAAaG,MAKvB,OAAON,EAtiBGkB,CAA2B3F,EAAQS,GAEf,WAArBT,EAAOE,WAA+C,WAArBO,EAAOP,WAC7CF,EAAOI,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxDE,EAAOL,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxD/J,EA4kBR,SAAuC6G,EAAS2C,EAAQS,GACpD,IAIIgE,EAJA5F,EAAUxB,EAAQuB,kBAClB6C,EAAUpE,EAAQ0C,kBAClB6F,EAAO1L,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IACzDiQ,EAAQxK,KAAKC,MAAMD,KAAK6G,IAAIN,EAAOrH,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IAKtD+P,EAHJzE,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQkK,YACtB7I,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,WACnE3I,IAAZmH,GAAyBmB,EAAO3J,QAAQoP,aAAahR,EAAIgM,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,KACxFuE,eAAaE,WAEDpN,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,YACzE5I,IAAZmH,GAAyBmB,EAAO3J,QAAQoP,aAAahR,EAAIgM,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,MACzFsE,eAAaE,MAEd9E,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IACtCoE,eAAaG,KAEL,IAATa,GAAwB,IAAVlB,EACbE,eAAaC,IAGbD,eAAaE,WAGLpN,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOoB,EAAQjI,cAChD9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,KACzDuE,eAAaE,WAEDpN,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQmB,EAAQjI,cACjD9B,IAAZ+J,GACGzB,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQiK,MACpCsE,eAAaE,MAEd9E,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,OACnCqE,eAAaG,KAEL,IAATa,GAAwB,IAAVlB,EACbE,eAAaC,IAGbD,eAAaE,MAEvB,OAAOL,EAvnBGoB,CAA8B1E,EAAKnB,EAAQS,IAEvB,WAArBT,EAAOE,WAA+C,SAArBO,EAAOP,UAC7C1J,EAgiBR,SAAqC6G,EAAS2C,EAAQS,EAAQ6D,GAC1D,IAIIG,EAJA5F,EAAUxB,EAAQuB,kBAClB6C,EAAUpE,EAAQ0C,kBACJC,EAAO5G,MAAM3E,EAAMyF,KAAKmJ,IAAIrD,EAAO5G,MAAM1E,EAAGsL,EAAO3J,QAAQkK,QAC7DrG,KAAKyK,IAAIlE,EAAOrH,MAAM3E,EAAGgM,EAAOpK,QAAQgK,MAAUI,EAAOrH,MAAM1E,EAE/E,GAAI4P,EAAM,CACN,IAAI1D,OAAO,EACXA,EAAO/B,EACPA,EAAU4C,EACVA,EAAUb,EAOF6D,OALK/M,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,WACnE3I,IAAZmH,GAAyBmB,EAAO3J,QAAQoP,aAAahR,EAAIgM,EAAOpK,QAAQyP,WAAWrR,EAAIgM,EAAOL,OAAOC,KAClGL,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,UACrB3I,IAAZ+J,GAAyBzB,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASkB,EAAQhI,cACpE/B,IAAZ+J,GAAyBzB,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASE,EAAOpK,QAAQ0P,WAAWrR,EAC7FkQ,eAAaU,IAGbV,eAAaW,UAGL7N,IAAZ+J,GAAyBzB,EAAO3J,QAAQmK,IAAMiB,EAAQhI,cAC/C/B,IAAZ+J,GAAyBzB,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQ0P,WAAWrR,EACnEkQ,eAAaW,KAGbX,eAAaU,SAGN5N,IAAZ+J,GACLvH,KAAK6G,IAAIf,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,OAAS,IACxDnG,KAAK6G,IAAIU,EAAQhI,QAAUuG,EAAO3J,QAAQkK,SAAW,GAC/CqE,eAAaU,IAGbV,eAAaW,KAEvB,OAAOd,EAvkBGuB,CAA4B7E,EAAKnB,EAAQS,EAAQ6D,GAE7B,SAArBtE,EAAOE,WAA6C,SAArBO,EAAOP,UAC3C1J,EAqqBR,SAAmC6G,EAAS2C,EAAQS,GAChD,IAAI5B,EAAUxB,EAAQuB,kBAClBkB,EAAazC,EAAQ0C,kBACzBC,EAAOI,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxDE,EAAOL,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxD,IAEIkE,EAFAU,EAAQjL,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAC1DiQ,EAAQxK,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IAKtD+P,EAHJzE,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,UACjB3I,IAAfoI,GAA4BE,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAAST,EAAWrG,cACvE/B,IAAfoI,GAA4BE,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASE,EAAOpK,QAAQ0P,WAAWrR,EAChGkQ,eAAaE,WAEEpN,IAAfoI,GAA4BE,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,IAAMV,EAAWrG,cACtE/B,IAAfoI,GAA4BE,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,IAAMC,EAAOpK,QAAQ0P,WAAWrR,EAC1FkQ,eAAaE,MAEd9E,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAC3CI,EAAOpK,QAAQiK,MAAQN,EAAO3J,QAAQgK,KAChCuE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,WAGLpN,IAAZmH,GAAyBA,EAAQpF,QAAUgH,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,UACvE9I,IAAZmH,GAAyBmB,EAAO3J,QAAQ0P,WAAWrR,EAAI+L,EAAOpK,QAAQmK,IACjEoE,eAAaE,WAEDpN,IAAZmH,GAAyBA,EAAQpF,QAAUgH,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,aAC1E7I,IAAZmH,GAAyBmB,EAAO3J,QAAQ0P,WAAWrR,EAAI+L,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,OACxFqE,eAAaE,MAEd9E,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,MACpCsE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,MAEvB,OAAOL,EAltBGwB,CAA0B9E,EAAKnB,EAAQS,GAEnB,SAArBT,EAAOE,WAA6C,QAArBO,EAAOP,UAC3C1J,EAgnBR,SAAkC6G,EAAS2C,EAAQS,EAAQ6D,GACvD,IAAIG,EACA5E,EAAaxC,EAAQuB,kBACrB6C,EAAUpE,EAAQ0C,kBAClBM,GAAS5L,EAAGyF,KAAKyK,IAAI3E,EAAO5G,MAAM3E,EAAGuL,EAAO3J,QAAQgK,MAAO3L,EAAGsL,EAAO5G,MAAM1E,GAC3E8L,GAAQ/L,EAAGgM,EAAOrH,MAAM3E,EAAGC,EAAGwF,KAAKyK,IAAIlE,EAAOrH,MAAM1E,EAAG+L,EAAOpK,QAAQmK,MAC1E,GAAI8D,EAAM,CACN,IAAI1D,OAAO,EACXA,EAAOf,EACPA,EAAa4B,EACbA,EAAUb,EAQF6D,OANQ/M,IAAfmI,GAA4BA,EAAWpG,QAAUgH,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,UACrE9I,IAAfmI,IAA6BG,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,KACrFR,EAAO3J,QAAQ0P,WAAWrR,EAAI+L,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,KACjER,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,SACtB9I,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAAOoB,EAAQjI,cAChE9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAAOI,EAAOpK,QAAQ6K,UAAUzM,EACxFmQ,eAAaU,IAGbV,eAAaW,UAGL7N,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQmB,EAAQjI,cACjD9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQ6K,UAAUzM,EACpEmQ,eAAaW,KAGbX,eAAaU,SAGH5N,IAAfmI,GACL3F,KAAK6G,IAAIf,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,QAAU,IACxDpG,KAAK6G,IAAIlB,EAAWpG,QAAUgH,EAAOpK,QAAQmK,MAAQ,GAC/CoE,eAAaU,IAEdjI,EAAQoB,gBAAkBpB,EAAQ8B,gBACtCH,GAA4B3B,EAAQoB,eAAewC,cAAcT,IAC9DxB,GAA4B3B,EAAQ8B,eAAe8B,cAAcZ,IAC/DuE,eAAaU,KAEdtF,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,MACpCsE,eAAaW,MAKvB,OAAOd,EAhqBGyB,CAAyB/E,EAAKnB,EAAQS,EAAQ6D,GAE1B,QAArBtE,EAAOE,WAA4C,QAArBO,EAAOP,YAC1C1J,EA8sBR,SAAiC6G,EAAS2C,EAAQS,GAC9C,IAAI5B,EAAUxB,EAAQuB,kBAClBkB,EAAazC,EAAQ0C,kBACrBoF,EAAQjL,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAC1DiQ,EAAQxK,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IAC9DsL,EAAOI,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxD,IAAIkE,EACJhE,EAAOL,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAIhDkE,EAHJzE,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQmK,SAChB9I,IAAfoI,GAA4BE,EAAO3J,QAAQgK,KAAOP,EAAWtG,cAC9C9B,IAAfoI,GAA4BE,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,KAC5DuE,eAAaE,WAEEpN,IAAfoI,GAA4BE,EAAO3J,QAAQiK,MAAQR,EAAWtG,cACpD9B,IAAfoI,GAA4BE,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQiK,MAC7DsE,eAAaE,MAEd9E,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IACtCoE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,WAGLpN,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQiK,YACnD5I,IAAZmH,GAAyBmB,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,MACzDsE,eAAaE,WAEDpN,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQgK,WACnD3I,IAAZmH,GAAyBmB,EAAO3J,QAAQ8P,YAAY1R,EAAIgM,EAAOpK,QAAQgK,KAClEuE,eAAaE,MAEd9E,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,OACnCqE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,MAEvB,OAAOL,EA1vBG2B,CAAwBjF,EAAKnB,EAAQS,IAE3C6D,GACAE,GAAWxE,EAAQS,GAGvB,OAsvBJ,SAA0BpD,EAAS7G,EAAKwJ,EAAQS,EAAQ4F,GACpD,IAGI9H,EAHA+H,EAAMjJ,EAAQoB,cACd8H,EAAMlJ,EAAQ8B,cAGdc,GAFU5C,EAAQ0C,kBAENuG,EAAIjQ,SAChBqK,EAAY6F,EAAIlQ,QAChBgO,EAAQ,GACZ,KAAIrE,EAAOE,YAAcO,EAAOP,WAAa1J,IAAQoO,eAAaG,MAC1D/E,EAAOE,YAAc2C,GAAqBpC,EAAOP,YAAc1J,IAAQoO,eAAaE,OACpF,OAAQ9E,EAAOE,WACX,IAAK,OACGD,EAAU8F,WAAWtR,EAAIiM,EAAU0E,YAAY3Q,IAC/C4P,EAAQnK,KAAKyK,IAAIN,GAAQpE,EAAU8F,WAAWtR,EAAIiM,EAAU0E,YAAY3Q,GAAK,IAEjF,MACJ,IAAK,QACGwL,EAAUmF,YAAY3Q,EAAIiM,EAAUqF,WAAWtR,IAC/C4P,EAAQnK,KAAKyK,IAAIN,GAAQ3D,EAAUqF,WAAWtR,EAAIwL,EAAUmF,YAAY3Q,GAAK,IAEjF,MACJ,IAAK,MACGwL,EAAUiB,UAAUxM,EAAIgM,EAAU+E,aAAa/Q,IAC/C2P,EAAQnK,KAAKyK,IAAIN,GAAQpE,EAAUiB,UAAUxM,EAAIgM,EAAU+E,aAAa/Q,GAAK,IAEjF,MACJ,IAAK,SACGuL,EAAUwF,aAAa/Q,EAAIgM,EAAUQ,UAAUxM,IAC/C2P,EAAQnK,KAAKyK,IAAIN,GAAQ3D,EAAUQ,UAAUxM,EAAIuL,EAAUwF,aAAa/Q,GAAK,IAmBjG,GAbA2P,EAAQmC,GAAoBvG,EAAWD,EAAQqE,GAC3CgC,IACAhC,EAAQnK,KAAKmJ,IAAIgB,EAAOgC,IAExB7P,IAAQoO,eAAaC,MACrBtG,GAAuByB,EAAO5G,MAAOqH,EAAOrH,QAE5C5C,IAAQoO,eAAaU,MACrB/G,EAAsBkI,GAAwBzG,EAAQS,IAEtDjK,IAAQoO,eAAaE,QACrBvG,EAAsBmI,GAAwBrJ,EAAS2C,EAAQS,EAAQ4D,IAEvE7N,IAAQoO,eAAaW,KAAM,CAC3B,IAAIoB,OAAUjP,EACd6G,EAAsBqI,GAAwB5G,EAAQS,EAAQkG,EAASpI,EAAqB8F,GAKhG,OAHI7N,IAAQoO,eAAaG,OACrBxG,EAmJR,SAAiCyB,EAAQS,EAAQ4D,QAC/B,IAAVA,IAAoBA,EAAQ,IAChC,IAAI9F,EAUAsI,EATA3S,EAASmQ,EACTyC,EAAQ9G,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAC5C0G,EAAS/G,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAC9C0G,EAAUhH,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAChD0G,EAAOjH,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,IAC1C0G,EAAQzG,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,KAC5C8G,EAAS1G,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,MAC9C8G,EAAU3G,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,OAChD8G,EAAO5G,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,IAE9C,OAAQR,EAAOE,WACX,IAAK,QACI+G,EAAOI,GAAQJ,EAAOG,GAAWJ,EAAUI,GAAWJ,EAAUK,IACjEP,EAAQI,GAASJ,GAASK,GAAU9C,GAAS,KAC7CnQ,EAAS8L,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,KAAOnM,GAEpD2S,EAAeS,GAAetH,EAAO5G,MAAOlF,EAAQ,KACpD,MACJ,IAAK,OACI4S,EAAQI,GAASJ,EAAQK,GAAUJ,EAASI,GAAUJ,EAASG,IAChED,EAAOI,GAAQJ,GAAQG,GAAW/C,GAAS,KAC3CnQ,EAAS8L,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQmK,IAAMtM,GAEnD2S,EAAeS,GAAetH,EAAO5G,MAAOlF,EAAQ,KACpD,MACJ,IAAK,SACI+S,EAAOI,GAAQJ,EAAOG,GAAWJ,EAAUI,GAAWJ,EAAUK,IACjEN,EAASI,GAAUJ,GAAUG,GAAS7C,GAAS,KAC/CnQ,EAASuM,EAAOpK,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAIP,GAErD2S,EAAeS,GAAetH,EAAO5G,MAAOlF,EAAQ,GACpD,MACJ,IAAK,UACI4S,EAAQI,GAASJ,EAAQK,GAAUJ,EAASI,GAAUJ,EAASG,IAChEF,EAAUI,GAAWJ,GAAWK,GAAQhD,GAAS,KACjDnQ,EAASuM,EAAOpK,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAIR,GAEtD2S,EAAeS,GAAetH,EAAO5G,MAAOlF,EAAQ,IAO5D,GAJAqK,GACIyB,EAAO5G,MACPyN,GAEqB,QAArB7G,EAAOE,WAA4C,WAArBF,EAAOE,UAAwB,CAC7D,IAAIyG,EAAU3G,EAAOE,UACrBF,EAAOE,UAAY2G,EAAapS,EAAIgM,EAAOrH,MAAM3E,EAAI,OAAS,QAC9DuL,EAAO5G,MAAQyN,EACftI,EAAsBqI,GAAwB5G,EAAQS,EAAQkG,EAASpI,OAEtE,CACD,IAAIoI,EAAU3G,EAAOE,UACrBF,EAAOE,UAAY2G,EAAanS,EAAI+L,EAAOrH,MAAM1E,EAAI,MAAQ,SAC7DsL,EAAO5G,MAAQyN,EACftI,EAAsBqI,GAAwB5G,EAAQS,EAAQkG,EAASpI,GAE3E,OAAOA,EA9MmBgJ,CAAwBvH,EAAQS,EAAQ4D,IAE3D9F,EA7yBeiJ,CAAiBrG,EAAK3K,EAAKwJ,EAAQS,EAAQ4D,GAnVVoD,CAAkBtG,EAAKnB,EAAQS,GAGtF,OAAOlC,EAnwBImJ,CAAuBrK,EAAS2C,EAAOE,UAAWO,EAAOP,UAAWF,EAAO5G,MAAOqH,EAAOrH,OAGpG2J,EAA2B1F,IACvBA,EAAQoB,eAAiBpB,EAAQ8B,gBAmezC,SAAyB9B,EAAS2C,EAAQS,GACtC,IAMIa,EANAzB,EAAaxC,EAAQuB,kBACrBkB,EAAazC,EAAQ0C,kBACrB/B,EAAOX,EAAQoB,cACfkJ,EAAa3H,EAAO5G,MACpBwO,GAAevH,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAClDsH,GAAwBpT,EAAG,EAAGC,EAAG,GAEjCoT,EAAgB,MACf9J,GAKD2J,EAAalH,EAAOrH,MACpBwO,EAAa5H,EAAOI,SALpBpC,EAAOX,EAAQ8B,cACfyI,EAAanH,EAAOL,QAMxB,GAAqB,eAAjB/C,EAAQ/D,KACR,GAAK+D,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,GAAMmJ,EAAQoB,eAC7DpB,EAAQzG,SAAS,GAAGsJ,UACpBF,EAAOE,UAAY7C,EAAQzG,SAAS,GAAGsJ,UACvC2H,EAAsBjF,GAAU5E,EAAK3H,QAAS2J,EAAOE,WACrDoB,EAAWsB,GAAU5E,EAAK3H,QAASwM,GAAqB7C,EAAOE,YAC/D2H,EAAsBvI,GAAgBjC,EAASW,EAAM6J,EAAqBvG,GAAU,OAEnF,CACD,IAAIyG,GAAa1R,QAAS,KAAM6J,UAAW,KAAM9G,MAAOuO,EAAYvH,OAAQwH,GACxEI,GAAa3R,QAAS,KAAM6J,UAAW,KAAM9G,MAAO,KAAMgH,OAAQ,MACtE6H,EAAcjK,EAAM+J,EAAUC,EAAU3K,GACxCwK,EAAsBG,EAAS5O,MAC/B0O,EAAgBE,EAAS9H,cAG5B,CACD,IAAIgI,OAAe,EACf7K,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,IAE1CgU,EADAlK,IAASX,EAAQoB,cACFpB,EAAQzG,SAAS,GAAGwC,MAGpBiE,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGkF,OAGrEyO,EAAsBvI,GAAgBjC,EAASW,EAAMA,EAAKiB,OAAOP,OAASrB,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,EAAKgU,EAAeP,EAAY3J,IAASX,EAAQ8B,eAEzKnB,IAASX,EAAQoB,eACjBuB,EAAOE,UAAYF,EAAOE,WAAa4H,EACvC9H,EAAO5G,MAAQyO,EACXxK,EAAQuB,oBACRoB,EAAO5G,OAAU3E,EAAGoL,EAAWrG,QAAS9E,EAAGmL,EAAWpG,SAClD4D,EAAQ8E,gBACRnC,EAAO5G,MAAQuJ,EAAsBtF,EAAS2C,EAAQS,GAAQ,OAKtEA,EAAOP,UAAYO,EAAOP,WAAa4H,EACvCrH,EAAOrH,MAAQyO,EACXxK,EAAQ0C,oBACRU,EAAOrH,OAAU3E,EAAGqL,EAAWtG,QAAS9E,EAAGoL,EAAWrG,SAClD4D,EAAQgF,gBACR5B,EAAOrH,MAAQuJ,EAAsBtF,EAAS2C,EAAQS,GAAQ,MA/hBtE0H,CAAgB9K,EAAS2C,EAAQS,GAErC,GAAqB,aAAjBpD,EAAQ/D,MAAwC,WAAjB+D,EAAQ/D,KACvCiF,EAAsBiF,EAA+BnG,EAAS2C,EAAQS,QAGtE,GAAqB,eAAjBpD,EAAQ/D,MAAyB+D,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,GAChD,OAA/BmJ,EAAQzG,SAAS,GAAG1C,QACc,OAAlCmJ,EAAQzG,SAAS,GAAGsJ,UACpB3B,EA+WZ,SAA+BlB,EAAS2C,EAAQS,EAAQd,EAAYC,EAAYC,EAAYC,GACxF,IAAIhM,EACAsF,EAEA8G,EACAU,EAFArC,KAGJwE,EAC2B1F,GAC3B,IAAIoG,EACJ,GAAIpG,EAAQzG,SAAS1C,OAAS,EAAG,CAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIkJ,EAAQzG,SAAS1C,OAAQC,IAAK,CAC9C,IAAIiU,EAAQ/K,EAAQzG,SAASzC,GAQ7B,GAPU,IAANA,QAAyCuD,IAA9B2F,EAAQuB,oBACnBgC,GAASnM,EAAGoL,EAAWrG,QAAS9E,EAAGmL,EAAWpG,SAC9CyG,EAAYnB,GAAiB6B,EAAM5B,GAA4BW,GAAaA,EAAWV,QAAQ,GAC3FmJ,EAAMlI,YAAc2C,GAAqB3C,KACzCkI,EAAMlI,UAAYA,IAGtB/L,EAAI,GAAKkJ,EAAQzG,SAASzC,EAAI,GAAG+L,YAAckI,EAAMlI,UACrD/L,EAAIuP,EAA6BrG,EAASlJ,EAAG6L,OAE5C,CACD,IAAIqI,EAAchL,EAAQzG,SAASzC,EAAI,GACvC6L,EAAO5G,MAASgP,EAAe,UAAIzE,EAAoB3D,EAAQoI,GAC3DC,EAAYjS,OAAOiS,EAAYjS,OAAOlC,OAAS,GAEvD,GAAIC,IAAMkJ,EAAQzG,SAAS1C,OAAS,EAahC,GAZK4L,GAAeF,EAGXvC,EAAQ8B,oBAA+CzH,IAA9B2F,EAAQ0C,mBACtC6D,EAAyBvG,EAAS2C,GAClC5G,EAAQkP,EAAYjL,EAAS2C,EAAQS,IAGrCrH,EAAQ0K,EAAYzG,EAAS2C,EAAQS,GAPrCrH,EAAQmP,EAAalL,EAAS2C,EAAQS,GAS1CsD,EAAqB3K,EAAOiE,EAAS2C,GACrCoI,EAAMhS,UACFgD,EAAMlF,QAAU,EAChB,IAAKJ,EAAI,EAAGA,EAAIsF,EAAMlF,OAAQJ,IAC1BsU,EAAMhS,OAAO7B,KAAK6E,EAAMtF,SAI5B2P,EAAgBtP,EAGxB,GAAI0L,GAAoB,IAAN1L,EAAS,CACvB,IAAIqK,EAAcyF,EAAmB5G,EAASwC,EAAYF,GACtDnB,IACAwB,EAAO5G,MAAQoF,SAIL9G,IAAlB+L,IACIA,IAAkBpG,EAAQzG,SAAS1C,OAAS,IAC5CmJ,EAAQzG,SAAS6M,EAAgB,GAAGvD,UAAY,KAChD7C,EAAQzG,SAAS6M,EAAgB,GAAGvP,OAAS,MAEjDmJ,EAAQzG,SAASoN,OAAOP,EAAe,IAE3ClF,EAAsB2F,EAA0B7G,EAASkB,GAE7D,OAAOA,EAhbuBiK,CAAsBnL,EAAS2C,EAAQS,EAAQd,EAAYC,EAAYC,EAAYC,OAExG,CACD,IAAIuE,OAAQ,EACPrE,EAAOE,UAKRmE,EAAQmC,GAAoB7G,EAAWV,OAAQe,EAAQ,IAJvDA,EAAOE,UAAaO,EAAgB,eAAoC/I,IAA9B2F,EAAQ0C,kBAAmCU,EAAOP,UAAY2C,GAAqBpC,EAAOP,WAChI8C,GAAM9C,UAAUF,EAAO5G,MAAOqH,EAAOrH,OAK7CiE,EAAQzG,SAAS,GAAGR,OAASmI,EAAsBmI,GAAwBrJ,EAAS2C,EAAQS,EAAQ4D,GAG5G,OAAO9F,EA1JekK,CAAoBpL,EAASmB,EAAanB,EAAQqL,YAAapK,GACrFqK,GAAgBtL,EAASkB,EAAoB,IAAI,GACjDoK,GAAgBtL,EAASkB,EAAoBA,EAAoBrK,OAAS,IAAI,GACvEqK,EAyJX,SAASoF,EAAoB3D,EAAQjI,GACjC,IAAI6Q,EACA3T,EACAoP,EAQJ,OAPArE,EAAOE,UAAYnI,EAAQmI,UAC3BnI,EAAQ3B,UACR2B,EAAQ3B,OAAO7B,KAAKyL,EAAO5G,OAC3BiL,EAA+B,SAAtBtM,EAAQmI,WAA8C,QAAtBnI,EAAQmI,WAAyBnI,EAAc,OAAIA,EAAQ7D,OACpGe,EAA+B,SAAtB8C,EAAQmI,WAA8C,UAAtBnI,EAAQmI,UAAyB,EAAI,GAC9E0I,EAAWtB,GAAetH,EAAO5G,MAAOiL,EAAOpP,GAC/C8C,EAAQ3B,OAAO7B,KAAKqU,GACbA,EAEX,SAASL,EAAalL,EAAS2C,EAAQS,GACnC,IAAIrH,EACA8G,EACA2I,EAEJ,GADA7I,EAAO3J,QAAWgH,EAAqB,cAAIA,EAAQoB,cAAcpI,aAAUqB,EACvE2F,EAAQuB,kBAAmB,CAE3BiK,EAAgB9J,IADHtK,EAAG4I,EAAQuB,kBAAkBpF,QAAS9E,EAAG2I,EAAQuB,kBAAkBnF,SACzCuF,GAA4B3B,EAAQoB,eAAgBpB,EAAQoB,cAAcQ,QAAQ,IACrHe,EAAO3J,SAAiC,WAArB2J,EAAOE,WAA+C,QAArBF,EAAOE,WAKtDF,EAAO3J,SAAiC,SAArB2J,EAAOE,WAA6C,UAArBF,EAAOE,WAC1DO,EAAOrH,MAAM1E,EAAIsL,EAAO3J,QAAQmK,KAAOC,EAAOrH,MAAM1E,EAAIsL,EAAO3J,QAAQkK,SACvEL,EAAaF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,SANzDgM,EAAOrH,MAAM3E,EAAIuL,EAAO3J,QAAQgK,MAAQI,EAAOrH,MAAM3E,EAAIuL,EAAO3J,QAAQiK,QACxEJ,EAAaF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,UASpE,GAAI2I,EAAQuB,mBAAqBiK,IAAkBhG,GAAqB3C,GAAY,CAChF,IAAI4I,GACmB,SAAlBD,GAA8C,UAAlBA,IAA+B7I,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAC1FR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQqI,OAAOhK,GAC1C+L,EAAOrH,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOC,EAAOrH,MAAM1E,GAAKsL,EAAO3J,QAAQqI,OAAOhK,GACjFsL,EAAOE,UAAY,MACnB4I,EAAW9I,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,KAEzB,SAAlBqI,GAA8C,UAAlBA,IAA+B7I,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQqI,OAAOhK,GACrGsL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QACnCE,EAAOrH,MAAM1E,EAAIsL,EAAO3J,QAAQqI,OAAOhK,GAAK+L,EAAOrH,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QAC9EP,EAAOE,UAAY,SACnB4I,EAAW9I,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,KAE5B,QAAlBmU,GAA6C,WAAlBA,IAAgC7I,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAC/FL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQqI,OAAOjK,GAC1CgM,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQI,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQqI,OAAOjK,GAClFuL,EAAOE,UAAY,OACnB4I,EAAW9I,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAAO,KAE1B,QAAlBwI,GAA6C,WAAlBA,IAAgC7I,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC/FN,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQqI,OAAOjK,GACzCgM,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAASG,EAAOrH,MAAM3E,EAAIuL,EAAO3J,QAAQqI,OAAOjK,IAClFuL,EAAOE,UAAY,QACnB4I,EAAW9I,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAI,IAEnDuL,EAAOE,WAAa4I,IACpB1P,EAAQsN,GAAwBrJ,EAAS2C,EAAQS,EAAQqI,GAAU,SAIvE9I,EAAOE,UAAY,GAA0B6I,EAAoB/I,EAAOE,UAAWF,EAAO5G,MAAOqH,EAAOrH,OACxGA,EAAQqN,GAAwBzG,EAAQS,GAE5C,OAAOrH,EAEX,SAASkP,EAAYjL,EAAS2C,EAAQS,GAClC,IAAIrH,EACJqH,EAAOpK,QAAUgH,EAAQ8B,cAAc9I,QACvC4R,EAAc5K,EAAQ8B,cAAea,EAAQS,EAAQpD,GACrD,IAAI6C,EAAY6I,EAAoBtI,EAAOP,UAAWF,EAAO5G,MAAOqH,EAAOrH,OAC3E,GAAI4G,EAAOE,YAAcO,EAAOP,WAAmC,SAArBF,EAAOE,WAA6C,UAArBF,EAAOE,UAShFF,EAAOE,UAAYA,EACnB9G,EAAQqN,GAAwBzG,EAAQS,OAVgE,CACxGT,EAAOE,UAAYA,EACnB9G,EAAQsN,GAAwBrJ,EAAS2C,EAAQS,EAAQpD,EAAQ8B,cAAcnJ,MAAQ,EAAI,IAC7EgK,EACN5G,MAAQA,EAAM,GACtB6O,EAAc5K,EAAQ8B,cAAea,EAAQS,EAAQpD,GACrDjE,EAAQsN,GAAwBrJ,EAAS2C,EAAQS,GAMrD,OAAOrH,EAEX,SAAS4P,EAAU3L,EAAS2C,EAAQS,GAChC,IAAIa,EACJb,EAAOpK,QAAUgH,EAAQ8B,cAAc9I,QACvC,IAAI6J,EACAhM,EACqB,SAArB8L,EAAOE,WAA6C,UAArBF,EAAOE,UAClCO,EAAOpK,QAAQqI,OAAOhK,IAAMsL,EAAO5G,MAAM1E,GACtC+L,EAAOpK,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO5G,MAAM3E,GAAKgM,EAAOpK,QAAQiK,MAIvEG,EAAOpK,QAAQqI,OAAOhK,IAAMsL,EAAO5G,MAAM1E,GACa,WAA5D2I,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGgM,WAC7CO,EAAOpK,QAAQqI,OAAOhK,EAAIsL,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQmK,KAC9EN,EAAY,MACZhM,EAAU8L,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQmK,IAAO,IAE3CC,EAAOpK,QAAQqI,OAAOhK,IAAMsL,EAAO5G,MAAM1E,GACa,QAA5D2I,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGgM,WAC7CO,EAAOpK,QAAQqI,OAAOhK,EAAIsL,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQkK,QAC9EL,EAAY,SACZhM,EAAUuM,EAAOpK,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAK,SAEjBgD,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBACxDC,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,SACzEL,EAAYF,EAAOE,UACnBhM,EAAU8L,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAMsL,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,GAC/ER,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,KAnB9CwL,EAAY,MACZhM,EAASuM,EAAOpK,QAAQN,OAAS,EAAI,IAsBrC0K,EAAOpK,QAAQqI,OAAOjK,IAAMuL,EAAO5G,MAAM3E,GACtCgM,EAAOpK,QAAQmK,IAAMR,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQkK,OAIrEE,EAAOpK,QAAQqI,OAAOjK,IAAMuL,EAAO5G,MAAM3E,GACa,UAA5D4I,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGgM,WAC1CO,EAAOpK,QAAQqI,OAAOjK,EAAIuL,EAAO5G,MAAM3E,GAAKuL,EAAO5G,MAAM3E,GAAKgM,EAAOpK,QAAQgK,MACjFH,EAAY,OACZhM,EAAU8L,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,KAAQ,IAE5CI,EAAOpK,QAAQqI,OAAOjK,IAAMuL,EAAO5G,MAAM3E,GACa,SAA5D4I,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGgM,WAC7CO,EAAOpK,QAAQqI,OAAOjK,GAAKuL,EAAO5G,MAAM3E,GAAKuL,EAAO5G,MAAM3E,GAAKgM,EAAOpK,QAAQiK,OAC/EJ,EAAY,QACZhM,EAAUuM,EAAOpK,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAK,SAEhBiD,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBACxDC,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QAC1EJ,EAAYF,EAAOE,UACnBhM,EAAU8L,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAMuL,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAAO,GAChFL,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAI,KAnB7CyL,EAAY,OACZhM,EAASuM,EAAOpK,QAAQL,MAAQ,EAAI,IAqB5C,IAAIqO,EAAuB,SAAdnE,GAAsC,QAAdA,KAAmChM,EACpEe,EAAuB,SAAdiL,GAAsC,UAAdA,EAAyB,EAAI,GAClEoB,EAAWtB,EAAO5G,MAClB4G,EAAO5G,MAAQkO,GAAetH,EAAO5G,MAAOiL,EAAOpP,GACnD+K,EAAOE,UAAY8C,GAAM9C,UAAUF,EAAO5G,MAAOqH,EAAOrH,YACtB1B,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBAClDC,EAAO3J,QAAQqI,OAAOjK,IAAMgM,EAAOpK,QAAQqI,OAAOjK,GAAKuL,EAAO3J,QAAQqI,OAAOhK,IAAM+L,EAAOpK,QAAQqI,OAAOhK,IAC1GsL,EAAOE,UAAYO,EAAOP,WAE9B,IAAI9G,EAAQsN,GAAwBrJ,EAAS2C,EAAQS,GAErD,OADArH,EAAM4K,OAAO,EAAG,EAAG1C,GACZlI,EAmIX,SAAS0K,EAAYzG,EAAS2C,EAAQS,GAClC,IAAIrH,EACJqH,EAAOpK,QAAUgH,EAAQ8B,cAAc9I,QACvC,IAAIwS,EAEJ,QAAkCnR,IAA9B2F,EAAQuB,kBAAiC,CAEzCiK,EAAgB9J,IADHtK,EAAG4I,EAAQuB,kBAAkBpF,QAAS9E,EAAG2I,EAAQuB,kBAAkBnF,SACzCuF,GAA4B3B,EAAQoB,eAAgBpB,EAAQoB,cAAcQ,QAAQ,GAE7H,IAAIgK,EA1IR,SAA8B5L,EAAS2C,EAAQS,EAAQyI,GACnD,IAAID,GAAS,EACb,OAAQxI,EAAOP,WACX,IAAK,YACiCxI,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBAAgD,UAAZmJ,GACvFlJ,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KACpER,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,SACf,WAAZ2I,GAAwBlJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC3C,QAAZwU,GAAqBlJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IACpDsL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC9EN,EAAOE,UAAyB,UAAZgJ,EAAyBlJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,SACnFsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAI,QAAU,OACjDwU,GAAS,GAEJjJ,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAAMuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,MACpG+L,EAAOpK,QAAQmK,IAAMR,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQkK,OAASP,EAAO5G,MAAM1E,GAClFsL,EAAOE,UAAY,OAEbF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACtEsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAMuL,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM1E,GAC3D+L,EAAOpK,QAAQmK,IAAMR,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQqI,OAAOhK,GAAKsL,EAAO5G,MAAM1E,EACxFsL,EAAOE,UAAY,MAEbF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACtEsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAMuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC1D+L,EAAOpK,QAAQkK,OAASP,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQqI,OAAOhK,EAAIsL,EAAO5G,MAAM1E,EAC1FsL,EAAOE,UAAY,SAEdF,EAAO5G,MAAM1E,IAAM+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IACxEuL,EAAOE,UAAY,SAEvB,MACJ,IAAK,aACiCxI,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,oBACrC,WAAZmJ,GAAwBlJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACvC,QAAZwU,GAAqBlJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IAAOsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAC5FuL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC3EN,EAAOE,UAAaF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,QAChEwU,GAAS,QAE0BvR,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBAC5C,SAAZmJ,GAAsBlJ,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAMuL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAC3FR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QACjCP,EAAOE,UAAaF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,SAC/DuU,GAAS,GAEJjJ,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKgM,EAAOpK,QAAQmK,KAAOR,EAAO5G,MAAM1E,GACxE+L,EAAOpK,QAAQkK,QAAUP,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,IAAM+L,EAAOrH,MAAM1E,EAC9EsL,EAAOE,UAAY,MAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,MAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,SAEdF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAAMuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACvEsL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC9BsL,EAAOE,UAAY,QAEdF,EAAO5G,MAAM1E,IAAM+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IACxEuL,EAAOE,UAAY,QAEvB,MACJ,IAAK,WACiCxI,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBAAgD,WAAZmJ,GACvFlJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MACpEL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QAAyB,UAAZ4I,GAAuBlJ,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GACtF,SAAZyU,GAAsBzI,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,IACvFuL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QAC1EP,EAAOE,UAAyB,WAAZgJ,EAA0BlJ,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,QACrFuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,SAAW,MACnDuU,GAAS,GAEJjJ,EAAO5G,MAAM3E,IAAMgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EACxEsL,EAAOE,UAAY,SAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,MACxEL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,MAChCN,EAAOE,UAAY,OAEdF,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM1E,EACpCsL,EAAOE,UAAY,MAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,OAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IACtEuL,EAAOE,UAAY,SAEvB,MACJ,IAAK,cACiCxI,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,qBAAmD,UAAZmJ,GAC7E,SAAZA,GAAsBzI,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,IAAQuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC3FsL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QAC1D,QAAZ2I,GAAqBlJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACjDsL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QAE3EN,EAAOE,UADK,UAAZgJ,GAAmC,SAAZA,EACHlJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,SAG3CsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,QAEpEwU,GAAS,GAEJjJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,MACxEI,EAAOpK,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAChCuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,MACnEI,EAAOpK,QAAQqI,OAAOjK,GAAKuL,EAAO5G,MAAM3E,EACxCuL,EAAOE,UAAY,OAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,OACxEG,EAAOpK,QAAQqI,OAAOjK,EAAIuL,EAAO5G,MAAM3E,IACvCuL,EAAOE,UAAY,SAGlBF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,OAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,QAEdF,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM1E,IAAMsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKgM,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,KAC3GuL,EAAOE,UAAY,UAI/B,OAAO+I,EAWME,CAAqB9L,EAAS2C,EAAQS,EAAQoI,GAwD3D,YAvDkCnR,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBACnDU,EAAOP,YAAc2C,GAAqBgG,MACjB,SAArBpI,EAAOP,WAAwBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAA4B,UAArBgM,EAAOP,WAC3EF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAAOuL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KACtER,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QAAiC,WAArBE,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC3GsL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC/ElH,EAAQ4P,EAAU3L,EAAS2C,EAAQS,GAE9BT,EAAOE,YAAcO,EAAOP,UACjC9G,EAAQsN,GAAwBrJ,EAAS2C,EAAQS,IAEpB,SAArBA,EAAOP,WAAwBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAC/C,UAArBgM,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,KAA6B,QAArBuL,EAAOE,WAA4C,WAArBF,EAAOE,YACvGF,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM1E,GAC9B+L,EAAOpK,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQkK,QAAUP,EAAO5G,MAAM1E,GAC7D,QAArB+L,EAAOP,WAAuBF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACpC,WAArB+L,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC1D+L,EAAOpK,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKgM,EAAOpK,QAAQiK,OAASN,EAAO5G,MAAM3E,EACxF2E,EAAQ4P,EAAU3L,EAAS2C,EAAQS,QAGL/I,IAA1B2F,EAAQoB,oBAAyD/G,IAA1B2F,EAAQ8B,oBAA6DzH,IAA9B2F,EAAQ0C,oBAC/D,SAArBC,EAAOE,WAA6C,UAArBF,EAAOE,YACnCF,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,SACjD,QAArBE,EAAOP,WAA4C,WAArBO,EAAOP,YACxCO,EAAOpK,QAAQqI,OAAOjK,IAAMuL,EAAO3J,QAAQqI,OAAOjK,GACvDuL,EAAOE,UAAkC,QAArBO,EAAOP,UAAuB,SAAW,MAG7D9G,EAAQsN,GAAwBrJ,EAAS2C,EAAQS,EAFlB,QAArBA,EAAOP,UAAwBF,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,GAC7EsL,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,UAGZ9I,IAA1B2F,EAAQoB,oBAAyD/G,IAA1B2F,EAAQ8B,oBAA6DzH,IAA9B2F,EAAQ0C,oBACpE,QAArBC,EAAOE,WAA4C,WAArBF,EAAOE,YAClCF,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QACrD,SAArBG,EAAOP,WAA6C,UAArBO,EAAOP,YAA2BO,EAAOpK,QAAQqI,OAAOhK,IAAMsL,EAAO3J,QAAQqI,OAAOhK,GACxHsL,EAAOE,UAAkC,SAArBO,EAAOP,UAAwB,QAAU,OAG7D9G,EAAQsN,GAAwBrJ,EAAS2C,EAAQS,EAFlB,SAArBA,EAAOP,UAAyBF,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAI,GAC7EuL,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAAO,KAY5CjH,EATK6P,EASGvC,GAAwBrJ,EAAS2C,EAAQS,EARxB,SAArBT,EAAOE,WAA6C,UAArBF,EAAOE,UACP,SAArBF,EAAOE,UAAyBF,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAAO,GAC5EL,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAI,GAGd,QAArBuL,EAAOE,UAAwBF,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,GAC1ER,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,IAK1C+R,GAAwBzG,EAAQS,GAGzCrH,EAqEX,SAAS6K,EAAmB5G,EAASwC,EAAYF,GAC7C,IACIvG,EADAwH,GAASnM,EAAGoL,EAAWrG,QAAS9E,EAAGmL,EAAWpG,SAE9CwF,EAASD,GAA4BW,GACrCO,EAAYnB,GAAiB6B,EAAM3B,EAAQU,EAAWV,QAAQ,GAC9DzI,EAAM6G,EAAQzG,SAAS,GAM3B,OALIJ,EAAI0J,YAAcA,KA0rB1B,SAA+B1J,EAAK0J,EAAWjB,EAAQ7F,EAAOgQ,EAAUC,GACpE,IACI5U,EAEAC,EADA0B,KAEJA,EAAO7B,KAAK6E,GAEAA,EAAM1E,IAAM0U,EAAS1U,IAAoB,SAAdwL,GAAwBkJ,EAAS3U,EAAI2E,EAAM3E,GAChE,UAAdyL,GAAyBkJ,EAAS3U,EAAI2E,EAAM3E,IAC3C2E,EAAM3E,IAAM2U,EAAS3U,IAAoB,QAAdyL,GAAuBkJ,EAAS1U,EAAI0E,EAAM1E,GACpD,WAAdwL,GAA0BkJ,EAAS1U,EAAI0E,EAAM1E,KAE/B,QAAdwL,GAAqC,WAAdA,EACL,QAAdA,GAAuBkJ,EAAS1U,EAAI0E,EAAM1E,GAAK0U,EAAS1U,EAAI0E,EAAM1E,EAZ/D,IAaW,WAAdwL,GAA0BkJ,EAAS1U,EAAI0E,EAAM1E,GAAK0U,EAAS1U,EAAI0E,EAAM1E,EAblE,IAcHA,EAAkB,QAAdwL,EAAsBjB,EAAOuB,IAd9B,GAc+CvB,EAAOsB,OAdtD,GAeHnK,EAAO7B,MAAOE,EAAG2E,EAAM3E,EAAGC,EAAGA,IAC7B0B,EAAO7B,MAAOE,EAAG2E,EAAM3E,GAAK2U,EAAS3U,EAAI2E,EAAM3E,GAAK,EAAGC,EAAGA,IAC1D0B,EAAO7B,MAAOE,EAAG2E,EAAM3E,GAAK2U,EAAS3U,EAAI2E,EAAM3E,GAAK,EAAGC,EAAG0U,EAAS1U,KAE9DwF,KAAK6G,IAAI3H,EAAM3E,EAAI2U,EAAS3U,GAnB9B,KAoBY,QAAdyL,GAAuBkJ,EAAS1U,EAAI0E,EAAM1E,GAAmB,WAAdwL,GAA0BkJ,EAAS1U,EAAI0E,EAAM1E,GAE7F0B,EAAO7B,MAAOE,EAAG2E,EAAM3E,EAAGC,EAAG0U,EAAS1U,KAGtCA,EAAkB,QAAdwL,EAAsBjB,EAAOuB,IAzB9B,GAyB+CvB,EAAOsB,OAzBtD,GA0BH9L,EAAK2U,EAAS3U,EAAI2E,EAAM3E,EAAKwK,EAAOoB,KA1BjC,GA0BmDpB,EAAOqB,MA1B1D,GA2BHlK,EAAO7B,MAAOE,EAAG2E,EAAM3E,EAAGC,EAAGA,IAC7B0B,EAAO7B,MAAOE,EAAG2U,EAAS3U,EAAGC,EAAGA,KAIlB,SAAdwL,GAAwBkJ,EAAS3U,EAAI2E,EAAM3E,GAAK2U,EAAS3U,EAAI2E,EAAM3E,EAhChE,IAgC8F,UAAdyL,GACnFkJ,EAAS3U,EAAI2E,EAAM3E,GAAK2U,EAAS3U,EAAI2E,EAAM3E,EAjCxC,IAkCHA,EAAkB,SAAdyL,EAAuBjB,EAAOoB,KAlC/B,GAkCiDpB,EAAOqB,MAlCxD,GAmCHlK,EAAO7B,MAAOE,EAAGA,EAAGC,EAAG0E,EAAM1E,IAC7B0B,EAAO7B,MAAOE,EAAGA,EAAGC,EAAG0E,EAAM1E,GAAK0U,EAAS1U,EAAI0E,EAAM1E,GAAK,IAC1D0B,EAAO7B,MAAOE,EAAG2U,EAAS3U,EAAGC,EAAG0E,EAAM1E,GAAK0U,EAAS1U,EAAI0E,EAAM1E,GAAK,KAE9DwF,KAAK6G,IAAI3H,EAAM1E,EAAI0U,EAAS1U,GAvC9B,KAwCY,SAAdwL,GAAwBkJ,EAAS3U,EAAI2E,EAAM3E,GAAmB,UAAdyL,GAAyBkJ,EAAS3U,EAAI2E,EAAM3E,GAC7F2B,EAAO7B,MAAOE,EAAG2U,EAAS3U,EAAGC,EAAG0E,EAAM1E,KAItCD,EAAkB,SAAdyL,EAAuBjB,EAAOoB,KA7C/B,GA6CiDpB,EAAOqB,MA7CxD,GA8CHlK,EAAO7B,MAAOE,EAAGA,EAAGC,EAAG0E,EAAM1E,IAC7B0B,EAAO7B,MAAOE,EAAGA,EAAGC,EAAG0U,EAAS1U,KAGpC2U,IACAjT,EAAO7B,KAAKiC,EAAIJ,OAAO,IACvBA,EAAOkT,WAEX9S,EAAIJ,OAASA,GAhvBbmT,CAAsB/S,EAAK0J,EAAWjB,EAAQzI,EAAIJ,OAAO,GAAII,EAAIJ,OAAOI,EAAIJ,OAAOlC,OAAS,IAAI,GAChGkF,EAAQ5C,EAAIJ,OAAOI,EAAIJ,OAAOlC,OAAS,GACvCsC,EAAI0J,UAAY8C,GAAM9C,UAAU1J,EAAIJ,OAAOI,EAAIJ,OAAOlC,OAAS,GAAIsC,EAAIJ,OAAOI,EAAIJ,OAAOlC,OAAS,KAE/FkF,EAEX,SAAS2K,EAAqByF,EAASxH,EAAWhC,GAC9C,IAEIE,EAFAuJ,EAAgBzH,EAAUpL,SAASoL,EAAUpL,SAAS1C,OAAS,GAC/DwV,EAAkBD,EAAcrT,OAAOqT,EAAcrT,OAAOlC,OAAS,IAEvC,QAA5BuV,EAAcvJ,WAAmD,WAA5BuJ,EAAcvJ,WAA4BwJ,EAAgBjV,IAAM+U,EAAQ,GAAG/U,KACpF,SAA5BgV,EAAcvJ,WAAoD,UAA5BuJ,EAAcvJ,WAA2BwJ,EAAgBhV,IAAM8U,EAAQ,GAAG9U,KAClH+U,EAAcrT,OAAOqT,EAAcrT,OAAOlC,OAAS,GAAKsV,EAAQ,GAChEtJ,EAAY8C,GAAM9C,UAAUuJ,EAAcrT,OAAO,GAAIqT,EAAcrT,OAAOqT,EAAcrT,OAAOlC,OAAS,SACxEwD,IAA5BsK,EAAUvD,oBAA+D/G,IAAhCsK,EAAUpD,mBACnDsB,IAAc2C,GAAqB4G,EAAcvJ,aACjB,SAA5BuJ,EAAcvJ,WAAoD,UAA5BuJ,EAAcvJ,UACpDuJ,EAAcrT,OAAO,GAAG3B,EAAiC,UAA5BgV,EAAcvJ,UACvCuJ,EAAcrT,OAAO,GAAG3B,EAAIuN,EAAUvD,cAAcpI,QAAQL,MAC5DyT,EAAcrT,OAAO,GAAG3B,EAAIuN,EAAUvD,cAAcpI,QAAQL,MAGhEyT,EAAcrT,OAAO,GAAG1B,EAAiC,WAA5B+U,EAAcvJ,UACvCuJ,EAAcrT,OAAO,GAAG1B,EAAIsN,EAAUvD,cAAcpI,QAAQN,OAC5D0T,EAAcrT,OAAO,GAAG1B,EAAIsN,EAAUvD,cAAcpI,QAAQN,QAGxE0T,EAAcvJ,UAAYA,EAC1BuJ,EAAcvV,OAAS8O,GAAM2G,eAAeF,EAAcrT,OAAO,GAAIqT,EAAcrT,OAAOqT,EAAcrT,OAAOlC,OAAS,IACxHsV,EAAQxF,OAAO,EAAG,IAqE1B,SAASrB,EAAsBtF,EAAS2C,EAAQS,EAAQ4I,GACpD,IAAIxJ,EAAaxC,EAAQuB,kBACrBkB,EAAazC,EAAQ0C,kBACrB6J,EAAU,EAAavM,EAAQgF,cAAgBhF,EAAQ8E,cACvD0H,EAAc,EAAa/J,EAAaD,EACxCiK,EAAO,IAAIC,GAAKF,EAAY5K,OAAOxK,EAAImV,EAASC,EAAY5K,OAAOvK,EAAIkV,EAASC,EAAYG,WAAWhU,MAAQ,EAAI4T,EAASC,EAAYG,WAAWjU,OAAS,EAAI6T,GAChKK,GAAiBH,EAAKI,QAASJ,EAAKK,SAAUL,EAAK3D,YAAa2D,EAAKhE,YACzEmE,EAAcA,EAAc/V,QAAU+V,EAAc,GACpD,IACIG,GAAgBzV,GAAIqL,EAAO5G,MAAM3E,EAAGG,GAAIoL,EAAO5G,MAAM1E,EAAGG,GAAI4L,EAAOrH,MAAM3E,EAAGK,GAAI2L,EAAOrH,MAAM1E,GAC7F0E,EAAQ,EAAaqH,EAAOrH,MAAQ4G,EAAO5G,MAC/C,OAAOiR,GAAsBD,EAAaH,GAAe,EAAM7Q,IAAUA,EAgB7E,SAAS8I,EAAyBzD,EAAemL,GAC7C,IAAIhT,KACAR,EAASkU,GAAU7L,EAAeA,EAAcpI,QAASuT,GAC7DxT,EAAO7B,KAAK6B,EAAO,IACnB,IAAK,IAAIjC,EAAI,EAAGA,EAAIiC,EAAOlC,OAAS,EAAGC,IACnCyC,EAASrC,KAIjB,SAA2B6M,EAAKC,GAE5B,OADa1M,GAAIyM,EAAI3M,EAAGG,GAAIwM,EAAI1M,EAAGG,GAAIwM,EAAI5M,EAAGK,GAAIuM,EAAI3M,GALpC6V,CAAkBnU,EAAOjC,GAAIiC,EAAOjC,EAAI,KAE1D,OAAOyC,EAOX,SAAgBiL,EAAW2I,EAAQvL,EAAQwL,GACvC,IAAIC,EACAC,EAAcH,EAAOG,YAAcH,EAAOI,gBAC9C,GAAID,EAAa,CACb,GAAIA,EAAc,GACd,OAAO1L,EAEN,GAAI0L,GAAe,IACpBD,GACI1U,MAAOiJ,EAAOjJ,MAAOD,OAAQkJ,EAAOlJ,OACpCmU,QAASjL,EAAO6G,WAAY5E,UAAWjC,EAAO8G,WAAYoE,SAAUlL,EAAOiL,QAC3EnE,WAAY9G,EAAOwG,aAAc/G,OAAQ+L,EAAY/L,OAAQ0G,YAAanG,EAAOiC,UACjF4E,WAAY7G,EAAOkH,YAAaV,aAAcxG,EAAOmG,YAAae,YAAalH,EAAOkL,SACtF9J,KAAMoK,EAAYpK,KAAMC,MAAOmK,EAAYnK,MAAOE,IAAKiK,EAAYjK,IAAKD,OAAQkK,EAAYlK,aAG/F,GAAIoK,GAAe,IACpBD,GACI1U,MAAOiJ,EAAOjJ,MAAOD,OAAQkJ,EAAOlJ,OACpCmU,QAASjL,EAAO6G,WAAY5E,UAAWjC,EAAOwG,aAAc0E,SAAUlL,EAAOkH,YAC7EJ,WAAY9G,EAAOmG,YAAa1G,OAAQ+L,EAAY/L,OAAQ0G,YAAanG,EAAO8G,WAChFD,WAAY7G,EAAOiL,QAASzE,aAAcxG,EAAOiC,UAAWiF,YAAalH,EAAOkL,SAChF9J,KAAMoK,EAAYpK,KAAMC,MAAOmK,EAAYnK,MAAOE,IAAKiK,EAAYjK,IACnED,OAAQkK,EAAYlK,YAGvB,CAAA,KAAIoK,GAAe,KAUpB,OAAO1L,EATPyL,GACI1U,MAAOiJ,EAAOjJ,MAAOD,OAAQkJ,EAAOlJ,OACpCmU,QAASjL,EAAOkL,SAAUjJ,UAAWjC,EAAOmG,YAAa+E,SAAUlL,EAAOkH,YAC1EJ,WAAY9G,EAAOiC,UAAWxC,OAAQ+L,EAAY/L,OAAQ0G,YAAanG,EAAOwG,aAC9EK,WAAY7G,EAAOiL,QAASzE,aAAcxG,EAAO8G,WAAYI,YAAalH,EAAO6G,WACjFzF,KAAMoK,EAAYpK,KAAMC,MAAOmK,EAAYnK,MAAOE,IAAKiK,EAAYjK,IAAKD,OAAQkK,EAAYlK,QAMpG,OAAOmK,EAEX,OAAOzL,EA4IX,SAASuE,EAA+BnG,EAAS2C,EAAQS,GACrD,IAAIlC,KACJ,GAAIlB,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,EAAG,CACjD,IAAIC,OAAI,EACJyU,KACAjK,EAAWqB,EAAO5G,MACtB,IAAKjF,EAAI,EAAGA,EAAIkJ,EAAQzG,SAAS1C,OAAQC,IAAK,CAC1C,IAAIqC,EAAM6G,EAAQzG,SAASzC,GAc3B,IAbAyU,MACSrU,KAAKoK,GACVxK,IAAMkJ,EAAQzG,SAAS1C,OAAS,GAChC0U,EAASrU,KAAKiC,EAAI4C,OAClBuF,EAAWnI,EAAI4C,OAGfwP,EAASrU,KAAKkM,EAAOrH,OAEzBiE,EAAQzG,SAASzC,GAAGiC,OAASwS,EACzBvL,EAAQzG,SAAS1C,OAAS,GAAK8O,GAAMhC,OAAOxK,EAAIJ,OAAO,GAAII,EAAIJ,OAAO,KACrEiH,EAAgB,SAAE2G,OAAO7P,EAAG,GAE7BqC,EACA,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAIJ,OAAOlC,OAAQJ,KAC/BA,EAAI,GAAW,IAANK,IACToK,EAAoBhK,KAAKiC,EAAIJ,OAAOtC,KAMxD,OAAOyK,EAEX,SAASwK,EAAoB8B,EAAKlM,EAAUa,GAIxC,MAHyB,QAARqL,GAAyB,WAARA,EAC5BrL,EAAS/K,EAAIkK,EAASlK,EAAK,QAAU,OACrC+K,EAAS9K,EAAIiK,EAASjK,EAAK,SAAW,MAGhD,SAASqO,EAA2B5B,GAChC,GAAiB,aAAbA,EAAI7H,MAAoC,WAAb6H,EAAI7H,MAC/B,GAA6B,IAAxB6H,EAAIvK,SAAS1C,QAAiBiN,EAAIvK,SAAS1C,OAAS,IACnD8O,GAAMC,aAAa9B,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAAGkF,OAAW,CACtE,IAAIrB,OAAU,EACdA,EAAwB,WAAboJ,EAAI7H,KAAqB,IAAIwR,GAAc3J,EAAK,YAAc7H,KAAM,WAAY,GACvF,IAAIyR,GAAgB5J,EAAK,YAAc7H,KAAM,aAAc,GAC9D6H,EAAY,SAAE5M,KAAKwD,SAIxB,GAA4B,IAAxBoJ,EAAIvK,SAAS1C,QAAgBiN,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAAGgM,UAAW,CAC1EnI,EAAU,IAAIqM,GAAkBjD,EAAK,YAAc7H,KAAM,eAAgB,GAC7E6H,EAAIvK,SAASrC,KAAKwD,IAI9B,SAAS2L,EAA6BvC,EAAKhN,EAAG6L,GAC1C,IAAIxJ,EAAM2K,EAAIvK,SAASzC,GACnBkQ,EAA2B,SAAlB7N,EAAI0J,WAA0C,QAAlB1J,EAAI0J,WAAyB1J,EAAU,OAAIA,EAAItC,OACpFe,EAA2B,SAAlBuB,EAAI0J,WAA0C,UAAlB1J,EAAI0J,UAAyB,EAAI,GACtE0I,EAAWtB,GAAetH,EAAO5G,MAAOiL,EAAOpP,GAKnD,OAJAkM,EAAIvK,SAASzC,EAAI,GAAGD,QAAUsC,EAAItC,OAClCiN,EAAIvK,SAASzC,EAAI,GAAGiC,OAAO,GAAK4J,EAAO5G,MAAQwP,EAC/CzH,EAAIvK,SAASoN,OAAO7P,EAAG,KACvBA,EAGJ,SAAS0P,EAAiB1C,EAAKnB,EAAQS,GACnC,IAAIrH,EACAyP,EACJ,GAAI1H,EAAIvC,kBAAmB,CAEvBiK,EAAgB9J,IADHtK,EAAG0M,EAAIvC,kBAAkBpF,QAAS9E,EAAGyM,EAAIvC,kBAAkBnF,SACjCuF,GAA4BmC,EAAI1C,eAAgB0C,EAAI1C,cAAcQ,QAAQ,GAErHgJ,EAAc9G,EAAIhC,cAAea,EAAQS,EAAQU,GACjD,IAAIjB,EAAY6I,EAAoBtI,EAAOP,UAAWF,EAAO5G,MAAOqH,EAAOrH,OAC3E,QAA8B1B,IAA1ByJ,EAAIvC,mBAAmCoB,EAAOE,YAAcO,EAAOP,YAC5C,QAArBF,EAAOE,WAA4C,WAArBF,EAAOE,WAA4BF,EAAO3J,QAAQqI,OAAOjK,IAAMgM,EAAOpK,QAAQqI,OAAOjK,KACxF,SAArBuL,EAAOE,WAA6C,UAArBF,EAAOE,WAA2BF,EAAO3J,QAAQqI,OAAOhK,IAAM+L,EAAOpK,QAAQqI,OAAOhK,GAgB1H,GAAI+L,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQI,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC/EN,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,OAAQ,CACjFP,EAAOE,UAAaO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAAK,SAAW,MAGlE0E,EAAQsN,GAAwBvF,EAAKnB,EAAQS,EAFR,QAArBT,EAAOE,UAAwBF,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,GAChFR,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,SAG7C,GAAIyM,EAAIvC,mBAAqBiK,IAAkBhG,GAAqB3C,GAAY,CACjF,IAAI8K,GACmB,SAAlBnC,GAA8C,UAAlBA,IAA+B7I,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAC1FR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QACpCP,EAAOE,UAAaO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAAK,SAAW,MAClEsW,EAAWhL,EAAO3J,QAAQN,OAAS,EAAI,KAEf,QAAlB8S,GAA6C,WAAlBA,IAAgC7I,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAC/FL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QACpCN,EAAOE,UAAaO,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EAAK,QAAU,OACjEuW,EAAWhL,EAAO3J,QAAQL,MAAQ,EAAI,IAEtCgK,EAAOE,WAAa8K,EACpB5R,EAAQsN,GAAwBvF,EAAKnB,EAAQS,EAAQuK,GAAU,IAG/DhL,EAAOE,UAAYA,EACnB9G,EAAQqN,GAAwBzG,EAAQS,SAG3C,IAAIU,EAAIvC,mBAAqBiK,IAAkBpI,EAAOP,WAAgC,QAAlB2I,GAA6C,WAAlBA,GAC/F7I,EAAO3J,QAAQqI,OAAOjK,IAAMgM,EAAOpK,QAAQqI,OAAOjK,EAOnDuL,EAAOE,UAAYA,EACnB9G,EAAQqN,GAAwBzG,EAAQS,OARe,CACvDT,EAAOE,UAAaO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAAK,SAAW,MAGlE0E,EAAQsN,GAAwBvF,EAAKnB,EAAQS,EAFb,WAArBT,EAAOE,UAA2BF,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,GACjFsL,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,QA/CqF,CAChIR,EAAOE,UAAYA,EACnB9G,EACIsN,GAAwBvF,EAAKnB,EAAQS,EADlB,QAAdP,GAAqC,WAAdA,EACiBiB,EAAI1C,cAAc1I,OAAS,EAAI,GAC/BoL,EAAI1C,cAAczI,MAAQ,EAAI,IACjEgK,EACN5G,MAAQA,EAAM,GACJ,SAAd8G,GAAsC,UAAdA,GACxBO,EAAOP,UAAYA,EACnBO,EAAOrH,MAAuB,SAAd8G,EAAwBO,EAAOpK,QAAQ0P,WAAatF,EAAOpK,QAAQ+O,aAGnF6C,EAAc9G,EAAIhC,cAAea,EAAQS,EAAQU,GAErD/H,EAAQsN,GAAwBvF,EAAKnB,EAAQS,GAwCjD,OAAOrH,EAEX,SAASwK,EAAyBzC,EAAKnB,GACnC,QAA0BtI,IAAtByJ,EAAIhC,oBAAyDzH,IAA1ByJ,EAAIpB,mBACnCf,GAA4BmC,EAAIhC,eAAe8B,cAAcjB,EAAO5G,OAAQ,CAC5E,IAAIqH,EAASU,EAAIhC,cACbpH,EAAUoJ,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAC7C+W,EAAYlT,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GACnDgM,EAAY2C,GAAqB9K,EAAQmI,WAC3B,WAAdA,EACI+K,EAAUvW,EAAI+L,EAAOpK,QAAQkK,SAC7BxI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAGQ,EAAI+L,EAAOpK,QAAQkK,OAAS,GACtExI,EAAQ7D,OAAS8O,GAAM2G,eAAe5R,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,KAGjF,QAAdgM,EACD+K,EAAUvW,EAAI+L,EAAOpK,QAAQmK,MAC7BzI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAGQ,EAAI+L,EAAOpK,QAAQmK,IAAM,GACnEzI,EAAQ7D,OAAS8O,GAAM2G,eAAe5R,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,KAGjF,SAAdgM,EACD+K,EAAUxW,EAAIgM,EAAOpK,QAAQgK,OAC7BtI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAGO,EAAIgM,EAAOpK,QAAQgK,KAAO,GACpEtI,EAAQ7D,OAAS8O,GAAM2G,eAAe5R,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,KAGjF,UAAdgM,GACD+K,EAAUxW,EAAIgM,EAAOpK,QAAQiK,QAC7BvI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAGO,EAAIgM,EAAOpK,QAAQiK,MAAQ,GACrEvI,EAAQ7D,OAAS8O,GAAM2G,eAAe5R,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,KAGxG8L,EAAO5G,MAAQrB,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,IA+DlE,SAASgQ,EAA0B7G,EAASkB,GACxC,IAAK,IAAIpK,EAAI,EAAGA,EAAIkJ,EAAQzG,SAAS1C,OAAQC,IAEzC,IAAK,IADDqC,EAAM6G,EAAQzG,SAASzC,GAClBL,EAAI,EAAGA,EAAI0C,EAAIJ,OAAOlC,OAAQJ,KAC/BA,EAAI,GAAW,IAANK,IACToK,EAAoBhK,KAAKiC,EAAIJ,OAAOtC,IAIhD,OAAOyK,EAEX,SAAS0J,EAAcjK,EAAMgC,EAAQS,EAAQU,GACzC,IAAI2G,EACAD,GAAwBpT,EAAG,EAAGC,EAAG,GACjCwW,EAAcrJ,EAAW7D,EAAMA,EAAK3H,QAAS2H,EAAKiB,QAClD2I,EAAa5H,EAAOI,OACpBuH,EAAa3H,EAAO5G,MACxB,GAAI8R,EAAYzF,aAAa/Q,EAAIkT,EAAWrH,OAASoH,EAAWjT,EAC5DoT,EAAgB,SAChBD,EAAsBqD,EAAYzF,kBAEjC,GAAIyF,EAAYhK,UAAUxM,EAAIkT,EAAWpH,IAAMmH,EAAWjT,EAC3DoT,EAAgB,MAChBD,EAAsBqD,EAAYhK,eAEjC,GAAIgK,EAAYnF,WAAWtR,EAAImT,EAAWvH,KAAOsH,EAAWlT,EAC7DqT,EAAgB,OAChBD,EAAsBqD,EAAYnF,gBAEjC,GAAImF,EAAY9F,YAAY3Q,EAAImT,EAAWtH,MAAQqH,EAAWlT,EAC/DqT,EAAgB,QAChBD,EAAsBqD,EAAY9F,gBAEjC,CACD,IAAI+F,EAAQjR,KAAK6G,IAAI4G,EAAWjT,EAAIwW,EAAYhK,UAAUxM,GACtD4L,EAAQpG,KAAK6G,IAAI4G,EAAWlT,EAAIyW,EAAY9F,YAAY3Q,GACxD8L,EAASrG,KAAK6G,IAAI4G,EAAWjT,EAAIwW,EAAYzF,aAAa/Q,GAC1D2L,EAAOnG,KAAK6G,IAAI4G,EAAWlT,EAAIyW,EAAYnF,WAAWtR,GACtD2W,EAAUxV,OAAOyV,UACrBD,EAAUD,EACVrD,EAAgB,MAChBD,EAAsBqD,EAAYhK,UAC9BkK,EAAU9K,IACV8K,EAAU9K,EACVwH,EAAgB,QAChBD,EAAsBqD,EAAY9F,aAElCgG,EAAU7K,IACV6K,EAAU7K,EACVuH,EAAgB,SAChBD,EAAsBqD,EAAYzF,cAElC2F,EAAU/K,IAEVyH,EAAgB,OAChBD,EAAsBqD,EAAYnF,YAG1CtF,EAAOrH,MAAQyO,EACfpH,EAAOP,UAAY4H,EACnB,IAAIxG,EAAWsB,GAAUsI,EAAarI,GAAqBpC,EAAOP,YAClEO,EAAOrH,MAAQkG,GAAgB6B,EAAKnD,EAAMyC,EAAOrH,MAAOkI,EAAUtD,IAASmD,EAAIhC,eAiDnF,SAAgBmM,GAAUjU,EAAGkU,GACzB,IAAIC,GAAM/W,EAAG8W,EAAE9W,EAAGC,EAAG2C,EAAE3C,GAEnB+W,GADKzI,GAAM0I,WAAWrU,EAAGmU,GACpBxI,GAAM0I,WAAWF,EAAGD,IACzBI,EAAK3I,GAAM0I,WAAWH,EAAGlU,GACzBuB,EAAMsB,KAAK0R,KAAKH,EAAKE,GAezB,OAdA/S,EAAY,IAANA,EAAYsB,KAAK2R,GACnBxU,EAAE5C,EAAI8W,EAAE9W,EACJ4C,EAAE3C,EAAI6W,EAAE7W,IACRkE,EAAM,IAAMA,GAKZA,EADAvB,EAAE3C,EAAI6W,EAAE7W,EACF,IAAMkE,EAGN,IAAMA,EAGbA,EAGX,SAAgBgK,GAAUkJ,EAAK5L,GAC3B,IAAI9G,EACJ,OAAQ8G,GACJ,IAAK,OACD9G,EAAQ0S,EAAI/F,WACZ,MACJ,IAAK,MACD3M,EAAQ0S,EAAI5K,UACZ,MACJ,IAAK,QACD9H,EAAQ0S,EAAI1G,YACZ,MACJ,IAAK,SACDhM,EAAQ0S,EAAIrG,aAGpB,OAAOrM,EA4DX,SAASkO,GAAelO,EAAOiL,EAAOpP,GAElC,OADa+N,GAAMM,UAAUlK,EAAOnE,EAAOoP,GAI/C,SAAgB/E,GAAgB6B,EAAKlC,EAAQmC,EAAKC,EAAK0K,GACnD3K,GAAQ3M,EAAG2M,EAAI3M,EAAGC,EAAG0M,EAAI1M,GACzB2M,GAAQ5M,EAAG4M,EAAI5M,EAAGC,EAAG2M,EAAI3M,GACzB,IACIsX,EAIAlC,EACAG,EANAhV,EAAQ+N,GAAMsI,UAAUjK,EAAKD,GAG7B6K,EAAUF,EAAQ5K,EAAIhC,cAAgBgC,EAAI1C,cAC1CmL,EAAWmC,EAAQ5K,EAAIkB,cAAgBlB,EAAIgB,cAG3C/I,EAAQ2S,GAAsB,eAAb5K,EAAI7H,KAAwB8H,EAAMC,EACrC2B,GAAMM,UAAUlC,EAAKnM,EAAOiF,KAAKmJ,IAAI4I,EAAQjC,WAAWjU,OAAS,EAAGkW,EAAQjC,WAAWhU,MAAQ,IACjHgW,EAAQC,EACR,IAAIC,EAAOC,IAAaF,EAAQrB,gBAAiBqB,EAAQzS,QAASyS,EAAQxS,QAAS2H,GAC/EgL,EAAOD,IAAaF,EAAQrB,gBAAiBqB,EAAQzS,QAASyS,EAAQxS,QAAS4H,GACnF,GAAiB,eAAbF,EAAI7H,KAAuB,CAEvB4S,EAAKzX,IAAM2X,EAAK3X,IACZyX,EAAKxX,EAAI0X,EAAK1X,EACdwX,EAAKxX,GAHI,EAMTwX,EAAKxX,GANI,GASbwX,EAAKxX,IAAM0X,EAAK1X,IACZwX,EAAKzX,EAAI2X,EAAK3X,EACdyX,EAAKzX,GAXI,EAcTyX,EAAKzX,GAdI,GAiBjB2M,EAAM+K,GAAYF,EAAQrB,gBAAiBqB,EAAQzS,QAASyS,EAAQxS,QAASyS,OAE5E,CACaH,EAAQ/I,GAAMsI,UAAUlK,EAAKC,GAAO2B,GAAMsI,UAAUjK,EAAKD,GACvE,GAAI2K,EAAO,CACP,IAAIM,EAAUrJ,GAAMsI,UAAUlK,EAAKC,GACnCA,EAAM2B,GAAMM,WAAY7O,EAAG4M,EAAI5M,EAAGC,EAAG2M,EAAI3M,GAAK2X,EAASnS,KAAKmJ,IAAI4I,EAAQjC,WAAWhU,MAAOiW,EAAQjC,WAAWjU,aAE5G,CACD,IAAIuW,EAAUtJ,GAAMsI,UAAUjK,EAAKD,GACnCA,EAAM4B,GAAMM,WAAY7O,EAAG2M,EAAI3M,EAAGC,EAAG0M,EAAI1M,GAAK4X,EAASpS,KAAKmJ,IAAI4I,EAAQjC,WAAWhU,MAAOiW,EAAQjC,WAAWjU,UAGjHkW,aAAmBM,IAAeN,EAAQpY,MAC1CoW,EAAgB+B,EAAM1B,YAChB0B,EAAMnY,KAAK2Y,MAAM,KAAKtY,OAAS,GAAM8X,EAAMnY,KAAK2Y,MAAM,KAAKtY,OAAS,IAAQ,IAC9E+V,EAAcA,EAAc/V,QAAU+V,EAAc,OAInD9I,EAAIgB,eAAiBhB,EAAIkB,iBAC1ByH,EAAO,IAAIC,GAAKkC,EAAQhN,OAAOxK,EAAImV,EAASqC,EAAQhN,OAAOvK,EAAIkV,EAASqC,EAAQjC,WAAWhU,MAAQ,EAAI4T,EAASqC,EAAQjC,WAAWjU,OAAS,EAAI6T,KAEpJK,EAAgBH,GAAQA,EAAKI,QAASJ,EAAKK,SAAUL,EAAK3D,YAAa2D,EAAKhE,YAAcwE,GAAU2B,EAASA,EAAQ5V,UACvG4T,EAAc/V,QAAU+V,EAAc,IAE3CA,EAAc/V,OAE3B,OAAOmW,IADa1V,GAAIyM,EAAI3M,EAAGG,GAAIwM,EAAI1M,EAAGG,GAAIwM,EAAI5M,EAAGK,GAAIuM,EAAI3M,GACnBuV,GAAe,EAAM7Q,IAAUgI,EAE7E,SAASuH,GAAgBtL,EAASjE,EAAOiQ,GASrC,OARAjQ,EAAM3E,EAAIyF,KAAKC,MAAgB,IAAVf,EAAM3E,GAAW,IACtC2E,EAAM1E,EAAIwF,KAAKC,MAAgB,IAAVf,EAAM1E,GAAW,IAClC2U,EACAhM,EAAQqL,YAActP,EAGtBiE,EAAQmB,YAAcpF,EAEnBA,EAGX,SAAgBiR,GAAsBD,EAAa3F,EAAKgI,EAASrT,GAC7D,IACIuL,EADAzQ,EAASuQ,EAAIvQ,OAEb6D,GACApD,GAAI8P,EAAI,GAAGhQ,EAAGG,GAAI6P,EAAI,GAAG/P,EAAGG,GAAI4P,EAAI,GAAGhQ,EACvCK,GAAI2P,EAAI,GAAG/P,GAEXgY,EAAeC,GAAiBvC,EAAarS,GAKjD,GAJI2U,IAEA/H,EAAM3B,GAAM2G,eAAe+C,EAActT,IAEzCwT,MAAMjI,IAAQA,EAAM,EACpB,IAAK,IAAIxQ,EAAI,EAAGA,EAAID,EAAS,EAAGC,IAAK,CAKjC,IAAI0Y,EAAYF,GAAiBvC,EAJjCrS,GACIpD,GAAI8P,EAAItQ,GAAGM,EAAGG,GAAI6P,EAAItQ,GAAGO,EACzBG,GAAI4P,EAAItQ,EAAI,GAAGM,EAAGK,GAAI2P,EAAItQ,EAAI,GAAGO,IAGrC,GAAImY,EAAW,CAEX,IAAIC,EAAO9J,GAAM2G,eAAekD,EAAWzT,GAK3C,IAJIwT,MAAMjI,IAAQA,EAAMmI,KACpBnI,EAAMmI,EACNJ,EAAeG,GAEflI,GAAO,GAAKA,GAAO,EACnB,OAKhB,OAAO+H,EAEX,SAASC,GAAiBI,EAAUC,GAChC,IAQIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7Y,EACAC,EACAK,EACAC,EACAuY,EACAC,EACAC,EACAC,EACA7T,EAtBAlF,EAAKoY,EAASpY,GACdC,EAAKmY,EAASnY,GACdC,EAAKkY,EAASlY,GACdC,EAAKiY,EAASjY,GACd6Y,EAAKX,EAASrY,GACdiZ,EAAKZ,EAASpY,GACdiZ,EAAKb,EAASnY,GACdiZ,EAAKd,EAASlY,GAqBlB,OALAmY,EAAKnY,EAAKF,EACVuY,EAAKxY,EAAKE,EACVwY,EAAMxY,EAAKD,EAAOD,EAAKG,EACvByY,EAAON,EAAKU,EAAOR,EAAKS,EAAMP,EAC9BG,EAAOP,EAAKY,EAAOV,EAAKW,EAAMT,EAClB,IAAPE,GAAqB,IAAPC,GAAaO,GAASR,EAAIC,GAClC,MAEXN,EAAKY,EAAKF,EACVR,EAAKO,EAAKE,EACVP,EAAMO,EAAKD,EAAOD,EAAKG,EACvB/Y,EAAMmY,EAAKvY,EAAOyY,EAAKxY,EAAM0Y,EAC7BtY,EAAMkY,EAAKrY,EAAOuY,EAAKtY,EAAMwY,EACjB,IAAPvY,GAAqB,IAAPC,GAAc+Y,GAAShZ,EAAIC,GACnC,KAGG,IADdyY,EAASR,EAAKG,EAAOF,EAAKC,GAEf,MAGPO,EADAD,EAAQ,GACEA,EAAQ,EAGTA,EAAQ,EAErBC,EAAS,EACT7T,EAAOsT,EAAKG,EAAOF,EAAKC,EAEpB5Y,EADAoF,EAAM,GACDA,EAAM6T,GAAUD,GAGhB5T,EAAM6T,GAAUD,EAEzB5T,EAAOqT,EAAKG,EAAOJ,EAAKK,EAEpB5Y,EADAmF,EAAM,GACDA,EAAM6T,GAAUD,GAGhB5T,EAAM6T,GAAUD,GAEhBhZ,EAAGA,EAAGC,EAAGA,KAEtB,SAASqZ,GAASC,EAAGC,GACjB,OAASD,EAAIC,GAAM,EAkhBvB,SAASzH,GAAoBvH,EAAQe,EAAQqE,GACzC,OAAQrE,EAAOE,WACX,IAAK,OACGF,EAAO5G,MAAM3E,EAAIwK,EAAOoB,OACxBgE,EAASrE,EAAO5G,MAAM3E,EAAIwK,EAAOoB,KAAQgE,EAAUrE,EAAO5G,MAAM3E,EAAIwK,EAAOoB,KAAQgE,EAASA,GAEhG,MACJ,IAAK,QACGrE,EAAO5G,MAAM3E,EAAIwK,EAAOqB,QACxB+D,EAASpF,EAAOqB,MAAQN,EAAO5G,MAAM3E,EAAK4P,EAAUpF,EAAOqB,MAAQN,EAAO5G,MAAM3E,EAAK4P,EAASA,GAElG,MACJ,IAAK,MACGrE,EAAO5G,MAAM1E,EAAIuK,EAAOuB,MACxB6D,EAASrE,EAAO5G,MAAM1E,EAAIuK,EAAOuB,IAAO6D,EAAUrE,EAAO5G,MAAM1E,EAAIuK,EAAOuB,IAAO6D,EAASA,GAE9F,MACJ,IAAK,SACGrE,EAAO5G,MAAM1E,EAAIuK,EAAOsB,SACxB8D,EAASpF,EAAOsB,OAASP,EAAO5G,MAAM1E,EAAK2P,EAAUpF,EAAOsB,OAASP,EAAO5G,MAAM1E,EAAK2P,EAASA,GAI5G,OAAOA,EAGX,SAAgBoC,GAAwBzG,EAAQS,GAC5C,IAAIlC,EACJ,OAAQyB,EAAOE,WACX,IAAK,OACL,IAAK,QACD,IAAIgO,GAAWzZ,EAAGgM,EAAOrH,MAAM3E,EAAGC,EAAGsL,EAAO5G,MAAM1E,GAClD6J,EAAuByE,GAAMhC,OAAOhB,EAAO5G,MAAO8U,IAAWlL,GAAMhC,OAAOP,EAAOrH,MAAO8U,IACnFlO,EAAO5G,MAAOqH,EAAOrH,QAAU4G,EAAO5G,MAAO8U,EAAQzN,EAAOrH,OACjE,MACJ,IAAK,MACL,IAAK,SACD,IAAInD,GAAWxB,EAAGuL,EAAO5G,MAAM3E,EAAGC,EAAG+L,EAAOrH,MAAM1E,GAClD6J,EAAuByE,GAAMhC,OAAOhB,EAAO5G,MAAOnD,IAAW+M,GAAMhC,OAAOP,EAAOrH,MAAOnD,IACnF+J,EAAO5G,MAAOqH,EAAOrH,QAAU4G,EAAO5G,MAAOnD,EAAQwK,EAAOrH,OAGzE,OAAOmF,EAEX,SAASmI,GAAwBrJ,EAAS2C,EAAQS,EAAQ4D,EAAO8J,GACxD9J,IACDA,EAAQ,IAEZ,IAEIwC,EACA3Q,EAGAkY,EANAvP,EAAUxB,EAAQuB,kBAIlByP,EAAQ5N,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EACtC6Z,EAAQ7N,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAE1C,IAAKyZ,IAAUjU,KAAK6G,IAAIsN,GAAS,MAASnU,KAAK6G,IAAIuN,GAAS,YAC/B5W,IAArB+I,EAAOP,UAEP,OADuBF,EAAO5G,MAAOqH,EAAOrH,OAIpD,QAA8B1B,IAA1B2F,EAAQ8B,eAA+BjF,KAAK6G,IAAIsN,IAAU,IAAMnU,KAAK6G,IAAIuN,IAAU,GAAI,CAWvF,GAV0B,SAArBtO,EAAOE,WAA6C,UAArBF,EAAOE,UACnChG,KAAK6G,IAAIuN,GAAS,KAClBtO,EAAOE,UAAaF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,UAI/DwF,KAAK6G,IAAIsN,GAAS,KAClBrO,EAAOE,UAAaF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,SAGpEyF,KAAK6G,IAAIsN,GAAS,IAAMnU,KAAK6G,IAAIuN,GAAS,GAC1C,OAAO7H,GAAwBzG,EAAQS,GAGvC4D,GAAS,EAqDjB,MAlDyB,SAArBrE,EAAOE,WAA6C,UAArBF,EAAOE,WACb,UAArBF,EAAOE,gBACkBxI,IAArB+I,EAAOP,WAAgD,UAArBO,EAAOP,YACzCmE,EAAQnK,KAAKmJ,IAAIrD,EAAO5G,MAAM3E,EAAGgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM3E,EAAI4P,GAEpErE,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,QAAiBiD,IAAZmH,IACnCwF,GAASA,UAIY3M,IAArB+I,EAAOP,WAAgD,SAArBO,EAAOP,YACzCmE,EAAQrE,EAAO5G,MAAM3E,EAAIyF,KAAKyK,IAAI3E,EAAO5G,MAAM3E,EAAGgM,EAAOrH,MAAM3E,GAAK4P,IAEpErE,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,QAAiBiD,IAAZmH,GAA8C,SAArBmB,EAAOE,aACnEmE,GAASA,IAGjB+J,EAAO3N,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EACrCmS,EAAeS,GAAetH,EAAO5G,MAAOiL,EAAO,GAEtC,KADb+J,EAAO3N,EAAOrH,MAAM1E,EAAImS,EAAanS,KAEjCwB,EAAOoR,GAAeT,EAAcpG,EAAOrH,MAAM1E,EAAImS,EAAanS,EAAG,MAG/C,QAArBsL,EAAOE,WAA4C,WAArBF,EAAOE,YACjB,WAArBF,EAAOE,eACkBxI,IAArB+I,EAAOP,WAAgD,WAArBO,EAAOP,YACzCmE,EAAQnK,KAAKmJ,IAAIrD,EAAO5G,MAAM1E,EAAG+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM1E,EAAI2P,SAI/C3M,IAArB+I,EAAOP,WAAgD,QAArBO,EAAOP,YACzCmE,EAAQrE,EAAO5G,MAAM1E,EAAIwF,KAAKyK,IAAI3E,EAAO5G,MAAM1E,EAAG+L,EAAOrH,MAAM1E,GAAK2P,IAEpErE,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,QAAkBgD,IAAZmH,GAA+C,QAArBmB,EAAOE,aACrEmE,GAASA,IAGjB+J,EAAO3N,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EAEjCoS,GADA7G,EAAOE,UACQoH,GAAetH,EAAO5G,MAAOiL,EAAO,KAM1C,KADb+J,EAAO3N,EAAOrH,MAAM3E,EAAIoS,EAAapS,KAEjCyB,EAAOoR,GAAeT,EAAcpG,EAAOrH,MAAM3E,EAAIoS,EAAapS,EAAG,KAGhE,IAAT2Z,GAEIpO,EAAO5G,MACPqH,EAAOrH,QAIX4G,EAAO5G,MACPyN,EACA3Q,EACAuK,EAAOrH,OAiEf,SAASwN,GAAwB5G,EAAQS,EAAQkG,EAAS4H,EAAShD,QACrD,IAANA,IAAgBA,EAAI,IACxB,IAAI1E,EA2BJ,YA1BgBnP,IAAZiP,GACA3G,EAAOI,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GACrDE,EAAOL,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,IAG5B,WAArBP,EAAOE,UACHO,EAAOpK,QAAQmK,IAAMR,EAAO3J,QAAQkK,QAAUE,EAAOpK,QAAQmK,IAAMR,EAAO3J,QAAQkK,OAAS,KAC3FgL,GAAK9K,EAAOpK,QAAQmK,IAAMR,EAAO3J,QAAQkK,QAAU,GAG7B,QAArBP,EAAOE,UACRO,EAAOpK,QAAQkK,OAASP,EAAO3J,QAAQmK,KAAOR,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,OAAS,KAC3FgL,GAAKvL,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,QAAU,GAG7B,UAArBP,EAAOE,UACRO,EAAOpK,QAAQgK,KAAOL,EAAO3J,QAAQiK,OAASG,EAAOpK,QAAQgK,KAAOL,EAAO3J,QAAQiK,MAAQ,KAC3FiL,GAAK9K,EAAOpK,QAAQgK,KAAOL,EAAO3J,QAAQiK,OAAS,GAG7B,SAArBN,EAAOE,WACRO,EAAOpK,QAAQiK,MAAQN,EAAO3J,QAAQgK,MAAQL,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,MAAQ,KAC3FiL,GAAKvL,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,OAAS,GAIvDN,EAAOE,WACX,IAAK,OACDqL,EAoKZ,SAAuBvL,EAAQS,EAAQkG,EAASN,GACxCrG,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAAOI,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,MAC/EL,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,MAAQI,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,OACxD,WAArBG,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC/D2R,GAAarG,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,KAExB,QAArBI,EAAOP,WAAuBF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IACjE2R,GAAarG,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,MAEtDgG,GAAarG,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,WAG5B3I,IAAZiP,GAAqC,QAAZA,GAA2C,WAArBlG,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC/G2R,GAAanM,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,YAEpC5I,IAAZiP,GAAqC,WAAZA,GACV,QAArBlG,EAAOP,WAAuBO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAC5D2R,GAAanM,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,OAGtD+F,GAAarG,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAGrD,OAAOgG,EA3LKmI,CAAcxO,EAAQS,EAAQkG,EAAS4E,GAC3C1E,EAAeS,GAAetH,EAAO5G,MAAOmS,EAAG,KAC/C,MACJ,IAAK,QACDA,EAyLZ,SAAwBvL,EAAQS,EAAQvM,EAAQyS,GACxC3G,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQG,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,OAClFN,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,OAASG,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,MACzD,WAArBI,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC/DR,GAAUuM,EAAOpK,QAAQiK,MAAQN,EAAO3J,QAAQiK,MAEtB,QAArBG,EAAOP,WAAuBF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IACjER,GAAUuM,EAAOpK,QAAQiK,MAAQN,EAAO3J,QAAQiK,OAEpDpM,GAAU8L,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,QAG7BiD,IAAZiP,GAAqC,QAAZA,GAA2C,WAArBlG,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC/GR,GAAUgG,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,YAEjC5I,IAAZiP,GAAqC,WAAZA,GAA8C,QAArBlG,EAAOP,WAAuBO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EACpHR,GAAUgG,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,OAGnDpM,GAAU8L,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAGtD,OAAOP,EA/MKua,CAAezO,EAAQS,EAAQ8K,EAAG5E,GACtCE,EAAeS,GAAetH,EAAO5G,MAAOmS,EAAG,GAC/C,MACJ,IAAK,MACDA,EAmIZ,SAAsBvL,EAAQS,EAAQiO,EAAQxa,GACtC8L,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,IAAMC,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,KAC5ER,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,KAAOC,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,QACvD,UAArBE,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAC9DP,GAAU8L,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQmK,IAEpB,SAArBC,EAAOP,WAAwBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAClEP,GAAU8L,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQmK,KAElDtM,GAAU8L,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,UAG1B9I,IAAXgX,GAAmC,SAAXA,GAA2C,UAArBjO,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAC7GP,GAAUgG,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQkK,aAElC7I,IAAXgX,GAAmC,UAAXA,GAA4C,SAArBjO,EAAOP,WACzDO,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EACjCP,GAAUgG,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQkK,QAGnDrM,GAAU8L,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAGlD,OAAOtM,EA1JKya,CAAa3O,EAAQS,EAAQkG,EAAS4E,GAC1C1E,EAAeS,GAAetH,EAAO5G,MAAOmS,EAAG,KAC/C,MACJ,IAAK,SACDA,EAyMZ,SAAyBvL,EAAQS,EAAQ4F,EAAWM,GAC5C3G,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASE,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,QACrFP,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,QAAUE,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,KAC1D,UAArBC,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAC9D4R,GAAa5F,EAAOpK,QAAQkK,OAASP,EAAO3J,QAAQkK,OAE1B,SAArBE,EAAOP,WAAwBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAClE4R,GAAa5F,EAAOpK,QAAQkK,OAASP,EAAO3J,QAAQkK,QAExD8F,GAAarG,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,QAGjCgD,IAAZiP,GAAqC,SAAZA,GACL,UAArBlG,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAC9D4R,GAAanM,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQkK,aAEpC7I,IAAZiP,GAAqC,UAAZA,GACV,SAArBlG,EAAOP,WAAwBO,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EAC7D4R,GAAanM,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQkK,QAGtD8F,GAAarG,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAG1D,OAAO2R,EAjOKuI,CAAgB5O,EAAQS,EAAQ8K,EAAG5E,GACvCE,EAAeS,GAAetH,EAAO5G,MAAOmS,EAAG,IAiBvD,YAfgB7T,IAAZ6W,EACAA,EAAQha,KAAKsS,GAGb0H,GACIvO,EAAO5G,MACPyN,GAGiB,QAArB7G,EAAOE,WAA4C,WAArBF,EAAOE,UACrC2O,GAAahI,EAAc,aAAc7G,EAAQS,EAAQ8N,GAE/B,UAArBvO,EAAOE,WAA8C,SAArBF,EAAOE,WAC5C2O,GAAahI,EAAc,WAAY7G,EAAQS,EAAQ8N,GAEpDA,EAEX,SAASM,GAAazN,EAAK0N,EAAaxI,EAAKC,EAAKnQ,GAC9C,IAAI8X,EACAjY,EACA8Y,EACgB,eAAhBD,GACAxI,EAAIlG,QAAWC,KAAM,EAAGC,MAAO,GAAIE,IAAK,EAAGD,OAAQ,IACnDgG,EAAInG,QAAWC,KAAM,EAAGC,MAAO,GAAIE,IAAK,EAAGD,OAAQ,KAE9B,aAAhBuO,IACLxI,EAAIlG,QAAWC,KAAM,GAAIC,MAAO,EAAGE,IAAK,GAAID,OAAQ,GACpDgG,EAAInG,QAAWC,KAAM,GAAIC,MAAO,EAAGE,IAAK,GAAID,OAAQ,IAExD,IAAI8D,EAAQ,GACZ,GAAoB,eAAhByK,EAA8B,CAC9B,OAAQvI,EAAIrG,WACR,IAAK,OACD,GAAIoG,EAAIjQ,QAAQiK,MAAQgG,EAAIlG,OAAOE,MAAQiG,EAAIlQ,QAAQgK,KAAOkG,EAAInG,OAAOC,OACpEkG,EAAIlQ,QAAQgK,KAAOiG,EAAIjQ,QAAQiK,MAAQ+D,GAAUiC,EAAIjQ,QAAQmK,IAAM8F,EAAIlG,OAAOI,KAAO+F,EAAInN,MAAM1E,GAC5F4R,EAAIjQ,QAAQkK,OAAS+F,EAAIlG,OAAOG,QAAUgG,EAAInN,MAAM1E,GAAK,CAC7D,IAAIsa,EAAM9U,KAAKyK,IAAIzK,KAAK6G,IAAIwF,EAAIlQ,QAAQgK,KAAOiG,EAAIjQ,QAAQiK,OAAS,EAAG,IACvE+D,EAAQiC,EAAIjQ,QAAQiK,MAAQc,EAAI3M,EAAIua,OAIhC3K,EADmB,QAAlBiC,EAAIpG,WAAuBkB,EAAI1M,EAAI6R,EAAInN,MAAM1E,GAAyB,WAAlB4R,EAAIpG,WAA0BkB,EAAI1M,EAAI6R,EAAInN,MAAM1E,EAC7FwF,KAAKyK,IAAI4B,EAAIlQ,QAAQgK,KAAMe,EAAI3M,GAAK2M,EAAI3M,EAAI,GAE/C2M,EAAI3M,GAAK6R,EAAIjQ,QAAQgK,KAAOiG,EAAIlG,OAAOC,MAAQe,EAAI3M,GAAK6R,EAAIjQ,QAAQiK,MAAQgG,EAAIlG,OAAOE,MACpFpG,KAAKyK,IAAI4B,EAAIlQ,QAAQgK,KAAMiG,EAAIjQ,QAAQgK,MAAQe,EAAI3M,EAAI,GAGvD8R,EAAIlQ,QAAQgK,KAAOe,EAAI3M,EAAI,GAG3C,MACJ,IAAK,QACD,GAAI6R,EAAIjQ,QAAQgK,KAAOiG,EAAIlG,OAAOC,KAAOkG,EAAIlQ,QAAQiK,MAAQiG,EAAInG,OAAOE,QACnEgG,EAAIjQ,QAAQgK,KAAOkG,EAAIlQ,QAAQiK,MAAQ+D,GAAUiC,EAAIjQ,QAAQmK,IAAM8F,EAAIlG,OAAOI,KAAO+F,EAAInN,MAAM1E,GAC5F4R,EAAIjQ,QAAQkK,OAAS+F,EAAIlG,OAAOG,QAAUgG,EAAInN,MAAM1E,GAAK,CACzDsa,EAAM9U,KAAKyK,IAAIzK,KAAK6G,IAAIuF,EAAIjQ,QAAQgK,KAAOkG,EAAIlQ,QAAQiK,OAAS,EAAG,IACvE+D,EAAQiC,EAAIjQ,QAAQgK,KAAOe,EAAI3M,EAAIua,OAI/B3K,EADmB,QAAlBiC,EAAIpG,WAAuBkB,EAAI1M,EAAI6R,EAAInN,MAAM1E,GAAyB,WAAlB4R,EAAIpG,WAA0BkB,EAAI1M,EAAI6R,EAAInN,MAAM1E,EAC7FwF,KAAKmJ,IAAIkD,EAAIlQ,QAAQiK,MAAOc,EAAI3M,GAAK2M,EAAI3M,EAAI,GAEhD2M,EAAI3M,GAAK6R,EAAIjQ,QAAQgK,KAAOiG,EAAIlG,OAAOC,MAAQe,EAAI3M,GAAK6R,EAAIjQ,QAAQiK,MAAQgG,EAAIlG,OAAOE,MACpFpG,KAAKmJ,IAAIkD,EAAIlQ,QAAQiK,MAAOgG,EAAIjQ,QAAQiK,OAASc,EAAI3M,EAAI,GAGzD8R,EAAIlQ,QAAQiK,MAAQc,EAAI3M,EAAI,GAMpDwB,EAASqR,GADT4G,EAAS5G,GAAelG,EAAKiD,EAAO,GACJkC,EAAInN,MAAM1E,EAAI0M,EAAI1M,EAAG,IACrDqa,EAASxI,EAAInN,WAEZ,GAAoB,aAAhB0V,EAA4B,CACjC,OAAQvI,EAAIrG,WACR,IAAK,MACD,GAAIoG,EAAIjQ,QAAQkK,OAAS+F,EAAIlG,OAAOG,OAASgG,EAAIlQ,QAAQmK,IAAM+F,EAAInG,OAAOI,MACrE+F,EAAIlQ,QAAQmK,IAAM8F,EAAIjQ,QAAQkK,OAAS8D,GAAUiC,EAAIjQ,QAAQgK,KAAOiG,EAAIlG,OAAOC,MAAQkG,EAAInN,MAAM3E,GAC9F6R,EAAIjQ,QAAQiK,MAAQgG,EAAIlG,OAAOE,OAASiG,EAAInN,MAAM3E,GAAK,CACvDua,EAAM9U,KAAKyK,IAAIzK,KAAK6G,IAAIwF,EAAIlQ,QAAQmK,IAAM8F,EAAIjQ,QAAQkK,QAAU,EAAG,IACvE8D,EAAQiC,EAAIjQ,QAAQkK,OAASa,EAAI1M,EAAIsa,OAIjC3K,EADmB,SAAlBiC,EAAIpG,WAAwBkB,EAAI3M,EAAI8R,EAAInN,MAAM3E,GAAyB,UAAlB6R,EAAIpG,WAAyBkB,EAAI3M,EAAI8R,EAAInN,MAAM3E,EAC7FyF,KAAKyK,IAAI4B,EAAIlQ,QAAQmK,IAAKY,EAAI1M,GAAK0M,EAAI1M,EAAI,GAE9C0M,EAAI1M,GAAK4R,EAAIjQ,QAAQmK,IAAM8F,EAAIlG,OAAOI,KAAOY,EAAI1M,GAAK4R,EAAIjQ,QAAQkK,OAAS+F,EAAIlG,OAAOG,OACnFrG,KAAKyK,IAAI4B,EAAIlQ,QAAQmK,IAAK8F,EAAIjQ,QAAQmK,KAAOY,EAAI1M,EAAI,GAGrD6R,EAAIlQ,QAAQmK,IAAMY,EAAI1M,EAAI,GAG1C,MACJ,IAAK,SACD,GAAI4R,EAAIjQ,QAAQmK,IAAM8F,EAAIlG,OAAOI,IAAM+F,EAAIlQ,QAAQkK,OAASgG,EAAInG,OAAOG,SAClE+F,EAAIjQ,QAAQmK,IAAM+F,EAAIlQ,QAAQkK,OAAS8D,GAAUiC,EAAIjQ,QAAQgK,KAAOiG,EAAIlG,OAAOC,MAAQkG,EAAInN,MAAM3E,GAC9F6R,EAAIjQ,QAAQiK,MAAQgG,EAAIlG,OAAOE,OAASiG,EAAInN,MAAM3E,GAAK,CACvDua,EAAM9U,KAAKyK,IAAIzK,KAAK6G,IAAIuF,EAAIjQ,QAAQmK,IAAM+F,EAAIlQ,QAAQkK,QAAU,EAAG,IACvE8D,EAAQiC,EAAIjQ,QAAQmK,IAAMY,EAAI1M,EAAIsa,OAI9B3K,EADmB,SAAlBiC,EAAIpG,WAAwBkB,EAAI3M,EAAI8R,EAAInN,MAAM3E,GAAyB,UAAlB6R,EAAIpG,WAAyBkB,EAAI3M,EAAI8R,EAAInN,MAAM3E,EAC7FyF,KAAKmJ,IAAIkD,EAAIlQ,QAAQkK,OAAQa,EAAI1M,GAAK0M,EAAI1M,EAAI,GAEjD0M,EAAI1M,GAAK4R,EAAIjQ,QAAQmK,IAAM8F,EAAIlG,OAAOI,KAAOY,EAAI1M,GAAK4R,EAAIjQ,QAAQkK,OAAS+F,EAAIlG,OAAOG,OACnFrG,KAAKmJ,IAAIkD,EAAIlQ,QAAQkK,OAAQ+F,EAAIjQ,QAAQkK,QAAUa,EAAI1M,EAAI,GAG3D6R,EAAIlQ,QAAQkK,OAASa,EAAI1M,EAAI,GAMrDuB,EAASqR,GADT4G,EAAS5G,GAAelG,EAAKiD,EAAO,IACJkC,EAAInN,MAAM3E,EAAI2M,EAAI3M,EAAG,GACrDsa,EAASxI,EAAInN,MAEjBhD,EAAO7B,KAAK2Z,GACZ9X,EAAO7B,KAAK0B,GACZG,EAAO7B,KAAKwa,GAoIhB,SAASvK,GAAWxE,EAAQS,GACxB,IAAIP,EAAYF,EAAOE,UACvBF,EAAOE,UAAYO,EAAOP,UAC1BO,EAAOP,UAAYA,EACnB,IAAI9G,EAAQ4G,EAAO5G,MACnB4G,EAAO5G,MAAQqH,EAAOrH,MACtBqH,EAAOrH,MAAQA,EACf,IAAI9C,EAAS0J,EAAO3J,QACpB2J,EAAO3J,QAAUoK,EAAOpK,QACxBoK,EAAOpK,QAAUC,EAErB,SAAgByI,GAAiB3F,EAAO9C,EAAQ2I,EAAQgQ,GACpD,IACIC,OAAyBxX,IAAXpB,EAAuB2I,EAAS3I,EAC9C6Y,EAAMD,EAAYhF,QAClBkF,EAAMF,EAAY/E,SAClBkF,EAAQH,EAAY/I,YACpBmJ,EAAOJ,EAAYpJ,WACnBpH,EAASwQ,EAAYxQ,OACrBzJ,EAAQqW,GAAU5M,EAAQtF,GAC1BmW,EAAUjE,GAAU5M,EAAQ2Q,GAC5BG,EAAQlE,GAAU5M,EAAQ4Q,GAC1BG,EAAQnE,GAAU5M,EAAQyQ,GAC1BO,EAAUpE,GAAU5M,EAAQ0Q,GAsDhC,OArDIna,EAAQwa,GAASxa,EAAQya,EACb,MAWPza,GAASsa,GAAWta,EAAQua,EACrB,SAYPva,GAASua,GAASva,GAASwa,EACpB,OAYA,QAwDpB,SAAgBE,GAAe3X,GAC3B,IAAIyS,EAQJ,OAPAA,EAAczS,EAAIiU,QAAQ2D,SAAS,GAAG3Q,OACJ,SAA9BjH,EAAI6X,gBAAgBhU,OACpB4O,EAAYqF,UAAU9X,EAAIiU,QAAQ2D,SAAS,GAAG3Q,QAEhB,SAA9BjH,EAAI+X,gBAAgBlU,OACpB4O,EAAYqF,UAAU9X,EAAIiU,QAAQ2D,SAAS,GAAG3Q,QAE3CwL,EAEX,SAAgB5H,GAAqB3C,GACjC,OAAQA,GACJ,IAAK,MACD,MAAO,SACX,IAAK,SACD,MAAO,MACX,IAAK,OACD,MAAO,QACX,IAAK,QACD,MAAO,OAEf,MAAO,OCr5EX,SAAgBY,GAAa7B,EAAQ7I,EAAQ4Z,GACzC,IAAItR,EAASO,EAAOP,OAEhBuR,EAAOD,EAAgB,GAAM,KAAO,EAAI,GAAK/Q,EAAOlJ,OAASkJ,EAAOjJ,QACpEuZ,EAAUU,EACVT,EAAS,IAAMS,EACfR,EAAQD,EAAS,EAAIS,EACrBP,EAAU,IAAMO,EAChBhb,EAAQqW,GAAUlV,EAAQsI,GAC9B,OAAIzJ,EAAQsa,GAAWta,EAAQua,EACR,MAEdva,EAAQua,GAASva,EAAQwa,EACX,QAEdxa,EAAQwa,GAASxa,EAAQya,EACX,SAGA,OAG3B,SAAgBQ,GAAc7S,GAC1B,OAAKA,EAAQ8F,WAAa9F,EAAQpI,MAQtC,SAAgBkb,GAAgB3R,EAAakK,EAAaxI,GACtD,IAAIiD,EAAW,GACXC,GAAU3O,EAAG,EAAGC,EAAG,GASvB,OARKwL,IAEGA,EADAhG,KAAK6G,IAAI2H,EAAYjU,EAAI+J,EAAY/J,GAAKyF,KAAK6G,IAAI2H,EAAYhU,EAAI8J,EAAY9J,GACnE8J,EAAY/J,EAAIiU,EAAYjU,EAAI,QAAU,OAG1C+J,EAAY9J,EAAIgU,EAAYhU,EAAI,SAAW,OAGvDwL,GACJ,IAAK,SACL,IAAK,MACDiD,EAAWjJ,KAAKyK,IAA8C,IAA1CzK,KAAK6G,IAAIvC,EAAY9J,EAAIgU,EAAYhU,GAAWyO,GACpEC,GAAU3O,EAAG+J,EAAY/J,EAAGC,EAAG8J,EAAY9J,GAAmB,WAAdwL,EAAyBiD,GAAYA,IACrF,MACJ,IAAK,QACL,IAAK,OACDA,EAAWjJ,KAAKyK,IAA8C,IAA1CzK,KAAK6G,IAAIvC,EAAY/J,EAAIiU,EAAYjU,GAAW0O,GACpEC,GAAU3O,EAAG+J,EAAY/J,GAAmB,UAAdyL,EAAwBiD,GAAYA,GAAWzO,EAAG8J,EAAY9J,GAGpG,OAAO0O,EAKX,SAAgBgN,GAAgBC,EAAYC,EAAeC,EAAenH,EAAUpH,GAChF,IAAIwO,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EAEPtN,EAAMzN,QAAQoM,EAAUmB,SAASmN,EAAeD,GAChDrO,EAAUmB,SAASoN,EAAeD,GAClCtO,EAAUmB,SAASiG,EAAUmH,IAHZ,GAIrB,GAAY,IAARlN,EACA,IAAK,IAAIlP,EAAI,EAAGA,GAAKkP,EAAKlP,IAAK,CAC3B,IAAIyc,EAAIzc,EAAIkP,EACR5O,GAAK,EAAImc,IAAM,EAAIA,IAAM,EAAIA,GAAKP,EAAW5b,EAC7C,EAAImc,GAAK,EAAIA,IAAM,EAAIA,GAAKN,EAAc7b,EAC1C,EAAImc,EAAIA,GAAK,EAAIA,GAAKL,EAAc9b,EACpCmc,EAAIA,EAAIA,EAAIxH,EAAS3U,EACrBC,GAAK,EAAIkc,IAAM,EAAIA,IAAM,EAAIA,GAAKP,EAAW3b,EAC7C,EAAIkc,GAAK,EAAIA,IAAM,EAAIA,GAAKN,EAAc5b,EAC1C,EAAIkc,EAAIA,GAAK,EAAIA,GAAKL,EAAc7b,EACpCkc,EAAIA,EAAIA,EAAIxH,EAAS1U,EACf,IAANP,GACAqc,EAAOE,EAAOjc,EACdgc,EAAOE,EAAOjc,IAGd8b,EAAOtW,KAAKyK,IAAIlQ,EAAG+b,GACnBC,EAAOvW,KAAKyK,IAAIjQ,EAAG+b,GACnBC,EAAOxW,KAAKmJ,IAAI5O,EAAGic,GACnBC,EAAOzW,KAAKmJ,IAAI3O,EAAGic,IAI/B,OACIlc,EAAG+b,EAAM9b,EAAG+b,EAAMza,MAAO0a,EAAOF,EAAMza,OAAQ4a,EAAOF,EACrDpQ,KAAMmQ,EAAMhQ,IAAKiQ,EAAMnQ,MAAQkQ,GAAQE,EAAOF,GAAQjQ,OAASkQ,GAAQE,EAAOF,GAC9E/R,QAAUjK,GAAI+b,GAAQE,EAAOF,IAAS,EAAG9b,GAAI+b,GAAQE,EAAOF,IAAS,IAM7E,SAAgBI,GAAa7O,EAAWqO,EAAYnC,EAAQjY,EAAQmT,EAAUjV,EAAGkP,GAC7E,IAAIhK,GAAO5E,EAAG,EAAGC,EAAG,GAChBkc,EAAIzc,EAAIkP,EACR5O,GAAK,EAAImc,IAAM,EAAIA,IAAM,EAAIA,GAAKP,EAAW5b,EAC7C,EAAImc,GAAK,EAAIA,IAAM,EAAIA,GAAK1C,EAAOzZ,EACnC,EAAImc,EAAIA,GAAK,EAAIA,GAAK3a,EAAOxB,EAC7Bmc,EAAIA,EAAIA,EAAIxH,EAAS3U,EACzB4E,EAAG5E,EAAIA,EACP,IAAIC,GAAK,EAAIkc,IAAM,EAAIA,IAAM,EAAIA,GAAKP,EAAW3b,EAC7C,EAAIkc,GAAK,EAAIA,IAAM,EAAIA,GAAK1C,EAAOxZ,EACnC,EAAIkc,EAAIA,GAAK,EAAIA,GAAK3a,EAAOvB,EAC7Bkc,EAAIA,EAAIA,EAAIxH,EAAS1U,EAEzB,OADA2E,EAAG3E,EAAIA,EACA2E,EC1WX,SAAgByX,GAAU9S,GACtB,GAAIA,EAAM,CAWN,OATKA,aAAgB+S,IAAqB/S,aAAgBgT,GAC9ChT,EAAKiT,YAAcC,wBAAsBC,OAE5CnT,aAAgBoT,GACbpT,EAAKiT,YAAcI,uBAAqBF,OAGxCnT,EAAKiT,YAAcK,kBAAgBH,OAInD,OAAO,EAGX,SAAgBI,GAAQvT,GACpB,GAAIA,EAAM,CAcN,OAZKA,aAAgB+S,IAAqB/S,aAAgBgT,GAC9ChT,EAAKiT,YAAcC,wBAAsBM,KAE5CxT,aAAgBoT,GACbpT,EAAKiT,YAAcI,uBAAqBG,KAE3CxT,aAAgByT,GACb,EAGAzT,EAAKiT,YAAcK,kBAAgBE,KAInD,OAAO,EAGX,SAAgBE,GAAuB1T,EAAMrB,GAQzC,OANIqB,aAAgBoT,GACRpT,EAAKiT,YAAcI,uBAAqBM,cAGxC3T,EAAKiT,YAAcK,kBAAgBK,cA8BnD,SAAgBC,GAAiB5P,GAC7B,OAAOA,EAAUiP,YAAcI,uBAAqBQ,cAGxD,SAAgBC,GAAiB9P,GAC7B,OAAOA,EAAUiP,YAAcI,uBAAqBU,cAGxD,SAAgBC,GAAoBhQ,GAChC,OAAOA,EAAUiP,YAAcI,uBAAqBY,iBAGxD,SAAgBC,GAAUlU,GACtB,OAAKA,aAAgB+S,IAAqB/S,aAAgBgT,GAC/ChT,EAAKiT,YAAcC,wBAAsBiB,OAGzCnU,EAAKiT,YAAcK,kBAAgBa,OAIlD,SAAgBC,GAAUpU,GACtB,OAAOA,EAAKiT,YAAcK,kBAAgBe,OAG9C,SAAgBC,GAAatU,GACzB,OAAKA,aAAgBuU,IAAUvU,EAAKiT,YAAcK,kBAAgBkB,UACvDxU,EAAKiT,YAAcK,kBAAgBkB,UAEvC,EAGX,SAAgBC,GAAiB7R,GAC7B,OAAIA,GAAQA,EAAKqQ,eACPrQ,EAAKqQ,YAAcyB,kBAAgBC,OAAU/R,EAAKqQ,YAAcyB,kBAAgBF,UAC3E5R,EAAKqQ,YAAcyB,kBAAgBF,UAG3C,EAGX,SAAgBI,GAAc5U,GAC1B,OAAKA,aAAgBuU,IAAUvU,EAAKiT,YAAcK,kBAAgBuB,WACvD7U,EAAKiT,YAAcK,kBAAgBuB,WAEvC,EAGX,SAAgBC,GAAkBlS,GAC9B,OAAIA,GAAQA,EAAKqQ,eACPrQ,EAAKqQ,YAAcyB,kBAAgBC,OAAU/R,EAAKqQ,YAAcyB,kBAAgBG,WAC3EjS,EAAKqQ,YAAcyB,kBAAgBG,WAG3C,EAGX,SAAgBE,GAAU/U,EAAMkC,GAC5B,IAAI8S,EAAc,EA8BlB,OA7BIhV,aAAgB+S,IAAmB/S,aAAgBgT,GACnDgC,EAAchV,EAAKiT,YAAcC,wBAAsB+B,OAElDjV,IACa,cAAdkC,EACA8S,EAAchV,EAAKiT,YAAcK,kBAAgB4B,gBAE9B,SAAdhT,EACL8S,EAAchV,EAAKiT,YAAcK,kBAAgB6B,WAE9B,cAAdjT,EACL8S,EAAchV,EAAKiT,YAAcK,kBAAgB8B,gBAE9B,UAAdlT,EACL8S,EAAchV,EAAKiT,YAAcK,kBAAgB+B,YAE9B,UAAdnT,EACL8S,EAAchV,EAAKiT,YAAcK,kBAAgBgC,YAE9B,cAAdpT,EACL8S,EAAchV,EAAKiT,YAAcK,kBAAgBiC,gBAE9B,SAAdrT,EACL8S,EAAchV,EAAKiT,YAAcK,kBAAgBkC,WAE9B,cAAdtT,IACL8S,EAAchV,EAAKiT,YAAcK,kBAAgBmC,kBAGlDT,EAGX,SAAgBU,GAAa1V,GAQzB,OANIA,aAAgBoT,GACRpT,EAAKiT,YAAcI,uBAAqBsC,UAGxC3V,EAAKiT,YAAcK,kBAAgBqC,UAKnD,SAAgBC,GAAajX,GACzB,OAAOA,EAAQsU,YAAc4C,qBAAmBC,eAwBpD,SAAgBC,GAAgBC,GAC5B,OAAOA,EAAMC,KAAOC,eAAaC,aAOrC,SAAgBC,GAAWJ,GACvB,OAAOA,EAAMC,KAAOC,eAAaG,QAGrC,SAAgBC,GAAkBN,GAC9B,OAAOA,EAAMC,KAAOC,eAAaK,eAGrC,SAAgBC,GAAYR,GACxB,OAAOA,EAAMC,KAAOC,eAAaO,SAGrC,SAAgBC,GAAYV,GACxB,OAAQA,EAAMC,KAAOC,eAAaC,cAAkBH,EAAMC,KAAOC,eAAaS,eAWlF,SAAgBC,GAAgBZ,GAC5B,OAAOA,EAAM/C,YAAc4C,qBAAmBgB,gBAelD,SAAgBC,GAAgBnY,GAC5B,OAASA,EAAQsU,YAAc4C,qBAAmBkB,aAGtD,SAAgBC,GAAgBhB,GAC5B,OAjBJ,SAA+BA,GAC3B,OAAOA,EAAM/C,YAAc4C,qBAAmBoB,UAgBvCC,CAAelB,IAAWA,EAAMmB,eAAiBC,gBAAcC,WAuB1E,SAAgBC,GAAQ1U,EAAMjE,GAC1B,OAAOiE,EAAKqQ,YAAcyB,kBAAgB6C,KAG9C,SAAgBC,GAAQ5U,EAAMjE,GAC1B,OAAOiE,EAAKqQ,YAAcyB,kBAAgBlB,KAY9C,SAAgBiE,GAAcC,GAC1B,QAAMA,EAAkBC,iBAAeC,oBAQ3C,SAAgBC,GAAkBH,GAC9B,SAAKA,EAAkBC,iBAAeG,uBClT1C,SAAgBC,GAAuBrY,EAASM,EAAMrB,GAClD,IAAIqZ,EACAC,EAAW,SACe,UAA1BjY,EAAKnC,MAAMma,WACXA,EAAahY,EAAKnC,MAAMqa,MAEO,gBAA1BlY,EAAKnC,MAAMma,WAChBA,EAAahY,EAAKnC,MAAMsa,YAEO,cAA1BnY,EAAKnC,MAAMma,aAChBA,EAAahY,EAAKnC,MAAMua,WAE5BpY,EACKqY,WAAc/c,KAAM,QAASwV,YAAa,YAC/C9Q,EAAKiT,aAAeK,kBAAgBgF,QAAUhF,kBAAgBiF,cACxDjF,kBAAgBa,OAASb,kBAAgB2B,QAC/CjV,EAAKL,OACD6Y,KAAMxY,EAAKL,MAAM6Y,KAAMC,YAAa,QACpCC,YAAa,KAEjB1Y,EAAK4R,YACD5R,EAAK2Y,WACLV,EAAW,QAEf,IAAIW,EAAS,IAAIrE,GAAK5V,EAAS,SAC3BW,GAAIU,EAAKV,GAAK,mBACduZ,cAEQvZ,GAAI,OAAQI,QAASsY,EAAWc,KAChCpJ,QAAUjZ,EAAG,GAAKC,EAAG,KAAQ0L,QAAUC,KAAM,GAAIC,MAAO,IACxD3C,OACIoZ,MAAM,EAAMC,SAAU,GAAIC,MAAOjB,EAAWrY,MAAMsZ,MAAOT,KAAMR,EAAWrY,MAAM6Y,KAChFU,aAAcjB,KAGlBvY,QAAS,KAAOM,EAAKnC,MAAMma,WAAa,KAAM5V,QAAUC,KAAM,GAAIC,MAAO,IACzEhD,GAAI,QAASK,OACTqZ,SAAUhB,EAAWrY,MAAMqZ,SAC3BC,MAAOjB,EAAWrY,MAAMsZ,MAAOT,KAAMR,EAAWrY,MAAM6Y,KACtDU,aAAcjB,GACfvI,QAAUjZ,EAAG,GAAKC,EAAG,IAAOuc,YAAaC,wBAAsBiG,WAG1ElG,aAAcK,kBAAgBgF,QAAUhF,kBAAgBiF,cAAgBjF,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB2B,QACxImE,kBAAmB,UACnBC,oBAAqB,UACrB1Z,OAAS6Y,KAAMxY,EAAKL,MAAM6Y,KAAMC,YAAa,eAC9C,GAWH,OAVA9Z,EAAQ2a,WAAWV,GACnBja,EAAQ4a,MAAMhjB,KAAKqiB,GACnB5Y,EAAK4R,SAASrb,KAAKqiB,EAAOtZ,IAW9B,SAA8BU,EAAMrB,EAASqZ,EAAYC,GACrD,GAA8B,gBAA1BjY,EAAKnC,MAAMma,WAA8B,CACzC,IAAIwB,EAASxB,EAAWyB,QACxB,GAAID,GAAUA,EAAOtjB,OAAQ,CACzBwjB,GAAa1Z,EAAMrB,GAEnB,IAAK,IADDgb,EAAa,GACRxjB,EAAI,EAAGA,EAAIqjB,EAAOtjB,OAAQC,IAAK,CACpC,IAAIsjB,EAAUD,EAAOrjB,GAIrB,GAHqB,KAAjBsjB,EAAQX,OACRa,GAAcF,EAAQX,MAEtB3iB,IAAMqjB,EAAOtjB,OAAQ,CACrB,IAAIyJ,EAAQia,GAAS5Z,EAAMyZ,GACvBrJ,EAAO,IAAImE,GAAK5V,EAAS,SACzBW,GAAIua,KAAa,aACjBhB,cAEQvZ,GAAI,OAAQI,QAASia,EAAYjK,QAAUjZ,EAAG,EAAGC,EAAG,IACpDiJ,OACIoZ,MAAM,EAAMC,SAAUrZ,EAAMqZ,SAAUC,MAAOtZ,EAAMsZ,MAAOT,KAAM7Y,EAAM6Y,KACtEU,aAAcjB,GAElB7V,QAAUC,KAAM,GAAIC,MAAO,GAAK+W,oBAAqB,SAE1DD,kBAAmB,UAAWC,oBAAqB,UACtD1Z,OAAS6Y,KAAMxY,EAAKL,MAAM6Y,KAAMC,YAAa,YAAaS,aAAcjB,GACxEhF,aAAcK,kBAAgBgF,QAAUhF,kBAAgBiF,cAAgBjF,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB2B,QACxI6E,UAAW,KACZ,GACHnb,EAAQ2a,WAAWlJ,GACnBzR,EAAQ4a,MAAMhjB,KAAK6Z,GACnBpQ,EAAK4R,SAASrb,KAAK6Z,EAAK9Q,IACxBqa,EAAa,GACTF,EAAQM,aAAgB5jB,IAAMqjB,EAAOtjB,OAAS,GAC9CwjB,GAAa1Z,EAAMrB,UAMlC,CACD,IAAIqb,EAAahC,EAAWgC,WAC5B,GAAIA,EAAW9jB,OAAQ,CACnB,IAAI+jB,EAAgB,GACpBP,GAAa1Z,EAAMrB,GACnB,IAAK,IAAIxI,EAAI,EAAGA,EAAI6jB,EAAW9jB,OAAQC,IAAK,CACxC,IAAI+jB,OAAO,EACPC,EAAYH,EAAW7jB,GAkB3B,GAhBI+jB,EADAC,EAAUC,OAA+B,WAAtB,EAAYA,MACxB,KAEFD,EAAUC,OAA6B,YAApBD,EAAUC,MAC3B,IAEFD,EAAUC,OAA6B,cAApBD,EAAUC,MAC3B,IAGA,IAEY,KAAnBD,EAAUrB,MACNoB,IACAD,GAAiBC,EAAO,IAAMC,EAAUrB,KAAO,MAAaqB,EAAU7e,MAG1EnF,IAAM6jB,EAAW9jB,OAAQ,CACzB,IAAIyJ,EAAQia,GAAS5Z,EAAMma,GACvB/J,EAAO,IAAImE,GAAK5V,EAAS,SACzBW,GAAIua,KAAa,eAAgBla,OAAS6Y,KAAMxY,EAAKL,MAAM6Y,KAAMC,YAAa,aAC9EI,cAEQvZ,GAAI,OAAQI,QAASua,EAAevK,QAAUjZ,EAAG,EAAGC,EAAG,IACvDiJ,OACIoZ,MAAM,EAAMC,SAAUrZ,EAAMqZ,SAAUC,MAAOtZ,EAAMsZ,MAAOT,KAAM7Y,EAAM6Y,KACtEU,aAAcjB,GAElB7V,QAAUC,KAAM,GAAIC,MAAO,GAAK+W,oBAAqB,SAE1DD,kBAAmB,UAAWC,oBAAqB,UACtDpG,aAAcK,kBAAgBgF,QAAUhF,kBAAgBiF,cAAgBjF,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB2B,QACxI6E,UAAW,KACZ,GACHnb,EAAQ2a,WAAWlJ,GACnBzR,EAAQ4a,MAAMhjB,KAAK6Z,GACnBpQ,EAAK4R,SAASrb,KAAK6Z,EAAK9Q,IACxB2a,EAAgB,GACZE,EAAUJ,aAAgB5jB,IAAM6jB,EAAW9jB,OAAS,GACpDwjB,GAAa1Z,EAAMrB,OAjGvC0b,CAAcra,EAAMrB,EAASqZ,EAAYC,GAyG7C,SAAgCjY,EAAMrB,EAASqZ,EAAYC,GACvD,GAAID,EAAWsC,SAAWtC,EAAWsC,QAAQpkB,OAAQ,CACjD,IAAIokB,EAAUtC,EAAWsC,QACzBZ,GAAa1Z,EAAMrB,GAInB,IAAK,IAHD4b,EAAe,GACfC,EAAa,GACbN,OAAO,EACF/jB,EAAI,EAAGA,EAAImkB,EAAQpkB,OAAQC,IAAK,CACrC,IAAIskB,EAASH,EAAQnkB,GAarB,GAXI+jB,EADAO,EAAOL,OAA0B,WAAjBK,EAAOL,MAChB,KAEFK,EAAOL,OAA0B,YAAjBK,EAAOL,MACrB,IAEFK,EAAOL,OAA0B,cAAjBK,EAAOL,MACrB,IAGA,IAEPK,EAAOC,WACP,IAAK,IAAI5kB,EAAI,EAAGA,EAAI2kB,EAAOC,WAAWxkB,OAAQJ,IACtC2kB,EAAOC,WAAW5kB,GAAGwF,KACrBif,GAAgBE,EAAOC,WAAW5kB,GAAGgjB,KAAO,IAAM2B,EAAOC,WAAW5kB,GAAGwF,KAGvEif,GAAgBE,EAAOC,WAAW5kB,GAAGgjB,KAErChjB,IAAM2kB,EAAOC,WAAWxkB,OAAS,IACjCqkB,GAAgB,KAS5B,GALoB,KAAhBE,EAAO3B,MACHoB,IACAM,GAAcN,EAAO,IAAMO,EAAO3B,KAAO,IAAMyB,EAAe,OAAwBE,EAAOnf,MAGjGnF,IAAMmkB,EAAQpkB,OAAQ,CACtB,IAAIyJ,EAAQia,GAAS5Z,EAAMya,GACvBrK,EAAO,IAAImE,GAAK5V,EAAS,SACzBW,GAAIua,KAAa,cAAeT,kBAAmB,UAAWC,oBAAqB,UACnFR,cAEQvZ,GAAI,OAAQI,QAAS8a,EAAY9K,QAAUjZ,EAAG,EAAGC,EAAG,IACpDiJ,OACIoZ,MAAM,EAAMC,SAAUrZ,EAAMqZ,SAAUC,MAAOtZ,EAAMsZ,MAAOT,KAAM7Y,EAAM6Y,KACtEU,aAAcjB,GAElB7V,QAAUC,KAAM,GAAIC,MAAO,GAAK+W,oBAAqB,SAG7D1Z,OAAS6Y,KAAMxY,EAAKL,MAAM6Y,KAAMC,YAAa,aAAeqB,UAAW,GACvE7G,aAAcK,kBAAgBgF,QAAUhF,kBAAgBiF,cAAgBjF,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB2B,UACzI,GACHtW,EAAQ2a,WAAWlJ,GACnBzR,EAAQ4a,MAAMhjB,KAAK6Z,GACnBpQ,EAAK4R,SAASrb,KAAK6Z,EAAK9Q,IACxBkb,EAAa,GACTC,EAAOV,aAAgB5jB,IAAMmkB,EAAQpkB,OAAS,GAC9CwjB,GAAa1Z,EAAMrB,MArKnCgc,CAAgB3a,EAAMrB,EAASqZ,EAAYC,GAC3CjY,EAAKxE,QAAUwE,EAAKxE,QACpBwE,EAAKvE,QAAUuE,EAAKvE,QACpBuE,EAAKL,MAAM6Y,KAAOxY,EAAKL,MAAM6Y,KAC7BxY,EAAK4a,YAAc5a,EAAK4a,YACxBjc,EAAQ2a,WAAWtZ,GACZN,EAsKX,SAAgBga,GAAamB,EAAOlc,GAChC,IAAImc,EAAa,IAAIvG,GAAK5V,EAAS,SAC/BW,GAAIua,KAAa,QAAS9hB,OAAQ,EAAGkb,YAAaK,kBAAgBgF,SAAYhF,kBAAsB,OACpG8F,kBAAmB,UAAWC,oBAAqB,YACpD,GACH1a,EAAQ2a,WAAWwB,GACnBnc,EAAQ4a,MAAMhjB,KAAKukB,GACnBD,EAAMjJ,SAASrb,KAAKukB,EAAWxb,IAGnC,SAAgBsa,GAASiB,EAAO7a,GAC5B,IAAI+a,KACApb,EAAQK,EAAKL,MAMjB,OALAob,EAASvC,KAAuB,gBAAf7Y,EAAM6Y,KAA0B7Y,EAAM6Y,KAAOqC,EAAMlb,MAAM6Y,KAC1EuC,EAAS9B,MAAQtZ,EAAMsZ,MACvB8B,EAAS/B,SAA+B,KAAnBrZ,EAAMqZ,SAAmBrZ,EAAMqZ,SAAW6B,EAAMlb,MAAMqZ,SAC3E+B,EAAStC,YAAqC,UAAtB9Y,EAAM8Y,YAA2B9Y,EAAM8Y,YAAcoC,EAAMlb,MAAM8Y,YACzFsC,EAASrC,YAAqC,IAAtB/Y,EAAM+Y,YAAqB/Y,EAAM+Y,YAAcmC,EAAMlb,MAAM+Y,YAC5EqC,ECzOX,SAAgBC,GAAmBrc,EAAS3E,EAAK8F,EAAUmb,GACvD,IAAI5C,EAEA6C,GAAc,EAClB,GAAIC,GAAuBxc,EAAS3E,GAAK,GAAO,CAC5C2E,EAAQyc,uBAAsB,GAE9B,IAAInN,GADJoK,EAAY1Z,EAAQ0c,UAAUrhB,EAAIshB,WACVrN,QACxB,GAAIoK,GAA0C,WAA7BA,EAAUA,UAAU/c,KAAmB,CACpD,GAAK2f,GAAmBhN,EAAQhN,OAAOxK,GAAKqJ,EAASrJ,GAAKwX,EAAQhN,OAAOqB,OAASxC,EAASrJ,GACtFwX,EAAQhN,OAAOvK,GAAKoJ,EAASpJ,GAAKuX,EAAQhN,OAAOsB,QAAUzC,EAASpJ,EAAM,CAC3E,IACI6kB,OAAgB,EAChB7kB,EAAIuX,EAAQhN,OAAOvK,EACnBD,EAAIwX,EAAQhN,OAAOxK,EACnB+kB,EAAW7c,EAAQ0c,UAAUhD,EAAUiD,WAAajD,EAExD,GAAmB,aADPmD,EAAS3d,MACXvC,KACN4f,EAAcO,GAA8BpD,EAAWmD,EAAUxhB,EAAK2E,GAAS,OAE9E,CACD,IAAI+c,EAAW/c,EAAQ0c,UAAUhD,EAAUiD,WAAajD,EACpDsD,EAAUD,EAAS7d,MACvB0d,EAAgBG,EAASzN,QACrBA,EAAQjC,WAAWhU,MAAQiW,EAAQxB,YAAYzU,SAC5CiW,EAAQhN,OAAOxK,EAAIwX,EAAQxB,YAAYhW,UACfiD,IAAvB2e,EAAUuD,UACIF,EAASG,QAAQ3lB,OAAS,EACxCqlB,EAAcO,kBAAkBzD,EAAU0D,YAAa9N,EAAQxB,YAAYzU,OAAO,GACtD,eAAxB2jB,EAAQ7K,aAAgC6K,EAAQK,WAChDC,GAAoBP,EAAU/c,EAASsP,EAASoK,EAAU0D,aAE9DG,GAAqBvd,EAAS+c,GAC9B/c,EAAQwd,KAAKT,EAAUjlB,EAAIwX,EAAQhN,OAAOxK,EAAGC,EAAIuX,EAAQhN,OAAOvK,IAGhEiI,EAAQyd,MAAM/D,EAAY,GAAMpK,EAAQxB,YAAYzU,MAAQiW,EAAQjC,WAAWhU,OAASiW,EAAQjC,WAAWhU,MAAS,EAAKiW,EAAQxB,YAAYhW,EAAIwX,EAAQhN,OAAOxK,GAAOA,EAAG,EAAGC,EAAG,KAAUD,EAAG,EAAGC,EAAG,MAGvMuX,EAAQjC,WAAWjU,OAASkW,EAAQxB,YAAY1U,UAC7CkW,EAAQhN,OAAOvK,EAAIuX,EAAQxB,YAAY/V,UACfgD,IAAvB2e,EAAUuD,UACVL,EAAcc,gBAAgBhE,EAAUuD,SAAU3N,EAAQxB,YAAY1U,QAAQ,GAC9E4G,EAAQwd,KAAKT,EAAUjlB,EAAIwX,EAAQhN,OAAOxK,EAAGC,EAAIuX,EAAQhN,OAAOvK,IAGhEiI,EAAQyd,MAAM/D,EAAW,EAAI,GAAMpK,EAAQxB,YAAY1U,OAASkW,EAAQjC,WAAWjU,QAAUkW,EAAQjC,WAAWjU,OAAYkW,EAAQxB,YAAY/V,EAAIuX,EAAQhN,OAAOvK,GAAOD,EAAG,GAAKC,EAAG,IAAQD,EAAG,GAAKC,EAAG,MAKxNiI,EAAQ2d,QAAQtiB,IAChBuiB,MAA0C5d,GAE9CA,EAAQyc,uBAAsB,GAElC,OAAOF,EAEX,SAAgBsB,GAAuB7d,EAAS3E,EAAK8F,EAAUmb,GAC3D,IAAI5C,EACJ,GACI8C,GAAuBxc,EAAS3E,GAAK,GAAO,CAC5C2E,EAAQyc,uBAAsB,GAE9B,IAAInN,GADJoK,EAAY1Z,EAAQ0c,UAAUrhB,EAAIshB,WACVrN,QACxB,GAAIoK,GAA0C,WAA7BA,EAAUA,UAAU/c,QAC3B2f,GAAqBhN,EAAQhN,OAAOxK,GAAKqJ,EAASrJ,GAAKwX,EAAQhN,OAAOqB,OAASxC,EAASrJ,GACzFwX,EAAQhN,OAAOvK,GAAKoJ,EAASpJ,GAAKuX,EAAQhN,OAAOsB,QAAUzC,EAASpJ,GAAO,CAC5E,IAAI+lB,EAAUC,GAAY1iB,GAC1B2E,EAAQge,iBACRC,GAAqBje,EAAS3E,GAC9BA,EAAIshB,SAAW,GACf,IAAIuB,GACAvhB,KAAM,yBAA0BwhB,SAAU,WAC1CC,WAAYN,EAASO,WAAYN,GAAY1iB,IAEjD2E,EAAQse,gBAAgBJ,GACpBle,EAAQue,eAAeC,cACvBxe,EAAQue,eAAeC,aAAc,EACrCxe,EAAQye,oBAO5B,SAAgBC,GAAWrjB,EAAK+hB,EAAauB,GAIzC,IAAK,IAHDxR,EAAO,IAAIC,GACXwR,EAA2B,aAAnBvjB,EAAI6D,MAAMvC,KAClBtB,EAAIiU,QAAQ2D,SAAS,GAAG2L,KAAOvjB,EAAIiU,QAAQsP,KACtCpnB,EAAK,EAAa,EAAI,EAAIA,EAAIonB,EAAKrnB,OAAQC,IAChD2V,EAAKgG,UAAUyL,EAAKpnB,GAAGqnB,MAAMzB,GAAa9a,QAE9C,OAAO6K,EAGX,SAAgB2R,GAAa9e,EAAS3E,GAGlC,IAAK,IAFD4e,EACA8D,KACKpgB,EAAK,EAAGohB,EAAKC,OAAOC,KAAK5jB,GAAMsC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC1D,IAAIuhB,EAAOH,EAAGphB,GACdogB,EAAYmB,GAAQ7jB,EAAI6jB,GAQ5B,OANIC,GAAc9jB,KAASua,MACvBqE,EAAS,IAAIrE,GAAK5V,EAAS,QAAS+d,GAAa,IAC1Cpd,GAAKtF,EAAIsF,GAChBX,EAAQ2a,WAAWV,IAEvBja,EAAQof,oBAAoBnF,GACrBA,EAGX,SAAgBoF,GAAsBrf,EAAS3E,GAC3C,IAAIwS,EACA+M,EACJ,GAAI5a,EAAQsf,eAAeC,aACvB3E,EAAQ5a,EAAQsf,eAAeC,kBAE9B,GAAIvf,EAAQwf,cAAc5E,MAAMrjB,OAAS,GAAKyI,EAAQwf,cAAcC,WAAWloB,OAAS,EAAG,CAExFsW,EADAxS,aAAeyZ,IAAYzZ,EAAIuf,MAAMrjB,OAAS8D,EAAIokB,WAAWloB,SAAW,EAC9D8D,EAAIuf,MAAMrjB,OAAS,EAAK8D,EAAIuf,MAAM,GAAKvf,EAAIokB,WAAW,GAGvDpkB,EAEb2E,EAAQsf,eAAeI,aAAe7R,EACtC,IAAI6L,EAAY1Z,EAAQwf,cAAclQ,QAAQ2D,SAAS,GACvD,GAAIuJ,GAAuBxc,EAAS6N,GAAS,CAWzC+M,EAAQkE,GAAa9e,GATjBW,GAAI,SACJqN,YAAa0L,EAAU1L,YACvBnR,QAAS6c,EAAU7c,QAASC,QAAS4c,EAAU5c,QAC/C6iB,SAAUjG,EAAUiG,SAAUxE,UAAWzB,EAAUyB,UACnDnB,SAAUN,EAAUM,SAAU4F,UAAWlG,EAAUkG,UACnDvmB,MAAOqgB,EAAUrM,WAAWhU,MAC5BD,OAAQsgB,EAAUrM,WAAWjU,OAC7B4H,OAAS6e,gBAAiB,MAAOhG,KAAM,cAAeC,YAAa,UAAWC,YAAa,KAG/F/Z,EAAQsf,eAAeC,aAAe3E,GAG9C,OAAOA,EAGX,SAAgB4B,GAAuBxc,EAAS3E,EAAKykB,GACjD,IAAIC,EAAa,EAAY/f,EAAQ0c,UAAUrhB,EAAIshB,UAC9C3c,EAAQ0c,UAAUrhB,EAAIshB,WAAathB,EACxC,SAAI0kB,IAAcA,EAAWrG,WAMjC,SAAgBsG,GAA0BhgB,EAAS3E,GAC/C,IAAI0kB,EAAa/f,EAAQ0c,UAAUrhB,EAAIshB,UACL,WAA9BoD,EAAWrG,UAAU/c,OACrBtB,EAAIoI,OAAOC,KAAQrI,EAAIwB,QAAUkjB,EAAWzQ,QAAQhN,OAAOxK,EAAKuD,EAAIhC,MAAQ,EAC5EgC,EAAIoI,OAAOI,IAAOxI,EAAIyB,QAAUijB,EAAWzQ,QAAQhN,OAAOvK,EAAKsD,EAAIjC,OAAS,GAEhF4G,EAAQigB,mBAAmB5kB,MACvBhC,MAAOgC,EAAIhC,MAAOD,OAAQiC,EAAIjC,OAC9ByD,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,QACnC2G,QACIC,KAAMrI,EAAIoI,OAAOC,KACjBC,MAAOtI,EAAIoI,OAAOE,MAAOE,IAAKxI,EAAIoI,OAAOI,IACzCD,OAAQvI,EAAIoI,OAAOG,QACpBoK,YAAa3S,EAAI2S,cAEnB+R,EAAWG,SACZH,EAAWzQ,QAAQ6Q,QAAQ,IAAIC,IAC/BL,EAAWzQ,QAAQ+Q,QAAQN,EAAWzQ,QAAQgR,cAGtD,SAASrC,GAAqBje,EAASqB,GACnC,GAAsB,KAAlBA,EAAKsb,SAAiB,CACtB,IAAI4D,EAAiBvgB,EAAQ0c,UAAUrb,EAAKsb,UAC5C,GAAI4D,EAAeL,QAAUK,EAAe5D,SAMxC,IAAK,IALD6D,EAAWxgB,EAAQ0c,UAAU6D,EAAe5D,UAC5C8D,EAAYF,EAAe5f,GAAG+f,MAAMF,EAAS7f,GAAGpJ,QAChDopB,EAAeF,EAASznB,UAAU,EAAGynB,EAASlpB,OAAS,GACvDqpB,EAAQJ,EAASthB,MAAM0hB,MACvBC,OAAO,EACFrpB,EAAI,EAAGA,EAAIopB,EAAMrpB,OAAQC,IAE9B,GADAqpB,EAAOD,EAAMppB,GACTmpB,IAAiBE,EAAKlgB,GACtB,IAAK,IAAIxJ,EAAI,EAAGA,EAAI0pB,EAAK5N,SAAS1b,OAAQJ,IAClC0pB,EAAK5N,SAAS9b,GAAGwJ,KAAOU,EAAKV,KAC7BkgB,EAAK5N,SAAS5L,OAAOlQ,EAAG,GACxBA,KAMpB6I,EAAQ8gB,YAAYzf,IAM5B,SAAgB0f,GAAoB/gB,EAASghB,EAAQ3f,EAAM4f,GACvD,IAAKjhB,EAAQkhB,cAAe,CACxBlhB,EAAQyc,uBAAsB,GAC9B,IAAI+D,OAAW,EACfnf,EAAOrB,EAAQmhB,UAAU9f,EAAKV,KAAOU,EACrC,IAAIgO,GAA0C,IAAjCrP,EAAQ4a,MAAMwG,QAAQ/f,GAAgBA,EAAKV,GAAKU,EAC7D,GAA8B,WAA1B2f,EAAOtH,UAAU/c,KAAmB,CACpC,IAAI+G,EAAQrC,EAAKiO,QAAQzS,QAAUwE,EAAKiO,QAAQjC,WAAWhU,MAAQ,GAC9D2nB,EAAO1R,QAAQzS,QAAUmkB,EAAO1R,QAAQjC,WAAWhU,MAAQ,GAC5DmV,EAASnN,EAAKiO,QAAQxS,QAAUuE,EAAKiO,QAAQjC,WAAWjU,OAAS,GAChE4nB,EAAO1R,QAAQxS,QAAUkkB,EAAO1R,QAAQjC,WAAWjU,OAAS,GACjEiI,EAAKoC,OAAOC,KAAOA,EACnBrC,EAAKoC,OAAOI,IAAM2K,EAEtB,IAAIkL,EAAY1Z,EAAQ0c,UAAUsE,EAAOrgB,IAIzC,GAHK+Y,EAAUzG,WACXyG,EAAUzG,cAE+B,IAAzCyG,EAAUzG,SAASmO,QAAQ/f,EAAKV,IAAY,CAC5Csd,GAAqBje,EAASqB,GAC1BrB,EAAQmhB,UAAU9f,EAAKV,KACvBX,EAAQqhB,eAAehgB,GAE3B,IAAIyc,EAAUC,GAAY1c,GAG1B,GAFArB,EAAQshB,SAAS5H,EAAWrK,GAC5BhO,EAAOrB,EAAQmhB,UAAU9f,EAAKV,IAC1B+Y,EAAUwG,QAAUxG,EAAUiD,SAK9B,IAAK,IAHDiE,GADJJ,EAAWxgB,EAAQ0c,UAAUhD,EAAUiD,WAClBzd,MAAM0hB,MACvBH,EAAY/G,EAAU/Y,GAAG+f,MAAMF,EAAS7f,GAAGpJ,QAC3CgqB,EAAkBd,EAASznB,UAAU,EAAGynB,EAASlpB,OAAS,GACrDC,EAAI,EAAGA,EAAIopB,EAAMrpB,OAAQC,IAC1BkiB,EAAUwG,QAAUqB,IAAoBX,EAAMppB,GAAGmJ,IACjDigB,EAAMppB,GAAGyb,SAASrb,KAAKyJ,GAWnC,GAPArB,EAAQof,oBAAoB/d,GACvBqY,EAAUiD,SAGLsE,GACNnE,GAA8BpD,EAAW8G,EAAUnf,EAAMrB,GAHzDA,EAAQof,oBAAoB1F,KAK1B1Z,EAAQwY,eAAiBC,gBAAc+I,UAAW,CACpD,IAAItD,GACAvhB,KAAM,yBAA0BwhB,SAAU,WAC1CC,WAAYN,EAASO,WAAYN,GAAY1c,IAEjDrB,EAAQse,gBAAgBJ,IAGhCle,EAAQyc,uBAAsB,IAGtC,SAAgBK,GAA8BpD,EAAW+H,EAAUpgB,EAAMrB,EAASsc,GAC9E,IACIoF,EADAtD,EAAaL,GAAYrE,GAEzBiI,GAAgB,EAChB1U,EAAUwU,EAASviB,MAAM+N,QACzB2U,EAAkBlI,EAAUpK,QAAQhN,OACpCuf,EAAuBnI,EAAUpK,QAAQxB,YACzCgU,EAAazgB,EAAKiO,QAAQhN,OAC9B,GAAImf,GAAoC,aAAxBA,EAASviB,MAAMvC,OAC1BilB,EAAgBje,MAAQme,EAAWne,MAAQsJ,GACxC2U,EAAgBhe,OAASke,EAAWle,OAASqJ,GAAU,CAC3D,IAAI8U,EAAON,EAASnS,QAAQ2D,SAAS,GACjCnb,EAAIiqB,EAAKzf,OAAOxK,EAChBC,EAAIgqB,EAAKzf,OAAOvK,EAChBiqB,OAAO,EAaX,GAZIJ,EAAgBje,MAAQme,EAAWne,MAAQsJ,GAC3C4U,EAAqB/pB,GAAK8pB,EAAgB9pB,IAC1CkqB,EAAOF,EAAWne,MAAQie,EAAgBje,MAC1C+d,GAAc,EACdK,EAAK5E,kBAAkBzD,EAAU0D,YAAawE,EAAgBvoB,MAAQ2oB,GAAM,EAAM/U,IAElF2U,EAAgBhe,OAASke,EAAWle,OAASqJ,GAC7C4U,EAAqB9pB,GAAK6pB,EAAgB7pB,IAC1CiqB,EAAOF,EAAWle,OAASge,EAAgBhe,OAC3C8d,GAAc,EACdK,EAAKrE,gBAAgBhE,EAAUuD,SAAU2E,EAAgBxoB,OAAS4oB,GAAM,EAAM/U,MAE5EjN,EAAQwY,eAAiBC,gBAAc+I,YACrClF,IACAtc,EAAQiiB,mBACRN,GAAgB,QAEA5mB,IAAhB2mB,GAA2B,CAC3B,IAAIxD,GACAC,SAAU,WACVxhB,KAAM,EAAgB,mBAAqB,qBAC3CyhB,WAAYA,EAAYC,WAAYN,GAAYrE,IAEpD1Z,EAAQse,gBAAgBJ,GAGhCuD,EAASpoB,MAAQooB,EAASnS,QAAQjW,MAAQ0oB,EAAK1oB,MAC/CooB,EAASroB,OAASqoB,EAASnS,QAAQlW,OAAS2oB,EAAK3oB,OACjD8oB,GAA0BT,GACS,eAA/BA,EAASviB,MAAMiT,aACfmL,GAAoBmE,EAAUzhB,EAAS0Z,EAAUpK,QAASoK,EAAU0D,aAExEG,GAAqBvd,EAASyhB,GAC9BzhB,EAAQwd,KAAKiE,EAAU3pB,EAAIiqB,EAAKzf,OAAOxK,EAAGC,EAAIgqB,EAAKzf,OAAOvK,GAC1DoqB,GAAiBV,EAAUzhB,GAC3BoiB,GAAcX,GAGlB,OCs3CJ,SAAwCzhB,EAASqB,EAAM4L,GACnD,IAAI4T,EAAO7gB,EAAQ0c,UAAUrb,EAAKsb,UAClC,GAAIkE,GAAQA,EAAKX,OAAQ,CACrB,IAAIuB,EAAWzhB,EAAQ0c,UAAUmE,EAAKlE,UAClCoF,EAAON,EAASnS,QAAQ2D,SAAS,GAC7BwO,EAASnS,QAAQhN,OAAOxK,EACxB2pB,EAASnS,QAAQhN,OAAOvK,EAChCgqB,EAAK5E,kBAAkB0D,EAAKzD,YAAa2E,EAAKM,oBAAoBxB,EAAKzD,aAAa/jB,OAAO,EAAM4T,GACjG8U,EAAKrE,gBAAgBmD,EAAK5D,SAAU8E,EAAKO,iBAAiBzB,EAAK5D,UAAU7jB,QAAQ,EAAM6T,GACvF,IAAIsV,EAAS1B,EAAKvR,QACdkT,OAAa,EAEbnhB,EAAKoC,OAAOC,KAAOuJ,IACnB5L,EAAKoC,OAAOC,KAAOuJ,GAEnB5L,EAAKoC,OAAOI,IAAMoJ,IAClB5L,EAAKoC,OAAOI,IAAMoJ,GAEtB,IAAK,IAAIzV,EAAI,EAAGA,EAAI+qB,EAAOtP,SAAS1b,OAAQC,IAAK,CAC7C,IAAI6X,EAAQkT,EAAOtP,SAASzb,GAC5B,GAAI6X,aAAiBoT,GAAQ,CACzB,IAAIC,EAAY1iB,EAAQ0c,UAAUrN,EAAM1O,IACxC,GAAI+hB,EAAUxC,OAAQ,CAClBsC,EAAaE,EAAUpT,QACvB,QAKRkT,IACmC,eAA/Bf,EAASviB,MAAMiT,YACX9Q,EAAKoC,OAAOC,KAAOuJ,EAAUuV,EAAWnV,WAAWhU,QACnDgI,EAAKoC,OAAOC,KAAOuJ,EAAUuV,EAAWnV,WAAWhU,OAInDgI,EAAKoC,OAAOI,IAAMoJ,EAAUuV,EAAWnV,WAAWjU,SAClDiI,EAAKoC,OAAOI,IAAMoJ,EAAUuV,EAAWnV,WAAWjU,SAI9DqoB,EAASnS,QAAQ6Q,QAAQ,IAAIC,GAAKqB,EAASpoB,MAAOooB,EAASroB,SAC3DqoB,EAASnS,QAAQ+Q,QAAQoB,EAASnS,QAAQgR,aAC1Cjf,EAAKxE,QAAUwE,EAAKiO,QAAQzS,QAC5BwE,EAAKvE,QAAUuE,EAAKiO,QAAQxS,QAC5BkD,EAAQigB,mBAAmB5e,MAAYoC,QAAUC,KAAMrC,EAAKoC,OAAOC,KAAMG,IAAKxC,EAAKoC,OAAOI,OAC1Fke,EAAK5B,QAAQ,IAAIC,GAAK2B,EAAK1oB,MAAO0oB,EAAK3oB,SACvC2oB,EAAK1B,QAAQ0B,EAAKzB,aAClBmB,EAASpoB,MAAQooB,EAASnS,QAAQjW,MAAQooB,EAASnS,QAAQ2D,SAAS,GAAG5F,WAAWhU,MAClFooB,EAASroB,OAASqoB,EAASnS,QAAQlW,OAASqoB,EAASnS,QAAQ2D,SAAS,GAAG5F,WAAWjU,QDx6CxFupB,CAAwB3iB,EAASqB,EAAM4L,GAChC0U,EAKX,SAAgBiB,GAAuBliB,EAASmiB,EAAY1hB,EAAUnB,EAAS8iB,EAAOC,GAClF,IAAIC,EAAaC,GAAmBjjB,EAAQU,QAAQC,IACpDX,EAAQkjB,gBAAgBN,uBAAuBliB,EAASsiB,EAAYhjB,EAAQmjB,SAASxc,UAAWkc,EAAY1hB,EAAU2hB,EAAOC,GAGjI,SAAgBK,GAAiBpgB,EAAYc,EAAQ9D,EAASqjB,GAC1D,IAAIhoB,EAAM2H,EACNge,EAAShhB,EAAQ0c,UAAUrhB,EAAIshB,UAC/B2G,EAAetjB,EAAQ0c,UAAUrhB,EAAIshB,UACzC,GAAI7Y,GAAUwf,GAAgBA,EAAa5J,WAA6C,UAAhC4J,EAAa5J,UAAU/c,MAC3EmH,EAAO4V,WAAuC,UAA1B5V,EAAO4V,UAAU/c,MAAqB2mB,EAAa3iB,KAAOmD,EAAO6Y,SAAW,CAChG,IAAIlW,EAAQ6c,EAAahU,QAAQ2D,SAASmO,QAAQ/lB,EAAIiU,SAClD7I,GAAS,IACTzG,EAAQ0c,UAAUrhB,EAAIsF,IAAIgc,SAAW7Y,EAAOnD,GAC5C2iB,EAAahU,QAAQ2D,SAAS5L,OAAOZ,EAAO,IAGpD,GAAI3C,GAAUA,EAAO6Y,UAAYthB,EAAIshB,UAAuB,SAAX0G,GAAqD,UAAhCC,EAAa5J,UAAU/c,KAAkB,CAC3G,IAAI4mB,EAAcvC,EAAO1R,QAAQ2D,SAASmO,QAAQtd,EAAOwL,SACrDkU,EAAcxC,EAAO1R,QAAQ2D,SAASmO,QAAQ/lB,EAAIiU,SAClDmU,GACAF,YAAaA,EAAazf,OAAQA,EAClC0f,YAAaA,EAAangB,OAAQL,GAEtCge,EAAO1R,QAAQ2D,SAAS5L,OAAOmc,EAAa,GAC5CxC,EAAO1R,QAAQ2D,SAAS5L,OAAOkc,EAAa,EAAGloB,EAAIiU,SACnD,IAII4O,GACAvhB,KAAM,4BAA6B0hB,YAJnCkF,YAAaC,EAAa1f,OAAQA,EAClC0f,YAAaD,EAAalgB,OAAQL,GAIlCob,WAAYqF,EAAatF,SAAU,YAEvCne,EAAQue,eAAeD,gBAAgBJ,IC7V/C,SAAgBwF,GAAa3B,EAAM/hB,EAASqB,GACxC,IAAIsiB,KACAzG,KACA0G,EAAQ,EACR1kB,EAAQmC,EAAKnC,MACbiT,EAAoC,eAAtBjT,EAAMiT,YAWxB,GAVIjT,EAAM2kB,QAAU3kB,EAAM4kB,WACtBC,GAAUJ,EAAKzkB,EAAM2kB,OAAOzqB,QAkLpC,SAA4BuqB,EAAKxR,EAAatE,GAC1C,IACIzU,EADA4qB,EAAc,EAEd9kB,EAAQ2O,EAAO3O,MACnB,GAAIykB,EAAIpsB,OAAS,EACb,IAAK,IAAIC,EAAI,EAAGA,EAAImsB,EAAIpsB,OAAQC,IAC5BwsB,GAAeL,EAAInsB,GAAG4B,OAG9B,GAAI+Y,GAKA,GAJIjT,EAAM+kB,OAAO1sB,OAAS,GAAK2H,EAAMme,YACjC2G,GAAe9kB,EAAMme,UACrB0G,GAAUJ,EAAKzkB,EAAMme,YAErBne,EAAM0hB,MAAMrpB,OAAS,EACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI0H,EAAM0hB,MAAMrpB,OAAQC,IACpC4B,EAAS8F,EAAM0hB,MAAMppB,GAAG4B,OACxB4qB,GAAe5qB,EACX5B,IAAM0H,EAAM0hB,MAAMrpB,OAAS,GAAKysB,EAAcnW,EAAOzU,SACrDA,GAAUyU,EAAOzU,OAAS4qB,GAE9BD,GAAUJ,EAAKvqB,QAKvB,GAAI8F,EAAM+kB,OAAO1sB,OAAS,EAEtB,IAAK,IADD2sB,EAAc,EACT1sB,EAAI,EAAGA,EAAI0H,EAAM+kB,OAAO1sB,OAAQC,IAAK,CAC1C,IAAI2sB,EAAcjlB,EAAM+kB,OAAOzsB,GAAGuZ,OAE9BmT,GADM,IAAN1sB,EACe2sB,EAGfA,GAAeD,EAInBF,GADA5qB,EAAS+qB,EAEL3sB,IAAM0H,EAAM+kB,OAAO1sB,OAAS,GAAKysB,EAAcnW,EAAOzU,SACtDA,GAAUyU,EAAOzU,OAAS4qB,GAE9BD,GAAUJ,EAAKvqB,QAInB2qB,GAAUJ,EAAK9V,EAAOzU,QA9N9BgrB,CAAYT,EAAKxR,EAAa9Q,GAmOlC,SAAgC6b,EAAS/K,EAAatE,GAClD,IAEIsW,EACAE,EACAC,EACAntB,EALAotB,EAAa,EACbrlB,EAAQ2O,EAAO3O,MAMnB,GAAIA,EAAM+kB,OAAO1sB,OAAS,GAA2B,eAAtB2H,EAAMiT,YACjC,IAAKhb,EAAI,EAAGA,EAAI+H,EAAM+kB,OAAO1sB,OAAQJ,IACjCgtB,EAAcjlB,EAAM+kB,OAAO9sB,GAAG4Z,OAE1BwT,GADM,IAANptB,EACcgtB,EAGdA,GAAeI,EAGnBF,EAAOG,GAAaL,GAChBhtB,IAAM+H,EAAM+kB,OAAO1sB,OAAS,GAAKgtB,EAAa1W,EAAOxU,QACrDgrB,EAAKhrB,OAASwU,EAAOxU,MAAQkrB,GAEjCrH,EAAQtlB,KAAKysB,QAGhB,GAAKlS,EAkBNkS,EAAOG,GAAa3W,EAAOxU,OAC3B6jB,EAAQtlB,KAAKysB,QAXb,IAPSnlB,EAAMme,WAAane,EAAM+kB,OAAO1sB,OAAS,EAAK2H,EAAM0hB,MAAMrpB,OAC7D,EAAI2H,EAAM0hB,MAAMrpB,OAClB2H,EAAMme,WAAane,EAAM+kB,OAAO1sB,OAAS,IACzCgtB,GAAcrlB,EAAMme,UACpBgH,EAAOG,GAAatlB,EAAMme,WAC1BH,EAAQtlB,KAAKysB,IAEZC,EAAI,EAAGA,EAAIplB,EAAM0hB,MAAMrpB,OAAQ+sB,IAChCC,GAAcrlB,EAAM0hB,MAAM0D,GAAGjrB,MAC7BgrB,EAAOG,GAAatlB,EAAM0hB,MAAM0D,GAAGjrB,OAC/BirB,IAAMplB,EAAM0hB,MAAMrpB,OAAS,GAAKgtB,EAAa1W,EAAOxU,QACpDgrB,EAAKhrB,OAASwU,EAAOxU,MAAQkrB,GAEjCrH,EAAQtlB,KAAKysB,GAzQrBI,CAAgBvH,EAAS/K,EAAa9Q,GACtC0gB,EAAK2C,eAAef,EAAKzG,GACrBhe,EAAM2kB,QAAU3kB,EAAM4kB,aA2D9B,SAA6B/B,EAAM/hB,EAAS6N,GAIxC,IAAK,IAHDmM,EAAW,EACXkD,EAAU6E,EAAKM,oBACfnjB,EAAQ2O,EAAO3O,MACV1H,EAAI,EAAGA,EAAI0lB,EAAQ3lB,OAAQC,IAChCwiB,GAAYkD,EAAQ1lB,GAAG6B,MAE3B,IAAIgI,GACA6Y,cACQnZ,QAAS7B,EAAM2kB,OAAOc,WAAW5jB,UAEzCC,MAAO9B,EAAM2kB,OAAO7iB,MAAQ9B,EAAM2kB,OAAO7iB,WAAQjG,EACjD8B,QAASgR,EAAOhR,QAASC,QAAS+Q,EAAO/Q,QACzCmgB,SAAU,EAAGG,YAAa,EAC1BpD,SAAUA,EACVN,WAAa/c,KAAM,SAAUwV,YAAa,eAE1C7C,EAAUsV,GAAgB5kB,EAAS+hB,EAAMlU,EAAQxM,GAAM,GAC3D0gB,EAAK8C,UAAUvV,EAAS,EAAG,EAAG,EAAGyS,EAAKM,oBAAoB9qB,QA5EtDutB,CAAa/C,EAAM/hB,EAASqB,GAC5BuiB,KAEA1kB,EAAM+kB,OAAO1sB,OAAS,GAAK2H,EAAMme,UAAW,CAC5C,IAAK,IAAIiH,EAAI,EAAGA,EAAIplB,EAAM+kB,OAAO1sB,OAAQ+sB,IACV,KAAvBplB,EAAM+kB,OAAOK,GAAG3jB,KAChBzB,EAAM+kB,OAAOK,GAAG3jB,GAAKua,MAEzB6J,GAAYhD,EAAM/hB,EAASqB,EAAMuiB,EAAOzR,EAAamS,GAEzDV,IAEJ,GAAI1kB,EAAM0hB,MAAMrpB,OAAS,EACrB,IAAS+sB,EAAI,EAAGA,EAAIplB,EAAM0hB,MAAMrpB,OAAQ+sB,IACV,KAAtBplB,EAAM0hB,MAAM0D,GAAG3jB,KACfzB,EAAM0hB,MAAM0D,GAAG3jB,GAAKua,MAExB8J,GAAejD,EAAM/hB,EAASqB,EAAMuiB,EAAOU,EAAGnS,GAC9CyR,IAKZ,SAAgBgB,GAAgB5kB,EAAS+hB,EAAMf,EAAQnT,EAAQ8Q,EAAUsG,EAAS/E,EAAQqC,GACtF,IAAIlhB,EAAO,IAAIuU,GAAK5V,EAAS,QAAS6N,GAAQ,GAC9CxM,EAAKsb,SAAWqE,EAAOrgB,GACvBU,EAAKsd,WAAW,EAChBtd,EAAK4jB,UAAU,EACf5jB,EAAK6e,SAAS,EASd,GAPIqC,IACAlhB,EAFK,EAAY,oBAAsB,oBAE5BkhB,GAEflhB,EAAKiT,eAAiBK,kBAAgBkB,UAAYlB,kBAAgBuB,YAClE7U,EAAKiT,aAAeK,kBAAgBiF,WACpC5Z,EAAQ2a,WAAWtZ,GACnBrB,EAAQ4a,MAAMhjB,KAAKyJ,GACfA,EAAKiO,QAAQ2D,SAAS1b,OAAS,EAAG,CAClC,IAAK,IAAIC,EAAI,EAAGA,EAAI6J,EAAKiO,QAAQ2D,SAAS1b,OAAQC,IAAK,CACnD,IAAI6X,EAAQhO,EAAKiO,QAAQ2D,SAASzb,GAC9B6X,aAAiB6V,KACjB7V,EAAM8V,wBAAyB,GAE/B9V,aAAiB+V,KACjB/V,EAAMgW,mBAAoB,IACrB1G,GAA0C,aAA7BqC,EAAO9hB,MAAMiT,aAA8B8S,GAC3B,aAA7BjE,EAAO9hB,MAAMiT,aAA8B+N,KAC5C7Q,EAAMiW,mBAAoB,EAC1BjW,EAAMkW,uBAIlBlkB,EAAKiO,QAAQ6Q,QAAQ,IAAIC,QAAKrlB,OAAWA,IACzCsG,EAAKiO,QAAQ+Q,QAAQhf,EAAKiO,QAAQgR,aAEtC,OAAOjf,EAAKiO,QAwBhB,SAAgByV,GAAYhD,EAAM/hB,EAAS6N,EAAQ2X,EAAYrT,EAAasT,GACxE,IAEIzL,EAFA0L,EAAW,EACXC,EAAW,EAEXzmB,EAAQ2O,EAAO3O,MACfiT,GACAwT,EAAWF,EACXC,EAAWF,EACXxL,EAAW+H,EAAKM,oBAAoBoD,GAAYpsB,OAGhDqsB,EAAWxmB,EAAM2kB,QAAU3kB,EAAM4kB,UAAY2B,EAAa,EAAIA,EAElE,IAAIG,GACA1L,cACQnZ,QAAS7B,EAAM+kB,OAAOwB,GAAY5B,OAAOc,WAAW5jB,QACpDiN,YAAamE,EAAc,EAAI,MAC/B6H,SAAUA,EAClBrZ,GAAIkN,EAAOlN,GAAKzB,EAAM+kB,OAAOwB,GAAY9kB,GAAK,UAC9C9D,QAASgR,EAAOhR,QAASC,QAAS+Q,EAAO/Q,QACzCkE,MAAO9B,EAAM+kB,OAAOwB,GAAYzkB,MAChCic,SAAUyI,EAAUtI,YAAauI,EACjCjM,WAAa/c,KAAM,SAAUwV,YAAaA,EAAc,aAAe,aAE3EjT,EAAM+kB,OAAOwB,GAAY5B,OAAOljB,GAAKilB,EAAYjlB,GACjD,IAAI2O,EAAUsV,GAAgB5kB,EAAS+hB,EAAMlU,EAAQ+X,GAAa,GAAO,GAAM,EAAO1mB,EAAM+kB,OAAOwB,GAAY9kB,IAC/GohB,EAAK8C,UAAUvV,EAASoW,EAAUC,GAGtC,SAAgBX,GAAejD,EAAM/hB,EAAS6N,EAAQ2X,EAAYK,EAAW1T,GAYzE,IAAK,IAXD2T,EACAlJ,EACAmJ,EAEAC,EACA9mB,EAAQ2O,EAAO3O,MACfuH,EAAQvH,EAAM+kB,OAAO1sB,QAAU,EAC/BonB,EAAYzf,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EACnD6B,EAAW,EACXD,EAAWvT,EAAcqT,EAAa7G,EACtCsH,EAAc/mB,EAAMme,WAAane,EAAM+kB,OAAO1sB,OAAS,EAAK,EAAI,EAC3D2E,EAAI,EAAGA,EAAIuK,EAAOvK,IACvBypB,EAAWxT,EAAcjW,EAAI2pB,EAAYI,EACzCF,EAAWhE,EAAKnD,KAAK8G,GAAU7G,MAAM8G,IAUrC/I,EAAgBgI,GAAgB5kB,EAAS+hB,EAAMlU,GAR3ClN,GAAIkN,EAAOlN,GAAKzB,EAAM0hB,MAAMiF,GAAWllB,GAAKzE,EAC5C+gB,SAAUyI,EAAUtI,YAAauI,EACjCtsB,MAAO0sB,EAASpG,SAAUvmB,OAAQ2sB,EAAS5K,UAC3Cte,QAASgR,EAAOhR,QAASC,QAAS+Q,EAAO/Q,QACzCkE,MAAO9B,EAAM0hB,MAAMiF,GAAW7kB,MAC9BsT,YAAaK,kBAAgBgF,QAAUhF,kBAAgB6F,SAAW7F,kBAAgBqC,UAClF0C,WAAa/c,KAAM,SAAUwV,YAAaA,EAAc,aAAe,cAEZ,GAAO,GAAO,IAC/Dc,SAAS,GAAGkS,wBAAyB,EACzC,IAANjpB,IACA4pB,GACInlB,GAAIkN,EAAOlN,GAAKzB,EAAM0hB,MAAMiF,GAAWllB,GAAK,IAAMzE,EAAI,UACtD8E,MAAO9B,EAAM0hB,MAAMiF,GAAWhC,OAAO7iB,MACrCkZ,cACQnZ,QAAS7B,EAAM0hB,MAAMiF,GAAWhC,OAAOc,WAAW5jB,QAClDiN,YAAamE,EAAc,IAAM,IAEzCtV,QAASgR,EAAOhR,QAASC,QAAS+Q,EAAO/Q,QACzCmgB,SAAUyI,EAAUtI,YAAauI,EACjCjM,WAAa/c,KAAM,SAAUwV,YAAaA,EAAc,aAAe,aAE3EjT,EAAM0hB,MAAMiF,GAAWhC,OAAOljB,GAAKmlB,EAASnlB,GAC5C,EAAgBmlB,EAASzsB,MAAQ6F,EAAM0hB,MAAMiF,GAAWhC,OAAOxqB,MAC3DysB,EAAS1sB,OAAS8F,EAAM0hB,MAAMiF,GAAWhC,OAAOzqB,OACpD4sB,EAAepB,GAAgB5kB,EAAS+hB,EAAMlU,EAAQiY,GAAU,GAAO,GAAO,EAAM5mB,EAAM0hB,MAAMiF,GAAWllB,IAC3Gic,EAAc3J,SAASrb,KAAKouB,IAEhCjE,EAAK8C,UAAUjI,EAAe8I,EAAUC,GACnCxT,GACDuT,IAEJC,EAAWxT,EAAcjW,EAAI2pB,EAAY,EAIjD,SAAgB9B,GAAUJ,EAAKvqB,GAC3B,IAAIwlB,EAAO,IAAIsH,GACftH,EAAKxlB,OAASA,EACduqB,EAAI/rB,KAAKgnB,GAGb,SAAgB4F,GAAanrB,GACzB,IAAIgrB,EAAO,IAAI8B,GAEf,OADA9B,EAAKhrB,MAAQA,EACNgrB,EAsGX,SAAgB+B,GAAcpmB,EAAS+hB,EAAM9E,EAAUoJ,GAYnD,IAAK,IATD3D,EACArhB,EACAijB,EAEAntB,EACAorB,EACAoB,EAEA2C,EAVA7G,KACA8G,EAAO,EAQPhvB,EAASwqB,EAAKO,iBAAiB/qB,OAE1BivB,EAAM,EAAGA,EAAMjvB,EAAQivB,IAE5B,IADA7C,EAAM5B,EAAKnD,KAAK4H,GACXrvB,EAAI,EAAGA,EAAIwsB,EAAI9E,MAAMtnB,OAAQJ,IAE9B,IADAorB,EAASoB,EAAI9E,MAAM1nB,GAAG8b,SAAS,KACjBsP,EAAOtP,UAAYsP,EAAOtP,SAAS1b,OAC7C,IAAK+sB,EAAI,EAAGA,EAAI/B,EAAOtP,SAAS1b,OAAQ+sB,IAGpC,GAFA5B,EAAYH,EAAOtP,SAASqR,IAC5BjjB,EAAOrB,EAAQmhB,UAAUuB,EAAU/hB,OACtBU,EAAKolB,QAAQlvB,OAAS,GAAK8J,EAAKqlB,SAASnvB,OAAS,GAE3D,IADA+uB,EAAQjlB,EAAKolB,QAAQE,OAAOtlB,EAAKqlB,UAC5BH,EAAO,EAAGA,EAAOD,EAAM/uB,OAAQgvB,KACS,IAArC9G,EAAW2B,QAAQkF,EAAMC,KACzB9G,EAAW7nB,KAAK0uB,EAAMC,IAQlD,OAAO9G,EAGX,SAAgByC,GAA0B7mB,GACtC,IAAIknB,EAASlnB,EAAIiU,QAEjB,GADAiT,EAAOpC,QAAQ,IAAIC,GAAK/kB,EAAIhC,MAAOgC,EAAIjC,SACnCmpB,EAAOtP,SAAS,aAAc2T,GAAW,CACzC,IAAI7E,EAAOQ,EAAOtP,SAAS,GACvB4T,GAAY,EACZ9E,EAAK1oB,OAAS0oB,EAAK1oB,MAAQ0oB,EAAKzB,YAAYjnB,QAC5CwtB,GAAY,EACZ9E,EAAK1oB,MAAQ0oB,EAAKzB,YAAYjnB,OAE9B0oB,EAAK3oB,QAAU2oB,EAAK3oB,OAAS2oB,EAAKzB,YAAYlnB,SAC9CytB,GAAY,EACZ9E,EAAK3oB,OAAS2oB,EAAKzB,YAAYlnB,QAE/BytB,GACA9E,EAAK5B,QAAQ,IAAIC,GAAK2B,EAAK1oB,MAAO0oB,EAAK3oB,SAG/CmpB,EAAOlC,QAAQkC,EAAOjC,aAG1B,SAAgBwG,GAAgB9mB,EAAS3E,EAAK0rB,GAC1C,IACIvvB,EACAL,EACAmtB,EACAzW,EACAmZ,EACArD,EACAsD,EACA5X,EARAqK,EAAYre,EAAIiU,QAAQ2D,SAAS,GASrC,IAAKzb,EAAIuvB,EAAevvB,EAAIkiB,EAAUkF,KAAKrnB,OAAQC,IAE/C,IADAmsB,EAAMjK,EAAUkF,KAAKpnB,GAChBL,EAAI,EAAGA,EAAIwsB,EAAI9E,MAAMtnB,OAAQJ,IAE9B,IADA8vB,EAAOtD,EAAI9E,MAAM1nB,IACR8b,UAAYgU,EAAKhU,SAAS1b,OAAS,EACxC,IAAK+sB,EAAI,EAAGA,EAAI2C,EAAKhU,SAAS1b,OAAQ+sB,IAClCjV,EAAQ4X,EAAKhU,SAASqR,IACtBzW,EAAS7N,EAAQ0c,UAAUrN,EAAM1O,KACtBuf,QAAU7Q,EAAM4D,SAAS1b,OAAS,IACzCyvB,EAAWhnB,EAAQ0c,UAAUrN,EAAM4D,SAAS,GAAGtS,MAC/BqmB,EAAS9G,SACrB8G,EAAS/J,SAAWzlB,EACpBwvB,EAAS5J,YAAcjmB,GAG/B0W,EAAOoP,SAAWzlB,EAClBqW,EAAOuP,YAAcjmB,EAOzC,SAAgB+vB,GAA4BlnB,EAAS3E,GACjD,IAKI8rB,EACAC,EAEA/lB,EACAkhB,EACA0E,EACAzvB,EACAL,EACAmtB,EAbAvC,EAAO1mB,EAAIiU,QAAQ2D,SAAS,GAC5B/T,EAAQ7D,EAAI6D,MACZ+N,EAAU/N,EAAM+N,QAChB2T,EAAQ1hB,EAAM0hB,MACd/c,EAAMke,EAAKzf,OAAOvK,EAGlBkuB,EAAc/mB,EAAMme,UAAY,EAAKne,EAAM+kB,OAAO1sB,OAAS,EAO3D4a,EAAoC,eAAtBjT,EAAMiT,YACpBkV,EAAMlV,EAAcjT,EAAM+kB,OAAO1sB,QAAU,EAAIqpB,EAAMrpB,OAAS,EAC9DosB,EAAMxR,GAAgBjT,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,IAC5D5kB,EAAM+kB,OAAO1sB,OAAS,EAAI,EAAI,GAAM2H,EAAM0hB,MAAY,QACpD1hB,EAAM2kB,QAAU3kB,EAAM4kB,UAAY,EAAI,GAAK5kB,EAAM+kB,OAAO1sB,OAY/D,GAXmB,IAAf0uB,IAAqB9T,GAAejT,EAAM0hB,MAAMrpB,SAChDosB,GAAO,GAEPxR,GACAgV,GAAYjoB,EAAM2kB,QAAU3kB,EAAM4kB,UAAY,EAAI,IAAMmC,EAAa,EAAI,EAAI,GAC7EmB,EAAc,IAGdD,EAAYjoB,EAAM2kB,QAAU3kB,EAAM4kB,UAAY,EAAI,EAClDsD,EAAcnB,EAAa,EAAI,EAAI,GAEnCrF,EAAMrpB,OAAS,EAEf,IADAsM,GAAQ3E,EAAM2kB,QAAU3kB,EAAM4kB,UAAa5kB,EAAM2kB,OAAOzqB,OAAS,EAC5D5B,EAAI,EAAGA,EAAIopB,EAAMrpB,OAAQC,IAAK,CAC/B,IAAKL,EAAI,EAAGA,EAAIypB,EAAMppB,GAAGyb,SAAS1b,OAAQJ,IAOtC,GANAkK,EAAOuf,EAAMppB,GAAGyb,SAAS9b,GACzBkK,EAAKxE,QAAU+jB,EAAMppB,GAAG6B,MACxBgI,EAAKvE,QAAU8jB,EAAMppB,GAAG4B,OACxB4G,EAAQ2a,WAAWtZ,GACnBrB,EAAQ4a,MAAMhjB,KAAKyJ,GACnBkhB,EAASlhB,EAAKiO,QACV6C,GACA,IAAKmS,EAAI8C,EAAa9C,EAAI+C,EAAK/C,IAE3B,GADA2C,EAAOlF,EAAKnD,KAAKuI,GAAUtI,MAAMyF,GAC7B/B,EAAO9e,OAAOC,KAAQujB,EAAK3kB,OAAOqB,MAAQoe,EAAKzf,OAAOxK,EAAI,CAC1DuJ,EAAKsb,SAAWsK,EAAKhU,SAAS,GAAGtS,GAC7B2jB,EAAI8C,EACJ7E,EAAO9e,OAAOC,KAAO6e,EAAO9e,OAAOC,MAAQujB,EAAK3kB,OAAOoB,KAAOqe,EAAKzf,OAAOoB,MAGrEujB,EAAKhU,SAAS,GAAGA,SAAS,GAAG5F,WAAWhU,MAAQ4T,GAAYsV,EAAO9e,OAAOC,OAC3E6e,EAAO9e,OAAOC,KAAOujB,EAAKhU,SAAS,GAAGA,SAAS,GAAG5F,WAAWhU,MAAQ4T,GAGzEsV,EAAO9e,OAAOC,KAAOuJ,IACrBsV,EAAO9e,OAAOC,KAAOuJ,GAErBsV,EAAO9e,OAAOI,IAAMoJ,IACpBsV,EAAO9e,OAAOI,IAAMoJ,GAExBqa,GAAe/E,EAAQlhB,EAAMrB,GAC7B,YAKR,IAAK,IAAIunB,EAAMJ,EAAUI,EAAM5D,EAAK4D,IAEhC,GADAN,EAAOlF,EAAKnD,KAAK2I,GAAK1I,MAAMuI,GACxB7E,EAAO9e,OAAOI,IAAOojB,EAAK3kB,OAAOsB,OAASC,EAAM,CAChDxC,EAAKsb,SAAWsK,EAAKhU,SAAS,GAAGtS,GAC7B4mB,EAAMJ,EACN5E,EAAO9e,OAAOI,IAAM0e,EAAO9e,OAAOI,KAAOojB,EAAK3kB,OAAOuB,IAAMA,GAGtDojB,EAAKhU,SAAS,GAAGA,SAAS,GAAG5F,WAAWjU,OAAS6T,GAAYsV,EAAO9e,OAAOI,MAC5E0e,EAAO9e,OAAOI,IAAMojB,EAAKhU,SAAS,GAAGA,SAAS,GAAG5F,WAAWjU,OAAS6T,GAGzEsV,EAAO9e,OAAOC,KAAOuJ,IACrBsV,EAAO9e,OAAOC,KAAOuJ,GAErBsV,EAAO9e,OAAOI,IAAMoJ,IACpBsV,EAAO9e,OAAOI,IAAMoJ,GAExBqa,GAAe/E,EAAQlhB,EAAMrB,GAC7B,MAKhBmS,EAAcgV,IAAaC,IAGnCrF,EAAK5B,QAAQ,IAAIC,GAAK/kB,EAAIhC,MAAOgC,EAAIjC,SACrC2oB,EAAK1B,QAAQ0B,EAAKzB,aAkBtB,SAAuCyB,EAAM1mB,GACzC,IAEI7D,EACA8sB,EACAntB,EACA8vB,EACA5X,EACAsU,EAPAtB,EAAoBN,EAAKM,oBACzBC,EAAiBP,EAAKO,iBAOtBrF,EAAWuK,GAAmBnsB,GACJ,aAA1BA,EAAI6D,MAAMiT,aACO,IAAb8K,IACAA,EAAY5hB,EAAI6D,MAAM2kB,QAAUxoB,EAAI6D,MAAM4kB,UAAa,EAAI,GAGnE,IAAI7W,EAAU5R,EAAI6D,MAAM+N,QACxB,IAAKzV,EAAI,EAAGA,EAAI6qB,EAAkB9qB,OAAQC,IACtCuqB,EAAK5E,kBAAkB3lB,EAAG6qB,EAAkB7qB,GAAG6B,OAAO,EAAM4T,GAEhE,IAAKzV,EAAIylB,EAAUzlB,EAAI8qB,EAAe/qB,OAAQC,IAC1CuqB,EAAKrE,gBAAgBlmB,EAAG8qB,EAAe9qB,GAAG4B,QAAQ,EAAM6T,GAE5D,IAAKqX,EAAI,EAAGA,EAAIhC,EAAe/qB,OAAQ+sB,IAEnC,IADAX,EAAM5B,EAAKnD,KAAK0F,GACX9sB,EAAI,EAAGA,EAAI6qB,EAAkB9qB,OAAQC,IAEtC,IADAyvB,EAAOtD,EAAI9E,MAAMrnB,IACRyb,UAAYgU,EAAKhU,SAAS1b,OAAS,EACxC,IAAKJ,EAAI,EAAGA,EAAI8vB,EAAKhU,SAAS1b,OAAQJ,KAClCkY,EAAQ4X,EAAKhU,SAAS9b,IACZ6iB,WACN3K,EAAM2K,SAAWiN,EAAK5Z,WAAWhU,OAEjCgW,EAAMuQ,YACNvQ,EAAMuQ,UAAYqH,EAAK5Z,WAAWjU,QAlDtDquB,CAAuB1F,EAAM1mB,GAC7BA,EAAIhC,MAAQgC,EAAIiU,QAAQjW,MAAQ0oB,EAAK1oB,MACrCgC,EAAIjC,OAASiC,EAAIiU,QAAQlW,OAAS2oB,EAAK3oB,OACvCmkB,GAAqBvd,EAAS3E,GAC9BA,EAAIiU,QAAQ6Q,QAAQ,IAAIC,GAAK/kB,EAAIhC,MAAOgC,EAAIjC,SAC5CiC,EAAIiU,QAAQ+Q,QAAQ0B,EAAKzB,aA0wC7B,SAAwCmB,GACpC,GAA4B,aAAxBA,EAASviB,MAAMvC,KAIf,IAAK,IAHDikB,EAAQa,EAASviB,MAAM0hB,MACvBC,OAAO,EACPxR,OAAQ,EACH7X,EAAI,EAAGA,EAAIopB,EAAMrpB,OAAQC,IAAK,CACnCqpB,EAAOD,EAAMppB,GACb,IAAK,IAAIL,EAAI,EAAGA,EAAI0pB,EAAK5N,SAAS1b,OAAQJ,KACtCkY,EAAQwR,EAAK5N,SAAS9b,IAChB0F,QAAUwS,EAAMC,QAAQzS,QAC9BwS,EAAMvS,QAAUuS,EAAMC,QAAQxS,SAnxC1C4qB,CAAwBrsB,GACxB8mB,GAAiB9mB,EAAK2E,GACtBoiB,GAAc/mB,GAElB,SAASisB,GAAe/E,EAAQlhB,EAAMrB,GAClCuiB,EAAOpC,QAAQ,IAAIC,GAAK/e,EAAKhI,MAAOgI,EAAKjI,SACzCmpB,EAAOlC,QAAQkC,EAAOjC,aACtB,IAAIU,EAAShhB,EAAQmhB,UAAU9f,EAAKsb,UACpC3c,EAAQshB,SAASN,EAAQ3f,EAAKV,IA4ClC,SAAgByhB,GAAc/mB,GAC1B,GAAuB,aAAnBA,EAAI6D,MAAMvC,OAAwBtB,EAAI6D,MAAMghB,SAAW7kB,EAAI6D,MAAM+lB,QAAS,CAC1E,IAAIpE,OAAO,EACPrpB,OAAI,EAEJwqB,OAAO,EAEPpB,EAAQvlB,EAAI6D,MAAM0hB,MAClBiF,EAAY2B,GAAmBnsB,GAC/BujB,EAAOvjB,EAAIiU,QAAQ2D,SAAS,GAAGqP,iBACnC,IAAK9qB,EAAI,EAAGA,EAAIopB,EAAMrpB,OAAQC,IAAKquB,IAC/BhF,EAAOD,EAAMppB,GACiB,eAA1B6D,EAAI6D,MAAMiT,aACV6P,EAAOpD,EAAKiH,GAAWzsB,OACnBynB,EAAKznB,SAAW4oB,IAChBnB,EAAKznB,OAAS4oB,KAKlBA,EADU3mB,EAAIiU,QAAQ2D,SAAS,GAAGoP,oBACnBwD,GAAWxsB,MACtBwnB,EAAKxnB,QAAU2oB,IACfnB,EAAKxnB,MAAQ2oB,KAOjC,SAAgBG,GAAiB9mB,EAAK2E,GAClC,IAEIxI,EACAuZ,EACA4W,EACAC,EALA1oB,EAAQ7D,EAAI6D,MACZ+kB,EAAS/kB,EAAM+kB,OAKf4D,EAAgB3oB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EACvD/B,EAAO1mB,EAAIiU,QAAQ2D,SAAS,GAC5BpP,EAAMke,EAAKzf,OAAOvK,GAAMmH,EAAM2kB,QAAU3kB,EAAM4kB,UAAa5kB,EAAM2kB,OAAOzqB,OAAS,GACrF,GAAuB,aAAnBiC,EAAI6D,MAAMvC,OACVtB,EAAM2E,EAAQmhB,UAAU9lB,EAAIsF,KAAOtF,EAC/B4oB,EAAO1sB,OAAS,GAEhB,GADAwqB,EAAO1mB,EAAIiU,QAAQ2D,SAAS,GACF,eAAtB/T,EAAMiT,YAEN,IADAwV,EAAYzoB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa/B,EAAKnD,KAAK,GAAKmD,EAAKnD,KAAK,GACnEpnB,EAAI,EAAGA,EAAIysB,EAAO1sB,OAAQC,IAE3BuZ,GADA6W,EAAQD,EAAS9I,MAAMrnB,GAAGyb,SAAS,IACpB3Q,OAAOqB,MAAQoe,EAAKzf,OAAOxK,EACtCmsB,EAAOzsB,GAAGuZ,SAAWA,IACrBkT,EAAOzsB,GAAGuZ,OAASA,GAEvB/Q,EAAQ0c,UAAUkL,EAAMjnB,IAAIqZ,SAAW4N,EAAM5N,cAIjD,IAAKxiB,EAAI,EAAGA,EAAIysB,EAAO1sB,OAAQC,IAE3BuZ,GADA6W,EAAQ7F,EAAKnD,KAAKiJ,EAAerwB,GAAGqnB,MAAM,GAAG5L,SAAS,IACvC3Q,OAAOsB,OAASC,EAC3BogB,EAAOzsB,GAAGuZ,SAAWA,IACrBkT,EAAOzsB,GAAGuZ,OAASA,GAEvB/Q,EAAQ0c,UAAUkL,EAAMjnB,IAAIqZ,SAAW4N,EAAM5N,SAOjE,SAAgB4D,GAA2B6B,EAAYzf,GACnD,GAAIyf,GAAcA,EAAWloB,OAAS,EAElC,IAAK,IADD+uB,OAAQ,EACH9uB,EAAI,EAAGA,EAAIioB,EAAWloB,OAAQC,IACnC8uB,EAAQtmB,EAAQmhB,UAAU1B,EAAWjoB,IACrCwI,EAAQ8nB,wBAAwBxB,MAC5B/jB,SAAU+jB,EAAM/jB,SAAUwlB,SAAUzB,EAAMyB,WAM1D,SAAgBC,GAAiBhoB,EAAS3E,EAAKyI,EAAQ3C,GACnD,IAAIyiB,EACAH,EACAvF,EAEAsF,EACAD,EACA9R,EACAwW,EACAC,EAEAzG,EAAYzhB,EAAQmhB,UAAU9lB,EAAIshB,UAClCzd,EAAQuiB,EAASviB,MACjB6iB,EAAON,EAASnS,QAAQ2D,SAAS,GACjC2N,EAAQ1hB,EAAM0hB,MACdnB,EAAa2G,GAAcpmB,EAAS+hB,EAAM1mB,EAAI4hB,WACvB,eAAtB/d,EAAMiT,aAAgC9W,EAAI4hB,WAAanZ,EAAOmZ,UACxC,aAAtB/d,EAAMiT,aAA8B9W,EAAI+hB,cAAgBtZ,EAAOsZ,eACtC,eAAtBle,EAAMiT,aACNqR,EAAcnoB,EAAI4hB,SAClBsG,EAAczf,EAAOmZ,SACrB2G,GAAU1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,IAAM5kB,EAAM+kB,OAAO1sB,QAAU2H,EAAMme,UAAY,EAAI,IACpG4K,EAAkB5sB,EAAI4hB,SAAW2G,IACjCsE,EAAkBpkB,EAAOmZ,SAAW2G,GAE5BziB,GAAY2C,EAAOwL,QAAQxS,QAAUqE,EAASpJ,IAC9CwrB,GAAgB2E,EAAkB,GAAM,EAAI,EAC5CA,GAAoBA,EAAkB,GAAM,EAAI,GAIhD/mB,GAAY2C,EAAOwL,QAAQxS,QAAUqE,EAASpJ,IAC9CwrB,GAAe,EACf2E,GAAmB,GAGvB1E,IAAgBD,GAChBxB,EAAKoG,eAAe3E,EAAaD,KAIrCC,EAAcnoB,EAAI+hB,YAClBmG,EAAczf,EAAOsZ,YACrBwG,EAAS1kB,EAAM+kB,OAAO1sB,QAAU2H,EAAMme,UAAa,EAAI,EACvD4K,EAAkB5sB,EAAI+hB,YAAcwG,EACpCsE,EAAkBpkB,EAAOsZ,YAAcwG,EAC3B1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EAC/CmE,EAAkBC,EACd/mB,GAAY2C,EAAOwL,QAAQzS,QAAUsE,EAASrJ,IAC9CyrB,GAAgB2E,EAAkB,GAAM,EAAI,EAC5CA,GAAoBA,EAAkB,GAAM,EAAI,GAIhD/mB,GAAY2C,EAAOwL,QAAQzS,QAAUsE,EAASrJ,IAC9CyrB,GAAe,EACf2E,GAAmB,GAGvB1E,IAAgBD,IACQ,IAApBrkB,EAAMme,WAAmC,IAAhBkG,GACrBrkB,EAAM2kB,QAAU3kB,EAAM4kB,YACtB/B,EAAKnD,KAAK,GAAGC,MAAM2E,GAAavQ,SAAW8O,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,SACjE8O,EAAKnD,KAAK,GAAGC,MAAM2E,GAAa4E,WAAarG,EAAKnD,KAAK,GAAGC,MAAM,GAAGuJ,WACnErG,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,aAG9B8O,EAAKsG,kBAAkB,EAAG7E,EAAaD,KAG3CC,IAAgBD,IAChBE,GACI3f,OAAQia,GAAYja,GAAST,OAAQ0a,GAAY1iB,IAErDoW,EAAOmP,EAAMqH,GACbrH,EAAMvZ,OAAO4gB,EAAiB,GAC9BrH,EAAMvZ,OAAO6gB,EAAiB,EAAGzW,GAIjCyM,GACIvhB,KAAM,sBAAuB0hB,YAH7Bva,OAAQia,GAAY0F,EAAYpgB,QAASA,OAAQ0a,GAAY0F,EAAY3f,SAIzEsa,WAAYqF,EAAatF,SAAU,YAEjCne,EAAQwY,eAAiBC,gBAAc+I,UACzCxhB,EAAQue,eAAeD,gBAAgBJ,GAE3C4I,GAAgB9mB,EAASyhB,EAAU,GACnC7D,GAA2B6B,EAAYzf,GACvCyhB,EAASnS,QAAQ6Q,QAAQ,IAAIC,GAAKqB,EAASpoB,MAAOooB,EAASroB,SAC3DqoB,EAASnS,QAAQ+Q,QAAQoB,EAASnS,QAAQgR,aAC1CtgB,EAAQof,oBAAoBqC,KAKxC,SAAgB6G,GAAqBtoB,EAAS3E,EAAKomB,EAAUlC,GACzD,IAAIQ,EAAa/f,EAAQmhB,UAAUM,EAAS9gB,IACxCzB,EAAQ6gB,EAAW7gB,MACnB0kB,EAAS1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EAChDlD,EAAQ1hB,EAAM0hB,MACdqD,EAAS/kB,EAAM+kB,OACfsE,EAAchJ,EAAajQ,QAAQjC,WAAWhU,MAC9CmvB,EAAejJ,EAAajQ,QAAQjC,WAAWjU,OAC/CqvB,EAAWptB,EAAIiU,QAAQjC,WAAWhU,MAClCqvB,EAAYrtB,EAAIiU,QAAQjC,WAAWjU,OACT,aAA1B2mB,EAAW7gB,MAAMvC,OACS,eAAtBuC,EAAMiT,YACF9W,EAAI4pB,QACJhB,EAAO5oB,EAAI+hB,aAAarM,QAAWwX,EAAcE,GAGjD7E,EAAS1kB,EAAMme,WAAane,EAAM+kB,OAAO1sB,OAAS,EAAKqsB,EAAQ,EAAIA,EACnEhD,EAAOvlB,EAAI4hB,SAAW2G,GAAQxqB,QAAWovB,EAAeE,GAIxDrtB,EAAI4pB,QACJhB,EAAQ5oB,EAAI4hB,SAAW2G,GAAQ7S,QAAWyX,EAAeE,GAGzD9E,EAAS1kB,EAAMme,WAAane,EAAM+kB,OAAO1sB,OAAS,EAAK,EAAI,EAC3DqpB,EAAOvlB,EAAI+hB,YAAcwG,GAAQvqB,OAAUkvB,EAAcE,IAMzE,SAAgBE,GAAclH,EAAUmH,GACpC,IAAI/C,EACA3mB,EAAQuiB,EAASviB,MACjB0kB,EAAS1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EAQpD,MAP0B,eAAtB5kB,EAAMiT,aACNyR,GAAS1kB,EAAM+kB,OAAO1sB,OAAS,EAAI,EAAI,EACvCsuB,EAAY+C,EAAQ3L,SAAW2G,GAG/BiC,EAAY+C,EAAQxL,aAAele,EAAMme,WAAane,EAAM+kB,OAAO1sB,OAAS,EAAI,EAAI,GAEjFsuB,EAWX,SAAgB2B,GAAmB/F,GAC/B,IAAImC,EAAQ,EACR1kB,EAAQuiB,EAASviB,MAOrB,MAN0B,eAAtBA,EAAMiT,cACNyR,EAAS1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,GAEhD5kB,EAAM+kB,OAAO1sB,OAAS,GAAK2H,EAAMme,YACjCuG,GAAS,GAENA,EAGX,SAAgBtG,GAAoB0D,EAAQhhB,EAASsP,EAAS8N,GAC1D,IAAIle,EAAQ8hB,EAAO9hB,MACnB,GAAIA,EAAM+kB,OAAO1sB,OAAS,EAAG,CACzB,IAAI8J,EAAOrB,EAAQ0c,UAAUxd,EAAM+kB,OAAO7G,GAAayG,OAAOljB,IAC1DU,GAAQA,EAAK2Y,SAAW1K,EAAQxB,YAAYzU,QAC5CgI,EAAK2Y,SAAW1K,EAAQxB,YAAYzU,MACpCgI,EAAKiO,QAAQ0K,SAAW1K,EAAQxB,YAAYzU,QAKxD,SAAgBkkB,GAAqBvd,EAASyhB,GAC1C,GAAIA,EAASviB,MAAM2kB,QAAUpC,EAASviB,MAAM4kB,UAAW,CACnD,IACInjB,EADO8gB,EAASnS,QAAQ2D,SAAS,GACvB2L,KAAK,GAAGC,MAAM,GAAG5L,SAAS,GAAGtS,GACvCkoB,EAAa7oB,EAAQ0c,UAAU/b,GAC/BkoB,GAAcA,EAAWlK,UAAYkK,EAAW7O,SAAWyH,EAASpoB,QACpEwvB,EAAW7O,SAAWyH,EAASpoB,MAC/BwvB,EAAWvZ,QAAQ0K,SAAWyH,EAASpoB,QAKnD,SAAgByvB,GAAQ9oB,EAASghB,EAAQH,EAAMkI,GAC3C,IAAItH,EAAWzhB,EAAQ0c,UAAUsE,EAAOrgB,IACxC,GAA4B,aAAxB8gB,EAASviB,MAAMvC,KAAqB,CACpCqD,EAAQyc,uBAAsB,GAC9B,IAAIsF,EAAON,EAASnS,QAAQ2D,SAAS,GACjC3Q,EAASyf,EAAKzf,OACdpD,EAAQuiB,EAASviB,MACjB8pB,OAAU,EACVC,GAAgB,EAChBxJ,OAAa,EACbvB,OAAQ,EACR0F,OAAQ,EACRgF,OAAU,EACV/C,OAAY,EACZ5S,OAAW,EACX9b,OAAI,EACJK,OAAI,EACJ8sB,OAAI,EAEJjV,OAAQ,EACR5S,OAAQ,EAUZ,GATAmsB,EAAU,IAAIM,GAAKhqB,EAAO,QAAS2hB,GAAM,GACzC+C,EAAS1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EACtB,eAAtB5kB,EAAMiT,cACN8W,GAAgB,EAChBrF,EAAQ1kB,EAAM+kB,OAAO1sB,OAAS,EAAIqsB,EAAQ,EAAIA,GAElDnE,EAAa2G,GAAcpmB,EAAS+hB,GACpC8D,OAAuB9qB,IAAVguB,EAAuBA,EAAQ7pB,EAAM0hB,MAAMrpB,OACxDqsB,GAASiC,EACLoD,EAAe,CACf,IAAIE,EAAS,IAAIjD,GACjBiD,EAAO/vB,OAASynB,EAAKznB,OACrB2oB,EAAKqH,OAAOxF,EAAOuF,GAAQ,GAC3B1H,EAASroB,YAA8B2B,IAApB0mB,EAASroB,OAAwBqoB,EAASroB,OAASynB,EAAKznB,OAASqoB,EAASroB,OAC7FqoB,EAASnS,QAAQlW,OAAS2oB,EAAK3oB,OAASqoB,EAASroB,WAEhD,CACD,IAAIiwB,EAAS,IAAIlD,GACjBkD,EAAOhwB,MAAQwnB,EAAKxnB,MACpB0oB,EAAKuH,UAAUzD,EAAY,EAAGwD,GAAQ,GAClC5H,EAASpoB,QACTooB,EAASpoB,OAASwnB,EAAKxnB,MACvBooB,EAASnS,QAAQjW,MAAQ0oB,EAAK1oB,MAAQooB,EAASpoB,OAE7C2G,EAAQwY,eAAiBC,gBAAc+I,WACzCO,EAAKnD,KAAK,GAAGC,MAAM,GAAGuJ,YAAc,GAGtCpoB,EAAQwY,eAAiBC,gBAAc+I,WACzCoH,EAAQjoB,IAAMua,WAEJngB,IAAVguB,EACA7pB,EAAM0hB,MAAMvZ,OAAO0hB,EAAO,EAAGH,GAG7B1pB,EAAM0hB,MAAMhpB,KAAKgxB,GAErB5D,GAAejD,EAAM/hB,EAASyhB,EAAUmC,EAAOiC,EAAWoD,GAC1DD,EAAiC,eAAtB9pB,EAAMiT,YACbnS,EAAQ0c,UAAUqF,EAAKnD,KAAKgF,GAAO/E,MAAM,GAAG5L,SAAS,GAAGtS,IACtDzB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa9jB,EAAQ0c,UAAUqF,EAAKnD,KAAK,GAAGC,MAAM+E,GAAO3Q,SAAS,GAAGtS,IACzFX,EAAQ0c,UAAUqF,EAAKnD,KAAK,GAAGC,MAAM+E,GAAO3Q,SAAS,GAAGtS,IAC1DX,EAAQwY,eAAiBC,gBAAc+I,WACzCtD,GACIvhB,KAAM,wBAAyB4sB,WAAY,SAAUnL,WAAYL,GAAY6K,GAC7EvK,WAAYN,GAAYiL,GAAU7K,SAAU,YAEhDne,EAAQse,gBAAgBJ,IAQ5B,GAJA4I,GAAgB9mB,EAASyhB,EAFkB,eAAtBviB,EAAMiT,YACvByR,EAAU1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,GAErD5B,GAA0BT,GAC1BlE,GAAqBvd,EAASyhB,IAC9BxO,EAAW4N,EAAK5N,WACAA,EAAS1b,OAAS,EAC9B,IAAKJ,EAAI,EAAGA,EAAI8b,EAAS1b,OAAQJ,IAG7B,GAFAkY,EAAQ4D,EAAS9b,GACjBsF,GAAU3E,EAAGuX,EAAMC,QAAQzS,QAAS9E,EAAGsX,EAAMC,QAAQxS,SAC3B,eAAtBoC,EAAMiT,YAEN,IADO4P,EAAKnD,KAAKgF,GAAO/E,MAAMrnB,GACzBA,EAAI,EAAGA,EAAIuqB,EAAKnD,KAAKgF,GAAO/E,MAAMtnB,OAAQC,IAC3CgyB,GAAsBxpB,EAAS+hB,EAAKnD,KAAKgF,GAAO/E,MAAMrnB,GAAIiF,EAAO4S,QAIrE,IAAKiV,EAAI,EAAGA,EAAIvC,EAAKnD,KAAKrnB,OAAQ+sB,IAE9BkF,GAAsBxpB,EADf+hB,EAAKnD,KAAK0F,GAAGzF,MAAM+E,GACWnnB,EAAO4S,GAK5DuO,GAA2B6B,EAAYzf,GACvCA,EAAQwd,KAAKiE,EAAUnf,EAAOxK,EAAIiqB,EAAKzf,OAAOxK,EAAGwK,EAAOvK,EAAIgqB,EAAKzf,OAAOvK,GACxEiI,EAAQyc,uBAAsB,IAGtC,SAAS+M,GAAsBxpB,EAASinB,EAAMxqB,EAAO4S,GACjD,GAAI4X,EAAKhU,UAAYgU,EAAKhU,SAAS1b,OAAS,EAAG,CAC3C,IAAIgrB,EAAS0E,EAAKhU,SAAS,GACvB4J,EAAW7c,EAAQ0c,UAAU6F,EAAO5hB,IACpC4hB,EAAOjgB,OAAOgC,cAAc7H,IAC5BuD,EAAQshB,SAASzE,EAAUxN,IAIvC,SAAgBoa,GAASzpB,EAASghB,EAAQ0I,GACtC,GAA0B,aAAtB1I,EAAO9hB,MAAMvC,KAAqB,CAClC,IAAIkrB,OAAe,EAEf8B,OAAY,EACZ/B,OAAQ,EACRgC,OAAgB,EAChBC,OAAY,EACZpE,OAAa,EACbqE,OAAiB,EACjBtyB,OAAI,EACJM,EAAIkpB,EAAO1R,QAAQhN,OAAOxK,EAC1BC,EAAIipB,EAAO1R,QAAQhN,OAAOvK,EAC1BmH,EAAQ8hB,EAAO9hB,MACf+N,EAAU/N,EAAM+N,QAChB8c,EAAmB7qB,EAAM+kB,OACzB5qB,OAAQ,EACR0oB,EAAOf,EAAO1R,QAAQ2D,SAAS,GAC/B+W,EAAsC,eAAtB9qB,EAAMiT,YAO1B,GANA0V,EAAgB3oB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,GAAK,EACpD5kB,EAAM+kB,OAAO1sB,OAAS,IACtBswB,GAAgB,GAGpBiC,EAAiB,EAAkB5qB,EAAM0hB,MAAM,GAAGiD,OAAOxqB,MAAQ6F,EAAM0hB,MAAM,GAAGiD,OAAOzqB,OACnFswB,EAAS3Y,OAAS+Y,EAAgB,CAClC,IAAKtyB,EAAI,EAAGA,EAAIuyB,EAAiBxyB,OAAQC,IAGrC,GAFAowB,EAAQmC,EAAiBvyB,GACzBoyB,EAAiBpyB,EAAI,EAAKuyB,EAAiBvyB,EAAI,GAAKowB,EAChDA,EAAM7W,OAAS2Y,EAAS3Y,OAAQ,CAEhC,GADA1X,EAAS7B,EAAI,EAAKkyB,EAAS3Y,OAAS6Y,EAAc7Y,OAAS2Y,EAAS3Y,OAChEiZ,EAAe,CACf,IAAIC,EAAUlI,EAAKM,oBAAoB7qB,GACvCyyB,EAAQ5wB,OAASA,GACjBwwB,EAAY7pB,EAAQ0c,UAAUxd,EAAM+kB,OAAOzsB,GAAGqsB,OAAOljB,KAC3CqZ,SAAW6P,EAAUva,QAAQ0K,SAAWiQ,EAAQ5wB,MAC1D0oB,EAAK5E,kBAAkB3lB,EAAGyyB,EAAQ5wB,OAAO,GACzC,IAAI6wB,EAAa,IAAI/D,GACrB+D,EAAW7wB,MAAQA,EACnBosB,EAAajuB,EACbuqB,EAAKuH,UAAU9xB,EAAG0yB,GAAY,GAC9B,MAGA,IAAIC,EAAUpI,EAAKO,iBAAiB9qB,EAAIqwB,GACxCsC,EAAQ/wB,QAAUC,EAClBwwB,EAAY7pB,EAAQ0c,UAAUxd,EAAM+kB,OAAOzsB,GAAGqsB,OAAOljB,IACrDohB,EAAKrE,gBAAgBlmB,EAAIqwB,EAAcsC,EAAQ/wB,QAAQ,GACvD,IAAIgxB,EAAa,IAAIlE,GACrBkE,EAAWhxB,OAASC,EACpBosB,EAAajuB,EACbuqB,EAAKqH,OAAO5xB,EAAIqwB,EAAcuC,GAAY,GAC1C,MAIZ,GAAIpqB,EAAQwY,eAAiBC,gBAAc+I,eAA2BzmB,IAAf0qB,EAA0B,EACzEvH,EAAQle,EAAQqqB,eAAeC,aAAa/wB,MACtCgxB,aAkE1B,SAA6B9E,EAAYzE,EAAQ9C,EAAO6D,EAAM5P,EAAauX,GACvE,IACIc,EADQxJ,EAAO9hB,MACG+kB,OAAOwB,EAAa,GACtCgF,EAAavM,EAAM0L,cAAc7Y,OACrC,GAAIoB,EAAa,CACb,IAAI8X,EAAUlI,EAAKM,oBAAoBoD,EAAa,GAChDiF,EAAa,IAAIvE,GACjBV,EAAa,GACbiF,EAAWrxB,MAAS4wB,EAAa,OAAKQ,EAAaD,EAAUzZ,QAC7DkZ,EAAQ5wB,MAAQoxB,EAAaD,EAAUzZ,SAGvC2Z,EAAWrxB,MAAQ4wB,EAAQ5wB,MAAQoxB,EACnCR,EAAQ5wB,MAAQoxB,GAEpB1I,EAAK5E,kBAAkBsI,EAAa,EAAGwE,EAAQ5wB,OAAO,GACtD0oB,EAAKuH,UAAU7D,EAAYiF,GAAY,OAEtC,CACD,IAAIT,EAAUlI,EAAKO,iBAAiBmD,GAChCkF,EAAa,IAAIzE,GACjBT,EAAa,GACbkF,EAAWvxB,OAAS8kB,EAAME,WAAWrN,OAAS0Z,EAC9CR,EAAQ7wB,OAASqxB,EAAaD,EAAUzZ,SAGxC4Z,EAAWvxB,OAAS6wB,EAAQ7wB,OAASqxB,EACrCR,EAAQ7wB,OAASqxB,GAErB1I,EAAKrE,gBAAgB+H,EAAYwE,EAAQ7wB,QAAQ,GACjD2oB,EAAKqH,OAAO,EAAI3D,EAAYkF,GAAY,IA9F5BC,CADAnF,EAAasE,EAAiBxyB,OACLypB,EAAQ9C,EAAO6D,EAAMiI,GAGtD,IAAIa,EAAW,IAAIC,GAAO9J,EAAY,MAAG,SAAU0I,GAAU,GAM7D,GALM1pB,EAAQwY,eAAiBC,gBAAc+I,WACzCqJ,EAASlqB,IAAMua,MAEnBhc,EAAM+kB,OAAO5c,OAAOoe,EAAY,EAAGoF,GACnC9F,GAAYhD,EAAM/hB,EAASghB,EAAQ6G,EAAcmC,EAAevE,GAC5DuE,EAAe,CAEf,GADAL,EAAY3pB,EAAQ0c,UAAUqF,EAAKnD,KAAKiJ,GAAchJ,MAAM4G,GAAYxS,SAAS,GAAGtS,IACjE,IAAf8kB,GAAoBvmB,EAAM2kB,QAAU3kB,EAAM4kB,UAAW,CACrD/B,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,SAAW8O,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,SACvD8O,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,YAEtB,IAAK,IADD8X,EAAWhJ,EAAKnD,KAAK,GAChBoM,EAAM,EAAGA,EAAMD,EAASlM,MAAMtnB,OAAQyzB,IAC3CD,EAASlM,MAAMmM,GAAKrL,cAAW5kB,EAE3BgwB,EAASlM,MAAMmM,GAAK5C,WADZ,IAAR4C,EACiCjJ,EAAKnD,KAAK,GAAGC,MAAMtnB,OAGnB,GA4E7D,SAAmCyI,EAASqB,EAAM0gB,EAAM6B,EAAOzR,GAC3D,IACI8Y,EACAzzB,EACA0zB,EACAnF,EACApC,EALAzkB,EAAQmC,EAAKnC,MAMb2mB,EAAY2B,GAAmBnmB,GAC/BnC,EAAM2kB,QAAU3kB,EAAM4kB,YACtB/B,EAAKnD,KAAK,GAAGC,MAAM,GAAGuJ,WAAarG,EAAKnD,KAAK,GAAGC,MAAMtnB,QAE1D,IAAKC,EAAIquB,EAAWruB,EAAIuqB,EAAKnD,KAAKrnB,OAAQC,IACtCmsB,EAAM5B,EAAKnD,KAAKpnB,GAChB0zB,EAAWvH,EAAI9E,MAAM+E,EAAQ,GAC7BmC,EAAWpC,EAAI9E,MAAM+E,GACrBqH,EAAWtH,EAAI9E,MAAM+E,EAAQ,GAC7BuH,GAAkBnrB,EAASqB,EAAM6pB,EAAUnF,EAAUkF,EAAUzzB,EAAGosB,GAEtEkD,GAAgB9mB,EAASqB,EAAM,GA1FnB+pB,CAAmBprB,EAASghB,EAAQe,EAAM0D,GAC1C,IAAI4B,EAAMtF,EAAKM,oBAGf,GAFAN,EAAK5E,kBAAkBsI,EAAY4B,EAAI5B,GAAYpsB,OAAO,EAAM4T,GAChE0c,EAAU3P,SAAW2P,EAAUra,QAAQ0K,SAAWqN,EAAI5B,GAAYpsB,MAC9DguB,EAAI9vB,OAASkuB,EAAa,EAAG,CAC7B,IAAI4F,EAAgBrrB,EAAQ0c,UAAUqF,EAAKnD,KAAKiJ,GAAchJ,MAAM4G,EAAa,GAAGxS,SAAS,GAAGtS,IAChGohB,EAAK5E,kBAAkBsI,EAAa,EAAG4B,EAAI5B,EAAa,GAAGpsB,OAAO,EAAM4T,GACxEoe,EAAcrR,SAAWqR,EAAc/b,QAAQ0K,SAAWqN,EAAI5B,EAAa,GAAGpsB,MAElF2nB,EAAO3nB,MAAQ2nB,EAAO1R,QAAQjW,MAAQ2nB,EAAO1R,QAAQ2D,SAAS,GAAG5Z,MAAQ0oB,EAAK1oB,UAE7E,CACDswB,EAAY3pB,EAAQ0c,UAAUqF,EAAKnD,KAAKiJ,EAAepC,GAAY5G,MAAM,GAAG5L,SAAS,GAAGtS,IACxF,IAAIgjB,EAAM5B,EAAKO,iBACXN,EAAO2B,EAAIkE,EAAepC,GAAYrsB,QA8E1D,SAAiC4G,EAASqB,EAAM0gB,EAAM9E,EAAU9K,GAO5D,IAAK,IAND+Y,EACAnF,EACAkF,EACAtH,EAAM5B,EAAKnD,KAAK3B,GAChBkN,EAAUpI,EAAKnD,KAAK3B,EAAW,GAC/BqO,EAAUvJ,EAAKnD,KAAK3B,EAAW,GAC1BzlB,EAAI,EAAGA,EAAImsB,EAAI9E,MAAMtnB,OAAQC,IAClCuuB,EAAWpC,EAAI9E,MAAMrnB,GACrByzB,EAAW,EAAYd,EAAQtL,MAAMrnB,QAAKuD,EAC1CmwB,EAAWI,EAAQzM,MAAMrnB,GACzB2zB,GAAkBnrB,EAASqB,EAAM6pB,EAAUnF,EAAUkF,EAAUhO,EAAUzlB,GAE7EsvB,GAAgB9mB,EAASqB,EAAM,GA1FnBkqB,CAAiBvrB,EAASghB,EAAQe,EAAM8F,EAAepC,GACvD1D,EAAKrE,gBAAgBmK,EAAepC,EAAYzD,GAAM,EAAM/U,GACxD0W,EAAIpsB,OAASswB,EAAepC,EAAa,IACzCzD,EAAO2B,EAAIkE,EAAepC,EAAa,GAAGrsB,OAC1C2oB,EAAKrE,gBAAgBmK,EAAepC,EAAa,EAAGzD,GAAM,EAAM/U,IAEpE+T,EAAO5nB,OAAS4nB,EAAO1R,QAAQlW,OAAS4nB,EAAO1R,QAAQ2D,SAAS,GAAG7Z,OAAS2oB,EAAK1U,WAAWjU,OAOhG,GALA8oB,GAA0BlB,GAC1BA,EAAO3nB,MAAQ2nB,EAAO1R,QAAQjC,WAAWhU,MACzCkkB,GAAqBvd,EAASghB,GAC9BhhB,EAAQwd,KAAKwD,EAAQlpB,EAAIkpB,EAAO1R,QAAQhN,OAAOxK,EAAGC,EAAIipB,EAAO1R,QAAQhN,OAAOvK,GAC5EoqB,GAAiBnB,EAAQhhB,KACnBA,EAAQwY,eAAiBC,gBAAc+I,UAAW,CACpD,IAAItD,GACAvhB,KAAM,yBAA0B4sB,WAAY,SAAUnL,WAAYL,GAAY8M,GAC9ExM,WAAYN,GAAY4L,GAAYxL,SAAU,YAElDne,EAAQse,gBAAgBJ,GAE5Ble,EAAQof,oBAAoB4B,KAwExC,SAASmK,GAAkBnrB,EAASqB,EAAM6pB,EAAUnF,EAAUkF,EAAUhO,EAAUG,GAC9E,IAAItlB,EACAC,EAOAoV,EACAoV,EACA3F,EACAzlB,EATA+H,EAAQmC,EAAKnC,MACbiT,EAAoC,eAAtBjT,EAAMiT,YACpB4P,EAAO1gB,EAAKiO,QAAQ2D,SAAS,GAC7B5Z,EAAQ0sB,EAASyF,iBACjBpyB,EAAS2sB,EAAS0F,kBAMlBj0B,EAAI,EAAgBylB,EAAWG,EAqBnC,GApBI8N,GACApzB,EAAIqa,EAAc+Y,EAAS5oB,OAAOxK,EAAIozB,EAAS5oB,OAAOjJ,MAAQ6xB,EAAS5oB,OAAOxK,EAC9EC,EAAIoa,EAAc+Y,EAAS5oB,OAAOvK,EAAImzB,EAAS5oB,OAAOvK,EAAImzB,EAAS5oB,OAAOlJ,SAG1EtB,EAAIiqB,EAAKzf,OAAOxK,EAChBC,EAAIkzB,EAAS3oB,OAAOvK,GAExBoV,EAAO,IAAIC,GAAKtV,EAAGC,EAAGsB,EAAOD,GAC7BmpB,GACI5hB,GAAIU,EAAKV,IAAM,EAAgBzB,EAAM0hB,MAAMppB,EAAI,GAAK0H,EAAM0hB,MAAMppB,EAAI,IAAImJ,GAAKua,KAAW,GACxF+B,SAAUA,EAAUG,YAAaA,EACjC/jB,MAAO0sB,EAASpG,SAAUvmB,OAAQ2sB,EAAS5K,UAC3Cna,OAAQ,EAAgB9B,EAAM0hB,MAAMppB,EAAI,GAAK0H,EAAM0hB,MAAMppB,EAAI,IAAIwJ,MACjEsT,YAAaK,kBAAgBgF,QAAUhF,kBAAgBqC,UACvD0C,WAAa/c,KAAM,SAAUwV,YAAaA,EAAc,aAAe,aAE3EyK,EAAgBgI,GAAgB5kB,EAAS+hB,EAAM1gB,EAAMkhB,GAAQ,GAAO,GAAO,GAC3E3F,EAAc3J,SAAS,GAAGkS,wBAAyB,EACnDpD,EAAK8C,UAAUjI,EAAeK,EAAUG,GACpC6N,GAAYA,EAAShY,UAAYgY,EAAShY,SAAS1b,OACnD,IAAKJ,EAAI,EAAGA,EAAI8zB,EAAShY,SAAS1b,OAAQJ,IAClCgb,EACAnS,EAAQ0c,UAAUuO,EAAShY,SAAS9b,GAAGwJ,IAAIyc,aAAe,EAG1Dpd,EAAQ0c,UAAUuO,EAAShY,SAAS9b,GAAGwJ,IAAIsc,UAAY,GAMvE,SAAmCjd,EAASirB,EAAUlF,EAAU5Y,EAAMyP,EAAezK,EAAa+Y,GAC9F,IAAI7b,EACA5S,EACAimB,EACA1B,EAAShhB,EAAQ0c,UAAUE,EAAcjc,IACzC+qB,EAAeT,GAAYC,EAE3Bje,EADWjN,EAAQ0c,UAAUsE,EAAOrE,UACjBzd,MAAM+N,QAC7B,GAAIye,EAAWzY,UAAYyY,EAAWzY,SAAS,GAAGA,SAAS1b,OAAS,EAChE,IAAK,IAAIJ,EAAI,EAAGA,EAAIu0B,EAAWzY,SAAS,GAAGA,SAAS1b,OAAQJ,IACxDkY,EAAQqc,EAAWzY,SAAS,GAAGA,SAAS9b,GACxCurB,EAAY1iB,EAAQ0c,UAAUrN,EAAM1O,IACpClE,EAAQ,GAAkB3E,EAAGuX,EAAM/M,OAAOxK,EAAGC,EAAGsX,EAAM/M,OAAOP,OAAOhK,IAC9DD,EAAGuX,EAAM/M,OAAOP,OAAOjK,EAAGC,EAAGsX,EAAM/M,OAAOuB,KAC5CsJ,EAAK7I,cAAc7H,IACnBspB,EAAS9S,SAAS,GAAGA,SAASrb,KAAKyX,GACnCqc,EAAWzY,SAAS,GAAGA,SAAS5L,OAAOlQ,EAAG,GAC1CA,IACA6I,EAAQ8gB,YAAY4B,GACfA,EAAUxC,SACXwC,EAAU/F,SAAWC,EAAcjc,IAElCqgB,EAAO/N,WACR+N,EAAO/N,aAENgY,IACG9Y,EACAuQ,EAAUjf,OAAOC,KAAOgf,EAAUpT,QAAQhN,OAAOxK,EAAI4zB,EAAWzY,SAAS,GAAG3Q,OAAOqB,MAGnF+e,EAAUjf,OAAOI,IAAM6e,EAAUpT,QAAQhN,OAAOvK,EAAI2zB,EAAWzY,SAAS,GAAG3Q,OAAOsB,QAG1Fod,EAAO/N,SAASrb,KAAKyX,EAAM1O,IAC3B+hB,EAAUiJ,OAAS3K,EAAO2K,OAAS,EACnC3rB,EAAQqhB,eAAeqB,IAElBuI,IACD9Y,GACAuQ,EAAUjf,OAAOC,MAAQqiB,EAASyF,iBAC9Bve,EAAUyV,EAAUjf,OAAOC,OAC3Bgf,EAAUjf,OAAOC,KAAOuJ,KAI5ByV,EAAUjf,OAAOI,KAAOkiB,EAAS0F,kBAC7Bxe,EAAUyV,EAAUjf,OAAOI,MAC3B6e,EAAUjf,OAAOI,IAAMoJ,KAjD3C2e,CAAmB5rB,EAASirB,EAAUlF,EAAU5Y,EAAMyP,EAAezK,EAAa+Y,GAwDtF,SAAgBW,GAAkB7rB,EAASqB,EAAM1H,GAC7C,GAAwB,aAApB0H,EAAKnC,MAAMvC,OAAmC,gBAAXhD,GAAuC,eAAXA,GAA0B,CACzF,IAAIuF,EAAQmC,EAAKnC,MACboQ,EAAUjO,EAAKiO,QAAQ2D,SAAS,GAChC5D,OAAQ,EACRuU,OAAQ,EACG,gBAAXjqB,EAC0B,aAAtBuF,EAAMiT,YACN9C,EAAQC,EAAQsP,KAAKtP,EAAQsP,KAAKrnB,OAAS,GAAGsnB,MAAM,IAGpD+E,EAAQtU,EAAQsP,KAAKrnB,OAAS,EAC9B8X,EAAQC,EAAQsP,KAAKgF,GAAO/E,MAAMvP,EAAQsP,KAAKgF,GAAO/E,MAAMtnB,OAAS,KAIzEqsB,EAAS1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EAChDzU,EAAQC,EAAQsP,KAAKgF,GAAO/E,MAAMvP,EAAQsP,KAAKgF,GAAO/E,MAAMtnB,OAAS,IAEzEyI,EAAQue,eAAeZ,OAAO3d,EAAQ0c,UAAUrN,EAAM4D,SAAS,GAAGtS,MAG1E,SAAgBmrB,GAAcrK,EAAUzhB,EAAS+rB,EAAejG,EAAU5F,EAAQe,GAC9E,IAAIzpB,EACAL,EACA0pB,EAEAxf,EAEA2qB,EACAC,EACAC,EAEAtL,EALAuL,EAAQjR,KAIRhc,EAAQuiB,EAASviB,MAEjB+kB,EAAS/kB,EAAM+kB,OACfmI,EAAQ3K,EAAS5kB,QAAU4kB,EAASnS,QAAQjC,WAAWhU,MAAQ,EAC/DgzB,EAAQ5K,EAAS3kB,QAAU2kB,EAASnS,QAAQjC,WAAWjU,OAAS,EAIpE,GAH0B,aAAtB8F,EAAMiT,cACNka,GAAUntB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa5kB,EAAM2kB,OAAOzqB,OAAS,IAElE6nB,EAUD,IATKf,IACDuB,EAAS9gB,IAAMwrB,EACXjtB,GAASA,EAAM2kB,QAAU3kB,EAAM4kB,UAC/B5kB,EAAM2kB,OAAOljB,IAAMwrB,EAGnBjtB,EAAM2kB,YAAS9oB,GAGlBvD,EAAI,EAAGysB,GAAUzsB,EAAIysB,EAAO1sB,OAAQC,IAC7BysB,EAAOzsB,GACTmJ,IAAMwrB,EAIpB,IADAvL,EAAQ,GAAYmL,EAAcO,WAAWxG,EAASnlB,KAAOzB,EAAM0hB,MAC9DppB,EAAI,EAAGopB,GAASppB,EAAIopB,EAAMrpB,OAAQC,IAKnC,IAJAqpB,EAAOD,EAAMppB,GACRypB,IACDJ,EAAKlgB,IAAMwrB,GAEVh1B,EAAI,EAAG0pB,EAAK5N,UAAY9b,EAAI0pB,EAAK5N,SAAS1b,OAAQJ,IAEnD80B,GADA5qB,EAAOwf,EAAK5N,SAAS9b,IACPmY,QAAQzS,QAAUwE,EAAKhI,MAAQ,EAC7C6yB,EAAS7qB,EAAKiO,QAAQxS,QAAUuE,EAAKjI,OAAS,EAC9CiI,EAAKsqB,QAAU,EACftqB,EAAKolB,QAAUplB,EAAKqlB,aAChBzF,GAAW8K,IAA+C,IAA7BA,EAAcQ,YAAiD,IAA7BR,EAAcQ,eACnD,aAAtBrtB,EAAMiT,YACN9Q,EAAKoC,OAAOI,IAAMqoB,EAASG,EAG3BhrB,EAAKoC,OAAOC,KAAOuoB,EAASG,GAG/BnL,IACD5f,EAAKV,IAAMwrB,GAIvB,IAAKlL,EAAQ,CACT,GAAIf,EAAQ,CAOR8L,GAAc9sB,OALV0hB,MAAOA,EACPqD,OAAQA,EAAQ5G,UAAWne,EAAMme,UACjC1gB,KAAM,WAAYwV,YAAajT,EAAMiT,YACrC0R,QAAUc,YAAc5jB,QAAS,SAAW3H,OAAQ,MAG9B,eAAtB8F,EAAMiT,aACN6Z,EAAU3yB,MAAQooB,EAASnS,QAAQjC,WAAWhU,MAC9C2yB,EAAU5yB,OAAS0sB,EAASxW,QAAQjC,WAAWjU,OAAS8F,EAAM2kB,OAAOzqB,OAAS8F,EAAMme,UACpF2O,EAAUnvB,QAAU4kB,EAASnS,QAAQzS,QAAsC,GAA3BkvB,EAAcQ,WAC9DP,EAAUlvB,QAAUgpB,EAASxW,QAAQxS,QAAsC,GAA3BivB,EAAcQ,aAG9DP,EAAU3yB,MAAQysB,EAASxW,QAAQjC,WAAWhU,MAC9C2yB,EAAU5yB,OAASqoB,EAASnS,QAAQjC,WAAWjU,OAC/C4yB,EAAUnvB,QAAUipB,EAASxW,QAAQzS,QAAsC,GAA3BkvB,EAAcQ,WAC9DP,EAAUlvB,QAAU2kB,EAASnS,QAAQxS,QAAsC,GAA3BivB,EAAcQ,YAElE9K,EAAWuK,EAQf,GANiC,IAA7BD,EAAcQ,aACd9K,EAAS5kB,SAAW,GACpB4kB,EAAS3kB,SAAW,IAExB2kB,EAASkK,QAAU,EACnBlK,EAAWzhB,EAAQwsB,IAAI/K,IAClBvB,EACD,IAAK,IAAIviB,EAAK,EAAGohB,EAAKC,OAAOC,KAAK8M,EAAcO,YAAa3uB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC/E,IAAI8uB,EAAM1N,EAAGphB,GACT0H,EAAY0mB,EAAcO,WAAWG,GACzCpnB,EAAU1E,IAAMwrB,EAChB9mB,EAAU9C,UAAY4pB,EACtB9mB,EAAU0iB,UAAYoE,EACtB9mB,EAAUsmB,QAAU,EACpB3rB,EAAQwsB,IAAInnB,GAGC,QAAjBrF,EAAQ0sB,MACR1sB,EAAQ2sB,sBAEZ3sB,EAAQ2d,QAAQ8D,IAEpB,OAAOA,EAEX,SAAgBmL,GAAc5sB,EAAS6sB,EAAelsB,EAAImsB,GACtD,IAAIvK,EACAlhB,EAAOwrB,EAAcjS,MAAM,GAC/B,GAAIkS,GAAgBtQ,GAAuBxc,EAASqB,GAAM,GAAO,CAC7D,IAAI0rB,OAAa,EACbzd,OAAU,EACVyQ,OAAa,EACbzd,OAAS,EACT0qB,OAAa,EACbtsB,EAAU,IAAIwkB,GACdvkB,IACAqsB,EAAchtB,EAAQ0c,UAAU/b,GAAY,SAC5CosB,EAAa1rB,EAAOrB,EAAQ0c,UAAU/b,IAE1C2O,EAAW3O,EAAoBosB,EAAWzd,QAA1BjO,EAAKiO,SACrByQ,EAAa/f,EAAQ0c,UAAUsQ,GAAc3rB,EAAKsb,YACF,SAA9BoD,EAAWrG,UAAU/c,QACnC4lB,EAAS,IAAIE,IACNxP,aACH6Z,GAAkBzrB,EAAa,WACW,eAArC0e,EAAWrG,UAAUvH,aAAgC9Q,EAAK4jB,SACrB,aAArClF,EAAWrG,UAAUvH,cACjB9Q,EAAK4b,SAAW,GAAK5b,EAAK+b,YAAc,GAAK/b,EAAK6e,SACvD5d,EAASoc,GAAWqB,EAAY,EAAegN,EAAW3P,YAAc/b,EAAK+b,eAAc2C,EAAW7gB,MAAM2kB,SAAU9D,EAAW7gB,MAAM4kB,YACvIvB,EAAO1lB,QAAUyF,EAAOP,OAAOjK,EAC/ByqB,EAAOzlB,QAAUwF,EAAOP,OAAOhK,EAC/B2I,EAAQrH,MAAQiJ,EAAOjJ,MACvBqH,EAAQtH,OAASkJ,EAAOlJ,SAGxBmpB,EAAO1lB,QAAUkjB,EAAWljB,QAC5B0lB,EAAOzlB,QAAUwS,EAAQxS,QACzB4D,EAAQrH,MAAQ0mB,EAAWzQ,QAAQjC,WAAWhU,MAC9CqH,EAAQtH,OAASkW,EAAQjC,WAAWjU,SAG5CmpB,EAAOtP,SAASrb,KAAK8I,GACrB6hB,EAAOpC,QAAQ,IAAIC,IACnBmC,EAAOlC,QAAQkC,EAAOjC,cAG9B,OAAOiC,EAEX,SAAgB0K,GAAoBjtB,EAASktB,EAAcC,EAAYC,GAInE,IAAK,IAHDvH,EAAY8C,GAAcuE,EAAcC,GACxCE,GAAiB,EACjBC,EAAWJ,EAAahuB,MAAM0hB,MAAMiF,GAC/B1uB,EAAIm2B,EAASra,SAAS1b,OAAS,EAAGJ,GAAK,EAAGA,IAC3Ci2B,EACIA,EAAYzsB,KAAO2sB,EAASra,SAAS9b,GAAGwJ,IACxC2sB,EAASra,SAAS5L,OAAOlQ,EAAG,IAIhC6I,EAAQutB,yBAAyBD,EAASra,SAAS9b,IAC7C6I,EAAQwY,eAAiBC,gBAAc+I,WACzCxhB,EAAQwY,eAAiBxY,EAAQwY,eAAiBC,gBAAc+I,SAChE6L,GAAiB,GAErBrtB,EAAQwtB,OAAOF,EAASra,SAAS9b,IACjCm2B,EAASra,SAAS5L,OAAOlQ,EAAG,GACxBk2B,IACArtB,EAAQwY,eAAiBxY,EAAQwY,gBAAkBC,gBAAc+I,WAKjF,SAAgBiM,GAAgBpyB,GAE5B,OADeA,EAAI4X,SAAS,GA2ChC,SAASya,GAAW1tB,EAASqB,GACzBrB,EAAQ4a,MAAMvT,OAAOrH,EAAQ4a,MAAMwG,QAAQ/f,GAAO,GAClDrB,EAAQ2tB,gBAAgBtsB,GACxBrB,EAAQ4tB,uBAAuBvsB,UACxBrB,EAAQ0c,UAAUrb,EAAKV,IAC9BX,EAAQqhB,eAAehgB,GA8D3B,SAAgBwsB,GAAe7tB,EAASuiB,GACpC,IAAI/qB,EAEJ,GAAI+qB,aAAkBE,GAAQ,CAC1B,GAAIF,EAAOtP,SAAS1b,OAAS,EACzB,IAAKC,EAAI,EAAGA,EAAI+qB,EAAOtP,SAAS1b,OAAQC,IAChC+qB,EAAOtP,SAASzb,aAAcirB,IAC9BoL,GAAe7tB,EAASuiB,EAAOtP,SAASzb,IAKpDk2B,GAAW1tB,EADJA,EAAQmhB,UAAUoB,EAAO5hB,MAIxC,SAAgBmtB,GAAY9tB,EAAS4nB,EAAOnG,GACxCzhB,EAAQyc,uBAAsB,GACtBgF,EAASnS,QAAQhN,OAAOxK,EACxB2pB,EAASnS,QAAQhN,OAAOvK,EADhC,IAGI6xB,EADAW,GAAc,EAEdrrB,EAAQuiB,EAASviB,MACjB6iB,EAAON,EAASnS,QAAQ2D,SAAS,GACjCwS,EAnwBR,SAA+BmC,EAAOnG,GAClC,IACIviB,EAAQuiB,EAASviB,MACjB0kB,EAAS1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EAEpD,MADoC,eAAtB5kB,EAAMiT,YAAgCyV,EAAMxK,YAAcwK,EAAM3K,SAAW2G,EA+vBxEmK,CAAenG,EAAOnG,GACnCuM,EAAc9uB,EAAM+kB,OAAO1sB,OAC/B,GAAI2H,EAAM+kB,OAAO1sB,OAAS,EAAG,CACrBkuB,IAAeuI,EAAc,IAC7BzD,GAAc,EACdX,EAAgB7L,GAAY7e,EAAM+kB,OAAOwB,EAAa,KAE1D,IAAI3H,EAAUC,GAAY7e,EAAM+kB,OAAOwB,IAEvC,GADAvmB,EAAM+kB,OAAO5c,OAAOoe,EAAY,KAC1BzlB,EAAQwY,eAAiBC,gBAAc+I,UAAW,CACpD,IAAItD,GACAvhB,KAAM,yBAA0B4sB,WAAY,SAAUnL,WAAYN,EAAS8L,cAAeA,EAC1FvL,WAAYN,GAAY6J,GAAQzJ,SAAU,WAAYoM,YAAaA,GAEvEvqB,EAAQse,gBAAgBJ,GAEF,eAAtBhf,EAAMiT,YAalB,SAAsCnS,EAAS+hB,EAAM6F,GACjD,IAAIjE,EACAsD,EACAiE,EACA+C,EAEAC,EACA70B,EACA7B,EACAL,EACAmtB,EACAjV,EACAhO,EACAwM,EACJ,IAAKrW,EAAI,EAAGA,EAAIuqB,EAAKnD,KAAKrnB,OAAQC,IAE9B,IADAmsB,EAAM5B,EAAKnD,KAAKpnB,IACRqnB,MAAMtnB,OAAS,IACnB0vB,EAAOtD,EAAI9E,MAAM+I,EAAMxK,aACvB8N,EAAYvH,EAAI9E,MAAMtnB,OAAS,IAAMqwB,EAAMxK,YAAeuG,EAAI9E,MAAM+I,EAAMxK,YAAc,GACpFuG,EAAI9E,MAAM+I,EAAMxK,YAAc,GAClC8Q,EAAahD,EAASjY,SAAS,GAC3BgU,EAAKhU,SAAS1b,OAAS,GAGvB,GAFA02B,EAAchH,EAAKhU,SAAS,GAC5B5R,EAAOrB,EAAQ0c,UAAUuR,EAAYttB,IACJ,IAA7BuqB,EAASjY,SAAS1b,QAAgB0vB,EAAKhU,SAAS1b,OAAS,EACzD2zB,EAASjY,SAAWgU,EAAKhU,SACzBiY,EAAS9C,WAAanB,EAAKmB,WAAa,MAEvC,CACD,IAAKjxB,EAAI,EAAGA,EAAI82B,EAAYhb,SAAS1b,OAAQJ,IAAK,CAE9C,IADAkY,EAAQ4e,EAAYhb,SAAS9b,cACRsrB,GAAQ,CAUzB,IATA5U,EAAS7N,EAAQ0c,UAAUrN,EAAM1O,KACrBuf,SACRrS,EAAO8O,SAAWuR,EAAWvtB,IAE5BgjB,EAAI9E,MAAMtnB,OAAS,IAAMqwB,EAAMxK,cAChCvP,EAAOpK,OAAOC,KAAOmK,EAAOyB,QAAQhN,OAAOxK,EAAIo2B,EAAW5rB,OAAOxK,EACjEuX,EAAM5L,OAAOC,KAAOmK,EAAOyB,QAAQhN,OAAOxK,EAAIo2B,EAAW5rB,OAAOxK,GAEpEo2B,EAAWjb,SAASrb,KAAKyX,GACrBrP,EAAQ0c,UAAUwR,EAAWvtB,IAAK,CAClC,IAAIof,EAAa/f,EAAQ0c,UAAUwR,EAAWvtB,IACzCof,EAAW9M,WACZ8M,EAAW9M,aAEf8M,EAAW9M,SAASrb,KAAKyX,EAAM1O,IAEnCstB,EAAYhb,SAAS5L,OAAOlQ,EAAG,GAC/BA,IACIkK,GAAQA,EAAK4R,WAAkD,IAAtC5R,EAAK4R,SAASmO,QAAQvT,EAAOlN,KACtDU,EAAK4R,SAAS5L,OAAOhG,EAAK4R,SAASmO,QAAQvT,EAAOlN,IAAK,GAG/D,GAAKgjB,EAAI9E,MAAMtnB,OAAS,IAAMqwB,EAAMxK,YAChC,IAAKkH,EAAI,EAAGA,EAAI4J,EAAWjb,SAAS1b,OAAQ+sB,IAAK,CAC7C,IAAI6J,EAAcD,EAAWjb,SAASqR,GACtC,GAAI6J,aAAuB1L,GAAQ,CAC/B,IAAI2L,EAAWpuB,EAAQ0c,UAAUyR,EAAYxtB,IAC7CytB,EAAS3qB,OAAOC,KAAO0qB,EAAS9e,QAAQhN,OAAOxK,EAAIm2B,EAAY3rB,OAAOxK,EACtEq2B,EAAY1qB,OAAOC,KAAO0qB,EAAS9e,QAAQhN,OAAOxK,EAAIm2B,EAAY3rB,OAAOxK,IAKzF,GAAIuJ,GAAQA,EAAK4jB,QAAS,CACtB,IAAIoJ,EAAWruB,EAAQ0c,UAAUwR,EAAWvtB,IACxC0tB,IACAH,EAAWlU,SAAWqU,EAAS/e,QAAQ0K,SAAWqU,EAAS/e,QAAQ0K,UAAY3Y,EAAKiO,QAAQ0K,UAGpG0T,GAAW1tB,EAASqB,GAKpC0gB,EAAKuM,aAAa1G,EAAMxK,aACnBwK,EAAMxK,YAAc2E,EAAKM,oBAAoB9qB,QAC9C8B,EAAQ0oB,EAAKM,oBAAoBuF,EAAMxK,aAAa/jB,MACpDA,GAASuuB,EAAMtY,QAAQjC,WAAWhU,MAClC0oB,EAAK5E,kBAAkByK,EAAMxK,YAAa/jB,GAAO,KAGjDA,EAAQ0oB,EAAKM,oBAAoBuF,EAAMxK,YAAc,GAAG/jB,MACxDA,GAASuuB,EAAMtY,QAAQjC,WAAWhU,MAClC0oB,EAAK5E,kBAAkByK,EAAMxK,YAAc,EAAG/jB,GAAO,IAjGjDk1B,CAAsBvuB,EAAS+hB,EAAM6F,GAoGjD,SAAoC5nB,EAAS+hB,EAAM6F,EAAOnC,EAAYhE,GAClE,IAAIkC,EACAsD,EACAqE,EACAlyB,EACA5B,EACAL,EACAmtB,EACJX,EAAM5B,EAAKnD,KAAKgJ,EAAM3K,UACtB,IAAIiO,EACAsD,EAEAnf,EACAxB,EAFA3O,EAAQuiB,EAASviB,MAGjB2E,EAAM4d,EAASnS,QAAQhN,OAAOvK,EAC9BkuB,EAAa/mB,EAAM+kB,OAAO1sB,YACTwD,IAAjBmE,EAAM2kB,QAAwB3kB,EAAM4kB,YACpCjgB,GAAOke,EAAKO,iBAAiB,GAAGlpB,QAGpC,IADAkyB,EAAW7F,IAAeQ,EAAclE,EAAKnD,KAAKgJ,EAAM3K,SAAW,GAAK8E,EAAKnD,KAAKgJ,EAAM3K,SAAW,GAC9FzlB,EAAI,EAAGA,EAAImsB,EAAI9E,MAAMtnB,OAAQC,IAI9B,GAHAyvB,EAAOtD,EAAI9E,MAAMrnB,GACjB0zB,EAAWI,EAAQzM,MAAMrnB,GACzBg3B,EAAYtD,EAASjY,SAAS,GAC1BgU,EAAKhU,SAAS1b,OAAS,EAAG,CAC1B,IAAI0b,EAAWgU,EAAKhU,SAAS,GACzB5R,EAAOrB,EAAQ0c,UAAUzJ,EAAStS,IACtC,GAAI8kB,EAAaQ,EACb,IAAK3B,EAAI,EAAGA,EAAIkK,EAAUvb,SAAS1b,OAAQ+sB,KACvCjV,EAAQmf,EAAUvb,SAASqR,cACN7B,MACjB5U,EAAS7N,EAAQ0c,UAAUrN,EAAM1O,KAC1B8C,OAAOI,IAAMgK,EAAOyB,QAAQhN,OAAOvK,GAAoB,IAAf0tB,EAAmB5hB,EAAMoP,EAAS3Q,OAAOvK,GACxFsX,EAAM5L,OAAOI,IAAMgK,EAAOyB,QAAQhN,OAAOvK,GAAoB,IAAf0tB,EAAmB5hB,EAAMoP,EAAS3Q,OAAOvK,IAInG,IAAKZ,EAAI,EAAGA,EAAI8b,EAASA,SAAS1b,OAAQJ,KACtCkY,EAAQ4D,EAASA,SAAS9b,cACLsrB,MACjB5U,EAAS7N,EAAQ0c,UAAUrN,EAAM1O,KAC1Bgc,SAAW6R,EAAU7tB,GACxB8kB,IAAeQ,IACfpY,EAAOpK,OAAOI,IAAMgK,EAAOyB,QAAQhN,OAAOvK,GAAoB,IAAf0tB,EAAmB5hB,EAAM2qB,EAAUlsB,OAAOvK,GACzFsX,EAAM5L,OAAOI,IAAMgK,EAAOyB,QAAQhN,OAAOvK,GAAoB,IAAf0tB,EAAmB5hB,EAAM2qB,EAAUlsB,OAAOvK,IAE5Fy2B,EAAUvb,SAASrb,KAAKyX,GACxB4D,EAASA,SAAS5L,OAAOlQ,EAAG,GAC5BA,IACIkK,EAAK4R,WAAkD,IAAtC5R,EAAK4R,SAASmO,QAAQvT,EAAOlN,KAC9CU,EAAK4R,SAAS5L,OAAOhG,EAAK4R,SAASmO,QAAQvT,EAAOlN,IAAK,IAInE+sB,GAAW1tB,EAASqB,GAG5B0gB,EAAK0M,UAAU7G,EAAM3K,UAChB2K,EAAM3K,SAAW8E,EAAKO,iBAAiB/qB,QACxC6B,EAAS2oB,EAAKO,iBAAiBsF,EAAM3K,UAAU7jB,OAC/CA,GAAUwuB,EAAMtY,QAAQjC,WAAWjU,OACnC2oB,EAAKrE,gBAAgBkK,EAAM3K,SAAU7jB,GAAQ,KAG7CA,EAAS2oB,EAAKO,iBAAiBsF,EAAM3K,SAAW,GAAG7jB,OACnDA,GAAUwuB,EAAMtY,QAAQjC,WAAWjU,OACnC2oB,EAAKrE,gBAAgBkK,EAAM3K,SAAW,EAAG7jB,GAAQ,IAnK7Cs1B,CAAoB1uB,EAAS+hB,EAAM6F,EAAOnC,EAAYhE,GAE1DlE,GAAqBvd,EAASyhB,GAC9BqF,GAAgB9mB,EAASyhB,EAAU,GACnCU,GAAiBV,EAAUzhB,GAC3BA,EAAQyc,uBAAsB,GAC9Bzc,EAAQof,oBAAoBqC,ICjgDpC,SAAgBkN,GAAY3uB,EAAS4uB,GACjC,IAAIC,EAAMC,SAASC,eAAe/uB,EAAQU,QAAQC,IAAMiuB,EAAe,UAAY,YAC/EI,EAAYC,GAAajvB,GACzBkvB,EAAgBC,GAAiBnvB,GACjCyD,EAASmrB,EAAgB,eAAiBI,EAAU31B,MAAQ,MAAU,cAAgB21B,EAAU51B,OAAS,MAC7G,IAAKy1B,EAAK,CACN,IAAI7tB,EAAQ,WAAa4tB,EAAeI,EAAU51B,OAAU81B,EAAc91B,OAAS,KAAQ,6BACtFw1B,EAAgBM,EAAc71B,MAAQ,IAAO21B,EAAU31B,OAAS,uCAAyCoK,EAK9GorB,EAAMO,GAAkB,OAHpBzuB,GAAMX,EAAQU,QAAQC,IAAMiuB,EAAe,UAAY,WACvD5tB,MAAOA,IAIfhB,EAAQU,QAAQ2uB,aAAaR,EAAK7uB,EAAQU,QAAQ4uB,YAClD,IAAIC,EAAeX,EAAe5uB,EAAQwvB,cAAcC,gBAAkBzvB,EAAQwvB,cAAcE,cAC5FC,EAAQ,IAAIC,GAAML,GACtBI,EAAMxd,YAAcyc,EAAe,aAAe,WAClDe,EAAMp4B,QAAUq3B,EAAeM,EAAc71B,MAAQ61B,EAAc91B,QAAUm2B,EAAaM,aAC1FF,EAAMlvB,SAAS,IAAMT,EAAQU,QAAQC,IAAMiuB,EAAe,UAAY,YACtEA,EAAe5uB,EAAQ8vB,OAASH,EAAQ3vB,EAAQ+vB,OAASJ,EACzD,IAAIK,EAAWlB,SAASC,eAAe/uB,EAAQU,QAAQC,IAAMiuB,EAAe,UAAY,YACxFA,EAAe5uB,EAAQ8vB,OAAOpvB,QAAUsvB,EAAWhwB,EAAQ+vB,OAAOrvB,QAAUsvB,EAKhF,SAAgBC,GAAYjwB,GACxB,IAAIkwB,GAAWlwB,EAAQmjB,SAASgN,iBAC5BC,GAAWpwB,EAAQmjB,SAASkN,eAC5BrwB,GAAWA,EAAQwvB,cAAcc,YACjCtwB,EAAQ8vB,OAAOv4B,OAAS,EACxByI,EAAQ+vB,OAAOx4B,OAAS,OACRwD,IAAZm1B,GAAyBlwB,EAAQ8vB,OAAOpvB,SACxC6vB,GAAqBvwB,EAASA,EAAQ8vB,OAAQI,GAAS,QAE3Cn1B,IAAZq1B,GAAyBpwB,EAAQ+vB,OAAOrvB,SACxC6vB,GAAqBvwB,EAASA,EAAQ+vB,OAAQK,GAAS,IAI3DI,GAAoBxwB,GAM5B,SAAgBwwB,GAAoBxwB,GAChCywB,GAAczwB,EAAQU,QAAQC,GAAK,WACnC8vB,GAAczwB,EAAQU,QAAQC,GAAK,WACnC8vB,GAAczwB,EAAQU,QAAQC,GAAK,iBAGvC,SAAgBsuB,GAAajvB,GACzB,IAAI6D,EAAM,EACNH,EAAO,EAKX,OAJI1D,EAAQwvB,cAAcc,aACtBzsB,EAAM7D,EAAQwvB,cAAcC,gBAAgBiB,UAC5ChtB,EAAO1D,EAAQwvB,cAAcE,cAAcgB,WAExC,IAAItQ,GAAK1c,EAAMG,GAG1B,SAAgBsrB,GAAiBnvB,GAC7B,IAAIgvB,EAAYC,GAAajvB,GACzB5G,EAAS4G,EAAQmjB,SAASwN,eAC1Bt3B,EAAQ2G,EAAQmjB,SAASyN,cAa7B,OAZIv3B,EAAQ2G,EAAQU,QAAQmwB,YAAc7B,EAAU31B,QAChDA,EAAQ2G,EAAQU,QAAQmwB,YAAc7B,EAAU31B,OAEhDD,EAAS4G,EAAQU,QAAQowB,aAAe9B,EAAU51B,SAClDA,EAAS4G,EAAQU,QAAQowB,aAAe9B,EAAU51B,QAElD4G,EAAQ8vB,QAAU9vB,EAAQ8vB,OAAOv4B,SACjC8B,EAAQ2G,EAAQ8vB,OAAOv4B,QAEvByI,EAAQ+vB,QAAU/vB,EAAQ+vB,OAAOx4B,SACjC6B,EAAS4G,EAAQ+vB,OAAOx4B,QAErB,IAAI6oB,GAAK/mB,EAAOD,GAwB3B,SAASm3B,GAAqBvwB,EAAS2vB,EAAO5e,EAAQ6d,GAClD,IAAII,EAAYC,GAAajvB,GACzBkvB,EAAgBC,GAAiBnvB,GACjCuvB,EAAeX,EAAe5uB,EAAQwvB,cAAcC,gBAAkBzvB,EAAQwvB,cAAcE,eAwBpG,SAAwB1vB,EAASkvB,EAAeN,GAC5C,IAAIC,EAAMC,SAASC,eAAe/uB,EAAQU,QAAQC,IAAMiuB,EAAe,UAAY,YAC/Ee,EAAQf,EAAe5uB,EAAQ8vB,OAAS9vB,EAAQ+vB,OAChDlB,GAAO7uB,GAAWkvB,IAClBL,EAAI7tB,MAAM3H,OAASu1B,EAAgBM,EAAc71B,MAAQs2B,EAAME,aAAgBF,EAAMe,WAAa,KAClG7B,EAAI7tB,MAAM5H,QAAUw1B,EAAee,EAAMe,UAAaxB,EAAc91B,OAASu2B,EAAME,cAAiB,MACpGhB,EAAMC,SAASC,eAAe/uB,EAAQU,QAAQC,GAAK,oBAE/CiuB,EAAgBC,EAAI7tB,MAAM5H,OAASu2B,EAAMe,UAAY,KAAS7B,EAAI7tB,MAAM3H,MAAQs2B,EAAMe,UAAY,OA/B1GK,CAAe/wB,EAASkvB,EAAeN,GAe3C,SAA0B5uB,EAASkvB,EAAeN,GAC9C,IAAIC,EAAMC,SAASC,eAAe/uB,EAAQU,QAAQC,IAAMiuB,EAAe,sBAAwB,wBAC3Fe,EAAQf,EAAe5uB,EAAQ8vB,OAAS9vB,EAAQ+vB,OAChDlB,GAAO7uB,GAAWkvB,IAClBL,EAAI7tB,MAAM3H,OAASu1B,EAAgBM,EAAc71B,MAA8B,EAArBs2B,EAAME,aAAqBF,EAAMe,WAAa,KACxG7B,EAAI7tB,MAAM5H,QAAUw1B,EAAee,EAAMe,UAAaxB,EAAc91B,OAA+B,EAArBu2B,EAAME,cAAsB,MAnB9GmB,CAAiBhxB,EAASkvB,EAAeN,GACzCe,EAAM5e,OAASA,EACf4e,EAAMlS,MAAQzd,EAAQmjB,SAAS8N,YAC/BtB,EAAMp4B,OAAS23B,EAAc71B,MAAQ,IACrCs2B,EAAMuB,YAAcC,GAAY5B,EAAa2B,aAC7CvB,EAAMyB,WACN,IAAIpB,EAAWpB,EAAe5uB,EAAQ8vB,OAAOpvB,QAAUV,EAAQ+vB,OAAOrvB,QAClEkuB,EACAoB,EAAShvB,MAAMqwB,WAAcrC,EAAU31B,MAAQs2B,EAAM2B,aAAgB,KAGrEtB,EAAShvB,MAAMuwB,UAAavC,EAAU51B,OAASu2B,EAAM6B,aAAgB,KC1I7E,SAAgBC,GAAoBvyB,GAChC,OAAOwyB,GAAkBxyB,EAAME,YC4BnC,SAAgBuyB,GAAeC,EAAQC,GAEnC,IAAK,IADDz6B,KACKI,EAAI,EAAGA,EAAIq6B,EAAgBt6B,OAAQC,IAAK,CAC7C,IAAI6D,EAAMw2B,EAAgBr6B,GACtBo6B,EAAOE,aAAaz2B,EAAIiU,QAAQhN,SAChClL,EAAWQ,KAAKyD,GAGxB,OAAOjE,EAGX,SAAgB26B,GAAenX,EAAOT,GAClC,IAAK,IAAI3iB,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAC9B,GAAIojB,EAAMpjB,GAAGmJ,KAAOwZ,EAChB,OAAO,EAGf,OAAO,EAKX,SAAgB6X,GAAeC,GAC3B,IAAIt1B,EASJ,OARIs1B,IACIA,EAAct1B,KACdA,EAAO,YAEFs1B,EAAc/yB,QAAU+yB,EAAct1B,OAC3CA,EAAO,SAGRA,EAKX,SAAgBu1B,GAAoB7iB,EAAOhO,GACnCA,aAAgBuU,KACXvG,EAAMnQ,MAAM2kB,SACbxiB,EAAKnC,MAAM4kB,WAAY,IAOnC,SAAgBqO,GAAuB9iB,EAAOhO,GAC1C,GAAIA,aAAgBuU,GAChB,OAAQvG,EAAMnQ,MAAMA,OAChB,IAAK,WACImQ,EAAMhW,QACPgI,EAAKhI,MAAQ,IAEZgW,EAAMjW,SACPiI,EAAKjI,OAAS,IAEbiW,EAAMrO,OAAUqO,EAAMrO,MAAM6Y,OAC7BxY,EAAKL,MAAM6Y,KAAO,SAEtB,MACJ,IAAK,WACIxK,EAAMhW,QACPgI,EAAKhI,MAAQ,IAEZgW,EAAMjW,SACPiI,EAAKjI,OAAS,IAEbiW,EAAMrO,OAAUqO,EAAMrO,MAAM6Y,OAC7BxY,EAAKL,MAAM6Y,KAAO,SAEtB,MACJ,IAAK,cAKL,IAAK,YACIxK,EAAMrO,OAAUqO,EAAMrO,MAAM6Y,OAC7BxY,EAAKL,MAAM6Y,KAAO,cAM9B,OAAQxK,EAAMnQ,MAAMkzB,MAChB,IAAK,SACI/iB,EAAMrO,OAAUqO,EAAMrO,MAAM6e,kBAC7Bxe,EAAKL,MAAM6e,gBAAkB,OAE5BxQ,EAAMrO,OAAUqO,EAAMrO,MAAM+Y,cAC7B1Y,EAAKL,MAAM+Y,YAAc,GAExB1K,EAAM+D,iBAAoB/D,EAAM+D,gBAAgBlU,QACjDmC,EAAK+R,gBAAgBlU,MAAQ,aAEjC,MACJ,IAAK,UACImQ,EAAMrO,OAAUqO,EAAMrO,MAAM+Y,cAC7B1Y,EAAKL,MAAM+Y,YAAc,GAExB1K,EAAM+D,iBAAoB/D,EAAM+D,gBAAgBlU,QACjDmC,EAAK+R,gBAAgBlU,MAAQ,aAE5BmQ,EAAM6D,iBAAoB7D,EAAM6D,gBAAgBhU,QACjDmC,EAAK6R,gBAAgBhU,MAAQ,SAOjD,SAAgBmzB,GAAiBC,EAAWC,EAAOC,GAC/C,IAAIC,EAIAA,EAHWpsB,GAAM0I,WAAWwjB,EAAOD,GACvBjsB,GAAM0I,WAAWyjB,EAAKF,GAElBE,EAGAD,EAEpB,IAAIG,EAAkBrsB,GAAMsI,UAAU4jB,EAAOC,GACzCG,EAAkBtsB,GAAMsI,UAAU8jB,EAAeH,GACjDzjB,EAAIxI,GAAM0I,WAAW0jB,EAAeH,GACpCM,EAAUD,EAAyD,GAArCD,EAAkBC,GACpD,OACI76B,EAAI26B,EAAc36B,EAAI+W,EAAItR,KAAKY,IAAIy0B,EAAUr1B,KAAK2R,GAAK,KACvDnX,EAAI06B,EAAc16B,EAAI8W,EAAItR,KAAKW,IAAI00B,EAAUr1B,KAAK2R,GAAK,MA0B/D,SAAgB2jB,GAAeC,GAC3B,IAAIpyB,EAAUoyB,EAAUC,cACxB,EAAG,CACC,GAAIC,GAAStyB,EAAS,aAClB,OAAO,EAEXA,EAAUA,EAAQqyB,oBACbryB,GACT,OAAO,EAGX,SAAgBuyB,GAAa5xB,EAAM1E,EAAM+f,GAErC,GAAIrb,GAAQA,EAAK4R,UAAY5R,EAAK4R,SAAS1b,OAAS,EAGhD,IAFA,IAAI8X,OAAQ,EACR7X,EAAI,EACDA,EAAI6J,EAAK4R,SAAS1b,OAAQC,IAE7B,OADA6X,EAAQqN,EAAUrb,EAAK4R,SAASzb,KACtB0H,MAAMvC,OAASA,GAGlBs2B,GAAa5jB,EAAO1S,EAAM+f,GAGzC,OAZe,EAenB,SAAgBwW,GAAqB7tB,EAAWitB,GAC5C,IAAIa,EACJA,EAAwC,WAAnB9tB,EAAU1I,KApDnC,SAAyB0I,GACrB,IAAI5L,KACJ,GAAuB,WAAnB4L,EAAU1I,KAEV,IAAK,IADD2nB,EAAI,EACC9sB,EAAI,EAAGA,EAAI6N,EAAUpL,SAAS1C,OAAQC,IAS3C,IAAK,IAPD4D,EAAUiK,EAAUpL,SAASzC,GAE7B+Z,EAAUlL,GAAMC,aAAalL,EAAQmW,QAA2BnW,EAAQg4B,aAAzBh4B,EAAQmW,OACvDjY,EAAU+M,GAAMC,aAAalL,EAAQ9B,QAA2B8B,EAAQi4B,aAAzBj4B,EAAQ9B,OACvDoN,EAAMzN,QAAQoM,EAAUmB,SAAS+K,EAAQnW,EAAQ3B,OAAO,IACxD4L,EAAUmB,SAASlN,EAAQiY,GAC3BlM,EAAUmB,SAASpL,EAAQ3B,OAAO,GAAIH,IAP1B,KAQPnC,EAAI,EAAGA,EAAIuP,EAAM,EAAGvP,GAAQ,GACjCsC,EAAO6qB,GACHpQ,GAAa7O,EAAWjK,EAAQ3B,OAAO,GAAK4M,GAAMC,aAAalL,EAAQmW,QAA2BnW,EAAQg4B,aAAzBh4B,EAAQmW,OAAgClL,GAAMC,aAAalL,EAAQ9B,QAA2B8B,EAAQi4B,aAAzBj4B,EAAQ9B,OAA+B8B,EAAQ3B,OAAO,GAAItC,EAAGuP,GAC/N4d,IAIZ,OAAO7qB,EAgC4C65B,CAAgBjuB,GAC/DA,EAAU8tB,mBACd,IAAK,IAAI37B,EAAI,EAAGA,EAAI27B,EAAmB57B,OAAS,EAAGC,IAAK,CACpD,IAAI+6B,EAAQY,EAAmB37B,GAC3Bg7B,EAAMW,EAAmB37B,EAAI,GAC7B2V,EAAOC,GAAKmmB,UAAUhB,EAAOC,IAEjC,GADArlB,EAAKqmB,QAAQnuB,EAAUouB,YACnBtmB,EAAK7I,cAAcguB,GAAY,CAC/B,IAAIoB,EAAgBrB,GAAiBC,EAAWC,EAAOC,GAGnDmB,EAAmB9tB,IAFN7N,GAAIu6B,EAAMz6B,EAAGI,GAAIs6B,EAAI16B,EAAGG,GAAIs6B,EAAMx6B,EAAGI,GAAIq6B,EAAIz6B,IAC7CC,GAAIs6B,EAAUx6B,EAAGI,GAAIw7B,EAAc57B,EAAGG,GAAIq6B,EAAUv6B,EAAGI,GAAIu7B,EAAc37B,IAE1F,GAAI47B,EAAiB7tB,QAAS,CAC1B,IAAIU,EAAWH,GAAM0I,WAAWujB,EAAWqB,EAAiBC,aAC5D,GAAIr2B,KAAK6G,IAAIoC,GAAYnB,EAAUouB,WAC/B,OAAO,MAGV,CACD,IAAII,EAASzmB,GAAKmmB,UAAUjB,EAAWA,IAEvC,GADAuB,EAAOL,QAAQ,GACXK,EAAOvvB,cAAciuB,IAAUsB,EAAOvvB,cAAckuB,GACpD,OAAO,EAGf,GAAInsB,GAAMhC,OAAOiuB,EAAWoB,GACxB,OAAO,GAInB,GAAIruB,EAAU6U,YAAY3iB,OAAS,EAE1B,CAAA,IADDmiB,EAAYrU,EAAUiK,QAAQ2D,SAClC,IAASzb,EAAI,EAAGA,EAAIkiB,EAAUniB,OAAQC,IAAK,CAEvC,GADkBkiB,EAAUliB,GACZ8K,OAAOgC,cAAcguB,GACjC,OAAO,GAInB,OAAO,EAGX,SAAgBzsB,GAAWiuB,EAAWC,GAClC,IAAIt3B,GAAU3E,EAAG,EAAGC,EAAG,GACnBi8B,EAAKF,EACLG,EAAKF,EACLG,GAAKD,EAAG97B,GAAK87B,EAAGh8B,KAAO+7B,EAAG97B,GAAK87B,EAAGh8B,KAAOi8B,EAAG/7B,GAAK+7B,EAAGj8B,KAAOg8B,EAAG77B,GAAK67B,EAAG/7B,IACtEk8B,GAAMF,EAAG/7B,GAAK+7B,EAAGj8B,KAAOg8B,EAAG/7B,GAAKg8B,EAAGh8B,KAAOg8B,EAAG97B,GAAK87B,EAAGh8B,KAAO+7B,EAAGh8B,GAAKi8B,EAAGj8B,IACvEo8B,GAAMJ,EAAG97B,GAAK87B,EAAGh8B,KAAOg8B,EAAG/7B,GAAKg8B,EAAGh8B,KAAO+7B,EAAG77B,GAAK67B,EAAG/7B,KAAO+7B,EAAGh8B,GAAKi8B,EAAGj8B,IAC3E,GAAU,IAANk8B,EACA,OAASpuB,SAAS,EAAO8tB,YAAan3B,GAE1C,IAAI43B,EAAKF,EAAKD,EACVI,EAAKF,EAAKF,EACd,OAAIG,GAAM,GAAKA,GAAM,GAAKC,GAAM,GAAKA,GAAM,GACvC73B,EAAM3E,EAAIk8B,EAAGh8B,GAAMq8B,GAAML,EAAG97B,GAAK87B,EAAGh8B,IACpCyE,EAAM1E,EAAIi8B,EAAG/7B,GAAMo8B,GAAML,EAAG77B,GAAK67B,EAAG/7B,KAC3B6N,SAAS,EAAM8tB,YAAan3B,KAEhCqJ,SAAS,EAAO8tB,YAAan3B,GAG1C,SAAgB83B,GAAWC,EAAQC,EAAMC,EAAQC,GAC7C,IAGIC,EAAQ/uB,GAFIgvB,GAAeL,EAAO18B,EAAG08B,EAAOz8B,EAAG08B,EAAK38B,EAAG28B,EAAK18B,GAChD88B,GAAeH,EAAO58B,EAAG48B,EAAO38B,EAAG48B,EAAK78B,EAAG68B,EAAK58B,IAEhE,OAAI68B,EAAM9uB,QACC8uB,EAAMhB,aALH97B,EAAG,EAAGC,EAAG,GAY3B,SAAgB88B,GAAe78B,EAAIC,EAAIC,EAAIC,GACvC,OAASH,GAAMiB,OAAOjB,IAAO,EAAGC,GAAMgB,OAAOhB,IAAO,EAAGC,GAAMe,OAAOf,IAAO,EAAGC,GAAMc,OAAOd,IAAO,GAGtG,SAAgBwV,GAAUjN,EAAShH,EAASuT,GACxC,IAAI6nB,KACJ7nB,EAAUA,GAAW,EACrB,IAAIvJ,GAAS5L,EAAG4B,EAAQ6T,QAAQzV,EAAImV,EAASlV,EAAG2B,EAAQ6T,QAAQxV,GAC5D4L,GAAU7L,EAAG4B,EAAQ8T,SAAS1V,EAAImV,EAASlV,EAAG2B,EAAQ8T,SAASzV,GAC/D8L,GAAQ/L,EAAG4B,EAAQ8P,YAAY1R,EAAGC,EAAG2B,EAAQ8P,YAAYzR,EAAIkV,GAC7DrJ,GAAW9L,EAAG4B,EAAQyP,WAAWrR,EAAGC,EAAG2B,EAAQyP,WAAWpR,EAAIkV,GAKlE,OAJA6nB,EAAKl9B,KAAK8L,GACVoxB,EAAKl9B,KAAK+L,GACVmxB,EAAKl9B,KAAKiM,GACVixB,EAAKl9B,KAAKgM,GACHkxB,EASX,SAAgBC,GAAiB/0B,EAASg1B,EAAe3zB,GACrD,IAAI0P,EACAkkB,EAAkB5zB,aAAgBuU,GAASvU,EAAKiT,YAAcK,kBAAgBugB,eAC3E7zB,EAAKiT,YAAcI,uBAAqBwgB,eAC3CC,EAAiB9zB,aAAgBuU,GAASvU,EAAKiT,YAAcK,kBAAgBzU,QAC1EmB,EAAKiT,YAAcI,uBAAqBxU,QAG/C6Q,EAIJ,SAAuB1P,EAAM2zB,EAAeh1B,EAASo1B,GACjD,IAAI34B,KAEAiE,GADQV,EAAQmjB,SAASxc,UAAU8W,MACzBqR,SAASC,eAAe/uB,EAAQU,QAAQC,KAClD2B,EAASjB,EAAKiO,QAAQhN,OACtB6K,EAAOzM,EAAQ20B,wBACIr1B,EAAQmjB,SAASgN,iBACnBnwB,EAAQmjB,SAASkN,eACtC,OAAQrwB,EAAQsB,cAAcH,UAC1B,IAAK,eACD1E,EAAQ64B,GAAYN,EAAe1yB,EAAOwG,aAAc9I,EAASo1B,EAAejoB,EAAK9T,MAAQ,EAAI8T,EAAK/T,QACtG,MACJ,IAAK,aACL,IAAK,aACDqD,EAAQ64B,GAAYN,EAAe1yB,EAAO6G,WAAYnJ,EAASo1B,EAAc,EAAGjoB,EAAK/T,QACrF,MACJ,IAAK,cACL,IAAK,cACDqD,EAAQ64B,GAAYN,EAAe1yB,EAAOkH,YAAaxJ,EAASo1B,EAAcjoB,EAAK9T,MAAO8T,EAAK/T,QAC/F,MACJ,IAAK,aACDqD,EAAQ64B,GAAYN,EAAe1yB,EAAO8G,WAAYpJ,EAASo1B,EAAc,EAAIjoB,EAAK/T,OAAS,GAC/F,MACJ,IAAK,UACL,IAAK,UACDqD,EAAQ64B,GAAYN,EAAe1yB,EAAOiL,QAASvN,EAASo1B,EAAc,EAAG,GAC7E,MACJ,IAAK,cACD34B,EAAQ64B,GAAYN,EAAe1yB,EAAOmG,YAAazI,EAASo1B,EAAcjoB,EAAK9T,MAAQ8T,EAAK/T,OAAS,GACzG,MACJ,IAAK,WACL,IAAK,WACDqD,EAAQ64B,GAAYN,EAAe1yB,EAAOkL,SAAUxN,EAASo1B,EAAcjoB,EAAK9T,MAAO,GACvF,MACJ,IAAK,YACDoD,EAAQ64B,GAAYN,EAAe1yB,EAAOiC,UAAWvE,EAASo1B,EAAejoB,EAAK9T,MAAQ,EAAI,GAGtG,OAAOoD,EA1CE84B,CAAcl0B,EAAM2zB,EAAeh1B,EADJ,YADlBi1B,GAAkBE,EAAgB9zB,EAAKjB,QAAQo1B,aAC/Dx1B,EAAQI,QAAQo1B,eAEtB,IAAIxG,EAAYC,GAAajvB,GAC7B,OAASlI,EAAGiZ,EAAOjZ,EAAIk3B,EAAU31B,MAAOtB,EAAGgZ,EAAOhZ,EAAIi3B,EAAU51B,QA0CpE,SAASk8B,GAAYN,EAAeS,EAAOz1B,EAASo1B,EAAct9B,EAAGC,GACjE,IAAI0E,KACAghB,EAAQzd,EAAQmjB,SAASxc,UAAU8W,MACnC0S,EAAmBnwB,EAAQmjB,SAASgN,iBACpCE,EAAiBrwB,EAAQmjB,SAASkN,eAGtC,OAFA5zB,EAAM3E,GAAKs9B,EAAeJ,EAAcl9B,EAAI29B,EAAM39B,GAAK2lB,EAAQ0S,EAAmBr4B,EAClF2E,EAAM1E,GAAKq9B,EAAeJ,EAAcj9B,EAAI09B,EAAM19B,GAAK0lB,EAAQ4S,EAAiBt4B,EACzE0E,EAGX,SAAgBi5B,GAAKC,EAASC,GAC1B,IAEInkB,EAFAja,EAAI,EACJL,EAAI,EAER,IAAKK,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAAK,CACjC,IAAI8Z,EAAIukB,GAAUF,EAAQn+B,GAAG8X,SAC7B,IAAKnY,EAAI,EAAGA,EAAIw+B,EAAQp+B,OAAQJ,IAAK,CACjC,IAAImL,EAASuzB,GAAUF,EAAQx+B,GAAGmY,SACnB,QAAXsmB,GAA+B,WAAXA,GAAkC,gBAAXA,GAAuC,WAAXA,EACnEtkB,EAAEvP,OAAOhK,EAAIuK,EAAOP,OAAOhK,IAC3B0Z,EAAOkkB,EAAQn+B,GACfm+B,EAAQn+B,GAAKm+B,EAAQx+B,GACrBw+B,EAAQx+B,GAAKsa,GAIbH,EAAEvP,OAAOjK,EAAIwK,EAAOP,OAAOjK,IAC3B2Z,EAAOkkB,EAAQn+B,GACfm+B,EAAQn+B,GAAKm+B,EAAQx+B,GACrBw+B,EAAQx+B,GAAKsa,IAK7B,OAAOkkB,EAGX,SAAgBG,GAAsBhuB,EAAK6c,EAAY8Q,GACnD,IAAIn9B,EACAy9B,EACAt5B,EACJs5B,EAAUC,GAAqBluB,EAAK6c,EAAY8Q,GAChDn9B,EAAQ+N,GAAMsI,UAAU7G,EAAIiuB,EAAQnS,OAAQ9b,EAAIiuB,EAAQnS,MAAQ,IAChE,IAAIqS,EAAgBC,GAAmBvR,GAIvC,OAHAloB,EAAQ4J,GAAMM,UAAUovB,EAAQt5B,MAAOnE,EAAQ,GAAI29B,GACnDF,EAAQt5B,MAAQA,EAChBs5B,EAAQz9B,MAAQA,EACTy9B,EAGX,SAAgBC,GAAqBv8B,EAAQkrB,EAAYriB,GASrD,IAAK,IAND7F,EACAnE,EACA69B,EAEAC,EACAC,EAPA9+B,EAAS,EACTwZ,EAAS4T,EAAW5T,OAIpBulB,KAGKn/B,EAAI,EAAGA,EAAIsC,EAAOlC,OAAS,EAAGJ,IACnCI,GAAU8O,GAAM2G,eAAevT,EAAOtC,GAAIsC,EAAOtC,EAAI,IACrDm/B,EAAQ1+B,KAAKL,GAEjB4+B,EAAeplB,EAASxZ,EACxB,IAAK,IAAI+sB,EAAI,EAAGA,EAAIgS,EAAQ/+B,OAAQ+sB,IAAK,CACrC,GAAIgS,EAAQhS,IAAM6R,EAId,OAHA79B,EAAQ+N,GAAMsI,UAAUlV,EAAO6qB,GAAI7qB,EAAO6qB,EAAI,IAC9C7nB,EAAQ4J,GAAMM,UAAUlN,EAAO6qB,GAAIhsB,EAAO69B,GAAgBC,GAAc,IACxEC,EAAS/R,GACA7nB,MAAOA,EAAOmnB,MAAOyS,GAElCD,EAAaE,EAAQhS,GAEzB,OAAS7nB,MAAOA,EAAOmnB,MAAOyS,GAGlC,SAAgBH,GAAmBvR,GAC/B,IAAI4R,OAA8Bx7B,IAAvB4pB,EAAW5jB,QAAwB,GAAK,EAC/Cy1B,EAAQ,EACZ,OAAQ7R,EAAW8R,WACf,IAAK,SACDD,EAAQ,EACR,MACJ,IAAK,SACDA,IAAU,EAAUD,GACpB,MACJ,IAAK,QACDC,EAAS,EAAUD,EAG3B,OAAOC,EAGX,SAAgBE,GAAqBr7B,EAAKY,EAAK6L,GAC3C7L,GACO,IACP,IAII06B,EACAC,EACJ,OAAQv7B,EAAIo7B,WACR,IAAK,SACGx6B,GARE,IAQgBA,GAPlB,KAQA26B,EAAS,QACTD,EAAwB,KAAft7B,EAAI0V,OAAiB,SAAW,OAEpC9U,GAVL,KAUqBA,GATnB,KAUF26B,EAAS,OACTD,EAAwB,KAAft7B,EAAI0V,OAAiB,SAAW,UAEpC9U,EAhBH,IAgBoBA,EAdtB,KAeA06B,EAAS,MACTC,EAAwB,KAAfv7B,EAAI0V,OAAiB,SAAW,UAGzC4lB,EAAS,SACTC,EAAyB,KAAfv7B,EAAI0V,OAAkB,SAAW,QAE/C,MACJ,IAAK,QACG9U,GA1BE,IA0BgBA,GAzBlB,KA0BA26B,EAAS,OACTD,EAAwB,KAAft7B,EAAI0V,OAAiB,SAAW,OAEpC9U,GA5BL,KA4BqBA,GA3BnB,KA4BF26B,EAAS,QACTD,EAAwB,KAAft7B,EAAI0V,OAAiB,SAAW,UAEpC9U,EAlCH,IAkCoBA,EAhCtB,KAiCA06B,EAAS,SACTC,EAAwB,KAAfv7B,EAAI0V,OAAiB,SAAW,UAGzC4lB,EAAS,MACTC,EAAwB,KAAfv7B,EAAI0V,OAAiB,SAAW,QAE7C,MACJ,IAAK,SACD6lB,EAAS,SACTD,EAAS,SAGjB,GAAmB,IAAft7B,EAAI0V,QAA+B,IAAf1V,EAAI0V,OAAc,CAGtC,OADY8lB,GAAmB/uB,EAAI,GAAIA,EAAI,KAEvC,IAAK,OACD8uB,EAAwB,IAAfv7B,EAAI0V,OAAe,QAAU,OACtC,MACJ,IAAK,QACD6lB,EAAwB,IAAfv7B,EAAI0V,OAAe,OAAS,QACrC,MACJ,IAAK,SACD4lB,EAAwB,IAAft7B,EAAI0V,OAAe,MAAQ,SACpC,MACJ,IAAK,MACD4lB,EAAwB,IAAft7B,EAAI0V,OAAe,SAAW,OAInD,OAAS6lB,OAAQA,EAAQD,OAAQA,GAGrC,SAAgBE,GAAmBltB,EAAKC,GACpC,OAAIrM,KAAK6G,IAAIwF,EAAI9R,EAAI6R,EAAI7R,GAAKyF,KAAK6G,IAAIwF,EAAI7R,EAAI4R,EAAI5R,GACxC4R,EAAI7R,EAAI8R,EAAI9R,EAAI,QAAU,OAG1B6R,EAAI5R,EAAI6R,EAAI7R,EAAI,SAAW,MAI1C,SAAgB++B,GAAiBz1B,EAAMrB,GACnC,GAAIqB,aAAgBuU,IAAQvU,EAAK4R,SAC7B,IAAK,IAAIzb,EAAI,EAAGA,EAAI6J,EAAK4R,SAAS1b,OAAQC,IAClCwI,EAAQ0c,UAAUrb,EAAK4R,SAASzb,IAAIyb,UACpC6jB,GAAiBz1B,EAAMrB,GAE3BA,EAAQ2tB,gBAAgB3tB,EAAQ0c,UAAUrb,EAAK4R,SAASzb,KACxDwI,EAAQ4tB,uBAAuB5tB,EAAQ0c,UAAUrb,EAAK4R,SAASzb,YACxDwI,EAAQ0c,UAAUrb,EAAK4R,SAASzb,IAInD,SAASu/B,GAAS1nB,EAAO4D,GACrB,GAAI5D,GAASA,EAAM4D,UAAY5D,EAAM4D,SAAS1b,OAAS,EACnD,IAAK,IAAIJ,EAAI,EAAGA,EAAIkY,EAAM4D,SAAS1b,OAAQJ,IAAK,CAC5C,IAAI6vB,EAAW3X,EAAM4D,SAAS9b,GAC1B6vB,aAAoBvE,IACpBsU,GAAS/P,EAAU/T,GAO/B,OAHoC,IAAhCA,EAASmO,QAAQ/R,EAAM1O,KACvBsS,EAASrb,KAAKyX,EAAM1O,IAEjBsS,EAmCX,SAAgB+jB,GAAU3f,GACtB,IAAI4f,EAlCR,SAA6Brc,GAOzB,IAAK,IALDvZ,EAEAirB,EAHArZ,KAMKzb,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAE9B,GAAwB,cADxB6J,EAAOuZ,EAAMpjB,IACJ0H,MAAMvC,KAAqB,CAEhC2vB,EADOjrB,EAAKiO,QAAQ2D,SAAS,GACF,WAC3B,IAAK,IAAItV,EAAK,EAAGohB,EAAKC,OAAOC,KAAKqN,GAAa3uB,EAAKohB,EAAGxnB,OAAQoG,IAG3DsV,EAAW8jB,GADHzK,EADEvN,EAAGphB,IAEcsV,GAIvC,OAAOA,EAeWikB,CAAoB7f,EAAMuD,OACxCuc,EAAepZ,GAAY1G,EAAOA,EAAM+f,mBAQ5C,OAPAD,EAAa3X,cAAc5E,SAC3Buc,EAAa3X,cAAcC,cAC3B0X,EAAa3X,cAAclQ,QAAU,KACjC+H,EAAMggB,sBAAsBC,kBAC5BH,EAAeG,GAAgBH,EAAc9f,IAnBrD,SAAgCpE,EAAUjT,GACtC,IAAI4a,EAAQ5a,EAAQ4a,MACpB,GAAIA,EACA,IAAK,IAAIpjB,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,KACS,IAAnCyb,EAASmO,QAAQxG,EAAMpjB,GAAGmJ,MAC1Bia,EAAMvT,OAAO7P,EAAG,GAChBA,KAeZ+/B,CAAuBN,EAAaE,GAC7BK,KAAKC,UAAUN,GAE1B,SAASG,GAAgBH,EAAc9f,EAAOqgB,EAAeC,GACzDD,EA2EJ,SAAwBrgB,EAAOqgB,GAC3B,IACIE,EADAv8B,KAEA2lB,EAAS,IAAI6W,GAEjB,GAAIxgB,EAAkB,aAClB,OAAQA,EAAkB,gBACtB,IAAK,UACDugB,EAAc,IAAIC,GAClB,MACJ,IAAK,OACDD,EAAc,IAAIhiB,GAAKoL,EAAQ,GAAI3lB,GACnC,MACJ,IAAK,OACDu8B,EAAc,IAAIE,GAAK9W,EAAQ,GAAI3lB,GACnC,MACJ,IAAK,SACDu8B,EAAc,IAAIG,GAAO/W,EAAQ,GAAI3lB,GACrC,MACJ,IAAK,OACDu8B,EAAc,IAAII,GAAKhX,EAAQ,GAAI3lB,GACnC,MACJ,IAAK,QACDu8B,EAAc,IAAIK,GAAMjX,EAAQ,GAAI3lB,GACpC,MACJ,IAAK,OACDu8B,EAAc,IAAIM,GAAKlX,EAAQ,GAAI3lB,GACnC,MACJ,IAAK,aACDu8B,EAAc,IAAIO,GAAWnX,EAAQ,GAAI3lB,GACzC,MACJ,IAAK,YACDu8B,EAAc,IAAIQ,GAAUpX,EAAQ,GAAI3lB,GACxC,MACJ,IAAK,YACDu8B,EAAc,IAAIS,GAAUrX,EAAQ,GAAI3lB,GACxC,MACJ,IAAK,mBACDu8B,EAAc,IAAIU,GAAiBtX,EAAQ,GAAI3lB,GAC/C,MACJ,IAAK,qBACDu8B,EAAc,IAAIW,GAAmBvX,EAAQ,GAAI3lB,GACjD,MACJ,IAAK,WACDu8B,EAAc,IAAIY,GAASxX,EAAQ,GAAI3lB,GACnCgc,EAAMwM,SACN+T,EAAY/T,OAAS,IAAI4U,GAAOzX,EAAQ,GAAI3lB,GAC5Cu8B,EAAY/T,OAAO7iB,MAAM6Y,KAAO,IAEpC,MACJ,IAAK,kBACD+d,EAAc,IAAIxjB,GAAgB4M,EAAQ,GAAI3lB,GAC9C,MACJ,IAAK,YACDu8B,EAAc,IAAIc,GAAU1X,EAAQ,GAAI3lB,GACxC,MACJ,IAAK,cACDu8B,EAAc,IAAIe,GAAY3X,EAAQ,GAAI3lB,GAC1C,MACJ,IAAK,iBACDu8B,EAAc,IAAIgB,GAAe5X,EAAQ,GAAI3lB,GAC7C,MACJ,IAAK,YACDu8B,EAAc,IAAIiB,GAAU7X,EAAQ,GAAI3lB,GACxC,MACJ,IAAK,eACDu8B,EAAc,IAAIkB,GAAa9X,EAAQ,GAAI3lB,GAC3C,MACJ,IAAK,eACDu8B,EAAc,IAAImB,GAAa/X,EAAQ,GAAI3lB,GAC3C,MACJ,IAAK,iBACDu8B,EAAc,IAAIoB,GAAehY,EAAQ,GAAI3lB,GAC7C,MACJ,IAAK,kBACDu8B,EAAc,IAAIqB,GAAgBjY,EAAQ,GAAI3lB,GAC9C,MACJ,IAAK,oBACDu8B,EAAc,IAAIsB,GAAkBlY,EAAQ,GAAI3lB,GAChD,MACJ,IAAK,iBACDu8B,EAAc,IAAIuB,GAAenY,EAAQ,GAAI3lB,GAC7C,MACJ,IAAK,WACDu8B,EAAc,IAAIwB,GAASpY,EAAQ,GAAI3lB,GACvC,MACJ,IAAK,eACDu8B,EAAc,IAAIyB,GAAarY,EAAQ,GAAI3lB,GAC3C,MACJ,IAAK,uBACDu8B,EAAc,IAAI0B,GAAqBtY,EAAQ,GAAI3lB,GACnD,MACJ,IAAK,iBACDu8B,EAAc,IAAI2B,GAAevY,EAAQ,GAAI3lB,GAC7C,MACJ,IAAK,OACDu8B,EAAc,IAAI1O,GAAKlI,EAAQ,GAAI3lB,GACnC,MACJ,IAAK,QACDu8B,EAAc,IAAI9M,GAAM9J,EAAQ,GAAI3lB,GACpC,MACJ,IAAK,iBACDu8B,EAAc,IAAI4B,GAClB,MACJ,IAAK,YACD5B,EAAc,IAAInjB,GAAUuM,EAAQ,GAAI3lB,GACxC,MACJ,IAAK,kBACDu8B,EAAc,IAAIxpB,GAAgB4S,EAAQ,GAAI3lB,GAC9C,MACJ,IAAK,gBACDu8B,EAAc,IAAIzpB,GAAc6S,EAAQ,GAAI3lB,GAC5C,MACJ,IAAK,oBACDu8B,EAAc,IAAInwB,GAAkBuZ,EAAQ,GAAI3lB,GAChD,MACJ,IAAK,iBACDu8B,EAAc,IAAIvjB,GAAe2M,EAAQ,GAAI3lB,GAC7C,MACJ,IAAK,OACDu8B,EAAc,IAAI6B,GAAKzY,EAAQ,GAAI3lB,GACnC,MACJ,IAAK,QAKGu8B,EAJCF,GACa,IAAIrxB,GAAM2a,EAAQ,GAAI3lB,GAKxC,MACJ,IAAK,aACDu8B,EAAc,IAAI8B,GAAW1Y,EAAQ,GAAI3lB,GACzC,MACJ,IAAK,UACDu8B,EAAc,IAAI+B,GAAQ3Y,EAAQ,GAAI3lB,QAK9Cu8B,EAAcF,EAElB,OAAOE,EAxNSgC,CAAeviB,EAAOqgB,GAGtC,IAAK,IAFDmC,KAEKl8B,EAAK,EAAGm8B,EADjBD,EAAaA,EAAWlT,OAAO3H,OAAOC,KAAKkY,IACCx5B,EAAKm8B,EAAaviC,OAAQoG,IAAM,CACxE,IAAIo8B,EAAWD,EAAan8B,GACxB0Z,aAAiBzB,KACjB+hB,EAA4B,UAAboC,GAEf5C,EAAa4C,aAAqBC,MAqB9C,SAA8B7C,EAAcO,EAAergB,EAAO0iB,GAC9D,GAAsC,IAAlC5C,EAAa4C,GAAUxiC,cAChB4/B,EAAa4C,QAGnB,GAAI5C,EAAa4C,GAAUE,MAAM,SAAUv5B,GAAW,MAA0B,iBAAZA,IAA0B,CAC/F,IAAIlJ,OAAI,EACJ0iC,GAAc,EAClB,IAAK1iC,EAAI,EAAGA,EAAI2/B,EAAa4C,GAAUxiC,OAAQC,IAEvC0iC,KADAA,GAAe/C,EAAa4C,GAAUviC,KAAOkgC,EAAcqC,GAAUviC,IAOzE0iC,UACO/C,EAAa4C,OAGvB,CACD,IAAIviC,OAAI,EAOR,GANiB,WAAbuiC,IACA5C,EAAa4C,GAAU1yB,OAAO,EAAG,GACK,IAAlC8vB,EAAa4C,GAAUxiC,eAChB4/B,EAAa4C,IAGxB5C,EAAa4C,GACb,IAAKviC,EAAI2/B,EAAa4C,GAAUxiC,OAAS,EAAGC,GAAK,EAAGA,IAC/B,UAAbuiC,GAAqC,eAAbA,IACxB5C,EAAa4C,GAAUviC,GAAG8X,QAAU,MAEvB,gBAAbyqB,IACA5C,EAAa4C,GAAUviC,GAAK8/B,GAAgBH,EAAa4C,GAAUviC,GAAI6f,EAAM0iB,GAAUviC,QAAiCuD,IAA5B28B,EAAcqC,GAA0BrC,EAAcqC,GAAUviC,QAAKuD,GAC/G,OAA9Cy8B,KAAKC,UAAUN,EAAa4C,GAAUviC,KACQ,OAA9CggC,KAAKC,UAAUN,EAAa4C,GAAUviC,UACRuD,IAA9Bo8B,EAAa4C,GAAUviC,IACvB2/B,EAAa4C,GAAU1yB,OAAO7P,EAAG,KA1D7C2iC,CAAqBhD,EAAcO,EAAergB,EAAO0iB,GAEpD5C,EAAa4C,aAAqB/a,OACtB,YAAb+a,IACA5C,EAAa4C,GAAYzC,GAAgBH,EAAa4C,GAAW1iB,EAAM0iB,GAAWrC,EAAcqC,GAAWpC,KAGzGD,GAAiBP,EAAa4C,KAAcrC,EAAcqC,SAAyCh/B,IAA3Bo8B,EAAa4C,MACrFpC,GAA4B,SAAboC,GAA0B1iB,aAAiBmhB,IAAyB,gBAAbuB,UACjE5C,EAAa4C,IAGmB,OAA3CvC,KAAKC,UAAUN,EAAa4C,KACe,OAA3CvC,KAAKC,UAAUN,EAAa4C,UACDh/B,IAA3Bo8B,EAAa4C,WACN5C,EAAa4C,GAG5B,OAAO5C,EAiMX,SAAgBiD,GAAY/iB,EAAOrX,GAC/BA,EAAQq6B,QACRr6B,EAAQyc,uBAAsB,GAM9B,IAAK,IALD6d,EAAMt6B,EAAQu6B,mBAAmBC,UACjCC,EAAWz6B,EAAQ06B,gBACnBC,EAAiB36B,EAAQ26B,eACzBvD,EAAoBp3B,EAAQo3B,kBAC5Bz+B,KACKgF,EAAK,EAAGohB,EAAK/e,EAAQ46B,eAAejiC,SAAUgF,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACzE,IAAI9F,EAAUknB,EAAGphB,GACjBhF,EAASd,EAAQsiB,OAAU0gB,QAAShjC,EAAQgjC,QAASC,WAAYjjC,EAAQijC,YAE7E,IAAIC,EAAwB/6B,EAAQwvB,cAAcC,gBAAgByB,YAC9D8J,EAAsBh7B,EAAQwvB,cAAcE,cAAcwB,YAC1D+J,EAAgBj7B,EAAQk7B,OAAOD,cAC/BE,EAAYn7B,EAAQk7B,OAAOC,UAC3BC,EAAep7B,EAAQq7B,gBACvBC,EAAoBt7B,EAAQu7B,qBAC5BC,EAAUhE,KAAKiE,MAAMpkB,GACzBmkB,EAAUE,GAAQF,GAClBx7B,EAAQ27B,oBAAsBH,EAAQG,wBACtC37B,EAAQsU,YAAcknB,EAAQlnB,aAAe4C,qBAAmByC,QAChE3Z,EAAQsX,KAAOkkB,EAAQlkB,MAAQC,eAAaoC,QAC5C3Z,EAAQ47B,gBAAkBJ,EAAQI,iBAAmB,MACrD57B,EAAQ67B,aAAeL,EAAQK,iBAC/B77B,EAAQiyB,cAAgBuJ,EAAQvJ,oBAAiBl3B,EACjDiF,EAAQI,QAAUo7B,EAAQp7B,YAC1BJ,EAAQ87B,QAAUN,EAAQM,cAAW/gC,EACrCiF,EAAQ26B,eAAiBA,EACzB36B,EAAQ+7B,eAAiBP,EAAQO,mBACjC/7B,EAAQ46B,eAAiBY,EAAQZ,mBACjC56B,EAAQg8B,OAASR,EAAQQ,WACzBh8B,EAAQwvB,cAAcC,gBAAgByB,YAAc6J,EACpD/6B,EAAQwvB,cAAcE,cAAcwB,YAAc8J,EAClD,IAAK,IAAIiB,EAAK,EAAGC,EAAKl8B,EAAQ46B,eAAejiC,SAAUsjC,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACzE,IAAIjgC,EAAMkgC,EAAGD,GACTtjC,EAASqD,EAAIme,QACbne,EAAI6+B,QAAUliC,EAASqD,EAAIme,MAAM0gB,QACjC7+B,EAAI8+B,WAAaniC,EAASqD,EAAIme,MAAM2gB,YAc5C,GAXA96B,EAAQm8B,gBAAkBX,EAAQW,iBAAmB,cACrDn8B,EAAQo8B,cAAgBZ,EAAQY,kBAChCp8B,EAAQyf,WAAa+b,EAAQ/b,eAC7Bzf,EAAQu6B,mBAAqBiB,EAAQjB,uBACrCv6B,EAAQu6B,mBAAmBC,UAAYF,EACvCt6B,EAAQ5G,OAASoiC,EAAQpiC,QAAU,OACnC4G,EAAQ06B,gBAAkBD,EAC1Bz6B,EAAQu7B,qBAAuBD,EAC/Bt7B,EAAQq7B,gBAAkBD,EAC1Bp7B,EAAQo3B,kBAAoBA,EAC5Bp3B,EAAQ0sB,KAAO8O,EAAQ9O,MAAQ,MAC3B8O,EAAQ5gB,MAAMrjB,OACd,IAAK,IAAIC,EAAI,EAAGA,EAAIgkC,EAAQ5gB,MAAMrjB,OAAQC,IAClCgkC,EAAQ5gB,MAAMpjB,GAAG0H,OAAyC,aAAhCs8B,EAAQ5gB,MAAMpjB,GAAG0H,MAAMvC,MACjDmvB,GAAc0P,EAAQ5gB,MAAMpjB,QAAIuD,OAAWA,OAAWA,OAAWA,GAAW,GAIxFiF,EAAQ4a,MAAQ4gB,EAAQ5gB,UACxB5a,EAAQwvB,cAAgBgM,EAAQhM,kBAChCxvB,EAAQq8B,aAAeb,EAAQa,iBAC/Br8B,EAAQ3G,MAAQmiC,EAAQniC,OAAS,OACjC2G,EAAQk7B,OAASM,EAAQN,WACzBl7B,EAAQk7B,OAAOD,cAAgB9J,GAAY8J,GAC3Cj7B,EAAQk7B,OAAOC,UAAYhK,GAAYgK,GACvCn7B,EAAQwY,eAAiB,EACzBxY,EAAQs8B,WAAY,EACpBt8B,EAAQyc,uBAAsB,GAGzB,IADD8f,EACJ,IAAS/kC,EAAI,EAAGA,EAAIwI,EAAQw8B,MAAMjlC,OAAQC,KACtC+kC,EAAYv8B,EAAQw8B,MAAMx8B,EAAQw8B,MAAMhlC,KAC9BilC,UACNF,aAAqB1E,IACrB73B,EAAQU,QAAQg8B,UAAUlQ,IAAI,aAQtC,OALIgP,EAAQhc,gBACRgc,EAAQhc,cAAc5E,SACtB4gB,EAAQhc,cAAcC,eAE1Bzf,EAAQwf,cAAgBgc,EAAQhc,cACzBgc,EAGX,SAAgBE,GAAQF,GACpB,GAAIA,SAAgCzgC,IAApBygC,EAAQmB,SAA0BnB,EAAQmB,QAAU,MAEhE,IAAK,IAAIh/B,EAAK,EAAGi/B,EADLpB,EAAQ5gB,MACcjd,EAAKi/B,EAAQrlC,OAAQoG,IAAM,CACzD,IAAI0D,EAAOu7B,EAAQj/B,GACnB,GAAI0D,GAAQA,EAAKw7B,MAAMtlC,OAAS,EAC5B,IAAK,IAAIwnB,EAAK,EAAGkd,EAAK56B,EAAKw7B,MAAO9d,EAAKkd,EAAG1kC,OAAQwnB,IAAM,CACpD,IAAI9a,EAAOg4B,EAAGld,GACV9a,GAAQA,EAAKqQ,aAAerQ,EAAKqQ,cAAgByB,kBAAgBC,OACjE/R,EAAKqQ,YAAcyB,kBAAgB4D,UAMvD,OAAO6hB,EAGX,SAAgBsB,GAAYC,EAAej5B,GAEvC,IAAI9C,EAAQ8C,EAAO9C,MACfg8B,EAAcl5B,EAClBA,EAAOm5B,eAAgB,EACvB,IAAK,IAAIt/B,EAAK,EAAGohB,EAAKC,OAAOC,KAAK8d,GAAgBp/B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAEpE,OADUohB,EAAGphB,IAET,IAAK,OACDqD,EAAM6Y,KAAOkjB,EAAcljB,KACvB7Y,aAAiBk8B,KAEjBl8B,EAAY,KAAI,eAEpB,MACJ,IAAK,eACDA,EAAMm8B,aAAeJ,EAAcI,aACnC,MACJ,IAAK,UACDn8B,EAAMo8B,QAAUL,EAAcK,QAC9B,MACJ,IAAK,cACDp8B,EAAM8Y,YAAcijB,EAAcjjB,YAClC,MACJ,IAAK,kBACD9Y,EAAM6e,gBAAkBkd,EAAcld,gBACtC,MACJ,IAAK,cACD7e,EAAM+Y,YAAcgjB,EAAchjB,YAClC,MACJ,IAAK,OACD/Y,EAAMoZ,KAAO2iB,EAAc3iB,KAC3B,MACJ,IAAK,QACDpZ,EAAMsZ,MAAQyiB,EAAcziB,MAC5B,MACJ,IAAK,eACDtZ,EAAMuZ,aAAewiB,EAAcxiB,aACnC,MACJ,IAAK,aACDvZ,EAAMq8B,WAAaN,EAAcM,WACjC,MACJ,IAAK,WACDr8B,EAAMqZ,SAAW0iB,EAAc1iB,SAC/B,MACJ,IAAK,SACDrZ,EAAMs8B,OAASP,EAAcO,OAC7B,MACJ,IAAK,YACDt8B,EAAMu8B,UAAYR,EAAcQ,UAChC,MACJ,IAAK,aACDv8B,EAAMw8B,WAAaT,EAAcS,WACjC,MACJ,IAAK,iBACDx8B,EAAMy8B,eAAiBV,EAAcU,eACrC,MACJ,IAAK,YASjB,SAAwBC,EAAiBC,GACrC,IAAK,IAAIhgC,EAAK,EAAGohB,EAAKC,OAAOC,KAAKye,GAAkB//B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtE,IAAIigC,EAAM7e,EAAGphB,GACb,OAAQigC,GACJ,IAAK,OACDD,EAAehhC,KAAO+gC,EAAgB/gC,KACtC,MACJ,IAAK,KACDghC,EAAe3lC,GAAK0lC,EAAgB1lC,GACpC,MACJ,IAAK,KACD2lC,EAAezlC,GAAKwlC,EAAgBxlC,GACpC,MACJ,IAAK,KACDylC,EAAe1lC,GAAKylC,EAAgBzlC,GACpC,MACJ,IAAK,KACD0lC,EAAexlC,GAAKulC,EAAgBvlC,GACpC,MACJ,IAAK,KACDwlC,EAAeE,GAAKH,EAAgBG,GACpC,MACJ,IAAK,KACDF,EAAeG,GAAKJ,EAAgBI,GACpC,MACJ,IAAK,KACDH,EAAeI,GAAKL,EAAgBK,GACpC,MACJ,IAAK,KACDJ,EAAeK,GAAKN,EAAgBM,GACpC,MACJ,IAAK,IACDL,EAAe9uB,EAAI6uB,EAAgB7uB,EACnC,MACJ,IAAK,QACD8uB,EAAeM,MAAQP,EAAgBO,QA3CvCC,CAAenB,EAAcoB,SAAUn9B,EAAMm9B,WAIrDr6B,aAAkBshB,IAClB4X,EAAYzX,qBA4CpB,SAAgB6Y,GAAgBrB,EAAej5B,EAAQu6B,GAGnD,IAAK,IAFDrB,EAAcl5B,EACdw6B,EAAYtB,EAAYsB,UACnB3gC,EAAK,EAAGohB,EAAKC,OAAOC,KAAK8d,GAAgBp/B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAEpE,OADUohB,EAAGphB,IAET,IAAK,QACDq/B,EAAYh8B,MAAMsZ,MAAQgkB,EAAUhkB,MAAQyiB,EAAcziB,MAC1D,MACJ,IAAK,UACD0iB,EAAYj8B,QAAUu9B,EAAUv9B,QAAUg8B,EAAch8B,SAAWu9B,EAAUC,KAC7E,MACJ,IAAK,OACD,IAAIC,EAAaH,EAAiBr9B,MAClCg8B,EAAYh8B,MAAMsZ,MAAQyiB,EAAcwB,KAAOD,EAAUhkB,MAAQkkB,EAAWlkB,MAC5E0iB,EAAYh8B,MAAMy8B,eAAiBV,EAAcwB,KAAOD,EAAUb,eAAiBY,EAAiBr9B,MAAMy8B,eAC1GT,EAAYj8B,QAAUg8B,EAAcwB,KAAOD,EAAUv9B,SAAWg8B,EAAcwB,KAAOF,EAAiBt9B,QACtGu9B,EAAUC,KAAOxB,EAAcwB,KAC/B,MACJ,IAAK,iBACDvB,EAAYh8B,MAAMy8B,eAAiBa,EAAUb,eAAiBV,EAAcU,iBAM5F,SAAgBgB,GAAmB19B,EAAS2e,EAAc1f,GACtDe,EAAQ1H,MAAQqmB,EAAarmB,MAC7B0H,EAAQ3H,OAASsmB,EAAatmB,OAC9B2H,EAAQoa,UAAYuE,EAAavE,UACjCpa,EAAQ6e,UAAYF,EAAaE,UACjC7e,EAAQ4e,SAAWD,EAAaC,SAChC5e,EAAQiZ,SAAW0F,EAAa1F,SAChCjZ,EAAQ2Z,oBAAsBgF,EAAapQ,QAAQ2D,SAAS,GAAGyH,oBAC/D3Z,EAAQ0Z,kBAAoBiF,EAAapQ,QAAQ2D,SAAS,GAAGwH,kBAC7D1Z,EAAQy0B,aAAe9V,EAAapQ,QAAQ2D,SAAS,GAAGuiB,aACxDz0B,EAAQ29B,QAAUhf,EAAapQ,QAAQ2D,SAAS,GAAGyrB,QAC/Chf,EAAaxgB,iBAAiBg5B,KAC9Bn3B,EAAQ0C,OAASic,EAAaxgB,MAAMuE,QAExC1C,EAAQJ,GAAK+e,EAAapQ,QAAQ2D,SAAS,GAAGtS,GAC9CI,EAAQC,MAAQ0e,EAAa1e,MAC7B,IACK,IAAIrD,EAAK,EAAGohB,EAAK/e,EAAQw8B,MAAO7+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAIghC,EAAY5f,EAAGphB,GACnB8yB,GAAc/Q,EAAa/e,GAAK,gBAAiBg+B,GACjDlO,GAAc/Q,EAAa/e,GAAK,wBAAyBg+B,GACzDlO,GAAc/Q,EAAa/e,GAAK,wBAAyBg+B,GAE7Djf,EAAapQ,QAAQ2D,SAAS5L,OAAO,EAAG,GACxCqY,EAAapQ,QAAQ2D,SAAS5L,OAAO,EAAG,EAAGtG,GAG/C,SAAgB69B,GAAYv9B,EAAMqe,EAAcmf,EAAW7+B,GACvD,IAAIe,EAAU,IAAImkB,GAClB,OAGQ7jB,EAAKnC,MAAMvC,MACf,IAAK,OACD,IAAImiC,EAAc,IAAIlvB,GACtBkvB,EAAY5nC,KAAOwoB,EAAaxgB,MAAMhI,KAEtCunC,GADA19B,EAAU+9B,EACkBpf,EAAc1f,GAC1C,MACJ,IAAK,QACD,IAAI++B,EAAe,IAAIC,GACvBD,EAAa17B,OAASqc,EAAaxgB,MAAMmE,OACzC07B,EAAaE,WAAavf,EAAaxgB,MAAMggC,MAC7CH,EAAaI,WAAazf,EAAaxgB,MAAMue,MAE7CghB,GADA19B,EAAUg+B,EACkBrf,EAAc1f,GAC1C,MACJ,IAAK,OAKDy+B,GADA19B,EAFkB,IAAIqkB,GAGM1F,EAAc1f,GAC1C,MACJ,IAAK,QACD,IAAIU,OAAU,EACdA,EAAuC,cAA7Bgf,EAAaxgB,MAAMA,MAAwB,IAAIgmB,GAAmB,IAAItV,GAC/C,YAA7B8P,EAAaxgB,MAAMA,MACnBwB,EAAQxJ,KAAO0C,EAAe8lB,EAAaxgB,MAAMzF,QAGjDiH,EAAQxJ,KAAO+H,EAAcygB,EAAaxgB,MAAMA,OAEpDu/B,GAAmB19B,EAAS2e,EAAc1f,GACT,cAA7B0f,EAAaxgB,MAAMA,QACnBwB,EAAQvH,aAAeumB,EAAaxgB,MAAM/F,cAE9C4H,EAAUL,EACV,MACJ,IAAK,OACD,IAAI0+B,EAAmB,IAAIxvB,GAC3BwvB,EAAiBloC,KAAO2I,EAAa6f,EAAaxgB,MAAMA,OAExDu/B,GADA19B,EAAUq+B,EACkB1f,EAAc1f,GAC1C,MACJ,IAAK,SACD,IAAIq/B,EAAgB,IAAIC,GAAqBj+B,EAAKV,GAAIX,EAAQU,QAAQC,IACtE0+B,EAAct+B,QAAU2e,EAAaxgB,MAAM6B,QAC3Cs+B,EAAc5hB,MAAQiC,EAAaxgB,MAAMue,MAEzCghB,GADA19B,EAAUs+B,EACkB3f,EAAc1f,GAC1C,MACJ,IAAK,OACD,IAAIu/B,EAAc,IAAIC,GAAmBn+B,EAAKV,GAAIX,EAAQU,QAAQC,IAClE4+B,EAAYx+B,QAAU2e,EAAaxgB,MAAM6B,QAEzC09B,GADA19B,EAAUw+B,EACkB7f,EAAc1f,QAE1BjF,IAApBsG,EAAKnC,MAAMvC,MAAsB0E,EAAKnC,MAAMvC,OAASkiC,EAAU3/B,MAAMvC,KACrE8iC,GAAcp+B,EAAMqe,EAAc1f,IAGlCe,EAAQ1H,MAAQqmB,EAAapQ,QAAQ2D,SAAS,GAAG5Z,MACjD0H,EAAQ3H,OAASsmB,EAAapQ,QAAQ2D,SAAS,GAAG7Z,OAC9CsmB,EAAaxgB,iBAAiBg5B,KAC9Bn3B,EAAQ0C,OAASic,EAAaxgB,MAAMuE,QAExC1C,EAAQC,MAAQ0e,EAAa1e,MAC7B0e,EAAapQ,QAAQ2D,SAAS,GAAKlS,GAI3C,SAAgB0+B,GAAcC,EAAWhgB,EAAc1f,GACnD,GAAIgf,OAAOC,KAAKygB,EAAUxgC,OAAO3H,OAAS,EACtC,GAAgC,SAA5BmoB,EAAaxgB,MAAMvC,WAA4C5B,IAAzB2kC,EAAUxgC,MAAMhI,KACtDwoB,EAAapQ,QAAQ2D,SAAS,GAAG/b,KAAOwoC,EAAUxgC,MAAMhI,UAEvD,GAAgC,SAA5BwoB,EAAaxgB,MAAMvC,WAA+C5B,IAA5B2kC,EAAUxgC,MAAM6B,QAC3D2e,EAAapQ,QAAQ2D,SAAS,GAAGlS,QAAU2+B,EAAUxgC,MAAM6B,aAE1D,GAAgC,UAA5B2e,EAAaxgB,MAAMvC,WAA+C5B,IAA3B2kC,EAAUxgC,MAAMmE,OAC5Dqc,EAAapQ,QAAQ2D,SAAS,GAAG5P,OAASq8B,EAAUxgC,MAAMmE,YAEzD,GAAgC,WAA5Bqc,EAAaxgB,MAAMvC,KAAmB,CAE3C,IAAK,IADDgjC,OAAgB,EACXnoC,EAAI,EAAGA,EAAIwI,EAAQw8B,MAAMjlC,OAAQC,IACtCmoC,EAAgBC,GAAkBlgB,EAAapQ,QAAQ2D,SAAS,GAAGtS,GAAK,kBAAmBX,EAAQw8B,MAAMhlC,SACzEuD,IAA5B2kC,EAAUxgC,MAAM6B,SAAyB4+B,IACzCA,EAAcE,YAAYF,EAAc1sB,SAAS,IACjDyM,EAAapQ,QAAQ2D,SAAS,GAAGlS,QAAU2+B,EAAUxgC,MAAM6B,QAC3D4+B,EAAcG,YAAYC,GAAWrgB,EAAapQ,QAAQ2D,SAAS,IAAI,KAG/EyM,EAAapQ,QAAQ2D,SAAS,GAAGwK,MAAQiiB,EAAUxgC,MAAMue,MACrDiiB,EAAUxgC,MAAMue,MAAQiC,EAAapQ,QAAQ2D,SAAS,GAAGwK,WAE5D,GAAgC,SAA5BiC,EAAaxgB,MAAMvC,KAEnB,CAAA,IADDqjC,OAAc,EAClB,IAASxoC,EAAI,EAAGA,EAAIwI,EAAQw8B,MAAMjlC,OAAQC,KACtCwoC,EAAcJ,GAAkBlgB,EAAapQ,QAAQ2D,SAAS,GAAGtS,GAAK,gBAAiBX,EAAQw8B,MAAMhlC,OAEjGwoC,EAAYH,YAAYG,EAAY/sB,SAAS,IAC7CyM,EAAapQ,QAAQ2D,SAAS,GAAGlS,QAAU2+B,EAAUxgC,MAAM6B,QAC3Di/B,EAAYF,YAAYC,GAAWrgB,EAAapQ,QAAQ2D,SAAS,IAAI,UAI5E,GAAgC,SAA5ByM,EAAaxgB,MAAMvC,WAA6C5B,IAA1B2kC,EAAUxgC,MAAMA,MAAqB,CAChFwgB,EAAaxgB,MAAMA,MAAQwgC,EAAUxgC,MAAMA,MAC3C,IACI+gC,EAAgBpgC,EADP6f,EAAaxgB,MAAMA,MACQE,YACxCsgB,EAAapQ,QAAQ2D,SAAS,GAAG/b,KAAO+oC,OAEvC,GAAgC,gBAA5BvgB,EAAaxgB,MAAMvC,WAAoD5B,IAA1B2kC,EAAUxgC,MAAMA,MAClEghC,GAAsBxgB,EAAcggB,QAEnC,QAAqC3kC,IAAjC2kC,EAAUxgC,MAAM/F,aACrBumB,EAAapQ,QAAQ2D,SAAS,GAAG9Z,aAAeumC,EAAUxgC,MAAM/F,kBAE/D,QAA8B4B,IAA1B2kC,EAAUxgC,MAAMA,MAAqB,CAC1CwgB,EAAaxgB,MAAMA,MAAQwgC,EAAUxgC,MAAMA,MAC3C,IACIihC,EAAiBlhC,EADRygB,EAAaxgB,MAAMA,MACUE,YAC1CsgB,EAAapQ,QAAQ2D,SAAS,GAAG/b,KAAOipC,EAGhDzgB,EAAapQ,QAAQ2D,SAAS,GAAGmtB,gBAAiB,EAGtD,SAAgBF,GAAsBxgB,EAAcggB,GAChDhgB,EAAaxgB,MAAMA,MAAQwgC,EAAUxgC,MAAMA,MAC3C,IACImhC,EAAuB5O,GADd/R,EAAaxgB,MAAMA,MACsBE,YACrB,gBAA7BsgB,EAAaxgB,MAAMA,MACnBwgB,EAAapQ,QAAQ2D,SAAS,GAAGjS,MAAM6Y,KAAO,QAEZ,aAA7B6F,EAAaxgB,MAAMA,OACK,aAA7BwgB,EAAaxgB,MAAMA,MACnBwgB,EAAapQ,QAAQ2D,SAAS,GAAGjS,MAAM6Y,KAAO,QAEZ,cAA7B6F,EAAaxgB,MAAMA,QACpBwgB,aAAwB9J,KACxB8J,EAAapQ,QAAUgxB,GAAgB5gB,IAE3CA,EAAapQ,QAAQ2D,SAAS,GAAG/b,KAAOmpC,GAIhD,SAAgBC,GAAgBj/B,GAC5B,IAAIk/B,EAAiB,IAAI9d,GACzB8d,EAAev/B,MAAM6Y,KAAO,cAE5B,IAAIpa,EAAW,4GAEX+gC,EAAiB,IAAI5wB,GACzB4wB,EAAetpC,KAAOuI,EACtB+gC,EAAe7/B,GAAKU,EAAKV,GAAK,eAC9B6/B,EAAe9lB,oBAAsB,SACrC8lB,EAAe/lB,kBAAoB,SACnC+lB,EAAehL,aAAe,SAC9BgL,EAAex/B,MAAM8Y,YAAczY,EAAKL,MAAM8Y,YAC9C0mB,EAAex/B,MAAM+Y,YAAc1Y,EAAKL,MAAM+Y,YAE9C,IAAI0mB,EAAiB,IAAI7wB,GAiBzB,OAhBA6wB,EAAevpC,KAAOuI,EACtBghC,EAAe9/B,GAAKU,EAAKV,GAAK,eAC9B8/B,EAAe/lB,oBAAsB,SACrC+lB,EAAehmB,kBAAoB,SACnCgmB,EAAejL,aAAe,SAC9BiL,EAAez/B,MAAM6Y,KAAOxY,EAAKL,MAAM6Y,KACvC4mB,EAAez/B,MAAM8Y,YAAczY,EAAKL,MAAM8Y,YAC9C2mB,EAAez/B,MAAM+Y,YAAc1Y,EAAKL,MAAM+Y,YAE9CwmB,EAAettB,UAAYutB,EAAgBC,GAC3CF,EAAettB,SAAS,GAAG5Z,MAAQgI,EAAKhI,MACxCknC,EAAettB,SAAS,GAAG7Z,OAASiI,EAAKjI,OACzCmnC,EAAettB,SAAS,GAAG7Z,OAASiI,EAAKjI,OAAS,IAClDmnC,EAAettB,SAAS,GAAG5Z,MAAQgI,EAAKhI,MAAQ,IAChDknC,EAAev/B,MAAM+Y,YAAc,EACnCwmB,EAAev/B,MAAM8Y,YAAc,cAC5BymB,EAGX,SAAgBG,GAAqBC,EAAkB5/B,EAASM,GAC5D,IAAIg/B,EAAuB5O,GAAoBpwB,EAAKnC,MAAMA,OAG1D,OAFAyhC,EAAiBzpC,KAAOmpC,EACxBt/B,EAAU4/B,EACFt/B,EAAKnC,MAAMA,OACf,IAAK,iBACD,GAAImC,EAAK6Y,YACL,IAAK,IAAI1iB,EAAI,EAAGA,EAAI6J,EAAK6Y,YAAY3iB,OAAQC,IACzC6J,EAAK6Y,YAAY1iB,GAAGuJ,QAAU,KAAOM,EAAK6Y,YAAY1iB,GAAGuJ,QAAU,KAG3EA,EAAU4/B,EACV,MACJ,IAAK,YACD5/B,EAAUu/B,GAAgBj/B,GAGlC,OAAON,EAGX,SAAgB6/B,GAAeC,GAC3BpQ,GAAcoQ,EAAQ,WACtBpQ,GAAcoQ,EAAQ,WAG1B,SAAgBC,GAAWC,EAAOC,GAC9B,IAAIpd,EAAQmd,EAAM3f,QAAQ4f,GACtBpd,GAAS,GACTmd,EAAM15B,OAAOuc,EAAO,GAI5B,SAAgBqd,GAAgB57B,EAAW5L,GACvC,IACIynC,EACAC,EACAC,EAMJ,GAJA/7B,EAAU8tB,mBAAqB15B,EAC/B4L,EAAUg8B,qBAAqBh8B,EAAW5L,EAAQ4L,EAAUiK,QAAQ2D,SAAS,IAClE5N,EAAUxD,YACrBs/B,EAAe97B,EAAU6N,gBACF,WAAnB7N,EAAU1I,KAAmB,CAC7B,IAAI2kC,EAAej8B,EAAUpL,SAAS,GAClCyR,EAAcrG,EAAUpL,SAASoL,EAAUpL,SAAS1C,OAAS,GACjE2pC,GAAe76B,GAAMC,aAAaoF,EAAYpS,QAA+BoS,EAAY2nB,aAAjC3nB,EAAYpS,OAC/D+M,GAAMC,aAAag7B,EAAa/vB,QAAgC+vB,EAAalO,aAAnCkO,EAAa/vB,aAG5D2vB,EAAa77B,EAAU8tB,mBAE3B15B,EAAS4L,EAAUk8B,eAAel8B,EAAW5L,GAC7C,IAAIiH,EAAU2E,EAAUiK,QAAQ2D,SAAS,GACzCvS,EAAQ0/B,gBAAiB,EACzB1/B,EAAU2E,EAAUiK,QAAQ2D,SAAS,GACrC5N,EAAUm8B,uBAAuB9gC,EAASjH,EAAO,GAAIynC,EAAW,GAAIC,GACtD97B,EAAU0G,YACxBq1B,EAAe/7B,EAAU+N,gBACzB1S,EAAU2E,EAAUiK,QAAQ2D,SAAS,GACrC5N,EAAUm8B,uBAAuB9gC,EAASjH,EAAOA,EAAOlC,OAAS,GAAI2pC,EAAWA,EAAW3pC,OAAS,GAAI6pC,GACxG/7B,EAAUo8B,mBAAmBp8B,GAGjC,SAAgBq8B,GAAsBC,EAAcC,EAAQj7B,GACxD,IAMIlK,EANA6S,EAAUqyB,EAAaryB,QAEvBhN,EAASgN,EAAQhN,OACjByO,EAAS6wB,EAAO7wB,OAChBiR,EAAO4f,EAAO5f,KAAOrb,EAAU8W,MAC/Bha,EAASm+B,EAAOn+B,OAEhBC,EAAO4L,EAAQzS,QAAUyS,EAAQjC,WAAWhU,MAAQiW,EAAQuyB,MAAM/pC,EAClE+L,EAAMyL,EAAQxS,QAAUwS,EAAQjC,WAAWjU,OAASkW,EAAQuyB,MAAM9pC,EAEtE,GADA0E,GAAU3E,EAAG,EAAGC,EAAG,GACf4pC,EAAa/mB,MAAMrjB,OAAS,EAAG,CAC/B,OAAQqqC,EAAOE,MACX,IAAK,MACDrlC,EAAM3E,GAAK4L,EAAOpB,EAAOjJ,MAAQ0X,EACjCtU,EAAM1E,GAAK8L,EAAMme,EACjB,MACJ,IAAK,SACDvlB,EAAM3E,GAAK4L,EAAOqN,EAASzO,EAAOjJ,MAClCoD,EAAM1E,GAAK8L,EAAMyL,EAAQjC,WAAWjU,OAAS4oB,EAC7C,MACJ,IAAK,OACDvlB,EAAM3E,GAAK4L,EAAOse,EAClBvlB,EAAM1E,GAAK8L,EAAMkN,EAASzO,EAAOlJ,OACjC,MACJ,IAAK,QACDqD,EAAM3E,GAAK4L,EAAO4L,EAAQjC,WAAWhU,MAAQ2oB,EAC7CvlB,EAAM1E,GAAK8L,EAAMkN,EAASzO,EAAOlJ,OAGzCqD,EAAM3E,IAAO2L,EAAOC,KAAOD,EAAOE,OAASgD,EAAU8W,MAChDuE,EAAO,GAAqC,WAA/B4f,EAAOlnB,oBAAmC,EAAoC,UAA/BknB,EAAOlnB,qBAAmC,EAAI,GAC/Gje,EAAM1E,IAAO0L,EAAOI,IAAMJ,EAAOG,QAAU+C,EAAU8W,MAChDuE,EAAO,GAAmC,WAA7B4f,EAAOnnB,kBAAiC,EAAkC,QAA7BmnB,EAAOnnB,mBAA+B,EAAI,QAExG,GAAIknB,EAAaliB,WAAWloB,OAAS,EAAG,CACzC,IAAI8N,EAAYs8B,EAAaliB,WAAW,GACpCkF,GAAe5T,OAAQA,GACvBgxB,EAAkB/L,GAAqB3wB,EAAU8tB,mBAAoBxO,GACrEf,EAAQme,EAAgBne,MAC5BnnB,EAAQslC,EAAgBtlC,MACxB,IAAIulC,EAAelM,GAAsBzwB,EAAU8tB,mBAAoBxO,EAAYriB,GAG/EhK,GAFS+M,EAAU8tB,mBAEX6O,EAAa1pC,OAEzBuF,EADIrB,EAASL,KACS7D,EAAO+M,EAAU8tB,mBAAmBvP,GAAO9rB,EAAGuN,EAAU8tB,mBAAmBvP,GAAO7rB,IACxG0E,EAAQF,EAAuBC,EAAQC,IACjC3E,GAAM2L,EAAOC,KAAOD,EAAOE,MAC5Bqe,EAAO,GAAqC,WAA/B4f,EAAOlnB,oBAAmC,EAAoC,UAA/BknB,EAAOlnB,qBAAmC,EAAI,GAC/Gje,EAAM1E,GAAM0L,EAAOI,IAAMJ,EAAOG,OAC3Boe,EAAO,GAAmC,WAA7B4f,EAAOnnB,kBAAiC,EAAkC,QAA7BmnB,EAAOnnB,mBAA+B,EAAI,GAEzG5c,EADArB,EAASL,IACY7D,EAAO+M,EAAU8tB,mBAAmBvP,GAAO9rB,EAAGuN,EAAU8tB,mBAAmBvP,GAAO7rB,GACvG0E,EAAQF,EAAuBC,EAAQC,GAE3C,GAA4B,IAAxB6S,EAAQtB,aAAiD,IAA5BsB,EAAQrB,gBAAuB,CAC5D,IAAIzR,EACJqB,EADIrB,EAASL,IACQmT,EAAQtB,YAAcsB,EAAQrB,gBAAiBqB,EAAQzS,QAASyS,EAAQxS,SAC7FL,EAAQF,EAAuBC,EAAQC,GAE3C,OAAOA,EAGX,SAAgBwlC,GAAgBC,EAAqB7e,EAAQ8e,EAAmB3iB,GAC5E,GAAIA,EAAcmF,YACd,GAAIvO,GAAUoJ,EAAcmF,YACxB,OAAO,OAGV,GAAKyd,sBAAoB/e,GAAU6e,GAAyBG,oBAAkBhf,GAAU8e,EACzF,OAAO,EAEX,OAAO,EAGX,SAAgBG,GAAcJ,EAAqB7e,GAC/C,SAAI+e,sBAAoB/e,GAAU6e,GAMtC,SAAgBK,GAAqBt+B,EAAMu+B,GACvC,OAAOv+B,EAAKw+B,WAAaD,EAG7B,SAAgBE,GAAerhC,EAAMV,GACjC,IAAIgkB,EACJ,GAAwB,SAApBtjB,EAAKnC,MAAMvC,KACXgoB,EAActjB,EAAU,UAEvB,CACD,IAAIshC,EAAehiC,EAAGkP,MAAM,KAC5BlP,EAAKgiC,EAAaA,EAAaprC,OAAS,GACxC,IAAK,IAAIC,EAAI,EAAGA,EAAI6J,EAAK6Y,YAAY3iB,OAAQC,IACrCmJ,IAAOU,EAAK6Y,YAAY1iB,GAAGmJ,KAC3BgkB,EAAatjB,EAAK6Y,YAAY1iB,IAI1C,OAAOmtB,EAGX,SAAgBie,GAASvhC,EAAMV,GAC3B,IACIkiC,EAASliC,EAAGkP,MAAM,KACtBlP,EAAKkiC,EAAOA,EAAOtrC,OAAS,GAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAI6J,EAAKw7B,MAAMtlC,OAAQC,IACnC,GAAImJ,IAAOU,EAAKw7B,MAAMrlC,GAAGmJ,GACrB,OAAOU,EAAKw7B,MAAMrlC,GAM9B,SAAgBsrC,GAAqBzhC,EAAM0hC,GACvC,IAAI9+B,KACAzM,EAAI,EACR,GAAI6J,EAAKw7B,MAAO,CACZ,IAAIA,EAAQx7B,EAAKw7B,MACjB,IAAKrlC,EAAI,EAAGA,EAAIqlC,EAAMtlC,OAAQC,IACtBurC,EACKlG,EAAMrlC,GAAG8c,YAAcyB,kBAAgBF,YACxC5R,EAAO44B,EAAMrlC,IAIZqlC,EAAMrlC,GAAG8c,YAAcyB,kBAAgBG,aACxCjS,EAAO44B,EAAMrlC,IAK7B,OAAOyM,EAGX,SAAgB++B,GAAgB3hC,EAAMV,EAAIgkB,GAGtC,IAAK,IADDvtB,EAAa,EAAeiK,EAAK6Y,YAAc7Y,EAAKw7B,MAC/CrlC,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IACnC,GAAIJ,EAAWI,GAAGmJ,KAAOA,EACrB,OAAO,EAAIvB,WAGnB,OAAO,KAGX,SAAgB6jC,GAAwB5nC,EAAKsF,GACzC,IAAInJ,EACJ,IAAKA,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IACxB,GAAImJ,IAAOtF,EAAI7D,GAAGmJ,GACd,OAAO,EAGf,OAAO,EAGX,SAAgBuiC,GAAaxiC,EAASyiC,EAAIC,EAAIC,GAK1C,QAJsBtoC,IAAlB2F,EAAQrH,YAA0C0B,IAAnB2F,EAAQtH,SACvCsH,EAAQrH,OAAS8pC,EACjBziC,EAAQtH,QAAUgqC,GAElB1iC,aAAmB4iC,GAAW,CAC9B,IAAI9mC,EAASL,IACT9C,EAAQgqC,EAAUhqC,OAASgqC,EAAUh2B,WAAWhU,MAChDD,EAASiqC,EAAUjqC,QAAUiqC,EAAUh2B,WAAWjU,OACtD,QAAc2B,IAAV1B,QAAkC0B,IAAX3B,EAAsB,CAC7C,IAAItB,EAAIurC,EAAUxmC,QAAUxD,EAAQgqC,EAAUxB,MAAM/pC,EAChDC,EAAIsrC,EAAUvmC,QAAU1D,EAASiqC,EAAUxB,MAAM9pC,EACjD4M,GACA7M,EAAGA,EAAIuB,EAAQgqC,EAAUxB,MAAM/pC,EAC/BC,EAAGA,EAAIqB,EAASiqC,EAAUxB,MAAM9pC,GAEpC4M,EAAW6K,GAAY6zB,EAAUr1B,YAAaq1B,EAAUxmC,QAASwmC,EAAUvmC,QAAS6H,GACpF9G,EAAarB,GAAS6mC,EAAUr1B,YAAarJ,EAAS7M,EAAG6M,EAAS5M,GAClEwG,EAAY/B,EAAQ2mC,EAAIC,EAAIz+B,EAAS7M,EAAG6M,EAAS5M,GACjD8F,EAAarB,EAAQ6mC,EAAUr1B,YAAarJ,EAAS7M,EAAG6M,EAAS5M,GACjE,IAAK,IAAI4F,EAAK,EAAGohB,EAAKre,EAAQuS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC1D,IAAI0R,EAAQ0P,EAAGphB,GACf,QAAoB5C,IAAhBsU,EAAMhW,YAAwC0B,IAAjBsU,EAAMjW,OAAsB,CACzD,IAAImqC,EAAchnC,EAAuBC,GAAU1E,EAAGuX,EAAMxS,QAAS9E,EAAGsX,EAAMvS,UAC9EuS,EAAMxS,QAAU0mC,EAAYzrC,EAC5BuX,EAAMvS,QAAUymC,EAAYxrC,EAC5BmrC,GAAa7zB,EAAO8zB,EAAIC,EAAIC,OAOhD,SAAgBG,GAAanoC,EAAKvD,EAAGC,EAAG2kB,EAAW+mB,EAAMzjC,GAGrD,IAAK,IADDqB,EADAgO,EAAQhU,EAAI4X,SAEPzb,EAAI,EAAGA,EAAI6X,EAAM9X,OAAQC,IAE9B,GADA6J,EAAOqb,EAAUrN,EAAM7X,IAEnB,GAAI6J,EAAK4R,SACLuwB,GAAaniC,EAAMvJ,EAAGC,EAAG2kB,EAAW+mB,EAAMzjC,QAK1C,GAFAqB,EAAKxE,SAAW/E,EAChBuJ,EAAKvE,SAAW/E,GACX0rC,EAAM,CACP,IAAI1iC,OAAU,EACV2Y,OAAY,EAChBgD,EAAUrb,EAAKV,IAAMU,GACrBqY,EAAYrY,EAAKqiC,iBACFzwB,WACXyG,EAAUzG,aAEdlS,EAAUM,EAAKsiC,KAAK3jC,GACpB0Z,EAAUzG,SAASrb,KAAKmJ,GACxB2Y,EAAUyG,QAAQ,IAAIC,GAAK/e,EAAKhI,MAAOgI,EAAKjI,SAC5CsgB,EAAU2G,QAAQ3G,EAAU4G,cAOhD,SAAgBsjB,GAAavoC,EAAKuiC,EAAKxmC,GACnC,GAA0B,IAAtBA,EAAWG,OACXH,EAAWQ,KAAKyD,QAEf,GAA0B,IAAtBjE,EAAWG,OACZH,EAAW,GAAGwmC,GAAOviC,EAAIuiC,GACzBxmC,EAAWiQ,OAAO,EAAG,EAAGhM,GAGxBjE,EAAWQ,KAAKyD,QAGnB,GAAIjE,EAAWG,OAAS,EAAG,CAI5B,IAHA,IAAIssC,EAAM,EACNC,EAAO1sC,EAAWG,OAAS,EAC3BwsC,EAAMxmC,KAAKymC,OAAOH,EAAMC,GAAQ,GAC7BC,IAAQF,GACPzsC,EAAW2sC,GAAKnG,GAAOviC,EAAIuiC,IAC3BiG,EAAME,EACNA,EAAMxmC,KAAKymC,OAAOH,EAAMC,GAAQ,IAE3B1sC,EAAW2sC,GAAKnG,GAAOviC,EAAIuiC,KAChCkG,EAAOC,EACPA,EAAMxmC,KAAKymC,OAAOH,EAAMC,GAAQ,IAGpC1sC,EAAW0sC,GAAMlG,GAAOviC,EAAIuiC,GAC5BxmC,EAAWQ,KAAKyD,GAEXjE,EAAWysC,GAAKjG,GAAOviC,EAAIuiC,GAChCxmC,EAAWiQ,OAAOw8B,EAAK,EAAGxoC,GAEpBjE,EAAWysC,GAAKjG,GAAOviC,EAAIuiC,IAASxmC,EAAW0sC,GAAMlG,GAAOviC,EAAIuiC,IACtExmC,EAAWiQ,OAAOy8B,EAAM,EAAGzoC,IAKvC,SAAgB4oC,GAAWvjC,GACvB,IAAIwjC,EAAiBpV,SAASC,eAAeruB,EAAQyjC,WACjDC,EAAW,gBAEXxpB,EAAQspB,EAAeE,GAAU,GAAGxpB,WAC1B7f,IAAV6f,IACAA,EAqCR,SAA2BypB,GAEvB,IAAK,IADDzpB,KACKpjB,EAAI,EAAGA,EAAI6sC,EAAcC,SAAS/sC,OAAQC,IAE/C,IAAK,IADD+sC,EAAUF,EAAcC,SAAS9sC,GAAG+sC,QAC/BptC,EAAI,EAAGA,EAAIotC,EAAQhtC,OAAQJ,IAC5BotC,EAAQptC,aAAcye,IACtBgF,EAAMhjB,KAAK2sC,EAAQptC,IAI/B,OAAOyjB,EA/CK4pB,CAAkBN,EAAeE,GAAU,KAGvD,IAAK,IAAI5sC,EAAI,EAAGojB,GAASpjB,EAAIojB,EAAY,OAAGpjB,IACxC,GAAIojB,EAAMpjB,GAAGmJ,KAAOD,EAAQ+jC,OACxB,OAAOC,GAAc9pB,EAAMpjB,GAAIkJ,GAIlC,IADD+e,EAAaykB,EAAeE,GAAU,GAAG3kB,WAC7C,IAASjoB,EAAI,EAAGioB,GAAcjoB,EAAIioB,EAAiB,OAAGjoB,IAClD,GAAIioB,EAAWjoB,GAAGmJ,KAAOD,EAAQ+jC,OAC7B,OAAOC,GAAcjlB,EAAWjoB,GAAIkJ,GAG5C,IAAIikC,EAAcT,EAAeE,GAAU,GAAGO,YAC9C,OAAIA,IAAgBA,EAAgB,KAAMjkC,EAAQ+jC,QAAUE,EAAsB,UAC1EA,EAAsB,UAAK1R,GAAa0R,EAAa,OAAQT,EAAeE,GAAU,GAAGQ,YAClFV,EAAeE,GAAU,GAAGQ,WAAWlkC,EAAQ+jC,QAG/CE,EAGR,KAEX,SAASD,GAAcrpC,EAAKqF,GACxB,IAEIvJ,EAFA+iB,EAAc7e,EAAI6e,YAGtB,IAAK/iB,EAAI,EAAG+iB,GAAe/iB,EAAI+iB,EAAkB,OAAG/iB,IAChD,GAAIuJ,EAAQiiC,cAAgBzoB,EAAY/iB,GAAGwJ,KAAOD,EAAQiiC,aACtD,OAAOzoB,EAAY/iB,GAG3B,OAAOkE,EAgBX,SAAgBwpC,GAAS/sC,EAAGC,EAAG+sC,EAAGC,EAAGzsC,EAAOuE,EAASC,EAASkoC,GAC1D,IAAInD,GAAU/pC,EAAG,EAAGC,EAAG,GACnBktC,EAAQ9oC,IAEZ,OADA0B,EAAaonC,EAAO3sC,EAAOuE,EAASC,GAC5BkoC,EAAYltC,GAChB,KAAK,EACD,OAAQktC,EAAYjtC,GAChB,KAAK,EACD8pC,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAGC,EAAGA,IAClD,MACJ,IAAK,GACD8pC,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAGC,EAAGA,EAAIgtC,EAAI,IAC1D,MACJ,KAAK,EACDlD,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAGC,EAAGA,EAAIgtC,IAG9D,MACJ,IAAK,GACD,OAAQC,EAAYjtC,GAChB,KAAK,EACD8pC,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAIgtC,EAAI,EAAG/sC,EAAGA,IAC1D,MACJ,IAAK,GACD8pC,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAIgtC,EAAI,EAAG/sC,EAAGA,EAAIgtC,EAAI,IAClE,MACJ,KAAK,EACDlD,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAIgtC,EAAI,EAAG/sC,EAAGA,EAAIgtC,IAGtE,MACJ,KAAK,EACD,OAAQC,EAAYjtC,GAChB,KAAK,EACD8pC,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAIgtC,EAAG/sC,EAAGA,IACtD,MACJ,IAAK,GACD8pC,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAIgtC,EAAG/sC,EAAGA,EAAIgtC,EAAI,IAC9D,MACJ,KAAK,EACDlD,EAAQtlC,EAAuB0oC,GAAUntC,EAAGA,EAAIgtC,EAAG/sC,EAAGA,EAAIgtC,KAK1E,OAASjtC,EAAG+pC,EAAM/pC,EAAGC,EAAG8pC,EAAM9pC,GC3oDlC,SAAgBmtC,GAAa7jC,GACzB,IAAIgO,EACAjY,KACJ,GAA0B,SAAtB+tC,UAAQC,KAAKjrB,MAAyC,SAAtBgrB,UAAQC,KAAKjrB,KAC7C,IAAK,IAAI3iB,EAAI,EAAGA,EAAI6J,EAAKgkC,WAAW9tC,OAAQC,IAEjB,KADvB6X,EAAQhO,EAAKgkC,WAAW7tC,IACd8tC,UACNluC,EAAWQ,KAAKyX,QAKxBjY,EAAaiK,EAAK4R,SAEtB,OAAO7b,EAwBX,SAAgBmuC,GAAYruC,GACxB,GAAIA,EAAM,CACN,IAAIsuC,EAAiB,iBACrBC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,UAC1C,IACI/hC,EAAUwkC,GADJO,OAAOD,GAAgBvyB,SAAS,IACV,GAChCvS,EAAQglC,aAAa,IAAKxuC,GAC1B,IAAIoL,EAAS5B,EAAQilC,UACjBC,EAAY,IAAIx4B,GAAK9K,EAAOxK,EAAGwK,EAAOvK,EAAGuK,EAAOjJ,MAAOiJ,EAAOlJ,QAElE,OADAqsC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,SACnCmD,EAEX,OAAO,IAAIx4B,GAAK,EAAG,EAAG,EAAG,GA8B7B,SAASy4B,GAAYtqB,EAAMuqB,EAAWC,GAClC,IAEIC,EACAC,EAHAZ,KACA/gB,EAAI,EAGJvjB,EAAU+kC,GAAavqB,EAAKxa,QAChC,GAAwB,WAApBwa,EAAKiiB,YAA+C,QAApBjiB,EAAKiiB,WACrC,GAAuB,aAAnBjiB,EAAK2qB,UAGL,IAFAF,EAAW,GACXA,GAAYjlC,EAAQ,GACfujB,EAAI,EAAGA,EAAIvjB,EAAQxJ,OAAQ+sB,IAE5B,IADA2hB,EAAUE,GAASH,EAAUzqB,KACdA,EAAKliB,OAAS2sC,EAASzuC,OAAS,EAC3C8tC,EAAWA,EAAW9tC,SAAYgkB,KAAMyqB,EAAUluC,EAAG,EAAGsuC,GAAI,EAAG/sC,MAAO4sC,GACtED,EAAW,OAEV,EACDA,GAAuBjlC,EAAQujB,EAAI,IAAM,IAC5BlD,QAAQ,OAAS,IAC1B4kB,EAAWA,EAASK,QAAQ,KAAM,KAEtC,IAAIhtC,EAAQ8sC,GAASH,EAAUzqB,GAC3Bhe,KAAK+oC,KAAKjtC,GAAS,GAAKkiB,EAAKliB,OAAS2sC,EAASzuC,OAAS,IACxD8tC,EAAWA,EAAW9tC,SAAYgkB,KAAMyqB,EAAUluC,EAAG,EAAGsuC,GAAI,EAAG/sC,MAAOA,GACtE2sC,EAAW,IAEX1hB,IAAMvjB,EAAQxJ,OAAS,GAAKyuC,EAASzuC,OAAS,IAC9C8tC,EAAWA,EAAW9tC,SAAYgkB,KAAMyqB,EAAUluC,EAAG,EAAGsuC,GAAI,EAAG/sC,MAAOA,GACtE2sC,EAAW,SAMvBX,EAQZ,SAAsB9pB,EAAMuqB,EAAWC,GACnC,IAQIQ,EACAC,EACAC,EACAC,EAXArB,KACAW,EAAW,GACX7uC,EAAI,EACJK,EAAI,EACJmvC,EAA2B,WAApBprB,EAAKiiB,WAEZoJ,GADUd,GAAavqB,EAAKxa,SACT8O,MAAM,MAM7B,IAAK1Y,EAAI,EAAGA,EAAIyvC,EAASrvC,OAAQJ,IAG7B,IAFAovC,EAC8B,WAAtBhrB,EAAKhB,aAA4BqsB,EAASzvC,GAAG0Y,MAAM,KAAO+2B,EAC7DpvC,EAAI,EAAGA,EAAI+uC,EAAMhvC,OAAQC,IAAK,CAC/BwuC,KAAqB,IAANxuC,GAA4B,IAAjB+uC,EAAMhvC,SAAiBovC,GAAQX,EAASzuC,OAAS,EAAK,IAAM,IAAMgvC,EAAM/uC,GAElG,IAAI6B,EAAQ8sC,GADZK,EAAUR,GAAYO,EAAM/uC,EAAI,IAAM,IACR+jB,GAC1Bhe,KAAKymC,MAAM3qC,IAAU0sC,GAAaxqB,EAAKliB,OAAS,GAAK2sC,EAASzuC,OAAS,GACvE8tC,EAAWA,EAAW9tC,SAClBgkB,KAAMyqB,EAAUluC,EAAG,EAAGsuC,GAAI,EAC1B/sC,MAAOmtC,IAAYR,EAAW3sC,EAAS2sC,IAAaU,EAAgBD,EAAgBN,GAASH,EAAUzqB,IAE3GyqB,EAAW,IAGPxuC,IAAM+uC,EAAMhvC,OAAS,IACrB8tC,EAAWA,EAAW9tC,SAAYgkB,KAAMyqB,EAAUluC,EAAG,EAAGsuC,GAAI,EAAG/sC,MAAOA,GACtE2sC,EAAW,IAGnBU,EAAeF,EACfC,EAAgBptC,EAGxB,OAAOgsC,EA7CcwB,CAAatrB,EAAMuqB,EAAWC,QAI/CV,EAAWA,EAAW9tC,SAAYgkB,KAAMxa,EAASjJ,EAAG,EAAGsuC,GAAI,EAAG/sC,MAAO8sC,GAASplC,EAASwa,IAE3F,OAAO8pB,EAiFX,SAAgByB,GAAgB9lC,EAAOD,EAAS1H,EAAOD,EAAQ4gB,GAC3D,IAAI1X,EAAS,IAAI8d,GACb7E,EAAO6T,GAAkB,QAAUpuB,MAAS,8CA+BhD,OA9BIA,EAAMoZ,OACNmB,EAAKva,MAAM+lC,WAAa,QAExB/lC,EAAMs8B,SACN/hB,EAAKva,MAAMgmC,UAAY,eAEbjsC,IAAV1B,IACAkiB,EAAKva,MAAM3H,MAAQA,EAAM+F,WAAa,WAE3BrE,IAAX3B,IACAmiB,EAAKva,MAAM5H,OAASA,EAAOgG,WAAa,WAE3BrE,IAAbif,IACAuB,EAAKva,MAAMgZ,SAAWA,EAAS5a,WAAa,MAEhDmc,EAAKva,MAAMq8B,WAAar8B,EAAMq8B,WAC9B9hB,EAAKva,MAAMqZ,SAAWrZ,EAAMqZ,SAAW,KACvCkB,EAAKva,MAAMsZ,MAAQtZ,EAAMsZ,MACzBiB,EAAK0rB,YAAclmC,EACnBwa,EAAKva,MAAMw8B,WAAa0J,GAAmBlmC,EAAMw8B,WAAYx8B,EAAMuZ,cAE/DgB,EAAKva,MAAMmmC,eADEpsC,IAAbif,EACuB,aAGAotB,GAAkBpmC,EAAMuZ,cAEnDuU,SAASuY,KAAKvH,YAAYvkB,GAC1BjZ,EAAOjJ,MAAQkiB,EAAK+rB,YACpBhlC,EAAOlJ,OAASmiB,EAAKgsB,aACrBzY,SAASuY,KAAKxH,YAAYtkB,GACnBjZ,EAGX,SAAgBklC,GAAYjsB,EAAMva,EAAOD,EAASiZ,EAAU8rB,GACxD,IACIT,EACAoC,EAFAnlC,EAAS,IAAI8d,GAAK,EAAG,GAGrBsnB,EA7LR,SAAwBhnC,EAASsZ,GAC7B,IAAI0tB,GACA7tB,KAAMnZ,EAAQM,MAAM6Y,KAAM8tB,OAAQjnC,EAAQM,MAAM8Y,YAAaxhB,MAAOoI,EAAQsN,YAActN,EAAQuN,gBAClG25B,OAAQlnC,EAAQmhC,MAAM/pC,EAAG+vC,OAAQnnC,EAAQmhC,MAAM9pC,EAAGgiB,YAAarZ,EAAQM,MAAM+Y,YAC7E+tB,UAAWpnC,EAAQM,MAAM6e,gBAAiBud,QAAS18B,EAAQM,MAAMo8B,QAAS2K,OAAQrnC,EAAQqnC,OAC1F5J,SAAUz9B,EAAQM,MAAMm9B,SAAUO,QAASh+B,EAAQg+B,QAAS/9B,GAAID,EAAQC,GAAIqnC,YAAatnC,EAAQsnC,YACjG3uC,MAAO2gB,GAAYtZ,EAAQ2M,WAAWhU,MAAOD,OAAQsH,EAAQ2M,WAAWjU,OACxEtB,EAAG4I,EAAQ7D,QAAU6D,EAAQ2M,WAAWhU,MAAQqH,EAAQmhC,MAAM/pC,EAAI,GAClEC,EAAG2I,EAAQ5D,QAAU4D,EAAQ2M,WAAWjU,OAASsH,EAAQmhC,MAAM9pC,EAAI,IAkBvE,OAhBA2vC,EAAQrtB,SAAW3Z,EAAQM,MAAMqZ,SACjCqtB,EAAQrK,WAAa38B,EAAQM,MAAMq8B,WACnCqK,EAAQvK,aAAez8B,EAAQM,MAAMm8B,aACrCuK,EAAQjK,eAAiB/8B,EAAQM,MAAMy8B,eACvCiK,EAAQO,OAASvnC,EAAQunC,OACzBP,EAAQlK,WAAa0J,GAAmBxmC,EAAQM,MAAMw8B,WAAY98B,EAAQM,MAAMuZ,cAChFmtB,EAAQ3mC,QAAUL,EAAQK,QAC1B2mC,EAAQntB,aAAe7Z,EAAQM,MAAMuZ,aACrCmtB,EAAQxB,UAAYkB,GAAkB1mC,EAAQM,MAAMuZ,cACpDmtB,EAAQnK,UAAY2K,GAAkBxnC,EAAQM,MAAMu8B,WACpDmK,EAAQptB,MAAQ5Z,EAAQM,MAAMsZ,MAC9BotB,EAAQpK,OAAS58B,EAAQM,MAAMs8B,OAC/BoK,EAAQttB,KAAO1Z,EAAQM,MAAMoZ,KAC7BstB,EAAQI,UAAY,GACpBJ,EAAQ3tB,YAAc,EACtB2tB,EAAQ7tB,KAAO,GACR6tB,EAmKOS,CAAe5sB,EAAMvB,GAQnC,OAPAuB,EAAK8pB,WAAaA,EAAaQ,GAAY6B,EAAS5B,EAAWvqB,EAAK+J,kBAAoBtL,OAAWjf,GACnGwgB,EAAKksB,WAAaA,EAlFtB,SAA0BlsB,EAAM8pB,GAC5B,IAEI+C,EACA/uC,EAHAouC,GAAe3vC,EAAG,EAAGuB,MAAO,GAC5BirB,EAAI,EAGR,IAAKA,EAAI,EAAGA,EAAI+gB,EAAW9tC,OAAQ+sB,IAE/BjrB,EADA+uC,EAAW/C,EAAW/gB,GAAGjrB,MAGrB+uC,EADmB,SAAnB7sB,EAAKgiB,UACM,EAEa,WAAnBhiB,EAAKgiB,UACN6K,EAAW7sB,EAAKliB,QAAgC,aAAtBkiB,EAAK4hB,cAAqD,SAAtB5hB,EAAK4hB,cACxD,GAGCiL,EAAW,EAGH,UAAnB7sB,EAAKgiB,WACE6K,EAGD/C,EAAW9tC,OAAS,EAAI,GAAK6wC,EAAW,EAEvD/C,EAAW/gB,GAAG8hB,GAAqB,IAAhB7qB,EAAKlB,SACxBgrB,EAAW/gB,GAAGxsB,EAAIswC,EACbX,GAODA,EAAW3vC,EAAIyF,KAAKyK,IAAIy/B,EAAW3vC,EAAGswC,GACtCX,EAAWpuC,MAAQkE,KAAKmJ,IAAI+gC,EAAWpuC,MAAOA,IAP9CouC,GACI3vC,EAAGswC,EACH/uC,MAAOA,GAQnB,OAAOouC,EA4CwBY,CAAiBX,EAASrC,GACzD/iC,EAAOjJ,MAAQouC,EAAWpuC,MACtBkiB,EAAKksB,WAAWpuC,OAAS2gB,GAAqC,SAAzB0tB,EAAQvK,eAC7C76B,EAAOjJ,MAAQ2gB,GAEnB1X,EAAOlJ,OAASisC,EAAW9tC,OAASgkB,EAAKva,MAAMqZ,SAAW,IACnD/X,EA4CX,SAAgBgmC,GAAW5nC,EAAS4B,EAAQ+M,EAAOq4B,GAC/C,IAKIa,EAHA/pC,EAAS,EACTC,EAAS,EACTnD,GAAU,EAIVktC,EAAgB,GAChBnxC,KAeJ,OAxBY,KAUZkxC,EAAOjmC,GACYxK,GAVP,IAUsBywC,EAAKxwC,IACnCyG,EAZQ,EAYSvF,OAAOsvC,EAAKzwC,GAC7B2G,EAZQ,EAYSxF,OAAOsvC,EAAKxwC,KAE7B2I,EAAQ2M,WAAWhU,QAAUkvC,EAAKlvC,OAASqH,EAAQ2M,WAAWjU,SAAWmvC,EAAKnvC,QAAUsuC,KACxFlpC,GAAUkpC,GAAWA,EAAQruC,OAASqH,EAAQ2M,WAAWhU,OAASJ,OAAOsvC,EAAKlvC,MAAQkvC,EAAKlvC,MAAQ,GACnGoF,GAAUipC,GAAWA,EAAQtuC,QAAUsH,EAAQ2M,WAAWjU,QAAUH,OAAOsvC,EAAKnvC,OAASmvC,EAAKnvC,OAAS,GACvGkC,GAAU,GAEdjE,EAAkBJ,EAAgByJ,EAAQxJ,MAC1CG,EAAkBsE,EAAqBtE,GACvCmxC,EAAgBluC,EAAcjD,EAAiBmH,EAAQC,EAAQnD,EAASitC,EAAKzwC,EAAGywC,EAAKxwC,EAtBzE,EACA,GAsBZuD,GAAU,EACHktC,EAGX,SAAgBC,GAAmBtE,GAC/B,IAEIuE,EAGJ,OAFAA,EAFqB9I,GAAkBuE,GAEVwE,uBAAuB,mBAClCD,EAAY,GAIlC,SAAgB9I,GAAkBjB,EAAWiK,GACzC,IACIloC,EAKJ,OAJIkoC,IACAloC,EAAUouB,SAASC,eAAe6Z,IAErB,EAAYloC,EAAQmoC,cAAc,IAAMlK,GAAa7P,SAASC,eAAe4P,GAIlG,SAAgBmK,GAAYC,EAAQpK,EAAWqK,GAC3C,IACIjW,EADAnP,OAAQ7oB,EAERkuC,EAAS,GACC,WAAVD,GACAjW,EAAgBmW,GAAeH,GAC/BE,EAAS,yBAEM,SAAVD,GACLjW,EAAgBoW,GAAaJ,GAAQ1D,WAAW,GAChD4D,EAAS,0BAGTlW,EAyCR,SAAgCoR,GAC5B,IACIiF,EAAkBX,GAAmBtE,GAEzC,OADeiF,EAAgBra,eAAeoV,EAAY,iBA5CtCkF,CAAgBN,GAChCE,EAAS,iBAGb,IAAK,IADDK,EACK9xC,EAAI,EAAGu7B,EAAcsS,YAAc7tC,EAAIu7B,EAAcsS,WAAW9tC,OAAQC,IAE7E,IADA8xC,EAAevW,EAAcsS,WAAW7tC,KACpB8xC,EAAa3oC,KAAOg+B,EAAYsK,EAAQ,CACxDrlB,EAAQpsB,EACR,MAGR,OAAOosB,EAKX,SAAgBX,GAAmBkhB,GAC/B,IAEIuE,EAGJ,OAFAA,EAFqB9I,GAAkBuE,GAEVwE,uBAAuB,mBAClCD,EAAY,GAIlC,SAAgBa,GAAmBpF,GAI/B,OAFiBlhB,GAAmBkhB,GACVpV,eAAeoV,EAAY,oBAMzD,SAAgBqF,GAAgBrF,GAI5B,OAFwBlhB,GAAmBkhB,GACVpV,eAAeoV,EAAY,mBAoBhE,SAAgBsF,GAAkBtF,GAC9B,IAEIuE,EAGJ,OAFAA,EAFqB9I,GAAkBuE,GAEVwE,uBAAuB,kBACnCD,EAAY,GAIjC,SAAgBgB,GAAgBvF,GAC5B,IAEIuE,EAGJ,OAFAA,EAFqB9I,GAAkBuE,GAEVwE,uBAAuB,gBACrCD,EAAY,GAI/B,SAAgBiB,GAAsBxF,GAIlC,OAFqBvE,GAAkBuE,GACNwE,uBAAuB,sBACrC,GAAG5oB,WAY1B,SAAgB6pB,GAAmBzF,GAC/B,IAEIuE,EAGJ,OAFAA,EAFqB9I,GAAkBuE,GAEVwE,uBAAuB,sBACvCD,EAAY,GAyB7B,SAAgBQ,GAAe/E,GAI3B,OAFqBsF,GAAkBtF,GACVpV,eAAeoV,EAAY,gBAI5D,SAAgBgF,GAAahF,GACzB,IAEIuE,EAGJ,OAFAA,EAFc9I,GAAkBuE,GAEVwE,uBAAuB,gBACjCD,EAAY,GAI5B,SAAgBtZ,GAAkBya,EAAaruB,GAC3C,IAAI9a,EAAUopC,gBAAcD,GAE5B,OADAE,GAAiBrpC,EAAS8a,GACnB9a,EAGX,SAAgBspC,GAAiBH,EAAaruB,GAC1C,IAAI9a,EAAUouB,SAASmb,gBAAgB,6BAA8BJ,GAErE,OADAK,GAAgBxpC,EAAS8a,GAClB9a,EAGX,SAAgBypC,GAAaC,EAAMC,EAAUC,GAEzC,IADA,IAAItpB,EAASopB,EACNppB,IACCspB,EAAOtpB,EAAOrgB,KAAO0pC,GAAWrX,GAAShS,EAAQqpB,KAGrDrpB,EAASA,EAAOjB,WAEpB,OAAOiB,EAEX,SAAgBgS,GAAStyB,EAAS6pC,GAE9B,OAAS,KADsC,iBAAtB7pC,EAAQ6pC,UAA0B7pC,EAAQ6pC,UAAUC,QAAU9pC,EAAQ6pC,WACnE,KAAKnpB,QAAQ,IAAMmpB,EAAY,MAAQ,EAsBvE,SAAgBE,GAAgBC,EAAW97B,EAAG+7B,GAC1CD,KACA,IAAK,IAAIlzC,EAAI,EAAG2U,EAAWw+B,EAAQpzC,OAAQC,EAAI2U,EAAU3U,IACrDkzC,EAAU9yC,MAAOgzC,MAAOD,EAAQnzC,GAAGqzC,QAASC,MAAOH,EAAQnzC,GAAGuzC,QAASC,UAAW,OAEtF,OAAON,EAMX,SAAgBja,GAAckO,EAAWiK,GACrC,IAAI/Z,EAAM+Q,GAAkBjB,EAAWiK,GACnC/Z,GACAA,EAAI9O,WAAW8f,YAAYhR,GAGnC,SAAgBkR,GAAWr/B,EAASuqC,GAChC,IAAIpc,EACJ,GAAIoc,EAAQ,CAERpc,EAAMO,GAAkB,OADXpuB,MAAS,mCAItB6tB,EAAMC,SAASmb,gBAAgB,6BAA8B,KAEjE,IACIjJ,EADA3/B,EAAO4iC,GAAWvjC,GAEtB,GAA+B,iBAApBA,EAAQK,QAGf,IAAK,IAAIpD,EAAK,EAAGohB,EADAmsB,UAAQxqC,EAAQK,QACXoqC,CAAe9pC,GAAO1D,EAAKohB,EAAGxnB,OAAQoG,IACxDqjC,EAAOjiB,EAAGphB,GACVkxB,EAAIiR,YAAYkB,QAIpBnS,EAAIiR,YAAYp/B,EAAQK,SAE5B,OAAgB8tB,EAAIuc,WAAU,GAGlC,SAAgBlB,GAAgBmB,EAAKhwB,GAEjC,IAAK,IADD4D,EAAOD,OAAOC,KAAK5D,GACd7jB,EAAI,EAAGA,EAAIynB,EAAK1nB,OAAQC,IAC7B6zC,EAAI3F,aAAazmB,EAAKznB,GAAI6jB,EAAW4D,EAAKznB,KAIlD,SAAgBuyC,GAAiBrpC,EAAS2a,GAEtC,IAAK,IADD4D,EAAOD,OAAOC,KAAK5D,GACd7jB,EAAI,EAAGA,EAAIynB,EAAK1nB,OAAQC,IAC7BkJ,EAAQglC,aAAazmB,EAAKznB,GAAI6jB,EAAW4D,EAAKznB,KAItD,SAAgB8zC,KACZ,IAAI9F,EAAiB,iBACrB,GAAKC,OAAOD,GAwBRC,OAAOD,GAAgB+F,YAAc,MAxBZ,CACzB,IAAIC,EAAapc,GAAkB,OAC/BzuB,GAAI,iBACJK,MAAO,oEAEPua,EAAO6T,GAAkB,QAAUpuB,MAAS,+CAChDwqC,EAAW1L,YAAYvkB,GACvB,IAAIkwB,OAAe,EACnBA,EAAerc,GAAkB,UACjCoc,EAAW1L,YAAY2L,GACvB,IAAIJ,EAAMvc,SAASmb,gBAAgB,6BAA8B,OACjEoB,EAAI3F,aAAa,QAAS,gCAC1B8F,EAAW1L,YAAYuL,GACvB,IAAI3qC,EAAUouB,SAASmb,gBAAgB,6BAA8B,QACrEoB,EAAIvL,YAAYp/B,GACLouB,SAAS4c,eAAe,IAAnC,IACIC,EAAQ7c,SAASmb,gBAAgB,6BAA8B,QACnE0B,EAAMC,eAAe,uCAAwC,YAAa,YAC1EP,EAAIvL,YAAY6L,GAChBlG,OAAOD,GAAkBgG,EACzB/F,OAAOD,GAAgB+F,WAAa,EACpCzc,SAASuY,KAAKvH,YAAY0L,IC7nBlC,SAAgBtwB,KAIZ,IAAK,IADDhe,EAFA2uC,EAAQ,gEACRlrC,EAAK,GAEAnJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,GAAI,WAAYiuC,QAAU,oBAAqBqG,OAAQ,CACnD,IAAI/iB,EAAQ,IAAIgjB,YAAY,GAG5B7uC,GADgBuoC,OAAOuG,UAAYvG,OAAOqG,QAC1BG,gBAAgBljB,GAAO,IAAM8iB,EAAMt0C,OAAS,QAG5D2F,EAAMK,KAAKymC,MAAMzmC,KAAK2uC,SAAWL,EAAMt0C,QAEjC,IAANC,GAAW0F,EAAM,GACjB1F,IAGJmJ,GAAMkrC,EAAM7yC,UAAUkE,EAAKA,EAAM,GAErC,OAAOyD,EAGX,SAAgB0B,GAA4BmC,GAC3B,IAAI4I,GAAjB,IACIvJ,EAAMW,EAAI1H,QAAU0H,EAAI6I,WAAWjU,OAASoL,EAAIq9B,MAAM9pC,EACtD6L,EAASY,EAAI1H,QAAU0H,EAAI6I,WAAWjU,QAAU,EAAIoL,EAAIq9B,MAAM9pC,GAC9D2L,EAAOc,EAAI3H,QAAU2H,EAAI6I,WAAWhU,MAAQmL,EAAIq9B,MAAM/pC,EACtD6L,EAAQa,EAAI3H,QAAU2H,EAAI6I,WAAWhU,OAAS,EAAImL,EAAIq9B,MAAM/pC,GAC5DyV,GAAYzV,EAAG4L,EAAM3L,EAAG8L,GAExB2J,GAAa1V,EAAG6L,EAAO5L,EAAG8L,GAG1BsF,GAAerR,EAAG4L,EAAM3L,EAAG6L,GAE3B4F,GAAgB1R,EAAG6L,EAAO5L,EAAG6L,GAEjC,OADSwJ,GAAKmmB,UAAUhmB,EAASC,EAAUrE,EAAYK,IAI3D,SAAgBqsB,GAAUn1B,GACtB,IACIhH,EADA4I,EAAS,IAAI8K,GAGbhE,GADJ1P,EAAU2I,GAA4B3B,IACb0I,WACrB7E,EAAY7K,EAAQ6K,UACpBuE,EAAepP,EAAQoP,aACvBL,EAAc/O,EAAQ+O,YACtB8E,EAAU7T,EAAQ6T,QAClBC,EAAW9T,EAAQ8T,SACnBrE,EAAazP,EAAQyP,WACrBK,EAAc9P,EAAQ8P,YAK1B,GAJA9I,EAAQhH,SACJ6T,QAASA,EAAShJ,UAAWA,EAAWiJ,SAAUA,EAAUpE,WAAYA,EACxEX,YAAaA,EAAaU,WAAYA,EAAYL,aAAcA,EAAcU,YAAaA,GAEnE,IAAxB9I,EAAQsN,aAAiD,IAA5BtN,EAAQuN,gBAAuB,CAC5D,IAAIzR,EAASL,IACb0B,EAAarB,EAAQkE,EAAQsN,YAActN,EAAQuN,gBAAiBvN,EAAQ7D,QAAS6D,EAAQ5D,SAC7F4D,EAAQhH,QAAQ6T,QAAUA,EAAUhR,EAAuBC,EAAQ+Q,GACnE7M,EAAQhH,QAAQ6K,UAAYA,EAAYhI,EAAuBC,EAAQ+H,GACvE7D,EAAQhH,QAAQ8T,SAAWA,EAAWjR,EAAuBC,EAAQgR,GACrE9M,EAAQhH,QAAQ0P,WAAaA,EAAa7M,EAAuBC,EAAQ4M,GACzE1I,EAAQhH,QAAQ+O,YAAcA,EAAclM,EAAuBC,EAAQiM,GAC3E/H,EAAQhH,QAAQyP,WAAaA,EAAa5M,EAAuBC,EAAQ2M,GACzEzI,EAAQhH,QAAQoP,aAAeA,EAAevM,EAAuBC,EAAQsM,GAC7EpI,EAAQhH,QAAQ8P,YAAcA,EAAcjN,EAAuBC,EAAQgN,GAW/E,OARAlH,EAAS8K,GAAKmmB,UAAUhmB,EAASC,EAAUrE,EAAYK,IACvD9I,EAAQhH,QAAQgK,KAAOpB,EAAOoB,KAC9BhD,EAAQhH,QAAQiK,MAAQrB,EAAOqB,MAC/BjD,EAAQhH,QAAQmK,IAAMvB,EAAOuB,IAC7BnD,EAAQhH,QAAQkK,OAAStB,EAAOsB,OAChClD,EAAQhH,QAAQqI,OAASO,EAAOP,OAChCrB,EAAQhH,QAAQL,MAAQiJ,EAAOjJ,MAC/BqH,EAAQhH,QAAQN,OAASkJ,EAAOlJ,OACzBkJ,EAGX,SAAgByb,GAAY1iB,EAAK8wC,EAAgBvO,GAC7C,IAAIwO,KACAntB,EAAO,aAEX,GAAI5jB,EAAK,CACLuiC,EAAMviC,EAAQ,SACd,IAAIgxC,EAAehxC,EAAI4jB,IAAS5jB,EAC5Bw+B,KAEAyS,KAEJ,IAHAzS,EAAaA,EAAWlT,OAAO3H,OAAOC,KAAKotB,KAEhCz0C,KAAK,WACZgmC,EAAK,CACL,IAAI2O,EAAiBpb,GAAYgb,GAE7BG,EADAC,EACmBA,EAAe3O,MAKtC/D,EAAaA,EAAWlT,OAAO2lB,GAInC,IAAK,IAFDE,EAAeC,GAAsB7O,GAEhCjgC,EAAK,EAAGm8B,EADjBD,EAAaA,EAAWlT,OAAO6lB,GACa7uC,EAAKm8B,EAAaviC,OAAQoG,IAAM,CACxE,IAAIo8B,EAAWD,EAAan8B,GAC5B,GAAiB,mBAAbo8B,EACA,GAAiB,YAAbA,EAAwB,IAGF1+B,EAAI0+B,KAAa1+B,EAAIqxC,eAAe,gBAElDrxC,EAAI0+B,aAAqBC,MACzBoS,EAAUrS,GAAY4S,IAAgD,IAApCH,EAAaprB,QAAQ2Y,IAAoB1+B,EAAI4jB,GAAS5jB,EAAI4jB,GAAM8a,GAAY1+B,EAAI0+B,GAAWoS,EAAgBpS,GAExI1+B,EAAI0+B,aAAqBC,QAAU,GAAS3+B,EAAI0+B,aAAqB6S,YAC1ER,EAAUrS,GAAY1+B,EAAI0+B,GAAUqR,WAAU,GAAMyB,UAE/CxxC,EAAI0+B,aAAqBC,QAAU,GAAS3+B,EAAI0+B,aAAqB/a,OAC1EotB,EAAUrS,GAAYhc,IAAiD,IAApCyuB,EAAaprB,QAAQ2Y,IAAoB1+B,EAAI4jB,GAAS5jB,EAAI4jB,GAAM8a,GAAY1+B,EAAI0+B,IAGnHqS,EAAUrS,GAAY1+B,EAAI0+B,SAK9B1+B,EAAI0+B,KACJqS,EAAUrS,IACN1sB,YACIhU,MAAOgC,EAAI0+B,GAAU1sB,WAAWhU,MAAOD,OAAQiC,EAAI0+B,GAAU1sB,WAAWjU,QACzEyD,QAASxB,EAAI0+B,GAAUl9B,QAASC,QAASzB,EAAI0+B,GAAUj9B,WAOlF,OAAOsvC,EAGX,SAAgBK,GAAsBK,GAClC,OAAQA,GACJ,IAAK,QACL,IAAK,WACD,OAAQ,UAAW,WAAY,WAAY,YAAa,SAAU,WAAY,UAAW,UAC7F,IAAK,aACD,OAAQ,YACZ,IAAK,aAEL,IAAK,cACD,OAAQ,UACZ,IAAK,QACD,OAAQ,aAEhB,SAGJ,SAAgBH,GAAWI,EAAaZ,EAAgBvO,GACpD,IAAIoP,EACJ,GAAID,EAAa,CACbC,KACA,IAAK,IAAIx1C,EAAI,EAAGA,EAAIu1C,EAAYx1C,OAAQC,IAChCu1C,EAAYv1C,aAAcwiC,MAC1BgT,EAAYp1C,KAAKm1C,EAAYv1C,IAExBu1C,EAAYv1C,aAAcwnB,OAC/BguB,EAAYp1C,KAAKmmB,GAAYgvB,EAAYv1C,GAAI20C,EAAgBvO,IAG7DoP,EAAYp1C,KAAKm1C,EAAYv1C,IAIzC,OAAOw1C,EAGX,SAAgBC,GAAavF,EAASwF,GAClC,IAAIrT,EAAa,aACjB,GAAI6N,EAAS,CACJwF,IACDA,GAAgBrT,gBAEpB,IACK,IAAIl8B,EAAK,EAAGohB,EAAKC,OAAOC,KAAKyoB,GAAU/pC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC9D,IAAIo8B,EAAWhb,EAAGphB,GAClB,GAAI+pC,EAAQ3N,aAAqBC,MAAO,CACpC,IAAImT,EAAeC,GAAY1F,EAAQ3N,GAAWmT,EAAYrT,GAAYE,IACrEmT,EAAYrT,GAAYE,IAAcmT,EAAYrT,GAAYE,GAAUxiC,SACzE21C,EAAYnT,GAAYoT,QAG3B,GAAIzF,EAAQ3N,aAAqBC,QAAU,GAAS0N,EAAQ3N,aAAqB6S,YAClFM,EAAYnT,GAAY2N,EAAQ3N,GAAUqR,WAAU,GAAMyB,eAEzD,GAAInF,EAAQ3N,aAAqBC,QAAU,GAAS0N,EAAQ3N,aAAqB/a,OAAQ,CAC1F,IAAIquB,EAAiBJ,GAAavF,EAAQ3N,GAAWmT,EAAYrT,GAAYE,IACzEsT,EAAexT,KAAgB7a,OAAOC,KAAKouB,EAAexT,IAAatiC,eAChE81C,EAAexT,GAE1BqT,EAAYnT,GAAYsT,OAGxBH,EAAYnT,QAAkDh/B,IAAtCmyC,EAAYrT,GAAYE,GAC5CmT,EAAYnT,GAAY2N,EAAQ3N,IAIhD,OAAOmT,EAGX,SAAgBE,GAAYL,EAAaO,GACrC,IAAIN,KACAO,GAAQ,EACPD,IACDA,MAECA,EAAW/1C,SACZg2C,GAAQ,GAEZ,IAAK,IAAI/1C,EAAI,EAAGA,EAAIu1C,EAAYx1C,OAAQC,IACpC,GAAIu1C,EAAYv1C,aAAcwiC,MAAO,CACboT,GAAYL,EAAYv1C,GAAI81C,EAAW91C,IACvD+1C,GACAP,EAAYp1C,KAAKw1C,SAGpB,GAAIL,EAAYv1C,aAAcwnB,OAAQ,CACvC,IAAIquB,EAAiBJ,GAAaF,EAAYv1C,GAAI81C,EAAW91C,IACzD+1C,GACAP,EAAYp1C,KAAKy1C,QAIrBL,EAAYp1C,KAAKm1C,EAAYv1C,IAGrC,OAAOw1C,EAGX,SAAgB9E,GAAkBzhC,GAC9B,IAAI+vB,EAAQ,GACZ,OAAQ/vB,GACJ,IAAK,SACD+vB,EAAQ,SACR,MACJ,IAAK,OACDA,EAAQ,OACR,MACJ,IAAK,QACDA,EAAQ,QAGhB,OAAOA,EAGX,SAAgB4Q,GAAkB3gC,GAC9B,IAAI+vB,EAAQ,GACZ,OAAQ/vB,GACJ,IAAK,OACD+vB,EAAQ,WACR,MACJ,IAAK,SACDA,EAAQ,UACR,MACJ,IAAK,mBACDA,EAAQ,SACR,MACJ,IAAK,cACDA,EAAQ,eAGhB,OAAOA,EAEX,SAAgB2P,GAASc,EAAaS,GAClC,IAAIlC,EAAiB,iBACrBC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,UAC1C,IACIlnB,EAAO2pB,GADDO,OAAOD,GAAgBvyB,SAAS,IACb,GAC7BsI,EAAK0rB,YAAcA,EACnB1rB,EAAKmqB,aAAa,QAAS,aAAegC,EAAQrtB,SAAW,mBACvDqtB,EAAQrK,WAAa,iBAAmBqK,EAAQttB,KAAO,OAAS,WACtE,IAAImuB,EAAOhtB,EAAKoqB,UAAUtsC,MAE1B,OADAosC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,SACnC8F,EAGX,SAAgBiF,GAAch2C,EAAGL,GAG7B,OADKK,EAAIL,GAAK,EAIlB,SAAgBs2C,GAASlyB,EAAMmsB,GAC3B,IAAIlwC,EAAI,EACJL,EAAI,EACJu2C,EAAS,EACTprC,EAAS,EACTmP,EAAO,GACXta,EAAIokB,EAAKhkB,OACT,IAAI0c,EAAI,EACR,GACQ3R,EAAS,IACT9K,EAAIk2C,GAERA,EAASnwC,KAAKymC,MAAMwJ,GAAch2C,EAAGL,IAErCmL,EAAS6jC,GADT10B,GAAQ8J,EAAKoyB,OAAOn2C,EAAGk2C,GACChG,SACnBplC,GAAUolC,EAAQruC,OAE3B,IADAoY,EAAOA,EAAKk8B,OAAO,EAAGn2C,GACjByc,EAAIzc,EAAGyc,EAAI9c,EAAG8c,IAGf,GAFAxC,GAAQ8J,EAAKtH,IACb3R,EAAS6jC,GAAS10B,EAAMi2B,KACVA,EAAQruC,MAAO,CACzBkiB,EAAOA,EAAKoyB,OAAO,EAAGl8B,EAAKla,OAAS,GACpC,MAUR,MAP6B,aAAzBmwC,EAAQvK,cACR5hB,EAAOA,EAAKoyB,OAAO,EAAGpyB,EAAKhkB,OAAS,GACpCgkB,GAAQ,OAGRA,EAAOA,EAAKoyB,OAAO,EAAGpyB,EAAKhkB,QAExBgkB,EAGX,SAAgB2rB,GAAmBzgC,EAAOkgC,GACtC,GAAa,WAATA,GAA+B,gBAAVlgC,EACrB,MAAO,MAEX,IAAI+vB,EAAQ,GACZ,OAAQ/vB,GACJ,IAAK,cACD+vB,EAAQ,SACR,MACJ,IAAK,gBACDA,EAAQ,WACR,MACJ,IAAK,cACDA,EAAQ,WAGhB,OAAOA,EAGX,SAAgBoX,GAAW5rB,EAAM1pB,GAC7B,IAAIkE,EAASL,IACb0B,EAAarB,EAAQlE,EAAO,EAAG,GAC/B,IAAIiV,EAAUhR,EAAuBC,GAAU1E,EAAG,EAAGC,EAAG,IACpDyV,EAAWjR,EAAuBC,GAAU1E,EAAGkqB,EAAK3oB,MAAOtB,EAAG,IAC9DoR,EAAa5M,EAAuBC,GAAU1E,EAAG,EAAGC,EAAGiqB,EAAK5oB,SAC5DoQ,EAAcjN,EAAuBC,GAAU1E,EAAGkqB,EAAK3oB,MAAOtB,EAAGiqB,EAAK5oB,SACtEy0C,EAAOtwC,KAAKyK,IAAIuF,EAAQzV,EAAG0V,EAAS1V,EAAGqR,EAAWrR,EAAG0R,EAAY1R,GACjEg2C,EAAOvwC,KAAKyK,IAAIuF,EAAQxV,EAAGyV,EAASzV,EAAGoR,EAAWpR,EAAGyR,EAAYzR,GACjEg2C,EAAOxwC,KAAKmJ,IAAI6G,EAAQzV,EAAG0V,EAAS1V,EAAGqR,EAAWrR,EAAG0R,EAAY1R,GACjEk2C,EAAOzwC,KAAKmJ,IAAI6G,EAAQxV,EAAGyV,EAASzV,EAAGoR,EAAWpR,EAAGyR,EAAYzR,GACrE,OAAO,IAAIqoB,GAAK2tB,EAAOF,EAAMG,EAAOF,GAGxC,SAAgBt+B,GAAYlX,EAAOsvC,EAAQC,EAAQprC,GAC/C,GAAc,IAAVnE,EAAa,CACb,IAAIkE,EAASL,IAEb,OADA0B,EAAarB,EAAQlE,EAAOsvC,EAAQC,GAC7BtrC,EAAuBC,EAAQC,GAE1C,OAAOA,EAGX,SAAgBwxC,GAAU1gC,EAASlS,GAG/B,OACIvD,EAHOyV,EAAQzV,EAAIuD,EAAIilB,YAAYjnB,MAAQgC,EAAIwmC,MAAM/pC,EAG5CC,EAFFwV,EAAQxV,EAAIsD,EAAIilB,YAAYlnB,OAASiC,EAAIwmC,MAAM9pC,GAQ9D,SAAgBo5B,GAAY1qB,GAMxB,YALc1L,IAAV0L,GACqB,iBAAVA,IACPA,EAAQynC,WAASznC,EAAOg/B,SAGzBh/B,ECvXX,SAAgB0nC,GAAmB9yC,EAAKiU,EAASnO,EAAUnB,EAASouC,EAAYC,EAAWvqC,GAC5E9D,EAAQwf,cAAcC,WAAW,GAC5C,GAAI4uB,GAAaA,EAAU92C,OAAS,GAAK62C,GAAcA,EAAW72C,OAAS,EACvE,MAAO,YAEX,GAAIyI,EAAQkhB,cACR,MAAO,OAOX,GAJqC,aAAjClhB,EAAoB,aAAEqjB,SACtBrjB,EAAQsX,OAASC,eAAaO,WAG7BD,GAAY7X,IAAY2X,GAAkB3X,KAAaA,EAAQiyB,cAChE,MAAO,OAEX,GAAIqc,GAAatuC,GAAU,CAEvB,IADI4hC,EAAS5hC,EAAQwf,eACVlQ,SAAWgzB,GAAcV,EAAOttB,YAAa,cACpD,IAAK,IAAI3W,EAAK,EAAGohB,EAAK6iB,EAAO2M,YAAa5wC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC5D,IAAI6wC,EAAQzvB,EAAGphB,GACf,GAAI6wC,EAAM9P,QAAS,CAEf,GAAI+P,GAASttC,EADTutC,EAAehN,GAAsBE,EAAQ4M,EAAOxuC,EAAQmjB,SAASxc,WACpC6nC,EAAMxsB,KAAO,GAC9C,OAAOwsB,EAAMr0B,OAMjC,GAAIm0B,GAAatuC,GAAU,CACvB,IAAIU,EAAWV,EAAQwf,cAAwB,WAC3Cxf,EAAQwf,cAAclQ,QAAQ2D,SAAS,GAAKjT,EAAQwf,cAAclQ,QAClEq/B,EAAejuC,EAAQ4B,OACvBs/B,EAAS5hC,EAAQwf,cACjBkvB,EAAe,IAAIthC,GAAKuhC,EAAa72C,EAAG62C,EAAa52C,EAAG42C,EAAat1C,MAAOs1C,EAAav1C,QAC7F,GAAIw1C,GAAoB5uC,KAAaA,EAAQwf,cAAcmF,WAAY,CACnE,IAAIkqB,EAAS7uC,EAAQwf,cAAcC,WAAW,GAC1CqvB,EAAqB,GAAK9uC,EAAQ+7B,eAAe9K,YACjD8d,EAAqB,GAAK/uC,EAAQ+7B,eAAe9K,YACrD,GAAIqR,GAAcV,EAAOttB,YAAa,aAAc,CAChD,GAAKguB,GAAcV,EAAOttB,YAAa,yBAChCW,GAAiB45B,IAAWJ,GAASttC,EAAU0tC,EAAOhtC,YAAaitC,GACtE,MAAO,qBAEX,GAAKxM,GAAcV,EAAOttB,YAAa,yBAChCa,GAAiB05B,IAAWJ,GAASttC,EAAU0tC,EAAO9iC,YAAagjC,GACtE,MAAO,qBAGX,GADI1rB,EAwGpB,SAAkCkD,EAAMqb,EAAQzgC,EAAUnB,GACtD,IAAI+uC,EAAqB,GAAK/uC,EAAQ+7B,eAAe9K,YACjD6d,EAAqB,GAAK9uC,EAAQ+7B,eAAe9K,YACrD,GAAkB,WAAd1K,EAAK5pB,KACL,IAAK,IAAInF,EAAI,EAAGA,EAAI+uB,EAAKtsB,SAAS1C,OAAQC,IAAK,CAC3C,IAAI4D,EAAWmrB,EAAa,SAAE/uB,GAC9B,GAAIi3C,GAASttC,EAAWkF,GAAMC,aAAalL,EAAQmW,QAA2BnW,EAAQg4B,aAAzBh4B,EAAQmW,OAA+Bu9B,GAChG,MAAO,oBAEX,GAAIL,GAASttC,EAAWkF,GAAMC,aAAalL,EAAQ9B,QAA2B8B,EAAQi4B,aAAzBj4B,EAAQ9B,OAA+By1C,GAChG,MAAO,oBAInB,GAAI/uC,EAAQgvC,4BAA8B35B,GAAoBkR,GAC1D,GAAkB,aAAdA,EAAK5pB,MAAqC,WAAd4pB,EAAK5pB,KACjC,IAAK,IAAInF,EAAI,EAAGA,EAAI+uB,EAAKtsB,SAAS1C,OAAQC,IAAK,CAC3C,IAAI4D,OAAU,EAEd,GADAA,EAAWmrB,EAAa,SAAE/uB,GACtBi3C,GAASttC,EAAU/F,EAAQqB,MAAO,IAClC,MAAO,kBAKf,IAAK,IAAIjF,EAAI,EAAGA,EAAI+uB,EAAKtsB,SAAS1C,OAAQC,IAAK,CAC3C,IAAI4D,OAAU,EACV6Q,GAAanU,EAAG,EAAGC,EAAG,GAC1BqD,EAAWmrB,EAAa,SAAE/uB,GAC1B,IAAK,IAAIL,EAAI,EAAGA,EAAIiE,EAAQ3B,OAAOlC,OAAS,EAAGJ,IAAK,CAChD,IAAIgV,EAAW9F,GAAM2G,eAAe5R,EAAQ3B,OAAOtC,GAAIiE,EAAQ3B,OAAOtC,EAAI,IAC1E,GAAIgV,GAAY,KACZF,EAASnU,GAAMsD,EAAQ3B,OAAOtC,GAAGW,EAAIsD,EAAQ3B,OAAOtC,EAAI,GAAGW,GAAK,EAChEmU,EAASlU,GAAMqD,EAAQ3B,OAAOtC,GAAGY,EAAIqD,EAAQ3B,OAAOtC,EAAI,GAAGY,GAAK,EAC5D02C,GAASttC,EAAU8K,EAAU,KAC7B,MAAO,cAO/B,OAAO,KAlJkBgjC,CAAyBJ,EAAQjN,EAAQzgC,EAAUnB,GAE5D,OAAOqjB,OAId,CACD,IAAI6rB,EAAM,GAAKlvC,EAAQmjB,SAAS8N,YAC5Bz0B,EAASL,IACb0B,EAAarB,EAAQkE,EAAQsN,YAActN,EAAQuN,gBAAiBvN,EAAQ7D,QAAS6D,EAAQ5D,SAE7F,IAAIhF,EAAI4I,EAAQ7D,QAAU6D,EAAQmhC,MAAM/pC,EAAI4I,EAAQ2M,WAAWhU,MAC3DtB,EAAI2I,EAAQ5D,QAAU4D,EAAQmhC,MAAM9pC,EAAI2I,EAAQ2M,WAAWjU,OAC3D+1C,GACAr3C,EAAGA,GAA0B,KAApB4I,EAAQmhC,MAAM/pC,EAA8B,EAAlB4I,EAAQmhC,MAAM/pC,EAAQ4I,EAAQmhC,MAAM/pC,GAAK4I,EAAQ2M,WAAWhU,MAAQ,EACvGtB,EAAGA,EAAI,GAAKiI,EAAQmjB,SAAS8N,aAEjCke,EAAc5yC,EAAuBC,EAAQ2yC,GAC7C,IAAIC,IAAiBpvC,EAAQwf,cAAcmF,WACvC0qB,KAAeD,IAAmB75B,GAAUvV,EAAQwf,cAAcmF,aACtE,GAAI2d,GAAcV,EAAOttB,YAAa,WAAam6B,GAASttC,EAAUguC,EAAaD,IAC9ElvC,EAAQwf,cAAc2iB,kBAAoBE,oBAAkB7sB,OAAS,CACtE,GAAI45B,GAAkBC,EAClB,MAAO,cAEN,IAAKD,EACN,MAAO,SAIf,GADAV,EAAalb,QAAQ0b,GACjBR,EAAapqC,cAAcnD,GAAW,CAEtC,GADIkiB,EA0DpB,SAA4BrjB,EAASU,EAASS,EAAU3E,EAAQ1E,EAAGC,GAC/D,IAAIsrB,EACwC,IAAvCrjB,EAAQwf,cAAc5E,MAAMrjB,QAA4D,IAA5CyI,EAAQwf,cAAcC,WAAWloB,QAC3EyI,EAAQwf,cAAc5E,MAAM,GAAGlB,YAClC2J,EAgFR,SAAuCrjB,EAASU,EAASS,EAAUrJ,EAAGC,GAClE,IAAIm3C,EAAM,GAAKlvC,EAAQmjB,SAAS8N,YAC5Bqe,EAAQ,GAAKtvC,EAAQmjB,SAAS8N,YAC9BzR,EAAgBxf,EAAQwf,cACxBnmB,EAAQqH,EAAQ2M,WAAWhU,MAC3BD,EAASsH,EAAQ2M,WAAWjU,OAC5BsK,EAAO,IAAI0J,GAAKtV,EAAGC,EAAI,GAAI2I,EAAQM,MAAM+Y,YAAa3gB,EAAS,IAC/DuK,EAAQ,IAAIyJ,GAAKtV,EAAIuB,EAAOtB,EAAI,GAAI2I,EAAQM,MAAM+Y,YAAa3gB,EAAS,IACxEyK,EAAM,IAAIuJ,GAAKtV,EAAI,GAAIC,EAAGsB,EAAQ,GAAIqH,EAAQM,MAAM+Y,aACpDnW,EAAS,IAAIwJ,GAAKtV,EAAI,GAAIC,EAAIqB,EAAQC,EAAQ,GAAIqH,EAAQM,MAAM+Y,aAChEL,EAAY8C,GAAuBxc,EAASA,EAAQwf,cAAc5E,MAAM,IAAI,GAC5E5a,EAAQ0c,UAAU1c,EAAQwf,cAAc5E,MAAM,GAAG+B,UAAY3c,EAAQwf,cAAc5E,MAAM,GAC7F,GAAIvhB,GAASi2C,GAASl2C,GAAUk2C,EAAO,CACnC,GAAIrN,GAAgBziB,EAAclL,YAAa,aAAckL,EAAc2iB,kBAAmB3iB,IAC1F7b,EAAMW,cAAcnD,EAAU+tC,GAC9B,MAAO,aAEX,GAAIjN,GAAgBziB,EAAclL,YAAa,cAAekL,EAAc2iB,kBAAmB3iB,IAC3F5b,EAAOU,cAAcnD,EAAU+tC,GAC/B,MAAO,cAEX,GAAiC,SAA7Bx1B,EAAUA,UAAU/c,KAAiB,CACrC,GAAIslC,GAAgBziB,EAAclL,YAAa,aAAckL,EAAc2iB,kBAAmB3iB,IAC1F9b,EAAKY,cAAcnD,EAAU+tC,GAC7B,MAAO,aAEX,GAAIjN,GAAgBziB,EAAclL,YAAa,cAAekL,EAAc2iB,kBAAmB3iB,IAC3F3b,EAAIS,cAAcnD,EAAU+tC,GAC5B,MAAO,eAInB,OAAO,KAhHMK,CAA8BvvC,EAASU,EAASS,EAAUrJ,EAAGC,IAErEsrB,GAAYrjB,EAAQwf,cAAc5E,MAAM,KAAQ5a,EAAQwf,cAAc5E,MAAM,GAAGqK,SAC/EjlB,EAAQwf,cAAc5E,MAAM,GAAGsF,QAAwD,aAA9ClgB,EAAQwf,cAAc5E,MAAM,GAAG1b,MAAMvC,QAC/E0mB,EA8GR,SAA+BrjB,EAASU,EAASS,EAAU3E,EAAQ1E,EAAGC,GAClE,IAAIu3C,EAAQ,GAAKtvC,EAAQmjB,SAAS8N,YAC9Bie,EAAM,GAAKlvC,EAAQmjB,SAAS8N,YAC5BzR,EAAgBxf,EAAQwf,cACxB4vB,IAAkB5vB,EAAwB,WAC9C,GAAI9e,EAAQ2M,WAAWhU,OAASi2C,GAAS5uC,EAAQ2M,WAAWjU,QAAUk2C,EAAO,CACzE,GAAIrN,GAAgBziB,EAAclL,YAAa,kBAAmBkL,EAAc2iB,kBAAmB3iB,IAAkBivB,GAASttC,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQ2M,WAAWhU,MAAOtB,EAAGA,EAAI2I,EAAQ2M,WAAWjU,SAAW81C,GAC3O,OAAO,EAAmB,uBAAyB,kBAEvD,GAAIjN,GAAgBziB,EAAclL,YAAa,kBAAmBkL,EAAc2iB,kBAAmB3iB,IAC/FivB,GAASttC,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAGC,EAAGA,EAAI2I,EAAQ2M,WAAWjU,SAAW81C,GAC/F,OAAO,EAAmB,uBAAyB,kBAEvD,GAAIjN,GAAgBziB,EAAclL,YAAa,kBAAmBkL,EAAc2iB,kBAAmB3iB,IAC/FivB,GAASttC,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQ2M,WAAWhU,MAAOtB,EAAGA,IAAMm3C,GAC9F,OAAO,EAAmB,uBAAyB,kBAEvD,GAAIjN,GAAgBziB,EAAclL,YAAa,kBAAmBkL,EAAc2iB,kBAAmB3iB,IAC/FivB,GAASttC,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAGC,EAAGA,IAAMm3C,GACnE,OAAO,EAAmB,uBAAyB,kBAG3D,GAAIjN,GAAgBziB,EAAclL,YAAa,aAAckL,EAAc2iB,kBAAmB3iB,IAAkBivB,GAASttC,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQ2M,WAAWhU,MAAOtB,EAAGA,EAAI2I,EAAQ2M,WAAWjU,OAAS,IAAM81C,GAC1O,OAAO,EAAmB,kBAAoB,aAElD,GAAIjN,GAAgBziB,EAAclL,YAAa,aAAckL,EAAc2iB,kBAAmB3iB,IAC1FivB,GAASttC,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAGC,EAAGA,EAAI2I,EAAQ2M,WAAWjU,OAAS,IAAM81C,GACnG,OAAO,EAAmB,kBAAoB,aAElD,GAAIjN,GAAgBziB,EAAclL,YAAa,cAAekL,EAAc2iB,kBAAmB3iB,IAAkBivB,GAASttC,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQ2M,WAAWhU,MAAQ,EAAGtB,EAAGA,EAAI2I,EAAQ2M,WAAWjU,SAAW81C,GAC3O,OAAO,EAAmB,mBAAqB,cAEnD,GAAIjN,GAAgBziB,EAAclL,YAAa,cAAekL,EAAc2iB,kBAAmB3iB,IAC3FivB,GAASttC,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQ2M,WAAWhU,MAAQ,EAAGtB,EAAGA,IAAMm3C,GAClG,OAAO,EAAmB,mBAAqB,cAEnD,OAAO,KAlJMM,CAAsBxvC,EAASU,EAASS,EAAU3E,EAAQ1E,EAAGC,IAE1E,GAAIsrB,EACA,OAAOA,EAEX,OAAO,KAvEkBosB,CAAmBzvC,EAASU,EAASS,EAAU3E,EAAQ1E,EAAGC,GAEnE,OAAOsrB,IAMvB,GAAI5L,GAAWzX,KAAa3E,EACxB,MAAO,MAEX,GAAIyI,aAAkB40B,KAAejhB,GAAWzX,GAAW,CACvD,IAAIqjB,EACJ,GAAe,UADXA,EAASqsB,GAAuB1vC,EAAS8D,IAEzC,OAAOuf,EAGf,IAAKvf,aAAkBsQ,IAAmBtQ,aAAkBuQ,MAAqBoD,GAAWzX,IAAamU,GAAUrQ,GAC/G,OAAI6rC,GAAW3vC,EAAS8D,OAAQ/I,EAAWuU,IAAYsF,GAAQ9Q,GACpD,YAEJ,cAEX,GAAY,OAARzI,EAAc,CACd,KAAIA,aAAeua,IAAQva,aAAeoZ,IA6BtC,MAAO,SA5BP,GAAInF,GAAWA,EAAQ3O,GAAI,CACvB,IAAIA,EAAK2O,EAAQ3O,GAAGkP,MAAMxU,EAAIsF,IAAI,GAClC,GAAIA,GAAMA,EAAG/H,MAAM,UACf,MAAO,kBAGf,GAAIgc,GAAQvZ,IAAQiU,aAAmB8V,IAAe9V,EAAQgvB,UAAUC,KACpE,MAAO,YAEX,IAAI3pB,GAAQvZ,KAAQs0C,GAAW3vC,EAAS3E,GAAK,SAA+CN,IAArCiF,EAAQwf,cAAcmF,WAOxE,OAAItpB,GAAOoc,GAAWzX,KAAa+X,GAAY/X,GACzC,MAEFA,EAAQwf,cAAc5E,MAAMrjB,QAAUyI,EAAQwf,cAAc5E,MAAM,GAAGsF,QAC1ElgB,EAAQwf,cAAclQ,SAAWtP,EAAQwf,cAAclQ,QAAQhN,OAAOgC,cAAcnD,GAC7E,OAGA,SAdP,GAAK9F,aAAeoZ,KAAeg6B,GAASttC,EAAU9F,EAAIwG,YAAaxG,EAAIo4B,cACvEgb,GAASttC,EAAU9F,EAAI0Q,YAAa1Q,EAAIo4B,eACtCp4B,aAAeoZ,IACjB,MAAO,OAkBvB,MAAO,SA8DX,SAAgBi7B,GAAuB1vC,EAAS8D,EAAQsqC,EAAYC,GAChE,GAAIx1B,GAAQ/U,KAAqBy+B,GAAqBz+B,EAAQ8rC,iBAAeC,QACrEtN,GAAqBz+B,EAAQ8rC,iBAAeE,WAChD,GAAKhsC,EAAOwQ,YAAcyB,kBAAgBlB,KACtC,MAAO,gBAGV,GAAI8D,GAAQ7U,KAAqBy+B,GAAqBz+B,EAAQ8rC,iBAAeC,QAC1EtN,GAAqBz+B,EAAQ8rC,iBAAeE,WAC5ChsC,EAAOwQ,YAAcyB,kBAAgB6C,KAAM,CAC3C5Y,EAAQiyB,iBACR,IAAI5sB,GAAc1I,KAAM,aAAcozC,aAAcjsC,EAAOnD,IAI3D,OAHAX,EAAQiyB,cAAgB5sB,EACxBrF,EAAQsX,MAAQC,eAAaO,SAC7B9X,EAAQgwC,qBAAuB3qC,EACxB,WAGf,MAAO,OA+EX,SAAgBopC,GAASzZ,EAAer7B,EAAQsT,GAC5C,OAAI+nB,EAAcl9B,GAAK6B,EAAO7B,EAAImV,GAAW+nB,EAAcl9B,GAAK6B,EAAO7B,EAAImV,GACnE+nB,EAAcj9B,GAAK4B,EAAO5B,EAAIkV,GAAW+nB,EAAcj9B,GAAK4B,EAAO5B,EAAIkV,EAOnF,SAAgBqhC,GAAatuC,GACzB,OAAIA,EAAQwf,cAAc5E,MAAMrjB,OAAS,GAAKyI,EAAQwf,cAAcC,WAAWloB,OAAS,EAM5F,SAAgBq3C,GAAoB5uC,GAChC,OAAgD,IAA5CA,EAAQwf,cAAcC,WAAWloB,SAAiByI,EAAQwf,cAAc5E,MAAMrjB,OAMtF,SAAgBo4C,GAAW3vC,EAASU,EAASuvC,EAAY3gC,GAErD,QADmB,IAAf2gC,IAAyBA,GAAa,GACtCvvC,aAAmBoU,GACnB,OAAO,EAEX,GAAIpU,aAAmBkV,GACnB,KAAOlV,GAAS,CACZ,IAAsD,IAAlDV,EAAQwf,cAAc5E,MAAMwG,QAAQ1gB,SAAwD3F,IAArCiF,EAAQwf,cAAcmF,WAC7E,OAAO,EAEX,GAAKsrB,EAID,MAHAvvC,EAAUV,EAAQ0c,UAAUhc,EAAQic,eAO3C,GAAIjc,aAAmB+T,IACxB,IAA2D,IAAvDzU,EAAQwf,cAAcC,WAAW2B,QAAQ1gB,SAAwD3F,IAArCiF,EAAQwf,cAAcmF,WAClF,OAAO,OAGV,IAAIjkB,aAAmB0T,IAAmB1T,aAAmB2T,KAC1DrU,EAAQwf,cAAcmF,YAAc3kB,EAAQwf,cAAclQ,QAAQ2D,SAAS,GAAGtS,KAAO2O,EAAQ3O,GAC7F,OAAO,EAGf,OAAO,EAGX,SAAgBuvC,GAAUC,EAAQ73C,GAI9B,GAFAA,GAAS,IACTA,GAAS,KACyB,IAA9B63C,EAAO/uB,QAAQ,UACf,OAAOgvB,GAAQD,GAGf,IAAIjiC,EAAMkiC,GAAQD,GAClB,OAAK73C,GAAS,GAAKA,EAAQ,IAAQA,GAAS,KAAOA,GAAS,KAASA,GAAS,KAAOA,GAAS,IACnF4V,EAED5V,GAAS,IAAMA,GAAS,IAAQA,GAAS,KAAOA,GAAS,IACnD,aAAR4V,GAA8B,aAARA,EACf,YAEM,cAARA,GAA+B,cAARA,EACrB,WAEM,aAARA,GAA8B,aAARA,EACpB,YAGA,WAGL5V,GAAS,IAAMA,GAAS,KAASA,GAAS,KAAOA,GAAS,IACpD,aAAR4V,GAA8B,aAARA,EACf,WAEM,cAARA,GAA+B,cAARA,EACrB,YAEM,aAARA,GAA8B,aAARA,EACpB,WAGA,YAGL5V,GAAS,KAAOA,GAAS,KAASA,GAAS,KAAOA,GAAS,IACrD,aAAR4V,GAA8B,aAARA,EACf,YAEM,cAARA,GAA+B,cAARA,EACrB,WAEM,aAARA,GAA8B,aAARA,EACpB,YAOZkiC,GAAQD,GAHA,WCq5DnB,SACgBE,GAAqBnxC,GACjC,OAAOoxC,GAAWpxC,EAAME,YAE5B,SAAgBmxC,GAA4BrxC,GACxC,OAAOsxC,GAAkBtxC,EAAME,YAEnC,SAAgBqxC,GAA4BvxC,GACxC,OAAOwxC,GAAkBxxC,EAAME,YAEnC,SAAgBuxC,GAAyBzxC,GACrC,OAAO0xC,GAAe1xC,EAAME,YAEhC,SAAgByxC,GAAyB3xC,GACrC,OAAO4xC,GAAe5xC,EAAME,YCnnDhC,SACS2xC,GAAe1vC,GACpB,IAAIvJ,EAAIuJ,EAAKxE,QAAUwE,EAAKgM,WAAWhU,MAAQgI,EAAKwgC,MAAM/pC,EACtDC,EAAIsJ,EAAKvE,QAAUuE,EAAKgM,WAAWjU,OAASiI,EAAKwgC,MAAM9pC,EAC3D,OAAO,IAAIqV,GAAKtV,EAAGC,EAAGsJ,EAAKgM,WAAWhU,MAAOgI,EAAKgM,WAAWjU,QAEjE,SAAS43C,GAAmBrwC,EAAIswC,GAC5B,IAAK,IAAIz5C,EAAI,EAAGA,EAAIy5C,EAAK15C,OAAQC,IAC7B,GAAIy5C,EAAKz5C,GAAGmJ,KAAOA,EACf,OAAO,EAGf,OAAO,EC9tBX,IAAIyf,GAAsB,WACtB,SAASA,EAAK/mB,EAAOD,GACjB0H,KAAKzH,MAAQA,EACbyH,KAAK1H,OAASA,EAuBlB,OApBAgnB,EAAK8wB,UAAUC,QAAU,WACrB,OAAuB,IAAhBrwC,KAAK1H,QAA+B,IAAf0H,KAAKzH,OAgBrC+mB,EAAK8wB,UAAUE,MAAQ,WACnB,OAAO,IAAIhxB,EAAKtf,KAAKzH,MAAOyH,KAAK1H,SAE9BgnB,KC7BPixB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAM5DxI,GAAuB,SAAUgsC,GAEjC,SAAShsC,IACL,OAAkB,OAAXgsC,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA4J/D,OA9JAuwC,GAAUhrC,EAAOgsC,GAKjBhsC,EAAMhC,OAAS,SAAUkN,EAAQjY,GAC7B,OAAIiY,IAAWjY,MAGViY,IAAWjY,MAGRiY,IAAWjY,GAAUiY,EAAOzZ,IAAMwB,EAAOxB,GAAKyZ,EAAOxZ,IAAMuB,EAAOvB,IAK9EsO,EAAMC,aAAe,SAAU7J,GAC3B,OAAIA,EAAM3E,IAAK2E,EAAM1E,GAoCzBsO,EAAMM,UAAY,SAAUlK,EAAOnE,EAAOf,GACtC,IAAImF,GAAO5E,EAAG,EAAGC,EAAG,GAGpB,OAFA2E,EAAG5E,EAAIyF,KAAKC,MAA6D,KAAtDf,EAAM3E,EAAIP,EAASgG,KAAKY,IAAI7F,EAAQiF,KAAK2R,GAAK,OAAe,IAChFxS,EAAG3E,EAAIwF,KAAKC,MAA6D,KAAtDf,EAAM1E,EAAIR,EAASgG,KAAKW,IAAI5F,EAAQiF,KAAK2R,GAAK,OAAe,IACzExS,GAGX2J,EAAM0I,WAAa,SAAUrU,EAAGkU,GAE5B,OADarR,KAAKg1C,KAAKh1C,KAAKi1C,IAAK93C,EAAE5C,EAAI8W,EAAE9W,EAAI,GAAKyF,KAAKi1C,IAAK93C,EAAE3C,EAAI6W,EAAE7W,EAAI,KAI5EsO,EAAMsI,UAAY,SAAU4C,EAAQjY,GAChC,IAAIhB,EAAQiF,KAAKk1C,MAAMn5C,EAAOvB,EAAIwZ,EAAOxZ,EAAGuB,EAAOxB,EAAIyZ,EAAOzZ,GAM9D,OALAQ,EAAS,IAAMA,EAAQiF,KAAK2R,IAC5B5W,GAAS,KACG,IACRA,GAAS,KAENA,GAGX+N,EAAM2G,eAAiB,SAAU0lC,EAAKC,GAClC,OAAOp1C,KAAKg1C,KAAKh1C,KAAKi1C,IAAIG,EAAI76C,EAAI46C,EAAI56C,EAAG,GAAKyF,KAAKi1C,IAAIG,EAAI56C,EAAI26C,EAAI36C,EAAG,KAG1EsO,EAAMusC,0BAA4B,SAAUn5C,GAExC,IAAK,IADDlC,EAAS,EACJJ,EAAI,EAAGA,EAAIsC,EAAOlC,OAAS,EAAGJ,IACnCI,GAAUuJ,KAAKkM,eAAevT,EAAOtC,GAAIsC,EAAOtC,EAAI,IAExD,OAAOI,GAGX8O,EAAMwsC,YAAc,SAAUxvC,EAAQS,EAAQgvC,EAASv7C,GACnD,IACIe,EADAoE,EAAKo2C,GAAYh7C,EAAGuL,EAAOvL,EAAGC,EAAGsL,EAAOtL,IAAQD,EAAGgM,EAAOhM,EAAGC,EAAG+L,EAAO/L,GA4B3E,OA1BIsL,EAAOvL,IAAMgM,EAAOhM,EAChBuL,EAAOtL,EAAI+L,EAAO/L,GAAK+6C,GAAWzvC,EAAOtL,EAAI+L,EAAO/L,IAAM+6C,EAC1Dp2C,EAAG3E,GAAKR,EAGRmF,EAAG3E,GAAKR,EAGP8L,EAAOtL,IAAM+L,EAAO/L,EACrBsL,EAAOvL,EAAIgM,EAAOhM,GAAKg7C,GAAWzvC,EAAOvL,EAAIgM,EAAOhM,IAAMg7C,EAC1Dp2C,EAAG5E,GAAKP,EAGRmF,EAAG5E,GAAKP,EAIRu7C,GACAx6C,EAAQwI,KAAK6N,UAAUtL,EAAQS,GAC/BpH,EAAKoE,KAAK6F,UAAUtD,EAAQ/K,EAAOf,KAGnCe,EAAQwI,KAAK6N,UAAU7K,EAAQT,GAC/B3G,EAAKoE,KAAK6F,UAAU7C,EAAQxL,EAAOf,IAGpCmF,GAGX2J,EAAM9C,UAAY,SAAUmvC,EAAKC,GAC7B,OAAIp1C,KAAK6G,IAAIuuC,EAAI76C,EAAI46C,EAAI56C,GAAKyF,KAAK6G,IAAIuuC,EAAI56C,EAAI26C,EAAI36C,GACxC26C,EAAI56C,EAAI66C,EAAI76C,EAAI,QAAU,OAG1B46C,EAAI36C,EAAI46C,EAAI56C,EAAI,SAAW,OAwB1CsO,EAAM6qC,UAAU6B,aAAe,WAC3B,MAAO,SAEXnB,IACIoB,WAAS,IACV3sC,EAAM6qC,UAAW,SAAK,GACzBU,IACIoB,WAAS,IACV3sC,EAAM6qC,UAAW,SAAK,GAClB7qC,GACT4sC,iBCpLE7lC,GAAsB,WACtB,SAASA,EAAKtV,EAAGC,EAAGsB,EAAOD,GAKvB0H,KAAKhJ,EAAImB,OAAOyV,UAKhB5N,KAAK/I,EAAIkB,OAAOyV,UAKhB5N,KAAKzH,MAAQ,EAKbyH,KAAK1H,OAAS,OACJ2B,IAANjD,QAAyBiD,IAANhD,GACnBD,EAAIC,EAAIkB,OAAOyV,UACfrV,EAAQD,EAAS,SAGH2B,IAAV1B,IACAA,EAAQ,QAEG0B,IAAX3B,IACAA,EAAS,IAGjB0H,KAAKhJ,EAAIA,EACTgJ,KAAK/I,EAAIA,EACT+I,KAAKzH,MAAQA,EACbyH,KAAK1H,OAASA,EA2MlB,OAzMA4lB,OAAOozB,eAAehlC,EAAK8jC,UAAW,QAElCgC,IAAK,WACD,OAAOpyC,KAAKhJ,GAEhBq7C,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,SAElCgC,IAAK,WACD,OAAOpyC,KAAKhJ,EAAIgJ,KAAKzH,OAEzB85C,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,OAElCgC,IAAK,WACD,OAAOpyC,KAAK/I,GAEhBo7C,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,UAElCgC,IAAK,WACD,OAAOpyC,KAAK/I,EAAI+I,KAAK1H,QAEzB+5C,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,WAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAK4C,KAAM3L,EAAG+I,KAAK+C,MAEnCsvC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,YAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAK6C,MAAO5L,EAAG+I,KAAK+C,MAEpCsvC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,cAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAK4C,KAAM3L,EAAG+I,KAAK8C,SAEnCuvC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,eAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAK6C,MAAO5L,EAAG+I,KAAK8C,SAEpCuvC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,cAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAK4C,KAAM3L,EAAG+I,KAAK/I,EAAI+I,KAAK1H,OAAS,IAErD+5C,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,eAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAK6C,MAAO5L,EAAG+I,KAAK/I,EAAI+I,KAAK1H,OAAS,IAEtD+5C,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,aAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAKhJ,EAAIgJ,KAAKzH,MAAQ,EAAGtB,EAAG+I,KAAK+C,MAEjDsvC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,gBAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAKhJ,EAAIgJ,KAAKzH,MAAQ,EAAGtB,EAAG+I,KAAK8C,SAEjDuvC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehlC,EAAK8jC,UAAW,UAElCgC,IAAK,WACD,OAASp7C,EAAGgJ,KAAKhJ,EAAIgJ,KAAKzH,MAAQ,EAAGtB,EAAG+I,KAAK/I,EAAI+I,KAAK1H,OAAS,IAEnE+5C,YAAY,EACZC,cAAc,IAGlBhmC,EAAK8jC,UAAU7sC,OAAS,SAAUgvC,EAAOC,GACrC,OAAOD,EAAMv7C,IAAMw7C,EAAMx7C,GAAKu7C,EAAMt7C,IAAMu7C,EAAMv7C,GAAKs7C,EAAMh6C,QAAUi6C,EAAMj6C,OAASg6C,EAAMj6C,SAAWk6C,EAAMl6C,QAG/GgU,EAAK8jC,UAAU/9B,UAAY,SAAUhG,GACjC,IAAIxJ,EAAQpG,KAAKmJ,IAAIzN,OAAOs6C,MAAQzyC,KAAK6C,OAAS7C,KAAKhJ,IAAMmB,OAAOyV,UAAYvB,EAAKxJ,MAAQ7C,KAAK6C,MAAOwJ,EAAKxJ,OAC1GC,EAASrG,KAAKmJ,IAAIzN,OAAOs6C,MAAQzyC,KAAK8C,QAAU9C,KAAK/I,IAAMkB,OAAOyV,UAAYvB,EAAKvJ,OAAS9C,KAAK8C,OAAQuJ,EAAKvJ,QAKlH,OAJA9C,KAAKhJ,EAAIyF,KAAKyK,IAAIlH,KAAK4C,KAAMyJ,EAAKzJ,MAClC5C,KAAK/I,EAAIwF,KAAKyK,IAAIlH,KAAK+C,IAAKsJ,EAAKtJ,KACjC/C,KAAKzH,MAAQsK,EAAQ7C,KAAKhJ,EAC1BgJ,KAAK1H,OAASwK,EAAS9C,KAAK/I,EACrB+I,MAGXsM,EAAK8jC,UAAUsC,WAAa,SAAU/2C,GAClC,GAAIqE,KAAKhJ,IAAMmB,OAAOyV,UAGlB,OAFA5N,KAAKhJ,EAAI2E,EAAM3E,OACfgJ,KAAK/I,EAAI0E,EAAM1E,GAGnB,IAAID,EAAIyF,KAAKyK,IAAIlH,KAAK4C,KAAMjH,EAAM3E,GAC9BC,EAAIwF,KAAKyK,IAAIlH,KAAK+C,IAAKpH,EAAM1E,GAC7B4L,EAAQpG,KAAKmJ,IAAI5F,KAAK6C,MAAOlH,EAAM3E,GACnC8L,EAASrG,KAAKmJ,IAAI5F,KAAK8C,OAAQnH,EAAM1E,GACzC+I,KAAKhJ,EAAIA,EACTgJ,KAAK/I,EAAIA,EACT+I,KAAKzH,MAAQsK,EAAQ7C,KAAKhJ,EAC1BgJ,KAAK1H,OAASwK,EAAS9C,KAAK/I,GAahCqV,EAAK8jC,UAAU1d,QAAU,SAAUvmB,GAK/B,OAJAnM,KAAKhJ,GAAKmV,EACVnM,KAAK/I,GAAKkV,EACVnM,KAAKzH,OAAmB,EAAV4T,EACdnM,KAAK1H,QAAoB,EAAV6T,EACRnM,MAgBXsM,EAAK8jC,UAAUuC,WAAa,SAAUtmC,GAClC,QAAIrM,KAAK6C,MAAQwJ,EAAKzJ,MAAQ5C,KAAK4C,KAAOyJ,EAAKxJ,OAAS7C,KAAK+C,IAAMsJ,EAAKvJ,QAAU9C,KAAK8C,OAASuJ,EAAKtJ,MAMzGuJ,EAAK8jC,UAAUpf,aAAe,SAAU3kB,GACpC,OAAOrM,KAAK4C,MAAQyJ,EAAKzJ,MAAQ5C,KAAK6C,OAASwJ,EAAKxJ,OAAS7C,KAAK+C,KAAOsJ,EAAKtJ,KAAO/C,KAAK8C,QAAUuJ,EAAKvJ,QAG7GwJ,EAAK8jC,UAAU5sC,cAAgB,SAAU7H,EAAOwQ,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,GAC7BnM,KAAK4C,KAAOuJ,GAAWxQ,EAAM3E,GAAKgJ,KAAK6C,MAAQsJ,GAAWxQ,EAAM3E,GAChEgJ,KAAK+C,IAAMoJ,GAAWxQ,EAAM1E,GAAK+I,KAAK8C,OAASqJ,GAAWxQ,EAAM1E,GAW3EqV,EAAKmmB,SAAW,SAAU95B,GAEtB,IAAK,IADD0T,EAAO,IAAIC,EACNzP,EAAK,EAAGC,EAAWnE,EAAQkE,EAAKC,EAASrG,OAAQoG,IAAM,CAC5D,IAAIjB,EAAKkB,EAASD,GAClBwP,EAAKqmC,WAAW92C,GAEpB,OAAOyQ,GAGXC,EAAKsmC,MAAQ,IAAItmC,EAAKnU,OAAOyV,UAAWzV,OAAO06C,UAAW,EAAG,GACtDvmC,MrB9OX,SAAW/Q,GACPA,EAAYA,EAAsB,SAAI,GAAK,WAC3CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAqB,QAAI,GAAK,UAJ9C,CAKGA,gBAAgBA,mBAEnB,IAAID,GAAwB,WAexB,OAdA,SAAgBY,EAAKK,EAAKF,EAAKF,EAAKJ,EAASC,EAASH,GAClDmE,KAAK9D,IAAMA,EACX8D,KAAKzD,IAAMA,EACXyD,KAAK3D,IAAMA,EACX2D,KAAK7D,IAAMA,EACX6D,KAAKjE,QAAUA,EACfiE,KAAKhE,QAAUA,EAMfgE,KAAKnE,KAAOA,OsBZpB,SAAWizC,GAEPA,EAAeA,EAAwB,QAAI,GAAK,UAEhDA,EAAeA,EAAuB,OAAI,GAAK,SAE/CA,EAAeA,EAAsB,MAAI,GAAK,QAE9CA,EAAeA,EAAwB,QAAI,GAAK,UARpD,CASGA,mBAAmBA,sBAetB,SAAWgE,GAEPA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAqC,oBAAI,GAAK,sBAE9DA,EAAgBA,EAAmC,kBAAI,GAAK,oBAE5DA,EAAgBA,EAA2B,UAAI,GAAK,YAEpDA,EAAgBA,EAAuC,sBAAI,GAAK,wBAEhEA,EAAgBA,EAAqC,oBAAI,GAAK,sBAE9DA,EAAgBA,EAA6B,YAAI,IAAM,cAEvDA,EAAgBA,EAA8B,aAAI,IAAM,eAExDA,EAAgBA,EAAqB,IAAI,IAAM,MAlBnD,CAmBGA,oBAAoBA,uBAqBvB,SAAWxR,GAEPA,EAAoBA,EAA0B,KAAI,GAAK,OAEvDA,EAAoBA,EAA0C,qBAAI,GAAK,uBAEvEA,EAAoBA,EAA0C,qBAAI,GAAK,uBAEvEA,EAAoBA,EAAqC,gBAAI,GAAK,kBAElEA,EAAoBA,EAAqC,gBAAI,IAAM,kBAEnEA,EAAoBA,EAAqC,gBAAI,IAAM,kBAEnEA,EAAoBA,EAAqC,gBAAI,IAAM,kBAEnEA,EAAoBA,EAAgC,WAAI,KAAO,aAE/DA,EAAoBA,EAAgC,WAAI,KAAO,aAE/DA,EAAoBA,EAAiC,YAAI,KAAO,cAEhEA,EAAoBA,EAAiC,YAAI,MAAQ,cAEjEA,EAAoBA,EAA4B,OAAI,MAAQ,SAE5DA,EAAoBA,EAAgC,WAAI,MAAQ,aAEhEA,EAAoBA,EAA6B,QAAI,MAAQ,UAE7DA,EAAoBA,EAA+B,UAAI,MAAQ,YAE/DA,EAAoBA,EAAyB,IAAI,OAAS,MAhC9D,CAiCGA,wBAAwBA,2BAwB3B,SAAW1tB,GAEPA,EAAqBA,EAA2B,KAAI,GAAK,OAEzDA,EAAqBA,EAA6B,OAAI,GAAK,SAE3DA,EAAqBA,EAA6B,OAAI,GAAK,SAE3DA,EAAqBA,EAA2B,KAAI,GAAK,OAEzDA,EAAqBA,EAAoC,cAAI,IAAM,gBAEnEA,EAAqBA,EAAoC,cAAI,IAAM,gBAEnEA,EAAqBA,EAAuC,iBAAI,IAAM,mBAEtEA,EAAqBA,EAAgC,UAAI,KAAO,YAEhEA,EAAqBA,EAA+B,SAAI,KAAO,WAE/DA,EAAqBA,EAAqC,eAAI,KAAO,iBAErEA,EAAqBA,EAAsC,gBAAI,MAAQ,kBAEvEA,EAAqBA,EAAoC,cAAI,MAAQ,gBAErEA,EAAqBA,EAA8B,QAAI,MAAQ,UAE/DA,EAAqBA,EAAqC,eAAI,MAAQ,iBAEtEA,EAAqBA,EAAkC,YAAI,MAAQ,cAEnEA,EAAqBA,EAA+B,SAAI,OAAS,WAEjEA,EAAqBA,EAA8B,QAAI,OAAS,UAlCpE,CAmCGA,yBAAyBA,4BAe5B,SAAWH,GAEPA,EAAsBA,EAAgC,SAAI,GAAK,WAE/DA,EAAsBA,EAAuC,gBAAI,GAAK,kBAEtEA,EAAsBA,EAA8B,OAAI,GAAK,SAE7DA,EAAsBA,EAA4B,KAAI,IAAM,OAE5DA,EAAsBA,EAA8B,OAAI,IAAM,SAE9DA,EAAsBA,EAA8B,OAAI,IAAM,SAE9DA,EAAsBA,EAAmC,YAAI,KAAO,cAEpEA,EAAsBA,EAA4B,KAAI,GAAK,OAhB/D,CAiBGA,0BAA0BA,6BAmC7B,SAAWI,GAEPA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAwB,OAAI,GAAK,SAEjDA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAwB,OAAI,GAAK,SAEjDA,EAAgBA,EAAwB,OAAI,IAAM,SAElDA,EAAgBA,EAA+B,cAAI,IAAM,gBAEzDA,EAAgBA,EAAwB,OAAI,IAAM,SAElDA,EAAgBA,EAA2B,UAAI,KAAO,YAEtDA,EAAgBA,EAA4B,WAAI,KAAO,aAEvDA,EAAgBA,EAA4B,WAAI,KAAO,aAEvDA,EAAgBA,EAA4B,WAAI,MAAQ,aAExDA,EAAgBA,EAA2B,UAAI,MAAQ,YAEvDA,EAAgBA,EAAyB,QAAI,IAAM,UAEnDA,EAAgBA,EAAiC,gBAAI,MAAQ,kBAE7DA,EAAgBA,EAA4B,WAAI,MAAQ,aAExDA,EAAgBA,EAAiC,gBAAI,OAAS,kBAE9DA,EAAgBA,EAA6B,YAAI,OAAS,cAE1DA,EAAgBA,EAAiC,gBAAI,OAAS,kBAE9DA,EAAgBA,EAA4B,WAAI,QAAU,aAE1DA,EAAgBA,EAAiC,gBAAI,QAAU,kBAE/DA,EAAgBA,EAA6B,YAAI,QAAU,cAE3DA,EAAgBA,EAAwB,OAAI,SAAW,SAEvDA,EAAgBA,EAA6B,YAAI,SAAW,cAE5DA,EAAgBA,EAA4B,WAAI,UAAY,aAE5DA,EAAgBA,EAAyB,QAAI,SAAW,UAExDA,EAAgBA,EAAgC,eAAI,SAAW,iBAE/DA,EAAgBA,EAA0B,SAAI,SAAW,WAEzDA,EAAgBA,EAAyB,QAAI,SAAW,UAxD5D,CAyDGA,oBAAoBA,uBAQvB,SAAWk/B,GAEPA,EAAcA,EAAoB,KAAI,GAAK,OAE3CA,EAAcA,EAA6B,cAAI,GAAK,gBAEpDA,EAAcA,EAA8B,eAAI,GAAK,iBANzD,CAOGA,kBAAkBA,qBAiBrB,SAAWxR,GAEPA,EAAkBA,EAA0B,OAAI,GAAK,SAErDA,EAAkBA,EAAmC,gBAAI,GAAK,kBAE9DA,EAAkBA,EAAmC,gBAAI,GAAK,kBAE9DA,EAAkBA,EAAmC,gBAAI,IAAM,kBAE/DA,EAAkBA,EAA8B,WAAI,IAAM,aAE1DA,EAAkBA,EAAmC,gBAAI,IAAM,kBAE/DA,EAAkBA,EAA+B,YAAI,KAAO,cAE5DA,EAAkBA,EAAmC,gBAAI,KAAO,kBAEhEA,EAAkBA,EAA8B,WAAI,KAAO,aAE3DA,EAAkBA,EAAmC,gBAAI,MAAQ,kBAEjEA,EAAkBA,EAA+B,YAAI,MAAQ,cAE7DA,EAAkBA,EAA2B,QAAI,MAAQ,UAxB7D,CAyBGA,sBAAsBA,yBAqBzB,SAAWnrB,GAEPA,EAAmBA,EAAyB,KAAI,GAAK,OAErDA,EAAmBA,EAA6B,SAAI,GAAK,WAEzDA,EAAmBA,EAA6B,SAAI,GAAK,WAEzDA,EAAmBA,EAA4B,QAAI,GAAK,UAExDA,EAAmBA,EAAoC,gBAAI,IAAM,kBAEjEA,EAAmBA,EAA8B,UAAI,IAAM,YAE3DA,EAAmBA,EAAiC,aAAI,IAAM,eAE9DA,EAAmBA,EAAyB,KAAI,IAAM,OAEtDA,EAAmBA,EAAyB,KAAI,KAAO,OAEvDA,EAAmBA,EAAyB,KAAI,KAAO,OAEvDA,EAAmBA,EAAwB,IAAI,KAAO,MAEtDA,EAAmBA,EAAiC,aAAI,KAAO,eAE/DA,EAAmBA,EAAmC,eAAI,MAAQ,iBAElEA,EAAmBA,EAA4B,QAAI,KAAO,UA5B9D,CA6BGA,uBAAuBA,0BAc1B,SAAWK,GAEPA,EAAaA,EAAmB,KAAI,GAAK,OAEzCA,EAAaA,EAA2B,aAAI,GAAK,eAEjDA,EAAaA,EAA6B,eAAI,GAAK,iBAEnDA,EAAaA,EAAsB,QAAI,GAAK,UAE5CA,EAAaA,EAAuB,SAAI,GAAK,WAE7CA,EAAaA,EAA6B,eAAI,IAAM,iBAEpDA,EAAaA,EAAsB,QAAI,GAAK,UAdhD,CAeGA,iBAAiBA,oBAOpB,SAAWu8B,GAEPA,EAAUA,EAAgB,KAAI,GAAK,OAEnCA,EAAUA,EAAkB,OAAI,GAAK,SAJzC,CAKGA,cAAcA,iBAOjB,SAAWC,GAEPA,EAAWA,EAAmB,OAAI,GAAK,SAEvCA,EAAWA,EAAgB,IAAI,GAAK,MAJxC,CAKGA,eAAeA,kBAYlB,SAAWC,GAEPA,EAAaA,EAAmB,KAAI,GAAK,OAEzCA,EAAaA,EAAsB,QAAI,GAAK,UAE5CA,EAAaA,EAAmB,KAAI,GAAK,OAEzCA,EAAaA,EAAkB,IAAI,GAAK,MAExCA,EAAaA,EAAoB,MAAI,GAAK,QAV9C,CAWGA,iBAAiBA,oBA0EpB,SAAWC,GAEPA,EAAKA,EAAW,KAAI,MAAQ,OAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAW,KAAI,IAAM,OAE1BA,EAAKA,EAAS,GAAI,IAAM,KAExBA,EAAKA,EAAY,MAAI,IAAM,QAE3BA,EAAKA,EAAW,KAAI,IAAM,OAE1BA,EAAKA,EAAa,OAAI,IAAM,SAE5BA,EAAKA,EAAY,MAAI,IAAM,QAE3BA,EAAKA,EAAa,OAAI,IAAM,SAE5BA,EAAKA,EAAe,SAAI,IAAM,WAE9BA,EAAKA,EAAU,IAAI,IAAM,MAEzBA,EAAKA,EAAW,KAAI,IAAM,OAE1BA,EAAKA,EAAa,OAAI,IAAM,SAE5BA,EAAKA,EAAU,IAAI,GAAK,MAExBA,EAAKA,EAAY,MAAI,IAAM,QAE3BA,EAAKA,EAAgB,UAAI,GAAK,YAE9BA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAU,IAAI,KAAO,MAE1BA,EAAKA,EAAU,IAAI,KAAO,MAE1BA,EAAKA,EAAU,IAAI,KAAO,MAE1BA,EAAKA,EAAW,KAAI,IAAM,OAE1BA,EAAKA,EAAW,KAAI,KAAO,OAE3BA,EAAKA,EAAY,MAAI,KAAO,QApIhC,CAqIGA,SAASA,YAaZ,SAAWx7B,GAEPA,EAAcA,EAAsB,OAAI,GAAK,SAE7CA,EAAcA,EAA4B,aAAI,GAAK,eAEnDA,EAAcA,EAA0B,WAAI,GAAK,aAEjDA,EAAcA,EAAwB,SAAI,IAAM,WAEhDA,EAAcA,EAAwB,SAAI,IAAM,WAEhDA,EAAcA,EAAqB,MAAI,IAAM,QAE7CA,EAAcA,EAAqB,MAAI,KAAO,QAE9CA,EAAcA,EAAqC,sBAAI,KAAO,wBAE9DA,EAAcA,EAA4B,aAAI,KAAO,eAErDA,EAAcA,EAA8B,eAAI,MAAQ,iBAExDA,EAAcA,EAAkC,mBAAI,MAAQ,qBAtBhE,CAuBGA,kBAAkBA,qBAOrB,SAAWO,GAEPA,EAAeA,EAAqB,KAAI,GAAK,OAE7CA,EAAeA,EAAmC,mBAAI,GAAK,qBAE3DA,EAAeA,EAAsC,sBAAI,GAAK,wBANlE,CAOGA,mBAAmBA,sBAEtB,SAAWk7B,GACPA,EAAWA,EAAiB,KAAI,GAAK,OACrCA,EAAWA,EAAwB,YAAI,GAAK,cAC5CA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAA4B,gBAAI,GAAK,kBAEhDA,EAAWA,EAA4B,gBAAI,IAAM,kBAEjDA,EAAWA,EAA4B,gBAAI,IAAM,kBARrD,CASGA,eAAeA,kBAGlB,SAAWjsC,GACPA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAkB,IAAI,GAAK,MACxCA,EAAaA,EAAkB,IAAI,GAAK,MACxCA,EAAaA,EAAoB,MAAI,GAAK,QAC1CA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAmB,KAAI,GAAK,OAN7C,CAOGA,iBAAiBA,oBAMpB,SAAWksC,GACPA,EAAaA,EAA+B,iBAAI,GAAK,mBACrDA,EAAaA,EAA2B,aAAI,GAAK,eACjDA,EAAaA,EAA6B,eAAI,GAAK,iBACnDA,EAAaA,EAA6B,eAAI,GAAK,iBACnDA,EAAaA,EAA8B,gBAAI,GAAK,kBACpDA,EAAaA,EAAyB,WAAI,GAAK,aAC/CA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAgC,kBAAI,GAAK,oBACtDA,EAAaA,EAAgC,kBAAI,GAAK,oBACtDA,EAAaA,EAA+B,iBAAI,GAAK,mBACrDA,EAAaA,EAAgC,kBAAI,IAAM,oBACvDA,EAAaA,EAAoB,MAAI,IAAM,QAC3CA,EAAaA,EAA0B,YAAI,IAAM,cACjDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAAwB,UAAI,IAAM,YAC/CA,EAAaA,EAAwB,UAAI,IAAM,YAC/CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAqC,uBAAI,IAAM,yBAC5DA,EAAaA,EAA4B,cAAI,IAAM,gBACnDA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAwB,UAAI,IAAM,YAC/CA,EAAaA,EAAgC,kBAAI,IAAM,oBAxB3D,CAyBGA,iBAAiBA,oBAMpB,SAAWp+B,GAEPA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAA2B,UAAI,GAAK,YAEpDA,EAAgBA,EAA4B,WAAI,IAAM,aAEtDA,EAAgBA,EAAyB,QAAI,IAAM,UAZvD,CAaGA,oBAAoBA,uBAKvB,IAAWq+B,GAEX,mBAKWC,GAEX,kBAKWC,GAEX,8BClzBIpvB,GAAgC,WAChC,SAASA,IAoBLpkB,KAAK+gC,OAAU/pC,EAAG,GAAKC,EAAG,IAI1B+I,KAAKyzC,QAAS,EAKdzzC,KAAK0zC,UAAW,EAKhB1zC,KAAK2zC,kBAAqB38C,EAAG,EAAGC,EAAG,GAKnC+I,KAAK4zC,mBAAsB58C,EAAG,EAAGC,EAAG,GAKpC+I,KAAKm8B,eAAgB,EAIrBn8B,KAAK49B,SAAU,EAIf59B,KAAKjE,QAAU,EAIfiE,KAAKhE,QAAU,EAIfgE,KAAK3H,aAAe,EAIpB2H,KAAKqa,eAAYpgB,EAIjB+F,KAAK6e,cAAW5kB,EAIhB+F,KAAKkZ,cAAWjf,EAIhB+F,KAAK8e,eAAY7kB,EAIjB+F,KAAKzH,WAAQ0B,EAIb+F,KAAK1H,YAAS2B,EAId+F,KAAKkN,YAAc,EAInBlN,KAAK2C,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GASnD9C,KAAK4Z,oBAAsB,OAS3B5Z,KAAK2Z,kBAAoB,OAMzB3Z,KAAK6zC,KAAO,OAMZ7zC,KAAK00B,aAAe,QAMpB10B,KAAK6F,UAAYmtC,YAAUc,KAAOd,YAAUe,OAI5C/zC,KAAKE,OAAU6Y,KAAM,QAASC,YAAa,QAASsjB,QAAS,EAAGrjB,YAAa,GAI7EjZ,KAAKwf,YAAc,IAAIF,GAIvBtf,KAAKuM,WAAa,IAAI+S,GAItBtf,KAAKmN,gBAAkB,EAEvBnN,KAAKg0C,kBAAmB,EAIxBh0C,KAAKi0C,aAAc,EAInBj0C,KAAKwB,OAAS,IAAI8K,GAAK,EAAG,EAAG,EAAG,GAIhCtM,KAAKinC,OAAS,KAIdjnC,KAAKknC,YAAc,GAInBlnC,KAAKk0C,YAAa,EAIlBl0C,KAAKm0C,eAAgB,EAErBn0C,KAAKqkB,wBAAyB,EAK9BrkB,KAAKo0C,YAAep9C,EAAG,EAAGC,EAAG,GAK7B+I,KAAKq0C,eAAiBtB,gBAAc79B,KAEpClV,KAAKK,cAAWpG,EAChB+F,KAAKs0C,cAAWr6C,EAEhB+F,KAAKu0C,OAAQ,EACbv0C,KAAKw0C,oBAAiBv6C,EA+G1B,OApGAmqB,EAAegsB,UAAUqE,6BAA+B,SAAUz9C,EAAGC,EAAG20B,GACpE5rB,KAAKs0C,SAAW1oB,EAChB5rB,KAAKK,UAAarJ,EAAGA,EAAGC,EAAGA,IAM/BmtB,EAAegsB,UAAUsE,oBAAsB,SAAUxzB,GACrD,QAAsBjnB,IAAlB+F,KAAKK,SACL,MAAsB,aAAlBL,KAAKs0C,SACEt0C,KAAKK,UAIRrJ,EAAGgJ,KAAKK,SAASrJ,EAAIkqB,EAAK3oB,MAAOtB,EAAG+I,KAAKK,SAASpJ,EAAIiqB,EAAK5oB,SAM3E4lB,OAAOozB,eAAeltB,EAAegsB,UAAW,eAC5CgC,IAAK,WACD,OAAOpyC,KAAKw0C,gBAAkBx0C,KAAKwB,QAMvCmzC,IAAK,SAAUnzC,GACXxB,KAAKw0C,eAAiBhzC,GAE1B6wC,YAAY,EACZC,cAAc,IAMlBluB,EAAegsB,UAAU/wB,QAAU,SAAUu1B,GACzC,IAAIr8C,OAAuB0B,IAAf+F,KAAKzH,MAAsByH,KAAKzH,OAASq8C,EAAcr8C,OAAS,GAAKyH,KAAK2C,OAAOC,KAAO5C,KAAK2C,OAAOE,MAC5GvK,OAAyB2B,IAAhB+F,KAAK1H,OAAuB0H,KAAK1H,QAAUs8C,EAAct8C,QAAU,GAAK0H,KAAK2C,OAAOI,IAAM/C,KAAK2C,OAAOG,OAKnH,OAJA9C,KAAKwf,YAAc,IAAIF,GAAK/mB,EAAOD,GAC/B0H,KAAKqkB,yBACLrkB,KAAKwf,YAAcxf,KAAK60C,oBAAoB70C,KAAKwf,YAAao1B,IAE3D50C,KAAKwf,aAMhB4E,EAAegsB,UAAU7wB,QAAU,SAAUC,GAGzC,OAFAxf,KAAKuM,WAAaiT,EAClBxf,KAAK80C,eACE90C,KAAKuM,YAKhB6X,EAAegsB,UAAU0E,aAAe,WACpC90C,KAAKwB,OAASuzB,GAAU/0B,OAO5BokB,EAAegsB,UAAUyE,oBAAsB,SAAUr1B,EAAao1B,GA8BlE,OA5BI50C,KAAKm0C,eAAkBn0C,KAAKzH,OAAUyH,KAAK6e,UAAa7e,KAAKkZ,WAC7DsG,EAAYjnB,MAAQ,KAEpByH,KAAKm0C,eAAkBn0C,KAAK1H,QAAW0H,KAAKqa,WAAcra,KAAK8e,YAC/DU,EAAYlnB,OAAS,UAEL2B,IAAhBulB,QAA4CvlB,IAAf+F,KAAKzH,YAClB0B,IAAhB+F,KAAK1H,WACLknB,EAAcA,GAAe,IAAIF,IACrB/mB,WAAuB0B,IAAf+F,KAAKzH,OAAuBq8C,EAAcr8C,OAAS,GACjEyH,KAAK2C,OAAOC,KAAO5C,KAAK2C,OAAOE,MAAQ7C,KAAKzH,MAClDinB,EAAYlnB,YAAyB2B,IAAhB+F,KAAK1H,QAAwBs8C,EAAct8C,QAAU,GACpE0H,KAAK2C,OAAOI,IAAM/C,KAAK2C,OAAOG,OAAS9C,KAAK1H,aAGhC2B,IAAlB+F,KAAK6e,WACLW,EAAYjnB,MAAQkE,KAAKmJ,IAAI4Z,EAAYjnB,MAAOyH,KAAK6e,gBAElC5kB,IAAnB+F,KAAKqa,YACLmF,EAAYlnB,OAASmE,KAAKmJ,IAAI4Z,EAAYlnB,OAAQ0H,KAAKqa,iBAGrCpgB,IAAlB+F,KAAKkZ,WACLsG,EAAYjnB,MAAQkE,KAAKyK,IAAIsY,EAAYjnB,MAAOyH,KAAKkZ,gBAElCjf,IAAnB+F,KAAK8e,YACLU,EAAYlnB,OAASmE,KAAKyK,IAAIsY,EAAYlnB,OAAQ0H,KAAK8e,YAEpDU,GAEJ4E,KCnTPmsB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAI5DgnC,GAAkB,SAAUx6C,GAC5B,OAAQA,EAAIsB,MACR,IAAK,SACD,OAAOm5C,GACX,IAAK,SACD,OAAOC,GACX,QACI,OAAOD,KAMfE,GAA2B,WAO3B,OANA,SAAmBtyC,EAAMC,EAAOE,EAAKD,GACjC9C,KAAK4C,KAAOA,EACZ5C,KAAK6C,MAAQA,EACb7C,KAAK+C,IAAMA,EACX/C,KAAK8C,OAASA,MAQlBqyC,GAAwB,SAAU5D,GAElC,SAAS4D,IACL,OAAkB,OAAX5D,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAU4E,EAAQ5D,GAIlBT,IACIoB,WAAS,IACViD,EAAO/E,UAAW,YAAQ,GAC7BU,IACIoB,WAAS,IACViD,EAAO/E,UAAW,aAAS,GAC9BU,IACIoB,WAAS,IACViD,EAAO/E,UAAW,WAAO,GAC5BU,IACIoB,WAAS,IACViD,EAAO/E,UAAW,cAAU,GACxB+E,GACThD,iBAoBEv9B,GAAwB,SAAU28B,GAElC,SAAS38B,IACL,OAAkB,OAAX28B,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAU37B,EAAQ28B,GAIlBT,IACIoB,WAAS,KACVt9B,EAAOw7B,UAAW,aAAS,GAC9BU,IACIoB,WAAS,IACVt9B,EAAOw7B,UAAW,gBAAY,GACjCU,IACIoB,WAAS,KACVt9B,EAAOw7B,UAAW,eAAW,GAChCU,IACIoB,WAAS,cACVt9B,EAAOw7B,UAAW,aAAS,GACvBx7B,GACTu9B,iBAyBExZ,GAAsB,SAAU4Y,GAEhC,SAAS5Y,IACL,OAAkB,OAAX4Y,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAkB/D,OApBAuwC,GAAU5X,EAAM4Y,GAQhB5Y,EAAKyX,UAAU6B,aAAe,WAC1B,MAAO,QAEXnB,IACIoB,WAAS,KACVvZ,EAAKyX,UAAW,aAAS,GAC5BU,IACIoB,WAAS,IACVvZ,EAAKyX,UAAW,cAAU,GAC7BU,IACIoB,WAAS,IACVvZ,EAAKyX,UAAW,eAAW,GACvBzX,GACTwZ,iBAKEiD,GAA0B,SAAU7D,GAEpC,SAAS6D,IACL,OAAkB,OAAX7D,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAW/D,OAbAuwC,GAAU6E,EAAU7D,GAIpBT,IACIuE,gBAAe1c,KAChByc,EAAShF,UAAW,aAAS,GAChCU,IACIoB,WAAS,SACVkD,EAAShF,UAAW,YAAQ,GAC/BU,IACIoB,WAAS,KACVkD,EAAShF,UAAW,UAAM,GACtBgF,GACTjD,iBA4BE6C,GAAgC,SAAUzD,GAE1C,SAASyD,IACL,OAAkB,OAAXzD,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAUyE,EAAgBzD,GAI1BT,IACIoB,WAAS,IACV8C,EAAe5E,UAAW,UAAM,GACnCU,IACIoB,WAAS,IACV8C,EAAe5E,UAAW,UAAM,GACnCU,IACIoB,WAAS,IACV8C,EAAe5E,UAAW,UAAM,GACnCU,IACIoB,WAAS,IACV8C,EAAe5E,UAAW,UAAM,GAC5B4E,GACTI,IAyBEH,GAAgC,SAAU1D,GAE1C,SAAS0D,IACL,OAAkB,OAAX1D,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAiB/D,OAnBAuwC,GAAU0E,EAAgB1D,GAI1BT,IACIoB,WAAS,IACV+C,EAAe7E,UAAW,UAAM,GACnCU,IACIoB,WAAS,IACV+C,EAAe7E,UAAW,UAAM,GACnCU,IACIoB,WAAS,IACV+C,EAAe7E,UAAW,UAAM,GACnCU,IACIoB,WAAS,IACV+C,EAAe7E,UAAW,UAAM,GACnCU,IACIoB,WAAS,KACV+C,EAAe7E,UAAW,SAAK,GAC3B6E,GACTG,IAKEE,GAA4B,SAAU/D,GAEtC,SAAS+D,IACL,OAAkB,OAAX/D,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAoB/D,OAtBAuwC,GAAU+E,EAAY/D,GAItBT,IACIoB,WAAS,UACVoD,EAAWlF,UAAW,YAAQ,GACjCU,IACIoB,WAAS,UACVoD,EAAWlF,UAAW,mBAAe,GACxCU,IACIoB,WAAS,KACVoD,EAAWlF,UAAW,uBAAmB,GAC5CU,IACIoB,WAAS,IACVoD,EAAWlF,UAAW,mBAAe,GACxCU,IACIoB,WAAS,IACVoD,EAAWlF,UAAW,eAAW,GACpCU,IACIyE,iBAAeR,KAChBO,EAAWlF,UAAW,gBAAY,GAC9BkF,GACTnD,iBAKE/V,GAA6B,SAAUmV,GAEvC,SAASnV,IACL,OAAkB,OAAXmV,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAK/D,OAPAuwC,GAAUnU,EAAamV,GAIvBT,IACIoB,WAAS,gBACV9V,EAAYgU,UAAW,YAAQ,GAC3BhU,GACTkZ,IAyBEE,GAA2B,SAAUjE,GAErC,SAASiE,IACL,OAAkB,OAAXjE,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAmC/D,OArCAuwC,GAAUiF,EAAWjE,GAIrBT,IACIoB,WAAS,UACVsD,EAAUpF,UAAW,aAAS,GACjCU,IACIoB,WAAS,UACVsD,EAAUpF,UAAW,kBAAc,GACtCU,IACIoB,WAAS,KACVsD,EAAUpF,UAAW,gBAAY,GACpCU,IACIoB,YAAS,IACVsD,EAAUpF,UAAW,cAAU,GAClCU,IACIoB,YAAS,IACVsD,EAAUpF,UAAW,YAAQ,GAChCU,IACIoB,WAAS,kBACVsD,EAAUpF,UAAW,kBAAc,GACtCU,IACIoB,WAAS,qBACVsD,EAAUpF,UAAW,oBAAgB,GACxCU,IACIoB,WAAS,WACVsD,EAAUpF,UAAW,iBAAa,GACrCU,IACIoB,WAAS,SACVsD,EAAUpF,UAAW,sBAAkB,GAC1CU,IACIoB,WAAS,SACVsD,EAAUpF,UAAW,oBAAgB,GACxCU,IACIoB,WAAS,gBACVsD,EAAUpF,UAAW,YAAQ,GACzBoF,GACTF,ICjXE/E,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAsBxCpO,GAA2B,SAAU+O,GAErC,SAAS/O,IACL,IAAIiT,EAAmB,OAAXlE,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAWhE,OAPAy1C,EAAMtpC,QAAU,IAAI+oC,GAAU,EAAG,EAAG,EAAG,GAEvCO,EAAMC,mBAAgBz7C,EAEtBw7C,EAAME,iBAAkB,EAExBF,EAAMG,gBAAkB,EACjBH,EA+LX,OA5MAlF,GAAU/N,EAAW+O,GAkBrB/O,EAAU4N,UAAUyF,YAAc,WAC9B,YAAsB57C,IAAlB+F,KAAKmS,UAA0BnS,KAAKmS,SAAS1b,OAAS,GAU9D+rC,EAAU4N,UAAU/wB,QAAU,SAAUu1B,GAEpC50C,KAAK01C,mBAAgBz7C,EACrB,IACIsU,EAIAunC,EALAC,OAAU97C,EAMd,GAAI+F,KAAK61C,cAAe,CAEpB,IAAK,IAAIn/C,EAAI,EAAGA,EAAIsJ,KAAKmS,SAAS1b,OAAQC,IAAK,CAET,aADlC6X,EAAQvO,KAAKmS,SAASzb,IACZkjB,qBAAsCg7B,EAAcr8C,QAC1Dq8C,EAAcr8C,MAAQgW,EAAM/M,OAAOjJ,OAEP,YAA5BgW,EAAMoL,mBAAoCi7B,EAAct8C,SACxDs8C,EAAct8C,OAASiW,EAAM/M,OAAOlJ,QAExC,IAAI09C,EAAsC,YAA9BznC,EAAMqL,qBAAiE,YAA5BrL,EAAMoL,mBACzD3Z,KAAK21C,iBAAmBK,GAAUznC,aAAiBi0B,QAAuCvoC,IAA1BsU,EAAMonC,kBACtEpnC,EAAM8Q,QAAQu1B,GAElBkB,EAAc91C,KAAKi2C,kBAAkB1nC,GACH,YAA9BA,EAAMqL,qBAAiE,YAA5BrL,EAAMoL,uBACtB1f,IAAvB+F,KAAK01C,cACL11C,KAAK01C,cAAgBI,EAGrB91C,KAAK01C,cAAcrjC,UAAUyjC,IAG5B91C,KAAKuM,YAAevM,KAAKuM,WAAWhU,OAAUyH,KAAKuM,WAAWjU,QAClEiW,EAAMylC,kBAAkD,YAA9BzlC,EAAMqL,qBAAiE,YAA5BrL,EAAMoL,yBACjD1f,IAAvB+F,KAAK01C,cACL11C,KAAK01C,cAAgBnnC,EAAM/M,OAG3BxB,KAAK01C,cAAcrjC,UAAU9D,EAAM/M,SAI/C,QAA2BvH,IAAvB+F,KAAK01C,eAAoD,IAArB11C,KAAKkN,YAAmB,CAC5D,IAAIgpC,GACAl/C,EAAGgJ,KAAK01C,cAAc1+C,EAAIgJ,KAAK01C,cAAcn9C,MAAQyH,KAAK+gC,MAAM/pC,EAChEC,EAAG+I,KAAK01C,cAAcz+C,EAAI+I,KAAK01C,cAAcp9C,OAAS0H,KAAK+gC,MAAM9pC,GAEjEk/C,EAAWznC,GAAY1O,KAAKkN,iBAAajT,OAAWA,EAAWi8C,GACnEl2C,KAAK01C,cAAc1+C,EAAIm/C,EAASn/C,EAAIgJ,KAAK01C,cAAcn9C,MAAQyH,KAAK+gC,MAAM/pC,EAC1EgJ,KAAK01C,cAAcz+C,EAAIk/C,EAASl/C,EAAI+I,KAAK01C,cAAcp9C,OAAS0H,KAAK+gC,MAAM9pC,EAE3E+I,KAAK01C,gBACLK,EAAU,IAAIz2B,GAAKtf,KAAK01C,cAAcn9C,MAAOyH,KAAK01C,cAAcp9C,SAMxE,OAHAy9C,EAAU/1C,KAAK60C,oBAAoBkB,EAASnB,GAC5C50C,KAAKo2C,gBAAgBL,GACrB/1C,KAAKwf,YAAcu2B,EACZA,GAMXvT,EAAU4N,UAAU7wB,QAAU,SAAUC,GACpC,IAAIjR,EAEAunC,EAAc91C,KAAK01C,cACvB,GAAII,EAAa,CACL91C,KAAKjE,QACLiE,KAAKhE,QAIb,GAHAgE,KAAKjE,QAAU+5C,EAAY9+C,EAAI8+C,EAAYv9C,MAAQyH,KAAK+gC,MAAM/pC,EAC9DgJ,KAAKhE,QAAU85C,EAAY7+C,EAAI6+C,EAAYx9C,OAAS0H,KAAK+gC,MAAM9pC,EAE3D+I,KAAK61C,cAEL,IAAK,IAAIn/C,EAAI,EAAGA,EAAIsJ,KAAKmS,SAAS1b,OAAQC,IAAK,CAE3C,IAAI6oB,GAAU,EACoB,aAFlChR,EAAQvO,KAAKmS,SAASzb,IAEZkjB,sBACNrL,EAAMxS,QAAUiE,KAAKjE,QACrBwS,EAAMpB,gBAAkBnN,KAAKmN,gBAAkBnN,KAAKkN,YAChDlN,KAAK6zC,MAAS7zC,KAAKq0C,eAAiBtB,gBAAcsD,iBAClD9nC,EAAMpB,gBAAiC,eAAdnN,KAAK6zC,MAAuC,aAAd7zC,KAAK6zC,MACvDtlC,EAAMpB,gBAAkBoB,EAAMpB,iBAEvCoS,GAAU,GAEkB,YAA5BhR,EAAMoL,oBACNpL,EAAMvS,QAAUgE,KAAKhE,QACrBuS,EAAMpB,gBAAkBnN,KAAKmN,gBAAkBnN,KAAKkN,YACpDqS,GAAU,IAEVA,GAAWvf,KAAK21C,iBAAoBpnC,aAAiBi0B,QAAuCvoC,IAA1BsU,EAAMonC,kBACxEpnC,EAAMgR,QAAQhR,EAAMiR,cAQpC,OAHAxf,KAAKuM,WAAaiT,EAClBxf,KAAK80C,eACL90C,KAAK41C,gBAAkB51C,KAAKkN,YACrBsS,GAOXgjB,EAAU4N,UAAUgG,gBAAkB,SAAUl1B,GAC5C,GAAIlhB,KAAK61C,cACL,IAAK,IAAIh5C,EAAK,EAAGohB,EAAKje,KAAKmS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAI0R,EAAQ0P,EAAGphB,GACmB,YAA9B0R,EAAMqL,0BAAiE3f,IAA5BsU,EAAMiR,YAAYjnB,QAC7DgW,EAAMiR,YAAYjnB,MAAQ2oB,EAAK3oB,MAAQgW,EAAM5L,OAAOC,KAAO2L,EAAM5L,OAAOE,OAE5C,YAA5B0L,EAAMoL,wBAAgE1f,IAA7BsU,EAAMiR,YAAYlnB,SAC3DiW,EAAMiR,YAAYlnB,OAAS4oB,EAAK5oB,OAASiW,EAAM5L,OAAOI,IAAMwL,EAAM5L,OAAOG,QAEzEyL,aAAiBi0B,GACjBj0B,EAAM6nC,gBAAgB7nC,EAAMiR,eAS5CgjB,EAAU4N,UAAUkG,aAAe,SAAUp1B,GACzCA,EAAK3oB,OAASyH,KAAKmM,QAAQvJ,KAAO5C,KAAKmM,QAAQtJ,MAC/Cqe,EAAK5oB,QAAU0H,KAAKmM,QAAQpJ,IAAM/C,KAAKmM,QAAQrJ,QAOnD0/B,EAAU4N,UAAUmG,0BAA4B,SAAUhoC,EAAOtN,GAC7D,IACIgP,EAASk9B,IADGn2C,EAAGiK,EAAOjK,EAAIuX,EAAMiR,YAAYjnB,MAAQ,EAAGtB,EAAGgK,EAAOhK,EAAIsX,EAAMiR,YAAYlnB,OAAS,GACpEiW,GAEhC0B,EAASvB,GAAYH,EAAMrB,YAAajM,EAAOjK,EAAGiK,EAAOhK,EAAGgZ,GAE5DA,EAASvB,GAAY1O,KAAKkN,YAAclN,KAAKmN,gBAAiBnN,KAAKjE,QAASiE,KAAKhE,QAASiU,GAC1F1B,EAAMxS,QAAUkU,EAAOjZ,EACvBuX,EAAMvS,QAAUiU,EAAOhZ,GAG3BurC,EAAU4N,UAAU6F,kBAAoB,SAAU1nC,GAC9C,IACIioC,EACJA,EAAYjoC,EAAMiR,YAAY8wB,QACd/hC,EAAMrB,YAAclN,KAAKkN,YAAzC,IACIrJ,EAAgB0K,EAAMxS,QAAtB8H,EAAkC0K,EAAMvS,QACxC4G,EAAOiB,EAAa2yC,EAAUj+C,MAAQgW,EAAMwyB,MAAM/pC,EAClD+L,EAAMc,EAAa2yC,EAAUl+C,OAASiW,EAAMwyB,MAAM9pC,EAClD4L,EAAQD,EAAO4zC,EAAUj+C,MACzBuK,EAASC,EAAMyzC,EAAUl+C,OACzBmU,GAAYzV,EAAG4L,EAAM3L,EAAG8L,GACxB2J,GAAa1V,EAAG6L,EAAO5L,EAAG8L,GAC1BsF,GAAerR,EAAG4L,EAAM3L,EAAG6L,GAC3B4F,GAAgB1R,EAAG6L,EAAO5L,EAAG6L,GAWjC,OAVA2J,EAAUiC,GAAYH,EAAMrB,YAAaqB,EAAMxS,QAASwS,EAAMvS,QAASyQ,GACvEC,EAAWgC,GAAYH,EAAMrB,YAAaqB,EAAMxS,QAASwS,EAAMvS,QAAS0Q,GACxErE,EAAaqG,GAAYH,EAAMrB,YAAaqB,EAAMxS,QAASwS,EAAMvS,QAASqM,GAC1EK,EAAcgG,GAAYH,EAAMrB,YAAaqB,EAAMxS,QAASwS,EAAMvS,QAAS0M,GAClD,IAArB1I,KAAKkN,cACLT,EAAUiC,IAAa1O,KAAKkN,iBAAajT,OAAWA,EAAWwS,GAC/DC,EAAWgC,IAAa1O,KAAKkN,iBAAajT,OAAWA,EAAWyS,GAChErE,EAAaqG,IAAa1O,KAAKkN,iBAAajT,OAAWA,EAAWoO,GAClEK,EAAcgG,IAAa1O,KAAKkN,iBAAajT,OAAWA,EAAWyO,IAEhE4D,GAAKmmB,UAAUhmB,EAASC,EAAUrE,EAAYK,KAElD85B,GACTpe,ICpOEmsB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAqBxC9hC,GAA6B,SAAUyiC,GAKvC,SAASziC,IACL,IAAI2mC,EAAQlE,EAAOkF,KAAKz2C,OAASA,KAkBjC,OAdAy1C,EAAM92C,SAAW,GAIjB82C,EAAMj8C,eAAgB,EAItBi8C,EAAMiB,aAAe,GAErBjB,EAAMnW,gBAAiB,EAGvBmW,EAAMkB,eAAiB,IAAIrqC,GACpBmpC,EAyGX,OAhIAlF,GAAUzhC,EAAayiC,GAyBvBrzB,OAAOozB,eAAexiC,EAAYshC,UAAW,QAIzCgC,IAAK,WACD,OAAOpyC,KAAKrB,UAKhBg2C,IAAK,SAAUhvC,GACP3F,KAAKrB,WAAagH,IAClB3F,KAAKrB,SAAWgH,EAChB3F,KAAKyzC,QAAS,IAGtBpB,YAAY,EACZC,cAAc,IAGlBxjC,EAAYshC,UAAUvjC,UAAY,WAC9B,IAAI4oC,EAAQz1C,KAQZ,OAPKA,KAAK42C,aACN52C,KAAK42C,WAAaC,WAAW,WACzBpB,EAAM98C,OAAS,KACf88C,EAAMmB,WAAa,MACpB,MAEP52C,KAAKrH,OAASqH,KAAKrH,QZhE3B,SAAkCiH,GAC9B,IACIk3C,EACAC,EAFA/vC,KAGA09B,EAAiB,iBACrBC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,UAC1C,IACIqV,EAAW5S,GADLO,OAAOD,GAAgBvyB,SAAS,IACT,GACjC6kC,EAASlM,eAAe,KAAM,IAAKlrC,EAAQxJ,MAC3C,IACIuI,EAAW6oC,GAAW5nC,EADTA,EAAQ+2C,gBAEzBK,EAASlM,eAAe,KAAM,IAAKnsC,GACnC,IAAIs4C,EAAaD,EAASE,iBAC1B,IAAKH,EAAe,EAAGA,GAAgBE,EAAYF,GAAgB,GAC/DD,EAASE,EAASG,iBAAiBJ,GACnC/vC,EAAIlQ,MAAOE,EAAG8/C,EAAO9/C,EAAGC,EAAG6/C,EAAO7/C,IAGtC,OADA0tC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,SACnC36B,EY8C0BowC,CAAkBp3C,MZ5BvD,SAAgCJ,EAASjH,GAErC,IAAK,IADD0+C,KACKx6C,EAAK,EAAGC,EAAWnE,EAAQkE,EAAKC,EAASrG,OAAQoG,IAAM,CAC5D,IAAIlB,EAAQmB,EAASD,GACjB+0C,GACA56C,EAAG4I,EAAQ7D,QAAU6D,EAAQ2M,WAAWhU,MAAQqH,EAAQmhC,MAAM/pC,EAAI2E,EAAM3E,EACxEC,EAAG2I,EAAQ5D,QAAU4D,EAAQ2M,WAAWjU,OAASsH,EAAQmhC,MAAM9pC,EAAI0E,EAAM1E,GAEzEyE,OAAS,EACTlE,EAAQoI,EAAQsN,YAActN,EAAQuN,gBACtC3V,GAEAuF,EADArB,EAASL,IACY7D,EAAOoI,EAAQ7D,QAAS6D,EAAQ5D,SAErDN,IACAk2C,EAAMn2C,EAAuBC,EAAQk2C,IAEzCyF,EAAcvgD,KAAK86C,GAEvB,OAAOyF,EYUIC,CAAgBt3C,KAAMA,KAAKrH,SAMtCmW,EAAYshC,UAAU/wB,QAAU,SAAUu1B,GAqBtC,OAnBI50C,KAAKk0C,iBAA6Bj6C,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,OACpD0H,KAAK22C,eAAiB,IAAIrqC,GAAKtM,KAAKjE,QAAUiE,KAAKzH,MAAQyH,KAAK+gC,MAAM/pC,EAAGgJ,KAAKhE,QAAUgE,KAAK1H,OAAS0H,KAAK+gC,MAAM9pC,EAAG+I,KAAKzH,MAAOyH,KAAK1H,UAEhI0H,KAAKyzC,SAAWzzC,KAAKxG,oBAAiCS,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,QACxE0H,KAAK22C,gBAAiD,IAA/B32C,KAAK22C,eAAer+C,UAAiB0H,KAAKs/B,iBAEtEt/B,KAAK22C,eAAiBlS,GAAYzkC,KAAK5J,KAAO4J,KAAK5J,KAAO,UAE3C6D,IAAf+F,KAAKzH,MACLyH,KAAKwf,YAAc,IAAIF,GAAKtf,KAAK22C,eAAep+C,MAAOyH,KAAK1H,QAAU0H,KAAK22C,eAAer+C,aAErE2B,IAAhB+F,KAAK1H,OACV0H,KAAKwf,YAAc,IAAIF,GAAKtf,KAAKzH,OAASyH,KAAK22C,eAAep+C,MAAOyH,KAAK22C,eAAer+C,QAGzF0H,KAAKwf,YAAc,IAAIF,GAAKtf,KAAKzH,MAAOyH,KAAK1H,QAEjD0H,KAAKwf,YAAcxf,KAAK60C,oBAAoB70C,KAAKwf,YAAao1B,GAC9D50C,KAAKs/B,gBAAiB,EACft/B,KAAKwf,aAMhB1Q,EAAYshC,UAAU7wB,QAAU,SAAUC,GAWtC,OAVIxf,KAAKyzC,QAAUzzC,KAAKuM,WAAWhU,QAAUinB,EAAYjnB,OAASyH,KAAKuM,WAAWjU,SAAWknB,EAAYlnB,UACrG0H,KAAKyzC,QAAS,EACdzzC,KAAK02C,aAAe12C,KAAKwnC,WAAWxnC,KAAK5J,KAAM4J,KAAK22C,eAAgBn3B,GAC/Dxf,KAAKk0C,aACNl0C,KAAKrH,OAAS,OAGtBqH,KAAKuM,WAAavM,KAAKwf,YACvBxf,KAAK80C,eACL90C,KAAKyzC,QAAS,EACPzzC,KAAKuM,YAQhBuC,EAAYshC,UAAU5I,WAAa,SAAU7oC,EAAU6C,EAAQ+K,GAC3D,IAAI/R,GAAU,EACVktC,EAAgB,GAChBhqC,GAAU8D,EAAOxK,EACjB2G,GAAU6D,EAAOvK,EACjBV,KAeJ,OAdIgW,EAAWhU,QAAUiJ,EAAOjJ,OAASgU,EAAWjU,SAAWkJ,EAAOlJ,SAClEoF,EAAS6O,EAAWhU,MAAQJ,OAAOqJ,EAAOjJ,MAAQiJ,EAAOjJ,MAAQ,GACjEoF,EAAS4O,EAAWjU,OAASH,OAAOqJ,EAAOlJ,OAASkJ,EAAOlJ,OAAS,GACpEkC,GAAU,GAEdjE,EAAkBJ,EAAgBwI,GAClCpI,EAAkBsE,EAAqBtE,GAEnCmxC,GADCltC,GAAWwF,KAAKyzC,SAAWzzC,KAAKxG,cACjBA,EAAcjD,EAAiBmH,EAAQC,EAAQnD,EAASgH,EAAOxK,EAAGwK,EAAOvK,EAAG,EAAG,GAG/EoD,EAAc9D,GAElCiE,GAAU,EACHktC,GAEJ54B,GACTsV,ICvJEmsB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAmBxCpS,GAAsC,SAAU+S,GAKhD,SAAS/S,EAAqBmF,EAAQN,GAClC,IAAIoS,EAAQlE,EAAOkF,KAAKz2C,OAASA,KAgBjC,OAfAy1C,EAAMr/C,KAAO,GAIbq/C,EAAM9R,OAAS,GAIf8R,EAAMpS,UAAY,GAIlBoS,EAAM94B,MAAQ,UACd84B,EAAMpS,UAAYA,EAClBoS,EAAM9R,OAASA,EACR8R,EAoDX,OAzEAlF,GAAU/R,EAAsB+S,GAuBhCrzB,OAAOozB,eAAe9S,EAAqB4R,UAAW,WAElDgC,IAAK,WACD,OAAOpyC,KAAK5J,MAKhBu+C,IAAK,SAAUhvC,GACX3F,KAAK5J,KAAOuP,EACZ3F,KAAKu3C,SAAWtY,GAAWj/B,MAAM,GACjCA,KAAKyzC,QAAS,GAElBpB,YAAY,EACZC,cAAc,IAMlB9T,EAAqB4R,UAAU/wB,QAAU,SAAUu1B,GAC/C,GAAI50C,KAAKyzC,OAAQ,CACb,IAAIpnC,EbuOhB,SAAqCkyB,GACjC,IAAImG,EAAiB,iBACrBC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,UAC1C,IAAI6V,EAAY7S,OAAOD,GAAgBvyB,SAAS,GAChDqlC,EAAUxY,YAAYT,GACtB,IAAI/8B,EAAS+8B,EAAchK,wBACvBuQ,EAAY0S,EAAUjjB,wBACtBloB,EAAO7K,EAKX,OAJA6K,EAAKrV,EAAIwK,EAAOoB,KAAOkiC,EAAUliC,KACjCyJ,EAAKpV,EAAIuK,EAAOuB,IAAM+hC,EAAU/hC,IAChCy0C,EAAUzY,YAAYR,GACtBoG,OAAOD,GAAgBxkC,MAAMyhC,WAAa,SACnCt1B,EanPYorC,CAAqBz3C,KAAKu3C,UACrCv3C,KAAK03C,YAAc,IAAIp4B,GACvBtf,KAAK03C,YAAYn/C,MAAQ8T,EAAK9T,MAC9ByH,KAAK03C,YAAYp/C,OAAS+T,EAAK/T,OAC/B,IAAItB,EAAIqV,EAAKrV,EACTC,EAAIoV,EAAKpV,EACb+I,KAAK23C,kBAAqB3gD,EAAGA,EAAGC,EAAGA,GACnC+I,KAAKyzC,QAAS,EAElB,QAAmBx5C,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,OAAsB,CACvD,IAAIs/C,Eb8OhB,SAAiCrZ,GAC7B,IAAImG,EAAiB,iBACrBC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,UAC1C,IAAI6V,EAAY7S,OAAOD,GAAgBvyB,SAAS,GAChDqlC,EAAUxY,YAAYT,GACtB,IAAIuG,EAAY0S,EAAUjjB,wBAG1B,OAFAijB,EAAUzY,YAAYR,GACtBoG,OAAOD,GAAgBxkC,MAAMyhC,WAAa,SACnCmD,EatPwB+S,CAAiB73C,KAAKu3C,UAC7Cv3C,KAAKwf,YAAc,IAAIF,GAAKs4B,EAAiBr/C,MAAOq/C,EAAiBt/C,aAGrE0H,KAAKwf,YAAc,IAAIF,GAAKtf,KAAKzH,MAAOyH,KAAK1H,QAGjD,OADA0H,KAAKwf,YAAcxf,KAAK60C,oBAAoB70C,KAAKwf,YAAao1B,GACvD50C,KAAKwf,aAMhBgf,EAAqB4R,UAAU7wB,QAAU,SAAUC,GAG/C,OAFAxf,KAAKuM,WAAa,IAAI+S,GAAKtf,KAAKwf,YAAYjnB,MAAOyH,KAAKwf,YAAYlnB,QACpE0H,KAAK80C,eACE90C,KAAKuM,YAETiyB,GACTpa,IC9FEmsB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAmBxCtsB,GAA6B,SAAUitB,GAKvC,SAASjtB,IACL,IAAImxB,EAAQlE,EAAOkF,KAAKz2C,OAASA,KAgCjC,OA5BAy1C,EAAMtP,YAAc,GAEpBsP,EAAMqC,YAAa,EAEnBrC,EAAMjxB,mBAAoB,EAE1BixB,EAAMlxB,mBAAoB,EAI1BkxB,EAAMjY,WACFhkB,MAAO,QAGXi8B,EAAMtO,QAAS,EACfsO,EAAMsC,aAINtC,EAAMv1C,OACFsZ,MAAO,QAAST,KAAM,cAAeC,YAAa,QAClDC,YAAa,EAAGsjB,WAAY,QAAShjB,SAAU,GAAImjB,WAAY,gBAC/DjjB,aAAc,mBAAoBgjB,UAAW,SAAUD,QAAQ,EAAOljB,MAAM,EAC5EqjB,eAAgB,OAAQ5d,gBAAiB,GAAIud,QAAS,EAAGe,SAAU,KACnEhB,aAAc,QAElBoZ,EAAMv1C,MAAM6Y,KAAO,cACnB08B,EAAMv1C,MAAM8Y,YAAc,cACnBy8B,EA6FX,OAlIAlF,GAAUjsB,EAAaitB,GAuCvBrzB,OAAOozB,eAAehtB,EAAY8rB,UAAW,WAIzCgC,IAAK,WACD,OAAOpyC,KAAKmmC,aAKhBwO,IAAK,SAAUhvC,GACP3F,KAAKmmC,cAAgBxgC,IACrB3F,KAAKmmC,YAAcxgC,EACnB3F,KAAKyzC,QAAS,EACdzzC,KAAKmnC,QAAS,IAGtBkL,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehtB,EAAY8rB,UAAW,cAIzCgC,IAAK,WACD,OAAOpyC,KAAK+3C,WAKhBpD,IAAK,SAAUhvC,GACX3F,KAAK+3C,UAAYpyC,GAErB0sC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAehtB,EAAY8rB,UAAW,cAIzCgC,IAAK,WACD,OAAOpyC,KAAKg4C,gBAKhBrD,IAAK,SAAUhvC,GACX3F,KAAKg4C,eAAiBryC,GAE1B0sC,YAAY,EACZC,cAAc,IAGlBhuB,EAAY8rB,UAAU3rB,mBAAqB,WACvCzkB,KAAKyzC,QAAS,GAMlBnvB,EAAY8rB,UAAU/wB,QAAU,SAAUu1B,GACtC,IAAI1zB,EAeJ,OAbIA,EADAlhB,KAAKyzC,QAAUzzC,KAAK83C,WACbpR,GAAY1mC,KAAMA,KAAKE,MAAOF,KAAKC,QAASD,KAAKwkB,kBACpDowB,EAAct8C,OAAU0H,KAAKzH,OAASq8C,EAAcr8C,OAGjDyH,KAAKwf,iBAEGvlB,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,OACjC0H,KAAKwf,YAAc,IAAIF,GAAK4B,EAAK3oB,MAAO2oB,EAAK5oB,QAG7C0H,KAAKwf,YAAc,IAAIF,GAAKtf,KAAKzH,MAAOyH,KAAK1H,QAEjD0H,KAAKwf,YAAcxf,KAAK60C,oBAAoB70C,KAAKwf,YAAao1B,GACvD50C,KAAKwf,aAMhB8E,EAAY8rB,UAAU7wB,QAAU,SAAUC,GAOtC,OANIA,EAAYjnB,QAAUyH,KAAKuM,WAAWhU,OAASinB,EAAYlnB,SAAW0H,KAAKuM,WAAWjU,QAAU0H,KAAKyzC,UACrGzzC,KAAKmnC,QAAS,GAElBnnC,KAAKuM,WAAaiT,EAClBxf,KAAK80C,eACL90C,KAAKyzC,QAAS,EACPzzC,KAAKuM,YAET+X,GACTF,ICvJEmsB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAmBxC1S,GAA8B,SAAUqT,GAKxC,SAASrT,IACL,IAAIuX,EAAQlE,EAAOkF,KAAKz2C,OAASA,KAiBjC,OAbAy1C,EAAMwC,YAAc,GAIpBxC,EAAMpX,WAAa,OAInBoX,EAAMtX,WAAa,OAInBsX,EAAMyC,QAAU,UACTzC,EA+CX,OArEAlF,GAAUrS,EAAcqT,GAwBxBrzB,OAAOozB,eAAepT,EAAakS,UAAW,UAI1CgC,IAAK,WACD,OAAOpyC,KAAKi4C,aAKhBtD,IAAK,SAAUhvC,GACX3F,KAAKi4C,YAActyC,EACnB3F,KAAKyzC,QAAS,GAElBpB,YAAY,EACZC,cAAc,IAMlBpU,EAAakS,UAAU/wB,QAAU,SAAUu1B,GAavC,OAZI50C,KAAKyzC,SAA4B,YAAjBzzC,KAAKk4C,cAAwCj+C,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,UAC/E0H,KAAK03C,YfwNjB,SAA6Bn1C,EAAQm1C,GACjC,IAAIhT,EAAiB,iBACrBC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,UAC1C,IAAIgJ,EAAehG,OAAOD,GAAgBvyB,SAAS,GACnDw4B,EAAa/F,aAAa,MAAOriC,GACjC,IAAIf,EAASmpC,EAAapW,wBACtBh8B,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OAGpB,OAFAo/C,EAAc,IAAIp4B,GAAK/mB,EAAOD,GAC9BqsC,OAAOD,GAAgBxkC,MAAMyhC,WAAa,SACnC+V,EelOoBS,CAAan4C,KAAKuC,OAAQvC,KAAK03C,aAClD13C,KAAKyzC,QAAS,QAECx5C,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,QACjC0H,KAAKwf,YAAc,IAAIF,GAAKtf,KAAKzH,MAAOyH,KAAK1H,QAC7C0H,KAAK03C,YAAc13C,KAAKwf,aAGxBxf,KAAKwf,YAAcxf,KAAK03C,YAE5B13C,KAAKwf,YAAcxf,KAAK60C,oBAAoB70C,KAAKwf,YAAao1B,GACvD50C,KAAKwf,aAMhB0e,EAAakS,UAAU7wB,QAAU,SAAUC,GAGvC,OAFAxf,KAAKuM,WAAa,IAAI+S,GAAKtf,KAAKwf,YAAYjnB,MAAOyH,KAAKwf,YAAYlnB,QACpE0H,KAAK80C,eACE90C,KAAKuM,YAET2xB,GACT9Z,IC1FEmsB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAS5DqqC,GAA2B,SAAU7G,GAErC,SAAS6G,IACL,OAAkB,OAAX7G,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAU6H,EAAW7G,GAIrBT,IACIoB,WAAS,SACVkG,EAAUhI,UAAW,aAAS,GACjCU,IACIoB,WAAS,KACVkG,EAAUhI,UAAW,eAAW,GACnCU,IACIoB,WAAS,KACVkG,EAAUhI,UAAW,YAAQ,GAChCU,IACIoB,WAAS,SACVkG,EAAUhI,UAAW,sBAAkB,GACnCgI,GACTjG,iBAKEkG,GAA4B,SAAU9G,GAEtC,SAAS8G,IACL,OAAkB,OAAX9G,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAkD/D,OApDAuwC,GAAU8H,EAAY9G,GAItBT,IACIoB,WAAS,KACVmG,EAAWjI,UAAW,eAAW,GACpCU,IACIoB,gBAASj4C,IACVo+C,EAAWjI,UAAW,gBAAY,GACrCU,IACIoB,YAAS,IACVmG,EAAWjI,UAAW,kBAAc,GACvCU,IACIoB,WAASz+B,wBAAsB6kC,kBAChCD,EAAWjI,UAAW,mBAAe,GACxCU,IACIyH,eAAQt+C,EAAWm+C,KACpBC,EAAWjI,UAAW,iBAAa,GACtCU,IACIoB,WAAS,KACVmG,EAAWjI,UAAW,UAAM,GAC/BU,IACIoB,cACDmG,EAAWjI,UAAW,aAAS,GAClCU,IACIoB,cACDmG,EAAWjI,UAAW,cAAU,GACnCU,IACIoB,WAAS,IACVmG,EAAWjI,UAAW,mBAAe,GACxCU,IACIyH,WAAUt/B,YAAa,EAAGD,YAAa,cAAeD,KAAM,eAAiBy8B,KAC9E6C,EAAWjI,UAAW,aAAS,GAClCU,IACIoB,WAAS,WACVmG,EAAWjI,UAAW,2BAAuB,GAChDU,IACIoB,WAAS,WACVmG,EAAWjI,UAAW,yBAAqB,GAC9CU,IACIyH,aAAYpD,KACbkD,EAAWjI,UAAW,cAAU,GACnCU,IACIyH,WAAUx1C,SAAK9I,EAAW6I,YAAQ7I,EAAW2I,UAAM3I,EAAW4I,WAAO5I,GAAak7C,KACnFkD,EAAWjI,UAAW,iBAAa,GACtCU,IACIoB,WAAS,UACVmG,EAAWjI,UAAW,YAAQ,GACjCU,IACIoB,cACDmG,EAAWjI,UAAW,eAAW,GAC7BiI,GACTlG,iBAKE7+B,GAAiC,SAAUi+B,GAG3C,SAASj+B,EAAgB4M,EAAQ8rB,EAAUwM,EAAcC,GACrD,OAAOlH,EAAOkF,KAAKz2C,KAAMkgB,EAAQ8rB,EAAUwM,EAAcC,IAAYz4C,KAYzE,OAfAuwC,GAAUj9B,EAAiBi+B,GAS3Bj+B,EAAgB88B,UAAU6B,aAAe,WACrC,MAAO,mBAEXnB,IACIyH,WAAUvhD,EAAG,GAAKC,EAAG,IAAOsO,KAC7B+N,EAAgB88B,UAAW,cAAU,GACjC98B,GACT+kC,IAKE9kC,GAAgC,SAAUg+B,GAG1C,SAASh+B,EAAe2M,EAAQ8rB,EAAUwM,EAAcC,GACpD,OAAOlH,EAAOkF,KAAKz2C,KAAMkgB,EAAQ8rB,EAAUwM,EAAcC,IAAYz4C,KAqBzE,OAxBAuwC,GAAUh9B,EAAgBg+B,GAS1Bh+B,EAAe68B,UAAU6B,aAAe,WACpC,MAAO,kBAEXnB,IACIoB,WAAS,KACV3+B,EAAe68B,UAAW,cAAU,GACvCU,IACIyH,WAAUvhD,EAAG,EAAGC,EAAG,GAAKsO,KACzBgO,EAAe68B,UAAW,oBAAgB,GAC7CU,IACIoB,WAAS,WACV3+B,EAAe68B,UAAW,iBAAa,GAC1CU,IACIoB,YAAS,IACV3+B,EAAe68B,UAAW,oBAAgB,GACtC78B,GACT8kC,IC5JE9H,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAsBxCjvB,GAAwB,SAAU4vB,GAElC,SAAS5vB,IACL,IAAI8zB,EAAmB,OAAXlE,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAMhE,OADAy1C,EAAME,qBAAkB17C,EACjBw7C,EAoMX,OA5MAlF,GAAU5uB,EAAQ4vB,GAclB5vB,EAAOyuB,UAAU/wB,QAAU,SAAUu1B,GACjC,IAAImB,OAAU97C,EACVy7C,OAAgBz7C,EACpB,GAAI+F,KAAK61C,cAAe,CAEpB,IAAK,IAAIh5C,EAAK,EAAGohB,EAAKje,KAAKmS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAI0R,EAAQ0P,EAAGphB,GACf,GAAI0R,aAAiB+V,GAAa,CAC9B,IAAI/V,EAAMupC,WAKN,MAJAlD,EAAcr8C,MAAQq8C,EAAcr8C,OAASyH,KAAKkZ,UAAYlZ,KAAK6e,SACnEtQ,EAAM8Q,QAAQu1B,QAMXrmC,aAAiB+V,IACxB/V,EAAM8Q,QAAQu1B,GAElB,IAAI4B,EAAYjoC,EAAMiR,YAAY8wB,QACR,IAAtB/hC,EAAMrB,cACNspC,EAAY1J,GAAW0J,EAAWjoC,EAAMrB,cAE5C,IAAIrK,EAAQ2zC,EAAUj+C,MAAQgW,EAAM5L,OAAOE,MACvCC,EAAS0zC,EAAUl+C,OAASiW,EAAM5L,OAAOG,OACzCgzC,EAAc,IAAIxpC,GAAKiC,EAAM5L,OAAOC,KAAM2L,EAAM5L,OAAOI,IAAKF,EAAOC,GACvE,GAAIyL,EAAMgmC,MAAO,CAEb,QAAiBt6C,IADFsU,EAAMmmC,oBAAoB8B,GAErC,SAGDjoC,aAAiB+V,MAAkB/V,aAAiB+V,IAAe/V,EAAMgW,0BACtDtqB,IAAlBy7C,EACAA,EAAgBI,EAGhBJ,EAAcrjC,UAAUyjC,IAIpC,GAAIJ,EAAe,CACf,IAAIgD,EAAa,EACbC,EAAY,EAChBD,EAAaj8C,KAAKmJ,IAAI8vC,EAAc9yC,KAAM,GAC1C+1C,EAAYl8C,KAAKmJ,IAAI8vC,EAAc3yC,IAAK,GACxCgzC,EAAU,IAAIz2B,GAAKo2B,EAAcn9C,MAAQmgD,EAAYhD,EAAcp9C,OAASqgD,IASpF,OANA5C,EAAUxE,EAAOnB,UAAUyE,oBAAoB4B,KAAKz2C,KAAM+1C,EAASnB,GACnErD,EAAOnB,UAAUgG,gBAAgBK,KAAKz2C,KAAM+1C,GAE5CA,EAAQx9C,OAASyH,KAAKmM,QAAQvJ,KAAO5C,KAAKmM,QAAQtJ,MAClDkzC,EAAQz9C,QAAU0H,KAAKmM,QAAQpJ,IAAM/C,KAAKmM,QAAQrJ,OAClD9C,KAAKwf,YAAcu2B,EACZA,GAKXp0B,EAAOyuB,UAAU7wB,QAAU,SAAUC,EAAao5B,GAE9C,GADA54C,KAAKgN,YAAc,IAAIV,GACnBtM,KAAK61C,cAAe,CACpB,IAAI5+C,OAAI,EACJD,OAAI,EACRC,EAAI+I,KAAKhE,QAAUwjB,EAAYlnB,OAAS0H,KAAK+gC,MAAM9pC,EAAI+I,KAAKmM,QAAQpJ,IACpE/L,EAAIgJ,KAAKjE,QAAUyjB,EAAYjnB,MAAQyH,KAAK+gC,MAAM/pC,EAAIgJ,KAAKmM,QAAQvJ,KACnE,IAAK,IAAI/F,EAAK,EAAGohB,EAAKje,KAAKmS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAI0R,EAAQ0P,EAAGphB,GACf,GAA6C,IAAxC0R,EAAM1I,UAAYmtC,YAAUe,QAAe,CAC5CxlC,EAAMpB,gBAAkBnN,KAAKmN,gBAAkBnN,KAAKkN,aAClC,SAAdlN,KAAK6zC,MAAmB7zC,KAAKq0C,eAAiBtB,gBAAcsD,kBAC5D9nC,EAAMpB,gBAAiC,eAAdnN,KAAK6zC,MAAuC,aAAd7zC,KAAK6zC,MACvDtlC,EAAMpB,gBAAkBoB,EAAMpB,iBAEvC,IAAIqpC,EAAYjoC,EAAMiR,YAAY8wB,QAC9B7jC,OAAU,EACVxL,GAAWjK,EAAG,EAAGC,EAAG,GACpBk0B,EAASn0B,EACTo0B,EAASn0B,EACb,GAA2B,UAAvBsX,EAAMmmB,aAA0B,CAChC,IAAIr0B,EAAWkO,EAAMmmC,oBAAoBl1B,QACxBvlB,IAAboG,IACA8qB,GAAU9qB,EAASrJ,EACnBo0B,GAAU/qB,EAASpJ,GAS3BgK,GAAWjK,GALPyV,EADuB,WAAvB8B,EAAMmmB,aACI10B,KAAK64C,wBAAwBtqC,EAAOioC,EAAWh3B,EAAa2L,EAAQC,GAGpEprB,KAAK84C,wBAAwBvqC,EAAO4c,EAAQC,IAEpCp0B,EAAIw/C,EAAUj+C,MAAQ,EAAGtB,EAAGwV,EAAQxV,EAAIu/C,EAAUl+C,OAAS,GACjFi5C,EAAOnB,UAAUmG,0BAA0BE,KAAKz2C,KAAMuO,EAAOtN,IAE7D23C,GAA0C,YAA9BrqC,EAAMqL,qBAAiE,YAA5BrL,EAAMoL,kBAIzDpL,aAAiB+V,IAAe/V,EAAMupC,YACtCvpC,EAAMgR,QAAQhR,EAAMiR,aACpBxf,KAAKgN,YAAYqF,UAAU9D,EAAMvB,cAE1BuB,aAAiB+V,KACxB/V,EAAMgR,QAAQhR,EAAMiR,aACpBxf,KAAKgN,YAAYqF,UAAU9D,EAAMvB,cATrCuB,EAAMgR,QAAQC,IAiB1B,OAHAxf,KAAKuM,WAAaiT,EAClBxf,KAAK80C,eACL90C,KAAKgN,YAAYqF,UAAUrS,KAAKwB,QACzBge,GAUXmC,EAAOyuB,UAAUyI,wBAA0B,SAAUtqC,EAAOioC,EAAWuC,EAAY/hD,EAAGC,GAClF,OAAQsX,EAAMqL,qBACV,IAAK,OACL,IAAK,OACD5iB,GAAKuX,EAAM5L,OAAOC,KAClB,MACJ,IAAK,QACD5L,GAAK+hD,EAAWxgD,MAAQi+C,EAAUj+C,MAAQgW,EAAM5L,OAAOE,MACvD,MACJ,IAAK,UACL,IAAK,SACD7L,GAAK+hD,EAAWxgD,MAAQ,EAAIi+C,EAAUj+C,MAAQ,EAGtD,OAAQgW,EAAMoL,mBACV,IAAK,OACL,IAAK,MACD1iB,GAAKsX,EAAM5L,OAAOI,IAClB,MACJ,IAAK,SACD9L,GAAK8hD,EAAWzgD,OAASk+C,EAAUl+C,OAASiW,EAAM5L,OAAOG,OACzD,MACJ,IAAK,UACL,IAAK,SACD7L,GAAK8hD,EAAWzgD,OAAS,EAAIk+C,EAAUl+C,OAAS,EAGxD,OAAStB,EAAGA,EAAGC,EAAGA,IAQtB0qB,EAAOyuB,UAAU0I,wBAA0B,SAAUvqC,EAAOvX,EAAGC,GAG3D,OAFAD,GAAKuX,EAAM5L,OAAOC,KAAO2L,EAAM5L,OAAOE,MACtC5L,GAAKsX,EAAM5L,OAAOI,IAAMwL,EAAM5L,OAAOG,OAC7ByL,EAAMqL,qBACV,IAAK,OACL,IAAK,OACD5iB,EAAIA,EACJ,MACJ,IAAK,UACL,IAAK,SACDA,GAAKuX,EAAMiR,YAAYjnB,MAAQgW,EAAMwyB,MAAM/pC,EAC3C,MACJ,IAAK,QACDA,GAAKuX,EAAMiR,YAAYjnB,MAG/B,OAAQgW,EAAMoL,mBACV,IAAK,OACL,IAAK,MACD1iB,EAAIA,EACJ,MACJ,IAAK,UACL,IAAK,SACDA,GAAKsX,EAAMiR,YAAYlnB,OAASiW,EAAMwyB,MAAM9pC,EAC5C,MACJ,IAAK,SACDA,GAAKsX,EAAMiR,YAAYlnB,OAG/B,OAAStB,EAAGA,EAAGC,EAAGA,IAEf0qB,GACT6gB,I9B7NEnkC,IAEA26C,UAAa,4BAEbC,QAAW,sKAGXC,QAAW,iDAEXC,cAAiB,8BAEjBC,SAAY,6BAEZC,KAAQ,yPAIRC,KAAQ,oNAGRC,SAAY,2CAEZC,SAAY,2JAGZC,QAAW,yKAGXC,UAAa,iGAEbC,QAAW,mNAIXC,cAAiB,4EAEjBC,SAAY,8cAMZC,QAAW,sF+BjDXvJ,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAS5DgsC,GAAsB,SAAUxI,GAEhC,SAASwI,IACL,OAAkB,OAAXxI,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAsC/D,OAxCAuwC,GAAUwJ,EAAMxI,GAIhBT,IACIoB,WAAS,KACV6H,EAAK3J,UAAW,UAAM,GACzBU,IACIoB,WAAS,WACV6H,EAAK3J,UAAW,2BAAuB,GAC1CU,IACIoB,WAAS,WACV6H,EAAK3J,UAAW,yBAAqB,GACxCU,IACIyH,aAAYpD,KACb4E,EAAK3J,UAAW,cAAU,GAC7BU,IACIoB,WAAS,KACV6H,EAAK3J,UAAW,aAAS,GAC5BU,IACIoB,WAAS,KACV6H,EAAK3J,UAAW,cAAU,GAC7BU,IACIyH,aAAYjD,KACbyE,EAAK3J,UAAW,aAAS,GAC5BU,IACIoB,WAAS,WACV6H,EAAK3J,UAAW,aAAS,GAC5BU,IACIoB,WAASpD,iBAAekL,UACzBD,EAAK3J,UAAW,kBAAc,GACjCU,IACIoB,WAAS,KACV6H,EAAK3J,UAAW,gBAAY,GAC/BU,IACIoB,WAASj9B,kBAAgB4D,UAC1BkhC,EAAK3J,UAAW,mBAAe,GAClCU,IACIoB,cACD6H,EAAK3J,UAAW,eAAW,GACvB2J,GACT5H,iBAKEva,GAA2B,SAAU2Z,GAGrC,SAAS3Z,EAAU1X,EAAQ8rB,EAAUwM,EAAcC,GAC/C,OAAOlH,EAAOkF,KAAKz2C,KAAMkgB,EAAQ8rB,EAAUwM,EAAcC,IAAYz4C,KAYzE,OAfAuwC,GAAU3Y,EAAW2Z,GASrB3Z,EAAUwY,UAAU6B,aAAe,WAC/B,MAAO,aAEXnB,IACIyH,WAAUvhD,EAAG,GAAKC,EAAG,IAAOsO,KAC7BqyB,EAAUwY,UAAW,cAAU,GAC3BxY,GACTmiB,I9BlDEv7C,IACAy7C,EAAK,kCACLC,OAAU,gDACVC,OAAU,6BAEVv7C,IACAw7C,UAAa,oDACbD,OAAU,4BACVE,OAAU,qEACVC,UAAa,iPAIbC,cAAiB,sCACjBC,eAAkB,wCAClBC,YAAe,6CACfC,MAAS,uBACTZ,QAAW,+BACXI,OAAU,iDCnDVl7C,IAEA27C,QAAW,gEAEXC,SAAY,yFAEZC,SAAY,iEAEZC,kBAAqB,6EAErBC,WAAc,gOAGdC,SAAY,yQAIZC,WAAc,iOAGdC,eAAkB,oOAGlBC,KAAQ,8HAGRC,cAAiB,mXAIjBC,QAAW,+HAGXC,gBAAmB,6PAInBC,GAAM,6JAGNC,gBAAmB,wOAInBC,QAAW,uBAEXC,gBAAmB,qCAEnBC,MAAS,sBAETC,iBAAoB,yCAEpBC,wBAA2B,4GAG3BxD,WAAc,oFAEdyD,YAAe,gHAEfC,KAAQ,iCAERC,KAAQ,8CAERC,MAAS,0HAETC,YAAe,sWAKfC,QAAW,wPAGXC,YAAe,wQAIfC,UAAa,0FAEbC,WAAc,iH8BtFd/L,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAQ5DwuC,GAA2B,SAAUhL,GAErC,SAASgL,IACL,OAAkB,OAAXhL,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA4C/D,OA9CAuwC,GAAUgM,EAAWhL,GAIrBT,IACIoB,WAAS,SACVqK,EAAUnM,UAAW,aAAS,GACjCU,IACIoB,WAAS,UACVqK,EAAUnM,UAAW,YAAQ,GAChCU,IACIoB,WAAS,SACVqK,EAAUnM,UAAW,2BAAuB,GAC/CU,IACIoB,WAAS,SACVqK,EAAUnM,UAAW,yBAAqB,GAC7CU,IACIoB,WAAS,KACVqK,EAAUnM,UAAW,aAAS,GACjCU,IACIoB,WAAS,KACVqK,EAAUnM,UAAW,cAAU,GAClCU,IACIyH,WAAUvhD,EAAG,GAAKC,EAAG,GAAKsO,KAC3Bg3C,EAAUnM,UAAW,cAAU,GAClCU,IACIoB,WAAS,YACVqK,EAAUnM,UAAW,mBAAe,GACvCU,IACIoB,WAAS,IACVqK,EAAUnM,UAAW,mBAAe,GACvCU,IACIyH,aAAYpD,KACboH,EAAUnM,UAAW,cAAU,GAClCU,IACIoB,WAAS,KACVqK,EAAUnM,UAAW,gBAAY,GACpCU,IACIoB,WAAS,KACVqK,EAAUnM,UAAW,eAAW,GACnCU,IACIoB,WAAS,IACVqK,EAAUnM,UAAW,oBAAgB,GACxCU,IACIyH,WAAU31C,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAAKqyC,KACnDoH,EAAUnM,UAAW,eAAW,GAC5BmM,GACTpK,iB7BzEE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAQ5DyuC,GAAgC,SAAUjL,GAE1C,SAASiL,IACL,OAAkB,OAAXjL,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAuB/D,OAzBAuwC,GAAUiM,EAAgBjL,GAI1BT,IACIoB,WAAS,KACVsK,EAAepM,UAAW,eAAW,GACxCU,IACIoB,WAAS,YACVsK,EAAepM,UAAW,gBAAY,GACzCU,IACIoB,WAAS,UACVsK,EAAepM,UAAW,oBAAgB,GAC7CU,IACIoB,YAAS,IACVsK,EAAepM,UAAW,sBAAkB,GAC/CU,IACIoB,WAAS,SACVsK,EAAepM,UAAW,aAAS,GACtCU,IACIoB,WAAS,SACVsK,EAAepM,UAAW,cAAU,GACvCU,IACIoB,cACDsK,EAAepM,UAAW,iBAAa,GACnCoM,GACTrK,iB8BpDE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAU5D0uC,GAA0B,SAAUlL,GAEpC,SAASkL,IACL,OAAkB,OAAXlL,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAsC/D,OAxCAuwC,GAAUkM,EAAUlL,GAIpBT,IACIoB,WAAS,KACVuK,EAASrM,UAAW,UAAM,GAC7BU,IACIoB,YAAU,IACXuK,EAASrM,UAAW,cAAU,GACjCU,IACIyH,aAAYpD,KACbsH,EAASrM,UAAW,cAAU,GACjCU,IACIoB,YAAS,IACVuK,EAASrM,UAAW,eAAW,GAClCU,IACIuE,gBAAezd,KAChB6kB,EAASrM,UAAW,aAAS,GAChCU,IACIoB,YAAS,IACVuK,EAASrM,UAAW,kBAAc,GACrCU,IACIyH,aAAYiE,KACbC,EAASrM,UAAW,eAAW,GAClCU,IACIyH,aAAYgE,KACbE,EAASrM,UAAW,kBAAc,GACrCU,IACIyH,aAAYgE,KACbE,EAASrM,UAAW,oBAAgB,GACvCU,IACIoB,YAAS,IACVuK,EAASrM,UAAW,yBAAqB,GAC5CU,IACIoB,cACDuK,EAASrM,UAAW,eAAW,GAClCU,IACIoB,WAAS,SACVuK,EAASrM,UAAW,YAAQ,GACxBqM,GACTtK,iBCrEE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAkBxClS,GAAoC,SAAU6S,GAK9C,SAAS7S,EAAmBiF,EAAQN,EAAWxB,GAC3C,IAAI4T,EAAQlE,EAAOkF,KAAKz2C,OAASA,KAkBjC,OAjBAy1C,EAAMr/C,KAAO,GAIbq/C,EAAM9R,OAAS,GAKf8R,EAAM5T,aAAe,GAIrB4T,EAAMpS,UAAY,GAClBoS,EAAMpS,UAAYA,EAClBoS,EAAM9R,OAASA,EACf8R,EAAM5T,aAAeA,EACd4T,EAoBX,OA3CAlF,GAAU7R,EAAoB6S,GAyB9BrzB,OAAOozB,eAAe5S,EAAmB0R,UAAW,WAIhDgC,IAAK,WACD,OAAOpyC,KAAK5J,MAKhBu+C,IAAK,SAAUhvC,GACX3F,KAAK5J,KAAOuP,EACZ3F,KAAKu3C,SAAWtY,GAAWj/B,MAAM,GACjCA,KAAKyzC,QAAS,GAElBpB,YAAY,EACZC,cAAc,IAEX5T,GACTta,I7B/DEmsB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAuB5D2uC,GAAmB,SAAUniD,GAC7B,OAAQA,EAAIsB,MACR,IAAK,OACD,OAAO8gD,GACX,IAAK,cACD,OAAOC,GACX,IAAK,gBACD,OAAOC,GACX,QACI,OAAOC,KAGfC,GAAiB,SAAUxiD,GAC3B,OAAQA,EAAIsB,MACR,IAAK,WACD,OAAOyR,GACX,IAAK,SACD,OAAOD,GACX,IAAK,aACD,OAAO1G,GACX,QACI,OAAO2G,KAMf0vC,GAA2B,SAAUzL,GAErC,SAASyL,IACL,OAAkB,OAAXzL,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAoB/D,OAtBAuwC,GAAUyM,EAAWzL,GAIrBT,IACIoB,WAAS,KACV8K,EAAU5M,UAAW,aAAS,GACjCU,IACIoB,WAAS,KACV8K,EAAU5M,UAAW,cAAU,GAClCU,IACIoB,WAAS,UACV8K,EAAU5M,UAAW,aAAS,GACjCU,IACIyH,WAAUx/B,KAAM,QAASC,YAAa,QAASC,YAAa,GAAKq8B,KAClE0H,EAAU5M,UAAW,aAAS,GACjCU,IACIyH,WAAUvhD,EAAG,EAAGC,EAAG,IAAOsO,KAC3By3C,EAAU5M,UAAW,aAAS,GACjCU,IACIoB,WAAS,KACV8K,EAAU5M,UAAW,gBAAY,GAC7B4M,GACT7K,iBAKE8K,GAAwB,SAAU1L,GAElC,SAAS0L,IACL,OAAkB,OAAX1L,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAQ/D,OAVAuwC,GAAU0M,EAAQ1L,GAIlBT,IACIoB,WAAS,IACV+K,EAAO7M,UAAW,aAAS,GAC9BU,IACIoB,WAAS,IACV+K,EAAO7M,UAAW,gBAAY,GAC1B6M,GACT9K,iBAKE2K,GAAgC,SAAUvL,GAE1C,SAASuL,IACL,OAAkB,OAAXvL,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAK/D,OAPAuwC,GAAUuM,EAAgBvL,GAI1BT,IACIoB,WAAS,SACV4K,EAAe1M,UAAW,YAAQ,GAC9B0M,GACT3K,iBAKEyK,GAA8B,SAAUrL,GAExC,SAASqL,IACL,OAAkB,OAAXrL,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAQ/D,OAVAuwC,GAAUqM,EAAcrL,GAIxBT,IACIoB,WAAS,WACV0K,EAAaxM,UAAW,YAAQ,GACnCU,IACIoB,WAAS,KACV0K,EAAaxM,UAAW,2BAAuB,GAC3CwM,GACTE,IAKEH,GAA0B,SAAUpL,GAEpC,SAASoL,IACL,OAAkB,OAAXpL,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAUoM,EAAUpL,GAIpBT,IACIoB,WAAS,aACVyK,EAASvM,UAAW,YAAQ,GAC/BU,IACIoB,WAAS,WACVyK,EAASvM,UAAW,gBAAY,GACnCU,IACIoB,WAAS,YACVyK,EAASvM,UAAW,eAAW,GAClCU,IACIoB,WAAS,YACVyK,EAASvM,UAAW,mBAAe,GAC/BuM,GACTG,IAKEI,GAAkC,SAAU3L,GAG5C,SAAS2L,EAAiBh9B,EAAQ8rB,EAAUwM,EAAcC,GACtD,IAAIhD,EAAQlE,EAAOkF,KAAKz2C,KAAMkgB,EAAQ8rB,EAAUwM,EAAcC,IAAYz4C,KAE1E,OADAy1C,EAAM98C,UACC88C,EAKX,OAVAlF,GAAU2M,EAAkB3L,GAO5BT,IACIoB,WAAS,aACVgL,EAAiB9M,UAAW,YAAQ,GAChC8M,GACT/K,iBAKE7kC,GAAiC,SAAUikC,GAE3C,SAASjkC,IACL,OAAkB,OAAXikC,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAY/D,OAdAuwC,GAAUjjC,EAAiBikC,GAQ3BjkC,EAAgB8iC,UAAU6B,aAAe,WACrC,MAAO,mBAEXnB,IACIyH,WAAUvhD,EAAG,EAAGC,EAAG,GAAKsO,KACzB+H,EAAgB8iC,UAAW,aAAS,GAChC9iC,GACT4vC,IAKE7vC,GAA+B,SAAUkkC,GAEzC,SAASlkC,IACL,OAAkB,OAAXkkC,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAqB/D,OAvBAuwC,GAAUljC,EAAekkC,GAQzBlkC,EAAc+iC,UAAU6B,aAAe,WACnC,MAAO,iBAEXnB,IACIyH,WAAUvhD,EAAG,EAAGC,EAAG,GAAKsO,KACzB8H,EAAc+iC,UAAW,cAAU,GACtCU,IACIyH,WAAUvhD,EAAG,EAAGC,EAAG,GAAKsO,KACzB8H,EAAc+iC,UAAW,cAAU,GACtCU,IACIyH,WAAU/gD,MAAO,EAAGkO,SAAU,GAAKu3C,KACpC5vC,EAAc+iC,UAAW,eAAW,GACvCU,IACIyH,WAAU/gD,MAAO,EAAGkO,SAAU,GAAKu3C,KACpC5vC,EAAc+iC,UAAW,eAAW,GAChC/iC,GACTC,IAKE3G,GAAmC,SAAU4qC,GAE7C,SAAS5qC,IACL,OAAkB,OAAX4qC,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAe/D,OAjBAuwC,GAAU5pC,EAAmB4qC,GAQ7B5qC,EAAkBypC,UAAU6B,aAAe,WACvC,MAAO,qBAEXnB,IACIoB,WAAS,OACVvrC,EAAkBypC,UAAW,cAAU,GAC1CU,IACIoB,WAAS,OACVvrC,EAAkBypC,UAAW,iBAAa,GACtCzpC,GACTu2C,IA2HEC,GAAmC,SAAU5L,GAE7C,SAAS4L,IACL,OAAkB,OAAX5L,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAW/D,OAbAuwC,GAAU4M,EAAmB5L,GAI7BT,IACIoB,YAAS,IACViL,EAAkB/M,UAAW,gBAAY,GAC5CU,IACIoB,gBAASj4C,IACVkjD,EAAkB/M,UAAW,mBAAe,GAC/CU,IACIoB,gBAASj4C,IACVkjD,EAAkB/M,UAAW,mBAAe,GACxC+M,GACThL,iBAKEiL,GAAwC,SAAU7L,GAElD,SAAS6L,IACL,OAAkB,OAAX7L,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAW/D,OAbAuwC,GAAU6M,EAAwB7L,GAIlCT,IACIoB,WAAS,KACVkL,EAAuBhN,UAAW,YAAQ,GAC7CU,IACIyH,aAAY4E,KACbC,EAAuBhN,UAAW,cAAU,GAC/CU,IACIyH,aAAY4E,KACbC,EAAuBhN,UAAW,cAAU,GACxCgN,GACTjL,iBAKE0K,GAA8B,SAAUtL,GAExC,SAASsL,IACL,OAAkB,OAAXtL,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAUsM,EAActL,GAIxBT,IACIoB,WAAS,kBACV2K,EAAazM,UAAW,YAAQ,GACnCU,IACIoB,WAAS,gBACV2K,EAAazM,UAAW,oBAAgB,GAC3CU,IACIoB,WAAS,gBACV2K,EAAazM,UAAW,uBAAmB,GAC9CU,IACIyH,aAAY6E,KACbP,EAAazM,UAAW,oBAAgB,GACpCyM,GACTC,IAKEnpC,GAA2B,SAAU49B,GAGrC,SAAS59B,EAAUuM,EAAQ8rB,EAAUwM,EAAcC,GAC/C,IAAIhD,EAAQlE,EAAOkF,KAAKz2C,KAAMkgB,EAAQ8rB,EAAUwM,EAAcC,IAAYz4C,KAU1E,OARAy1C,EAAM55B,SAAW,GAEjB45B,EAAM4H,WAEN5H,EAAM6H,OAAS,OACX7H,EAAMr3C,OAA8B,gBAArBq3C,EAAMr3C,MAAMvC,MAC3Bw1B,GAAuBmnB,EAAc/C,GAElCA,EAkzBX,OA/zBAlF,GAAU58B,EAAW49B,GAiBrB59B,EAAUy8B,UAAUvN,KAAO,SAAU3jC,GAC5Bc,KAAKH,KACNG,KAAKH,GAAKua,MAEd,IAAImjC,EACA3kC,EAAY,IAAI+I,GAChBrnB,EAAU,IAAIwU,GAClBxU,EAAQuF,GAAKG,KAAKH,GAAK,QACvB,IAAIwgC,EAAe,IAAIvxB,GACnBwD,EAAkB,IAAIxD,GAC1BxU,EAAU0F,KAAKw9C,kBAAkBx9C,KAAM1F,GACvC,IAAIkH,EACA7I,KAQJ,OAPAA,EAASqH,KAAKy9C,mBAAmBz9C,KAAKnE,MACtClD,EAASqH,KAAKygC,eAAezgC,KAAMrH,GACnC6I,EAAS8K,GAAKmmB,SAAS95B,GACvBigB,EAAUrgB,MAAQiJ,EAAOjJ,MACzBqgB,EAAUtgB,OAASkJ,EAAOlJ,OAC1BsgB,EAAU7c,QAAUyF,EAAOxK,EAAI4hB,EAAUmoB,MAAM/pC,EAAIwK,EAAOjJ,MAC1DqgB,EAAU5c,QAAUwF,EAAOvK,EAAI2hB,EAAUmoB,MAAM9pC,EAAIuK,EAAOlJ,OAClD0H,KAAK5B,MAAMvC,MACf,IAAK,OACD,OAAQmE,KAAK5B,MAAMkzB,MACf,IAAK,WACDisB,EAAcv9C,KAAK09C,sBACnB,MACJ,IAAK,eACDH,EAAc,IAAIzuC,IACN8uB,SAAU,EACtB59B,KAAK29C,yBACL,MACJ,IAAK,UACDJ,EAAcv9C,KAAK49C,qBACnBtjD,EAAU0F,KAAKw9C,kBAAkBx9C,KAAM1F,GACvC0F,KAAK69C,oBAAoB79C,KAAMu9C,GAGvC,MACJ,IAAK,cACD,OAAQv9C,KAAK5B,MAAMkzB,MACf,IAAK,SACDtxB,KAAK89C,mBACL,MACJ,IAAK,YACD99C,KAAK+9C,oBAAoBzjD,GAGjC,MACJ,IAAK,gBACD0F,KAAKg+C,uBAGb,IAAIC,EAAcj+C,KAAKqyB,mBACvB,GAAkB,WAAdryB,KAAKnE,KAAmB,CACxB,IAAI2kC,EAAexgC,KAAK7G,SAAS,GAC7ByR,EAAc5K,KAAK7G,SAAS6G,KAAK7G,SAAS1C,OAAS,GACvDwnD,GAAgB14C,GAAMC,aAAaoF,EAAYpS,QAA+BoS,EAAY2nB,aAAjC3nB,EAAYpS,OAChE+M,GAAMC,aAAag7B,EAAa/vB,QAAgC+vB,EAAalO,aAAnCkO,EAAa/vB,QAEhE,IACIopB,EAAiB36B,EAAqB,eACxBc,KAAKgB,eAAgBhB,KAAKgB,cAAcd,MAAM+Y,YAQhE,GAPAonB,EAAergC,KAAKk+C,oBAAoBvlD,EAAO,GAAIslD,EAAY,GAAIj+C,KAAKoS,iBAAiB,EAAMynB,GAC/FvnB,EAAkBtS,KAAKk+C,oBAAoBvlD,EAAOA,EAAOlC,OAAS,GAAIwnD,EAAYA,EAAYxnD,OAAS,GAAIuJ,KAAKsS,iBAAiB,EAAOunB,GACxIwG,EAAaxgC,GAAKG,KAAKH,GAAK,UAC5ByS,EAAgBzS,GAAKG,KAAKH,GAAK,UAC/BvF,EAAQ4F,MAAQF,KAAKE,MAErB5F,EAAQ4F,MAAY,KAAI,mBACDjG,IAAnB4/B,EAA8B,CAE9B,IAAIskB,EAAiBtkB,EAAe75B,KAAMd,GAC1C5E,EAAQ4sC,YAAciX,GAAkCn+C,KAAKH,GAEjE+Y,EAAU1Y,MAAM8Y,YAAc,cAC9BJ,EAAU1Y,MAAM6Y,KAAO,cACvBH,EAAU1Y,MAAM+Y,YAAc,EAC9BL,EAAUzG,UAAY7X,EAAS+lC,EAAc/tB,GAC7CsG,EAAU/Y,GAAKG,KAAKH,QACA5F,IAAhBsjD,GACA3kC,EAAUzG,SAASrb,KAAKymD,GAE5B3kC,EAAU7c,QAAUzB,EAAQyB,QAC5B6c,EAAU5c,QAAU1B,EAAQ0B,QAC5B4c,EAAUrgB,MAAQ+B,EAAQ/B,MAC1BqgB,EAAUtgB,OAASgC,EAAQhC,OAC3B,IAAK,IAAI5B,EAAI,EAAGsJ,KAAKoZ,YAA2B1iB,EAAIsJ,KAAKoZ,YAAY3iB,OAAQC,IACzEkiB,EAAUzG,SAASrb,KAAKkJ,KAAKo+C,qBAAqBp+C,KAAKoZ,YAAY1iB,GAAIsJ,KAAKqyB,mBAAoB7wB,EAAQq4B,EAAgB36B,EAAQU,QAAQC,KAG5I,OADAG,KAAKwO,QAAUoK,EACRA,GAEXjF,EAAUy8B,UAAU4N,qBAAuB,WACvC,IAAI5/C,EAAQ4B,KAAK5B,MACU,gBAAvBA,EAAMigD,cACNr+C,KAAK7G,SAAS,GAAG0C,KAAO,WACxBmE,KAAKoS,gBAAgBhU,MAAQ,OAC7B4B,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKE,MAAM+Y,YAAc,GAEG,gBAAvB7a,EAAMigD,cACXr+C,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAKoS,gBAAgBhU,MAAQ,OAC7B4B,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKsS,gBAAgBpS,MAAM6Y,KAAO,QAClC/Y,KAAKE,MAAM+Y,YAAc,EACzBjZ,KAAKE,MAAM6e,gBAAkB,OAED,gBAAvB3gB,EAAMigD,cACXr+C,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAKoS,gBAAgBhU,MAAQ,UAC7B4B,KAAKsS,gBAAgBlU,MAAQ,OAC7B4B,KAAKoS,gBAAgBlS,MAAM6Y,KAAO,QAClC/Y,KAAKE,MAAM+Y,YAAc,GAEG,gBAAvB7a,EAAMigD,cACXr+C,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAKoS,gBAAgBhU,MAAQ,UAC7B4B,KAAKsS,gBAAgBlU,MAAQ,OAC7B4B,KAAKoS,gBAAgBlS,MAAM6Y,KAAO,QAClC/Y,KAAKE,MAAM+Y,YAAc,GAEG,eAAvB7a,EAAMigD,cACXr+C,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAKoS,gBAAgBhU,MAAQ,OAC7B4B,KAAKsS,gBAAgBlU,MAAQ,YAC7B4B,KAAKoS,gBAAgBlS,MAAM6Y,KAAO,QAClC/Y,KAAKE,MAAM+Y,YAAc,EACzBjZ,KAAKE,MAAM6e,gBAAkB,OAED,gBAAvB3gB,EAAMigD,eACXr+C,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAKoS,gBAAgBhU,MAAQ,OAC7B4B,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKoS,gBAAgBlS,MAAM6Y,KAAO,QAClC/Y,KAAKE,MAAM+Y,YAAc,GAEC,kBAA1B7a,EAAMkgD,kBACNt+C,KAAKoS,gBAAgBhU,MAAQ,OAC7B4B,KAAKsS,gBAAgBlU,MAAQ,QAEjC,IACImgD,EACAC,EAFAC,EAAQ,GAGRC,EAAa,GACbC,EAAa,GACblkC,EAAO,GACPrc,EAAMwgD,aAAar8C,SACnBnE,EAAMwgD,aAAar8C,OAAOs8C,YAAczgD,EAAMwgD,aAAar8C,OAAOs8C,YAClEzgD,EAAMwgD,aAAar8C,OAAOu8C,YAAc1gD,EAAMwgD,aAAar8C,OAAOu8C,aAElE1gD,EAAMwgD,aAAa57C,SACnB5E,EAAMwgD,aAAa57C,OAAO67C,YAAczgD,EAAMwgD,aAAa57C,OAAO67C,YAClEzgD,EAAMwgD,aAAa57C,OAAO87C,YAAc1gD,EAAMwgD,aAAa57C,OAAO87C,aAEtEP,EAAQngD,EAAMwgD,aAAar8C,OAC3Bi8C,EAAQpgD,EAAMwgD,aAAa57C,OAC3ByX,EAAO8jC,EAAMO,YAAcP,EAAMM,YAAc,MAAQN,EAAMO,YAAcP,EAAMM,YACjFJ,EAAQD,EAAMM,YAAcN,EAAMK,YAAc,MAAQL,EAAMM,YAAcN,EAAMK,YAClD,cAA5BzgD,EAAMwgD,aAAa/iD,OACnBuC,EAAMwgD,aAAa57C,OAAO+7C,UAAW,EACrCL,EAAajkC,GAAc,IAC3BkkC,EAAa,KAEe,cAA5BvgD,EAAMwgD,aAAa/iD,OACnBuC,EAAMwgD,aAAar8C,OAAOw8C,UAAW,EACrCJ,EAAaF,GAAgB,IAC7BC,EAAa,KAEe,cAA5BtgD,EAAMwgD,aAAa/iD,OACnB6iD,EAAajkC,GAAc,IAC3BkkC,EAAaF,GAAgB,KAED,aAA5BrgD,EAAMwgD,aAAa/iD,OACnBuC,EAAMwgD,aAAa57C,OAAO+7C,UAAW,EACrC3gD,EAAMwgD,aAAar8C,OAAOw8C,UAAW,EACrCL,EAAa,IACbC,EAAa,KAEjB3+C,KAAKoZ,cAEGvZ,GAAIG,KAAKH,GAAK,cAAeI,QAASy+C,EAAYzuC,OAAQ,EAAG0lB,UAAW,SACxEhzB,QAAUE,MAAO,EAAGC,OAAQ,KAG5BjD,GAAIG,KAAKH,GAAK,cAAeI,QAAS0+C,EAAY1uC,OAAQ,EAAG0lB,UAAW,SACxEhzB,QAAUE,MAAO,EAAGC,OAAQ,MAIxC6Q,EAAUy8B,UAAUsN,oBAAsB,WACtC,IAAIpjD,EAAU,IAAIwU,GACdkwC,EAAU,IAAIlwC,GAMlB,GAJ8B,WAAzB9O,KAAK5B,MAAc,UAAgC,WAAd4B,KAAKnE,OAC3CmE,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKsS,gBAAgBpS,MAAM6Y,KAAO,SAER,YAAzB/Y,KAAK5B,MAAc,SAAiB,CACrC9D,EAAU0F,KAAKw9C,kBAAkBx9C,KAAM1F,GACvC,IAAI2jD,EAAcj+C,KAAKqyB,mBACvB2sB,EAAUC,GAAkBhB,EAAaj+C,MACzCA,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKsS,gBAAgBpS,MAAM6Y,KAAO,QAUtC,MAR8B,gBAAzB/Y,KAAK5B,MAAc,WACpB4B,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKoS,gBAAgBhU,MAAQ,UAC7B4B,KAAKoS,gBAAgBlS,MAAM6Y,KAAO,QAClC/Y,KAAKsS,gBAAgBpS,MAAM6Y,KAAO,QAClC/Y,KAAKoS,gBAAgB7Z,MAAQ,GAC7ByH,KAAKoS,gBAAgB9Z,OAAS,IAE3B0mD,GAGXrrC,EAAUy8B,UAAU0N,iBAAmB,WACnC,GAAI99C,KAAKoZ,YACL,IAAK,IAAI1iB,EAAI,EAAGA,EAAIsJ,KAAKoZ,YAAY3iB,OAAQC,IACzCsJ,KAAKoZ,YAAY1iB,GAAGuJ,QAAU,IAAMD,KAAKoZ,YAAY1iB,GAAGuJ,QAAU,KAK9E0T,EAAUy8B,UAAU2N,oBAAsB,SAAUzjD,GAChD0F,KAAKnE,KAAO,WACZ,IAAIvD,EAAU0H,KAAK5B,MAAyB,oBAAI,EAC5C8gD,GAAUloD,GAAIgJ,KAAKiL,YAAYjU,EAAIgJ,KAAKe,YAAY/J,GAAK,EAAGC,GAAI+I,KAAKiL,YAAYhU,EAAI+I,KAAKe,YAAY9J,GAAK,GAC3GkoD,EAAQD,EAAMloD,EAAIgJ,KAAKe,YAAY/J,EACnCooD,EAAQF,EAAMjoD,EAAI+I,KAAKe,YAAY9J,EAEnCooD,EAAkB,EADX5iD,KAAKg1C,KAAK0N,EAAQA,EAAQC,EAAQA,GAEzCE,GAAWtoD,EAAGkoD,EAAMloD,EAAImoD,EAAQE,EAAiBpoD,EAAGioD,EAAMjoD,EAAImoD,EAAQC,GACtEE,GAAWvoD,EAAGkoD,EAAMloD,EAAImoD,EAAQE,EAAiBpoD,EAAGioD,EAAMjoD,EAAImoD,EAAQC,GACtE3jD,EAASL,IACb0B,EAAarB,EAAQ,IAAKwjD,EAAMloD,EAAGkoD,EAAMjoD,GACzC+I,KAAK7G,YACL,IAAIA,EAAW,IAAImU,GAAgBtN,KAAM,YAAcnE,KAAM,WAAYF,MAAOF,EAAuBC,EAAQ6jD,KAAW,GACzHv/C,KAAa,SAAElJ,KAAKqC,GACrBA,EAAW,IAAImU,GAAgBtN,KAAM,YAAcnE,KAAM,WAAYF,MAAOF,EAAuBC,EAAQ4jD,KAAW,GACrHt/C,KAAa,SAAElJ,KAAKqC,GACrBmB,EAAU0F,KAAKw9C,kBAAkBx9C,KAAM1F,IAE3CqZ,EAAUy8B,UAAUuN,uBAAyB,WACR,YAA5B39C,KAAK5B,MAAiB,cACvB4B,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKsS,gBAAgBpS,MAAM6Y,KAAO,SAEL,gBAA5B/Y,KAAK5B,MAAiB,cACvB4B,KAAKE,MAAM6e,gBAAkB,MAC7B/e,KAAKsS,gBAAgBpS,MAAM6Y,KAAO,QAClC/Y,KAAKsS,gBAAgBlU,MAAQ,SAEA,kBAA5B4B,KAAK5B,MAAiB,cACvB4B,KAAKE,MAAM6e,gBAAkB,MAC7B/e,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKsS,gBAAgBpS,MAAM6Y,KAAO,QAClC/Y,KAAKoS,gBAAgBhU,MAAQ,QAC7B4B,KAAKoS,gBAAgBlS,MAAM6Y,KAAO,QAClC/Y,KAAKoS,gBAAgB7Z,MAAQ,EAC7ByH,KAAKoS,gBAAgB9Z,OAAS,KAGtCqb,EAAUy8B,UAAUwN,mBAAqB,WACrC,IAAI4B,EAAiB,IAAI1wC,GAiBzB,OAhBA9O,KAAKE,MAAM6e,gBAAkB,MAC7B/e,KAAKsS,gBAAgBlU,MAAQ,QAC7B4B,KAAKsS,gBAAgB/Z,MAAQ,EAC7ByH,KAAKsS,gBAAgBha,OAAS,GAC9B0H,KAAKoS,gBAAgBhU,MAAQ,SACC,sBAAxB4B,KAAK5B,MAAa,SACM,yBAAxB4B,KAAK5B,MAAa,UACpBohD,EAAe3/C,GAAKG,KAAKH,GAAK,IAAOG,KAAK5B,MAAa,QACvDohD,EAAejnD,MAAQ,GACvBinD,EAAelnD,OAAS,GACxBknD,EAAeppD,KAAO,yDACtBopD,EAAe5lC,oBAAsB,SACrC4lC,EAAe7lC,kBAAoB,SACnC6lC,EAAe35C,UAAYmtC,YAAUc,KACrC0L,EAAet/C,MAAM6Y,KAAgC,yBAAxB/Y,KAAK5B,MAAa,QAA+B,YAAc,SAEzFohD,GAGX7rC,EAAUy8B,UAAU1qC,SAAW,SAAUksC,EAAKC,GAC1C,OAAO4N,GAAa7N,EAAKC,IAG7Bl+B,EAAUy8B,UAAUsP,SAAW,SAAUC,EAAUC,GAC/C,OAAOF,GAASC,EAAUC,IAG9BjsC,EAAUy8B,UAAUgO,qBAAuB,SAAUv6B,EAAYlrB,EAAQ6I,EAAQq4B,EAAgBwJ,GAC7Fxf,EAAWhkB,GAAKgkB,EAAWhkB,IAAMua,KACjC,IAAIylC,EACAxc,GAAaxf,EAAW0zB,UACxBsI,EAAU,IAAInhB,GAAmB1+B,KAAKH,GAAIwjC,EAAWxf,EAAWhkB,KACxDI,QAAU4jB,EAAW0zB,WAG7BsI,EAAU,IAAIv7B,IACNrkB,QAAU4jB,EAAW5jB,QAC7B4/C,EAAQ3/C,MAAMm8B,aAAe,QAEjCwjB,EAAQrsC,YAAcqQ,EAAWrQ,YACjCqsC,EAAQjiB,QAAU/Z,EAAW8d,WAC7Bke,EAAQ3yC,YAAc2W,EAAW3W,YACjC2yC,EAAQjmC,oBAAsBiK,EAAWjK,oBACzCimC,EAAQlmC,kBAAoBkK,EAAWlK,kBACvCkmC,EAAQtnD,MAAQsrB,EAAWtrB,MAC3BsnD,EAAQvnD,OAASurB,EAAWvrB,YACP2B,IAAjBuH,EAAOjJ,OAAwBsrB,EAAW0zB,WAC1CsI,EAAQtnD,OAASsrB,EAAWtrB,OAASiJ,EAAOjJ,OAASsrB,EAAWlhB,OAAOC,KAAOihB,EAAWlhB,OAAOE,OAEpGg9C,EAAQl9C,OAASkhB,EAAWlhB,OAC5Bk9C,EAAQhgD,GAAKG,KAAKH,GAAK,IAAMgkB,EAAWhkB,GACnB,IAAjB2B,EAAOjJ,QACPiJ,EAAOjJ,MAAQyH,KAAKE,MAAM+Y,aAER,IAAlBzX,EAAOlJ,SACPkJ,EAAOlJ,OAAS0H,KAAKE,MAAM+Y,aAE/B4mC,EAAQ3/C,MAAQ2jB,EAAW3jB,MAE3B,IAAIi+C,EACAjX,EAAc7W,GAAYwJ,GAM9B,OALIqN,IACAiX,EAAiBjX,EAAYrjB,EAAY7jB,OAE7C6/C,EAAQ3Y,YAAciX,GAAkC0B,EAAQhgD,GAChEG,KAAK8/C,iBAAiBj8B,EAAYlrB,EAAQ6I,EAAQq+C,GAC3CA,GAGXlsC,EAAUy8B,UAAU0P,iBAAmB,SAAUj8B,EAAYlrB,EAAQ6I,EAAQ06B,EAAa6jB,GACtF,IAAI7e,EACAiV,EACA/X,EACAtI,EACAD,EACArB,EACAwrB,GAAehpD,EAAG,EAAGC,EAAG,GACtBilC,aAAuBwC,IAAyBqhB,GAClD7jB,EAAYzX,qBAEhByX,EAAY3jC,MAASsrB,EAAWtrB,OAASiJ,EAAOjJ,MAEhD49C,GADAjV,EAAelM,GAAsBr8B,EAAQkrB,EAAYriB,IACjC7F,MACpBkoB,EAAWo8B,eACX/jB,EAAYhvB,YAAc2W,EAAW3W,YAAcg0B,EAAa1pC,MAChE0kC,EAAYhvB,aAAegvB,EAAYhvB,YAAc,KAAO,KAE3C,IAAjB1L,EAAOjJ,QACPiJ,EAAOjJ,MAAQyH,KAAKE,MAAM+Y,aAER,IAAlBzX,EAAOlJ,SACPkJ,EAAOlJ,OAAS0H,KAAKE,MAAM+Y,aAE/Bub,GAAgBx9B,GAAKm/C,EAASn/C,EAAIwK,EAAOxK,GAAKwK,EAAOjJ,MAAQtB,GAAKk/C,EAASl/C,EAAIuK,EAAOvK,GAAKuK,EAAOlJ,QAClG0nD,EAAWhpD,EAAIwK,EAAOjJ,MAAQi8B,EAAYx9B,EAC1CgpD,EAAW/oD,EAAIuK,EAAOlJ,OAASk8B,EAAYv9B,EAE3C6+B,GADAsI,EAAQxI,GAAqB/R,EAAYqd,EAAa1pC,MAAOmB,IAC9Cm9B,OACfD,EAASuI,EAAMvI,OACf,IAAIqqB,EACAC,EACW,SAAXrqB,GACAoqB,EAAU,OACVF,EAAWhpD,GAAK6sB,EAAWu8B,aAAappD,GAExB,UAAX8+B,GACLoqB,EAAU,QACVF,EAAWhpD,GAAK6sB,EAAWu8B,aAAappD,GAExB,WAAX8+B,IACLoqB,EAAU,UAEC,QAAXrqB,GACAsqB,EAAS,MACTH,EAAW/oD,GAAK4sB,EAAWu8B,aAAanpD,GAExB,WAAX4+B,GACLsqB,EAAS,SACTH,EAAW/oD,GAAK4sB,EAAWu8B,aAAanpD,GAExB,WAAX4+B,IACLsqB,EAAS,UAEbjkB,EAAYtiB,oBAAsBsmC,EAClChkB,EAAYviB,kBAAoBwmC,EAChCjkB,EAAYuY,6BAA6BuL,EAAWhpD,EAAGgpD,EAAW/oD,EAAG,YACrEilC,EAAYxH,aAAe,SAG/B/gB,EAAUy8B,UAAUqN,mBAAqB,SAAU5hD,EAAMlD,EAAQkI,GACjDpE,KAAK6G,IAAItD,KAAKe,YAAY/J,EAAIgJ,KAAKiL,YAAYjU,GAC9CyF,KAAK6G,IAAItD,KAAKe,YAAY9J,EAAI+I,KAAKiL,YAAYhU,GAD5D,IAGIopD,EADKz/C,EAAoBZ,KAAMa,GACZ+e,MAAM,GAK7B,OAJIygC,GAAaA,EAAU5pD,OAAS,IAChCuJ,KAAKe,YAAcs/C,EAAU,GAC7BrgD,KAAKiL,YAAco1C,EAAUA,EAAU5pD,OAAS,IAE7C4pD,GAGX1sC,EAAUy8B,UAAUkQ,cAAgB,SAAU/7C,EAAW5L,EAAQ4nD,GAC7D,IAAI5kD,GAAU3E,EAAG,EAAGC,EAAG,GACnBw6B,GAAUz6B,EAAG,EAAGC,EAAG,GACnBy6B,GAAQ16B,EAAG,EAAGC,EAAG,GACjBR,EAASkC,EAAOlC,OACpBg7B,EAAS8uB,EAAgC5nD,EAAO,GAA5BA,EAAOlC,EAAS,GACpCi7B,EAAO6uB,EAAgC5nD,EAAO,GAA5BA,EAAOlC,EAAS,GAClC,IAAI+pD,EAAMj7C,GAAM2G,eAAeulB,EAAOC,GACtC8uB,EAAe,IAARA,EAAa,EAAIA,EACxB,IAAIjoD,EAAQgM,EAAUrE,MAAM+Y,YAAc,EAC1Ctd,EAAM3E,EAAKyF,KAAKC,MAAM+0B,EAAMz6B,EAAIuB,GAASm5B,EAAI16B,EAAIy6B,EAAMz6B,GAAKwpD,GAC5D7kD,EAAM1E,EAAKwF,KAAKC,MAAM+0B,EAAMx6B,EAAIsB,GAASm5B,EAAIz6B,EAAIw6B,EAAMx6B,GAAKupD,GAC5D,IAAIvnC,EAAc,EACd1Y,EAAOggD,EAAWh8C,EAAUvD,cAAgBuD,EAAU7C,cAQ1D,OAPInB,IACA0Y,EAAc1Y,EAAKL,MAAM+Y,cAExBsnC,GAAgD,SAApCh8C,EAAU6N,gBAAgBhU,QACrCmiD,GAAgD,SAApCh8C,EAAU+N,gBAAgBlU,SACxCzC,EAAQ4J,GAAMwsC,YAAYp2C,EAAO+1B,GAAK,EAAOzY,EAAc,IAExDtd,GAGXgY,EAAUy8B,UAAU3P,eAAiB,SAAUl8B,EAAWyC,GAOtD,MANwC,SAApCzC,EAAU6N,gBAAgBhU,QAC1B4I,EAAI,GAAKhH,KAAKsgD,cAAc/7C,EAAWyC,GAAK,IAER,SAApCzC,EAAU+N,gBAAgBlU,QAC1B4I,EAAIA,EAAIvQ,OAAS,GAAKuJ,KAAKsgD,cAAc/7C,EAAWyC,GAAK,IAEtDA,GAGX2M,EAAUy8B,UAAU7P,qBAAuB,SAAUh8B,EAAW5L,EAAQiH,GACpE,IAAI6gD,EACAj/C,EAAS,IAAI8K,GAGjB,GAFAm0C,EACczgD,KAAK0gD,eAAen8C,EAAW5L,GACtB,WAAnB4L,EAAU1I,MACV,GAAImE,KAAK7G,SAAS1C,OAAS,EACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIsJ,KAAK7G,SAAS1C,OAAQC,IAAK,CAC3C,IAAI4D,EAAU0F,KAAK7G,SAASzC,GACxBiqD,EAAmBp8C,EAAUpL,SAASzC,GACtC+Z,EAAUlL,GAAMC,aAAalL,EAAQmW,QAAoCkwC,EAAiBruB,aAA3CquB,EAAiBlwC,OAChEjY,EAAU+M,GAAMC,aAAalL,EAAQ9B,QAAoCmoD,EAAiBpuB,aAA3CouB,EAAiBnoD,OACpEgJ,EAAO6Q,UAAUM,GAAgBrY,EAAQ3B,OAAO,GAAI8X,EAAQjY,EAAQ8B,EAAQ3B,OAAO,GAAI4L,UAK/F/C,EAAS8K,GAAKmmB,SAAS95B,GAa3B,OAXAiH,EAAQrH,MAAQiJ,EAAOjJ,MACvBqH,EAAQtH,OAASkJ,EAAOlJ,OACxBsH,EAAQ7D,QAAUyF,EAAOxK,EAAI4I,EAAQrH,MAAQ,EAC7CqH,EAAQ5D,QAAUwF,EAAOvK,EAAI2I,EAAQtH,OAAS,EAC9CsH,EAAQxJ,KAAOqqD,EACXl8C,EAAUiK,UACVjK,EAAUiK,QAAQzS,QAAU6D,EAAQ7D,QACpCwI,EAAUiK,QAAQxS,QAAU4D,EAAQ5D,QACpCuI,EAAUiK,QAAQjW,MAAQiJ,EAAOjJ,MACjCgM,EAAUiK,QAAQlW,OAASkJ,EAAOlJ,QAE/BsH,GAGX+T,EAAUy8B,UAAUoN,kBAAoB,SAAUj5C,EAAWq8C,EAAgB//C,GACzE,IAEIlI,KAMJ,OALAkoD,GAAct8C,GACd5L,EAASqH,KAAKy9C,mBAAmBl5C,EAAU1I,UAAM5B,EAAW4G,GAC5Db,KAAKqyB,mBAAqB15B,EAC1BioD,EAAe1M,YAAa,EAC5B0M,EAAiB5gD,KAAKugC,qBAAqBh8B,EAAW5L,EAAQioD,IAIlEjtC,EAAUy8B,UAAU8N,oBAAsB,SAAU1pB,EAAassB,EAAepiD,EAAW6hD,EAAU1mB,GACjG,IAAIknB,EAAS,IAAIjyC,GAKjB,GAJAiyC,EAEOl7C,UAAYmtC,YAAUc,KAC7B9zC,KAAK0gC,uBAAuBqgB,EAAQvsB,EAAassB,EAAepiD,QACzCzE,IAAnB4/B,EAA8B,CAE9B,IAAIskB,EAAiBtkB,EAAen7B,EAAWsB,MAC/C+gD,EAAO7Z,YAAciX,GACc,SAEvC,OAAO4C,GAEXptC,EAAUy8B,UAAU4Q,WAAa,SAAUz8C,EAAW7L,EAAMuoD,GACxD,IAAItiD,EAAWjG,EACf,GAAI6L,EAAU84C,QAAQ5mD,OAAS,EAC3B,GAAuB,aAAnB8N,EAAU1I,MAAuB0I,EAAUpL,SAAS1C,OAAS,EAC7D,IAAK,IAAIyqD,EAAI,EAAGA,EAAI38C,EAAU84C,QAAQ5mD,OAAQyqD,IAAK,EAC3CC,EAAS58C,EAAU84C,QAAQ6D,IACnBE,WACRziD,GAAY,KAAOwiD,EAAOvuC,WAAW5b,EAAI,IAAMmqD,EAAOvuC,WAAW3b,EACjE0H,GAAYwiD,EAAOzoD,KACnByoD,EAAOC,UAAW,QAIzB,GAAuB,eAAnB78C,EAAU1I,MAA6C,aAAnB0I,EAAU1I,MAAuB0I,EAAUpL,SAAS1C,OAAS,EACtG,IAASyqD,EAAI,EAAGA,EAAI38C,EAAU84C,QAAQ5mD,OAAQyqD,IAAK,CAC/C,IAAIC,GAAAA,EAAS58C,EAAU84C,QAAQ6D,IACpBG,oBAAsBJ,IACxBE,EAAOC,UACJD,EAAOE,oBAAsBJ,IAC7BtiD,GAAY,KAAOwiD,EAAOvuC,WAAW5b,EAAI,IAAMmqD,EAAOvuC,WAAW3b,EACjE0H,GAAYwiD,EAAOzoD,KACnByoD,EAAOC,UAAW,IAO1C,OAAOziD,GAGXgV,EAAUy8B,UAAU1P,uBAAyB,SAAU9gC,EAAShE,EAAIklD,EAAepiD,GAC/E,IAAI4iD,EACA9pD,EACJoI,EAAQ7D,QAAUH,EAAG5E,EACrB4I,EAAQ5D,QAAUJ,EAAG3E,EACrBO,EAAQ+N,GAAMsI,UAAUjS,EAAIklD,GAC5BQ,EAAU7iD,EAAkBC,EAAUN,MAAOM,GAC7C,IAAIwiB,EAAO,IAAI5B,GAAK5gB,EAAUnG,MAAOmG,EAAUpG,QAC/CsH,EAAQmhC,MAAM/pC,EAAI0H,EAAUqiC,MAAM/pC,EAClC4I,EAAQmhC,MAAM9pC,EAAIyH,EAAUqiC,MAAM9pC,EAClC2I,EAAQM,MAAQxB,EAAUwB,MAC1BN,EAAQsN,YAAc1V,EACtBoI,EAAQxJ,KAAOkrD,EACf1hD,EAAQ0/B,gBAAiB,EACzB1/B,EAAQrH,MAAQ2oB,EAAK3oB,MACrBqH,EAAQtH,OAAS4oB,EAAK5oB,QAG1Bqb,EAAUy8B,UAAUsQ,eAAiB,SAAUn8C,EAAW5L,GAOtD,IANA,IACI4oD,EACA7vB,EACA8vB,EAHA9oD,EAAO,GAIPsO,KACA3Q,EAAI,EACDA,EAAIsC,EAAOlC,QACduQ,EAAIlQ,MAAOE,EAAG2B,EAAOtC,GAAGW,EAAGC,EAAG0B,EAAOtC,GAAGY,IACxCZ,IAEJ,IAAK,IAAIorD,EAAI,EAAGA,EAAIl9C,EAAU84C,QAAQ5mD,OAAQgrD,IAAK,CAClCl9C,EAAU84C,QAAQoE,GACxBL,UAAW,EAGtB,GADAp6C,EAAMhH,KAAKygC,eAAel8B,EAAWyC,GACjChH,KAAK3H,aAAe,GAAmB,WAAd2H,KAAKnE,KAC9B,IAAK,IAAI6lD,EAAM,EAAGA,EAAM16C,EAAIvQ,OAAS,EAAGirD,IAAO,CAC3CH,EAAQv6C,EAAI06C,GACA,IAARA,IACAhpD,EAAO,IAAM6oD,EAAMvqD,EAAI,IAAMuqD,EAAMtqD,GAEvC,IAAI2R,EAAYrD,GAAM2G,eAAelF,EAAI06C,GAAM16C,EAAI06C,EAAM,IACrD94C,EAAY,IAGJ8oB,EAFJgwB,EAAM16C,EAAIvQ,OAAS,EACfmS,EAAgC,EAApB5I,KAAK3H,aACXkN,GAAMwsC,YAAY/qC,EAAI06C,GAAM16C,EAAI06C,EAAM,IAAI,EAAO94C,EAAY,GAG7DrD,GAAMwsC,YAAY/qC,EAAI06C,GAAM16C,EAAI06C,EAAM,IAAI,EAAO1hD,KAAK3H,cAI1D2O,EAAI06C,EAAM,GAEhBA,EAAM,IACF94C,EAAgC,EAApB5I,KAAK3H,cACjBmpD,EAAKj8C,GAAMwsC,YAAY/qC,EAAI06C,GAAM16C,EAAI06C,EAAM,IAAI,EAAM94C,EAAY,GAC7D84C,EAAM16C,EAAIvQ,OAAS,IACnBi7B,EAAM,OAIV8vB,EAAKj8C,GAAMwsC,YAAY/qC,EAAI06C,GAAM16C,EAAI06C,EAAM,IAAI,EAAM1hD,KAAK3H,eAG9DmpD,IACA9oD,GAAQ,IAAM6oD,EAAMvqD,EAAI,IAAMuqD,EAAMtqD,EAAI,IAAMuqD,EAAGxqD,EAAI,IAAMwqD,EAAGvqD,GAE9Dy6B,IACIntB,EAAU84C,QAAQ5mD,OAAS,IAC3BiC,EAAOsH,KAAKghD,WAAWz8C,EAAW7L,EAAMgpD,GACjB,eAAnBn9C,EAAU1I,OACVnD,EAAOsH,KAAKghD,WAAWz8C,EAAW7L,EAAMgpD,EAAM,KAGtDhpD,GAAQ,KAAOg5B,EAAI16B,EAAI,IAAM06B,EAAIz6B,SAM7C,GAAkB,WAAd+I,KAAKnE,KAAmB,CAGxB,IAAK,IAFD4G,OAAY,EACZtJ,EAAW6G,KAAK7G,SACXwoD,EAAM,EAAGA,EAAMxoD,EAAS1C,OAAQkrD,IACjC36C,EAAIvQ,OAAS,IACb0C,EAASwoD,GAAKrvB,cAAiBt7B,EAAG,EAAGC,EAAG,GACxCkC,EAASwoD,GAAKpvB,cAAiBv7B,EAAG,EAAGC,EAAG,KAExCsO,GAAMC,aAAarM,EAASwoD,GAAKlxC,SAAYtX,EAASwoD,GAAKl8C,QAAQjO,OAAU2B,EAASwoD,GAAKl8C,QAAQC,SAM9FvM,EAASwoD,GAAKl8C,QAAQjO,OAAS2B,EAASwoD,GAAKl8C,QAAQC,SAC1DvM,EAASwoD,GAAKrvB,aAAe/sB,GAAMM,UAAUmB,EAAI26C,GAAMxoD,EAASwoD,GAAKl8C,QAAQjO,MAAO2B,EAASwoD,GAAKl8C,QAAQC,UAG1GvM,EAASwoD,GAAKrvB,cACVt7B,EAAGmC,EAASwoD,GAAKlxC,OAAOzZ,GAAKmC,EAASwoD,GAAKrvB,aAAat7B,EACxDC,EAAGkC,EAASwoD,GAAKlxC,OAAOxZ,GAAKkC,EAASwoD,GAAKrvB,aAAar7B,KAXvDsN,EAAU9C,UAAYzB,KAAKivC,eAAiBjvC,KAAKgB,gBAClDyB,EAAYY,GAAarD,KAAKgB,cAAcQ,OAAQwF,EAAI26C,IAAM,IAElExoD,EAASwoD,GAAKrvB,aAAe5f,GAAgB1L,EAAI26C,GAAM36C,EAAI26C,EAAM,GAAIl/C,KAWrE8C,GAAMC,aAAarM,EAASwoD,GAAKnpD,SAAYW,EAASwoD,GAAK77C,QAAQtO,OAAU2B,EAASwoD,GAAK77C,QAAQJ,SAM9FvM,EAASwoD,GAAK77C,QAAQtO,OAAS2B,EAASwoD,GAAK77C,QAAQJ,SAC1DvM,EAASwoD,GAAKpvB,aAAehtB,GAAMM,UAAUmB,EAAI26C,EAAM,GAAIxoD,EAASwoD,GAAK77C,QAAQtO,MAAO2B,EAASwoD,GAAK77C,QAAQJ,UAG9GvM,EAASwoD,GAAKpvB,cACVv7B,EAAGmC,EAASwoD,GAAKnpD,OAAOxB,GAAKmC,EAASwoD,GAAKpvB,aAAav7B,EACxDC,EAAGkC,EAASwoD,GAAKnpD,OAAOvB,GAAKkC,EAASwoD,GAAKpvB,aAAat7B,KAXvDsN,EAAU0iB,UAAYjnB,KAAK4hD,eAAiB5hD,KAAK0B,gBAClDe,EAAYY,GAAarD,KAAK0B,cAAcF,OAAQwF,EAAI26C,EAAM,IAAI,IAEtExoD,EAASwoD,GAAKpvB,aAAe7f,GAAgB1L,EAAI26C,EAAM,GAAI36C,EAAI26C,GAAMl/C,IAY7EuE,EAAIT,OAAO,EAAG,GAAKvP,EAAGmC,EAAS,GAAGm5B,aAAat7B,EAAGC,EAAGkC,EAAS,GAAGm5B,aAAar7B,IAC9E+P,EAAIT,OAAOS,EAAIvQ,OAAS,EAAG,GACvBO,EAAGmC,EAASA,EAAS1C,OAAS,GAAG87B,aAAav7B,EAAGC,EAAGkC,EAASA,EAAS1C,OAAS,GAAG87B,aAAat7B,IAEnG+P,EAAMhH,KAAKygC,eAAel8B,EAAWyC,GACrC,IAAK,IAAI66C,EAAM,EAAGA,EAAM1oD,EAAS1C,OAAQorD,IAAO,CAChC,IAARA,IACAnpD,EAAO,IAAMsO,EAAI,GAAGhQ,EAAI,IAAMgQ,EAAI,GAAG/P,GAEzC,IAAIuW,EAAaq0C,IAAQ1oD,EAAS1C,OAAS,EAAKuQ,EAAIA,EAAIvQ,OAAS,GAAGO,EAAI,IAAMgQ,EAAIA,EAAIvQ,OAAS,GAAGQ,EAC9FkC,EAAS0oD,GAAKlpD,OAAOQ,EAAS0oD,GAAKlpD,OAAOlC,OAAS,GAAGO,EAAI,IAAMmC,EAAS0oD,GAAKlpD,OAAOQ,EAAS0oD,GAAKlpD,OAAOlC,OAAS,GAAGQ,EAC1HyB,GAAQ,IACJS,EAAS0oD,GAAKvvB,aAAat7B,EAAI,IAAMmC,EAAS0oD,GAAKvvB,aAAar7B,EAAI,IAAMkC,EAAS0oD,GAAKtvB,aAAav7B,EAAI,IACvGmC,EAAS0oD,GAAKtvB,aAAat7B,EAAI,IAAMuW,QAI/C,IAAK,IAAIgW,EAAI,EAAGA,EAAIxc,EAAIvQ,OAAQ+sB,IAC5B+9B,EAAQv6C,EAAIwc,GACF,IAANA,IACA9qB,EAAO,IAAM6oD,EAAMvqD,EAAI,IAAMuqD,EAAMtqD,GAEnCusB,EAAI,IACJ9qB,EAAOsH,KAAKghD,WAAWz8C,EAAW7L,EAAM8qB,GACxC9qB,GAAQ,KAAY6oD,EAAMvqD,EAAI,IAAMuqD,EAAMtqD,GAK1D,OAAOyB,GAGXib,EAAUy8B,UAAUzP,mBAAqB,SAAUp8B,GAC/C,IAAI3E,EACJ,OAAQ2E,EAAUnG,MAAMvC,MACpB,IAAK,OACG0I,EAAUiK,QAAQ2D,SAAS,aAAcrD,KACzClP,EAAU2E,EAAUiK,QAAQ2D,SAAS,IAEZ,YAAzB5N,EAAUnG,MAAMkzB,MAChBtxB,KAAK69C,oBAAoBt5C,EAAW3E,GAExC,MACJ,IAAK,cAC4B,cAAzB2E,EAAUnG,MAAMkzB,MAChBtxB,KAAK+9C,oBAAoBx5C,EAAUiK,QAAQ2D,SAAS,MAMpEwB,EAAUy8B,UAAUyN,oBAAsB,SAAUt5C,EAAW3E,GAM3D,IAAK,IAJDpI,EACAoE,EACAnF,EAAS,EACTwnD,EAAcj+C,KAAKqyB,mBACd37B,EAAI,EAAGA,EAAIunD,EAAYxnD,OAAS,EAAGC,IAAK,CAE7C,IAAI2+B,EAPY,IAMhB5+B,GAAkBuJ,KAAK0F,SAASu4C,EAAYvnD,GAAIunD,EAAYvnD,EAAI,KAE5DD,GAAU4+B,IACV79B,EAAQqW,GAAUowC,EAAYvnD,GAAIunD,EAAYvnD,EAAI,IAClDkF,EAAK2J,GAAMM,UAAUo4C,EAAYvnD,GAAIc,EAAO69B,IAGpDz1B,EAAQ7D,QAAUH,EAAG5E,EACrB4I,EAAQ5D,QAAUJ,EAAG3E,GAGzB0c,EAAUy8B,UAAUzzB,MAAQ,SAAU0lB,EAAIC,EAAI/pC,EAAOD,EAAQiqC,GACzD,IAAIuf,EAAK,EACLC,EAAK,EACT,GAAI/hD,KAAKwO,SAAWxO,KAAKwO,QAAQxB,YAAa,CAC1C,IAAIA,EAAckF,GAAelS,MAC7BgiD,GAAahiD,KAAKwO,QAAQhN,OAAOjJ,OAASyH,KAAKE,MAAM+Y,aAAe,GAAK,EACzEgpC,GAAcjiD,KAAKwO,QAAQhN,OAAOlJ,QAAU0H,KAAKE,MAAM+Y,aAAe,GAAK,EAC/E6oC,EAAM90C,EAAYzU,MAAQypD,EAC1BD,EAAM/0C,EAAY1U,OAAS2pD,EAC3B5f,GAAM9pC,EAASkE,KAAKmJ,IAAIk8C,EAAIC,IAAQC,EACpC1f,GAAMhqC,EAAUmE,KAAKmJ,IAAIk8C,EAAIC,IAAQE,EACrCH,EAAKC,EAAKtlD,KAAKyK,IAAI46C,EAAIC,GAE3B1f,EAAKC,EAAK7lC,KAAKyK,IAAIm7B,EAAIC,GACvB,IAAI5mC,EAASL,IAEb0B,EAAarB,IADb6mC,EAAYA,GAAaviC,KAAKwO,SACEtB,YAAaq1B,EAAUxmC,QAASwmC,EAAUvmC,SAC1EyB,EAAY/B,EAAQ2mC,EAAIC,EAAIC,EAAUxmC,QAASwmC,EAAUvmC,SACzDe,EAAarB,EAAQ6mC,EAAUr1B,YAAaq1B,EAAUxmC,QAASwmC,EAAUvmC,SACzE,IAAIrD,EAASgE,EAAwBjB,EAAQsE,KAAKqyB,oBAKlD,OAJAryB,KAAKe,YAAcpI,EAAO,GAC1BqH,KAAKiL,YAActS,EAAOA,EAAOlC,OAAS,GAC1CkC,EAASqH,KAAKqyB,mBAAqBzxB,EAAoBZ,MACvDmgC,GAAgBngC,KAAMrH,IACb3B,EAAG8qD,EAAI7qD,EAAG8qD,IAMvBpuC,EAAUy8B,UAAU6B,aAAe,WAC/B,MAAO,aAEXnB,IACIyE,iBAAemH,KAChB/oC,EAAUy8B,UAAW,aAAS,GACjCU,IACIoB,WAASt+B,uBAAqBiF,UAC/BlF,EAAUy8B,UAAW,mBAAe,GACvCU,IACIoB,WAAS,KACVv+B,EAAUy8B,UAAW,mBAAe,GACvCU,IACIuE,gBAAe9hC,KAChBI,EAAUy8B,UAAW,mBAAe,GACvCU,IACIyH,aAAYhzC,KACboO,EAAUy8B,UAAW,mBAAe,GACvCU,IACIyH,aAAYhzC,KACboO,EAAUy8B,UAAW,mBAAe,GACvCU,IACIoR,oBAAkBnF,KACnBppC,EAAUy8B,UAAW,gBAAY,GACpCU,IACIoB,WAAS,KACVv+B,EAAUy8B,UAAW,gBAAY,GACpCU,IACIoB,WAAS,KACVv+B,EAAUy8B,UAAW,gBAAY,GACpCU,IACIoB,WAAS,KACVv+B,EAAUy8B,UAAW,kBAAc,GACtCU,IACIoB,WAAS,aACVv+B,EAAUy8B,UAAW,YAAQ,GAChCU,IACIoB,WAAS,IACVv+B,EAAUy8B,UAAW,oBAAgB,GACxCU,IACIyH,WAAUn6C,MAAO,QAAU4+C,KAC5BrpC,EAAUy8B,UAAW,uBAAmB,GAC3CU,IACIyH,WAAUn6C,MAAO,SAAW4+C,KAC7BrpC,EAAUy8B,UAAW,uBAAmB,GAC3CU,IACIyH,aAAYiE,KACb7oC,EAAUy8B,UAAW,eAAW,GACnCU,IACIoB,WAAS,KACVv+B,EAAUy8B,UAAW,oBAAgB,GACxCU,IACIoB,WAAS,KACVv+B,EAAUy8B,UAAW,oBAAgB,GACxCU,IACIoB,WAAS,IACVv+B,EAAUy8B,UAAW,qBAAiB,GACzCU,IACIoB,WAAS,IACVv+B,EAAUy8B,UAAW,qBAAiB,GACzCU,IACIyH,WAAUt/B,YAAa,EAAGD,YAAa,SAAWojB,KACnDzoB,EAAUy8B,UAAW,aAAS,GACjCU,IACIoB,WAAS,OACVv+B,EAAUy8B,UAAW,eAAW,GAC5Bz8B,GACT8oC,I8BzvCElM,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAiD5D6qB,GAA4B,SAAU2Y,GAEtC,SAAS3Y,IACL,OAAkB,OAAX2Y,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAmD/D,OArDAuwC,GAAU3X,EAAY2Y,GAQtB3Y,EAAWwX,UAAU6B,aAAe,WAChC,MAAO,cAEXnB,IACIoB,WAAS,KACVtZ,EAAWwX,UAAW,YAAQ,GACjCU,IACIoB,WAAS,KACVtZ,EAAWwX,UAAW,gBAAY,GACrCU,IACIoB,WAAS,YACVtZ,EAAWwX,UAAW,uBAAmB,GAC5CU,IACIoB,WAAS,QACVtZ,EAAWwX,UAAW,YAAQ,GACjCU,IACIoB,WAAS,KACVtZ,EAAWwX,UAAW,mBAAe,GACxCU,IACIoB,WAAS,KACVtZ,EAAWwX,UAAW,mBAAe,GACxCU,IACIoB,WAAS,KACVtZ,EAAWwX,UAAW,YAAQ,GACjCU,IACIoB,WAAS,UACVtZ,EAAWwX,UAAW,iBAAa,GACtCU,IACIoB,WAAS,KACVtZ,EAAWwX,UAAW,oBAAgB,GACzCU,IACIoB,YAAS,IACVtZ,EAAWwX,UAAW,eAAW,GACpCU,IACIoB,WAAS,IACVtZ,EAAWwX,UAAW,cAAU,GACnCU,IACIyH,aAAYpD,KACbvc,EAAWwX,UAAW,cAAU,GACnCU,IACIoB,WAAS,WACVtZ,EAAWwX,UAAW,2BAAuB,GAChDU,IACIoB,WAAS,WACVtZ,EAAWwX,UAAW,yBAAqB,GACvCxX,GACTuZ,iBAKEn+B,GAA0B,SAAUu9B,GAEpC,SAASv9B,IACL,OAAkB,OAAXu9B,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA6E/D,OA/EAuwC,GAAUv8B,EAAUu9B,GAOpBv9B,EAASo8B,UAAUvN,KAAO,SAAU3jC,GAChC,IAAI0Z,EAAY,IAAI4pB,GAIpB,GAHA5pB,EAAU+8B,iBAAkB,EAC5B/8B,EACUzG,YACNnS,KAAK6jB,WAAY,CACjB,IAAI9W,EAAU/M,KAAK8Z,MAAMrjB,OAAS,EAAKyI,EAAQ0c,UAAU5b,KAAK8Z,MAAM,GAAGja,IAAI2O,QACvEtP,EAAQ0c,UAAU5b,KAAK2e,WAAW,GAAG9e,IAAI2O,QACzCA,EAAUtP,EAAQijD,WAAWp1C,EAAQ/M,KAAK6jB,WAAWhkB,IACzD+Y,EAAUzG,SAASrb,KAAK0X,QAGxB,GAAIxO,KAAK8Z,OAAS9Z,KAAK2e,WAAY,CAC/B,IAAK,IAAIjoB,EAAI,EAAGA,EAAIsJ,KAAK8Z,MAAMrjB,OAAQC,IAAK,CAEpC8X,EADOtP,EAAQ0c,UAAU5b,KAAK8Z,MAAMpjB,GAAGmJ,IACxB2O,QAMnBoK,EAAUzG,SAASrb,KAAK0X,GAE5B,IAAK,IAAInY,EAAI,EAAGA,EAAI2J,KAAK2e,WAAWloB,OAAQJ,IAAK,CAEzCmY,EADYtP,EAAQ0c,UAAU5b,KAAK2e,WAAWtoB,GAAGwJ,IAC7B2O,QAIxBoK,EAAUzG,SAASrb,KAAK0X,IAKpC,OADAxO,KAAKwO,QAAUoK,EACRA,GAEXk4B,IACIoB,WAAS,OACVl+B,EAASo8B,UAAW,eAAW,GAClCU,IACIuE,gBAAevgC,KAChBd,EAASo8B,UAAW,aAAS,GAChCU,IACIuE,gBAAe1hC,KAChBK,EAASo8B,UAAW,kBAAc,GACrCU,IACIoB,cACDl+B,EAASo8B,UAAW,aAAS,GAChCU,IACIoB,cACDl+B,EAASo8B,UAAW,cAAU,GACjCU,IACIoB,WAAS,IACVl+B,EAASo8B,UAAW,mBAAe,GACtCU,IACIoB,WAAS,IACVl+B,EAASo8B,UAAW,eAAW,GAClCU,IACIoB,WAAS,IACVl+B,EAASo8B,UAAW,eAAW,GAClCU,IACIyH,WAAUvhD,EAAG,GAAKC,EAAG,IAAOsO,KAC7ByO,EAASo8B,UAAW,aAAS,GAChCU,IACIoB,WAAS,sBACVl+B,EAASo8B,UAAW,+BAA2B,GAClDU,IACIuE,gBAAezc,KAChB5kB,EAASo8B,UAAW,mBAAe,GACtCU,IACIoB,WAAS5Q,sBAAoB8gB,MAC9BpuC,EAASo8B,UAAW,mBAAe,GAC/Bp8B,GACTm+B,iBC/ME5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAkBxCyR,GAA4B,SAAU9Q,GAEtC,SAAS8Q,IACL,IAAI5M,EAAmB,OAAXlE,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAWhE,OAPAy1C,EAAMpkC,YAAc,WAMpBokC,EAAME,qBAAkB17C,EACjBw7C,EA6JX,OA1KAlF,GAAU8R,EAAY9Q,GAmBtB8Q,EAAWjS,UAAU/wB,QAAU,SAAUu1B,GACrC,IAAI0N,EAAkC,eAArBtiD,KAAKqR,YAA+BrR,KAAKuiD,sBAAwBviD,KAAKwiD,oBAEvF,OADAxiD,KAAKwf,YAAcxf,KAAKyiD,kBAAkB7N,EAAe0N,GAClDtiD,KAAKwf,aAMhB6iC,EAAWjS,UAAU7wB,QAAU,SAAUC,GACrC,IAAI8iC,EAAkC,eAArBtiD,KAAKqR,YAA+BrR,KAAK0iD,uBAAyB1iD,KAAK2iD,qBAGxF,OAFA3iD,KAAKuM,WAAavM,KAAK4iD,kBAAkBpjC,EAAa8iC,GACtDtiD,KAAK80C,eACE90C,KAAKuM,YAMhB81C,EAAWjS,UAAUqS,kBAAoB,SAAU7N,EAAe0N,GAC9D,IAAIvM,OAAU97C,EACd,QAAsBA,IAAlB+F,KAAKmS,UAA0BnS,KAAKmS,SAAS1b,OAAS,EACtD,IAAK,IAAIoG,EAAK,EAAGohB,EAAKje,KAAKmS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAI0R,EAAQ0P,EAAGphB,GACf0R,EAAMpB,gBAAkBnN,KAAKkN,YAAclN,KAAKmN,gBAE5CnN,KAAK21C,gBACLpnC,EAAM8Q,QAAQ9Q,EAAMiR,aAGpBjR,EAAM8Q,QAAQu1B,GAElB,IAAI4B,EAAYjoC,EAAMiR,YAAY8wB,QAElCtwC,KAAK6iD,iBAAiBt0C,EAAOioC,GAEH,IAAtBjoC,EAAMrB,cACNspC,EAAY1J,GAAW0J,EAAWjoC,EAAMrB,mBAG5BjT,IAAZ87C,EACAA,EAAUS,EAGLjoC,EAAMylC,kBACPsO,EAAW9L,EAAWT,GAStC,OAJAA,EAAUxE,EAAOnB,UAAUyE,oBAAoB4B,KAAKz2C,KAAM+1C,EAASnB,GACnE50C,KAAKo2C,gBAAgBL,GAErB/1C,KAAKs2C,aAAaP,GACXA,GAEXsM,EAAWjS,UAAUwS,kBAAoB,SAAUpjC,EAAasjC,GAC5D,QAAsB7oD,IAAlB+F,KAAKmS,UAA0BnS,KAAKmS,SAAS1b,OAAS,EAAG,CACzD,IAAIO,OAAI,EACJC,OAAI,EACRD,EAAIgJ,KAAKjE,QAAUyjB,EAAYjnB,MAAQyH,KAAK+gC,MAAM/pC,EAAIgJ,KAAKmM,QAAQvJ,KACnE3L,EAAI+I,KAAKhE,QAAUwjB,EAAYlnB,OAAS0H,KAAK+gC,MAAM9pC,EAAI+I,KAAKmM,QAAQpJ,IACpE,IAAK,IAAIlG,EAAK,EAAGohB,EAAKje,KAAKmS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAI0R,EAAQ0P,EAAGphB,GACX25C,EAAYjoC,EAAMiR,YAAY8wB,QAC9ByS,EAAcvM,EACO,aAArBx2C,KAAKqR,YACLpa,GAAKsX,EAAM5L,OAAOI,IAGlB/L,GAAKuX,EAAM5L,OAAOC,KAEI,IAAtB2L,EAAMrB,cACN61C,EAAcjW,GAAW0J,EAAWjoC,EAAMrB,cAE9C,IAAIjM,EAAS6hD,EAAe9rD,EAAGC,EAAGsX,EAAOvO,KAAMwf,EAAaujC,GAC5DxR,EAAOnB,UAAUmG,0BAA0BE,KAAKz2C,KAAMuO,EAAOtN,GAC7DsN,EAAMgR,QAAQi3B,GAAW,GACA,aAArBx2C,KAAKqR,YACLpa,GAAK8rD,EAAYzqD,OAASiW,EAAM5L,OAAOG,OAGvC9L,GAAK+rD,EAAYxqD,MAAQgW,EAAM5L,OAAOE,OAIlD,OAAO2c,GAEX6iC,EAAWjS,UAAUmS,sBAAwB,SAAUh0C,EAAO2R,GAC1DA,EAAO5nB,OAASmE,KAAKmJ,IAAI2I,EAAMjW,OAAQ4nB,EAAO5nB,QAC9C4nB,EAAO3nB,OAASgW,EAAMhW,OAE1B8pD,EAAWjS,UAAUoS,oBAAsB,SAAUj0C,EAAO2R,GACxDA,EAAO3nB,MAAQkE,KAAKmJ,IAAI2I,EAAMhW,MAAO2nB,EAAO3nB,OAC5C2nB,EAAO5nB,QAAUiW,EAAMjW,QAE3B+pD,EAAWjS,UAAUsS,uBAAyB,SAAU1rD,EAAGC,EAAGsX,EAAO2R,EAAQ8iC,EAAalN,GACtF,IAAI74C,EAAU,EACd,GAAgC,QAA5BsR,EAAMoL,kBACN1c,EAAUhG,EAAIsX,EAAM5L,OAAOI,IAAM+yC,EAAYx9C,OAAS,OAErD,GAAgC,WAA5BiW,EAAMoL,kBAAgC,CAE3C1c,EADmBijB,EAAOlkB,QAAUgnD,EAAY1qD,QAAU,EAAI4nB,EAAO6gB,MAAM9pC,GAClDipB,EAAO/T,QAAQrJ,OAASyL,EAAM5L,OAAOG,OAASgzC,EAAYx9C,OAAS,OAG5F2E,EAAUijB,EAAOlkB,QAAUgnD,EAAY1qD,OAAS4nB,EAAO6gB,MAAM9pC,EAAI+rD,EAAY1qD,OAAS,EAClFiW,EAAM5L,OAAOI,MACb9F,EAAUhG,EAAIsX,EAAM5L,OAAOI,IAAM+yC,EAAYx9C,OAAS,GAG9D,OAAStB,EAAGA,EAAI8+C,EAAYv9C,MAAQ,EAAGtB,EAAGgG,IAE9ColD,EAAWjS,UAAUuS,qBAAuB,SAAU3rD,EAAGC,EAAGsX,EAAO2R,EAAQ64B,EAAYvC,GACnF,IAAIx5C,EAAU,EACd,GAAkC,SAA9BuR,EAAMqL,oBACN5c,EAAUhG,EAAIuX,EAAM5L,OAAOC,KAAO4zC,EAAUj+C,MAAQ,OAEnD,GAAkC,UAA9BgW,EAAMqL,oBAAiC,CAE5C5c,EADkBkjB,EAAOnkB,QAAUg9C,EAAWxgD,OAAS,EAAI2nB,EAAO6gB,MAAM/pC,GAChDkpB,EAAO/T,QAAQtJ,MAAQ0L,EAAM5L,OAAOE,MAAQ2zC,EAAUj+C,MAAQ,OAGtFyE,EAAUkjB,EAAOnkB,QAAUg9C,EAAWxgD,MAAQ2nB,EAAO6gB,MAAM/pC,EAAI+hD,EAAWxgD,MAAQ,EAC9EgW,EAAM5L,OAAOC,OACb5F,EAAUhG,EAAIuX,EAAM5L,OAAOC,KAAO4zC,EAAUj+C,MAAQ,GAG5D,OAASvB,EAAGgG,EAAS/F,EAAGA,EAAIu/C,EAAUl+C,OAAS,IAEnD+pD,EAAWjS,UAAUgG,gBAAkB,SAAUl1B,GAC7C,QAAsBjnB,IAAlB+F,KAAKmS,UAA0BnS,KAAKmS,SAAS1b,OAAS,EACtD,IAAK,IAAIoG,EAAK,EAAGohB,EAAKje,KAAKmS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAI0R,EAAQ0P,EAAGphB,GACU,aAArBmD,KAAKqR,YAC6B,YAA9B9C,EAAMqL,sBACNrL,EAAMiR,YAAYjnB,MAAQ2oB,EAAK3oB,OAASgW,EAAM5L,OAAOC,KAAO2L,EAAM5L,OAAOE,QAI7C,YAA5B0L,EAAMoL,oBACNpL,EAAMiR,YAAYlnB,OAAS4oB,EAAK5oB,QAAUiW,EAAM5L,OAAOI,IAAMwL,EAAM5L,OAAOG,WAM9Fu/C,EAAWjS,UAAUyS,iBAAmB,SAAUt0C,EAAO2S,GACrDA,EAAK5oB,QAAUiW,EAAM5L,OAAOI,IAAMwL,EAAM5L,OAAOG,OAC/Coe,EAAK3oB,OAASgW,EAAM5L,OAAOC,KAAO2L,EAAM5L,OAAOE,OAE5Cw/C,GACT7f,IC9LE+N,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAsBxC9qB,GAA2B,SAAUyrB,GAErC,SAASzrB,IACL,IAAI2vB,EAAmB,OAAXlE,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAKhE,OAJAy1C,EAAMjqB,cACNiqB,EAAMwN,aACNxN,EAAMyN,oBACNzN,EAAM/qB,oBACC+qB,EA4jBX,OAnkBAlF,GAAUzqB,EAAWyrB,GAUrBzrB,EAAUsqB,UAAU5uB,eAAiB,WACjC,OAAOxhB,KAAKmjD,UAGhBr9B,EAAUsqB,UAAU7uB,kBAAoB,WACpC,OAAOvhB,KAAKojD,UAEhBt9B,EAAUsqB,UAAUrsB,UAAY,SAAUxpB,EAAK8oD,EAAOC,EAAUC,EAASj8B,GAErE,GAAItnB,KAAK8d,KAAKrnB,QAAU4sD,EAAO,CAC3B,IAAIxgC,EAAM7iB,KAAK8d,KAAKulC,GACpB,GAAIxgC,EAAI9E,MAAMtnB,OAAS6sD,EAAU,CAC7Bh8B,EAAaA,GAAc,EAC3Bi8B,EAAUA,GAAW,EACrB,IAAIp9B,EAAOtD,EAAI9E,MAAMulC,GACrBn9B,EAAKmB,WAAa7qB,KAAKmJ,IAAI0hB,EAAYnB,EAAKmB,YAC5CnB,EAAKo9B,QAAU9mD,KAAKmJ,IAAI29C,EAASp9B,EAAKo9B,SACtC,IAAIx2C,EAAS,IAAIy2C,IACjBz2C,EAASxS,GACF8oD,MAAQA,EACft2C,EAAOu2C,SAAWA,EAClBv2C,EAAOua,WAAaA,EACpBtnB,KAAKwrB,WAAWze,EAAOlN,IAAMkN,EAC7B/M,KAAKyjD,gBAAgB12C,EAAQoZ,MAyBzCL,EAAUsqB,UAAUqT,gBAAkB,SAAUlpD,EAAK4rB,GAC5CA,EAAKhU,WACNgU,EAAKhU,aAGT5X,EAAI2F,MAAM8Y,YAAc,QACxBze,EAAI2F,MAAM+Y,YAAc,EACxB1e,EAAI2F,MAAM6Y,KAAO,QACjBoN,EAAKhU,SAASrb,KAAKyD,IAGvBurB,EAAUsqB,UAAUsT,iBAAmB,SAAU3nD,EAASC,EAASzD,EAAOD,GACtE0H,KAAKjE,QAAUA,EACfiE,KAAKhE,QAAUA,EACfgE,KAAKzH,MAAQA,EACbyH,KAAK1H,OAASA,GAGlBwtB,EAAUsqB,UAAUxsB,eAAiB,SAAU9F,EAAM1B,GACjDpc,KAAKmjD,SAAWrlC,EAChB9d,KAAKojD,SAAWhnC,EAChBpc,KAAKmS,YACLnS,KAAK8d,KAAO9d,KAAK8d,SACjB,IAAK,IAAIpnB,EAAI,EAAGA,EAAIonB,EAAKrnB,OAAQC,IAAK,CAClC,IAAIitD,EAAU7lC,EAAKpnB,GACfmsB,EAAM,IAAI+gC,GACd/gC,EAAI9E,SACJ,IAAI8lC,EAAc,IAAIx+B,GAEtBw+B,EAAYtrD,MAAQyH,KAAKzH,MACzB,IAAIurD,EAAY9jD,KAAKojD,eACHnpD,IAAd6pD,GAA2BA,EAAUrtD,OAAS,KAC9CqtD,GAAaD,IAEjB7jD,KAAK+jD,aAAaD,EAAWH,EAAS9gC,GACtC7iB,KAAK8d,KAAKhnB,KAAK+rB,KAIvBiD,EAAUsqB,UAAU2T,aAAe,SAAU3nC,EAASunC,EAAS9gC,GAC3D,IAAK,IAAIxsB,EAAI,EAAGA,EAAI+lB,EAAQ3lB,OAAQJ,IAAK,CACrC,IAAI2tD,EAAU5nC,EAAQ/lB,GAClB8vB,EAAO,IAAI89B,GACf99B,EAAKhU,YACLnS,KAAKijD,UAAUlqC,KAAO,OACtB/Y,KAAKijD,UAAUjqC,YAAc,OAC7BmN,EAAKtmB,GAAKua,KACV+L,EAAKjmB,MAAQF,KAAKijD,UAClB98B,EAAKuE,iBAAmBvE,EAAKtH,SAAWmlC,EAAQzrD,MAChD4tB,EAAKwE,kBAAoBxE,EAAK9L,UAAYspC,EAAQrrD,OAClDuqB,EAAI9E,MAAMjnB,KAAKqvB,GACfnmB,KAAKmS,SAASrb,KAAKqvB,KAI3BL,EAAUsqB,UAAU8T,cAAgB,WAIhC,IAAK,IAHDpmC,EAAO9d,KAAK8d,SACZqmC,EAAkB,EAClBC,EAAiB,EACZ1tD,EAAI,EAAGA,EAAIonB,EAAKrnB,OAAQC,IAAK,CAClC,IAAImsB,EAAM7iB,KAAK8d,KAAKpnB,GACpB0tD,EAAiB,EACjB,IAAK,IAAI/tD,EAAI,EAAGA,EAAIwsB,EAAI9E,MAAMtnB,OAAQJ,IAElC,GADA+tD,GAAkBvhC,EAAI9E,MAAM1nB,GAAGq0B,iBAC3Br0B,IAAMwsB,EAAI9E,MAAMtnB,OAAS,IACrBuJ,KAAKzH,OAASyH,KAAKzH,QAAU6rD,IAC7BvhC,EAAI9E,MAAM1nB,GAAGq0B,kBAAqB1qB,KAAKzH,MAAQ6rD,EAC/CvhC,EAAI9E,MAAM1nB,GAAGwoB,SAAWgE,EAAI9E,MAAM1nB,GAAGq0B,iBACjC7H,EAAI9E,MAAM1nB,GAAG8b,UAAY0Q,EAAI9E,MAAM1nB,GAAG8b,SAAS1b,SAC/CosB,EAAI9E,MAAM1nB,GAAG8b,SAAS,GAAG5Z,MAAQsqB,EAAI9E,MAAM1nB,GAAGq0B,kBAElD1qB,KAAKojD,SAAS/sD,GAAGkC,MAAQsqB,EAAI9E,MAAM1nB,GAAGq0B,kBAE1Cy5B,GAAmBthC,EAAI9E,MAAM1nB,GAAGs0B,kBAC5Bj0B,IAAMonB,EAAKrnB,OAAS,GAChBuJ,KAAK1H,QAAU0H,KAAK1H,SAAW6rD,GAAiB,CAChD,IAAI7rD,EAAU0H,KAAK1H,OAAS6rD,EAC5B,GAAI7rD,EAAS,EAAG,CACZ,IAAK,IAAIkrB,EAAI,EAAGA,EAAIX,EAAI9E,MAAMtnB,OAAQ+sB,IAClCX,EAAI9E,MAAMyF,GAAGmH,mBAAqBryB,EAClCuqB,EAAI9E,MAAMyF,GAAGnJ,UAAYwI,EAAI9E,MAAMyF,GAAGmH,kBAAoB9H,EAAI9E,MAAMyF,GAAGmH,kBACnE9H,EAAI9E,MAAMyF,GAAGrR,UAAY0Q,EAAI9E,MAAMyF,GAAGrR,SAAS1b,SAC/CosB,EAAI9E,MAAMyF,GAAGrR,SAAS,GAAG7Z,OAASuqB,EAAI9E,MAAMyF,GAAGmH,mBAGvD3qB,KAAKmjD,SAASzsD,GAAG4B,QAAUA,MASvDwtB,EAAUsqB,UAAUxzB,gBAAkB,SAAUymC,EAAO/qD,EAAQ+rD,EAAiBl4C,GAC5E,IAAI0W,EAAM7iB,KAAK8d,KAAKulC,GACpBrjD,KAAKmjD,SAASE,GAAO/qD,OAASA,OACV2B,IAAhB+F,KAAK1H,SACL0H,KAAK1H,QAAUA,EAASuqB,EAAI9E,MAAM,GAAG4M,mBAEzC,IAAK,IAAIj0B,EAAI,EAAGA,EAAImsB,EAAI9E,MAAMtnB,OAAQC,IAClCmsB,EAAI9E,MAAMrnB,GAAGi0B,kBAAoB9H,EAAI9E,MAAMrnB,GAAG2jB,UAAY/hB,EACtDuqB,EAAI9E,MAAMrnB,GAAGyb,UAAY0Q,EAAI9E,MAAMrnB,GAAGyb,SAAS1b,SAC/CosB,EAAI9E,MAAMrnB,GAAGyb,SAAS,GAAG7Z,OAASA,EAClC0H,KAAKskD,eAAezhC,EAAI9E,MAAMrnB,GAAGyb,SAAS,KAMlD,GAHAnS,KAAKkjD,iBAAiBG,GAAS/qD,EAC/B0H,KAAKqf,QAAQ,IAAIC,GAAKtf,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAKuf,QAAQvf,KAAKwf,aACd6kC,EAAiB,CACjB,IAAIhqC,OAAyBpgB,IAAZkS,EAAyBnM,KAAKukD,mCAAmClB,EAAOl3C,GACrFnM,KAAKwkD,oBAAoBnB,GACzBhpC,EAAY/hB,GACZ0H,KAAK4c,gBAAgBymC,EAAOhpC,GAAW,KAInDyL,EAAUsqB,UAAUkU,eAAiB,SAAU7iC,GAC3C,GAAIA,EAAOtP,UAAYsP,EAAOtP,SAAS1b,OAEnC,IAAK,IADD0b,EAAWsP,EAAOtP,SACbzb,EAAI,EAAGA,EAAIyb,EAAS1b,OAAQC,IAC7Byb,EAASzb,aAAc4tB,IACvBnS,EAASzb,GAAG+tB,qBAEZtS,EAASzb,aAAcirB,IACvB3hB,KAAKskD,eAAenyC,EAASzb,KAM7CovB,EAAUsqB,UAAU/zB,kBAAoB,SAAUooC,EAAOlsD,EAAO8rD,EAAiBl4C,GAC7EnM,KAAKojD,SAASqB,GAAOlsD,MAAQA,OACV0B,IAAf+F,KAAKzH,QACLyH,KAAKzH,OAASA,EAAQyH,KAAK8d,KAAK9d,KAAK8d,KAAKrnB,OAAS,GAAGsnB,MAAM0mC,GAAO/5B,kBAEvE,IAAK,IAAIh0B,EAAI,EAAGA,EAAIsJ,KAAK8d,KAAKrnB,OAAQC,IAClCsJ,KAAKskD,eAAetkD,KAAK8d,KAAKpnB,GAAGqnB,MAAM,IACvC/d,KAAK8d,KAAKpnB,GAAGqnB,MAAM0mC,GAAO/5B,iBAAmB1qB,KAAK8d,KAAKpnB,GAAGqnB,MAAM0mC,GAAO5lC,SAAWtmB,EAC9EyH,KAAK8d,KAAKpnB,GAAGqnB,MAAM0mC,GAAOtyC,UAAYnS,KAAK8d,KAAKpnB,GAAGqnB,MAAM0mC,GAAOtyC,SAAS1b,SACzEuJ,KAAK8d,KAAKpnB,GAAGqnB,MAAM0mC,GAAOtyC,SAAS,GAAG5Z,MAAQA,GAMtD,GAHAyH,KAAK0qB,iBAAiB+5B,GAASlsD,EAC/ByH,KAAKqf,QAAQ,IAAIC,GAAKtf,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAKuf,QAAQvf,KAAKwf,aACd6kC,EAAiB,CACjB,IAAIxlC,OAAwB5kB,IAAZkS,EAAyBnM,KAAK0kD,kCAAkCD,EAAOt4C,GACnFnM,KAAK2kD,mBAAmBF,GACxB5lC,EAAWtmB,GACXyH,KAAKqc,kBAAkBooC,EAAO5lC,GAAU,KAIpDiH,EAAUsqB,UAAUuU,mBAAqB,SAAUC,GAI/C,IAAK,IAHD1rC,EACA3gB,EACA4tB,EACKzvB,EAAI,EAAGA,EAAIsJ,KAAK8d,KAAKrnB,OAAQC,IAEV,KADxByvB,EAAOnmB,KAAK8d,KAAKpnB,GAAGqnB,MAAM6mC,IACjBt9B,aACL/uB,EAAS4tB,EAAKnZ,YAAYzU,MAAQ4tB,EAAK3kB,OAAOjJ,QAChB,IAAzB4tB,EAAKhU,SAAS1b,aAA8CwD,IAA9BksB,EAAKhU,SAAS,GAAG+G,UAA2BiN,EAAKnZ,YAAYzU,MAAQ4tB,EAAK3kB,OAAOjJ,MAEhH2gB,EADAA,EACYA,EAAW3gB,EAASA,EAAQ2gB,EAG7B3gB,GAIvB,OAAO2gB,GAEX4M,EAAUsqB,UAAUoU,oBAAsB,SAAUroC,GAKhD,IAAK,IAJD2C,EACAxmB,EACA6tB,EACAtD,EAAM7iB,KAAK8d,KAAK3B,GACXzlB,EAAI,EAAGA,EAAImsB,EAAI9E,MAAMtnB,OAAQC,IAElC4B,GADA6tB,EAAOtD,EAAI9E,MAAMrnB,IACFsW,YAAY1U,OAAS6tB,EAAK3kB,OAAOlJ,OAAU6tB,EAAKnZ,YAAY1U,OAAS6tB,EAAK3kB,OAAOlJ,OAE5FwmB,EADAA,EACaA,EAAYxmB,EAAUA,EAASwmB,EAGhCxmB,EAGpB,OAAOwmB,GAEXgH,EAAUsqB,UAAUyU,iCAAmC,SAAU1+B,EAAM2O,EAAQ3oB,EAAS24C,GACpF,IAAIC,EACAtjC,EAEJ,IADAA,EAAU0E,GAAQA,EAAKhU,SAAS1b,OAAS,EAAK0vB,EAAKhU,SAAS,QAAKlY,IAC/B,IAApBksB,EAAKmB,WAAkB,CACjCy9B,EAAwB,UAAXjwB,EAAsBrT,EAAOjgB,OAAOqB,MAAQ4e,EAAOjgB,OAAOsB,OAClEgiD,IACDA,EAAsB,UAAXhwB,EAAsBrT,EAAOjgB,OAAOjJ,MAAQkpB,EAAOjgB,OAAOlJ,QAEzE,IAAK,IAAIjC,EAAI,EAAGA,EAAIorB,EAAOtP,SAAS1b,OAAQJ,IAAK,CAC7C,IAAI8b,EAAWsP,EAAOtP,SAAS9b,GAC/B,GAAI8b,aAAoBwP,KACmB,IAAnCxP,EAAStS,GAAGygB,QAAQ,UAAkB,CACtC,IAAI9e,GAAsB,UAAXszB,EAAsB3iB,EAAS3Q,OAAOqB,MAAQsP,EAAS3Q,OAAOsB,QAAUqJ,EACvF,GAAI3K,EAASujD,EAAW,CACpB,IAAI7jC,EAAQ1f,EAASujD,GAA0B,UAAXjwB,EAAsBrT,EAAOjgB,OAAOjJ,MAAQkpB,EAAOjgB,OAAOlJ,QAC1FwsD,IACAA,EAAWA,EAAU5jC,EAAQA,EAAO4jC,MAO5D,OAAOA,GAEXh/B,EAAUsqB,UAAUsU,kCAAoC,SAAUE,EAAUz4C,GAIxE,IAEK,IALD+M,EAEAiN,EAGKzvB,EAAI,EAAGA,EAAIsJ,KAAK8d,KAAKrnB,OAAQC,IAClCyvB,EAAOnmB,KAAK8d,KAAKpnB,GAAGqnB,MAAM6mC,GAC1B1rC,EAAWlZ,KAAK6kD,iCAAiC1+B,EAAM,QAASha,EAAS+M,GAE7E,OAAOA,GAEX4M,EAAUsqB,UAAUmU,mCAAqC,SAAUpoC,EAAUhQ,GAOzE,IAAK,IAND2S,EAEAqH,EAGAtD,EAAM7iB,KAAK8d,KAAK3B,GACXzlB,EAAI,EAAGA,EAAImsB,EAAI9E,MAAMtnB,OAAQC,IAClCyvB,EAAOtD,EAAI9E,MAAMrnB,GACjBooB,EAAY9e,KAAK6kD,iCAAiC1+B,EAAM,SAAUha,EAAS2S,GAE/E,OAAOA,GAGXgH,EAAUsqB,UAAU9nB,OAAS,SAAU+6B,EAAOM,EAAS59B,GAC/C/lB,KAAKmjD,SAAS1sD,OAAS,EACvBuJ,KAAKmjD,SAAS58C,OAAO88C,EAAO,EAAGM,GAG/B3jD,KAAKmjD,SAASrsD,KAAK6sD,GAEvB,IAAI9gC,EAAM,IAAI+gC,GACd/gC,EAAI9E,UACc,IAAIsH,IACV9sB,MAAQyH,KAAKzH,MACzB,IAAI6jB,EAAUpc,KAAKojD,SACnBpjD,KAAK+jD,aAAa3nC,EAASunC,EAAS9gC,GAChCwgC,EAAQrjD,KAAK8d,KAAKrnB,OAAS,EAC3BuJ,KAAK8d,KAAKhnB,KAAK+rB,GAGf7iB,KAAK8d,KAAKvX,OAAO88C,EAAO,EAAGxgC,GAE3BkD,IACA/lB,KAAKqf,QAAQ,IAAIC,GAAKtf,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAKuf,QAAQvf,KAAKwf,eAI1BsG,EAAUsqB,UAAU5nB,UAAY,SAAU86B,EAAU0B,EAAQj/B,GACxD,IAAIlD,EACA8gC,EACAK,EACA79B,EACArI,EAAO9d,KAAK8d,KACZ9d,KAAKojD,SAAS3sD,OAAS,EACvBuJ,KAAKojD,SAAS78C,OAAO+8C,EAAU,EAAG0B,GAGlChlD,KAAKojD,SAAStsD,KAAKkuD,QAEJ/qD,IAAf+F,KAAKzH,QACLyH,KAAKzH,OAASysD,EAAOzsD,OAEzB,IAAK,IAAI7B,EAAI,EAAGA,EAAIonB,EAAKrnB,OAAQC,IAC7BmsB,EAAM/E,EAAKpnB,GACXitD,EAAU3jD,KAAKmjD,SAASzsD,GACxBstD,EAAUgB,GACV7+B,EAAO,IAAI89B,IACN/jD,MAAQF,KAAKijD,UAClB98B,EAAKuE,iBAAmBvE,EAAKtH,SAAWmlC,EAAQzrD,MAChD4tB,EAAKwE,kBAAoBxE,EAAK9L,UAAYspC,EAAQrrD,OAClD6tB,EAAKhU,YACDmxC,EAAWzgC,EAAI9E,MAAMtnB,OAAS,EAC9BosB,EAAI9E,MAAMjnB,KAAKqvB,GAGftD,EAAI9E,MAAMxX,OAAO+8C,EAAU,EAAGn9B,GAElCnmB,KAAKmS,SAASrb,KAAKqvB,GAEnBJ,IACA/lB,KAAKqf,QAAQ,IAAIC,GAAKtf,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAKuf,QAAQvf,KAAKwf,eAI1BsG,EAAUsqB,UAAUziB,UAAY,SAAU01B,GACtC,IAAIl9B,EACAvmB,EAEA+tB,EADO3tB,KAAK8d,KACKulC,GACrBrjD,KAAK1H,QAAU0H,KAAKmjD,SAASE,GAAO/qD,OACpC,IAAK,IAAI5B,EAAI,EAAGA,EAAIi3B,EAAU5P,MAAMtnB,OAAQC,IACxCyvB,EAAOwH,EAAU5P,MAAMrnB,GACvBsJ,KAAKmS,SAAS5L,OAAOvG,KAAKmS,SAASmO,QAAQ6F,GAAO,IAClDvmB,EAAUouB,SAASC,eAAe9H,EAAKtmB,GAAK,mBAC7BD,EAAQqyB,eACnBryB,EAAQqyB,cAAc8M,YAAYn/B,GAG1CI,KAAK8d,KAAKvX,OAAO88C,EAAO,GACxBrjD,KAAKmjD,SAAS58C,OAAO88C,EAAO,GAC5BrjD,KAAKqf,QAAQ,IAAIC,GAAKtf,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAKuf,QAAQvf,KAAKwf,cAGtBsG,EAAUsqB,UAAU5iB,aAAe,SAAU81B,GACzC,IAAIn9B,EACAvmB,EACAke,EAAO9d,KAAK8d,KAChB9d,KAAKzH,OAASyH,KAAKojD,SAASE,GAAU/qD,MACtC,IAAK,IAAI7B,EAAI,EAAGA,EAAIonB,EAAKrnB,OAAQC,IAC7ByvB,EAAOrI,EAAKpnB,GAAGqnB,MAAMulC,GACrBtjD,KAAKmS,SAAS5L,OAAOvG,KAAKmS,SAASmO,QAAQ6F,GAAO,IAClDvmB,EAAUouB,SAASC,eAAe9H,EAAKtmB,GAAK,mBAC7BD,EAAQqyB,eACnBryB,EAAQqyB,cAAc8M,YAAYn/B,GAEtCke,EAAKpnB,GAAGqnB,MAAMxX,OAAO+8C,EAAU,GAEnCtjD,KAAKojD,SAAS78C,OAAO+8C,EAAU,GAC/BtjD,KAAKqf,QAAQ,IAAIC,GAAKtf,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAKuf,QAAQvf,KAAKwf,cAGtBsG,EAAUsqB,UAAU/oB,eAAiB,SAAU49B,EAAcC,GAC9CllD,KAAK8d,KAAhB,IACInN,EAAO3Q,KAAK8d,KAAKmnC,GACrBjlD,KAAK8d,KAAKvX,OAAO0+C,EAAc,GAC/BjlD,KAAK8d,KAAKvX,OAAO2+C,EAAU,EAAGv0C,GAC9B,IAAIw0C,EAAUnlD,KAAKmjD,SAAS8B,GAC5BjlD,KAAKmjD,SAAS58C,OAAO0+C,EAAc,GACnCjlD,KAAKmjD,SAAS58C,OAAO2+C,EAAU,EAAGC,GAClCnlD,KAAKqf,QAAQ,IAAIC,GAAKtf,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAKuf,QAAQvf,KAAKwf,cAGtBsG,EAAUsqB,UAAU7oB,kBAAoB,SAAUtB,EAAeg/B,EAAcC,GAI3E,IAAK,IAHDv0C,EACAwV,EACAi/B,EACK1uD,EAAIuvB,EAAevvB,EAAIsJ,KAAK8d,KAAKrnB,OAAQC,IAC9Cia,EAAO3Q,KAAK8d,KAAKpnB,GACjByvB,EAAOnmB,KAAK8d,KAAKpnB,GAAGqnB,MAAMknC,GAC1Bt0C,EAAKoN,MAAMxX,OAAO0+C,EAAc,GAChCt0C,EAAKoN,MAAMxX,OAAO2+C,EAAU,EAAG/+B,GAEnC,IAAIk/B,EAAUrlD,KAAKojD,SAAS6B,GAC5BjlD,KAAKojD,SAAS78C,OAAO0+C,EAAc,GACnCjlD,KAAKojD,SAAS78C,OAAO2+C,EAAU,EAAGG,GAClCD,EAAWplD,KAAK0qB,iBAAiBu6B,GACjCjlD,KAAK0qB,iBAAiBnkB,OAAO0+C,EAAc,GAC3CjlD,KAAK0qB,iBAAiBnkB,OAAO2+C,EAAU,EAAGE,GAC1CplD,KAAKqf,QAAQ,IAAIC,GAAKtf,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAKuf,QAAQvf,KAAKwf,cAGtBsG,EAAUsqB,UAAU/wB,QAAU,SAAUu1B,GACpC,IAAImB,OAAU97C,EACd,QAAkBA,IAAd+F,KAAK8d,MAAsB9d,KAAK8d,KAAKrnB,OAAS,EAAG,CACjD,IAAIC,EAAI,EACJL,EAAI,EACR0/C,EAAU,IAAIz2B,GAAK,EAAG,GACtBtf,KAAKkkD,gBACL,IAAK,IAAIrnD,EAAK,EAAGohB,EAAKje,KAAK8d,KAAMjhB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAEnDxG,EAAI,EACJ,IAAK,IAAI8kC,EAAK,EAAGC,GAFbvY,EAAM5E,EAAGphB,IAEakhB,MAAOod,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACnD,IACIja,GADAiF,EAAOiV,EAAGD,IACE9b,QAAQ,IAAIC,GAAK6G,EAAKuE,iBAAkBvE,EAAKwE,oBACxC,IAAjBxE,EAAKo9B,UACK,IAANltD,QAAwC4D,IAA7B+F,KAAKkjD,iBAAiBxsD,GACjCsJ,KAAKkjD,iBAAiBxsD,GAAKwqB,EAAK5oB,OAGhC0H,KAAKkjD,iBAAiBxsD,GAAK+F,KAAKmJ,IAAIsb,EAAK5oB,OAAQ0H,KAAKkjD,iBAAiBxsD,KAGvD,IAApByvB,EAAKmB,aACK,IAAN5wB,QAAwCuD,IAA7B+F,KAAK0qB,iBAAiBr0B,GACjC2J,KAAK0qB,iBAAiBr0B,GAAK6qB,EAAK3oB,MAGhCyH,KAAK0qB,iBAAiBr0B,GAAKoG,KAAKmJ,IAAIsb,EAAK3oB,MAAOyH,KAAK0qB,iBAAiBr0B,IAEtEK,IAAMsJ,KAAK8d,KAAKrnB,OAAS,IACzBs/C,EAAQx9C,OAASyH,KAAK0qB,iBAAiBr0B,KAG/CA,IAEJ0/C,EAAQz9C,QAAU0H,KAAKkjD,iBAAiBxsD,GACxCA,IAGJA,EAAIL,EAAI,EAER,IAAK,IADD8lB,EAAW,EACNmpC,EAAK,EAAGC,EAAKvlD,KAAK8d,KAAMwnC,EAAKC,EAAG9uD,OAAQ6uD,IAAM,CACnD,IAAIziC,EACJxsB,EAAI,EAEJ,IAAK,IADDmvD,EAAY,EACPC,EAAK,EAAGC,GAHb7iC,EAAM0iC,EAAGD,IAGavnC,MAAO0nC,EAAKC,EAAGjvD,OAAQgvD,IAAM,CACnD,IAAIt/B,EACJ,GAAwB,KADpBA,EAAOu/B,EAAGD,IACLn+B,WAAkB,CACvBnB,EAAK3G,YAAYjnB,MAAQ,EACzB,IAAK,IAAIk5B,EAAQ,EAAGA,EAAQtL,EAAKmB,WAAYmK,IACpCA,EAAQp7B,EAAKwsB,EAAI9E,MAAMtnB,SACxB0vB,EAAK3G,YAAYjnB,OAASyH,KAAK0qB,iBAAiB+G,EAAQp7B,GACxD8vB,EAAKtH,SAAWsH,EAAK3G,YAAYjnB,MACjC4tB,EAAK9G,QAAQ8G,EAAK3G,cAG1BnpB,SAGA8vB,EAAK3G,YAAYjnB,MAAQyH,KAAK0qB,iBAAiB86B,GAC/Cr/B,EAAK9G,QAAQ8G,EAAK3G,aAEtB,GAAqB,IAAjB2G,EAAKo9B,QAAe,CACpBp9B,EAAK3G,YAAYlnB,OAAS,EAC1B,IAASm5B,EAAQ,EAAGA,EAAQtL,EAAKo9B,QAAS9xB,IACjCA,EAAQtV,EAAYnc,KAAK8d,KAAKrnB,SAC/B0vB,EAAK3G,YAAYlnB,QAAU0H,KAAKkjD,iBAAiBzxB,EAAQtV,GACzDgK,EAAK9L,UAAY8L,EAAK3G,YAAYlnB,OAClC6tB,EAAK9G,QAAQ8G,EAAK3G,mBAK1B2G,EAAK3G,YAAYlnB,OAAS0H,KAAKkjD,iBAAiB/mC,GAChDgK,EAAK9G,QAAQ8G,EAAK3G,aAEtB9oB,IACA8uD,IAEJrpC,KAQR,YALgBliB,IAAZ87C,IACAA,EAAUxE,EAAOnB,UAAUyE,oBAAoB4B,KAAKz2C,KAAM+1C,EAASnB,IAEvErD,EAAOnB,UAAUgG,gBAAgBK,KAAKz2C,KAAM+1C,GAC5C/1C,KAAKwf,YAAcu2B,EACZA,GAGXjwB,EAAUsqB,UAAU7wB,QAAU,SAAUC,EAAammC,GACjD,IAAItvD,EAAI,EACJK,EAAI,EACR,QAAkBuD,IAAd+F,KAAK8d,MAAsB9d,KAAK8d,KAAKrnB,OAAS,EAAG,CAIjD,IAAK,IAHDO,EAAIgJ,KAAKjE,QAAUyjB,EAAYjnB,MAAQyH,KAAK+gC,MAAM/pC,EAClDC,EAAI+I,KAAKhE,QAAUwjB,EAAYlnB,OAAS0H,KAAK+gC,MAAM9pC,EACnD2uD,EAAQ5uD,EACH6F,EAAK,EAAGohB,EAAKje,KAAK8d,KAAMjhB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAEnD+oD,EAAQ5uD,EACRX,EAAI,EACJ,IAAK,IAAI8kC,EAAK,EAAGC,GAHbvY,EAAM5E,EAAGphB,IAGakhB,MAAOod,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACnD,IAAIhV,EAAOiV,EAAGD,GACV0qB,EAAYppD,KAAKmJ,IAAI5F,KAAK0qB,iBAAiBr0B,GAAI8vB,EAAK3G,YAAYjnB,OAChEutD,EAAarpD,KAAKmJ,IAAI5F,KAAKkjD,iBAAiBxsD,GAAIyvB,EAAK3G,YAAYlnB,QACrE6tB,EAAKpqB,QAAU6pD,EAAQC,EAAY1/B,EAAK4a,MAAM/pC,EAC9CmvB,EAAKnqB,QAAU/E,EAAI6uD,EAAa3/B,EAAK4a,MAAM9pC,EAC3C2uD,GAAS5lD,KAAK0qB,iBAAiBr0B,GAC/B8vB,EAAK5G,QAAQ,IAAID,GAAKumC,EAAWC,IACjCzvD,IAEJY,GAAK+I,KAAKkjD,iBAAiBxsD,GAC3BA,IAEJ,GAAIivD,EAAU,CAGNx/B,OAAO,EAAX,IACItD,OAAM,EACNW,OAAI,EACJuiC,OAAI,EACJC,OAAa,EACjB,IAAKtvD,EAAI,EAAGA,EAAIsJ,KAAK8d,KAAKrnB,OAAQC,IAE9B,IADAmsB,EAAM7iB,KAAK8d,KAAKpnB,GACXL,EAAI,EAAGA,EAAIwsB,EAAI9E,MAAMtnB,OAAQJ,IAM9B,IALA8vB,EAAOtD,EAAI9E,MAAM1nB,IACRixB,WAAa,GAElBtnB,KAAKmS,SAAS5L,OAAQvG,KAAKmS,SAASmO,QAAQ6F,GAAS,EAAGA,EAAKmB,WAAa,GAE1EnB,EAAKo9B,QAAU,EACf,IAAK//B,EAAI9sB,EAAGqvD,EAAI,EAAKviC,EAAI2C,EAAKo9B,QAAU,EAAKvjD,KAAK8d,KAAKrnB,QAAUsvD,EAAI5/B,EAAKo9B,QAAU,EAAI//B,IAAKuiC,IACzFC,EAAahmD,KAAK8d,KAAK0F,EAAI,GAAGzF,MAAM1nB,GAEpC2J,KAAKmS,SAAS5L,OAAOvG,KAAKmS,SAASmO,QAAQ0lC,GAAa,IAShF,OAFAhmD,KAAKuM,WAAaiT,EAClBxf,KAAK80C,eACEt1B,GAEJsG,GACT0c,IAGEpd,GAA+B,WAI/B,OAHA,WACIplB,KAAK1H,YAAS2B,MAMlBorB,GAAkC,WAIlC,OAHA,WACIrlB,KAAKzH,WAAQ0B,MAMjB2pD,GAAyB,WAIzB,OAHA,WACI5jD,KAAK+d,MAAQ,SAMjBkmC,GAA0B,SAAU1S,GAEpC,SAAS0S,IACL,IAAIxO,EAAmB,OAAXlE,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAGhE,OAFAy1C,EAAMnuB,WAAa,EACnBmuB,EAAM8N,QAAU,EACT9N,EAEX,OAPAlF,GAAU0T,EAAU1S,GAOb0S,GACTtiC,IAEE6hC,GAA8B,SAAUjS,GAExC,SAASiS,IACL,IAAI/N,EAAmB,OAAXlE,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAKhE,OAJAy1C,EAAM4N,MAAQ,EACd5N,EAAM6N,SAAW,EACjB7N,EAAM8N,QAAU,EAChB9N,EAAMnuB,WAAa,EACZmuB,EAEX,OATAlF,GAAUiT,EAAcjS,GASjBiS,GACTp/B,IC5oBEmsB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAkC5Dk4C,GAAe,SAAU1rD,GACzB,OAAQA,EAAIsB,MACR,IAAK,QACD,OAAOw7B,GACX,IAAK,OACD,OAAOC,GACX,IAAK,OACD,OAAON,GACX,IAAK,QACD,OAAOG,GACX,IAAK,OACD,OAAOC,GACX,IAAK,OACD,OAAOG,GACX,IAAK,SACD,OAAON,GACX,IAAK,OACD,OAAOC,GACX,IAAK,cACD,OAAOM,GACX,IAAK,gBACD,OAAOC,GACX,IAAK,WACD,OAAOC,GACX,QACI,OAAOL,KAMf6uB,GAAuB,SAAU3U,GAEjC,SAAS2U,IACL,OAAkB,OAAX3U,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAK/D,OAPAuwC,GAAU2V,EAAO3U,GAIjBT,IACIoB,WAAS,UACVgU,EAAM9V,UAAW,YAAQ,GACrB8V,GACT/T,iBAKEnb,GAAsB,SAAUua,GAEhC,SAASva,IACL,OAAkB,OAAXua,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAe/D,OAjBAuwC,GAAUvZ,EAAMua,GAQhBva,EAAKoZ,UAAU6B,aAAe,WAC1B,MAAO,QAEXnB,IACIoB,WAAS,SACVlb,EAAKoZ,UAAW,YAAQ,GAC3BU,IACIoB,WAAS,KACVlb,EAAKoZ,UAAW,YAAQ,GACpBpZ,GACTkvB,IAKEjvB,GAAwB,SAAUsa,GAElC,SAASta,IACL,OAAkB,OAAXsa,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAkB/D,OApBAuwC,GAAUtZ,EAAQsa,GAQlBta,EAAOmZ,UAAU6B,aAAe,WAC5B,MAAO,UAEXnB,IACIoB,WAAS,WACVjb,EAAOmZ,UAAW,YAAQ,GAC7BU,IACIoB,WAAS,KACVjb,EAAOmZ,UAAW,eAAW,GAChCU,IACIoB,WAAS,YACVjb,EAAOmZ,UAAW,aAAS,GACvBnZ,GACTivB,IAKEhvB,GAAsB,SAAUqa,GAEhC,SAASra,IACL,OAAkB,OAAXqa,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAe/D,OAjBAuwC,GAAUrZ,EAAMqa,GAQhBra,EAAKkZ,UAAU6B,aAAe,WAC1B,MAAO,QAEXnB,IACIoB,WAAS,SACVhb,EAAKkZ,UAAW,YAAQ,GAC3BU,IACIoB,WAAS,KACVhb,EAAKkZ,UAAW,eAAW,GACvBlZ,GACTgvB,IAKE/uB,GAAuB,SAAUoa,GAEjC,SAASpa,IACL,OAAkB,OAAXoa,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAqB/D,OAvBAuwC,GAAUpZ,EAAOoa,GAQjBpa,EAAMiZ,UAAU6B,aAAe,WAC3B,MAAO,SAEXnB,IACIoB,WAAS,UACV/a,EAAMiZ,UAAW,YAAQ,GAC5BU,IACIoB,WAAS,KACV/a,EAAMiZ,UAAW,cAAU,GAC9BU,IACIoB,WAAS,KACV/a,EAAMiZ,UAAW,aAAS,GAC7BU,IACIoB,WAAS,SACV/a,EAAMiZ,UAAW,aAAS,GACtBjZ,GACT+uB,IAKE9uB,GAAsB,SAAUma,GAEhC,SAASna,IACL,OAAkB,OAAXma,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAkB/D,OApBAuwC,GAAUnZ,EAAMma,GAQhBna,EAAKgZ,UAAU6B,aAAe,WAC1B,MAAO,QAEXnB,IACIoB,WAAS,SACV9a,EAAKgZ,UAAW,YAAQ,GAC3BU,IACIoB,WAAS,KACV9a,EAAKgZ,UAAW,eAAW,GAC9BU,IACIyH,aAAYpD,KACb/d,EAAKgZ,UAAW,cAAU,GACtBhZ,GACT8uB,IAKE7uB,GAA4B,SAAUka,GAEtC,SAASla,IACL,OAAkB,OAAXka,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAqB/D,OAvBAuwC,GAAUlZ,EAAYka,GAQtBla,EAAW+Y,UAAU6B,aAAe,WAChC,MAAO,cAEXnB,IACIoB,WAAS,UACV7a,EAAW+Y,UAAW,YAAQ,GACjCU,IACIoB,WAAS,cACV7a,EAAW+Y,UAAW,aAAS,GAClCU,IACIoB,WAAS,IACV7a,EAAW+Y,UAAW,oBAAgB,GACzCU,IACIuE,gBAAe9vC,KAChB8xB,EAAW+Y,UAAW,cAAU,GAC5B/Y,GACT6uB,IAKE5uB,GAA2B,SAAUia,GAErC,SAASja,IACL,OAAkB,OAAXia,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAe/D,OAjBAuwC,GAAUjZ,EAAWia,GAQrBja,EAAU8Y,UAAU6B,aAAe,WAC/B,MAAO,aAEXnB,IACIoB,WAAS,SACV5a,EAAU8Y,UAAW,YAAQ,GAChCU,IACIoB,WAAS,eACV5a,EAAU8Y,UAAW,aAAS,GAC1B9Y,GACT4uB,IAKEruB,GAA6B,SAAU0Z,GAEvC,SAAS1Z,IACL,OAAkB,OAAX0Z,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAY/D,OAdAuwC,GAAU1Y,EAAa0Z,GAQvB1Z,EAAYuY,UAAU6B,aAAe,WACjC,MAAO,eAEXnB,IACIoB,WAAS,SACVra,EAAYuY,UAAW,YAAQ,GAC3BvY,GACTsa,iBAKEra,GAAgC,SAAUyZ,GAE1C,SAASzZ,IACL,OAAkB,OAAXyZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAe/D,OAjBAuwC,GAAUzY,EAAgByZ,GAQ1BzZ,EAAesY,UAAU6B,aAAe,WACpC,MAAO,kBAEXnB,IACIoB,WAAS,SACVpa,EAAesY,UAAW,YAAQ,GACrCU,IACIoB,YAAS,IACVpa,EAAesY,UAAW,kBAAc,GACpCtY,GACTqa,iBAKEgU,GAA0B,SAAU5U,GAEpC,SAAS4U,IACL,OAAkB,OAAX5U,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAU4V,EAAU5U,GAIpBT,IACIoB,WAAS,SACViU,EAAS/V,UAAW,YAAQ,GAC/BU,IACIoB,WAAS,SACViU,EAAS/V,UAAW,YAAQ,GAC/BU,IACIoB,YAAS,IACViU,EAAS/V,UAAW,YAAQ,GAC/BU,IACIoB,YAAS,IACViU,EAAS/V,UAAW,oBAAgB,GAChC+V,GACThU,iBAKEpa,GAA2B,SAAUwZ,GAErC,SAASxZ,IACL,OAAkB,OAAXwZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAe/D,OAjBAuwC,GAAUxY,EAAWwZ,GAQrBxZ,EAAUqY,UAAU6B,aAAe,WAC/B,MAAO,aAEXnB,IACIoB,WAAS,UACVna,EAAUqY,UAAW,aAAS,GACjCU,IACIoB,WAAS,SACVna,EAAUqY,UAAW,eAAW,GAC5BrY,GACToa,iBAKEna,GAA8B,SAAUuZ,GAExC,SAASvZ,IACL,OAAkB,OAAXuZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA6C/D,OA/CAuwC,GAAUvY,EAAcuZ,GAQxBvZ,EAAaoY,UAAU6B,aAAe,WAClC,MAAO,gBAEXnB,IACIoB,WAAS,SACVla,EAAaoY,UAAW,eAAW,GACtCU,IACIoB,WAAS,UACVla,EAAaoY,UAAW,aAAS,GACpCU,IACIoB,WAAS,KACVla,EAAaoY,UAAW,UAAM,GACjCU,IACIyH,aAAYhzC,KACbyyB,EAAaoY,UAAW,cAAU,GACrCU,IACIuE,gBAAe/hC,KAChB0kB,EAAaoY,UAAW,mBAAe,GAC1CU,IACIuE,gBAAezd,KAChBI,EAAaoY,UAAW,aAAS,GACpCU,IACIoB,cACDla,EAAaoY,UAAW,aAAS,GACpCU,IACIoB,cACDla,EAAaoY,UAAW,cAAU,GACrCU,IACIyH,aAAYpD,KACbnd,EAAaoY,UAAW,cAAU,GACrCU,IACIoB,WAAS,WACVla,EAAaoY,UAAW,2BAAuB,GAClDU,IACIoB,WAAS,WACVla,EAAaoY,UAAW,yBAAqB,GAChDU,IACIoB,YAAS,IACVla,EAAaoY,UAAW,eAAW,GAC/BpY,GACTma,iBAEEiU,GAA2C,SAAU7U,GAErD,SAAS6U,IACL,OAAkB,OAAX7U,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAW/D,OAbAuwC,GAAU6V,EAA2B7U,GAIrCT,IACIyH,WAAU14C,GAAI,UAAWwmD,MAAO,MAAOp2C,QAAUjZ,EAAG,EAAGC,EAAG,KAAS+gC,KACpEouB,EAA0BhW,UAAW,eAAW,GACnDU,IACIyH,WAAU14C,GAAI,UAAWwmD,MAAO,eAAgBC,QAAS,QAASr2C,QAAUjZ,EAAG,IAAMC,EAAG,IAAO+gC,KAChGouB,EAA0BhW,UAAW,eAAW,GACnDU,IACIyH,WAAU14C,GAAI,SAAUwmD,MAAO,eAAgBC,QAAS,SAAUr2C,QAAUjZ,EAAG,IAAMC,EAAG,IAAO+gC,KAChGouB,EAA0BhW,UAAW,cAAU,GAC3CgW,GACTjU,iBAKEoU,GAAgC,SAAUhV,GAE1C,SAASgV,IACL,OAAkB,OAAXhV,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA6B/D,OA/BAuwC,GAAUgW,EAAgBhV,GAI1BT,IACIoB,WAAS,SACVqU,EAAenW,UAAW,YAAQ,GACrCU,IACIoB,YAAS,IACVqU,EAAenW,UAAW,aAAS,GACtCU,IACIoB,WAAS,YACVqU,EAAenW,UAAW,gBAAY,GACzCU,IACIoB,YAAS,IACVqU,EAAenW,UAAW,oBAAgB,GAC7CU,IACIoB,WAAS,SACVqU,EAAenW,UAAW,YAAQ,GACrCU,IACIoB,YAAS,IACVqU,EAAenW,UAAW,iBAAa,GAC1CU,IACIuE,gBAAerd,KAChBuuB,EAAenW,UAAW,cAAU,GACvCU,IACIyH,aAAY6N,KACbG,EAAenW,UAAW,mBAAe,GAC5CU,IACIoB,gBAASj4C,IACVssD,EAAenW,UAAW,iBAAa,GACnCmW,GACTpU,iBAKEla,GAA8B,SAAUsZ,GAExC,SAAStZ,IACL,OAAkB,OAAXsZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAkB/D,OApBAuwC,GAAUtY,EAAcsZ,GAQxBtZ,EAAamY,UAAU6B,aAAe,WAClC,MAAO,gBAEXnB,IACIoB,WAAS,SACVja,EAAamY,UAAW,gBAAY,GACvCU,IACIyH,aAAY4N,KACbluB,EAAamY,UAAW,YAAQ,GACnCU,IACIyH,aAAYgO,KACbtuB,EAAamY,UAAW,kBAAc,GAClCnY,GACTka,iBAKEja,GAAgC,SAAUqZ,GAG1C,SAASrZ,EAAehY,EAAQ8rB,EAAUwM,EAAcC,GACpD,OAAOlH,EAAOkF,KAAKz2C,KAAMkgB,EAAQ8rB,EAAUwM,EAAcC,IAAYz4C,KA2BzE,OA9BAuwC,GAAUrY,EAAgBqZ,GAS1BrZ,EAAekY,UAAU6B,aAAe,WACpC,MAAO,kBAEXnB,IACIoB,WAAS,KACVha,EAAekY,UAAW,YAAQ,GACrCU,IACIoB,WAAS,KACVha,EAAekY,UAAW,UAAM,GACnCU,IACIoB,WAAS,IACVha,EAAekY,UAAW,aAAS,GACtCU,IACIoB,cACDha,EAAekY,UAAW,cAAU,GACvCU,IACIoB,cACDha,EAAekY,UAAW,aAAS,GACtCU,IACIoB,WAAS,IACVha,EAAekY,UAAW,cAAU,GAChClY,GACTia,iBAKE5a,GAA2B,SAAUga,GAErC,SAASha,IACL,OAAkB,OAAXga,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAiC/D,OAnCAuwC,GAAUhZ,EAAWga,GAQrBha,EAAU6Y,UAAU6B,aAAe,WAC/B,MAAO,aAEXnB,IACIoB,WAAS,SACV3a,EAAU6Y,UAAW,YAAQ,GAChCU,IACIoB,WAAS,UACV3a,EAAU6Y,UAAW,aAAS,GACjCU,IACIyH,aAAYxgB,KACbR,EAAU6Y,UAAW,aAAS,GACjCU,IACIyH,aAAY1gB,KACbN,EAAU6Y,UAAW,eAAW,GACnCU,IACIyH,aAAYzgB,KACbP,EAAU6Y,UAAW,kBAAc,GACtCU,IACIyH,aAAYtgB,KACbV,EAAU6Y,UAAW,gBAAY,GACpCU,IACIyH,aAAYrgB,KACbX,EAAU6Y,UAAW,kBAAc,GACtCU,IACIuE,gBAAend,KAChBX,EAAU6Y,UAAW,mBAAe,GAChC7Y,GACT2uB,IAKE1uB,GAAkC,SAAU+Z,GAE5C,SAAS/Z,IACL,OAAkB,OAAX+Z,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAe/D,OAjBAuwC,GAAU/Y,EAAkB+Z,GAQ5B/Z,EAAiB4Y,UAAU6B,aAAe,WACtC,MAAO,oBAEXnB,IACIoB,WAAS,gBACV1a,EAAiB4Y,UAAW,YAAQ,GACvCU,IACIoB,WAAS,WACV1a,EAAiB4Y,UAAW,aAAS,GACjC5Y,GACT0uB,IAKE/tB,GAAiC,SAAUoZ,GAE3C,SAASpZ,IACL,OAAkB,OAAXoZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAkB/D,OApBAuwC,GAAUpY,EAAiBoZ,GAQ3BpZ,EAAgBiY,UAAU6B,aAAe,WACrC,MAAO,mBAEXnB,IACIoB,WAAS,KACV/Z,EAAgBiY,UAAW,YAAQ,GACtCU,IACIoB,WAAS,KACV/Z,EAAgBiY,UAAW,YAAQ,GACtCU,IACIyH,aAAY/C,KACbrd,EAAgBiY,UAAW,aAAS,GAChCjY,GACTga,iBAKE/Z,GAAmC,SAAUmZ,GAE7C,SAASnZ,IACL,OAAkB,OAAXmZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAe/D,OAjBAuwC,GAAUnY,EAAmBmZ,GAQ7BnZ,EAAkBgY,UAAU6B,aAAe,WACvC,MAAO,qBAEXnB,IACIoB,WAAS,WACV9Z,EAAkBgY,UAAW,aAAS,GACzCU,IACIoB,YAAS,IACV9Z,EAAkBgY,UAAW,mBAAe,GACxChY,GACTD,IAKEE,GAAgC,SAAUkZ,GAE1C,SAASlZ,IACL,OAAkB,OAAXkZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAY/D,OAdAuwC,GAAUlY,EAAgBkZ,GAQ1BlZ,EAAe+X,UAAU6B,aAAe,WACpC,MAAO,kBAEXnB,IACIuE,gBAAeld,KAChBE,EAAe+X,UAAW,kBAAc,GACpC/X,GACTD,IAKEE,GAA0B,SAAUiZ,GAEpC,SAASjZ,IACL,OAAkB,OAAXiZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAqB/D,OAvBAuwC,GAAUjY,EAAUiZ,GAQpBjZ,EAAS8X,UAAU6B,aAAe,WAC9B,MAAO,YAEXnB,IACIoB,WAAS,KACV5Z,EAAS8X,UAAW,YAAQ,GAC/BU,IACIuE,gBAAejd,KAChBE,EAAS8X,UAAW,kBAAc,GACrCU,IACIuE,gBAAehd,KAChBC,EAAS8X,UAAW,eAAW,GAClCU,IACIyH,aAAY/C,KACbld,EAAS8X,UAAW,aAAS,GACzB9X,GACT6Z,iBAKE5Z,GAA8B,SAAUgZ,GAExC,SAAShZ,IACL,OAAkB,OAAXgZ,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAY/D,OAdAuwC,GAAUhY,EAAcgZ,GAQxBhZ,EAAa6X,UAAU6B,aAAe,WAClC,MAAO,gBAEXnB,IACIoB,YAAS,IACV3Z,EAAa6X,UAAW,mBAAe,GACnC7X,GACTD,IAKEE,GAAsC,SAAU+Y,GAEhD,SAAS/Y,IACL,OAAkB,OAAX+Y,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAqB/D,OAvBAuwC,GAAU/X,EAAsB+Y,GAQhC/Y,EAAqB4X,UAAU6B,aAAe,WAC1C,MAAO,wBAEXnB,IACIoB,WAAS,KACV1Z,EAAqB4X,UAAW,YAAQ,GAC3CU,IACIoB,WAAS,KACV1Z,EAAqB4X,UAAW,aAAS,GAC5CU,IACIoB,YAAS,IACV1Z,EAAqB4X,UAAW,mBAAe,GAClDU,IACIyH,aAAY/C,KACbhd,EAAqB4X,UAAW,aAAS,GACrC5X,GACT2Z,iBAKE1Z,GAAgC,SAAU8Y,GAE1C,SAAS9Y,IACL,OAAkB,OAAX8Y,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAkB/D,OApBAuwC,GAAU9X,EAAgB8Y,GAQ1B9Y,EAAe2X,UAAU6B,aAAe,WACpC,MAAO,kBAEXnB,IACIoB,WAAS,KACVzZ,EAAe2X,UAAW,YAAQ,GACrCU,IACIuE,gBAAe7c,KAChBC,EAAe2X,UAAW,eAAW,GACxCU,IACIyH,aAAY/C,KACb/c,EAAe2X,UAAW,aAAS,GAC/B3X,GACT0Z,iBAKE1a,GAAoC,SAAU8Z,GAE9C,SAAS9Z,IACL,OAAkB,OAAX8Z,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAwB/D,OA1BAuwC,GAAU9Y,EAAoB8Z,GAQ9B9Z,EAAmB2Y,UAAU6B,aAAe,WACxC,MAAO,sBAEXnB,IACIoB,WAAS,kBACVza,EAAmB2Y,UAAW,YAAQ,GACzCU,IACIyH,aAAYjgB,KACbb,EAAmB2Y,UAAW,aAAS,GAC1CU,IACIyH,aAAYhgB,KACbd,EAAmB2Y,UAAW,iBAAa,GAC9CU,IACIyH,aAAY9f,KACbhB,EAAmB2Y,UAAW,mBAAe,GAChDU,IACIoB,WAAS,UACVza,EAAmB2Y,UAAW,kBAAc,GACxC3Y,GACTyuB,IAKEpxC,GAAsB,SAAUy8B,GAGhC,SAASz8B,EAAKoL,EAAQ8rB,EAAUwM,EAAcC,GAC1C,IAAIhD,EAAQlE,EAAOkF,KAAKz2C,KAAMkgB,EAAQ8rB,EAAUwM,EAAcC,IAAYz4C,KAE1Ey1C,EAAM+Q,gBAAiB,EAEvB/Q,EAAM6H,OAAS,OAEf7H,EAAM55B,SAAW,GAEjB45B,EAAMgR,UAAY,GAElBhR,EAAMiR,UAAY,EAElBjR,EAAM7vB,YAEN6vB,EAAM9vB,WAEN8vB,EAAM53B,UAAW,EAEjB43B,EAAMr2B,QAAS,EAEfq2B,EAAMtxB,SAAU,EAChB,IAAIwiC,EAgBJ,OAfIlR,EAAMtjC,UAAYsjC,EAAMtjC,SAAS1b,OAAS,KAC1CkwD,EAAcnO,GACGt4C,OAAUymD,EAAYzmD,MAAM6Y,OACzC08B,EAAMv1C,MAAM6Y,KAAO,eAElB4tC,EAAYzmD,OAAUymD,EAAYzmD,MAAM8Y,cACzCy8B,EAAMv1C,MAAM8Y,YAAc,gBAG9By8B,EAAMr3C,OAA8B,gBAArBq3C,EAAMr3C,MAAMvC,MAC3Bw1B,GAAuBmnB,EAAc/C,GAErCA,EAAMr3C,OAA8B,aAArBq3C,EAAMr3C,MAAMvC,MAC3Bu1B,GAAoBonB,EAAc/C,GAE/BA,EAuhBX,OA/jBAlF,GAAUz7B,EAAMy8B,GA0ChBrzB,OAAOozB,eAAex8B,EAAKs7B,UAAW,cAElCgC,IAAK,WACD,OAAqB,OAAjBpyC,KAAKwO,QACExO,KAAKwO,QAAQjC,WAGb,IAAI+S,GAAKtf,KAAKzH,OAAS,EAAGyH,KAAK1H,QAAU,IAGxD+5C,YAAY,EACZC,cAAc,IAOlBx9B,EAAKs7B,UAAUvN,KAAO,SAAU3jC,GAC5B,IAAIe,EAEAA,EADmB,YAAnBD,KAAK5B,MAAMvC,KACD,IAAIuoB,GAGJ,IAAI0B,GAElB,IAAI8gC,EAKJ,OAFA5mD,KAAK5B,MAAuB,qBAC5B4B,KAAK5B,MAAmB,iBAChB4B,KAAK5B,MAAMvC,MACf,IAAK,OACD,IAAImiC,EAAc,IAAIlvB,GACtBkvB,EAAY5nC,KAAO4J,KAAK5B,MAAMhI,KAC9B6J,EAAU+9B,EACV,MACJ,IAAK,QACD,IAAIC,EAAe,IAAIC,GACvBD,EAAa17B,OAASvC,KAAK5B,MAAMmE,OACjC07B,EAAaE,WAAan+B,KAAK5B,MAAMggC,MACrCH,EAAaI,WAAar+B,KAAK5B,MAAMue,MACrC1c,EAAUg+B,EACV,MACJ,IAAK,OACD,IAAIkI,EAAc,IAAI7hB,GACtB6hB,EAAYlmC,QAAUD,KAAK5B,MAAM6B,QACjCA,EAAUkmC,EACVygB,EAAY5mD,KAAKE,MACjBD,EAAQC,MAAQ0mD,EAChB,MACJ,IAAK,QACD,GAAyB,cAArB5mD,KAAK5B,MAAMA,MAAuB,EAElC6B,EADI4mD,EAAa,IAAIziC,IAEb/rB,aAAe2H,KAAK5B,MAAM/F,kBAEjC,GAAyB,YAArB2H,KAAK5B,MAAMA,MAAqB,CACrC,IAAI1F,EAAO,IAAIoW,GACfpW,EAAKtC,KAAO0C,EAAekH,KAAK5B,MAAMzF,QACtCsH,EAAUvH,MAET,CACD,IAAImuD,EAAa,IAAI/3C,GACjBg4C,EAAiB3oD,EAAc6B,KAAK5B,MAAMA,OAC9CyoD,EAAWzwD,KAAO0wD,EAClB7mD,EAAU4mD,EAEd,MACJ,IAAK,OACD,IAAIE,EAAY,IAAIj4C,GAChBqwB,EAAgBpgC,EAAaiB,KAAK5B,MAAMA,OAC5C2oD,EAAU3wD,KAAO+oC,EACjBl/B,EAAU8mD,EACV,MACJ,IAAK,cAED9mD,EAAU2/B,GADa,IAAI9wB,GACsB7O,EAASD,MAC1D,MACJ,IAAK,OACD,GAAId,EAAQ8nD,WAAY,CACpB/mD,EAAUf,EAAQ8nD,WAAWC,gBAAgBhnD,EAASD,KAAMd,GAC5Dc,KAAKwO,QAAQ6lC,eAAiBr0C,KAAKwO,QAAQ6lC,eAAiBtB,gBAAcsD,eAC1E,IAAI6Q,EAAalnD,KAAK5B,MAAM+oD,SAASD,WACrC,GAAIA,EAAWE,WAAaF,EAAWE,UAAU3wD,OAE7C,IAAK,IAAIoG,EAAK,EAAGwqD,EADFrnD,KAAK5B,MAAM+oD,SAASD,WAAWE,UACNvqD,EAAKwqD,EAAW5wD,OAAQoG,IAAM,CAClE,IAAInG,EAAI2wD,EAAWxqD,IACfqC,EAAQ0c,UAAUllB,IAAQwI,EAAQ0c,UAAUllB,GAAG+vD,WAAavnD,EAAQ0c,UAAUllB,GAAG+vD,YAAczmD,KAAKH,KACpGX,EAAQ0c,UAAUllB,GAAG+vD,UAAYzmD,KAAKH,GAClCqnD,EAAWI,WACXpoD,EAAQqoD,wBAAwBroD,EAAQ0c,UAAUllB,GAAG8X,QAAStP,EAAQ0c,UAAUllB,IAAKwwD,EAAWI,WAEpGrnD,EAAQkS,SAASrb,KAAKoI,EAAQ0c,UAAUllB,GAAG8X,WAK3D,MACJ,IAAK,SACD,IAAI+vB,EAAgB,IAAIC,GAAqBx+B,KAAKH,GAAIX,EAAQU,QAAQC,IACtE0+B,EAAct+B,QAAUD,KAAK5B,MAAM6B,QACnCs+B,EAAc5hB,MAAQ3c,KAAK5B,MAAMue,MACjC1c,EAAUs+B,EACV,MACJ,IAAK,OACD,IAAIE,EAAc,IAAIC,GAAmB1+B,KAAKH,GAAIX,EAAQU,QAAQC,IAClE4+B,EAAYx+B,QAAUD,KAAK5B,MAAM6B,QACjCA,EAAUw+B,EACV,MACJ,IAAK,gBAEDx+B,EAAUqY,GAAuBrY,EAASD,KAAMd,GAChD,MACJ,IAAK,WACDc,KAAKoZ,eACLpZ,KAAK+7B,SACL97B,EAAQgjD,UAAUlqC,KAAO,OACzB9Y,EAAQgjD,UAAUjqC,YAAc,OAChChZ,KAAK4Y,WAAc/c,KAAM,OAAQwV,YAAarR,KAAK5B,MAAMiT,aACzDpR,EAAQJ,GAAKG,KAAKH,GAClBG,KAAK4Y,UAAUvH,YAAcrR,KAAK5B,MAAMiT,YACxCrR,KAAKwT,aAAeK,kBAAgBiF,WACpC8J,GAAa3iB,EAASf,EAASc,MA6CvC,OA1CAC,EAAQJ,GAAKG,KAAKH,GAAK,WACvBI,EAAQy0B,aAAe,cACJz6B,IAAf+F,KAAKzH,QACL0H,EAAQ1H,MAAQyH,KAAKzH,OAEzB0H,EAAQ2Z,oBAAsB,eACV3f,IAAhB+F,KAAK1H,SACL2H,EAAQ3H,OAAS0H,KAAK1H,aAEH2B,IAAnB+F,KAAKqa,YACLpa,EAAQoa,UAAYra,KAAKqa,gBAENpgB,IAAnB+F,KAAK8e,YACL7e,EAAQ6e,UAAY9e,KAAK8e,gBAEP7kB,IAAlB+F,KAAK6e,WACL5e,EAAQ4e,SAAW7e,KAAK6e,eAEN5kB,IAAlB+F,KAAKkZ,WACLjZ,EAAQiZ,SAAWlZ,KAAKkZ,UAEH,cAArBlZ,KAAK5B,MAAMA,OAA0B4B,KAAK5B,MAAM/F,eAChD4H,EAAQk0C,eAAgB,GAE5Bl0C,EAAQ0Z,kBAAoB,UACxB3Z,KAAK5B,iBAAiBg5B,KACtBn3B,EAAQ0C,OAAS3C,KAAK5B,MAAMuE,QAE5BgS,GAAU3U,OAC0C,IAA/CA,KAAKwT,YAAcK,kBAAgBe,UACpC3U,EAAQgnC,OAASjnC,KAAKinC,QAGL,SAApBjnC,KAAK5B,MAAMvC,MAAwC,YAArBmE,KAAK5B,MAAMA,OACrB,eAArB4B,KAAK5B,MAAMA,OAAiD,gBAApB4B,KAAK5B,MAAMvC,MAA+C,cAArBmE,KAAK5B,MAAMA,OAChE,SAApB4B,KAAK5B,MAAMvC,OACXoE,EAAQC,MAAQF,KAAKE,QAGvBF,KAAKwO,QAAQ6lC,eAAiBtB,gBAAcsD,gBAAiC,eAAdr2C,KAAK6zC,OAAuC,aAAd7zC,KAAK6zC,OACpG5zC,EAAQ4zC,KAAO7zC,KAAK6zC,MAEjB5zC,GAIX6U,EAAKs7B,UAAUxN,cAAgB,WACtB5iC,KAAKH,KACNG,KAAKH,GAAKua,MAGd,IAAIqH,EACJ,IAAKzhB,KAAK4Y,WAAa5Y,KAAK5B,iBAAiBs5B,GACzCjW,EAASzhB,KAAKmS,SAAW,IAAIqwB,GAAc,IAAI7gB,QAG/C,OAAQ3hB,KAAK4Y,UAAU/c,MACnB,IAAK,SACD4lB,EAAS,IAAIE,GACb,MACJ,IAAK,QACDF,EAAS,IAAI4gC,GACb,MACJ,IAAK,QACD5gC,EAAS,IAAIqE,IACNlC,eAAe5jB,KAAK8d,KAAM9d,KAAKoc,SA6BlD,OAzBAqF,EAAO5hB,GAAKG,KAAKH,GACjB4hB,EAAO1lB,QAAUiE,KAAKjE,QACtB0lB,EAAOzlB,QAAUgE,KAAKhE,QACtBylB,EAAOmc,QAAU59B,KAAK49B,QACtBnc,EAAO7H,oBAAsB5Z,KAAK4Z,oBAClC6H,EAAO9H,kBAAoB3Z,KAAK2Z,kBAC5B3Z,KAAK4Y,YACL6I,EAAOlpB,MAAQyH,KAAKzH,MACpBkpB,EAAOnpB,OAAS0H,KAAK1H,OACO,UAAxB0H,KAAK4Y,UAAU/c,OACf4lB,EAAOpQ,YAAcrR,KAAK4Y,UAAUvH,cAG5CoQ,EAAOvhB,MAAM6Y,KAAO/Y,KAAKq7B,gBACzB5Z,EAAOvhB,MAAM8Y,YAAchZ,KAAKmb,YAChCsG,EAAOvhB,MAAM+Y,YAAcjZ,KAAKwnD,YAChC/lC,EAAOvU,YAAclN,KAAKkN,YAC1BuU,EAAOpH,UAAYra,KAAKqa,UACxBoH,EAAO5C,SAAW7e,KAAK6e,SACvB4C,EAAO3C,UAAY9e,KAAK8e,UACxB2C,EAAOvI,SAAWlZ,KAAKkZ,SACvBuI,EAAOsf,MAAQ/gC,KAAK+gC,MACpBtf,EAAO9e,OAAS3C,KAAK2C,OACrB8e,EAAOoyB,KAAO7zC,KAAK6zC,KACnB7zC,KAAKwO,QAAUiT,EACRA,GAGX3M,EAAKs7B,UAAUqX,UAAY,SAAUC,EAAsB9uC,GAC1C5Y,KAAKwO,QAElB,IAAK,IADDrL,EACKzM,EAAI,EAAGsJ,KAAK+7B,MAAqBrlC,EAAIsJ,KAAK+7B,MAAMtlC,OAAQC,IAAK,EAClEyM,EAAOnD,KAAK2nD,gBAAgB3nD,KAAK+7B,MAAMrlC,KAClC29C,eAAiBlxC,EAAKkxC,eAAiBtB,gBAAc6U,cAE1D,IAAIzJ,OAAiB,EACjB0J,EAAuBx3B,GAAYq3B,GACnCG,IACA1J,EAAiB0J,EAAqB1kD,EAAMnD,OAEhDmD,EAAK+jC,YAAciX,GAAkCh7C,EAAKtD,GAC1D+Y,EAAUzG,SAASrb,KAAKqM,KAGhC2R,EAAKs7B,UAAU0X,aAAe,SAAU1tB,EAAQt7B,GAC5C,IAAI9H,EACAC,EAiBJ,MAhB2B,gBAAvBmjC,EAAO/oB,aACPra,EAAI8H,EAAKmR,OAAOjZ,EAChBC,EAAI,EAAI6H,EAAKmR,OAAOhZ,GAEQ,gBAAvBmjC,EAAO/oB,aACZra,EAAI8H,EAAKmR,OAAOhZ,EAChBA,EAAI6H,EAAKmR,OAAOjZ,GAEY,gBAAvBojC,EAAO/oB,aACZra,EAAI,EAAI8H,EAAKmR,OAAOhZ,EACpBA,EAAI6H,EAAKmR,OAAOjZ,IAGhBA,EAAI8H,EAAKmR,OAAOjZ,EAChBC,EAAI6H,EAAKmR,OAAOhZ,IAEXD,EAAGA,EAAGC,EAAGA,IAGtB6d,EAAKs7B,UAAU2X,UAAY,SAAUL,EAAsBttB,EAAQxhB,EAAWyqB,GAC7DrjC,KAAKwO,QAAlB,IACIyB,EACAnR,EAAOkB,KAAKgoD,WAAahoD,KAAKioD,WAAajoD,KAAKkoD,aACpD,GAAmB,SAAfppD,EAAKV,MAAkB,CACvB,IAAI+pD,EAAgB,IAAIxmC,GACxBwmC,EAAc5T,OAAQ,EAEtB4T,EAActoD,GAAKG,KAAKH,GAAK,gBAC7BsoD,EAAch2C,YACdg2C,EAAc7vD,OAASwG,EAAKxG,OAC5B6vD,EAAc5vD,MAAQuG,EAAKvG,MAC3B4vD,EAAcjoD,MAAM8Y,YAAc,cAClCmvC,EAAcxlD,OAAS7D,EAAK6D,OAC5BwlD,EAAcvuC,oBAAsB,SACpCuuC,EAAcxuC,kBAAoB,SAClCwuC,EAAcvqB,QAAU59B,KAAK49B,QAC7B3tB,EAASjQ,KAAK8nD,aAAa1tB,EAAQt7B,GACnCqpD,EAAc1T,6BAA6BxkC,EAAOjZ,EAAGiZ,EAAOhZ,EAAG,YAC/DkxD,EAAczzB,aAAe,QAC7B10B,KAAKooD,eAAetpD,EAAMqpD,EAAeT,EAAsBrkB,GAE/D,IAAI8a,OAAiB,EACjB0J,EAAuBx3B,GAAYq3B,GACnCG,IACA1J,EAAiB0J,EAAqB/oD,EAAMkB,OAEhDmoD,EAAcjhB,YAAciX,GAAkCgK,EAActoD,GAC5E+Y,EAAUzG,SAASrb,KAAKqxD,KAIhCrzC,EAAKs7B,UAAUiY,gBAAkB,SAAUX,EAAsB9uC,EAAWyqB,EAAWilB,GAEnF,IAAK,IADDzkC,EACKntB,EAAI,EAAGsJ,KAAKoZ,YAA2B1iB,EAAIsJ,KAAKoZ,YAAY3iB,OAAQC,IAAK,CAC9EmtB,EAAa7jB,KAAKuoD,sBAAsBvoD,KAAKoZ,YAAY1iB,GAAI2sC,EAAWilB,EAAY5xD,GAEpF,IAAIynD,OAAiB,EACjB0J,EAAuBx3B,GAAYq3B,GACnCG,IACA1J,EAAiB0J,EAAqBhkC,EAAY7jB,OAEtD6jB,EAAWqjB,YAAciX,GAAkCt6B,EAAWhkB,GACtE+Y,EAAUzG,SAASrb,KAAK+sB,KAIhC/O,EAAKs7B,UAAUuX,gBAAkB,SAAU5rB,GACvCA,EAAMl8B,GAAKk8B,EAAMl8B,IAAMua,KAEvB,IAAIouC,EAAc,IAAI15C,GACtB05C,EAAYlwD,OAASyjC,EAAMzjC,OAC3BkwD,EAAYjwD,MAAQwjC,EAAMxjC,MAC1B,IAAIkwD,EAA4B,WAAhB1sB,EAAM39B,MAAsB29B,EAAMp9B,SAAWJ,EAAaw9B,EAAM39B,OAChFoqD,EAAY3oD,GAAKG,KAAKH,GAAK,IAAOk8B,EAAQ,GAC1CysB,EAAY7lD,OAASo5B,EAAMp5B,OAC3B6lD,EAAYpyD,KAAOqyD,EACnB,IAAIvoD,EAAQ67B,EAAM77B,MAclB,OAbAsoD,EAAYtoD,OACR6Y,KAAM7Y,EAAM6Y,KAAMC,YAAa9Y,EAAM8Y,YAAaqkB,SAAU,KAC5Df,QAASp8B,EAAMo8B,QAASvd,gBAAiB7e,EAAM6e,gBAAiB9F,YAAa/Y,EAAM+Y,aAEvFuvC,EAAY5uC,oBAAsBmiB,EAAMniB,oBACxC4uC,EAAY7uC,kBAAoBoiB,EAAMpiB,kBACtC6uC,EAAcE,GAAgBF,EAAaxoD,KAAK6zC,KAAM9X,QACnC9hC,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,SACjCkwD,EAAYjU,OAAQ,GAExBiU,EAAY9zB,aAAe,QAC3B8zB,EAAY5qB,WAAU6D,GAAqB1F,EAAO+S,iBAAeE,UAC5DvN,GAAqB1F,EAAO+S,iBAAeC,QAAWtN,GAAqB1F,EAAO+S,iBAAekL,UAC/FwO,GAGX1zC,EAAKs7B,UAAUmY,sBAAwB,SAAU1kC,EAAYwf,EAAWilB,EAAY3iD,GAChFke,EAAWhkB,GAAKgkB,EAAWhkB,IAAM8F,EAAQ,cAAgByU,KACzD,IACIuuC,EADAC,EAAQ/kC,EAEZ,GAAIwf,GAAaxf,EAAW0zB,UACxBoR,EAAoB,IAAIjqB,GAAmB1+B,KAAKH,GAAIwjC,EAAWxf,EAAWhkB,KACxDI,QAAU4jB,EAAW0zB,aAEtC,EACDoR,EAAoB,IAAIrkC,IACNwzB,YAAcwQ,EAChC,IAAIpoD,EAAQ2jB,EAAW3jB,MACnBu9B,EAAO5Z,EAAW2Z,UAAUC,KAAO5Z,EAAW2Z,eAAYvjC,EAC9D0uD,EAAkBzoD,OACd6Y,KAAM7Y,EAAM6Y,KAAMC,YAAa9Y,EAAM8Y,YAAaC,YAAa/Y,EAAM+Y,YACrEK,KAAMpZ,EAAMoZ,KAAMG,aAAcvZ,EAAMuZ,aACtCD,MAAOikB,EAAOA,EAAKjkB,OAASmvC,EAAkBnrB,UAAUhkB,MAAQtZ,EAAMsZ,MAAOkjB,WAAYx8B,EAAMw8B,WAC/FH,WAAYr8B,EAAMq8B,WAAYhjB,SAAUrZ,EAAMqZ,SAAUijB,OAAQt8B,EAAMs8B,OAAQa,SAAU,KAAMf,QAASp8B,EAAMo8B,QAC7Gvd,gBAAiB7e,EAAM6e,gBAAiB0d,UAAWv8B,EAAMu8B,UAAWJ,aAAcxY,EAAW3jB,MAAMm8B,aACnGM,eAAgBc,EAAOA,EAAKd,gBACxBgsB,EAAkBnrB,UAAUb,eAAiBz8B,EAAMy8B,gBAE3DgsB,EAAkBnrB,UAAUC,KAAO5Z,EAAW2Z,UAAUC,WAAQxjC,EAChE0uD,EAAkBnrB,UAAUv9B,QAAU4jB,EAAW2Z,UAAUv9B,cAAWhG,EACtE0uD,EAAkBnrB,UAAUb,eAAiB9Y,EAAW2Z,UAAUb,qBAAkB1iC,EACpF0uD,EAAkB1oD,QAAUw9B,EAAOA,EAAKx9B,SACpC0oD,EAAkBnrB,UAAUC,KAAO5Z,EAAW5jB,QAsBtD,OApBA0oD,EAAkBn1C,YAAcqQ,EAAWrQ,YAC3Cm1C,EAAkBrwD,OAASurB,EAAWvrB,OACtCqwD,EAAkBpwD,MAAQsrB,EAAWtrB,MACrCowD,EAAkB/qB,QAAU/Z,EAAW8d,WACvCgnB,EAAkBz7C,YAAc2W,EAAW3W,YAC3Cy7C,EAAkB9oD,GAAKG,KAAKH,GAAK,IAAMgkB,EAAWhkB,QAC/B5F,IAAf+F,KAAKzH,OAAwBsrB,EAAW0zB,gBACft9C,IAArB4pB,EAAWtrB,OAAwBsrB,EAAWtrB,MAAQyH,KAAKzH,QACxB,SAAlCsrB,EAAW3jB,MAAMuZ,cAA6D,qBAAlCoK,EAAW3jB,MAAMuZ,iBAC9DkvC,EAAkBpwD,MAAQyH,KAAKzH,OAGvCowD,EAAkBhmD,OAASkhB,EAAWlhB,OACtCgmD,EAAkB/uC,oBAAsBiK,EAAWjK,oBACnD+uC,EAAkBhvC,kBAAoBkK,EAAWlK,kBACjDgvC,EAAkBlU,6BAA6BmU,EAAM34C,OAAOjZ,EAAG4xD,EAAM34C,OAAOhZ,EAAG,iBAC5DgD,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,SACjCqwD,EAAkBpU,OAAQ,GAE9BoU,EAAkBj0B,aAAe,QAC1Bi0B,GAEX7zC,EAAKs7B,UAAUyY,kBAAoB,SAAUjiB,EAASuhB,GAClD,IAAI97C,EAAO,IAAI+X,GAgBf,OAfA/X,EAAKxM,GAAKsoD,EAActoD,GAAK,QAC7BwM,EAAK/T,OAASsuC,EAAQtuC,OACtB+T,EAAK9T,MAAQquC,EAAQruC,MACrB8T,EAAKuxB,QAAUuqB,EAAcvqB,QAC7BvxB,EAAK1J,OAASikC,EAAQjkC,OACtB0J,EAAKhU,aAAeuuC,EAAQvuC,aAC5BgU,EAAKnM,OACD6Y,KAAM6tB,EAAQ7tB,KAAMC,YAAa4tB,EAAQzrB,YACzClC,YAAa2tB,EAAQ4gB,aAEzBn7C,EAAKooC,6BAA6B,GAAK,GAAK,YAC5CpoC,EAAKuN,oBAAsB,SAC3BvN,EAAKsN,kBAAoB,SACzBtN,EAAKqoB,aAAe,SACpBroB,EAAK66B,YAAc76B,EAAK66B,aAAe,mCAChC76B,GAEXyI,EAAKs7B,UAAUgY,eAAiB,SAAUxhB,EAASuhB,EAAeT,EAAsBrkB,GACpF,IAAIylB,EAEJ,GADAX,EAAch2C,SAASrb,KAAKkJ,KAAK6oD,kBAAkBjiB,EAASuhB,IACtC,aAAlBvhB,EAAQxoC,OACR0qD,EAAc,IAAItqB,GAAqBx+B,KAAKH,GAAIwjC,IACpCpjC,QAAU2mC,EAAQ3mC,QAC9B6oD,EAAYxwD,OAAS,GACrBwwD,EAAYvwD,MAAQ,OAEnB,EACDuwD,EAAc,IAAIh6C,IACN1Y,KAAOyI,EAAa+nC,GAChC,IAAImiB,EAAoBtkB,GAAYqkB,EAAY1yD,MAChD0yD,EAAYxwD,OACRywD,EAAkBzwD,OAAS,GAAKywD,EAAkBzwD,OAAS,IAAMsuC,EAAQz6B,QAAQrJ,OAAS8jC,EAAQz6B,QAAQpJ,KAC9G+lD,EAAYvwD,MACRwwD,EAAkBxwD,MAAQ,GAAKwwD,EAAkBxwD,MAAQ,IAAMquC,EAAQz6B,QAAQvJ,KAAOgkC,EAAQz6B,QAAQtJ,OAE9GimD,EAAYjpD,GAAKsoD,EAActoD,GAAK,SACpCipD,EAAYlvC,oBAAsB,SAClCkvC,EAAYnvC,kBAAoB,SAChCmvC,EAAYlrB,QAAUuqB,EAAcvqB,QACpCkrB,EAAYlrB,QAAUuqB,EAAcvqB,QACpCkrB,EAAY5oD,OACR6Y,KAAM,QAASC,YAAa4tB,EAAQzrB,YACpClC,YAAa2tB,EAAQ4gB,aAEzBsB,EAAYrU,6BAA6B,GAAK,GAAK,YACnDqU,EAAYp0B,aAAe,SAC3Bo0B,EAAY5hB,YAAcihB,EAAcjhB,aAAe,mCACvDihB,EAAch2C,SAASrb,KAAKgyD,IAMhCh0C,EAAKs7B,UAAU6B,aAAe,WAC1B,MAAO,QAEXnB,IACIuE,gBAAe/hC,KAChBwB,EAAKs7B,UAAW,mBAAe,GAClCU,IACIoB,WAAS,IACVp9B,EAAKs7B,UAAW,eAAW,GAC9BU,IACIoB,WAAS,IACVp9B,EAAKs7B,UAAW,eAAW,GAC9BU,IACIyH,WAAUvhD,EAAG,GAAKC,EAAG,IAAOsO,KAC7BuP,EAAKs7B,UAAW,aAAS,GAC5BU,IACIoB,cACDp9B,EAAKs7B,UAAW,aAAS,GAC5BU,IACIoB,cACDp9B,EAAKs7B,UAAW,cAAU,GAC7BU,IACIoB,cACDp9B,EAAKs7B,UAAW,gBAAY,GAC/BU,IACIoB,cACDp9B,EAAKs7B,UAAW,iBAAa,GAChCU,IACIoB,cACDp9B,EAAKs7B,UAAW,gBAAY,GAC/BU,IACIoB,cACDp9B,EAAKs7B,UAAW,iBAAa,GAChCU,IACIoB,WAAS,IACVp9B,EAAKs7B,UAAW,mBAAe,GAClCU,IACIyH,WAAUx/B,KAAM,SAAWy8B,KAC5B1gC,EAAKs7B,UAAW,aAAS,GAC5BU,IACIoB,WAAS,gBACVp9B,EAAKs7B,UAAW,uBAAmB,GACtCU,IACIoB,WAAS,SACVp9B,EAAKs7B,UAAW,mBAAe,GAClCU,IACIoB,WAAS,IACVp9B,EAAKs7B,UAAW,mBAAe,GAClCU,IACIoB,cACDp9B,EAAKs7B,UAAW,YAAQ,GAC3BU,IACIyE,iBAAe0Q,KAChBnxC,EAAKs7B,UAAW,aAAS,GAC5BU,IACIoB,WAAS,OACVp9B,EAAKs7B,UAAW,eAAW,GAC9BU,IACIoB,WAASr+B,kBAAgBgF,UAC1B/D,EAAKs7B,UAAW,mBAAe,GAClCU,IACIyH,aAAY3jC,KACbE,EAAKs7B,UAAW,cAAU,GAC7BU,IACIoB,cACDp9B,EAAKs7B,UAAW,gBAAY,GAC/BU,IACIoB,WAAS,OACVp9B,EAAKs7B,UAAW,iBAAa,GAChCU,IACIoB,WAAS,SACVp9B,EAAKs7B,UAAW,2BAAuB,GAC1CU,IACIoB,WAAS,QACVp9B,EAAKs7B,UAAW,yBAAqB,GACxCU,IACIoB,cACDp9B,EAAKs7B,UAAW,YAAQ,GAC3BU,IACIoB,cACDp9B,EAAKs7B,UAAW,eAAW,GAC9BU,IACIoB,cACDp9B,EAAKs7B,UAAW,gBAAY,GAC/BU,IACIoB,cACDp9B,EAAKs7B,UAAW,mBAAe,GAClCU,IACIoB,cACDp9B,EAAKs7B,UAAW,eAAW,GAC9BU,IACIoB,cACDp9B,EAAKs7B,UAAW,kBAAc,GAC1Bt7B,GACT2nC,IAKE9kB,GAAwB,SAAU4Z,GAElC,SAAS5Z,IACL,OAAkB,OAAX4Z,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAiB/D,OAnBAuwC,GAAU5Y,EAAQ4Z,GAIlBT,IACIoB,WAAS,KACVva,EAAOyY,UAAW,UAAM,GAC3BU,IACIyH,WAAUr4C,OAAS6Y,KAAM,YAAes/B,KACzC1gB,EAAOyY,UAAW,kBAAc,GACnCU,IACIyH,WAAUx/B,KAAM,UAAWC,YAAa,WAAas8B,KACtD3d,EAAOyY,UAAW,aAAS,GAC9BU,IACIoB,WAAS,KACVva,EAAOyY,UAAW,cAAU,GAC/BU,IACIoB,WAAS,KACVva,EAAOyY,UAAW,aAAS,GACvBzY,GACTwa,iBAKE/pB,GAAsB,SAAUmpB,GAEhC,SAASnpB,IACL,OAAkB,OAAXmpB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA2B/D,OA7BAuwC,GAAUnoB,EAAMmpB,GAQhBnpB,EAAKgoB,UAAU6B,aAAe,WAC1B,MAAO,QAEXnB,IACIoB,WAAS,KACV9pB,EAAKgoB,UAAW,UAAM,GACzBU,IACIyH,WAAUx/B,KAAM,UAAWC,YAAa,WAAas8B,KACtDltB,EAAKgoB,UAAW,aAAS,GAC5BU,IACIuE,gBAAevgC,KAChBsT,EAAKgoB,UAAW,gBAAY,GAC/BU,IACIoB,WAAS,MACV9pB,EAAKgoB,UAAW,cAAU,GAC7BU,IACIoB,WAAS,MACV9pB,EAAKgoB,UAAW,aAAS,GAC5BU,IACIyH,WAAUr4C,OAAS6Y,KAAM,UAAWC,YAAa,WAAa6K,YAAc5jB,QAAS,aAAgB03B,KACtGvP,EAAKgoB,UAAW,cAAU,GACtBhoB,GACT+pB,iBAKEnoB,GAAuB,SAAUunB,GAEjC,SAASvnB,IACL,OAAkB,OAAXunB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAqB/D,OAvBAuwC,GAAUvmB,EAAOunB,GAQjBvnB,EAAMomB,UAAU6B,aAAe,WAC3B,MAAO,SAEXnB,IACIoB,WAAS,KACVloB,EAAMomB,UAAW,UAAM,GAC1BU,IACIyH,WAAUv/B,YAAa,WAAas8B,KACrCtrB,EAAMomB,UAAW,aAAS,GAC7BU,IACIyH,WAAU10B,YAAc5jB,QAAS,UAAa03B,KAC/C3N,EAAMomB,UAAW,cAAU,GAC9BU,IACIoB,WAAS,MACVloB,EAAMomB,UAAW,cAAU,GACvBpmB,GACTmoB,iBAKEza,GAA0B,SAAU6Z,GAEpC,SAAS7Z,IACL,IAAI+d,EAAmB,OAAXlE,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAWhE,OANAy1C,EAAMtpC,QAAU,GAKhBspC,EAAMzyB,WAAY,EACXyyB,EAiCX,OA9CAlF,GAAU7Y,EAAU6Z,GAmBpB7Z,EAAS0Y,UAAU6B,aAAe,WAC9B,MAAO,YAEXnB,IACIoB,WAAS,aACVxa,EAAS0Y,UAAW,YAAQ,GAC/BU,IACIoB,WAAS,KACVxa,EAAS0Y,UAAW,iBAAa,GACpCU,IACIuE,gBAAerrB,KAChB0N,EAAS0Y,UAAW,cAAU,GACjCU,IACIoB,WAAS,eACVxa,EAAS0Y,UAAW,mBAAe,GACtCU,IACIuE,gBAAejtB,KAChBsP,EAAS0Y,UAAW,aAAS,GAChCU,IACIyH,WAAUr4C,OAAS6Y,KAAM,UAAWC,YAAa,WAAa6K,YAAc5jB,QAAS,aAAgB03B,KACtGD,EAAS0Y,UAAW,cAAU,GACjCU,IACIoB,YAAS,IACVxa,EAAS0Y,UAAW,cAAU,GACjCU,IACIoB,YAAS,IACVxa,EAAS0Y,UAAW,eAAW,GAC3B1Y,GACTwuB,IAMExtB,GAAgC,WAChC,SAASA,KAeT,OATAA,EAAe0X,UAAU6B,aAAe,WACpC,MAAO,kBAEXnB,IACIoB,WAAS,WACVxZ,EAAe0X,UAAW,YAAQ,GACrCU,IACIoB,WAAS,aACVxZ,EAAe0X,UAAW,mBAAe,GACrC1X,KCliDP6X,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAkB5D+gB,GAAuB,SAAUyiB,GAKjC,SAASziB,EAAM8X,EAAShnC,GACpB,IAAI61C,EAAQlE,EAAOkF,KAAKz2C,KAAM4mC,EAAShnC,IAAYI,KAKnD,OAHAy1C,EAAMxlC,OAAS,EAEfwlC,EAAM94B,MAAQ,EACP84B,EA6VX,OAvWAlF,GAAUzhB,EAAOyiB,GAgBjBziB,EAAMshB,UAAU4Y,UAAY,WACxBhpD,KAAKipD,eACLjpD,KAAKkpD,cAMTp6B,EAAMshB,UAAU+Y,OAAS,WACrBnpD,KAAKopD,uBAMTt6B,EAAMshB,UAAUiZ,cAAgB,WAC5B,MAAO,SAMXv6B,EAAMshB,UAAUkZ,QAAU,WACtBtpD,KAAKipD,eACLjpD,KAAKupD,OAAO,cACZhY,EAAOnB,UAAUkZ,QAAQ7S,KAAKz2C,MAC9BA,KAAKJ,QAAQg8B,UAAUlP,OAAO,YAMlCoC,EAAMshB,UAAUoZ,eAAiB,WAE7B,OAAOxpD,KAAKypD,cADK,YAOrB36B,EAAMshB,UAAUsZ,kBAAoB,SAAUC,EAASC,GACnD,IAAK,IAAI/sD,EAAK,EAAGohB,EAAKC,OAAOC,KAAKwrC,GAAU9sD,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAE9D,OADWohB,EAAGphB,IAEV,IAAK,SACL,IAAK,WACL,IAAK,eACL,IAAK,gBACL,IAAK,cACL,IAAK,YACDmD,KAAKmvB,iBAKrBL,EAAMshB,UAAUgZ,oBAAsB,WAClCppD,KAAKJ,QAAQM,MAAMu8B,UAAY,OAC/Bz8B,KAAK6pD,mBACL7pD,KAAKmvB,eAETL,EAAMshB,UAAUyZ,iBAAmB,WAC/B,IAAIz7B,EAAgBpuB,KAAKquB,mBACrBN,EAAMC,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,gBAQpD,OAPKkuB,IACDA,EAAMO,GAAkB,OACpBzuB,GAAMG,KAAKJ,QAAQC,GAAK,eACxBK,MAAS,UAAYkuB,EAAc91B,OAAS,YAAc81B,EAAc71B,MAAQ,sBAEpFyH,KAAKJ,QAAQo/B,YAAYjR,IAEtBA,GAEXe,EAAMshB,UAAUjhB,YAAc,WAC1B,IAAIjB,EAAYluB,KAAKmuB,eACjBC,EAAgBpuB,KAAKquB,mBACrB53B,EAAS,EACTwZ,EAAS,EACT2kC,EAAgB,IAAIt1B,GACpBirB,EAAMvqC,KAAK8pD,YAAY17B,GAC3B,GAAImc,IACA9zC,EAASuJ,KAAKvJ,OACdm+C,EAAct8C,OAAS41B,EACvBje,EAASjQ,KAAKiQ,OACVxZ,GAAUA,IAAWszD,EAAAA,GAAU,CAC/B,IAAIC,EAAavzD,EAASuJ,KAAK+uB,aAC3Bk7B,EAAah6C,EACjBjQ,KAAKkqD,eAAeD,EAAaD,EAAavtD,KAAK6G,IAAI2mD,GAAc1f,EAAKrc,KAItFY,EAAMshB,UAAU8Z,eAAiB,SAAUz4B,EAAOC,EAAK6Y,EAAKrc,GAGxD,IAFA,IAAIi8B,EAAM14B,EACN0S,GAAUA,MAAO,GACdgmB,EAAMz4B,GAAK,CACd,IAAI04B,EAAepqD,KAAKqqD,cAAcF,EAAK5f,GACvC6f,IACA7f,EAAIvL,YAAYorB,EAAa9vD,SAC7B6vD,EAAMnqD,KAAKsqD,cAAc74B,EAAOC,EAAK04B,EAAcD,EAAKhmB,EAAOjW,MAI3EY,EAAMshB,UAAUka,cAAgB,SAAU74B,EAAOC,EAAK04B,EAAcD,EAAKhmB,EAAOjW,GAC5E,IAAIq8B,EAAWvqD,KAAKwqD,mBAAmBxqD,KAAK2c,OACxCwtC,IAAQ14B,GACRzxB,KAAKyqD,WAAahuD,KAAKymC,MAAMzR,EAAQ84B,GAAYA,EAAWvqD,KAAK2c,MACjE3c,KAAKyqD,WAAczqD,KAAKyqD,WAAa,GAAO,EAAItyD,OAAQ6H,KAAe,WAAE7F,QAAQ,IAAM6F,KAAKyqD,WAC5FL,EAAaxB,MAAMziB,YAAcnmC,KAAKyqD,WAAWnsD,WACjD0B,KAAK0qD,cAAgBP,EAAMnqD,KAAKyqD,WAAazqD,KAAK2c,MACzB,eAArB3c,KAAKqR,YACLrR,KAAKwwB,aAAeiB,EAAQ04B,EAG5BnqD,KAAK0wB,aAAee,EAAQ04B,IAIhCnqD,KAAKyqD,WAAcN,EAAMnqD,KAAK2c,MAC9B3c,KAAKyqD,WAAczqD,KAAKyqD,WAAa,GAAO,EAAItyD,OAAQ6H,KAAe,WAAE7F,QAAQ,IAAM6F,KAAKyqD,WAC5FL,EAAaxB,MAAMziB,YAAcnmC,KAAKyqD,WAAWnsD,YAErD0B,KAAK2qD,gBAAgBP,EAAcl8B,GACnC,IAAI08B,EAAkC,eAArB5qD,KAAKqR,YAAkC8yB,EAAMA,MAAQ,GAAO,OAAW,QAAUA,EAAMA,MAAQ,IAIhH,OAHAimB,EAAa9vD,QAAQsqC,aAAa,YAAa,aAAegmB,EAAY,KAC1EzmB,EAAMA,OAASomB,EACfJ,GAAOI,GAGXz7B,EAAMshB,UAAUua,gBAAkB,SAAUP,EAAcl8B,GACtD,IAAIuZ,EAAO2iB,EAAa9vD,QAAQuwD,UAAUhmB,UACtC/W,EAAqC,eAArB9tB,KAAKqR,YACrBy5C,EAA0C,kBAAvB9qD,KAAK+qD,cACxB/zD,EAAI82B,EAAe,EAAI,EACvB72B,EAAI62B,EAAgBg9B,EAAmB58B,EAAY,UAClDA,EAAY,MAAiBuZ,EAAKnvC,OACnCsyD,EAAYE,IAAqBrjB,EAAKlvC,MAAQ,GAAK,KAAQ21B,EAAY,EAAKuZ,EAAKnvC,UAC9EmvC,EAAKlvC,MAAQ,GAAK,KAAQ21B,EAAY,EAAKuZ,EAAKnvC,OAAS,GAC5D0yD,EAAOl9B,GAAiB92B,EAAKA,EAAGC,EAAKA,IACnCD,EAAKA,EAAGC,EAAKA,EAAG4O,UAAa,wBAA+B+kD,EAAY,KAC9ExhB,GAAgBghB,EAAa9vD,QAAQuwD,UAAWG,IAEpDl8B,EAAMshB,UAAUia,cAAgB,SAAUF,EAAK5f,GAC3C,IAAIjwC,EAAU0F,KAAKirD,eAAed,EAAK5f,GAEvC,OAASjwC,QAASA,EAASsuD,MADf5oD,KAAKkrD,gBAAgB3gB,EAAKjwC,KAG1Cw0B,EAAMshB,UAAU6a,eAAiB,SAAUd,EAAK5f,GAC5C,IAAI4gB,EACAC,EAEAC,EADAt8B,EAAe/uB,KAAKwqD,mBAAmBxqD,KAAK2c,OAGhD0uC,EAAIniB,GAAiB,KADRzwB,MAAS,oBAEtB,IAAK,IAAI/hB,EAAI,EAAGA,EAAIsJ,KAAKsrD,SAAU50D,IAC/B00D,EAAer8B,EAAe/uB,KAAKsrD,SACnCH,EAAOnrD,KAAKurD,WAAWhhB,EAAK6gB,EAAc10D,EAAI,EAAGyzD,GACjDkB,EAAErsB,YAAYmsB,GAElB,OAAOE,GAEXv8B,EAAMshB,UAAUob,aAAe,SAAUjhB,EAAK6gB,EAAc30D,GACxD,IAAIs4B,EAAe/uB,KAAKwqD,mBAAmBxqD,KAAK2c,OAC5CuR,EAAYluB,KAAKmuB,eAGrB,OAFAi9B,GAA+B30D,EAAS,EACxCA,EAAW20D,EAAer8B,GAAkB,EAAKb,EAAwB,GAAZA,GAGjEY,EAAMshB,UAAUmb,WAAa,SAAUhhB,EAAK6gB,EAAc30D,EAAQ0zD,GAC9D,IACIn2B,EAGAj0B,EACAirD,EAHAS,EAAYzrD,KAAKwrD,aAAajhB,EAAK6gB,EAAc30D,GACjDy3B,EAAYluB,KAAKmuB,eAGjBL,EAAqC,eAArB9tB,KAAKqR,YACrBy5C,EAA0C,kBAAvB9qD,KAAK+qD,cACxB36B,EAAcC,GAAYrwB,KAAKowB,aACnCrwB,GAAS8uB,WATLA,EASmB68B,WAAYD,EAAWL,aAAgBprD,KAAK+uB,aAAe/uB,KAAKsrD,UAAa70D,EAAS,IACzG25B,GACAA,EAAYrwB,GAEhB0rD,EAAY1rD,EAAK2rD,WACjB,IAAI/vD,EAAQyvD,GAAgB30D,EAAS,GAQrC,OAHAu0D,GAAS9zD,GAJA42B,EAAenyB,EAASmvD,EAAkB58B,EAAY,EAI5C/2B,GAFV22B,EAAgBg9B,EAAkB58B,EAAaA,GAAaA,EAAYu9B,GAAe9vD,EAEnEvE,GAHpB02B,EAAenyB,EAASmvD,EAAmB58B,EAAYu9B,EAAcv9B,GAAaA,EAAYu9B,GAGhEp0D,GAD9By2B,EAAgBg9B,EAAmB58B,EAAYu9B,EAAa,EAAK9vD,EACzBgwD,eAAgB,IAAK9kB,OAAU,UAChF7S,EAAOkV,GAAiB,OAAQ8hB,IAC3BpmB,aAAa,QAAS,gBACpB5Q,GAEXlF,EAAMshB,UAAU8a,gBAAkB,SAAU3gB,EAAKjwC,GAC7C,IAAImgB,EACJ,GAAIngB,EAAS,CAETmgB,EAAOyuB,GAAiB,QADXzwB,MAAS,uBAEtBne,EAAQ0kC,YAAYvkB,GAExB,OAAOA,GAMXqU,EAAMshB,UAAUoa,mBAAqB,SAAU7tC,GAC3C,GAA0B,MAAtB3c,KAAK+uB,aACL,OAAO/uB,KAAK+uB,aAEhB,IAEIhB,EADA69B,EAAY,EAOhB,IAFA79B,EAFY,IAGZA,EAHY,IACCtxB,KAAKi1C,IAAI,EAAGj1C,KAAKC,MAAMD,KAAKovD,IAAIlvC,GAASlgB,KAAKovD,IAAI,KAGxD99B,EAAM,KACT69B,GAAa,GACb79B,GAAO,GAEX,KAAOA,EAAM,IACT69B,GAAa,GACb79B,GAAO,GAKX,OAHIA,GAhBO,IAgBQA,EAhBR,IAgBuB,IAC9BA,EAjBO,GAiBDtxB,KAAKC,MAAMqxB,EAjBV,KAmBJA,EAAMpR,EAAQivC,GAEzB98B,EAAMshB,UAAU0b,iBAAmB,SAAUC,EAAU78B,EAAU87B,GAC7D,IAAIh3B,EAQJ,OAPI9E,KACA8E,EAAO+3B,EAAS99B,eAAeiB,EAASrvB,GAAK,aAEzCm0B,EAAK/U,WAAW8f,YAAY/K,GAEhCA,EAAOkV,GAAiB,OAAQ8hB,IAE7Bh3B,GAOXlF,EAAMshB,UAAU4b,gBAAkB,SAAU98B,EAAU+8B,EAAch8C,GAChE,IAAI87C,EACA79B,EACAvR,EACAuvC,EACAx1D,EACAs0D,EACAh3B,EACAlG,EAAoC,eAArB9tB,KAAKqR,YACpB86C,EAAmBj9B,EAASk9B,qBAAqB,OACrD,IAAK11D,EAAI,EAAGA,EAAIy1D,EAAiB11D,OAAQC,IAAK,CACtCy1D,EAAiBz1D,KACjBq1D,EAAWI,EAAiBz1D,IAEhC,MAEJ,GAAIq1D,EAAU,CACV79B,EAAYluB,KAAKmuB,eACjB68B,GACInrD,GAAMqvB,EAASrvB,GAAK,UAAW3I,GAAM,EAAGC,GAAM,EAAGC,GAAO02B,EAAe,EAAII,EAC3E72B,GAAOy2B,EAAeI,EAAY,EAAI2Y,OAAU7mC,KAAKqsD,YAAaV,eAAgB,IAClFlzC,MAAS,oBAEbub,EAAOh0B,KAAK8rD,iBAAiBC,EAAU78B,EAAU87B,GACjDruC,EAAQ3c,KAAK2c,MACbuvC,EAAOlsD,KAAKiQ,OAASjQ,KAAK0qD,cAC1B,IACI4B,GADQx+B,EAAem+B,EAAaj1D,EAAIi1D,EAAah1D,GACrC0lB,EAAS1M,EAASi8C,EACtCl4B,EAAK4Q,aAAa,YAAa,cAAgB9W,EAAiBw+B,EAAO,GAAO,OAAW,QAAUA,EAAO,KAAS,KACnHP,EAAS/sB,YAAYhL,KAG7BlF,EAAMshB,UAAU/hB,iBAAmB,WAC/B,OAAO,IAAI/O,GAAKtf,KAAKJ,QAAUI,KAAKJ,QAAQ20B,wBAAwBh8B,MAAQ,EAAGyH,KAAKJ,QAAUI,KAAKJ,QAAQ20B,wBAAwBj8B,OAAS,IAEhJw2B,EAAMshB,UAAUjiB,aAAe,WAC3B,OAAOnuB,KAAK4vB,WAEhBd,EAAMshB,UAAU0Z,YAAc,SAAU17B,GACpC,IAAIm+B,EAEAhiB,EADArc,EAAYluB,KAAKmuB,eAErB,GAAInuB,KAAKJ,UACL2sD,EAAav+B,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,iBACvC,CAQZ,GADA0qC,EAAMrB,GAAiB,OALnBrpC,GAAMG,KAAKJ,QAAQC,GAAK,aACxBtH,MAA4B,eAArByH,KAAKqR,YAAgC+c,EAAc71B,MAAQ,IAAO21B,EAAY,KACrF51B,OAA6B,eAArB0H,KAAKqR,YAA+B6c,EAAaE,EAAc91B,OAAS,IAAO,KACvF4H,MAAO,sBAGPqsD,EAAWhoB,WAAW9tC,OAAS,EAC/B,IAAK,IAAIC,EAAI61D,EAAWhoB,WAAW9tC,OAAS,EAAGC,GAAK,EAAGA,IACnD61D,EAAWhoB,WAAW7tC,GAAGuoB,WAAW8f,YAAYwtB,EAAWhoB,WAAW7tC,IAG9E61D,EAAWvtB,YAAYuL,GAG/B,OAAOA,GAKXzb,EAAMshB,UAAU8Y,WAAa,aAM7Bp6B,EAAMshB,UAAU6Y,aAAe,aAG/BnY,IACIoB,WAAS,IACVpjB,EAAMshB,UAAW,gBAAY,GAChCU,IACIoB,WAAS,MACVpjB,EAAMshB,UAAW,oBAAgB,GACpCU,IACIoB,WAAS,eACVpjB,EAAMshB,UAAW,mBAAe,GACnCU,IACIoB,WAAS,kBACVpjB,EAAMshB,UAAW,qBAAiB,GACrCU,IACIoB,WAAS,QACVpjB,EAAMshB,UAAW,mBAAe,GACnCU,IACIoB,WAAS,KACVpjB,EAAMshB,UAAW,iBAAa,GACjCU,IACIoB,WAAS,OACVpjB,EAAMshB,UAAW,mBAAe,GACnCU,IACIoB,WAAS,MACVpjB,EAAMshB,UAAW,cAAU,GACvBthB,GACT09B,a5BrYE57B,IAEA67B,OAAU,8JAGV7R,SAAY,oDAEZ8R,UAAa,oDAEbC,YAAe,8FAEfC,SAAY,oDAEZC,SAAY,oDAEZC,UAAa,8JAGbC,eAAkB,6DAElBC,WAAc,sEAEdC,cAAiB,qEAEjBC,eAAkB,4BAElBC,KAAQ,2D6BjCR5c,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAM5Dq/C,GAA4B,SAAU7b,GAEtC,SAAS6b,IACL,OAAkB,OAAX7b,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAQ/D,OAVAuwC,GAAU6c,EAAY7b,GAItBT,IACIoB,cACDkb,EAAWhd,UAAW,WAAO,GAChCU,IACIoB,cACDkb,EAAWhd,UAAW,oBAAgB,GAClCgd,GACTjb,iBAKEtZ,GAAyB,SAAU0Y,GAEnC,SAAS1Y,IACL,OAAkB,OAAX0Y,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAwB/D,OA1BAuwC,GAAU1X,EAAS0Y,GAQnB1Y,EAAQuX,UAAU6B,aAAe,WAC7B,MAAO,WAEXnB,IACIoB,WAAS,KACVrZ,EAAQuX,UAAW,YAAQ,GAC9BU,IACIoB,cACDrZ,EAAQuX,UAAW,kBAAc,GACpCU,IACIoB,cACDrZ,EAAQuX,UAAW,eAAW,GACjCU,IACIyH,aAAY6U,KACbv0B,EAAQuX,UAAW,eAAW,GACjCU,IACIoB,WAAS,KACVrZ,EAAQuX,UAAW,iBAAa,GAC5BvX,GACTsZ,iBAKEkb,GAAgC,SAAU9b,GAE1C,SAAS8b,IACL,OAAkB,OAAX9b,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAK/D,OAPAuwC,GAAU8c,EAAgB9b,GAI1BT,IACIuE,gBAAexc,KAChBw0B,EAAejd,UAAW,gBAAY,GAClCid,GACTlb,iBAKEmb,GAAqC,SAAU/b,GAE/C,SAAS+b,IACL,OAAkB,OAAX/b,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAW/D,OAbAuwC,GAAU+c,EAAqB/b,GAI/BT,IACIoB,cACDob,EAAoBld,UAAW,YAAQ,GAC1CU,IACIoB,cACDob,EAAoBld,UAAW,0BAAsB,GACxDU,IACIoB,cACDob,EAAoBld,UAAW,aAAS,GACpCkd,GACTnb,iB5B0kDS9zB,GAAgB,SAAU9jB,GAWjC,OAVIA,IAIIA,OAHiBN,IAAjBM,EAAIkH,eAA8CxH,IAApBM,EAAIwG,kBACjB9G,IAAjBM,EAAI0sB,eAA8ChtB,IAApBM,EAAI0Q,kBACrBhR,IAAbM,EAAIsB,KACE8X,GAGAmB,IAGPva,GAGAsmD,GAAgB,SAAUt8C,GACjC,IAAKA,EAAU9C,WAAa8C,EAAU0iB,SAAU,CAC5C,IAAI1kB,GAAWvL,EAAGuN,EAAUxD,YAAY/J,EAAGC,EAAGsN,EAAUxD,YAAY9J,GAChE+L,GAAWhM,EAAGuN,EAAU0G,YAAYjU,EAAGC,EAAGsN,EAAU0G,YAAYhU,GAC7C,eAAnBsN,EAAUsvC,MACVtvC,EAAUxD,YAAY/J,EAAIgM,EAAOhM,EACjCuN,EAAU0G,YAAYjU,EAAIuL,EAAOvL,GAET,aAAnBuN,EAAUsvC,MACftvC,EAAUxD,YAAY9J,EAAI+L,EAAO/L,EACjCsN,EAAU0G,YAAYhU,EAAIsL,EAAOtL,GAET,SAAnBsN,EAAUsvC,OACftvC,EAAUxD,YAAciC,EACxBuB,EAAU0G,YAAc1I,KAKzBmmD,GAAkB,SAAUF,EAAa3U,EAAM1wC,GACtD,IAAIpH,EAAUoH,EAAK8M,OAAOjZ,EACtBgF,EAAUmH,EAAK8M,OAAOhZ,EAc1B,MAba,eAAT48C,GACA93C,EAAU,EAAIoH,EAAK8M,OAAOjZ,EAC1BgF,EAAUmH,EAAK8M,OAAOhZ,GAER,aAAT48C,GACL93C,EAAUoH,EAAK8M,OAAOjZ,EACtBgF,EAAU,EAAImH,EAAK8M,OAAOhZ,GAEZ,SAAT48C,IACL93C,EAAU,EAAIoH,EAAK8M,OAAOjZ,EAC1BgF,EAAU,EAAImH,EAAK8M,OAAOhZ,GAE9BuxD,EAAY/T,6BAA6B14C,EAASC,EAAS,YACpDwsD,GAGA+E,GAAe,SAAU3tD,EAAS7D,EAASC,EAASkD,EAAS20C,GACpE,GAAIj0C,EAAQi2C,cACR,IAAK,IAAIh5C,EAAK,EAAGohB,EAAKre,EAAQuS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC1D,IAAI0R,EAAQ0P,EAAGphB,GACXsuB,EAAWpvB,EAAUwS,EAAMxS,QAAWA,EACtCqvB,EAAWpvB,EAAUuS,EAAMvS,QAAWA,EAC7B,eAAT63C,GAAkC,SAATA,IACzBtlC,EAAMxS,QAAUovB,EAChB5c,EAAM6lC,WAAWp9C,EAAIm0B,EAAS5c,EAAMiR,YAAYjnB,MAAQ,GAE/C,aAATs7C,GAAgC,SAATA,IACvBtlC,EAAMvS,QAAUovB,EAChB7c,EAAM6lC,WAAWn9C,EAAIm0B,EAAS7c,EAAMiR,YAAYlnB,OAAS,IAEzDiW,aAAiBoT,IAAUpT,aAAiBi0B,KAC5C+qB,GAAah/C,EAAOxS,EAASC,EAASkD,EAAS20C,GAEnDtlC,EAAM8Q,QAAQ,IAAIC,GAAK/Q,EAAM/M,OAAOjJ,MAAOgW,EAAM/M,OAAOlJ,SACxDiW,EAAMgR,QAAQhR,EAAMiR,aACpB,IAAIjf,EAAOrB,EAAQ0c,UAAUrN,EAAM1O,IAC/BU,GACArB,EAAQsuD,qBAAqBjtD,KAMlC0+C,GAAoB,SAAUhB,EAAa15C,GAGlD,IAAK,IADDkpD,EADAC,EAAc,IAAI5+C,GAEbzY,EAAI,EAAGA,EAAI4nD,EAAYxnD,OAAS,EAAGJ,IACxCo3D,EAAc/N,GAASzB,EAAY5nD,GAAI4nD,EAAY5nD,EAAI,IACvDq3D,EAAYt3D,KAAOq3D,EAAY,GAC/BC,EAAY7tD,GAAK0E,EAAU1E,GAAK,IAAO0E,EAAUnG,MAAc,SAC/DsvD,EAAY3xD,QAAU0xD,EAAY,GAAGz2D,EACrC02D,EAAY1xD,QAAUyxD,EAAY,GAAGx2D,EACrCy2D,EAAYxgD,YAAc,GAC1BwgD,EAAY7nD,UAAYmtC,YAAUc,KAEtC,OAAO4Z,GAGAhO,GAAW,SAAU3+C,EAAakK,GACzC,IAAI0iD,GAAmB32D,EAAG+J,EAAY/J,EAAGC,EAAG8J,EAAY9J,GACpDyO,EAAW+5C,GAAa1+C,EAAakK,GACzCvF,EAAWjJ,KAAKyK,IAAI,GAAIxB,EAAW,GACnC,IAAIlO,EAAQqW,GAAU9M,EAAakK,GAC/B2iD,EAAaroD,GAAMM,WAAY7O,EAAG22D,EAAe32D,EAAGC,EAAG02D,EAAe12D,GAAKO,EAAOkO,GAClFmoD,EAAatoD,GAAMM,WAAY7O,EAAG42D,EAAW52D,EAAGC,EAAG22D,EAAW32D,GAAKO,GAAQ,IAC3Es2D,EAAWvoD,GAAMM,WAAY7O,EAAG62D,EAAW72D,EAAGC,EAAG42D,EAAW52D,GAAKO,EAAO,IAE5E,OADW,IAAMq2D,EAAW72D,EAAI,IAAM62D,EAAW52D,EAAI,KAAO62D,EAAS92D,EAAI,IAAM82D,EAAS72D,EAC1E22D,IAGPnO,GAAe,SAAUhvC,EAAQjY,GACxC,OAAOiE,KAAKg1C,KAAKh1C,KAAKi1C,IAAIl5C,EAAOxB,EAAIyZ,EAAOzZ,EAAG,GAAKyF,KAAKi1C,IAAIl5C,EAAOvB,EAAIwZ,EAAOxZ,EAAG,K6BlxDlF82D,GAAgC,WAChC,SAASA,KAymBT,OAtmBAA,EAAeC,WAAa,SAAUvsC,GAClC,OAAOA,EAAOusC,WAAW,OAE7BD,EAAeE,cAAgB,SAAUxsC,EAAQlpB,EAAOD,GAChDmpB,IACAA,EAAOmjB,aAAa,QAASrsC,EAAM+F,YACnCmjB,EAAOmjB,aAAa,SAAUtsC,EAAOgG,cAK7CyvD,EAAe3d,UAAU8d,eAAiB,SAAUtnB,EAASunB,EAAKn3D,EAAGC,GACjE,IAAI2O,EACAsB,EACAknD,EACJ,GAA8B,SAA1BxnB,EAAQvJ,SAASxhC,KAAiB,CAClC,IAAK,IAAInF,EAAI,EAAGA,EAAIkwC,EAAQvJ,SAASF,MAAM1mC,OAAQC,IAC/CkP,OAAc3L,IAAR2L,EAAoBghC,EAAQvJ,SAASF,MAAMzmC,GAAGuZ,OAASxT,KAAKmJ,IAAIA,EAAKghC,EAAQvJ,SAASF,MAAMzmC,GAAGuZ,QACrG/I,OAAcjN,IAARiN,EAAoB0/B,EAAQvJ,SAASF,MAAMzmC,GAAGuZ,OAASxT,KAAKyK,IAAIA,EAAK0/B,EAAQvJ,SAASF,MAAMzmC,GAAGuZ,QAEzG,GAA8B,WAA1B22B,EAAQvJ,SAASxhC,KAAmB,CACpC,IAAIwyD,EAASznB,EAAQvJ,SACrB+wB,EAAMD,EAAIG,qBAAqBt3D,EAAIq3D,EAAOn3D,GAAID,EAAIo3D,EAAOl3D,GAAIH,EAAIq3D,EAAOj3D,GAAIH,EAAIo3D,EAAOh3D,QAEtF,CACD,IAAIk3D,EAAS3nB,EAAQvJ,SACrB+wB,EAAMD,EAAIK,qBAAqBx3D,EAAIu3D,EAAOtxB,GAAIhmC,EAAIs3D,EAAOrxB,GAAI,EAAGlmC,EAAIu3D,EAAOxxB,GAAI9lC,EAAIs3D,EAAOvxB,GAAIuxB,EAAOxgD,GAEzG,IAASrX,EAAI,EAAGA,EAAIkwC,EAAQvJ,SAASF,MAAM1mC,OAAQC,IAAK,CACpD,IAAI+3D,EAAS7nB,EAAQvJ,SAASF,MAAMzmC,GAChCuZ,EAAS/I,EAAM,GAAKtB,EAAM6oD,EAAOx+C,SAAW,EAAIrK,GAAO6oD,EAAOx+C,OAASrK,EAC3EwoD,EAAIM,aAAaz+C,EAAQw+C,EAAOj1C,OAEpC20C,EAAIQ,UAAYP,EAEpB,OAAOD,GAGXJ,EAAe3d,UAAUwe,aAAe,SAAUhoB,EAASnlB,EAAQnrB,QAC5C,IAAfA,IAAyBA,EAAa,MAC1C,IAAI63D,EAAMJ,EAAeC,WAAWvsC,GACpC0sC,EAAIU,OACJV,EAAIW,YACJX,EAAIY,YAAcZ,EAAIQ,UAAY/nB,EAAQK,OAAOztB,MACjD20C,EAAIa,YAAcpoB,EAAQK,OAAO3K,QACjC,IACI3gC,EAAQ4J,GAAMM,WADF7O,EAAG,EAAGC,EAAG,GACY2vC,EAAQK,OAAOzvC,MAAOovC,EAAQK,OAAOvhC,UACtEupD,EAASroB,EAAQ5vC,EAAI2E,EAAM3E,EAC3Bk4D,EAAStoB,EAAQ3vC,EAAI0E,EAAM1E,EAC3B6vC,EAASmoB,EAASroB,EAAQruC,MAAQquC,EAAQE,OAC1CC,EAASmoB,EAAStoB,EAAQtuC,OAASsuC,EAAQG,OAC/C/mC,KAAKmvD,cAAc1tC,EAAQmlB,EAAQpvC,MAAOsvC,EAAQC,GAC9CzwC,GACA63D,EAAIvD,UAAUqE,EAAQC,GACtBlvD,KAAKovD,WAAW3tC,EAAQmlB,EAAStwC,GACjC63D,EAAIvD,WAAWqE,GAASC,KAGxBf,EAAI9hD,KAAK4iD,EAAQC,EAAQtoB,EAAQruC,MAAOquC,EAAQtuC,QAChD61D,EAAIkB,SAASJ,EAAQC,EAAQtoB,EAAQruC,MAAOquC,EAAQtuC,SAExD61D,EAAIp1C,OACJo1C,EAAItnB,SACJsnB,EAAImB,YACJnB,EAAIoB,WAGRxB,EAAeyB,aAAe,SAAU3vD,EAAItH,EAAOD,GAC/C,IAAIm3D,EAAYnhC,GAAkB,UAAYzuB,GAAMA,IAEpD,OADAG,KAAKiuD,cAAcwB,EAAWl3D,EAAOD,GAC9Bm3D,GAGX1B,EAAe3d,UAAUsf,SAAW,SAAUjuC,EAAQvhB,GAClD,IAAIiuD,EAAMJ,EAAeC,WAAWvsC,GACjB,SAAfvhB,EAAM6Y,OACN7Y,EAAM6Y,KAAO,eAEI,SAAjB7Y,EAAM2mC,SACN3mC,EAAM2mC,OAAS,eAEnBsnB,EAAIY,YAAc7uD,EAAM2mC,OACxBsnB,EAAIwB,UAAYzvD,EAAM+Y,YACI,IAAtB/Y,EAAM+Y,cACNk1C,EAAIY,YAAc,eAEtBZ,EAAIa,YAAc9uD,EAAMo8B,QACxB,IAAI0K,KACA9mC,EAAM8mC,YACNA,EAAYhnC,KAAK4vD,eAAe1vD,EAAM8mC,YAE1CmnB,EAAI0B,YAAY7oB,GACZ9mC,EAAMm9B,UAAoC,SAAxBn9B,EAAMm9B,SAASxhC,KACjCmE,KAAKkuD,eAAehuD,EAAOiuD,EAAK,EAAG,GAGnCA,EAAIQ,UAAYzuD,EAAM6Y,MAG9Bg1C,EAAe3d,UAAU+e,cAAgB,SAAU1tC,EAAQjqB,EAAOR,EAAGC,GACjE,IAAIk3D,EAAMJ,EAAeC,WAAWvsC,GACpC0sC,EAAIvD,UAAU5zD,EAAGC,GACjBk3D,EAAI2B,OAAOt4D,EAAQiF,KAAK2R,GAAK,KAC7B+/C,EAAIvD,WAAW5zD,GAAIC,IAEvB82D,EAAe3d,UAAU2f,aAAe,SAAUtuC,EAAQhH,GACtD,IAAI0zC,EAAMJ,EAAeC,WAAWvsC,GAChCuuC,EAAO,GACPv1C,EAAK+hB,SACLwzB,GAAQ,WAERv1C,EAAKnB,OACL02C,GAAQ,SAEZA,GAASv1C,EAAa,SAAI,MAC1Bu1C,GAAQv1C,EAAK8hB,WACb4xB,EAAI6B,KAAOA,GAGfjC,EAAe3d,UAAUwf,eAAiB,SAAU5oB,GAIhD,IAAK,IAHDipB,KACAC,GAAwC,IAA5BlpB,EAAU1mB,QAAQ,KAAc,IAAM,IAE7CzjB,EAAK,EAAGszD,EADInpB,EAAUj4B,MAAMmhD,GACerzD,EAAKszD,EAAiB15D,OAAQoG,IAAM,CACpF,IAAInG,EAAIy5D,EAAiBtzD,GACzBozD,EAAOn5D,KAAKqB,OAAOzB,IAEvB,OAAOu5D,GAIXlC,EAAe3d,UAAUggB,cAAgB,SAAU3uC,EAAQmlB,GACvD,IAAwB,IAApBA,EAAQhJ,QACR,GAAIgJ,EAAQvuC,aACRuuC,EAAQxwC,KAAOgC,EAAiBwuC,EAAQvuC,aAAcuuC,EAAQtuC,OAAQsuC,EAAQruC,OAC9EyH,KAAKqwD,SAAS5uC,EAAQmlB,OAErB,CACD,IAAIunB,EAAMJ,EAAeC,WAAWvsC,GAChCmlB,EAAQK,QACRjnC,KAAK4uD,aAAahoB,EAASnlB,GAE/B0sC,EAAIU,OACJV,EAAIW,YACeloB,EAAQvuC,aAA3B,IACIyuC,EAASF,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,OAC7CC,EAASH,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,OAClD/mC,KAAKmvD,cAAc1tC,EAAQmlB,EAAQpvC,MAAOsvC,EAAQC,GAClD/mC,KAAK0vD,SAASjuC,EAAQmlB,GACtBunB,EAAI9hD,KAAKu6B,EAAQ5vC,EAAG4vC,EAAQ3vC,EAAG2vC,EAAQruC,MAAOquC,EAAQtuC,QACtD61D,EAAIkB,SAASzoB,EAAQ5vC,EAAG4vC,EAAQ3vC,EAAG2vC,EAAQruC,MAAOquC,EAAQtuC,QAC1D61D,EAAIp1C,OACJo1C,EAAItnB,SACJsnB,EAAImB,YACJnB,EAAIoB,YAsChBxB,EAAe3d,UAAUigB,SAAW,SAAU5uC,EAAQmlB,GAClD,IAAItwC,KAEJA,EAAa0C,EADb1C,EAAaH,EAAgBywC,EAAQxwC,OAEjCwwC,EAAQK,QACRjnC,KAAK4uD,aAAahoB,EAASnlB,EAAQnrB,GAEvC,IAAI63D,EAAMJ,EAAeC,WAAWvsC,GACpC0sC,EAAIU,OACJV,EAAIW,YACJ,IAAI/nB,EAASH,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,OAC9CD,EAASF,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,OAC5B,eAAjBF,EAAQiN,MAA0C,aAAjBjN,EAAQiN,MACzCsa,EAAIvD,UAAUhkB,EAAQ5vC,EAAI4vC,EAAQruC,MAAQ,EAAGquC,EAAQ3vC,EAAI2vC,EAAQtuC,OAAS,GAC1E61D,EAAI2B,QAAQlpB,EAAQpvC,MAAQiF,KAAK2R,GAAK,KACtC+/C,EAAIvD,WAAWhkB,EAAQ5vC,EAAI4vC,EAAQruC,MAAQ,GAAIquC,EAAQ3vC,EAAI2vC,EAAQtuC,OAAS,IAG5E0H,KAAKmvD,cAAc1tC,EAAQmlB,EAAQpvC,MAAOsvC,EAAQC,GAEtD/mC,KAAK0vD,SAASjuC,EAAQmlB,GACtBunB,EAAIvD,UAAUhkB,EAAQ5vC,EAAG4vC,EAAQ3vC,GACZ,eAAjB2vC,EAAQiN,MACRsa,EAAIxxC,OAAO,EAAG,GACdwxC,EAAIvD,WAA2B,EAAjBhkB,EAAQruC,MAAY,IAEZ,aAAjBquC,EAAQiN,MACbsa,EAAIxxC,MAAM,GAAI,GACdwxC,EAAIvD,UAAU,GAAqB,EAAlBhkB,EAAQtuC,SAEH,SAAjBsuC,EAAQiN,OACbsa,EAAIxxC,OAAO,GAAI,GACfwxC,EAAIvD,WAA2B,EAAjBhkB,EAAQruC,OAA8B,EAAlBquC,EAAQtuC,SAE9C0H,KAAKovD,WAAW3tC,EAAQmlB,EAAStwC,GACjC63D,EAAIp1C,OACJo1C,EAAIvD,WAAWhkB,EAAQ5vC,GAAI4vC,EAAQ3vC,GACnCk3D,EAAItnB,SACJsnB,EAAIoB,WAGRxB,EAAe3d,UAAUgf,WAAa,SAAU3tC,EAAQmlB,EAAStwC,GAC7D,IAAwB,IAApBswC,EAAQhJ,QAAkB,CAC1B,IASIvyB,EATA8iD,EAAMJ,EAAeC,WAAWvsC,GAChCxoB,OAAK,EACLC,OAAK,EACLhC,OAAK,EACLC,OAAK,EACLC,OAAK,EACLC,OAAK,EACLL,OAAI,EACJC,OAAI,EAEJP,OAAI,EAEJ45D,EAAOh6D,EACX,IAAKU,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAG2U,EAAWilD,EAAK75D,OAAQC,EAAI2U,IAAY3U,EAAG,CACjE,IACIqC,EADMu3D,EAAK55D,GAEXE,EAAOmC,EAAIhC,QAmBf,OAlBI,OAAQgC,IACR7B,EAAK6B,EAAI7B,IAET,OAAQ6B,IACR3B,EAAK2B,EAAI3B,IAET,OAAQ2B,IACR5B,EAAK4B,EAAI5B,IAET,OAAQ4B,IACR1B,EAAK0B,EAAI1B,IAET,MAAO0B,IACP/B,EAAI+B,EAAI/B,GAER,MAAO+B,IACP9B,EAAI8B,EAAI9B,GAEJL,GACJ,IAAK,IACDu3D,EAAIoC,OAAOv5D,EAAGC,GACd8B,EAAI/B,EAAIA,EACR+B,EAAI9B,EAAIA,EACR,MACJ,IAAK,IACDk3D,EAAIqC,OAAOx5D,EAAGC,GACd8B,EAAI/B,EAAIA,EACR+B,EAAI9B,EAAIA,EACR,MACJ,IAAK,IACDk3D,EAAIsC,cAAcv5D,EAAIC,EAAIC,EAAIC,EAAIL,EAAGC,GACrC8B,EAAI/B,EAAIA,EACR+B,EAAI9B,EAAIA,EACR8B,EAAI7B,GAAKA,EACT6B,EAAI5B,GAAKA,EACT4B,EAAI3B,GAAKA,EACT2B,EAAI1B,GAAKA,EACT,MACJ,IAAK,IACD82D,EAAIuC,iBAAiBx5D,EAAIC,EAAIH,EAAGC,GAChC8B,EAAI/B,EAAIA,EACR+B,EAAI9B,EAAIA,EACR8B,EAAI7B,GAAKA,EACT6B,EAAI5B,GAAKA,EACT,MACJ,IAAK,IACD,IAAIw5D,EAAY13D,EAAZ03D,EAAmBz3D,EACnB03D,EAAK73D,EAAIzB,GACTu5D,EAAK93D,EAAIxB,GACTu5D,EAAgB/3D,EAAIvB,OAASiF,KAAK2R,GAAK,KACvC3W,EAAWsB,EAAItB,SACfC,EAAQqB,EAAIrB,MACZq5D,EAAU/5D,EAAV+5D,EAAgB95D,EAChB+5D,GACAh6D,EAAGyF,KAAKY,IAAIyzD,IAAkBH,EAASI,GAAQ,EAAMt0D,KAAKW,IAAI0zD,IAAkBH,EAASI,GAAQ,EACjG95D,GAAIwF,KAAKW,IAAI0zD,IAAkBH,EAASI,GAAQ,EAAMt0D,KAAKY,IAAIyzD,IAAkBH,EAASI,GAAQ,GAElG31D,EAAIqB,KAAKi1C,IAAIsf,EAAMh6D,EAAG,GAAKyF,KAAKi1C,IAAIkf,EAAI,GAAKn0D,KAAKi1C,IAAIsf,EAAM/5D,EAAG,GAAKwF,KAAKi1C,IAAImf,EAAI,GACjFz1D,EAAI,IACJw1D,GAAMn0D,KAAKg1C,KAAKr2C,GAChBy1D,GAAMp0D,KAAKg1C,KAAKr2C,IAEpB,IAAIooB,EAAK/mB,KAAKi1C,IAAImf,EAAI,GAAKp0D,KAAKi1C,IAAIsf,EAAMh6D,EAAG,GACzC4C,GAAKnC,IAAaC,GAAS,EAAI,GAAK+E,KAAKg1C,MAAOh1C,KAAKi1C,IAAIkf,EAAI,GAAKn0D,KAAKi1C,IAAImf,EAAI,GAAOp0D,KAAKi1C,IAAIkf,EAAI,GAAKn0D,KAAKi1C,IAAIsf,EAAM/5D,EAAG,GAAMusB,IAC/H/mB,KAAKi1C,IAAIkf,EAAI,GAAKn0D,KAAKi1C,IAAIsf,EAAM/5D,EAAG,GAAKwF,KAAKi1C,IAAImf,EAAI,GAAKp0D,KAAKi1C,IAAIsf,EAAMh6D,EAAG,KAC9EmY,MAAMvV,KACNA,EAAI,GAER,IAAIq3D,EAAWr3D,EAAIg3D,EAAKI,EAAM/5D,EAAI45D,EAA9BI,EAAqCr3D,GAAKi3D,EAAKG,EAAMh6D,EAAI45D,EACzDM,GACAl6D,GAAI25D,EAASI,GAAQ,EAAMt0D,KAAKY,IAAIyzD,GAAiBG,EAAQx0D,KAAKW,IAAI0zD,GAAiBG,EACvFh6D,GAAI05D,EAASI,GAAQ,EAAMt0D,KAAKW,IAAI0zD,GAAiBG,EAAQx0D,KAAKY,IAAIyzD,GAAiBG,GAEvFzhD,EAAKxP,KAAKuQ,GAAG,EAAG,KAAMygD,EAAMh6D,EAAIi6D,GAASL,GAAKI,EAAM/5D,EAAIg6D,GAASJ,IACjEM,IAAMH,EAAMh6D,EAAIi6D,GAASL,GAAKI,EAAM/5D,EAAIg6D,GAASJ,GACjDO,KAAOJ,EAAMh6D,EAAIi6D,GAASL,IAAMI,EAAM/5D,EAAIg6D,GAASJ,GACnDQ,EAAKrxD,KAAKuQ,EAAE4gD,EAAGC,GAoBnB,GAnBIpxD,KAAK+N,EAAEojD,EAAGC,KAAO,IACjBC,EAAK50D,KAAK2R,IAEVpO,KAAK+N,EAAEojD,EAAGC,IAAM,IAChBC,EAAK,GAQTt4D,EAAIm4D,MAAQA,EACZn4D,EAAI+3D,cAAgBA,EACpB/3D,EAAI63D,GAAKA,EACT73D,EAAI83D,GAAKA,EACT93D,EAAIyW,GAAKA,EACTzW,EAAIs4D,GAAKA,EACTt4D,EAAIrB,MAAQA,EACD,MAAPy2D,EAAa,CACb,IAAImD,EAAKV,EAAKC,EAAKD,EAAKC,EACpBU,EAAKX,EAAKC,EAAK,EAAID,EAAKC,EACxBW,EAAKZ,EAAKC,EAAKA,EAAKD,EAAK,EAC7BzC,EAAIU,OACJV,EAAIvD,UAAUsG,EAAMl6D,EAAGk6D,EAAMj6D,GAC7Bk3D,EAAI2B,OAAOgB,GACX3C,EAAIxxC,MAAM40C,EAAIC,GACdrD,EAAIsD,IAAI,EAAG,EAAGH,EAAI9hD,EAAIA,EAAK6hD,GAAK35D,GAChCy2D,EAAIxxC,MAAM,EAAI40C,EAAI,EAAIC,GACtBrD,EAAI2B,QAAQgB,GACZ3C,EAAIvD,WAAWsG,EAAMl6D,GAAIk6D,EAAMj6D,GAC/Bk3D,EAAIoB,UAER,MACJ,IAAK,IACL,IAAK,IACDpB,EAAImB,YACJt4D,EAAIiC,EACJhC,EAAIiC,EAGZD,EAAKjC,EACLkC,EAAKjC,KAKjB82D,EAAe3d,UAAUshB,SAAW,SAAUjwC,EAAQmlB,EAAS+qB,EAAWC,EAAWvuB,EAAWwuB,GAC5F,GAAIjrB,EAAQ3mC,UAA+B,IAApB2mC,EAAQhJ,QAAkB,CAC7C,IAAIuwB,EAAMJ,EAAeC,WAAWvsC,GACpC0sC,EAAIU,OACJ7uD,KAAK0vD,SAASjuC,EAAQmlB,GAClBirB,IACAjrB,EAAQrtB,UAAYs4C,GAExB,IAAI/qB,EAASF,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,OAC7CC,EAASH,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,OAClD/mC,KAAKmvD,cAAc1tC,EAAQmlB,EAAQpvC,MAAOsvC,EAAQC,GAClD/mC,KAAK+vD,aAAatuC,EAAQmlB,GAC1B,IAAIlwC,EAAI,EACJ6tC,KACJA,EAAaqC,EAAQrC,WACrB,IAAIoC,EAAaC,EAAQD,WAEzB,GADAwnB,EAAIQ,UAAY/nB,EAAQptB,MACpBmtB,EAAY,CACZ,IAAItmC,EAAWL,KAAK8xD,WAAWlrB,EAASD,EAAYpC,GACpD,IAAK7tC,EAAI,EAAGA,EAAI6tC,EAAW9tC,OAAQC,IAAK,CACpC,IAAI6X,EAAQg2B,EAAW7tC,GACnBqF,EAAUsE,EAASrJ,GAAK66D,EAAatjD,EAAMvX,EAAI66D,EAAatjD,EAAMvX,GAAK2vC,EAAW3vC,EAClFgF,EAAUqE,EAASpJ,GAAK46D,EAAatjD,EAAM+2B,GAAKusB,EAAatjD,EAAM+2B,IAAM5uC,EAA0B,GAApBkwC,EAAgB,SAKnG,GAJID,EAAWpuC,MAAQquC,EAAQruC,OAAkC,SAAzBquC,EAAQvK,eAC5C9tB,EAAMkM,KAAOkyB,GAASp+B,EAAMkM,KAAMmsB,IAEtCunB,EAAI4D,SAASxjD,EAAMkM,KAAM1e,EAASC,GACH,cAA3B4qC,EAAQjK,gBACsB,aAA3BiK,EAAQjK,gBACmB,gBAA3BiK,EAAQjK,eAAkC,CAC7C,IAAIq1B,EAAcj2D,EACdk2D,OAAc,EAEdC,EAAYn2D,EADCoyD,EAAIznB,YAAYn4B,EAAMkM,MAAMliB,MAEzC45D,OAAY,EAChB,OAAQvrB,EAAQjK,gBACZ,IAAK,YACDs1B,EAAcj2D,EAAU,EACxBm2D,EAAYn2D,EAAU,EACtB,MACJ,IAAK,WACDi2D,EAAe5xD,EAASpJ,EAAIsX,EAAM+2B,GAAK5uC,EACvCy7D,EAAa9xD,EAASpJ,EAAIsX,EAAM+2B,GAAK5uC,EACrC,MACJ,IAAK,cACDu7D,GAAgBj2D,EAAUqE,EAASpJ,EAAIsX,EAAM+2B,GAAK5uC,GAAK,EAAK,EAC5Dy7D,GAAcn2D,EAAUqE,EAASpJ,EAAIsX,EAAM+2B,GAAK5uC,GAAK,EAAK,EAElEy3D,EAAIW,YACJX,EAAIoC,OAAOyB,EAAaC,GACxB9D,EAAIqC,OAAO0B,EAAWC,GACtBhE,EAAIY,YAAcnoB,EAAQptB,MAC1B20C,EAAIwB,UAA+B,IAAnB/oB,EAAQrtB,SACxB40C,EAAIa,YAAcpoB,EAAQtK,QAC1B6xB,EAAItnB,WAIhBsnB,EAAIoB,YAGZxB,EAAe3d,UAAUgiB,UAAY,SAAUjE,EAAK5zD,EAAKknB,EAAQqlB,EAAQC,GACrE/mC,KAAKmvD,cAAc1tC,EAAQlnB,EAAI/C,MAAOsvC,EAAQC,GAC9C,IAAIsrB,EAAQ,IAAIl7B,MAChBk7B,EAAMxpD,IAAMtO,EAAIgI,OAChBvC,KAAKqyD,MAAMlE,EAAKkE,EAAO93D,EAAIvD,EAAGuD,EAAItD,EAAGsD,EAAIhC,MAAOgC,EAAIjC,OAAQiC,IAGhEwzD,EAAe3d,UAAUkiB,UAAY,SAAU7wC,EAAQlnB,EAAKo3D,EAAWY,GACnE,IAAI9c,EAAQz1C,KACZ,GAAIzF,EAAIqjC,QAAS,CACb,IAAI40B,EAAQzE,EAAeC,WAAWvsC,GACtC+wC,EAAM3D,OACN,IAAI4D,EAAWl4D,EAAIvD,EAAIuD,EAAIhC,MAAQgC,EAAIusC,OACnC4rB,EAAWn4D,EAAItD,EAAIsD,EAAIjC,OAASiC,EAAIwsC,OACpC4rB,EAAW,IAAIx7B,MACnBw7B,EAAS9pD,IAAMtO,EAAIgI,OACnB,IAAI1C,EAAK2yD,EAAM/wC,OAAO5hB,GAAGkP,MAAM,KACnBlP,EAAGA,EAAGpJ,OAAS,GAUtB87D,EAIDI,EAASC,OAAS,WACdnd,EAAM2c,UAAUI,EAAOj4D,EAAKknB,EAAQgxC,EAAUC,IAJlD1yD,KAAKoyD,UAAUI,EAAOj4D,EAAKknB,EAAQgxC,EAAUC,GAOjDF,EAAMjD,YAGdxB,EAAe3d,UAAUiiB,MAAQ,SAAUlE,EAAKkE,EAAOr7D,EAAGC,EAAGsB,EAAOD,EAAQu6D,GACxE1E,EAAIW,YACJ,IAAIgE,EAAWT,EAAM95D,MACjBw6D,EAAYV,EAAM/5D,OAClB06D,EAAez6D,EACf06D,EAAe36D,EACf46D,EAAc,EACdC,EAAe,EACnB,GAAIN,GAA2C,SAA3BA,EAAal9B,UAAsB,CACnD,IAAIy9B,EAASP,EAAal9B,UAAU9+B,cAAcg2C,OAAO,EAAG,GACxDwmB,EAASR,EAAal9B,UAAU9+B,cAAcg2C,OAAO,EAAG,GAC5D,GAA2B,UAAvBgmB,EAAal2C,MAAmB,CAChC,IAAIpM,EAAI,WACJ2iD,EAAcF,EACdG,EAAeJ,EAAYC,EAAeF,GAE1CtiD,EAAI,WACJ0iD,EAAcJ,EAAWG,EAAeF,EACxCI,EAAeF,GAEfD,EAAeC,GACf1iD,IACI0iD,EAAeE,GACf3iD,KAGCwiD,IAAiBC,EAClBH,EAAWC,EACXviD,IAGAD,KAIJC,IACIwiD,EAAeE,GACf3iD,KAGR,IAAIrZ,EAAK8I,KAAKszD,eAAeF,EAAQF,EAAaF,EAAcF,GAC5D37D,EAAK6I,KAAKszD,eAAeD,EAAQF,EAAcF,EAAcF,GAC7DQ,EAAST,EAAW57D,EACpBs8D,EAAUT,EAAY57D,EACtBs8D,EAASP,EAAeh8D,GAAMg8D,EAAcJ,GAC5CY,EAAUP,EAAgBh8D,GAAMg8D,EAAeJ,GAC/CY,EAAUrlC,GAAkB,UAAY/1B,MAASA,EAAM+F,WAAYhG,OAAUA,EAAOgG,aAC7Eq1D,EAAQ3F,WAAW,MACzBsE,UAAUD,EAAOn7D,EAAIC,EAAIo8D,EAAQC,EAAS,EAAG,EAAGC,EAAQC,GAC7DvF,EAAImE,UAAUqB,EAAS38D,EAAGC,EAAGsB,EAAOD,QAEnC,GAA2B,SAAvBu6D,EAAal2C,MAAkB,CACpC,IAAIi3C,EAAYb,EAAYD,EACxBe,EAAaZ,EAAeD,EAChCE,EAAcW,EAAYD,EAAWZ,EAAeC,EAAeW,EACnET,EAAeU,EAAYD,EAAWZ,EAAeY,EAAWX,EAChEj8D,GAAKgJ,KAAK8zD,cAAcV,EAAQF,EAAaF,GAC7C/7D,GAAK+I,KAAK8zD,cAAcT,EAAQF,EAAcF,GAC9C9E,EAAImE,UAAUD,EAAO,EAAG,EAAGS,EAAUC,EAAW/7D,EAAGC,EAAGi8D,EAAaC,QAGnEhF,EAAImE,UAAUD,EAAOr7D,EAAGC,EAAGsB,EAAOD,QAGrC,GAA0B,SAAtBu6D,EAAahf,KAAiB,CACnC,IAAIn2C,EAAS,EACTC,EAAS,EACa,eAAtBk1D,EAAahf,MAA+C,SAAtBgf,EAAahf,OACnD78C,GAAKA,EACLuB,GAASA,EACTmF,GAAU,GAEY,aAAtBm1D,EAAahf,MAA6C,SAAtBgf,EAAahf,OACjD58C,GAAKA,EACLqB,GAAUA,EACVqF,GAAU,GAEdwwD,EAAIxxC,MAAMjf,EAAQC,GAClBwwD,EAAImE,UAAUD,EAAOr7D,EAAGC,EAAGsB,EAAOD,QAGlC61D,EAAImE,UAAUD,EAAOr7D,EAAGC,EAAGsB,EAAOD,GAEtC61D,EAAImB,aAERvB,EAAe3d,UAAUkjB,eAAiB,SAAUS,EAAKC,EAAKC,EAAMprD,GAChE,OAAQkrD,GACJ,IAAK,MAAO,OAAO,EACnB,IAAK,MAAO,OAAQC,EAAMC,GAAQ,EAAIprD,EAAMmrD,EAC5C,IAAK,MAAO,OAAQA,EAAMC,GAAQprD,EAAMmrD,EACxC,QAAS,OAAO,IAGxBjG,EAAe3d,UAAU0jB,cAAgB,SAAUC,EAAKC,EAAKC,GACzD,IAAIruD,EAAMnJ,KAAKmJ,IAAIouD,EAAKC,GACpB/sD,EAAMzK,KAAKyK,IAAI8sD,EAAKC,GACxB,OAAQF,GACJ,IAAK,MAAO,OAAO,EACnB,IAAK,MAAO,OAAQnuD,EAAMsB,GAAO,EACjC,IAAK,MAAO,OAAOtB,EAAMsB,EACzB,QAAS,OAAO,IAKxB6mD,EAAe3d,UAAUqR,EAAI,SAAU2P,GAAK,OAAO30D,KAAKg1C,KAAKh1C,KAAKi1C,IAAI0f,EAAE,GAAI,GAAK30D,KAAKi1C,IAAI0f,EAAE,GAAI,KAEhGrD,EAAe3d,UAAUriC,EAAI,SAAUojD,EAAGC,GAAK,OAAQD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,KAAOpxD,KAAKyhD,EAAE0P,GAAKnxD,KAAKyhD,EAAE2P,KAExGrD,EAAe3d,UAAU7/B,EAAI,SAAU4gD,EAAGC,GAAK,OAAQD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAAM,EAAI,GAAK30D,KAAKy3D,KAAKl0D,KAAK+N,EAAEojD,EAAGC,KAGjHrD,EAAe3d,UAAU0hB,WAAa,SAAUr3C,EAAMksB,EAAYpC,GAC9D,IAAI/iC,EAAS,IAAI8d,GAAKqnB,EAAWpuC,MAAOgsC,EAAW9tC,QAA0B,IAAhBgkB,EAAKlB,WAC9DlZ,GAAarJ,EAAG,EAAGC,EAAG,GACtBk9D,EAAS15C,EAAKzjB,EACdo9D,EAAS35C,EAAKxjB,EAGdo9D,EAFuB,GAAb55C,EAAKliB,MAGf+7D,EAFwB,GAAd75C,EAAKniB,OAmBnB,MAhBuB,SAAnBmiB,EAAKgiB,UACL43B,EAAS,EAEe,WAAnB55C,EAAKgiB,UAEN43B,EADA1tB,EAAWpuC,MAAQkiB,EAAKliB,QAAgC,aAAtBkiB,EAAK4hB,cAAqD,SAAtB5hB,EAAK4hB,cAClE,EAGa,GAAb5hB,EAAKliB,MAGM,UAAnBkiB,EAAKgiB,YACV43B,EAAuB,EAAb55C,EAAKliB,OAEnB8H,EAASrJ,EAAIm9D,EAASE,GAAU1tB,EAAaA,EAAW3vC,EAAI,GAC5DqJ,EAASpJ,EAAIm9D,EAASE,EAAS9yD,EAAOlJ,OAAS,EACxC+H,GAEJ0tD,KCvmBPwG,GAA6B,WAC7B,SAASA,KAglBT,OA7kBAA,EAAYnkB,UAAUwe,aAAe,SAAUhoB,EAASnlB,EAAQnrB,EAAYq7D,QACrD,IAAfr7D,IAAyBA,EAAa,MAC1C,IAMIuF,EACA24D,EANA74D,EAAQ4J,GAAMM,WADC7O,EAAG,EAAGC,EAAG,GACY2vC,EAAQK,OAAOzvC,MAAOovC,EAAQK,OAAOvhC,UACzE+uD,EAAK7tB,EAAQ5vC,EAAI2E,EAAM3E,EACvB09D,EAAK9tB,EAAQ3vC,EAAI0E,EAAM1E,EACT2vC,EAAQruC,MAAQquC,EAAQE,OACxBF,EAAQtuC,OAASsuC,EAAQG,OAGvC4qB,IACA6C,EAAgB7C,EAAU1jC,eAAexM,EAAO5hB,GAAK,YAEpD20D,IACD34D,EAAOvF,EAAa,OAAS,OAC7Bk+D,EAAgBxmC,SAASmb,gBAAgB,6BAA8BttC,GACvE4lB,EAAOud,YAAYw1B,IAEvB,IAAIxJ,GACAnrD,GAAM4hB,EAAO5hB,GAAK,UAAWkZ,KAAQ6tB,EAAQK,OAAOztB,MAAOqtB,OAAUD,EAAQK,OAAOztB,MACpF8iB,QAAWsK,EAAQK,OAAO3K,QAAQh+B,WAClCuH,UAAa,UAAY+gC,EAAQpvC,MAAQ,KAAOovC,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,QAAU,KACvFF,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,QAAU,eAClCH,EAAQ5vC,EAAI2E,EAAM3E,GAAK,KAAO4vC,EAAQ3vC,EAAI0E,EAAM1E,GAAK,KAE7E,GAAI06D,EAAW,CACX,IAAIgD,EAAehD,EAAU1jC,eAAexM,EAAO5hB,IAC/C80D,GACAA,EAAapmC,aAAaimC,EAAeG,EAAanmC,YAG9D4a,GAAgBorB,EAAexJ,GAC1B10D,EAGIA,GACL0J,KAAKovD,WAAWoF,EAAe5tB,EAAStwC,GAHxC8yC,GAAgBorB,GAAiBj8D,MAASquC,EAAQruC,MAAOD,OAAUsuC,EAAQtuC,UAOnFi8D,EAAYnkB,UAAUwf,eAAiB,SAAU5oB,GAE7C,UAGJutB,EAAYnkB,UAAUggB,cAAgB,SAAU7lB,EAAK3D,EAASvD,EAAWuxB,EAAUC,EAAYlD,EAAWC,GAClGhrB,EAAQK,SAAW2tB,GACnB50D,KAAK4uD,aAAahoB,EAAS2D,OAAKtwC,EAAW03D,GAE/C,IAAI9xD,EAEAA,EADA+mC,EAAQ/mC,KAAO0qC,EAAI1qC,GACd+mC,EAAQ/mC,GAAK,aAGb+mC,EAAQ/mC,GAEjB,IAAIwM,EACAslD,IACAtlD,EAAOslD,EAAU1jC,eAAepuB,IAE/BwM,IAAQwoD,IACTxoD,EAAO2hB,SAASmb,gBAAgB,6BAA8B,QAC9DoB,EAAIvL,YAAY3yB,IAEpB,IAAImoD,EACA7C,IAAc/qB,EAAQK,SACtButB,EAAgB7C,EAAU1jC,eAAe2Y,EAAQ/mC,GAAK,0BAElD20D,EAAcv1C,WAAW8f,YAAYy1B,GAG7C,IAAIxJ,GACAnrD,GAAMA,EAAI7I,EAAK4vC,EAAQ5vC,EAAEsH,WAAYrH,EAAK2vC,EAAQ3vC,EAAEqH,WAAY/F,MAASquC,EAAQruC,MAAM+F,WACvFhG,OAAUsuC,EAAQtuC,OAAOgG,WAAYqjC,WAAciF,EAAQhJ,QAAU,UAAY,SACjF/3B,UAAa,UAAY+gC,EAAQpvC,MAAQ,KAClCovC,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,QAAU,KAAOF,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,QAAU,IAC3G6pB,GAAMhqB,EAAQvuC,cAAgB,EAAGw4D,GAAMjqB,EAAQvuC,cAAgB,EAAGikC,QAAWsK,EAAQtK,QACrFw4B,aAAclD,GAAwB,IAEtChrB,EAAQnuB,QACRuyC,EAAY,MAAIpkB,EAAQnuB,OAGvBm5C,IACD5G,EAFe,kBAEM,QAEzB5hB,GAAgB/8B,EAAM2+C,GACtBhrD,KAAK+0D,YAAY1oD,EAAMu6B,EAASvD,IAGpCkxB,EAAYnkB,UAAU4kB,sBAAwB,SAAUC,EAAUruB,GAC9D,IAAIv6B,EACJA,EAAO4oD,EAASh2C,WAAWgP,eAAe2Y,EAAQ/mC,IAClD,IAAImrD,EACJA,GACInrD,GAAM+mC,EAAQ/mC,GAAI7I,EAAK4vC,EAAQ5vC,EAAEsH,WAAYrH,EAAK2vC,EAAQ3vC,EAAEqH,WAAY/F,MAASquC,EAAQruC,MAAM+F,WAC/FhG,OAAUsuC,EAAQtuC,OAAOgG,WAAYuH,UAAa,UAAY+gC,EAAQpvC,MAAQ,KACvEovC,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,QAAU,KAAOF,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,QAAU,IAC3GtuB,MAAO,6BAENpM,IACDA,EAAO2hB,SAASmb,gBAAgB,6BAA8B,QAC9D8rB,EAASj2B,YAAY3yB,IAEzBrM,KAAK+0D,YAAY1oD,EAAMu6B,GACvBwC,GAAgB/8B,EAAM2+C,IAG1BuJ,EAAYnkB,UAAU8kB,eAAiB,SAAUnsB,EAAaruB,GAE1D,OADewuB,GAAiBH,EAAaruB,IAIjD65C,EAAYnkB,UAAU+kB,SAAW,SAAUF,EAAUruB,GACjD,IAAI5S,EAAOhG,SAASmb,gBAAgB,6BAA8B,QAClEnpC,KAAK+0D,YAAY/gC,EAAM4S,GACvB,IAAIE,EAASF,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,OAC7CC,EAASH,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,OAE9CikB,GACAnrD,GAAM+mC,EAAQ/mC,GACd3I,GAAM0vC,EAAQh0B,WAAW5b,EAAI4vC,EAAQ5vC,EACrCG,GAAMyvC,EAAQh0B,WAAW3b,EAAI2vC,EAAQ3vC,EACrCG,GAAMwvC,EAAQj7B,SAAS3U,EAAI4vC,EAAQ5vC,EACnCK,GAAMuvC,EAAQj7B,SAAS1U,EAAI2vC,EAAQ3vC,EACnC4vC,OAAUD,EAAQC,OAClB8kB,eAAgB/kB,EAAQ3tB,YAAY3a,WAAYg+B,QAAWsK,EAAQtK,QAAQh+B,WAC3EuH,UAAa,UAAY+gC,EAAQpvC,MAAQ,IAAMsvC,EAAS,IAAMC,EAAS,IACvEpF,WAAciF,EAAQhJ,QAAU,UAAY,UAE5CgJ,EAAQnuB,QACRuyC,EAAY,MAAIpkB,EAAQnuB,OAE5B2wB,GAAgBpV,EAAMg3B,GACtBiK,EAASj2B,YAAYhL,IAGzBugC,EAAYnkB,UAAUglB,WAAa,SAAUH,EAAUruB,EAASyuB,EAAgBzD,GAC5E,IAAI0D,EAAStnC,SAASmb,gBAAgB,6BAA8B,UACpEnpC,KAAK+0D,YAAYO,EAAQ1uB,GACzB,IAAI2uB,EAAW3uB,EAAQnuB,OAAS,GAC3B48C,IACDE,GAAY,eAEhB,IAAIvK,GACAnrD,GAAM+mC,EAAQ/mC,GACdk9B,GAAM6J,EAAQ5pC,QACdggC,GAAM4J,EAAQ3pC,QACd8Q,EAAK64B,EAAQ4uB,OACb7zB,WAAciF,EAAQhJ,QAAU,UAAY,SAC5CnlB,MAAS88C,EACTT,aAAclD,EAAYA,EAAU,cAAgB,IAExD0D,EAAOp1D,MAAMC,QAAUymC,EAAQhJ,QAAU,QAAU,OACnDwL,GAAgBksB,EAAQtK,GACxBiK,EAASj2B,YAAYs2B,IAGzBf,EAAYnkB,UAAUigB,SAAW,SAAU9lB,EAAK3D,EAASvD,EAAWwxB,EAAYlD,EAAWC,GACvF,IACI56D,EAAIyF,KAAKymC,MAAuB,GAAhBzmC,KAAK2uC,SAAiB,GACrCb,EAAI1qC,GAAgB7I,EAAEsH,WAC3B,IAAIhI,KAEJA,EAAa0C,EADb1C,EAAaH,EAAgBywC,EAAQxwC,OAEjCwwC,EAAQK,QACRjnC,KAAK4uD,aAAahoB,EAAS2D,EAAKj0C,EAAYq7D,GAEhD,IAAI6C,EACA7C,IAAc/qB,EAAQK,SACtButB,EAAgB7C,EAAU1jC,eAAe2Y,EAAQ/mC,GAAK,0BAElD20D,EAAcv1C,WAAW8f,YAAYy1B,GAG7C,IAAI97D,EACAi5D,IACAj5D,EAAOi5D,EAAU1jC,eAAe2Y,EAAQ/mC,KAEvCnH,IAAQm8D,IACTn8D,EAAOs1B,SAASmb,gBAAgB,6BAA8B,QAC9DoB,EAAIvL,YAAYtmC,IAEpBsH,KAAKovD,WAAW12D,EAAMkuC,EAAStwC,GAC/B,IAAI00D,GACAnrD,GAAM+mC,EAAQ/mC,GAAIgG,UAAa,UAAY+gC,EAAQpvC,MAAQ,KAAOovC,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,QAAU,KACzGF,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,QAAU,cAAsBH,EAAS,EAAI,IAAOA,EAAS,EAAI,IAC7GjF,WAAciF,EAAQhJ,QAAU,UAAY,SAAUtB,QAAWsK,EAAQtK,QACzEw4B,aAAclD,GAAwB,IAEtChrB,EAAQnuB,QACRuyC,EAAY,MAAIpkB,EAAQnuB,OAE5B2wB,GAAgB1wC,EAAMsyD,GACtBhrD,KAAK+0D,YAAYr8D,EAAMkuC,EAASvD,IAGpCkxB,EAAYnkB,UAAUgf,WAAa,SAAU7kB,EAAK3D,EAAStwC,GACvD,IAAIY,EACAC,EACAC,EACAC,EACAL,EACAC,EACAR,EACAC,EACAyC,EAAW7C,EACX88B,EAAI,GACR,IAAKp8B,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGD,EAAS0C,EAAS1C,OAAQC,EAAID,IAAUC,EAAG,CACjE,IACI4D,EADMnB,EAASzC,GAEfE,EAAO0D,EAAQvD,QAmBnB,OAlBI,OAAQuD,IACRpD,EAAKoD,EAAQpD,IAEb,OAAQoD,IACRlD,EAAKkD,EAAQlD,IAEb,OAAQkD,IACRnD,EAAKmD,EAAQnD,IAEb,OAAQmD,IACRjD,EAAKiD,EAAQjD,IAEb,MAAOiD,IACPtD,EAAIsD,EAAQtD,GAEZ,MAAOsD,IACPrD,EAAIqD,EAAQrD,GAERL,GACJ,IAAK,IACDw8B,EAAIA,EAAI,IAAMp8B,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IAClD,MACJ,IAAK,IACD80B,EAAIA,EAAI,IAAMp8B,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IAClD,MACJ,IAAK,IACD80B,EAAIA,EAAI,IAAMl8B,EAAGoH,WAAa,IAAMnH,EAAGmH,WAAa,IAAMlH,EAAGkH,WAAa,IAAMjH,EAAGiH,WAAa,IAChG80B,GAAKp8B,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IACzC,MACJ,IAAK,IACD80B,EAAIA,EAAI,IAAMl8B,EAAGoH,WAAa,IAAMnH,EAAGmH,WAAa,IAAMtH,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IAC9F,MACJ,IAAK,IACD80B,EAAIA,EAAI,IAAM94B,EAAQhD,GAAGgH,WAAa,IAAMhE,EAAQ/C,GAAG+G,WAAa,IAAMhE,EAAQ9C,MAAM8G,WAAa,IACrG80B,GAAK94B,EAAQ7C,SAAS6G,WAAa,IAAMhE,EAAQ5C,MAAQ,IAAMV,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IACnG,MACJ,IAAK,IACL,IAAK,IACD80B,GAAQ,MAIpBmX,EAAI3F,aAAa,IAAKxR,IAE1BmhC,EAAYnkB,UAAUqlB,gBAAkB,SAAUh7C,EAAMmsB,GACpDnsB,EAAKva,MAAMgmC,UAAYU,EAAQpK,OAAS,SAAW,SACnD/hB,EAAKva,MAAM+lC,WAAaW,EAAQttB,KAAO,OAAS,SAChDmB,EAAKva,MAAMqZ,SAAWqtB,EAAQrtB,SAASjb,WAAa,KACpDmc,EAAKva,MAAMq8B,WAAaqK,EAAQrK,YAGpCg4B,EAAYnkB,UAAUshB,SAAW,SAAUjwC,EAAQmlB,EAAS+qB,EAAWC,EAAWvuB,GAC9E,QAAwBppC,IAApB2sC,EAAQ3mC,QAAuB,CAC/B,IAAIy1D,OAAW,EACXnxB,OAAa,EACboC,OAAa,EACbtmC,OAAW,EACXkO,OAAQ,EACRonD,OAAe,EACf55D,EAAU,EACVC,EAAU,EACVtF,EAAI,EACJ+jB,OAAO,EAIX,GAHIk3C,IACAl3C,EAAOk3C,EAAU1jC,eAAe2Y,EAAQ/mC,GAAK,UAE7C4a,GACA,GAAImsB,EAAQO,OACR,KAAO1sB,EAAK+T,YACR/T,EAAKskB,YAAYtkB,EAAK+T,iBAK9BoY,EAAQO,QAAS,EACjB1sB,EAAOuT,SAASmb,gBAAgB,6BAA8B,QACnC,aAAvBvC,EAAQlK,YACRjiB,EAAKqwB,eAAe,uCAAwC,YAAa,YAE7ErpB,EAAOud,YAAYvkB,GAEvB,IAAIqsB,EAASF,EAAQ5vC,EAAI4vC,EAAQruC,MAAQquC,EAAQE,OAC7CC,EAASH,EAAQ3vC,EAAI2vC,EAAQtuC,OAASsuC,EAAQG,OAClD,GAAIH,EAAQO,QAAmC,SAAzBP,EAAQvK,aAAyB,CACnD,IAAIu5B,EAAuB5nC,SAASC,eAAe2Y,EAAQ/mC,GAAK,SAahE,IAZI+1D,IACAA,EAAqBC,UAAY,IAErC71D,KAAK+0D,YAAYt6C,EAAMmsB,EAASvD,GAChCrjC,KAAKy1D,gBAAgBh7C,EAAMmsB,GAC3B8uB,EAAW1nC,SAAS4c,eAAehE,EAAQ3mC,SAC3CskC,EAAaqC,EAAQrC,WACrBoC,EAAaC,EAAQD,WACrBtmC,EAAWL,KAAK81D,cAAclvB,EAASD,EAAYpC,GAC/CoC,EAAWpuC,MAAQquC,EAAQruC,OAAkC,SAAzBquC,EAAQvK,eAC5CkI,EAAW,GAAG9pB,KAAOkyB,GAAS/F,EAAQ3mC,QAAS2mC,IAE9ClwC,EAAI,EAAGA,EAAI6tC,EAAW9tC,OAAQC,IAC/Bi/D,EAAe3nC,SAASmb,gBAAgB,6BAA8B,SACtEusB,EAAW1nC,SAAS4c,eAAerG,EAAW7tC,GAAG+jB,MACjDlM,EAAQg2B,EAAW7tC,GACnBqF,EAAUsE,EAASrJ,EAAIuX,EAAMvX,EAAI2vC,EAAW3vC,EAC5CgF,EAAUqE,EAASpJ,EAAIsX,EAAM+2B,KAAiC,GAApBsB,EAAgB,SAC1DwC,GAAgBusB,GAAgB3+D,EAAK+E,EAAQuC,WAAYrH,EAAK+E,EAAQsC,aACtEmc,EAAKmqB,aAAa,OAAQr2B,EAAMkM,MAChCk7C,EAAa32B,YAAY02B,GACzBj7C,EAAKukB,YAAY22B,GAGrB/uB,EAAQjK,gBAA6C,gBAA3BiK,EAAQjK,iBAClCiK,EAAQjK,eAAiB2J,GAAkBM,EAAQjK,iBASvDyM,GAAgB3uB,GANZ5a,GAAM+mC,EAAQ/mC,GAAK,QAASkZ,KAAQ6tB,EAAQptB,MAAOmoB,WAAciF,EAAQhJ,QAAU,UAAY,SAC/Fm4B,kBAAmBnvB,EAAQjK,eAAgB92B,UAAa,UAAY+gC,EAAQpvC,MAAQ,MACnE,MAAiB,cACZovC,EAAS,EAAI,IAAOA,EAAS,EAAI,IAAKtK,QAAWsK,EAAQtK,QAC/Ew4B,aAAclD,GAAwB,OAMlD2C,EAAYnkB,UAAUkiB,UAAY,SAAU7wC,EAAQlnB,EAAKo3D,EAAWY,GAChE,IACIF,EADK93D,EAAIsF,GAET8xD,IACAU,EAAQV,EAAU1jC,eAAe1zB,EAAIsF,GAAK,UAEzCwyD,IACDA,EAAQrkC,SAASmb,gBAAgB,6BAA8B,SAC/D1nB,EAAOud,YAAYqzB,IAEvB,IAAIM,EAAW,IAAIx7B,MACnBw7B,EAAS9pD,IAAMtO,EAAIgI,OACnB,IAAIoa,EAAsB,SAAdpiB,EAAIoiB,MAAmBpiB,EAAIoiB,MAAQ,GAC3Cq5C,EAAWz7D,EAAIo7B,UACfsgC,EAAcD,EAASE,OAAO,GAAGr/D,cAAgBm/D,EAASp2C,MAAM,GAChEjD,IACAs5C,GAAe,IAAMt5C,EAAMu5C,OAAO,GAAGr/D,cAAgB8lB,EAAMiD,MAAM,IAQrEwpB,GAAgBipB,GALZxyD,GAAMtF,EAAIsF,GAAK,QAAS7I,EAAKuD,EAAIvD,EAAEsH,WAAYrH,EAAKsD,EAAItD,EAAEqH,WAAYuH,UAAa,UAAYtL,EAAI/C,MAAQ,KACpG+C,EAAIvD,EAAIuD,EAAIhC,MAAQgC,EAAIusC,QAAU,KAAOvsC,EAAItD,EAAIsD,EAAIjC,OAASiC,EAAIwsC,QAAU,IACnFxuC,MAASgC,EAAIhC,MAAM+F,WAAYqjC,WAAcpnC,EAAIqjC,QAAU,UAAY,SACvEtlC,OAAUiC,EAAIjC,OAAOgG,WAAY63D,oBAAuBF,EAAa35B,SAAY/hC,EAAI+hC,SAAW,GAAGh+B,aAGvG+zD,EAAMvnB,eAAe,+BAAgC,aAAc6nB,EAAS9pD,IAAIvK,aAGpFi2D,EAAYnkB,UAAUgmB,gBAAkB,SAAUx2D,EAAS6hB,EAAQ5b,EAAWF,EAAO+e,GACjF,IAAIwa,EACJ,GAAIzd,EAAQ,CACR,IAAI/qB,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAI+qB,EAAO8iB,WAAW9tC,OAAQC,IAClC+qB,EAAO8iB,WAAW7tC,GAAGmJ,KAAOD,EAAQC,GAAK,kBACzCq/B,EAAczd,EAAO8iB,WAAW7tC,IAI5C,IAAKwoC,EAAa,EAKdA,EAAc5Q,GAAkB,OAH5BzuB,GAAMD,EAAQC,GAAK,gBACnB4Y,MAAS,oBAGDumB,YAAYp/B,EAAQ23C,SAASjN,WAAU,SAChCrwC,IAAfyqB,GAA4BjD,EAAO8iB,WAAW9tC,OAASiuB,EACvDjD,EAAO8M,aAAa2Q,EAAazd,EAAO8iB,WAAW7f,IAGnDjD,EAAOud,YAAYE,GAG3B,IAAIvjC,EAAQ4F,GAA4B3B,GAAS6M,QACjDyyB,EAAY0F,aAAa,QAAS,UAAahlC,EAAQ2M,WAAiB,OAAI,aAAgB3M,EAAQ2M,WAAgB,MAChH,WAAa5Q,EAAM3E,EAAI,WAAa2E,EAAM1E,EAAI,0CACL2I,EAAQsN,YAActN,EAAQuN,iBAAmB,wBACrExH,EAAQ,MAAQ,QACnC,gBAAmB/F,EAAe,QAAI,UAAY,UAAY,YAAcA,EAAQM,MAAMo8B,QAAU,MAG9Gi4B,EAAYnkB,UAAUimB,kBAAoB,SAAUz2D,EAAS6hB,EAAQnpB,EAAQC,EAAOo5D,GAChF,IAAI9yB,EACAy3B,EACA3E,IACA9yB,EAAgB8yB,EAAU1jC,eAAeruB,EAAQC,GAAK,mBACtDy2D,EAAW3E,EAAU1jC,eAAeruB,EAAQC,GAAK,UAEhDg/B,KACDA,EAAgB7Q,SAASmb,gBAAgB,6BAA8B,MACzDvE,aAAa,KAAMhlC,EAAQC,GAAK,mBAC9Cg/B,EAAcG,YAAYp/B,EAAQ23C,SAASjN,WAAU,IACrD7oB,EAAOud,YAAYH,IAEnBy3B,GACAz3B,EAAcE,YAAYu3B,GAE9Bz3B,EAAc+F,aAAa,QAAS,eAC9BhlC,EAAe,QAAI,UAAY,UAAY,YAAcA,EAAQM,MAAMo8B,QAAU,KACvFt8B,KAAKu2D,kBAAkB32D,EAASi/B,EAAevmC,EAAQC,GACjC,UAAlBqH,EAAQ+c,OACR3c,KAAKw2D,aAAa52D,EAASi/B,EAAevmC,EAAQC,EAAOo5D,GAE7DvoB,GAAgBvK,EAAej/B,EAAQsnC,aAAgB4tB,aAAcl1D,EAAQsnC,kBAEjFqtB,EAAYnkB,UAAUmmB,kBAAoB,SAAU32D,EAASi/B,EAAevmC,EAAQC,GAChF,IACIk+D,EAA6C,IAA9B72D,EAAQ83C,YAAYn/C,MAAcqH,EAAQ83C,YAAYn/C,MAAQ,EAC7Em+D,EAA+C,IAA/B92D,EAAQ83C,YAAYp/C,OAAesH,EAAQ83C,YAAYp/C,OAAS,EAChFtB,EAAI4I,EAAQ+3C,iBAAiB3gD,EAAIuB,EAAQk+D,EACzCx/D,EAAI2I,EAAQ+3C,iBAAiB1gD,EAAIqB,EAASo+D,EAC9C73B,EAAc+F,aAAa,YAAa,UAAYhlC,EAAQuN,gBAAkB,IAAMvN,EAAQ7D,QAAU,IAAM6D,EAAQ5D,QAChH,gBAAkB4D,EAAQ7D,QAAU/E,EAAIuB,EAAQqH,EAAQmhC,MAAM/pC,GAAK,KAAO4I,EAAQ5D,QAAU/E,EAAIqB,EAASsH,EAAQmhC,MAAM9pC,GACvH,WAAcsB,EAAQk+D,EAAgB,IAAOn+D,EAASo+D,EAAiB,MAW/EnC,EAAYnkB,UAAUomB,aAAe,SAAUj2D,EAAMo2D,EAAOr+D,EAAQC,EAAOo5D,GACvE,IAAI8E,EAAel2D,EAAKm3C,YAAYn/C,MAChCm+D,EAAgBn2D,EAAKm3C,YAAYp/C,OAGjCs+D,GAFcr2D,EAAKgM,WAAWhU,MACfgI,EAAKgM,WAAWjU,OACnBiI,EAAKhI,OAASA,EAAQk+D,IAClCI,EAAat2D,EAAKjI,QAAUA,EAASo+D,GACrC1/D,EAAIuJ,EAAKo3C,iBAAiB3gD,GAAKuJ,EAAKhI,OAASgI,EAAKjI,OAAS,GAAKm+D,EAAeG,GAAa,GAC5F3/D,EAAIsJ,EAAKo3C,iBAAiB1gD,GAAKsJ,EAAKjI,QAAUiI,EAAKhI,MAAQ,GAAKm+D,EAAgBG,GAAc,GAC9FP,EAAW3E,EAAU1jC,eAAe1tB,EAAKV,GAAK,UAClDy2D,EAAWtoC,SAASmb,gBAAgB,6BAA8B,aACzDvE,aAAa,KAAMrkC,EAAKV,GAAK,SACtC82D,EAAM33B,YAAYs3B,GAClB,IAAIjqD,EAAOslD,EAAU1jC,eAAe1tB,EAAKV,GAAK,cAC9CwM,EAAO2hB,SAASmb,gBAAgB,6BAA8B,QAC9DmtB,EAASt3B,YAAY3yB,GAOrB,OAFA+8B,GAAgB/8B,GAHZxM,GAAMU,EAAKV,GAAK,aAActH,MAASq+D,EAAUt4D,WAAYhG,OAAUu+D,EAAWv4D,WAClFtH,EAAKA,EAAEsH,WAAYrH,EAAKA,EAAEqH,aAG9Bq4D,EAAM/xB,aAAa,YAAa,QAAUrkC,EAAKV,GAAK,UAC7C82D,GAGXpC,EAAYnkB,UAAU8d,eAAiB,SAAUtnB,EAAS2D,EAAKlH,GAC3D,IAAIz9B,EACAsB,EACAknD,EACAuG,EAAe9rB,GAAsBxF,GACrCyzB,EAAOnC,EAAa1mC,eAAeoV,EAAY,oBAC9CyzB,IACDA,EAAO5tB,GAAiB,QAAUrpC,GAAIwjC,EAAY,qBAClDsxB,EAAapmC,aAAauoC,EAAMnC,EAAanmC,aAEjD,IAAI+/B,EACAF,EAIJ,GAHAvuB,GAEeyK,EAAI1qC,IACW,SAA1B+mC,EAAQvJ,SAASxhC,KAAiB,CAClC,IAAK,IAAInF,EAAI,EAAGA,EAAIkwC,EAAQvJ,SAASF,MAAM1mC,OAAQC,IAC/CkP,EAAOA,EAAyCnJ,KAAKmJ,IAAIA,EAAKghC,EAAQvJ,SAASF,MAAMzmC,GAAGuZ,QAA3E22B,EAAQvJ,SAASF,MAAMzmC,GAAGuZ,OACvC/I,EAAOA,EAAyCzK,KAAKyK,IAAIA,EAAK0/B,EAAQvJ,SAASF,MAAMzmC,GAAGuZ,QAA3E22B,EAAQvJ,SAASF,MAAMzmC,GAAGuZ,OAEb,WAA1B22B,EAAQvJ,SAASxhC,OACjBwyD,EAASznB,EAAQvJ,UACVx9B,GAAK0qC,EAAI1qC,GAAK,UACrBuuD,EAAMpuD,KAAKsuD,qBAAqBD,GAChCyI,EAAK93B,YAAYovB,MAGjBG,EAAS3nB,EAAQvJ,UACVx9B,GAAK0qC,EAAI1qC,GAAK,UACrBuuD,EAAMpuD,KAAKwuD,qBAAqBD,GAChCuI,EAAK93B,YAAYovB,IAErB,IAAS13D,EAAI,EAAGA,EAAIkwC,EAAQvJ,SAASF,MAAM1mC,OAAQC,IAAK,CACpD,IAAI+3D,EAAS7nB,EAAQvJ,SAASF,MAAMzmC,GAChCqgE,EAAW7vD,EAAM,GAAKtB,EAAM6oD,EAAOx+C,SAAW,EAAIrK,GAAO6oD,EAAOx+C,OAASrK,EACzEoxD,EAAchpC,SAASmb,gBAAgB,6BAA8B,QACzEC,GAAgB4tB,GAAe/mD,OAAU8mD,EAASz4D,WAAY4B,MAAS,cAAgBuuD,EAAOj1C,QAC9F40C,EAAIpvB,YAAYg4B,IAGxB,OAAO5I,GAGXmG,EAAYnkB,UAAUke,qBAAuB,SAAUD,GACnD,IAAI4I,EAAiBjpC,SAASmb,gBAAgB,6BAA8B,kBAK5E,OADAC,GAAgB6tB,GAFZp3D,GAAMwuD,EAAOxuD,GAAI3I,GAAMm3D,EAAOn3D,GAAK,IAAKC,GAAMk3D,EAAOl3D,GAAK,IAAKC,GAAMi3D,EAAOj3D,GAAK,IAAKC,GAAMg3D,EAAOh3D,GAAK,MAGrG4/D,GAGX1C,EAAYnkB,UAAUoe,qBAAuB,SAAUD,GACnD,IAAI2I,EAAiBlpC,SAASmb,gBAAgB,6BAA8B,kBAK5E,OADAC,GAAgB8tB,GAFZr3D,GAAM0uD,EAAO1uD,GAAIk9B,GAAMwxB,EAAOxxB,GAAK,IAAKC,GAAMuxB,EAAOvxB,GAAK,IAAKjvB,EAAKwgD,EAAOxgD,EAAI,IAAKkvB,GAAMsxB,EAAOtxB,GAAK,IAAKC,GAAMqxB,EAAOrxB,GAAK,MAG1Hg6B,GAGX3C,EAAYnkB,UAAU2kB,YAAc,SAAUxqB,EAAKrqC,EAAOmjC,GACtD,GAAInjC,EAAMi8B,oBAAyCliC,IAAxBiG,EAAMi8B,cAA6B,CACvC,SAAfj8B,EAAM6Y,OACN7Y,EAAM6Y,KAAO,eAEI,SAAjB7Y,EAAM2mC,SACN3mC,EAAM2mC,OAAS,eAEnB,IAAIG,KACAjuB,OAAO,EACX,QAAwB9e,IAApBiG,EAAM8mC,UAAyB,CAE/BA,GADqB,IAAI+mB,IACE6B,eAAe1vD,EAAM8mC,WAEpD,GAAI9mC,EAAMm9B,UAAoC,SAAxBn9B,EAAMm9B,SAASxhC,KAAiB,CAElDkd,EAAO,QADG/Y,KAAKkuD,eAAehuD,EAAOqqC,EAAKlH,GACrBxjC,GAAK,SAG1BkZ,EAAO7Y,EAAM6Y,KAEb7Y,EAAM2mC,QACN0D,EAAI3F,aAAa,SAAU1kC,EAAM2mC,aAEX5sC,IAAtBiG,EAAM+Y,aAAmD,OAAtB/Y,EAAM+Y,aACzCsxB,EAAI3F,aAAa,eAAgB1kC,EAAM+Y,YAAY3a,YAEnD0oC,GACAuD,EAAI3F,aAAa,mBAAoBoC,EAAU1oC,YAE/Cya,GACAwxB,EAAI3F,aAAa,OAAQ7rB,KAOrCw7C,EAAYnkB,UAAU0lB,cAAgB,SAAUr7C,EAAM08C,EAAW5yB,GAC7D,IAAI/iC,EAAS,IAAI8d,GAAK63C,EAAU5+D,MAAOgsC,EAAW9tC,QAA0B,IAAhBgkB,EAAKlB,WAC7D69C,GAAQpgE,EAAG,EAAGC,EAAG,GAKjBogE,EAFuB,GAAb58C,EAAKliB,MAGf++D,EAFwB,GAAd78C,EAAKniB,OAmBnB,MAhBuB,SAAnBmiB,EAAKgiB,UACL46B,EAAS,EAEe,WAAnB58C,EAAKgiB,UAEN46B,EADAF,EAAU5+D,MAAQkiB,EAAKliB,QAAgC,aAAtBkiB,EAAK4hB,cAAqD,SAAtB5hB,EAAK4hB,cACjE,EAGa,GAAb5hB,EAAKliB,MAGM,UAAnBkiB,EAAKgiB,YACV46B,EAAuB,EAAb58C,EAAKliB,OAEnB6+D,EAAIpgE,EApBI,EAoBIqgE,GAAUF,EAAYA,EAAUngE,EAAI,GAChDogE,EAAIngE,EApBI,IAoBIqgE,EAAS91D,EAAOlJ,OAAS,EAC9B8+D,GAEJ7C,KCrkBPgD,GAAiC,WACjC,SAASA,EAAgBl+C,EAAMm+C,EAAWC,GAEtCz3D,KAAK03D,SAAW,KAEhB13D,KAAKy3D,WAAY,EACjBz3D,KAAK6F,WAAc7O,EAAG,EAAGC,EAAG,GAC5B+I,KAAKqjC,UAAYhqB,EACjBrZ,KAAKJ,QAAUk/B,GAAkB9+B,KAAKqjC,WACtCrjC,KAAK23D,YAAcH,EACnBx3D,KAAKy3D,UAAYA,EACjBz3D,KAAK03D,SAAWD,EAAY,IAAIlD,GAAgB,IAAIxG,GAylCxD,OAtlCAwJ,EAAgBnnB,UAAUwnB,UAAY,SAAUn2C,EAAQ4tB,GACpD5tB,EAAOvhB,MAAMmvC,OAASA,GAG1BkoB,EAAgBnnB,UAAUynB,UAAY,WAClC73D,KAAK83D,aAAe93D,KAAKJ,QAAQioC,uBAAuB,wBAAwB,GAChF7nC,KAAK+3D,gBAAkB/3D,KAAKJ,QAAQioC,uBAAuB,mBAAmB,GAC9E7nC,KAAKg4D,eAAiBh4D,KAAKJ,QAAQioC,uBAAuB,kBAAkB,GAC5E7nC,KAAKi4D,gBAAkBj4D,KAAKJ,QAAQioC,uBAAuB,mBAAmB,IAElF0vB,EAAgBnnB,UAAU1H,gBAAkB,WAExC,OADmBA,GAAgB1oC,KAAKqjC,YAG5Ck0B,EAAgBnnB,UAAU8nB,aAAe,SAAUt4D,EAASu4D,EAAe12C,GACvE,OAAIzhB,KAAKqjC,WAAazjC,GAAWA,EAAQC,GACjCD,EAAQC,GAAGkP,MAAM,iBAAiBtY,OAAS,GAAKmJ,EAAQC,GAAGkP,MAAM,aAAatY,OAAS,EAChFuJ,KAAK83D,aAEZK,GAAmC,aAAlBA,EACVn4D,KAAK+3D,gBAEPn4D,aAAmB4+B,GACjBx+B,KAAKg4D,eAGLh4D,KAAKi4D,gBAGbx2C,GAEX81C,EAAgBnnB,UAAUgoB,iBAAmB,SAAUx4D,EAASy4D,EAAeC,EAAY5zC,GACvF,IAAI6zC,EAAgBF,EACpB,GAAIC,GAAct4D,KAAKqjC,WAAazjC,GAAWA,EAAQC,GAAI,CACnDD,EAAQC,GAAGkP,MAAM,iBAAiBtY,OAAS,GAC3C8hE,EAAgBD,EAAWrqC,eAAejuB,KAAKqjC,UAAY,oBAC3Dg1B,EAAgB,MAEXz4D,EAAQC,GAAGkP,MAAM,aAAatY,OAAS,EAC5C8hE,EAAgBD,EAAWrqC,eAAejuB,KAAKqjC,UAAY,iBAEtDzjC,aAAmB4+B,IACxB+5B,EAAgBD,EAAWrqC,eAAejuB,KAAKqjC,UAAY,gBAC3Dg1B,EAAgB,MAGhBE,EAAgBD,EAAWrqC,eAAejuB,KAAKqjC,UAAY,iBAE/D,IAAIm1B,EAAex4D,KAAKy4D,gBAAgB74D,EAASy4D,GAAiBE,EAAe7zC,GACjF6zC,EAAgBC,EAAanN,EACzBmN,EAAajuB,MACb+tB,EAAaE,EAAajuB,KAGlC,OAAS8gB,EAAGkN,EAAehuB,IAAK+tB,IAEpCf,EAAgBnnB,UAAUqoB,gBAAkB,SAAU74D,EAAS6hB,EAAQiD,GACnE,IAAIuwC,EAEAqD,EADA3G,EAAY3xD,KAAKk4D,aAAat4D,GAElC,GAAI6hB,GAAUkwC,EAAW,CACrB,GAAIA,KACAsD,EAAWtD,EAAU1jC,eAAeruB,EAAQC,GAAK,mBAChC8xD,IAAc3xD,KAAKg4D,eAAgB,CAChD,IAAIU,EAAY14D,KAAKg4D,eACrB/C,EAAWyD,EAAUzqC,eAAeruB,EAAQC,GAAK,iBACjDy4D,EAAaI,EAGhBzD,IACDA,EAAWj1D,KAAK23D,YAAYzC,eAAe,KAAOr1D,GAAID,EAAQC,GAAK,uBAChD5F,IAAfyqB,GAA4BjD,EAAO8iB,WAAW9tC,OAASiuB,EACvDjD,EAAO8M,aAAa0mC,EAAUxzC,EAAO8iB,WAAW7f,IAGhDjD,EAAOud,YAAYi2B,IAI/B,OAAS5J,EAAG4J,EAAU1qB,IAAK+tB,IAG/Bf,EAAgBnnB,UAAUuoB,cAAgB,SAAU/4D,EAAS6hB,EAAQuQ,EAAWnsB,EAAW8rD,EAAWiH,EAAcrG,EAAa7tC,GAEzH9kB,aAAmB4iC,GACnBxiC,KACK64D,gBAAgBj5D,EAAS6hB,EAAQuQ,EAAWnsB,EAAW8rD,EAAWiH,EAAcrG,EAAa7tC,GAE7F9kB,aAAmBs+B,GACxBl+B,KAAK84D,mBAAmBl5D,EAAS6hB,EAAQ5b,EAAW8rD,EAAWY,GAE1D3yD,aAAmBkP,GACxB9O,KAAK+4D,kBAAkBn5D,EAAS6hB,EAAQ5b,EAAW8rD,EAAWY,GAEzD3yD,aAAmB0kB,GACxBtkB,KAAKg5D,kBAAkBp5D,EAAS6hB,EAAQ5b,EAAW8rD,EAAWY,GAEzD3yD,aAAmB4+B,GACxBx+B,KAAKi5D,oBAAoBr5D,EAAS6hB,EAAQ5b,EAAW8rD,EAAWY,GAE3D3yD,aAAmB8+B,GACxB1+B,KAAKk5D,kBAAkBt5D,EAAS6hB,EAAQuQ,EAAWnsB,EAAW8rD,EAAWY,EAAa7tC,GAGtF1kB,KAAKm5D,WAAWv5D,EAAS6hB,EAAQ5b,EAAW8rD,IAIpD4F,EAAgBnnB,UAAUgpB,uBAAyB,SAAUpiE,EAAGC,EAAG+sC,EAAGC,EAAGxiB,EAAQtO,GAC7Enc,GAAKA,EAAImc,EAAE2uC,IAAM3uC,EAAEwJ,MACnB1lB,GAAKA,EAAIkc,EAAE4uC,IAAM5uC,EAAEwJ,MACnB,IAAIiqB,GACAruC,MAAOyrC,EAAI7wB,EAAEwJ,MAAOrkB,OAAQ2rC,EAAI9wB,EAAEwJ,MAClC3lB,EAAGA,EAAI,GAAKC,EAAGA,EAAI,GAAK8hB,KAAM,cAAe8tB,OAAQ,OAAQrvC,MAAO,EACpEsvC,OAAQ,GAAKC,OAAQ,GAAK9tB,YAAa,EACvC+tB,UAAW,MAAO1K,QAAS,EAC3BsB,SAAS,EAAM/9B,GAAI4hB,EAAO5hB,GAAK,oBAE/Bw5D,EAAer5D,KAAK0oC,kBACxB1oC,KAAK23D,YAAY3C,sBAAsBqE,EAAczyB,IAKzD2wB,EAAgBnnB,UAAUkpB,kBAAoB,SAAU15D,EAAS6hB,EAAQ5b,GACrE,IAAItN,EAAQqH,EAAQ2M,WAAWhU,OAAS,EACpCD,EAASsH,EAAQ2M,WAAWjU,QAAU,EACtCtB,EAAI4I,EAAQ7D,QAAUxD,EAAQqH,EAAQmhC,MAAM/pC,EAC5CC,EAAI2I,EAAQ5D,QAAU1D,EAASsH,EAAQmhC,MAAM9pC,EACjDD,GAAKA,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MACnC1lB,GAAKA,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,MACnC,IAAIiqB,GACAruC,MAAOA,EAAQsN,EAAU8W,MAAOrkB,OAAQA,EAASuN,EAAU8W,MAC3D3lB,EAAGA,EAAGC,EAAGA,EAAG8hB,KAAM,cAAe8tB,OAAQ,UAAWrvC,MAAOoI,EAAQsN,YACnE45B,OAAQlnC,EAAQmhC,MAAM/pC,EAAG+vC,OAAQnnC,EAAQmhC,MAAM9pC,EAAGgiB,YAAa,EAC/D+tB,UAAW,GAAI1K,QAAS,EAAGjkC,aAAc,EACzCulC,SAAS,EAAM/9B,GAAI4hB,EAAO5hB,GAAK,eAAgB4Y,MAAO,yBAE1DzY,KAAK23D,YAAYvH,cAAc3uC,EAAQmlB,EAAS5mC,KAAKqjC,YAKzDk0B,EAAgBnnB,UAAUtuB,uBAAyB,SAAUliB,EAAS6hB,EAAQ5b,EAAWkc,EAAY1hB,EAAU2hB,EAAOC,GAClH,IAAI1pB,EAAQqH,EAAQ2M,WAAWhU,OAAS,EACpCvB,EAAI4I,EAAQ7D,QAAUxD,EAAQqH,EAAQmhC,MAAM/pC,EAC5CsB,EAASsH,EAAQ2M,WAAWjU,QAAU,EACtCrB,EAAI2I,EAAQ5D,QAAU1D,EAASsH,EAAQmhC,MAAM9pC,EACjDD,GAAKA,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MACnC,IAAIvmB,EACAoL,EAAS5B,EAAQ4B,OACjBkmC,EAAgB,GAEpB,GADAzwC,GAAKA,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,MAC9BoF,EASD,GAAIC,EAAO,CAEP5rB,EAAO,aADHg9B,EAAI76B,EAAQsN,EAAU8W,OACD,GAAK,OAC9B,IAAIjf,GAAU8D,EAAOxK,EACjB2G,GAAU6D,EAAOvK,EAErByG,EAASkC,EAAQ2M,WAAWhU,MAAQJ,OAAOqJ,EAAOjJ,MAAQiJ,EAAOjJ,MAAQ,GAAKsN,EAAU8W,MACxFhf,EAASiC,EAAQ2M,WAAWjU,OAASH,OAAOqJ,EAAOlJ,OAASkJ,EAAOlJ,OAAS,GAAKuN,EAAU8W,MAO3F+qB,EAAgBluC,EADEqB,EADA1E,EAJJ,0VAMiCuH,EAAS01B,EAAI,EAAGz1B,EAAS,GAAG,EAAO6D,EAAOxK,EAAGwK,EAAOvK,EAAG,EAAG,GACrGoJ,EAASpJ,GAAK2I,EAAQ5D,UACtB/E,GAAKqB,OAGR,CACG2pB,GACI5hB,EAASpJ,GAAK2I,EAAQ5D,UACtB/E,GAAKqB,GAIblC,EAAO,+CADHg9B,EAAI76B,EAAQsN,EAAU8W,OACmC,YAAkB,SAC1EyW,EAAI,IAAM,YAAcA,EAAI,IAAM,aApC9B,CACb,IAAIA,EACJh9B,EAAO,iDADHg9B,EAAI96B,EAASuN,EAAU8W,OACoC,aAC3D,YAAcyW,EAAI,IAAM,aAAeA,EAAI,IAAM,KACjD/yB,EAASrJ,GAAK4I,EAAQ7D,UACtB/E,GAAKuB,GAkCb,IAAIquC,GACAxwC,KAAMA,EAAOsxC,EACbnvC,MAAOA,EAAQsN,EAAU8W,MAAOrkB,OAAQA,EAASuN,EAAU8W,MAC3D3lB,EAAGA,EAAGC,EAAGA,EAAG8hB,KAAM,cAAe8tB,OAAQ,UAAWrvC,MAAOoI,EAAQsN,YACnE45B,OAAQlnC,EAAQmhC,MAAM/pC,EAAG+vC,OAAQnnC,EAAQmhC,MAAM9pC,EAAGgiB,YAAa,EAC/D+tB,UAAW,GAAI1K,QAAS,EACxBsB,SAAS,EAAM/9B,GAAI4hB,EAAO5hB,GAAK,qBAAsB4Y,MAAO,yBAEhEzY,KAAK23D,YAAYtH,SAAS5uC,EAAQmlB,EAAS5mC,KAAKqjC,YAGpDk0B,EAAgBnnB,UAAU+kB,SAAW,SAAU1zC,EAAQmlB,GACnD5mC,KAAK23D,YAAYxC,SAAS1zC,EAAQmlB,IAGtC2wB,EAAgBnnB,UAAUigB,SAAW,SAAU5uC,EAAQmlB,GACnD5mC,KAAK23D,YAAYtH,SAAS5uC,EAAQmlB,EAAS5mC,KAAKqjC,YAGpDk0B,EAAgBnnB,UAAUmpB,mBAAqB,SAAU35D,EAAS6hB,EAAQjO,EAAa2c,EAAaiR,EAAqBv7B,EAAW2zD,EAASC,EAAYC,EAAiBz3C,GACtK,IAAIrf,EAAOhD,EAAQ7D,QAAU6D,EAAQ2M,WAAWhU,MAAQqH,EAAQmhC,MAAM/pC,EAClE+L,EAAMnD,EAAQ5D,QAAU4D,EAAQ2M,WAAWjU,OAASsH,EAAQmhC,MAAM9pC,EAClEqB,EAASsH,EAAQ2M,WAAWjU,OAC5BC,EAAQqH,EAAQ2M,WAAWhU,OAC1B0pB,GACAzO,EAAc+tB,oBAAkB7sB,QAAUsD,GAAchY,KAAKiY,mBAAsBG,GAAkBpY,KAAKiY,mBAC3GjY,KAAK25D,gBAAgB/5D,EAAS6hB,EAAQ5b,EAAWu7B,EAAqBo4B,GACtEx5D,KAAK45D,kBAAkBh6D,EAAS6hB,EAAQ5b,EAAWu7B,EAAqBo4B,IAE5Ex5D,KAAK65D,aAAaj6D,EAAS6hB,EAAQ5b,EAAW4zD,EAAYC,EAAiBz3C,GAC3E,IAAI63C,EAAYl6D,EAAQ2M,WAAWhU,MAAQ43B,EACvC4pC,EAAan6D,EAAQ2M,WAAWjU,OAAS63B,EACxCupC,IAAmB1hD,GAAchY,KAAKiY,kBAAsBG,GAAkBpY,KAAKiY,mBAChF6hD,GAAa,IAAMC,GAAc,KAE7B34B,EAAsBE,sBAAoBtrB,iBAC1ChW,KAAKg6D,qBAAqB,kBAAmBp6D,EAASgD,EAAMG,EAAK0e,EAAQ+f,GAAcJ,EAAqB,mBAAoB5tB,EAAc+tB,oBAAkBvrB,gBAAiBnQ,OAAW5L,EAAWu/D,GAAW1E,aAAc,uEAAoE76D,EAAW,uCAE/SmnC,EAAsBE,sBAAoB3rB,iBAC1C3V,KAAKg6D,qBAAqB,kBAAmBp6D,EAASgD,EAAOrK,EAAOwK,EAAK0e,EAAQ+f,GAAcJ,EAAqB,mBAAoB5tB,EAAc+tB,oBAAkB5rB,gBAAiB9P,OAAW5L,EAAWu/D,GAAW1E,aAAc,wEAAqE76D,EAAW,uCAExTmnC,EAAsBE,sBAAoBxrB,iBAC1C9V,KAAKg6D,qBAAqB,kBAAmBp6D,EAASgD,EAAMG,EAAMzK,EAAQmpB,EAAQ+f,GAAcJ,EAAqB,mBAAoB5tB,EAAc+tB,oBAAkBzrB,gBAAiBjQ,OAAW5L,EAAWu/D,GAAW1E,aAAc,0EAAuE76D,EAAW,uCAE3TmnC,EAAsBE,sBAAoB7rB,iBAC1CzV,KAAKg6D,qBAAqB,kBAAmBp6D,EAASgD,EAAOrK,EAAOwK,EAAMzK,EAAQmpB,EAAQ+f,GAAcJ,EAAqB,mBAAoB5tB,EAAc+tB,oBAAkB9rB,gBAAiB5P,OAAW5L,EAAWu/D,GAAW1E,aAAc,2EAAwE76D,EAAW,wCAGxUmnC,EAAsBE,sBAAoBzrB,aAC1C7V,KAAKg6D,qBAAqB,cAAep6D,EAASgD,EAAOrK,EAAQ,EAAGwK,EAAK0e,EAAQ+f,GAAcJ,EAAqB,eAAgB5tB,EAAc+tB,oBAAkB1rB,YAAahQ,OAAW5L,EAAWu/D,GAAW1E,aAAc,kEAA+D76D,EAAW,mCAE1SmnC,EAAsBE,sBAAoB1rB,aAC1C5V,KAAKg6D,qBAAqB,cAAep6D,EAASgD,EAAOrK,EAAQ,EAAGwK,EAAMzK,EAAQmpB,EAAQ+f,GAAcJ,EAAqB,eAAgB5tB,EAAc+tB,oBAAkB3rB,YAAa/P,OAAW5L,EAAWu/D,GAAW1E,aAAc,qEAAkE76D,EAAW,mCAEtTmnC,EAAsBE,sBAAoBvrB,YAC1C/V,KAAKg6D,qBAAqB,aAAcp6D,EAASgD,EAAMG,EAAMzK,EAAS,EAAGmpB,EAAQ+f,GAAcJ,EAAqB,cAAe5tB,EAAc+tB,oBAAkBxrB,WAAYlQ,OAAW5L,EAAWu/D,GAAW1E,aAAc,mEAAgE76D,EAAW,kCAEzSmnC,EAAsBE,sBAAoB5rB,YAC1C1V,KAAKg6D,qBAAqB,aAAcp6D,EAASgD,EAAOrK,EAAOwK,EAAMzK,EAAS,EAAGmpB,EAAQ+f,GAAcJ,EAAqB,cAAe5tB,EAAc+tB,oBAAkB7rB,WAAY7P,OAAW5L,EAAWu/D,GAAW1E,aAAc,oEAAiE76D,EAAW,oCAK9Ts9D,EAAgBnnB,UAAU6pB,qBAAuB,SAAU1wB,EAAU9nB,EAAQjO,EAAa4tB,EAAqBv7B,EAAWq0D,EAAiBC,EAAiBC,GACxJ,IAGI1jE,EACA4D,EAJAyG,EAAcwoC,EAASxoC,YACvBkK,EAAcs+B,EAASt+B,YACvBuD,EAAU+6B,EAAS/6B,QAKvB,GAFAxO,KAAKg6D,qBAAqB,uBAAwBxrD,EAASzN,EAAY/J,EAAG+J,EAAY9J,EAAGwqB,EAAQ+f,GAAcJ,EAAqB,wBAAyB5tB,EAAc+tB,oBAAkB84B,gBAAiBx0D,EAAWq0D,OAAiBjgE,GAAa66D,aAAc,wDAAqD76D,EAAW,yCACrU+F,KAAKg6D,qBAAqB,uBAAwBxrD,EAASvD,EAAYjU,EAAGiU,EAAYhU,EAAGwqB,EAAQ+f,GAAcJ,EAAqB,wBAAyB5tB,EAAc+tB,oBAAkB+4B,gBAAiBz0D,EAAWs0D,OAAiBlgE,GAAa66D,aAAc,wDAAqD76D,EAAW,yCACjUmgE,EACA,IAAuB,aAAlB7wB,EAAS1tC,MAAyC,WAAlB0tC,EAAS1tC,OAAsB0tC,EAASpwC,SAAS1C,OAAS,EAC3F,IAAKC,EAAI,EAAGA,EAAI6yC,EAASpwC,SAAS1C,OAAS,EAAGC,IAC1C4D,EAAUivC,EAASpwC,SAASzC,GAC5BsJ,KAAKg6D,qBAAsB,kBAAoBtjE,EAAI,GAAK8X,EAASlU,EAAQqB,MAAM3E,EAAGsD,EAAQqB,MAAM1E,EAAGwqB,GAAQ,EAAMjO,EAAc+tB,oBAAkB84B,gBAAiBx0D,EAAWq0D,EAAiB,KAAM,KAAMxjE,QAI9M,IAAKA,EAAI,EAAGA,EAAI6yC,EAASpwC,SAAS1C,OAAQC,IAAK,CAC3C,IAAIqC,EAAMwwC,EAASpwC,SAASzC,GAC5BsJ,KAAKu6D,uBAAuB,eAAiB7jE,EAAI,GAAI8X,EAASzV,EAAK0oB,EAAQ+f,GAAcJ,EAAqB,wBAAyBv7B,GAInJ,GAAsB,WAAlB0jC,EAAS1tC,KACT,IAAKnF,EAAI,EAAGA,EAAI6yC,EAASpwC,SAAS1C,OAAQC,IAAK,CAC3C,IAAI8jE,EAAYjxB,EAASpwC,SAASzC,GAC9B+jE,EAAel1D,GAAMC,aAAag1D,EAAU/pD,QAC1C+pD,EAAUloC,aAD0CkoC,EAAU/pD,OAEpEzQ,KAAKg6D,qBAAqB,gBAAkBtjE,EAAI,GAAK,KAAM8X,EAASisD,EAAYzjE,EAAGyjE,EAAYxjE,EAAGwqB,EAAQ+f,GAAcJ,EAAqB,wBAAyB5tB,EAAc+tB,oBAAkB84B,gBAAiBx0D,OAAW5L,OAAWA,GAAa66D,aAAc,wDAAqD76D,EAAW,oCACpUunC,GAAcJ,EAAqB,yBACnCphC,KAAK06D,iBAAiB,eAAiBhkE,EAAI,GAAK,KAAM8X,EAASiT,EAAQ+4C,EAAU7hE,OAAO,GAAK4M,GAAMC,aAAag1D,EAAU/pD,QAA6B+pD,EAAUloC,aAA7BkoC,EAAU/pD,OAAiC5K,GAEnL40D,EAAel1D,GAAMC,aAAag1D,EAAUhiE,QAA6BgiE,EAAUjoC,aAA7BioC,EAAUhiE,OAChEwH,KAAKg6D,qBAAqB,gBAAkBtjE,EAAI,GAAK,KAAM8X,EAASisD,EAAYzjE,EAAGyjE,EAAYxjE,EAAGwqB,EAAQ+f,GAAcJ,EAAqB,wBAAyB5tB,EAAc+tB,oBAAkB+4B,gBAAiBz0D,OAAW5L,OAAWA,GAAa66D,aAAc,wDAAqD76D,EAAW,oCACpUunC,GAAcJ,EAAqB,yBACnCphC,KAAK06D,iBAAiB,eAAiBhkE,EAAI,GAAK,KAAM8X,EAASiT,EAAQ+4C,EAAU7hE,OAAO,GAAK4M,GAAMC,aAAag1D,EAAUhiE,QAA6BgiE,EAAUjoC,aAA7BioC,EAAUhiE,OAAiCqN,KAM/L0xD,EAAgBnnB,UAAUmqB,uBAAyB,SAAU16D,EAAI0pC,EAAUjvC,EAASmnB,EAAQkgB,EAAYxuB,GACpG,IAAI9B,EACAusB,EACAnnC,EACAJ,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAIiE,EAAQ3B,OAAOlC,OAAS,EAAGJ,IACvCI,EAAS8O,GAAM2G,eAAe5R,EAAQ3B,OAAOtC,GAAIiE,EAAQ3B,OAAOtC,EAAI,IACpEgb,EAAe/W,EAAQ3B,OAAOtC,GAAGY,EAAEkD,QAAQ,KAAOG,EAAQ3B,OAAOtC,EAAI,GAAGY,EAAEkD,QAAQ,GAAM,aAAe,WACvGyjC,EAAWnnC,GAAU,GACrBuJ,KAAK26D,sBAAuB96D,EAAK,KAAOxJ,EAAI,GAAKkzC,GAAajvC,EAAQ3B,OAAOtC,GAAGW,EAAIsD,EAAQ3B,OAAOtC,EAAI,GAAGW,GAAK,GAAQsD,EAAQ3B,OAAOtC,GAAGY,EAAIqD,EAAQ3B,OAAOtC,EAAI,GAAGY,GAAK,EAAKwqB,EAAQmc,EAASvsB,EAAa8B,IAInNokD,EAAgBnnB,UAAUuqB,sBAAwB,SAAU96D,EAAI0pC,EAAUvyC,EAAGC,EAAGwqB,EAAQmc,EAASvsB,EAAa8B,GAC1G,IAAIza,EACAurC,EACAmtB,EACgB,eAAhB//C,GACA3Y,EAAO,4BACPurC,GAAK,GACLmtB,GAAK,IAGL14D,EAAO,4BACPurC,GAAK,EACLmtB,GAAK,IAET,IAAIxqB,GACA5vC,GAAKA,EAAImc,EAAE2uC,IAAM3uC,EAAEwJ,MAASsnB,EAAGhtC,GAAKA,EAAIkc,EAAE4uC,IAAM5uC,EAAEwJ,MAASy0C,EAAG55D,MAAO,EACrEuhB,KAAM,UAAW8tB,OAAQ,QAAS5tB,YAAa,EAAG+tB,UAAW,GAAI5wC,KAAMsC,EACvEH,MAAO,GAAID,OAAQ,GAAIwuC,OAAQ,EAAGC,OAAQ,EAAGzK,QAAS,EAAGsB,QAASA,EAAS/9B,GAAIA,GAEnFG,KAAK23D,YAAYtH,SAAS5uC,EAAQmlB,EAAS5mC,KAAKqjC,YAGpDk0B,EAAgBnnB,UAAUupB,gBAAkB,SAAU/5D,EAAS6hB,EAAQ5b,EAAWu7B,EAAqBo4B,GACnG,IAAIhrD,EAAU5O,EAEVg+B,KAAWwD,EAAsBE,sBAAoB5sB,QACrD8kD,IACA57B,GAAU,GAEd,IAAIgJ,EAAU5mC,KAAK46D,kBAAkBpsD,EAAS3I,GAC9C+gC,EAAQ7tB,KAAO,OACf6tB,EAAQC,OAAS,QACjBD,EAAQ3tB,YAAc,EACtB2tB,EAAQI,UATQ,MAUhBJ,EAAQhJ,QAAUA,EAClB,IAAIjhB,EAAQ9W,EAAU8W,MACtBiqB,EAAQ5vC,GAAK2lB,EACbiqB,EAAQ3vC,GAAK0lB,EACbiqB,EAAQruC,OAASokB,EACjBiqB,EAAQtuC,QAAUqkB,EAClBiqB,EAAQ/mC,GAAK,YACb+mC,EAAQnuB,MAAQ,uBAChB,IAAI7F,GAAe5b,EAAGwX,EAAQjC,WAAWhU,MAAQiW,EAAQuyB,MAAM/pC,EAAI2lB,EAAO1lB,GAAI,IAC1E0U,GAAa3U,EAAGwX,EAAQjC,WAAWhU,MAAQiW,EAAQuyB,MAAM/pC,EAAI2lB,EAAO1lB,EAAG,GAC3E2vC,EAAQh0B,WAAaA,EACrBg0B,EAAQj7B,SAAWA,EACnB3L,KAAK23D,YAAYxC,SAAS1zC,EAAQmlB,IAGtC2wB,EAAgBnnB,UAAUsqB,iBAAmB,SAAU76D,EAAI2O,EAASiT,EAAQgQ,EAAOC,EAAK7rB,GACpF,IACI+gC,EAAU5mC,KAAK46D,kBAAkBpsD,EAAS3I,GAC9C+gC,EAAQ/mC,GAAKA,EACb+mC,EAAQC,OAAS,QACjBD,EAAQ3tB,YAAc,EACtB2tB,EAAQI,UALQ,MAMhBJ,EAAQ7tB,KAAO,OACf6tB,EAAQnuB,MAAQ,wBAChBmuB,EAAQ5vC,EAAI,EACZ4vC,EAAQ3vC,EAAI,EACZ,IAAI0lB,EAAQ9W,EAAU8W,MAKlB/J,GAAe5b,GAJTy6B,EAAMz6B,EAAI6O,EAAUi8C,IAAMnlC,EAIV1lB,GAHhBw6B,EAAMx6B,EAAI4O,EAAUk8C,IAAMplC,GAIhChR,GAAa3U,GAHP06B,EAAI16B,EAAI6O,EAAUi8C,IAAMnlC,EAGV1lB,GAFdy6B,EAAIz6B,EAAI4O,EAAUk8C,IAAMplC,GAGlCiqB,EAAQh0B,WAAaA,EACrBg0B,EAAQj7B,SAAWA,EACnB3L,KAAK23D,YAAYxC,SAAS1zC,EAAQmlB,IAGtC2wB,EAAgBnnB,UAAU4pB,qBAAuB,SAAUn6D,EAAI0pC,EAAUxM,EAAIC,EAAIvb,EAAQmc,EAASy3B,EAAgBliD,EAAG0nD,EAAWrB,EAAS5H,EAAW3pC,EAAOwhB,GACvJ,IAAIj7B,EAAU+6B,EACVisB,EAAS,EACTrf,GAAan/C,EAAG+lC,EAAI9lC,EAAG+lC,GAC3B,GAA4B,IAAxBxuB,EAAQtB,aAAiD,IAA5BsB,EAAQrB,gBAAuB,CAC5D,IAAIzR,EAASL,IACb0B,EAAarB,EAAQ8S,EAAQtB,YAAcsB,EAAQrB,gBAAiBqB,EAAQzS,QAASyS,EAAQxS,SAC7Fm6C,EAAW16C,EAAuBC,EAAQy6C,GAE9C,IAAIvP,EAAU5mC,KAAK46D,kBAAkBpsD,GACrCo4B,EAAQC,OAAS,QACjBD,EAAQ3tB,YAAc,OACRhf,IAAVguB,GACAutC,EAAS,EACT5uB,EAAQ/mC,GAAK,cAAgBooB,EAC7B2e,EAAQ7tB,KAAO,YAGfy8C,EAAS,EACT5uB,EAAQ7tB,KAAO8hD,EAAY,UAAY,SAE3Cj0B,EAAQ5pC,SAAWm5C,EAASn/C,EAAImc,EAAE2uC,IAAM3uC,EAAEwJ,MAC1CiqB,EAAQ3pC,SAAWk5C,EAASl/C,EAAIkc,EAAE4uC,IAAM5uC,EAAEwJ,MAC1CiqB,EAAQ4uB,OAASA,EACjB5uB,EAAQpvC,MAAQ,EAChBovC,EAAQ/mC,GAAKA,EACb+mC,EAAQhJ,QAAUA,EAClBgJ,EAAQnuB,MAAQgxB,EACZoxB,IACAj0B,EAAQnuB,OAAS,gBAEjB+gD,IACA5yB,EAAQhJ,SAAU,GAEtB59B,KAAK23D,YAAYvC,WAAW3zC,EAAQmlB,EAASyuB,EAAgBzD,IAGjE2F,EAAgBnnB,UAAUypB,aAAe,SAAUtwB,EAAU9nB,EAAQ5b,EAAW4zD,EAAYqB,EAAkB74C,GAC1G,IAAIzT,EAAU+6B,EACV3C,EAAU5mC,KAAK46D,kBAAkBpsD,EAAS3I,GAC9C+gC,EAAQ5vC,GAAK6O,EAAU8W,MACvBiqB,EAAQ3vC,GAAK4O,EAAU8W,MACvBiqB,EAAQruC,OAASsN,EAAU8W,MAC3BiqB,EAAQtuC,QAAUuN,EAAU8W,MAC5BiqB,EAAQ7tB,KAAO,cACf6tB,EAAQC,OAAS,UACjBD,EAAQ3tB,YAAc,GACtB2tB,EAAQI,UAAY,MACpBJ,EAAQnuB,MAAQ,mBACZwJ,IACA2kB,EAAQnuB,OAAS,mBAErBmuB,EAAQ/mC,GAAK,aACb+mC,EAAQ/mC,GAAMG,KAAKiY,gBAAkBC,iBAAeC,mBAAsB,oBAAsB,aAC3FshD,IACD7yB,EAAQnuB,OAAS,eAEjBqiD,IACAl0B,EAAQnuB,OAAS,mBAErBmuB,EAAQvuC,aAAe,EACvB,IAAIs5D,EAAY3xD,KAAKk4D,aAAa3uB,EAAU,YAC5CvpC,KAAK23D,YAAYvH,cAAc3uC,EAAQmlB,EAAS5mC,KAAKqjC,eAAWppC,GAAW,EAAM03D,IAGrF4F,EAAgBnnB,UAAU2qB,kBAAoB,SAAUl6B,EAAcpf,EAAQ5b,GAE1E,IAAK,IADD2I,EAAUqyB,EAAaryB,QAClB3R,EAAK,EAAGohB,EAAK4iB,EAAa4M,YAAa5wC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAClE,IAAItC,EAAM0jB,EAAGphB,GAETs5C,GADU,IAAIrnC,QACH,GACX1Y,EAAOmE,EAAIoE,UACfw3C,EAAWvV,GAAsBC,EAActmC,EAAKsL,IAC3C7O,GAAKm/C,EAASn/C,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MACrDw5B,EAASl/C,GAAKk/C,EAASl/C,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,MACjDpiB,EAAIqjC,UACJrjC,EAAIqjC,WAAWiD,EAAartB,YAAc8tB,sBAAoB1I,aAElE,IAAI9D,EAAS90B,KAAK46D,kBAAkBpsD,GACpCsmB,EAAOj1B,GAAKtF,EAAI8e,KAAO,cACvByb,EAAO/b,KAAOxe,EAAI8gC,gBAClBvG,EAAO+R,OAAStsC,EAAI4gB,YACpB2Z,EAAO7b,YAAc1e,EAAIitD,YACzB1yB,EAAO93B,QAAUm5C,EAASn/C,EAC1B89B,EAAO73B,QAAUk5C,EAASl/C,EAC1B69B,EAAO0gC,OAAoB,GAAXj7D,EAAI2mB,KACpB4T,EAAOrc,MAAQ,8BACfqc,EAAOt9B,MAAQ,EACfs9B,EAAO8I,QAAUrjC,EAAIqjC,QACrB9I,EAAOwH,QAAU,EACjBt8B,KAAK23D,YAAYvC,WAAW3zC,EAAQqT,EAAQ,GAAKggC,aAAcv6D,EAAI8e,KAAO,gBAC1E,IACI9iB,KAEJA,EAAkBsE,EADlBtE,EAAkBJ,EAAgBC,IAElC,IAAI4kE,EAAWv2B,GAAYruC,GAIvB6kE,EAAUzhE,EAAcjD,GAFdgE,EAAI2mB,KAAO,IAAO3mB,EAAI2mB,MAAQ85C,EAASziE,OACvCgC,EAAI2mB,KAAO,IAAO3mB,EAAI2mB,MAAQ85C,EAAS1iE,QACQ,EAAM0iE,EAAShkE,EAAGgkE,EAAS/jE,EAAG,EAAG,GAC9F+jE,EAAWv2B,GAAYw2B,GACvB,IAAIr0B,GACA5vC,EAAGm/C,EAASn/C,EAAIgkE,EAASziE,MAAQ,EACjCtB,EAAGk/C,EAASl/C,EAAI+jE,EAAS1iE,OAAS,EAClCd,MAAO,EAAGqI,GAAI,GACd4Y,MAAO,4BACPM,KAAMxe,EAAI2gE,UAAWr0B,OAAQtsC,EAAI8gC,gBAAiBpiB,YAAa,GAAK+tB,UAAW,GAAI5wC,KAAM6kE,EACzF1iE,MAAOgC,EAAI2mB,KAhBE,EAgBiB5oB,OAAQiC,EAAI2mB,KAhB7B,EAgBgD4lB,OAAQ,EAAGC,OAAQ,EAAGzK,QAAS,EAAGsB,QAASrjC,EAAIqjC,SAEhH59B,KAAK23D,YAAYtH,SAAS5uC,EAAQmlB,EAAS5mC,KAAKqjC,eAAWppC,OAAWA,GAAa66D,aAAcv6D,EAAI8e,KAAO,kBAIpHk+C,EAAgBnnB,UAAUwpB,kBAAoB,SAAUprD,EAASiT,EAAQ5b,EAAWu7B,EAAqBo4B,GACvF,IAAI1qD,GAAlB,IACIqnC,EACAj1B,EAAO,IAAI5B,GACf4B,EAAK3oB,MAAQ,GACb2oB,EAAK5oB,OAAS,GACd,IAAIyK,EAAMyL,EAAQxS,QAAUwS,EAAQjC,WAAWjU,OAASkW,EAAQuyB,MAAM9pC,EAClE2L,EAAO4L,EAAQzS,QAAUyS,EAAQjC,WAAWhU,MAAQiW,EAAQuyB,MAAM/pC,EAClE4mC,KAAWwD,EAAsBE,sBAAoB5sB,QACrD8kD,IACA57B,GAAU,GAEd,IAgBIkJ,EAASlkC,EAAO4L,EAAQuyB,MAAM/pC,EAAIwX,EAAQjC,WAAWhU,MACrDwuC,EAAShkC,EAIb,GAHA+jC,GAAUA,EAASjhC,EAAUi8C,IAAMj8C,EAAU8W,MAC7CoqB,GAAUA,EAASlhC,EAAUk8C,IAAMl8C,EAAU8W,MAC7Cw5B,GAAan/C,EAAG8vC,EAAsB,GAAb5lB,EAAK3oB,MAAatB,EAAG8vC,EAAS,GAAmB,GAAd7lB,EAAK5oB,QACrC,IAAxBkW,EAAQtB,aAAiD,IAA5BsB,EAAQrB,gBAAuB,CAC5D,IAAIzR,EAASL,IACb0B,EAAarB,EAAQ8S,EAAQtB,YAAcsB,EAAQrB,iBAAkBtH,EAAUi8C,GAAKtzC,EAAQzS,SAAW8J,EAAU8W,OAAQ9W,EAAUk8C,GAAKvzC,EAAQxS,SAAW6J,EAAU8W,OACrKw5B,EAAW16C,EAAuBC,EAAQy6C,GAE9C,IAAIvP,GACA5vC,EAAGm/C,EAASn/C,EACZC,EAAGk/C,EAASl/C,EACZO,MAAOgX,EAAQtB,YAAcsB,EAAQrB,gBACrC4L,KAAM,UAAW8tB,OAAQ,QAAS5tB,YAAa,GAAK+tB,UAAW,GAAI5wC,KA9B5D,wqDA+BPmC,MAAO,GAAID,OAAQ,GAAIwuC,OAAQ,EAAGC,OAAQ,EAAGzK,QAAS,EAAGsB,QAASA,EAAS/9B,GAAI2O,EAAQ3O,GAAI4Y,MAAO,2BAEtGmuB,EAAQ/mC,GAAK,cACbG,KAAK23D,YAAYtH,SAAS5uC,EAAQmlB,EAAS5mC,KAAKqjC,WAAW,OAAMppC,GAAa66D,aAAc,yCAGhGyC,EAAgBnnB,UAAU2oB,kBAAoB,SAAUn5D,EAAS6hB,EAAQ5b,EAAW8rD,EAAWY,GAC3F,IAAI3rB,EAAU5mC,KAAK46D,kBAAkBh7D,EAASiG,GAC9C+gC,EAAQxwC,KAAOwJ,EAAQ82C,aACvB9P,EAAQxwC,KAAOwJ,EAAQ82C,aACvB,IAAIkb,EAAYhyD,EAAQsnC,YAActnC,EAAQsnC,YAActnC,EAAQC,GAKpE,GAJKG,KAAKy3D,YACN7wB,EAAQ5vC,EAAI4I,EAAQw0C,WAAWp9C,EAAI4I,EAAQw0C,WAAWp9C,EAAI4vC,EAAQ5vC,EAClE4vC,EAAQ3vC,EAAI2I,EAAQw0C,WAAWn9C,EAAI2I,EAAQw0C,WAAWn9C,EAAI2vC,EAAQ3vC,GAElE2I,EAAQ8zC,SAAU,CAClB,IAAIynB,EAAav7D,EAAQ+2C,eACzB/P,EAAQxwC,KAAOoxC,GAAW5nC,EAASu7D,EAAYlhE,EAAW2sC,GAE9D5mC,KAAK03D,SAASrH,SAAS5uC,EAAQmlB,EAAS5mC,KAAKqjC,eAAWppC,EAAW03D,EAAWC,IAGlF2F,EAAgBnnB,UAAUgrB,mBAAqB,SAAU7/B,EAAc8/B,EAASloD,EAAGub,EAAeM,EAAQC,GAEtG,IAAIqsC,EAAUttC,SAASmb,gBAAgB,6BAA8B,WACjE2tB,EAAO9oC,SAASmb,gBAAgB,6BAA8B,QAClE2tB,EAAKlyB,aAAa,KAAM5kC,KAAKqjC,UAAY,uBACrC9H,EAAa/nB,YAAcs/B,kBAAgByoB,qBAC3ChgC,EAAa/nB,YAAcs/B,kBAAgB0oB,oBAC3CF,EAAQ12B,aAAa,KAAM5kC,KAAKqjC,UAAY,YAEhD,IAAIo4B,EAAS,EACTC,EAAU,EACVC,EAAgB,EAChBC,EAAgB,EAChBj/C,EAAQ,EACRk/C,GAAc,EAClB,GAAIntC,EAAcc,YAAcd,EAAcotC,aAAe9sC,GAAUC,EACnE0sC,EAAgB1sC,EAAOu7B,mBAAmBr3C,EAAEwJ,OAC5Ci/C,EAAgB5sC,EAAOw7B,mBAAmBr3C,EAAEwJ,OAC5C4e,EAAawgC,oBAAoBC,iBAAmBL,EAAgB3sC,EAAOs8B,UAC3E/vB,EAAa0gC,kBAAkBD,iBAAmBJ,EAAgB3sC,EAAOq8B,UACzEuQ,GAAc,MAEb,CACD,IAAK,IAAIh/D,EAAK,EAAGohB,EAAKsd,EAAa0gC,kBAAkBC,cAAer/D,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAEtF4+D,GADYx9C,EAAGphB,GAGnB,IAAK,IAAIs+B,EAAK,EAAGC,EAAKG,EAAawgC,oBAAoBG,cAAe/gC,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CAExFugC,GADYtgC,EAAGD,GAGnBxe,EAAQ3c,KAAKm8D,kBAAkB5gC,EAAcpoB,EAAEwJ,OAEnD8+C,EAASI,EAAcD,EAAgBH,EAAS9+C,EAChD++C,EAAUG,EAAcF,EAAgBD,EAAU/+C,EAKlDysB,GAAgBkyB,GAHZz7D,GAAIG,KAAKqjC,UAAY,WAAYrsC,EAAG,EAAGC,EAAG,EAAGsB,MAAOkjE,EACpDnjE,OAAQojE,EAASU,aAAc,mBAGnCp8D,KAAKq8D,uBAAuBf,EAASG,EAAQC,EAAS/+C,EAAO4e,EAAc7M,EAAeO,EAAQ4sC,GAClG77D,KAAKs8D,qBAAqBhB,EAASG,EAAQC,EAAS/+C,EAAO4e,EAAc7M,EAAeM,EAAQ6sC,GAChG/E,EAAK93B,YAAYs8B,GACjBD,EAAQr8B,YAAY83B,IAExBS,EAAgBnnB,UAAUisB,uBAAyB,SAAUf,EAASG,EAAQC,EAAS/+C,EAAO4e,EAAc7M,EAAeO,EAAQ4sC,GAC/H,IAEIU,EAFAC,EAAQ,EACRx1B,KAEJ,GAAIzL,EAAa/nB,YAAcs/B,kBAAgByoB,oBAAqB,CAChE,IAAIkB,EAAYlhC,EAAawgC,oBAAoBG,cAC/B3gC,EAAawgC,oBAAoBW,UAC/CnhC,EAAawgC,oBAAoBY,gBACjC31B,EAAYhnC,KAAK03D,SAAS9H,eAAer0B,EAAawgC,oBAAoBY,gBAE1EjuC,EAAcc,YAAcd,EAAcotC,aAAe7sC,IACzDwtC,EAAYz8D,KAAK48D,oBAAoBH,EAAW/tC,EAAeO,EAAQysC,IAE3E,IAAK,IAAIhlE,EAAI,EAAGA,EAAI+lE,EAAUhmE,OAAQC,GAAQ,EAAG,CAC7C6lE,EAAQvuC,SAASmb,gBAAgB,6BAA8B,QAC/D,IAAI/V,EAAIopC,EAAQC,EAAU/lE,GAAK,EAC/B08B,EAAIyoC,EAAczoC,EAAIA,EAAIzW,EAO1BysB,GAAgBmzB,GALZ5Q,eAAgB8Q,EAAU/lE,GAAImwC,OAAUtL,EAAawgC,oBAAoBW,UACzEtpC,EAAK,QAAc,KAAOqoC,EAAS,MAAY,KAC/Cz0B,UAAaA,EAAU1oC,WACvBma,MAA0B,OAAjBgkD,EAAU/lE,GAAc,uBAAyB,wBAG9D4kE,EAAQt8B,YAAYu9B,GACpBC,GAASC,EAAU/lE,EAAI,GAAK+lE,EAAU/lE,MAIlD6gE,EAAgBnnB,UAAUksB,qBAAuB,SAAUhB,EAASG,EAAQC,EAAS/+C,EAAO4e,EAAc7M,EAAeM,EAAQ6sC,GAC7H,IAEIgB,EAFAL,EAAQ,EACRx1B,KAEJ,GAAIzL,EAAa/nB,YAAcs/B,kBAAgB0oB,kBAAmB,CAC9D,IAAIiB,EAAYlhC,EAAa0gC,kBAAkBC,cAC7B3gC,EAAa0gC,kBAAkBS,UAC7CnhC,EAAa0gC,kBAAkBU,gBAC/B31B,EAAYhnC,KAAK03D,SAAS9H,eAAer0B,EAAa0gC,kBAAkBU,gBAExEjuC,EAAcc,YAAcd,EAAcotC,aAAe9sC,IACzDytC,EAAYz8D,KAAK48D,oBAAoBH,EAAW/tC,EAAeM,EAAQysC,IAE3E,IAAK,IAAI/kE,EAAI,EAAGA,EAAI+lE,EAAUhmE,OAAQC,GAAQ,EAAG,CAC7CmmE,EAAQ7uC,SAASmb,gBAAgB,6BAA8B,QAC/D,IAAI/V,EAAIopC,EAAQC,EAAU/lE,GAAK,EAC/B08B,EAAIyoC,EAAczoC,EAAIA,EAAIzW,EAO1BysB,GAAgByzB,GALZlR,eAAgB8Q,EAAU/lE,GAAImwC,OAAUtL,EAAa0gC,kBAAkBS,UACvEtpC,EAAK,MAAY,SAAe,IAAMsoC,EAAU,KAChD10B,UAAaA,EAAU1oC,WACvBma,MAA0B,OAAjBgkD,EAAU/lE,GAAc,uBAAyB,wBAG9D4kE,EAAQt8B,YAAY69B,GACpBL,GAASC,EAAU/lE,EAAI,GAAK+lE,EAAU/lE,MAKlD6gE,EAAgBnnB,UAAU0sB,WAAa,SAAUvhC,EAAcwhC,EAASl3D,EAAW6oB,EAAeM,EAAQC,GACtG,IACIv4B,EADAuqB,EAAO87C,EAAQ9uC,eAAejuB,KAAKqjC,UAAY,cAE/Cw4B,GAAc,EAClB,GAAI56C,EAAM,CACN,IAAIq6C,EAAUyB,EAAQ9uC,eAAejuB,KAAKqjC,UAAY,YAClDi4B,GACAA,EAAQr8C,WAAW8f,YAAYu8B,GAEnC,IAAIK,EAAgB,EAChBC,EAAgB,EAChBj/C,EAAQ,EACR+R,EAAcc,YAAcd,EAAcotC,aAAe7sC,GAAUD,GACnE2sC,EAAgB1sC,EAAOu7B,mBAAmB3kD,EAAU8W,OACpDi/C,EAAgB5sC,EAAOw7B,mBAAmB3kD,EAAU8W,OACpDk/C,GAAc,EACdtgC,EAAawgC,oBAAoBC,iBAAmBL,EAAgB3sC,EAAOs8B,UAC3E/vB,EAAa0gC,kBAAkBD,iBAAmBJ,EAAgB3sC,EAAOq8B,WAGzE3uC,EAAQ3c,KAAKm8D,kBAAkB5gC,EAAc11B,EAAU8W,OAE3D,IAAIrkB,EAAS,EACb,IAAK5B,EAAI,EAAGA,EAAI6kC,EAAawgC,oBAAoBG,cAAczlE,OAAQC,IACnE4B,GAAUijC,EAAawgC,oBAAoBG,cAAcxlE,GAE7D,IAAI6B,EAAQ,EACZ,IAAK7B,EAAI,EAAGA,EAAI6kC,EAAa0gC,kBAAkBC,cAAczlE,OAAQC,IACjE6B,GAASgjC,EAAa0gC,kBAAkBC,cAAcxlE,GAE1D,IAAIs0D,GACAh0D,GAAI6O,EAAUi8C,GAAKj8C,EAAU8W,MAC7B1lB,GAAI4O,EAAUk8C,GAAKl8C,EAAU8W,OAEjCysB,GAAgBnoB,EAAM+pC,GACtBzyD,EAAQsjE,EAAcD,EAAgBrjE,EAAQokB,EAC9CrkB,EAASujE,EAAcF,EAAgBrjE,EAASqkB,EAChDquC,GACInrD,GAAIG,KAAKqjC,UAAY,WAAYrsC,EAAG,EAAGC,EAAG,EAAGsB,MAAOA,EACpDD,OAAQA,EAAQ8jE,aAAc,kBAGlChzB,GADAkyB,EAAUttC,SAASmb,gBAAgB,6BAA8B,WACxC6hB,GACzBhrD,KAAKq8D,uBAAuBf,EAAS/iE,EAAOD,EAAQqkB,EAAO4e,EAAc7M,EAAeO,EAAQ4sC,GAChG77D,KAAKs8D,qBAAqBhB,EAAS/iE,EAAOD,EAAQqkB,EAAO4e,EAAc7M,EAAeM,EAAQ6sC,GAC9F,IAAI/E,EAAOiG,EAAQ9uC,eAAejuB,KAAKqjC,UAAY,sBAC/CyzB,GACAA,EAAK93B,YAAYs8B,KAI7B/D,EAAgBnnB,UAAUwsB,oBAAsB,SAAUH,EAAW/tC,EAAeG,EAAOE,GAGvF,IAAK,IAFDiuC,KACA5R,EAAer8B,EAAeF,EAAMy8B,SAC/B50D,EAAI,EAAGA,EAAqB,EAAjBm4B,EAAMy8B,SAAc50D,IAEhCsmE,EAAYtmE,GADZA,EAAI,GAAM,EACc,IAANA,EAAW,KAAO,IAGnB00D,EAAe4R,EAAYtmE,EAAI,GAGxD,OAAOsmE,GAEXzF,EAAgBnnB,UAAU+rB,kBAAoB,SAAU5gC,EAAc5e,GAClE,GAAIA,GAAS,EACT,KAAOA,GAAS,GACZA,GAAS,OAGZ,GAAIA,GAAS,GACd,KAAOA,GAAS,IACZA,GAAS,EAGjB,IAAIjmB,EAGJ,GAFA6kC,EAAawgC,oBAAoBC,gBAAkBzgC,EAAawgC,oBAAoBkB,cACpF1hC,EAAa0gC,kBAAkBD,gBAAkBzgC,EAAa0gC,kBAAkBgB,cAClE,IAAVtgD,EAAa,CACb,IAAIugD,EAAY3hC,EAAawgC,oBAE7B,IADAmB,EAAUlB,mBACLtlE,EAAI,EAAGA,EAAIwmE,EAAUD,cAAcxmE,OAAQC,IAC5CwmE,EAAUlB,gBAAgBtlE,GAAKwmE,EAAUD,cAAcvmE,GAAKimB,EAIhE,KAFAugD,EAAY3hC,EAAa0gC,mBACfD,mBACLtlE,EAAI,EAAGA,EAAIwmE,EAAUD,cAAcxmE,OAAQC,IAC5CwmE,EAAUlB,gBAAgBtlE,GAAKwmE,EAAUD,cAAcvmE,GAAKimB,EAGpE,OAAOA,GAGX46C,EAAgBnnB,UAAU4oB,kBAAoB,SAAUp5D,EAAS6hB,EAAQ5b,EAAW8rD,EAAWY,GAC3F,IAAI3rB,EAAU5mC,KAAK46D,kBAAkBh7D,EAASiG,GAC9C+gC,EAAQvuC,aAAe,EACvBuuC,EAAQlK,WAAa0J,GAAmBxmC,EAAQM,MAAMw8B,WAAY98B,EAAQM,MAAMuZ,cAChFmtB,EAAQ3mC,QAAUL,EAAQK,QAC1B2mC,EAAQxB,UAAYkB,GAAkB1mC,EAAQM,MAAMuZ,cACpDmtB,EAAQnK,UAAY2K,GAAkBxnC,EAAQM,MAAMu8B,WACpDmK,EAAQptB,MAAQ5Z,EAAQM,MAAMsZ,MAC9BotB,EAAQpK,OAAS58B,EAAQM,MAAMs8B,OAC/BoK,EAAQttB,KAAO1Z,EAAQM,MAAMoZ,KAC7BstB,EAAQrtB,SAAW3Z,EAAQM,MAAMqZ,SACjCqtB,EAAQrK,WAAa38B,EAAQM,MAAMq8B,WACnCqK,EAAQvK,aAAez8B,EAAQM,MAAMm8B,aACrCuK,EAAQjK,eAAiB/8B,EAAQM,MAAMy8B,eACvCiK,EAAQO,OAASvnC,EAAQunC,OACzBP,EAAQD,WAAa/mC,EAAQ+mC,WAC7BC,EAAQrC,WAAa3kC,EAAQ2kC,WAC7BqC,EAAQI,UAAY,GACpBJ,EAAQ3tB,YAAc,EACtB2tB,EAAQ7tB,KAAOnZ,EAAQM,MAAM6Y,KAC7B,IAAI64C,EAAYhyD,EAAQsnC,YAActnC,EAAQsnC,YAActnC,EAAQK,QAAUL,EAAQK,QAAUL,EAAQC,GACxGG,KAAK03D,SAAStH,cAAc3uC,EAAQmlB,EAAS5mC,KAAKqjC,eAAWppC,OAAWA,EAAW03D,GACnF3xD,KAAK03D,SAAShG,SAASjwC,EAAQmlB,EAAS+qB,EAAWC,EAAW5xD,KAAKqjC,UAAYzjC,EAAQ8zC,UAAYj3C,KAAKyK,IAAItH,EAAQ+zC,iBAAiB38C,GAAK4I,EAAQ+zC,iBAAiB18C,IAC/J+I,KAAKy3D,YACL73D,EAAQunC,QAAS,IAGzBowB,EAAgBnnB,UAAU6oB,oBAAsB,SAAUr5D,EAAS6hB,EAAQ5b,EAAW8rD,EAAWY,GAC7F,IAAI4K,EACAC,EACA1E,EAAY14D,KAAKk4D,aAAat4D,OAAS3F,EAAWwnB,IAAWkwC,EAC7D0L,EAAcr9D,KAAKo4D,iBAAiBx4D,EAAS6hB,EAAQi3C,GAAWrN,GAAK5pC,EACrEmlB,EAAU5mC,KAAK46D,kBAAkBh7D,EAASiG,GAK9C,OAJA+gC,EAAQ7tB,KAAO,cACf6tB,EAAQvuC,aAAeuH,EAAQvH,aAC/BuuC,EAAQC,OAAS,cACjB7mC,KAAK03D,SAAStH,cAAc3uC,EAAQmlB,EAAS5mC,KAAKqjC,eAAWppC,OAAWA,EAAW03D,GAC3E/xD,EAAQ+c,OACZ,IAAK,OACDwgD,EAAgBv9D,EAAQ83C,YAAYn/C,MACpC6kE,EAAiBx9D,EAAQ83C,YAAYp/C,OACrC,MACJ,IAAK,UACD6kE,EAAgBv9D,EAAQ2M,WAAWhU,MACnC6kE,EAAiBx9D,EAAQ2M,WAAWjU,OACpC,MACJ,IAAK,OAEG6kE,EAAgBC,EADhBx9D,EAAQ2M,WAAWhU,OAASqH,EAAQ2M,WAAWjU,OACdsH,EAAQ2M,WAAWhU,MAGnBqH,EAAQ2M,WAAWjU,OAExD,MACJ,IAAK,QAEG6kE,EAAgBC,EADhBx9D,EAAQ2M,WAAWhU,OAASqH,EAAQ2M,WAAWjU,OACdsH,EAAQ2M,WAAWhU,MAGnBqH,EAAQ2M,WAAWjU,OAI5D0H,KAAK23D,aACL33D,KAAK23D,YAAYtB,kBAAkBz2D,EAASy9D,EAAaD,EAAgBD,EAAezE,IAGhGnB,EAAgBnnB,UAAU8oB,kBAAoB,SAAUt5D,EAAS6hB,EAAQuQ,EAAWnsB,EAAW8rD,EAAWY,EAAa7tC,GACnH,IAAIkiB,EAAU5mC,KAAK46D,kBAAkBh7D,EAASiG,GAC9C+gC,EAAQ7tB,KAAO,cACf6tB,EAAQvuC,aAAeuH,EAAQvH,aAC/BuuC,EAAQC,OAAS,cACjB7mC,KAAK03D,SAAStH,cAAc3uC,EAAQmlB,EAAS5mC,KAAKqjC,eAAWppC,OAAWA,EAAW03D,GAC/E3xD,KAAK23D,aACL33D,KAAK23D,YAAYvB,gBAAgBx2D,EAASoyB,EAAU7f,SAAS,GAAItM,EAAWksB,GAAeC,GAAYtN,IAI/G6yC,EAAgBnnB,UAAU0oB,mBAAqB,SAAUl5D,EAAS6hB,EAAQ5b,EAAW8rD,EAAWY,GAC5F,IAAI3rB,EAAU5mC,KAAK46D,kBAAkBh7D,EAASiG,GAC9C+gC,EAAQvuC,aAAe,EACvB2H,KAAK03D,SAAStH,cAAc3uC,EAAQmlB,EAAS5mC,KAAKqjC,eAAWppC,OAAWA,EAAW03D,GAEnF,IAAI2L,EACAC,EACAC,EACAC,EACJ,GAAwB,YAApB79D,EAAQs4C,QACRolB,EAAa19D,EAAQ2M,WAAWhU,MAChCglE,EAAc39D,EAAQ2M,WAAWjU,WAEhC,CACD,IAAIm+D,EAAe72D,EAAQ83C,YAAYn/C,MACnCm+D,EAAgB92D,EAAQ83C,YAAYp/C,OACpColE,EAAa92B,EAAQruC,MAAQk+D,EAC7BkH,EAAc/2B,EAAQtuC,OAASo+D,EAC/BkH,OAAQ,EACZ,OAAQh+D,EAAQs4C,SACZ,IAAK,OAEDolB,EAAa7G,GADbmH,EAAQnhE,KAAKyK,IAAIw2D,EAAYC,IAE7BJ,EAAc7G,EAAgBkH,EAC9Bh3B,EAAQ5vC,GAAKyF,KAAK6G,IAAIsjC,EAAQruC,MAAQ+kE,GAAc,EACpD12B,EAAQ3vC,GAAKwF,KAAK6G,IAAIsjC,EAAQtuC,OAASilE,GAAe,EACtD,MACJ,IAAK,QACDG,EAAa92B,EAAQruC,MAAQk+D,EAC7BkH,EAAc/2B,EAAQtuC,OAASo+D,EAE/B4G,EAAa7G,GADbmH,EAAQnhE,KAAKmJ,IAAI83D,EAAYC,IAE7BJ,EAAc7G,EAAgBkH,EAC9BJ,EAAc52B,EAAQruC,MAAQ+kE,EAAa7G,EAC3CgH,EAAe72B,EAAQtuC,OAASilE,EAAc7G,EAC9C,MACJ,IAAK,OACD4G,EAAa7G,EACb8G,EAAc7G,GAI1B9vB,EAAQruC,MAAQ+kE,EAChB12B,EAAQtuC,OAASilE,EAIjB32B,EAAQ42B,YAAcA,EACtB52B,EAAQ62B,aAAeA,EACvB72B,EAAQrkC,OAAS3C,EAAQ2C,OACzBqkC,EAAQjR,UAAY/1B,EAAQu+B,WAC5ByI,EAAQjqB,MAAQ/c,EAAQy+B,WACxBuI,EAAQM,YAActnC,EAAQsnC,YAActnC,EAAQsnC,YAActnC,EAAQC,GAC1EG,KAAK03D,SAASpF,UAAU7wC,EAAQmlB,EAAS+qB,EAAWY,IAGxDgF,EAAgBnnB,UAAUyoB,gBAAkB,SAAUlC,EAAOl1C,EAAQuQ,EAAWnsB,EAAW8rD,EAAWiH,EAAcrG,EAAa7tC,GAC7H,IAAIm5C,GAActzB,IAAKonB,EAAWtG,EAAG5pC,GACrC,GAAIzhB,KAAKqjC,YACLsuB,EAAY3xD,KAAKk4D,aAAavB,IAAUhF,EACpC3xD,KAAKy3D,WAAW,CAChB,IAAIe,OAAe,EACnBA,EAAex4D,KAAKo4D,iBAAiBzB,EAAOl1C,EAAQkwC,EAAWjtC,GAAY2mC,GAAK5pC,EAChFkwC,EAAY3xD,KAAKk4D,aAAal4D,KAAK89D,gBAAgBnH,EAAMxkD,YAAcw/C,EACvE,IAAIoM,EAAkB/9D,KAAKo4D,iBAAiBp4D,KAAK89D,gBAAgBnH,EAAMxkD,UAAWqmD,EAAc7G,EAAWjtC,GAC3Gm5C,EAAUtzB,IAAMwzB,EAAgBxzB,KAAOonB,EACvCkM,EAAUxS,EAAI0S,EAAgB1S,GAAKmN,EAC/BI,GACIjH,IACKA,EAAU1jC,eAAe4vC,EAAUxS,EAAExrD,KACtC4hB,EAAOud,YAAY6+B,EAAUxS,IAGrC5pC,EAASo8C,EAAUxS,GAGnB5pC,EAASo8C,EAAUxS,EAK/B,GADArrD,KAAKm5D,WAAWxC,EAAOl1C,EAAQ5b,EAAW8rD,GACtCgF,EAAM9gB,cAAe,CAIrB,IAAK,IAFDmoB,EADAC,OAAU,EAEVpqB,OAAO,EACFh3C,EAAK,EAAGohB,EAAK04C,EAAMxkD,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACxD,IAAI0R,EAAQ0P,EAAGphB,GACf80D,EAAY3xD,KAAKk4D,aAAal4D,KAAK89D,gBAAgBnH,EAAMxkD,WAAa5D,IAAUojD,EAC5E3xD,KAAKy3D,YAELwG,GADAD,EAAch+D,KAAKo4D,iBAAiBp4D,KAAK89D,gBAAgBnH,EAAMxkD,WAAa5D,EAAOkT,EAAQkwC,IACrEtG,GAAK5pC,EACvBu8C,EAAYzzB,MACZonB,EAAYqM,EAAYzzB,MAG3BvqC,KAAKy3D,YACNlpD,EAAMslC,KAAO8iB,EAAM9iB,MAEvB7zC,KAAK24D,cAAcpqD,EAAO0vD,GAAWx8C,EAAQuQ,EAAWnsB,EAAW8rD,GAAW,EAAMY,EAAa7tC,GAC7FnW,aAAiB+V,IAAe25C,KAAatH,EAAMtiB,eAAiBtB,gBAAcsD,kBAClFxC,EAAQtlC,EAAMslC,MAAuB,SAAftlC,EAAMslC,KAAmBtlC,EAAMslC,KAAO8iB,EAAM9iB,KAClE7zC,KAAKk+D,kBAAkB3vD,EAAO0vD,EAASpqB,IAEtCtlC,EAAM8lC,eAAiBtB,gBAAc6U,eAAkBqW,IACxDpqB,EAAQtlC,EAAMslC,MAAuB,SAAftlC,EAAMslC,KAAmBtlC,EAAMslC,KAAO8iB,EAAM9iB,KAClE7zC,KAAKk+D,kBAAkBvH,EAAOsH,EAASpqB,MAErCtlC,aAAiB+V,KAA+B,SAAfqyC,EAAM9iB,MACxC8iB,EAAMtiB,eAAiBtB,gBAAcsD,gBACtCr2C,KAAKk+D,kBAAkB3vD,EAAO0vD,GAAWx8C,EAAQk1C,EAAM9iB,MAGzD8iB,EAAMtiB,eAAiBtB,gBAAcsD,gBACvCr2C,KAAKk+D,kBAAkBvH,EAAOl1C,EAAQk1C,EAAM9iB,QAIxD0jB,EAAgBnnB,UAAU8tB,kBAAoB,SAAUt+D,EAAS6hB,EAAQoyB,GACrE,IAAImX,KACAttD,EAAS,EACTC,EAAS,EACTwgE,EAAO,EACPC,EAAO,EACPriE,EAAU,EACVC,EAAU,EACD,SAAT63C,GACa,eAATA,GAAkC,SAATA,IACzBsqB,EAAOv+D,EAAQ4B,OAAOP,OAAOjK,EAC7B+E,GAAW6D,EAAQ4B,OAAOP,OAAOjK,EACjC0G,GAAU,GAED,aAATm2C,GAAgC,SAATA,IACvBuqB,EAAOx+D,EAAQ4B,OAAOP,OAAOhK,EAC7B+E,GAAW4D,EAAQ4B,OAAOP,OAAOhK,EACjC0G,GAAU,GAEdqtD,GACInlD,UAAa,aAAes4D,EAAO,IAAMC,EAAO,WAAa1gE,EAAS,IAChEC,EAAS,eAAiB5B,EAAU,IAAMC,EAAU,MAI9DgvD,GACInlD,UAAa,kBAGjBmlD,GACA5hB,GAAgB3nB,EAAQupC,IAIhCuM,EAAgBnnB,UAAU0tB,gBAAkB,SAAU3rD,EAAU8V,GAC5D,GAAI9V,GAAYA,EAAS1b,OAAS,EAAuB,CACrD,IAAI8X,EAAQ4D,EAAS,GACrB,GAAI5D,aAAiBiwB,GACjB,OAAOjwB,EAEFA,EAAM4D,UAAY5D,EAAM4D,SAAS1b,QACtCuJ,KAAK89D,gBAAgBvvD,EAAM4D,SAAU8V,KAAW,KAM5DsvC,EAAgBnnB,UAAU+oB,WAAa,SAAUv5D,EAAS6hB,EAAQ5b,EAAW8rD,GACzE,IAAI/qB,EAAU5mC,KAAK46D,kBAAkBh7D,EAASiG,GAC9C+gC,EAAQvuC,aAAeuH,EAAQvH,cAAgB,EAC/C,IAAIu5D,EAAYhyD,EAAQsnC,YAActnC,EAAQsnC,YAActnC,EAAQC,GACpEG,KAAK03D,SAAStH,cAAc3uC,EAAQmlB,EAAS5mC,KAAKqjC,eAAWppC,OAAWA,EAAW03D,EAAWC,IAGlG2F,EAAgBnnB,UAAUiuB,SAAW,SAAU58C,EAAQmlB,GACnDA,EAAQvuC,aAAe,EACvB2H,KAAK23D,YAAYvH,cAAc3uC,EAAQmlB,EAAS5mC,KAAKqjC,YAGzDk0B,EAAgBnnB,UAAUwqB,kBAAoB,SAAUh7D,EAASiG,GAC7D,IAAI+gC,GACAruC,MAAOqH,EAAQ2M,WAAWhU,MAAOD,OAAQsH,EAAQ2M,WAAWjU,OAC5DtB,EAAG4I,EAAQ7D,QAAU6D,EAAQ2M,WAAWhU,MAAQqH,EAAQmhC,MAAM/pC,EAAI,GAClEC,EAAG2I,EAAQ5D,QAAU4D,EAAQ2M,WAAWjU,OAASsH,EAAQmhC,MAAM9pC,EAAI,GACnE8hB,KAAMnZ,EAAQM,MAAM6Y,KAAM8tB,OAAQjnC,EAAQM,MAAM8Y,YAAaxhB,MAAOoI,EAAQsN,YAActN,EAAQuN,gBAClG25B,OAAQlnC,EAAQmhC,MAAM/pC,EAAG+vC,OAAQnnC,EAAQmhC,MAAM9pC,EAAGgiB,YAAarZ,EAAQM,MAAM+Y,YAC7E+tB,UAAWpnC,EAAQM,MAAM6e,iBAAmB,GAAIud,QAAS18B,EAAQM,MAAMo8B,QAAS2K,OAAQrnC,EAAQqnC,OAChG5J,SAAUz9B,EAAQM,MAAMm9B,SAAUO,QAASh+B,EAAQg+B,QAAS/9B,GAAID,EAAQC,GAAIqnC,YAAatnC,EAAQsnC,YACjG/K,cAAev8B,EAAQu8B,eAgB3B,OAdIv8B,EAAQ8zC,WACR9M,EAAQruC,OAASqH,EAAQ+zC,iBAAiB38C,EAC1C4vC,EAAQtuC,QAAUsH,EAAQ+zC,iBAAiB18C,EAC3C2vC,EAAQ5vC,GAAK4I,EAAQ+zC,iBAAiB38C,EACtC4vC,EAAQ3vC,GAAK2I,EAAQ+zC,iBAAiB18C,EACtC2vC,EAAQ3tB,aAAerZ,EAAQ+zC,iBAAiB38C,GAEhD4I,EAAQi0C,OACRjN,EAAQiN,KAAOj0C,EAAQi0C,MAEvBhuC,IACA+gC,EAAQ5vC,GAAK6O,EAAUi8C,GACvBlb,EAAQ3vC,GAAK4O,EAAUk8C,IAEpBnb,GAGX2wB,EAAgB+G,yBAA2B,SAAUC,EAAYn7B,EAAgBpsC,EAAGC,EAAGsB,EAAOD,GAC1F,GAAIimE,EAAWh8D,OAAQ,CACnB,IACIS,EADkB6lC,GAAsBzF,EAAevjC,IAC9BouB,eAAemV,EAAevjC,GAAK,UAChE,IAAKmD,EAAQ,CACT,IAAIw7D,E9BtmBpB,SAAwCn7B,GAMpC,OAJqBvE,GAAkBuE,GAEVwE,uBAAuB,4BAC3B,G8BimBM42B,CAAwBr7B,EAAevjC,KAC1DmD,EAASgrB,SAASmb,gBAAgB,6BAA8B,UACzDvE,aAAa,KAAMxB,EAAevjC,GAAK,UAC9C2+D,EAAax/B,YAAYh8B,GAE7B,IAAI2vD,EAAW,IAAIx7B,MACnBw7B,EAAS9pD,IAAM01D,EAAWh8D,OAC1BS,EAAO8nC,eAAe,+BAAgC,aAAc6nB,EAAS9pD,IAAIvK,YACjF,IAAIqe,EAA6B,SAArB4hD,EAAW5hD,MAAmB4hD,EAAW5hD,MAAQ,GACzDq5C,EAAWuI,EAAWngC,MACtB63B,EAAcD,EAASE,OAAO,GAAGr/D,cAAgBm/D,EAASp2C,MAAM,GAChEjD,IACAs5C,GAAe,IAAMt5C,EAAMu5C,OAAO,GAAGr/D,cAAgB8lB,EAAMiD,MAAM,IAOrEwpB,GAAgBpmC,GAJZnD,GAAMujC,EAAevjC,GAAK,SAAU7I,EAAKA,EAAGC,EAAKA,EACjDsB,MAASA,EAAOD,OAAUA,EAC1B69D,oBAAuBF,MAMnCsB,EAAgBnnB,UAAUsuB,gBAAkB,SAAU74D,EAAW84D,GAC7D,IAAI7c,EAAKj8C,EAAUi8C,GAAKj8C,EAAU8W,MAC9BolC,EAAKl8C,EAAUk8C,GAAKl8C,EAAU8W,MAClC,GAAImlC,IAAO9hD,KAAK6F,UAAU7O,GAAK+qD,IAAO/hD,KAAK6F,UAAU5O,GAAa,IAAP6qD,GAAmB,IAAPC,EAAW,CAE9E,GAAI4c,EAAS,CACU3+D,KAAKi4D,gBAAgBhqC,eAAejuB,KAAKqjC,UAAY,iBAC3DuB,aAAa,YAAa,aAChC/+B,EAAUi8C,GAAKj8C,EAAU8W,MAAS,IAAO9W,EAAUk8C,GAAKl8C,EAAU8W,MAAS,WAC5E9W,EAAU8W,MAAQ,M9BpnBxC,SAA6B0mB,GAIzB,OAFqBuF,GAAgBvF,GACLpV,eAAeoV,EAAY,c8BqnBnCu7B,CAAa5+D,KAAKqjC,WACxBuB,aAAa,YAAa,aAAgB/+B,EAAUi8C,GAAKj8C,EAAU8W,MAAS,IAC/E9W,EAAUk8C,GAAKl8C,EAAU8W,MAAS,KAExB3c,KAAK83D,aAAa7pC,eAAejuB,KAAKqjC,UAAY,iBACxDuB,aAAa,YAAa,aAC9B/+B,EAAUi8C,GAAKj8C,EAAU8W,MAAS,IAAO9W,EAAUk8C,GAAKl8C,EAAU8W,MAAS,WAC5E9W,EAAU8W,MAAQ,KAEN3c,KAAK83D,aAAa7pC,eAAejuB,KAAKqjC,UAAY,oBACxDuB,aAAa,YAAa,aAC/B/+B,EAAUi8C,GAAKj8C,EAAU8W,MAAS,IAAO9W,EAAUk8C,GAAKl8C,EAAU8W,MAAS,WAC5E9W,EAAU8W,MAAQ,KAEN3c,KAAKg4D,eAAe/pC,eAAejuB,KAAKqjC,UAAY,gBAC1DuB,aAAa,YAAa,aAC/B/+B,EAAUi8C,GAAKj8C,EAAU8W,MAAS,IAAO9W,EAAUk8C,GAAKl8C,EAAU8W,MAAS,WAC5E9W,EAAU8W,MAAQ,KAOxB,OALgB0rB,GAAaroC,KAAKqjC,WAAWlxB,SAAS,GAC5CjS,MAAM2F,UAAY,aACrBA,EAAUi8C,GAAKj8C,EAAU8W,MAAS,MAAS9W,EAAUk8C,GAAKl8C,EAAU8W,MAAS,YAC9E9W,EAAU8W,MAAQ,IACxB3c,KAAK6F,WAAc7O,EAAG6O,EAAUi8C,GAAKj8C,EAAU8W,MAAO1lB,EAAG4O,EAAUk8C,GAAKl8C,EAAU8W,QAC3E,EAEX,OAAO,GAGX46C,EAAgBnnB,UAAUyuB,WAAa,SAAUj/D,EAASk/D,EAAsB9sC,EAAWnsB,EAAWk5D,GAClG/+D,KAAK24D,cAAc/4D,EAASk/D,EAAsB9sC,EAAWnsB,EAAW7F,KAAKk4D,aAAat4D,QAAU3F,OAAWA,EAAW8kE,IAEvHxH,KC5nCPhnB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAO5DixD,GAA4B,SAAUztB,GAEtC,SAASytB,IACL,OAAkB,OAAXztB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAUyuB,EAAYztB,GAItBT,IACIoB,WAAS,KACV8sB,EAAW5uB,UAAW,cAAU,GACnCU,IACIoB,WAAS,gBACV8sB,EAAW5uB,UAAW,aAAS,GAClCU,IACIoB,WAAS,SACV8sB,EAAW5uB,UAAW,aAAS,GAClCU,IACIoB,WAAS,SACV8sB,EAAW5uB,UAAW,aAAS,GAC3B4uB,GACT7sB,iBAmBE8sB,GAA8B,SAAU1tB,GAExC,SAAS0tB,IACL,OAAkB,OAAX1tB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA0B/D,OA5BAuwC,GAAU0uB,EAAc1tB,GAIxBT,IACIoB,WAAS,OACV+sB,EAAa7uB,UAAW,aAAS,GACpCU,IACIoB,WAAS,OACV+sB,EAAa7uB,UAAW,cAAU,GACrCU,IACIyH,aAAYpD,KACb8pB,EAAa7uB,UAAW,cAAU,GACrCU,IACIoB,WAAS,cACV+sB,EAAa7uB,UAAW,mBAAe,GAC1CU,IACIoB,WAAS,aACV+sB,EAAa7uB,UAAW,2BAAuB,GAClDU,IACIyH,aAAYymB,KACbC,EAAa7uB,UAAW,kBAAc,GACzCU,IACIoB,YAAS,IACV+sB,EAAa7uB,UAAW,oBAAgB,GAC3CU,IACIoB,YAAS,IACV+sB,EAAa7uB,UAAW,sBAAkB,GACtC6uB,GACT9sB,iBAKE+sB,GAAgC,SAAU3tB,GAE1C,SAAS2tB,IACL,OAAkB,OAAX3tB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAsC/D,OAxCAuwC,GAAU2uB,EAAgB3tB,GAI1BT,IACIoB,WAAS,IACVgtB,EAAe9uB,UAAW,wBAAoB,GACjDU,IACIoB,WAAS,IACVgtB,EAAe9uB,UAAW,sBAAkB,GAC/CU,IACIoB,WAAS,IACVgtB,EAAe9uB,UAAW,mBAAe,GAC5CU,IACIoB,WAAS,IACVgtB,EAAe9uB,UAAW,qBAAiB,GAC9CU,IACIoB,WAAS,IACVgtB,EAAe9uB,UAAW,sBAAkB,GAC/CU,IACIoB,WAAS,KACVgtB,EAAe9uB,UAAW,eAAW,GACxCU,IACIoB,WAAS,KACVgtB,EAAe9uB,UAAW,eAAW,GACxCU,IACIoB,WAAS,YACVgtB,EAAe9uB,UAAW,mBAAe,GAC5CU,IACIoB,cACDgtB,EAAe9uB,UAAW,sBAAkB,GAC/CU,IACIoB,YAAS,IACVgtB,EAAe9uB,UAAW,qBAAiB,GAC9CU,IACIyH,WAAU31C,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAAMqyC,KACvD+pB,EAAe9uB,UAAW,wBAAoB,GACjDU,IACIyH,WAAU31C,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAAKqyC,KACnD+pB,EAAe9uB,UAAW,eAAW,GACjC8uB,GACT/sB,iBCtIEgtB,GAAgC,WAChC,SAASA,IACLn/D,KAAKo/D,YAQT,OANAD,EAAe/uB,UAAUivB,SAAW,SAAUhmD,EAAMxd,GAChDmE,KAAKo/D,SAAS/lD,GAAQxd,GAE1BsjE,EAAe/uB,UAAUkvB,WAAa,SAAUjmD,GAC5C,OAAOrZ,KAAKo/D,SAAS/lD,IAElB8lD,KCdP5uB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAO5DwxD,GAA2B,SAAUhuB,GAErC,SAASguB,IACL,OAAkB,OAAXhuB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAUgvB,EAAWhuB,GAIrBT,IACIoB,WAAS,cACVqtB,EAAUnvB,UAAW,iBAAa,GACrCU,IACIoB,WAAS,KACVqtB,EAAUnvB,UAAW,qBAAiB,GACzCU,IACIoB,YAAU,KAAM,MAAO,IAAM,MAAO,IAAM,MAAO,IAAM,MAAO,IAAM,SACrEqtB,EAAUnvB,UAAW,qBAAiB,GACzCU,IACIoB,YAAU,MACXqtB,EAAUnvB,UAAW,qBAAiB,GAClCmvB,GACTptB,iBAMEqtB,GAA8B,SAAUjuB,GAExC,SAASiuB,IACL,OAAkB,OAAXjuB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAiB/D,OAnBAuwC,GAAUivB,EAAcjuB,GAIxBT,IACIyH,aAAYgnB,KACbC,EAAapvB,UAAW,2BAAuB,GAClDU,IACIyH,aAAYgnB,KACbC,EAAapvB,UAAW,yBAAqB,GAChDU,IACIoB,WAASY,kBAAgBsP,MAC1Bod,EAAapvB,UAAW,mBAAe,GAC1CU,IACIoB,WAAS,IACVstB,EAAapvB,UAAW,iBAAa,GACxCU,IACIoB,WAAS,IACVstB,EAAapvB,UAAW,0BAAsB,GAC1CovB,GACTrtB,iBCrEE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAM5D0xD,GAA8B,SAAUluB,GAExC,SAASkuB,IACL,OAAkB,OAAXluB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAuB/D,OAzBAuwC,GAAUkvB,EAAcluB,GAIxBT,IACIoB,WAAS,IACVutB,EAAarvB,UAAW,gBAAY,GACvCU,IACIoB,WAAS,MACVutB,EAAarvB,UAAW,oBAAgB,GAC3CU,IACIoB,WAAS,eACVutB,EAAarvB,UAAW,mBAAe,GAC1CU,IACIoB,WAAS,kBACVutB,EAAarvB,UAAW,qBAAiB,GAC5CU,IACIoB,WAAS,QACVutB,EAAarvB,UAAW,mBAAe,GAC1CU,IACIoB,WAAS,KACVutB,EAAarvB,UAAW,iBAAa,GACxCU,IACIoB,WAAS,OACVutB,EAAarvB,UAAW,mBAAe,GACnCqvB,GACTttB,iBAoBEutB,GAA+B,SAAUnuB,GAEzC,SAASmuB,IACL,OAAkB,OAAXnuB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAc/D,OAhBAuwC,GAAUmvB,EAAenuB,GAIzBT,IACIoB,YAAS,IACVwtB,EAActvB,UAAW,kBAAc,GAC1CU,IACIoB,YAAS,IACVwtB,EAActvB,UAAW,mBAAe,GAC3CU,IACIyH,WAAUlnC,YAAa,cAAgBouD,KACxCC,EAActvB,UAAW,uBAAmB,GAC/CU,IACIyH,WAAUlnC,YAAa,YAAcouD,KACtCC,EAActvB,UAAW,qBAAiB,GACtCsvB,GACTvtB,iBCxFE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAgC5D4xD,GAA4B,SAAUpuB,GAEtC,SAASouB,IACL,OAAkB,OAAXpuB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAiB/D,OAnBAuwC,GAAUovB,EAAYpuB,GAItBT,IACIoB,WAAS,KACVytB,EAAWvvB,UAAW,YAAQ,GACjCU,IACIoB,WAAS,KACVytB,EAAWvvB,UAAW,cAAU,GACnCU,IACIoB,WAAS,KACVytB,EAAWvvB,UAAW,cAAU,GACnCU,IACIoB,WAAS,KACVytB,EAAWvvB,UAAW,eAAW,GACpCU,IACIoB,cACDytB,EAAWvvB,UAAW,oBAAgB,GAClCuvB,GACTxtB,iBAEEytB,GAAsC,SAAUruB,GAEhD,SAASquB,IACL,OAAkB,OAAXruB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA6B/D,OA/BAuwC,GAAUqvB,EAAsBruB,GAIhCT,IACIoB,WAAS,KACV0tB,EAAqBxvB,UAAW,UAAM,GACzCU,IACIoB,WAAS,KACV0tB,EAAqBxvB,UAAW,gBAAY,GAC/CU,IACIoB,WAAS,KACV0tB,EAAqBxvB,UAAW,gBAAY,GAC/CU,IACIoB,WAAS,OACV0tB,EAAqBxvB,UAAW,oBAAgB,GACnDU,IACIoB,WAAS,OACV0tB,EAAqBxvB,UAAW,oBAAgB,GACnDU,IACIoB,WAAS,OACV0tB,EAAqBxvB,UAAW,oBAAgB,GACnDU,IACIoB,WAAS,OACV0tB,EAAqBxvB,UAAW,oBAAgB,GACnDU,IACIoB,WAAS,OACV0tB,EAAqBxvB,UAAW,mBAAe,GAClDU,IACIyH,aAAYonB,KACbC,EAAqBxvB,UAAW,kBAAc,GAC1CwvB,GACTztB,iBAEE0tB,GAA4B,SAAUtuB,GAEtC,SAASsuB,IACL,OAAkB,OAAXtuB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KA0B/D,OA5BAuwC,GAAUsvB,EAAYtuB,GAItBT,IACIoB,WAAS,KACV2tB,EAAWzvB,UAAW,UAAM,GAC/BU,IACIoB,WAAS,OACV2tB,EAAWzvB,UAAW,mBAAe,GACxCU,IACIoB,WAAS,KACV2tB,EAAWzvB,UAAW,YAAQ,GACjCU,IACIoB,WAAS,KACV2tB,EAAWzvB,UAAW,gBAAY,GACrCU,IACIoB,cACD2tB,EAAWzvB,UAAW,YAAQ,GACjCU,IACIoB,cACD2tB,EAAWzvB,UAAW,iBAAa,GACtCU,IACIyH,aAAYonB,KACbE,EAAWzvB,UAAW,kBAAc,GACvCU,IACIyH,aAAYqnB,KACbC,EAAWzvB,UAAW,4BAAwB,GAC1CyvB,GACT1tB,iBCzIE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAO5D+xD,GAAwB,SAAUvuB,GAElC,SAASuuB,IACL,OAAkB,OAAXvuB,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAwD/D,OA1DAuwC,GAAUuvB,EAAQvuB,GAIlBT,IACIoB,WAAS,KACV4tB,EAAO1vB,UAAW,iBAAa,GAClCU,IACIoB,WAAS,KACV4tB,EAAO1vB,UAAW,yBAAqB,GAC1CU,IACIoB,WAAS,KACV4tB,EAAO1vB,UAAW,uBAAmB,GACxCU,IACIoB,WAAS,KACV4tB,EAAO1vB,UAAW,oBAAgB,GACrCU,IACIoB,WAAS,KACV4tB,EAAO1vB,UAAW,oBAAgB,GACrCU,IACIoB,WAAS,KACV4tB,EAAO1vB,UAAW,oBAAgB,GACrCU,IACIyH,WAAU31C,KAAM,GAAIG,IAAK,GAAIF,MAAO,EAAGC,OAAQ,GAAKqyC,KACrD2qB,EAAO1vB,UAAW,cAAU,GAC/BU,IACIoB,WAAS,SACV4tB,EAAO1vB,UAAW,2BAAuB,GAC5CU,IACIoB,WAAS,SACV4tB,EAAO1vB,UAAW,yBAAqB,GAC1CU,IACIoB,WAAS,gBACV4tB,EAAO1vB,UAAW,mBAAe,GACpCU,IACIoB,WAAS,SACV4tB,EAAO1vB,UAAW,2BAAuB,GAC5CU,IACIoB,WAAS,YACV4tB,EAAO1vB,UAAW,yBAAqB,GAC1CU,IACIoB,WAAS,SACV4tB,EAAO1vB,UAAW,YAAQ,GAC7BU,IACIoB,cACD4tB,EAAO1vB,UAAW,qBAAiB,GACtCU,IACIoB,cACD4tB,EAAO1vB,UAAW,iBAAa,GAClCU,IACIoB,cACD4tB,EAAO1vB,UAAW,cAAU,GAC/BU,IACIoB,YAAS,IACV4tB,EAAO1vB,UAAW,uBAAmB,GACxCU,IACIoB,WAAS,KACV4tB,EAAO1vB,UAAW,YAAQ,GACtB0vB,GACT3tB,iBlCsVE7C,IACAp6B,KAAQ,UACRR,OAAU,YACVhB,OAAU,UACVK,KAAQ,OACRgC,WAAc,WACdL,WAAc,WACdE,YAAe,WACfC,YAAe,WACfiC,KAAQ,YACRioD,SAAY,YACZpqD,gBAAmB,YACnBK,gBAAmB,YACnBP,gBAAmB,YACnBK,gBAAmB,YACnBkqD,mBAAsB,OACtBC,mBAAsB,OACtBC,kBAAqB,OACrBC,kBAAqB,OACrBC,WAAc,OACdC,WAAc,OACdC,IAAO,UACPloB,UAAa,UACbmoB,SAAY,UACZC,YAAe,UACfC,UAAa,OACbC,YAAe,YACfC,gBAAmB,WACnBC,gBAAmB,WACnBC,iBAAoB,WACpBC,iBAAoB,WACpBC,qBAAwB,YACxBC,qBAAwB,YACxBC,qBAAwB,YACxBC,qBAAwB,amC5cxB3wB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GA+BxCuwB,GAA0B,WAK1B,SAASA,EAASpqE,EAASqqE,QACD,IAAlBA,IAA4BA,GAAgB,GAIhDphE,KAAKyd,eAAiB,KAItBzd,KAAKqhE,UAAW,EAIhBrhE,KAAKshE,iBAAkB,EAIvBthE,KAAKuhE,eAAiB,KAEtBvhE,KAAKwhE,SAAU,EACfxhE,KAAKyhE,kBAAmB,EAExBzhE,KAAKwrB,cAILxrB,KAAK2iB,aAAgB7I,SAAW6E,eAChC3e,KAAK0hE,eAAgB,EACrB1hE,KAAK2hE,mBAAsB7nD,SAAW6E,eACtC3e,KAAKyd,eAAiB1mB,EACtBiJ,KAAKshE,gBAAkBF,EAsL3B,OApLAD,EAAS/wB,UAAUwxB,YAAc,SAAUL,GACvCvhE,KAAKuhE,eAAiBA,EACtBvhE,KAAKqhE,UAAW,GAGpBF,EAAS/wB,UAAUyxB,UAAY,SAAU9hE,GACrCC,KAAKuhE,eAAiBxhE,EAAKwC,OAC3BvC,KAAK8hE,cAAgB9hE,KAAK+hE,gBAAkB/hE,KAAKgiE,aAAejiE,EAAKM,SACrEL,KAAKyhE,kBAAmB,EACxBzhE,KAAK4hE,YAAY7hE,EAAKwC,QACtBvC,KAAK0hE,eAAgB,GAEzBP,EAAS/wB,UAAU6xB,mBAAqB,WAChCjiE,KAAK0hE,eACL1hE,KAAKyd,eAAeykD,iBAAiBliE,KAAKshE,kBAIlDH,EAAS/wB,UAAU+xB,UAAY,SAAUpiE,GAOrC,OANAC,KAAK+hE,gBAAkBhiE,EAAKM,SACxBL,KAAKqhE,WACLrhE,KAAKyd,eAAeykD,iBAAiBliE,KAAKshE,iBAC1CthE,KAAK0hE,eAAgB,IAGjB1hE,KAAKwhE,SAGjBL,EAAS/wB,UAAUgyB,QAAU,SAAUriE,GACnCC,KAAKiiE,qBACLjiE,KAAK+hE,gBAAkBhiE,EAAKM,SAE5BL,KAAKyhE,kBAAmB,EACxBzhE,KAAKyd,eAAe4kD,eAAeriE,KAAKshE,iBAExCthE,KAAKsiE,aAETnB,EAAS/wB,UAAUkyB,UAAY,WACtBtiE,KAAKyhE,kBACNzhE,KAAKyd,eAAe8kD,eAExBviE,KAAKyd,eAAiB,KACtBzd,KAAKuhE,eAAiB,KACtBvhE,KAAK+hE,gBAAkB,KACvB/hE,KAAKqhE,UAAW,EAChBrhE,KAAKwhE,SAAU,GAGnBL,EAAS/wB,UAAUoyB,WAAa,SAAUziE,GACtCC,KAAK+hE,gBAAkBhiE,EAAKM,UAGhC8gE,EAAS/wB,UAAUqyB,WAAa,SAAU1iE,GACtCC,KAAKoiE,QAAQriE,IAEjBohE,EAAS/wB,UAAUkS,WAAa,SAAUlkD,EAAOwU,EAAYjH,EAAU9S,EAAQ6pE,EAAelrE,GAC1F4G,EAAQ4B,KAAKyd,eAAec,sBAAsBngB,IAAUA,EAC5D,IAQI1C,EARAinE,GAAmBC,SAAS,EAAO3yD,OAAQ,EAAGrN,MAAM,EAAOC,OAAO,GAClEggE,GAAiBD,SAAS,EAAO3yD,OAAQ,EAAGlN,KAAK,EAAOD,QAAQ,GAChEggE,EAAO9iE,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAK8hE,cAAc9qE,EACnD+rE,EAAO/iE,KAAK+hE,gBAAgB9qE,EAAI+I,KAAK8hE,cAAc7qE,EACnD+rE,IAAiB5kE,aAAiBkmB,KAAiBtkB,KAAKyd,eAAewlD,gBACpEjjE,KAAKyd,eAAewlD,eAAeC,UACtCC,EAAWH,EAAchjE,KAAKyd,eAAewlD,eAAeG,WAAa,KACzEl2D,EAAe9O,aAAiBkmB,GAAe9sB,EAAQ4G,EAAM8O,YAGjEnQ,EADArB,EAASL,KACa6R,EAAa,EAAG,GAC9B9O,EAAMrC,QACNqC,EAAMpC,QADd,IAEIgoC,EAAI5lC,EAAM7F,MACV0rC,EAAI7lC,EAAM9F,OACF8F,EAAM2iC,MAAM/pC,EACZoH,EAAM2iC,MAAM9pC,EACxB,IAEIi1D,EAFAmX,EAAa,EACbC,EAAc,EAEd/qE,EAAS6F,aAAiBkmB,GAAelmB,EAAMmO,WAAWhU,MAAQ6F,EAAM7F,MACxED,EAAU8F,aAAiBkmB,GAAelmB,EAAMmO,WAAWjU,OAAS8F,EAAM9F,OAC9E,OAAQO,GACJ,IAAK,aAEDiqE,GADA5W,EAAOzwD,EAAuBC,GAAW1E,EAAG8rE,EAAM7rE,EAAG8rE,KACzC/rE,EACZ+rE,EAAO7W,EAAKj1D,EACZqsE,EAAc,EACdR,EAAOE,EAAchjE,KAAKyd,eAAewlD,eAAeM,SAASZ,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GACjJI,EACJC,EAAO,EACPM,GAAcX,EAAcnqE,MAAQuqE,GAAQvqE,EAC5C,MACJ,IAAK,aAEDuqE,GADA5W,EAAOzwD,EAAuBC,GAAW1E,EAAG8rE,EAAM7rE,EAAG8rE,KACzC/rE,EACZ+rE,EAAO7W,EAAKj1D,EACZ6rE,EAAOE,EAAchjE,KAAKyd,eAAewlD,eAAeO,UAAUb,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAClJI,EACJC,EAAO,EACPM,GAAcX,EAAcnqE,MAAQuqE,GAAQvqE,EAC5C+qE,EAAc,EACd,MACJ,IAAK,cACDD,EAAa,EAEbP,GADA5W,EAAOzwD,EAAuBC,GAAW1E,EAAG8rE,EAAM7rE,EAAG8rE,KACzC/rE,EACZ+rE,EAAO7W,EAAKj1D,EACZ8rE,EAAOC,EAAchjE,KAAKyd,eAAewlD,eAAeQ,QAAQd,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAChJK,EACJO,GAAeZ,EAAcpqE,OAASyqE,GAAQzqE,EAC9C,MACJ,IAAK,cACD+qE,EAAa,EAEbP,GADA5W,EAAOzwD,EAAuBC,GAAW1E,EAAG8rE,EAAM7rE,EAAG8rE,KACzC/rE,EACZ+rE,EAAO7W,EAAKj1D,EACZ8rE,EAAOC,EAAchjE,KAAKyd,eAAewlD,eAAeS,WAAWf,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GACnJK,EACJO,GAAeZ,EAAcpqE,OAASyqE,GAAQzqE,EAC9C,MACJ,IAAK,kBAEDwqE,GADA5W,EAAOzwD,EAAuBC,GAAW1E,EAAG8rE,EAAM7rE,EAAG8rE,KACzC/rE,EACZ+rE,EAAO7W,EAAKj1D,EACZ6rE,EAAOE,EAAchjE,KAAKyd,eAAewlD,eAAeO,UAAUb,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAClJI,EACJC,EAAOC,EAAchjE,KAAKyd,eAAewlD,eAAeQ,QAAQd,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAChJK,EACJM,GAAcX,EAAcnqE,MAAQuqE,GAAQvqE,EAC5C+qE,GAAeZ,EAAcpqE,OAASyqE,GAAQzqE,EAC9C,MACJ,IAAK,kBAEDwqE,GADA5W,EAAOzwD,EAAuBC,GAAW1E,EAAG8rE,EAAM7rE,EAAG8rE,KACzC/rE,EACZ+rE,EAAO7W,EAAKj1D,EACZ8rE,EAAQC,EAAqBhjE,KAAKyd,eAAewlD,eAAeQ,QAAQd,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAAtIK,EACtBD,EAAQE,EAAqBhjE,KAAKyd,eAAewlD,eAAeM,SAASZ,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAAvII,EACtBO,GAAcX,EAAcnqE,MAAQuqE,GAAQvqE,EAC5C+qE,GAAeZ,EAAcpqE,OAASyqE,GAAQzqE,EAC9C,MACJ,IAAK,kBAEDwqE,GADA5W,EAAOzwD,EAAuBC,GAAW1E,EAAG8rE,EAAM7rE,EAAG8rE,KACzC/rE,EACZ+rE,EAAO7W,EAAKj1D,EACZ8rE,EAAQC,EAAqBhjE,KAAKyd,eAAewlD,eAAeS,WAAWf,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAAzIK,EACtBD,EAAQE,EAAqBhjE,KAAKyd,eAAewlD,eAAeO,UAAUb,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAAxII,EACtBQ,GAAeZ,EAAcpqE,OAASyqE,GAAQzqE,EAC9C+qE,GAAcX,EAAcnqE,MAAQuqE,GAAQvqE,EAC5C,MACJ,IAAK,kBAEDuqE,GADA5W,EAAOzwD,EAAuBC,GAAW1E,EAAG8rE,EAAM7rE,EAAG8rE,KACzC/rE,EACZ+rE,EAAO7W,EAAKj1D,EACZ8rE,EAAOC,EAAchjE,KAAKyd,eAAewlD,eAAeS,WAAWf,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAAiBK,EACxKD,EAAOE,EAAchjE,KAAKyd,eAAewlD,eAAeM,SAASZ,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM3kE,EAAOuN,IAAaiH,EAAY8vD,GAAiBI,EACtKO,GAAcX,EAAcnqE,MAAQuqE,GAAQvqE,EAC5C+qE,GAAeZ,EAAcpqE,OAASyqE,GAAQzqE,EAGtD,OAASC,MAAO8qE,EAAY/qE,OAAQgrE,IAExCnC,EAAS/wB,UAAUuzB,SAAW,SAAU9qE,GACpC,OAAQA,GACJ,IAAK,aACD,OAAS7B,EAAG,EAAGC,EAAG,IACtB,IAAK,aACD,OAASD,EAAG,EAAGC,EAAG,IACtB,IAAK,cACD,OAASD,EAAG,GAAKC,EAAG,GACxB,IAAK,cACD,OAASD,EAAG,GAAKC,EAAG,GACxB,IAAK,kBACD,OAASD,EAAG,EAAGC,EAAG,GACtB,IAAK,kBACD,OAASD,EAAG,EAAGC,EAAG,GACtB,IAAK,kBACD,OAASD,EAAG,EAAGC,EAAG,GACtB,IAAK,kBACD,OAASD,EAAG,EAAGC,EAAG,GAE1B,OAASD,EAAG,GAAKC,EAAG,KAEjBkqE,KAMPyC,GAA4B,SAAUryB,GAEtC,SAASqyB,EAAWnmD,EAAgB2jD,EAAe7+C,GAC/C,IAAIkzB,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAEvD,OADAy1C,EAAMlzB,OAASA,EACRkzB,EA6DX,OAjEAlF,GAAUqzB,EAAYryB,GAOtBqyB,EAAWxzB,UAAUyxB,UAAY,SAAU9hE,GACvCC,KAAKqhE,UAAW,EAChB9vB,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,IAG1C6jE,EAAWxzB,UAAU+xB,UAAY,SAAUpiE,GAGvC,GAFAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GAElCC,KAAKqhE,WAAsE,IAA1D97D,GAAMhC,OAAOvD,KAAK+hE,gBAAiB/hE,KAAKgiE,cAAyB,CAClF,IAAI31D,EAAOC,GAAKmmB,UAAUzyB,KAAKgiE,aAAchiE,KAAK+hE,kBAClD/hE,KAAKyd,eAAeomD,qBACpB7jE,KAAKyd,eAAe27C,uBAAuB/sD,EAAKrV,EAAGqV,EAAKpV,EAAGoV,EAAK9T,MAAO8T,EAAK/T,QAEhF,OAAQ0H,KAAKwhE,SAGjBoC,EAAWxzB,UAAUgyB,QAAU,SAAUriE,GAGrC,GAFAC,KAAKiiE,sBAEyD,IAA1D18D,GAAMhC,OAAOvD,KAAK+hE,gBAAiB/hE,KAAKgiE,eAA2BhiE,KAAKqhE,SAAU,CAClF,IAAIvwC,EAASxkB,GAAKmmB,UAAUzyB,KAAKgiE,aAAchiE,KAAK+hE,kBACpD/hE,KAAKyd,eAAeqmD,sBAAsBhzC,OAEzC,CAED,IAAIizC,EAAa/jE,KAAKyd,eAAeumD,oBAChChkE,KAAKyd,eAAe+vB,gBAAmBztC,EAAKukC,MAASvkC,EAAKukC,KAAK2/B,QAW5DlkE,GAAQA,EAAKwC,SACRvC,KAAKyd,eAAeoxB,WAAW9uC,EAAKwC,QAIb,IAApBxC,EAAKmkE,YACLlkE,KAAKyd,eAAe0mD,SAASpkE,EAAKwC,QAJtCvC,KAAKyd,eAAe2mD,eAAerkE,EAAKwC,SAAS,KAZzDvC,KAAKyd,eAAeP,eAA+B,OAAhBnd,EAAKwC,QACpB,gBAAhBvC,KAAKuiB,OACLviB,KAAKyd,eAAe4mD,YAAYtkE,EAAKwC,OAAQxC,EAAKiB,eAE7CjB,EAAKwC,QACVvC,KAAKyd,eAAe2mD,eAAerkE,EAAKwC,SAAS,EAAOwhE,IAiBpE/jE,KAAKqhE,UAAW,EAChB9vB,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAGxC6jE,EAAWxzB,UAAUqyB,WAAa,SAAU1iE,GACpCC,KAAKqhE,UACLrhE,KAAKoiE,QAAQriE,IAGd6jE,GACTzC,IAKEmD,GAA6B,SAAU/yB,GAEvC,SAAS+yB,EAAY7mD,EAAgB9R,GACjC,IAAI8pC,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAEvD,OADAy1C,EAAM9pC,SAAWA,EACV8pC,EAsNX,OA1NAlF,GAAU+zB,EAAa/yB,GAOvB+yB,EAAYl0B,UAAUyxB,UAAY,SAAU9hE,GACxCC,KAAKqhE,UAAW,EAChBrhE,KAAK2iB,iBAAc1oB,EACb+F,gBAAgBukE,KAClBvkE,KAAK2iB,YAAc1F,GAAYld,EAAKwC,SAExCgvC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtC,IACI4e,EAMJ,GALI5e,EAAKwC,QAAUxC,EAAKwC,OAAOoc,cACd3nB,EAAGgJ,KAAKgiE,aAAahrE,EAAGC,EAAG+I,KAAKgiE,aAAa/qE,GAC1D0nB,EAAa5e,EAAKwC,OAAOoc,WAAW,IAGlB,sBAAlB3e,KAAK2L,UAAsD,sBAAlB3L,KAAK2L,SAC9C,IAAK,IAAIjV,EAAI,EAAGA,EAAIioB,EAAWxlB,SAAS1C,OAAQC,IAAK,CACjD,IAAI4D,EAAUqkB,EAAWxlB,SAASzC,GAC9B8tE,EAAiBj/D,GAAMC,aAAalL,EAAQmW,QAA2BnW,EAAQg4B,aAAzBh4B,EAAQmW,OAC9Dg0D,EAAiBl/D,GAAMC,aAAalL,EAAQ9B,QAA2B8B,EAAQi4B,aAAzBj4B,EAAQ9B,QAC9Dm1C,GAAS3tC,KAAK+hE,gBAAiByC,EAAe7lD,EAAWgU,aACzDgb,GAAS3tC,KAAK+hE,gBAAiB0C,EAAe9lD,EAAWgU,eACzD3yB,KAAK0kE,gBAAkBpqE,GAInC0F,KAAK+hE,gBAAkBhiE,EAAKM,UAGhCikE,EAAYl0B,UAAUgyB,QAAU,SAAUriE,GAKtC,GAJAC,KAAKiiE,qBACLjiE,KAAKyd,eAAeknD,iBACpB3kE,KAAKyd,eAAemnD,aACpB5kE,KAAKyd,eAAeonD,qBAAqB9kE,GAClCC,gBAAgBukE,KAA8C,uBAAlBvkE,KAAK2L,WACpD5L,EAAKwC,OAAOoc,WAAWloB,QACpB8O,GAAMhC,OAAOxD,EAAKwC,OAAOoc,WAAW,GAAG5d,YAAaf,KAAK2iB,YAAYhE,WAAW,GAAG5d,cACjFhB,EAAKwC,OAAOoc,WAAW,GAAGld,WAAazB,KAAK2iB,YAAYhE,WAAW,GAAGld,YACxD,uBAAlBzB,KAAK2L,UACCpG,GAAMhC,OAAOxD,EAAKwC,OAAOoc,WAAW,GAAG1T,YAAajL,KAAK2iB,YAAYhE,WAAW,GAAG1T,cAC9ElL,EAAKwC,OAAOoc,WAAW,GAAGsI,WAAajnB,KAAK2iB,YAAYhE,WAAW,GAAGsI,WAgCjF,KAAMjnB,gBAAgBukE,IACJ,sBAAlBvkE,KAAK2L,UAAsD,sBAAlB3L,KAAK2L,WAC3C3L,KAAK2iB,aAAe5iB,EAAKwC,OAAQ,CAG7B6a,GACAvhB,KAAM,iBAAkB0hB,WAFtBN,GAAYld,EAAKwC,QAEsB+a,WAAYtd,KAAK2iB,YAAatF,SAAU,YAErFrd,KAAKyd,eAAeD,gBAAgBJ,QAxCwD,CAChG,IAAI0nD,OAAY,EACZvgE,OAAY,EACZxE,EAAKwC,QAAUxC,EAAKwC,OAAOoc,aAC3BmmD,GACI9tE,EAAGgJ,KAAKgiE,aAAahrE,EAAGC,EAAG+I,KAAKgiE,aAAa/qE,GAEjDsN,EAAYxE,EAAKwC,OAAOoc,WAAW,IAEvC,IAAIomD,OAAiB,EACjBC,OAAiB,EACrB,GAAIjlE,EAAKiD,OAAQ,CACb,IAAIA,EAAShD,KAAKyd,eAAewnD,WAAWllE,EAAK2B,cAAe3B,EAAKiD,OAA0B,uBAAlBhD,KAAK2L,UAAmC,GACpH3I,aAAkB40B,GAAamtC,EAAiB/hE,EAAOnD,GAAKmlE,EAAiBhiE,EAAOnD,GAEzF,IAAIk0D,GACAxvD,UAAWA,EAAWmxB,MAAO,YAAavzB,WAAY6iE,EACtDE,SAAUJ,EAAWK,SAAUL,EAAWM,QAAQ,EAAO/iE,WAAY0iE,GAErEze,EAA4B,uBAAlBtmD,KAAK2L,SAAoC0nC,eAAagyB,kBAAoBhyB,eAAaiyB,kBAGrG,GAFAtlE,KAAKyd,eAAe8nD,aAAajf,EAASyN,GAC1C/zD,KAAKyd,eAAe+nD,sBAAsBjhE,GAAW,GACjDvE,KAAK2iB,aAAe5iB,EAAKwC,OAAQ,CACjC,IAEI6a,GACAvhB,KAAM,oBAAqB0hB,WAAYN,GAFrCA,GAAYld,EAAKwC,SAEsC+a,WAAYL,GAAYjd,KAAK2iB,aACtFtF,SAAU,YAEdrd,KAAKyd,eAAeD,gBAAgBJ,IAc5Cm0B,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAGxCukE,EAAYl0B,UAAU+xB,UAAY,SAAUpiE,GAExC,GADAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,KAC/BC,gBAAgBukE,MAA8C,uBAAlBvkE,KAAK2L,UACpDpG,GAAMhC,OAAOxD,EAAKwC,OAAOoc,WAAW,GAAG5d,YAAaf,KAAK2iB,YAAYhE,WAAW,GAAG5d,cAChE,uBAAlBf,KAAK2L,UACFpG,GAAMhC,OAAOxD,EAAKwC,OAAOoc,WAAW,GAAG1T,YAAajL,KAAK2iB,YAAYhE,WAAW,GAAG1T,cAAgB,CACvG,IAAIi6D,OAAW,EACXvmD,OAAa,EACb5e,EAAKwC,QAAUxC,EAAKwC,OAAOoc,aAC3BumD,GAAaluE,EAAGgJ,KAAKgiE,aAAahrE,EAAGC,EAAG+I,KAAKgiE,aAAa/qE,GAC1D0nB,EAAa5e,EAAKwC,OAAOoc,WAAW,IAExC,IAAItc,OAAa,EACbF,OAAa,EACjB,GAAIpC,EAAKiD,OAAQ,CACbb,EAAapC,EAAKiD,OAAOnD,IACrBmD,EAAShD,KAAKyd,eAAewnD,WAAWllE,EAAK2B,cAAe3B,EAAKiD,OAA0B,uBAAlBhD,KAAK2L,UAAmC,cAClGisB,IAAa50B,aAAkBg1B,GAAgB31B,EAAaW,EAAOnD,GAAKsC,EAAaa,EAAOnD,GAEnH,IAAIk0D,GACAxvD,UAAWoa,EAAY+W,MAAO,QAASvzB,WAAYA,EACnD+iE,SAAUA,EAAUC,SAAUD,EAAUE,QAAQ,EAAO/iE,WAAYA,GAEnEikD,EAA4B,uBAAlBtmD,KAAK2L,SACf0nC,eAAagyB,kBAAoBhyB,eAAaiyB,kBAClDtlE,KAAKyd,eAAe8nD,aAAajf,EAASyN,GAG9C,GADA/zD,KAAK+hE,gBAAkBhiE,EAAKM,SACxBL,KAAK+hE,iBAAmB/hE,KAAKgiE,aAAc,CAC3C,IAAIt6D,EAAQ1H,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAKgiE,aAAahrE,EACnDiQ,EAAQjH,KAAK+hE,gBAAgB9qE,EAAI+I,KAAKgiE,aAAa/qE,EACnDkuE,OAAW,EAEXM,GADAP,OAAW,OACF,GACTQ,OAAU,EACd1lE,KAAK+hE,gBAAkB/hE,KAAKyd,eAAekoD,iBAAiB3lE,KAAK+hE,iBACjE,IAAIx9D,OAAY,EACZxE,EAAKwC,QAAUxC,EAAKwC,OAAOoc,aAC3BwmD,GACInuE,EAAGgJ,KAAK+hE,gBAAgB/qE,EAAGC,EAAG+I,KAAK+hE,gBAAgB9qE,GAEvDiuE,GACIluE,EAAGgJ,KAAKgiE,aAAahrE,EAAGC,EAAG+I,KAAKgiE,aAAa/qE,GAEjDsN,EAAYxE,EAAKwC,OAAOoc,WAAW,IAEvC,IAAIinD,OAAe,EACfC,OAAe,EACnB,GAAI9lE,EAAKiD,OAAQ,EACTA,EAAShD,KAAKyd,eAAewnD,WAAWllE,EAAK2B,cAAe3B,EAAKiD,OAA0B,uBAAlBhD,KAAK2L,UAAmC,cAClGisB,GAAaguC,EAAe5iE,EAAOnD,GAAKgmE,EAAe7iE,EAAOnD,GAEjFk0D,GACAxvD,UAAWA,EAAWmxB,MAAO,WAAYvzB,WAAY0jE,EACrDX,SAAUA,EAAUC,SAAUA,EAAUC,QAAQ,EAAO/iE,WAAYujE,GAEvE,KAAM5lE,gBAAgBukE,IAAuB,CACrCje,EAA4B,uBAAlBtmD,KAAK2L,SACf0nC,eAAagyB,kBAAoBhyB,eAAaiyB,kBAClDtlE,KAAKyd,eAAe8nD,aAAajf,EAASyN,GAM9C,GAJIh0D,EAAKiD,SACLyiE,EAASzjC,GAAqBjiC,EAAKiD,QAAQ,GAC3C0iE,EAAU1jC,GAAqBjiC,EAAKiD,QAAQ,KAE3C+wD,EAAIqR,QAAUplE,KAAKqhE,eAA8BpnE,IAAlB+F,KAAK2L,UAAoC,IAAVjE,GAAyB,IAAVT,EAG9E,GAFAjH,KAAKwhE,SAAWxhE,KAAKyd,eAAeqoD,kBAAkB9lE,KAAK2L,SAAU5L,EAAKwC,OAAQvC,KAAK+hE,gBAAiB/hE,KAAK0kE,gBAAiB3kE,EAAKiD,OAAQ4iE,GAC3I5lE,KAAKyd,eAAeknD,iBAChB5kE,EAAKiD,SAA8B,uBAAlBhD,KAAK2L,WAAsCwJ,GAAcpV,EAAKiD,SAAWqS,GAAkBqwD,KACtF,uBAAlB1lE,KAAK2L,WAAsCkJ,GAAa9U,EAAKiD,SAAWgS,GAAiBywD,KAAY,CACrGzlE,KAAKyd,eAAesoD,cAAc/lE,KAAK2L,SAAU5L,EAAM6lE,EAAcC,IACrE7lE,KAAKyd,eAAeuoD,WAAWjmE,EAAKwC,OAAQvC,KAAK2L,UAErD,IAAI3I,EACJ,IADIA,EAAShD,KAAKyd,eAAewnD,WAAWllE,EAAK2B,cAAe3B,EAAKiD,OAA0B,uBAAlBhD,KAAK2L,UAAmC,cAC/FmJ,IACbD,GAAa7R,IAA6B,uBAAlBhD,KAAK2L,UAC1BwJ,GAAcnS,IAA6B,uBAAlBhD,KAAK2L,WAClC3L,KAAKyd,eAAewoD,QAAQjmE,KAAK2L,SAAU5L,OAG9C,CACeC,KAAKkmE,aAAaljE,IAE9BhD,KAAKyd,eAAewoD,QAAQjmE,KAAK2L,SAAU5L,SAIT,IAArCC,KAAK2L,SAAS2U,QAAQ,YAC3BtgB,KAAKyd,eAAeuoD,WAAWjmE,EAAKwC,OAAQvC,KAAK2L,UACjD3L,KAAKyd,eAAeknD,kBAG5B,GAAI3kE,KAAKyd,eAAe0oD,0BAA2B,CAC/C,IAAIlmE,EAAUD,KAAKomE,kBAAkBrmE,EAAKM,UAC1CL,KAAKyd,eAAe4oD,YAAYtmE,EAAKwC,OAAQxC,EAAKM,SAAUJ,EAAS,cAAeD,KAAKyhE,kBACzFzhE,KAAKyhE,kBAAmB,GAIhC,OADAzhE,KAAKgiE,aAAehiE,KAAK+hE,iBACjB/hE,KAAKwhE,SAGjB8C,EAAYl0B,UAAUqyB,WAAa,SAAU1iE,GACzCC,KAAKoiE,QAAQriE,IAEjBukE,EAAYl0B,UAAUg2B,kBAAoB,SAAU/lE,GAChD,MAAO,KAAO5D,KAAKC,MAAM2D,EAASrJ,GAAK,MAAayF,KAAKC,MAAM2D,EAASpJ,IAE5EqtE,EAAYl0B,UAAU81B,aAAe,SAAUljE,GAC3C,SAAIgS,GAAiBhS,IAA6B,uBAAlBhD,KAAK2L,eAG5B0J,GAAkBrS,IAA6B,uBAAlBhD,KAAK2L,aAGhC3I,EAAOwQ,YAAcyB,kBAAgBC,MAAUF,GAAiBhS,IAAYqS,GAAkBrS,MAM7GshE,EAAYl0B,UAAUkyB,UAAY,WAC9B/wB,EAAOnB,UAAUkyB,UAAU7rB,KAAKz2C,MAChCA,KAAKgiE,aAAe,KACpBhiE,KAAK2L,SAAW,MAEb24D,GACTnD,IAKEmF,GAA0B,SAAU/0B,GAEpC,SAAS+0B,EAAS7oD,EAAgB8oD,GAC9B,IAAI9wB,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAIvD,OAFAy1C,EAAM+wB,cAAgB,KACtB/wB,EAAMgxB,WAAaF,EACZ9wB,EAsPX,OA5PAlF,GAAU+1B,EAAU/0B,GASpB+0B,EAASl2B,UAAUyxB,UAAY,SAAU9hE,GACrC,GAAIA,EAAKwC,kBAAkBuS,IAAQ/U,EAAKwC,kBAAkBoR,GAAW,CACjE3T,KAAKyd,eAAe2mD,eAAerkE,EAAKwC,QAASxC,EAAKukC,MAAQvkC,EAAKukC,KAAK2/B,SACxE,IAAIzlD,GAAmB1E,SAAW6E,eAC9B5e,EAAKwC,kBAAkBuS,GACvB0J,EAAe1E,MAAMhjB,KAAKmmB,GAAYld,EAAKwC,SAG3Cic,EAAeG,WAAW7nB,KAAKmmB,GAAYld,EAAKwC,SAEpDvC,KAAK2iB,YAAc1F,GAAYuB,QAG/Bxe,KAAK2iB,YAAc1F,GAAYld,EAAKwC,QAExCvC,KAAK2hE,kBAAoB3hE,KAAKyd,eAAeipD,cAAc3mE,EAAKwC,QACxC,SAApBvC,KAAKymE,aACLzmE,KAAK+hC,OAAShiC,EAAKiB,cAAcnB,IAErC0xC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtCC,KAAK2mE,eAAkB3vE,EAAG,EAAGC,EAAG,IAGpCqvE,EAASl2B,UAAUgyB,QAAU,SAAUriE,EAAM6mE,GACzC5mE,KAAKiiE,qBACL,IAAI1nE,EAEAwS,EADA85D,GAAe,EAEftpD,GAAezD,SAAW6E,eAC9B,GAAwB,SAApB3e,KAAKymE,WAAuB,CAC5B,GAAI1mE,EAAKwC,kBAAkBuS,IAAQ/U,EAAKwC,kBAAkBoR,GAAW,CAC7D5T,EAAKwC,kBAAkBuS,GACvByI,EAAWzD,MAAMhjB,KAAKmmB,GAAYld,EAAKwC,SAGvCgb,EAAWoB,WAAW7nB,KAAKmmB,GAAYld,EAAKwC,SAEhDhI,EAAM0iB,GAAYM,GAClB,IAAI/O,EAAUzO,EAAKwC,OAAOiM,QAC1BjU,EAAIwB,QAAUyS,EAAQzS,QACtBxB,EAAIyB,QAAUwS,EAAQxS,aAGtBzB,EAAM0iB,GAAYld,EAAKwC,QAG3B,MAAmB,YADnBwK,EAAS/M,KAAKyd,eAAec,sBAAsBxe,EAAKwC,SAAWxC,EAAKwC,QAC5D1C,IAAoBtF,EAAIuf,MAAM,GAAGsF,QAAW7kB,EAAIuf,MAAM,GAAGqK,UAC/C,WAAdpX,EAAOlN,IACPkN,EAAOhR,UAAYiE,KAAK2iB,YAAY5mB,SAAWgR,EAAO/Q,UAAYgE,KAAK2iB,YAAY3mB,SAAS,CAC5F,IAAI8oE,OAAY,EACZlmC,OAAY,EACZ7+B,EAAKwC,SACLq8B,GAAc7iC,QAASgE,EAAKwC,OAAOiM,QAAQzS,QAASC,QAAS+D,EAAKwC,OAAOiM,QAAQxS,SACjF8oE,GAAc/oE,QAASgE,EAAKwC,OAAOiM,QAAQzS,QAASC,QAAS+D,EAAKwC,OAAOiM,QAAQxS,UAErF,IAAI+3D,GACAxxD,OAAQxC,EAAKwC,OAAQmzB,MAAO,YAAawvC,SAAUJ,EAAWK,SAAUvmC,EACxE57B,OAAQhD,KAAKwmE,cAAeM,eAAgB9mE,KAAK+hE,gBAAiBgF,WAAW,EAAM3B,QAAQ,GAG/F,GADAplE,KAAKyd,eAAe8nD,aAAalyB,eAAa2zB,eAAgBjT,IACzD6S,EAAkB,CACnB5mE,KAAKyd,eAAe0D,mBACpB0lD,GAAe,EACf,IAAIzpD,GACAvhB,KAAM,kBACN0hB,WAAYN,GAAY1iB,GAAM+iB,WAAYL,GAAYjd,KAAK2iB,aAActF,SAAU,YAEvF,GAAI9iB,EAAIuf,MAAM,IAAMvf,EAAIuf,MAAM,GAAG2sC,UAAW,CACxC,IAAIwgB,GACAprE,KAAM,cAAewhB,SAAU,WAC/BC,WAAYtd,KAAK2hE,kBAAmBpkD,WAAYvd,KAAKyd,eAAeipD,cAAc3mE,EAAKwC,SAE3FvC,KAAKyd,eAAeD,gBAAgBypD,GAExCjnE,KAAKyd,eAAeD,gBAAgBJ,IAI7Bpd,KAAKyd,eAAeypD,UAAUlnE,KAAKgiE,aAAchiE,KAAK+hE,gBAAiB,EAAG,GAG7F,GAFA/hE,KAAKyd,eAAemnD,aACpB5kE,KAAKyd,eAAe0pD,oBAChBpnE,EAAKwC,QAAUvC,KAAKwmE,eAAiBvwD,GAAajW,KAAKwmE,gBACvDxmE,KAAKyd,eAAe2pD,YAAYrnE,EAAKwC,OAAQvC,KAAKwmE,eAAgB,CAClExmE,KAAKyd,eAAeklB,KAAK3iC,KAAKuhE,eAAgBvhE,KAAKwmE,cAAexmE,KAAK+hE,iBACnEhO,GACAn0D,QAASG,EAAKwC,OAAQS,OAAQhD,KAAKwmE,cAAenmE,SAAUL,KAAK+hE,gBAAiBqD,QAAQ,GAG9F,GADAplE,KAAKyd,eAAe8nD,aAAalyB,eAAa1Q,KAAMoxB,IAC/CA,EAAIqR,QAAUrlE,EAAKwC,QAAUvC,KAAKyd,eAAe4pD,oBAAoBrnE,KAAKwmE,eAAgB,CAG3F,IAAK,IAFD1sD,EAAS/Z,EAAKwC,kBAAkByR,GAAYjU,EAAKwC,OAAOuX,OAAS/Z,EAAKwC,QACtE+kE,GAAa,EACR5wE,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IACzBojB,EAAMpjB,GAAGkiB,YACV0uD,GAAa,EACbtnE,KAAKyd,eAAe8pD,qBAAqBvnE,KAAKwmE,cAAe1sD,EAAMpjB,IACnEsJ,KAAKyd,eAAec,sBAAsBzE,EAAMpjB,KAGpDmwE,GAAgB7mE,KAAKyd,eAAeC,aAAe4pD,GACnDtnE,KAAKyd,eAAeE,kBAI5B5d,EAAKwC,QAAUvC,KAAKwmE,eACpBxmE,KAAKyd,eAAe+pD,eAAeznE,EAAKwC,OAAQvC,KAAKwmE,eAEzDxmE,KAAKyd,eAAeknD,iBAChBkC,IAAiB7mE,KAAKyd,eAAeC,aACrC1d,KAAKyd,eAAeE,qBAGvB,CACDJ,EAAWzD,MAAMhjB,KAAKmmB,GAAYld,EAAKwC,SACvChI,EAAM0iB,GAAYM,GACdH,GACAvhB,KAAM,sBAAuB4rE,SAAUznE,KAAK+hC,OAC5CxkB,WAAYN,GAAY1iB,GAAM+iB,WAAYL,GAAYjd,KAAK2iB,aAActF,SAAU,YAEvFrd,KAAKyd,eAAeD,gBAAgBJ,GAExCm0B,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAGxCumE,EAASl2B,UAAU+xB,UAAY,SAAUpiE,GACrCwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GACtC,IACIgN,EADA26D,GAAS,GAEb36D,EAAS/M,KAAKyd,eAAec,sBAAsBxe,EAAKwC,SACpDxC,EAAKwC,kBACauS,IAAQ/H,aAAkB4G,GACxC5G,aAAkB+H,GACd/H,EAAOhR,UAAYiE,KAAK2iB,YAAY7I,MAAM,GAAG/d,SAC7CgR,EAAO/Q,UAAYgE,KAAK2iB,YAAY7I,MAAM,GAAG9d,UAC7C0rE,GAAS,GAITniE,GAAMhC,OAAOwJ,EAAOhM,YAAaf,KAAK2iB,YAAYhE,WAAW,GAAG5d,cAChEwE,GAAMhC,OAAOwJ,EAAO9B,YAAajL,KAAK2iB,YAAYhE,WAAW,GAAG1T,eAChEy8D,GAAS,GAKb36D,EAAOyB,QAAQzS,UAAYiE,KAAK2iB,YAAYnU,QAAQzS,SACpDgR,EAAOyB,QAAQxS,UAAYgE,KAAK2iB,YAAYnU,QAAQxS,UACpD0rE,GAAS,GAGjB,IAAI5C,EACA/3D,IACA+3D,GAAc/oE,QAASgR,EAAOyB,QAAQzS,QAASC,QAAS+Q,EAAOyB,QAAQxS,UAE3E,IAAI+3D,GACAxxD,OAAQwK,EAAQ2oB,MAAO,QAASwvC,SAAUJ,EAAWK,SAAUL,EAC/D9hE,OAAQjD,EAAKiD,OAAQ8jE,eAAgB/mE,EAAKM,SAAU0mE,WAAW,EAAM3B,QAAQ,GAMjF,GAJIsC,GACA1nE,KAAKyd,eAAe8nD,aAAalyB,eAAa2zB,eAAgBjT,GAElE/zD,KAAK+hE,gBAAkBhiE,EAAKM,SACJ,SAApBL,KAAKymE,WAAuB,CACpBzmE,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAKgiE,aAAahrE,EAC3CgJ,KAAK+hE,gBAAgB9qE,EAAI+I,KAAKgiE,aAAa/qE,EADnD,IAEIyQ,EAAQ1H,KAAK2mE,cAAc3vE,GAAKgJ,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAKgiE,aAAahrE,GAC3EiQ,EAAQjH,KAAK2mE,cAAc1vE,GAAK+I,KAAK+hE,gBAAgB9qE,EAAI+I,KAAKgiE,aAAa/qE,GAC/E+I,KAAKyd,eAAekqD,gBAAgB5nE,EAAMC,KAAK+hE,iBAC/C/hE,KAAKyd,eAAeuoD,WAAWjmE,EAAKwC,QACpCvC,KAAKyd,eAAemnD,aACpB,IAAIgD,EACAhpC,OAAY,EACZipC,EAAe7nE,KAAKyd,eAAeypD,UAAUlnE,KAAKgiE,aAAchiE,KAAK+hE,gBAAiBr6D,EAAOT,GACjGjH,KAAK2mE,cAAc3vE,EAAI0Q,EAAQmgE,EAAa7wE,EAC5CgJ,KAAK2mE,cAAc1vE,EAAIgQ,EAAQ4gE,EAAa5wE,EACxC8V,IACA66D,GAAgB7rE,QAASgR,EAAOyB,QAAQzS,QAASC,QAAS+Q,EAAOyB,QAAQxS,SACzE4iC,GACI7iC,QAASgR,EAAOyB,QAAQzS,QAAU8rE,EAAa7wE,EAC/CgF,QAAS+Q,EAAOyB,QAAQxS,QAAU6rE,EAAa5wE,IAGnD+I,KAAKwmE,eAAiBzmE,EAAKiD,SAAWhD,KAAKwmE,eAC3CxmE,KAAKyd,eAAeqqD,oBAAoB/nE,EAAKwC,OAAQxC,EAAKiD,OAAQhD,KAAKwmE,eAE3ExmE,KAAKwmE,cAAgBzmE,EAAKiD,OAC1B,IAAI+kE,GACAxlE,OAAQwK,EAAQ2oB,MAAO,WAAYwvC,SAAU0C,EAAazC,SAAUvmC,EACpE57B,OAAQjD,EAAKiD,OAAQ8jE,eAAgB/mE,EAAKM,SAAU0mE,WAAW,EAAM3B,QAAQ,GAGjF,GADAplE,KAAKyd,eAAe8nD,aAAalyB,eAAa2zB,eAAgBe,IACzDA,EAAM3C,OAAQ,CACfplE,KAAKwhE,SAAWxhE,KAAKyd,eAAeuqD,oBAAoBH,EAAa7wE,EAAG6wE,EAAa5wE,GACrF,IAAIuqE,GAAYxhE,KAAKyd,eAAewqD,UAAUjoE,KAAKuhE,eAAgBvhE,KAAKwmE,cAAexmE,KAAK+hE,iBAC5F/hE,KAAKwhE,QAAUxhE,KAAKwhE,SAAWA,EAInC,GAFAxhE,KAAKyd,eAAeyqD,yBACpBloE,KAAKyd,eAAeqE,uBAAuB/hB,GACvCC,KAAKwmE,eAAkBzmE,EAAKwC,SAAWvC,KAAKwmE,eAC5CxmE,KAAKyd,eAAe2pD,YAAYrnE,EAAKwC,OAAQvC,KAAKwmE,gBAAqC,WAAnBzmE,EAAKwC,OAAO1C,GAAiB,CACjG,IAAI0tB,EAAYxtB,EAAKwC,kBAAkByR,GAAYjU,EAAKwC,OAAOuX,MAAM,GAAK/Z,EAAKwC,OACzEvC,KAAKyd,eAAe4pD,oBAAoB95C,GAAU,IACxB,aAAxBA,EAASnvB,MAAMvC,MAAwB0xB,EAASnvB,MAAM+lB,UACtDnkB,KAAKwmE,cAAcpnD,OACnBpf,KAAKyd,eAAeqE,uBAAuB/hB,EAAMC,KAAKwmE,eAGtDxmE,KAAKyd,eAAe0qD,gBAAgBnoE,KAAKwmE,qBAKjDxmE,KAAKyd,eAAe0pD,oBAExB,GAAInnE,KAAKyd,eAAe0oD,0BAA2B,CAC/C,IAAIlmE,EAAUD,KAAKomE,kBAAkBrmE,EAAKwC,QAC1CvC,KAAKyd,eAAe4oD,YAAYtmE,EAAKwC,OAAQxC,EAAKM,SAAUJ,EAAS,WAAYD,KAAKyhE,kBACtFzhE,KAAKyhE,kBAAmB,OAG3B,CACD,IAAI/lE,EAASL,IACTkF,EAAOR,EAAKwC,OAChBxF,EAAarB,GAAS6E,EAAK2M,YAAa3M,EAAKxE,QAASwE,EAAKvE,SAC3D,IAAIgmE,EAAevmE,EAAuBC,GAAU1E,EAAGgJ,KAAKgiE,aAAahrE,EAAGC,EAAG+I,KAAKgiE,aAAa/qE,IAC7FoJ,EAAW5E,EAAuBC,GAAU1E,EAAG+I,EAAKM,SAASrJ,EAAGC,EAAG8I,EAAKM,SAASpJ,IACrF+I,KAAKyd,eAAe2qD,SAASroE,EAAKwC,OAAQxC,EAAKiB,cAAeX,EAASrJ,EAAIgrE,EAAahrE,EAAGqJ,EAASpJ,EAAI+qE,EAAa/qE,GAGzH,OADA+I,KAAKgiE,aAAehiE,KAAK+hE,iBACjB/hE,KAAKwhE,SAEjB8E,EAASl2B,UAAUg2B,kBAAoB,SAAU7lE,GAC7C,MAAO,KAAO9D,KAAKC,MAAM6D,EAAKiO,QAAQhN,OAAOxK,GAAK,MAAayF,KAAKC,MAAM6D,EAAKiO,QAAQhN,OAAOvK,IAGlGqvE,EAASl2B,UAAUqyB,WAAa,SAAU1iE,GACtCC,KAAKoiE,QAAQriE,IAGjBumE,EAASl2B,UAAUkyB,UAAY,WAC3B/wB,EAAOnB,UAAUkyB,UAAU7rB,KAAKz2C,MAChCA,KAAKwmE,cAAgB,KACrBxmE,KAAKgiE,aAAe,MAEjBsE,GACTnF,IAKEkH,GAA4B,SAAU92B,GAEtC,SAAS82B,EAAW5qD,GAChB,OAAO8zB,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAoFtD,OAtFAuwC,GAAU83B,EAAY92B,GAKtB82B,EAAWj4B,UAAUyxB,UAAY,SAAU9hE,GAEvC,GADAC,KAAK2iB,YAAc1F,GAAYld,EAAKwC,QAChCvC,KAAK2iB,YAAY7I,MAAM,IAAM9Z,KAAK2iB,YAAY7I,MAAM,GAAG3H,SAGvD,IAAK,IADD2H,EAAQ9Z,KAAKyd,eAAe6qD,kBAAkBtoE,KAAK2iB,YAAY7I,MAAM,OAChEpjB,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAAK,CACnC,IAAI6J,EAAOP,KAAKyd,eAAe8qD,WAAWzuD,EAAMpjB,GAAGmJ,IACnDG,KAAKwrB,WAAW1R,EAAMpjB,GAAGmJ,IAAMod,GAAY1c,GAGnDgxC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,IAG1CsoE,EAAWj4B,UAAUgyB,QAAU,SAAUriE,GACrCC,KAAKiiE,qBACL,IAAIl1D,EAEJ,GADAA,EAAS/M,KAAKyd,eAAec,sBAAsBxe,EAAKwC,SAAWxC,EAAKwC,OACpEvC,KAAK2iB,YAAYzV,cAAgBH,EAAOyB,QAAQtB,YAAa,CAC7D,IAAIg4D,GAAah4D,YAAaH,EAAOyB,QAAQtB,aACzC6mD,GACAxxD,OAAQxC,EAAKwC,OAAQmzB,MAAO,YAAawvC,SAAUA,EACnDC,SAAUD,EAAUE,QAAQ,GAEhCplE,KAAKyd,eAAe8nD,aAAalyB,eAAam1B,aAAczU,GAC5D,IAEI32C,GACAvhB,KAAM,kBAAmB0hB,WAAYN,GAFnCA,GAAYld,EAAKwC,SAEoC+a,WAAYL,GAAYjd,KAAK2iB,aAActF,SAAU,WAC5GmO,WAAYxrB,KAAKwrB,YAErBxrB,KAAKyd,eAAeD,gBAAgBJ,GACpCpd,KAAKyd,eAAeknD,iBAExBpzB,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAGxCsoE,EAAWj4B,UAAU+xB,UAAY,SAAUpiE,GACvCwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GACtC,IAAIgN,EAEJ,GADAA,EAAS/M,KAAKyd,eAAec,sBAAsBxe,EAAKwC,SAAWxC,EAAKwC,OACpEvC,KAAK2iB,YAAYzV,cAAgBH,EAAOyB,QAAQtB,YAAa,CAC7D,IAAIu7D,GAAev7D,YAAaH,EAAOyB,QAAQtB,aAC3Cw7D,GACAnmE,OAAQxC,EAAKwC,OAAQmzB,MAAO,QAASwvC,SAAUuD,EAAYtD,SAAUsD,EAAYrD,QAAQ,GAE7FplE,KAAKyd,eAAe8nD,aAAalyB,eAAam1B,aAAcE,GAEhE1oE,KAAK+hE,gBAAkBhiE,EAAKM,SAC5B,IAAIwD,GAAa7M,EAAG+V,EAAOyB,QAAQzS,QAAS9E,EAAG8V,EAAOyB,QAAQxS,SAC1DxE,EAAQ+N,GAAMsI,UAAUhK,EAAU7D,KAAK+hE,iBAAmB,GAC1D4G,EAAY3oE,KAAKyd,eAAekrD,UAAUnxE,GAE9CA,IADAA,EAAsB,IAAdmxE,EAAkBA,EAAYnxE,GACrB,KAAO,IACxB,IAAI0tE,GAAah4D,YAAaH,EAAOyB,QAAQtB,aACzCi4D,GAAaj4D,YAAa1V,GAC1Bu8D,GACAxxD,OAAQxC,EAAKwC,OAAQmzB,MAAO,WAAYwvC,SAAUA,EAClDC,SAAUA,EAAUC,QAAQ,GAMhC,GAJAplE,KAAKyd,eAAe8nD,aAAalyB,eAAam1B,aAAczU,GACvDA,EAAIqR,SACLplE,KAAKwhE,SAAYxhE,KAAKyd,eAAemrD,oBAAoBpxE,EAAQuV,EAAOyB,QAAQtB,cAEhFlN,KAAKyd,eAAe0oD,0BAA2B,CAC/C,IAAIlmE,EAAUD,KAAKomE,kBAAkBrmE,EAAKwC,QAC1CvC,KAAKyd,eAAe4oD,YAAYtmE,EAAKwC,OAAQxC,EAAKM,SAAUJ,EAAS,aAAcD,KAAKyhE,kBACxFzhE,KAAKyhE,kBAAmB,EAE5B,OAAQzhE,KAAKwhE,SAEjB6G,EAAWj4B,UAAUg2B,kBAAoB,SAAU7lE,GAC/C,OAAO9D,KAAKC,MAAO6D,EAAK2M,YAAc,KAAM5O,WAAa,KAG7D+pE,EAAWj4B,UAAUqyB,WAAa,SAAU1iE,GACxCC,KAAKoiE,QAAQriE,IAGjBsoE,EAAWj4B,UAAUkyB,UAAY,WAC7B/wB,EAAOnB,UAAUkyB,UAAU7rB,KAAKz2C,OAE7BqoE,GACTlH,IAKE0H,GAA4B,SAAUt3B,GAEtC,SAASs3B,EAAWprD,EAAgB5kB,GAChC,IAAI48C,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAIvD,OAFAy1C,EAAMitB,cAAgB,IAAIp2D,GAC1BmpC,EAAM58C,OAASA,EACR48C,EAgKX,OAtKAlF,GAAUs4B,EAAYt3B,GAStBs3B,EAAWz4B,UAAUyxB,UAAY,SAAU9hE,GAIvC,GAHAC,KAAK2iB,YAAc1F,GAAYld,EAAKwC,QACpCvC,KAAK2hE,kBAAoB3hE,KAAKyd,eAAeipD,cAAc3mE,EAAKwC,QAChEgvC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GAClCC,KAAK2iB,YAAY7I,MAAM,IAAM9Z,KAAK2iB,YAAY7I,MAAM,GAAG3H,SAGvD,IAAK,IADD2H,EAAQ9Z,KAAKyd,eAAe6qD,kBAAkBtoE,KAAK2iB,YAAY7I,MAAM,OAChEpjB,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAAK,CACnC,IAAI6J,EAAOP,KAAKyd,eAAe8qD,WAAWzuD,EAAMpjB,GAAGmJ,IACnDG,KAAKwrB,WAAW1R,EAAMpjB,GAAGmJ,IAAMod,GAAY1c,GAGnDP,KAAKyd,eAAeqrD,eAAe/oE,EAAKwC,OAAQvC,KAAKnH,QACrD04C,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtCC,KAAK0iE,cAAc1rE,EAAI+I,EAAKwC,OAAOiM,QAAQzS,QAC3CiE,KAAK0iE,cAAczrE,EAAI8I,EAAKwC,OAAOiM,QAAQxS,QAC3CgE,KAAK0iE,cAAcpqE,OAASyH,EAAKwC,OAAOiM,QAAQjC,WAAWjU,OAC3D0H,KAAK0iE,cAAcnqE,MAAQwH,EAAKwC,OAAOiM,QAAQjC,WAAWhU,OAG9DswE,EAAWz4B,UAAUgyB,QAAU,SAAUriE,EAAM6mE,GAC3C5mE,KAAKiiE,qBACLjiE,KAAKyd,eAAemnD,aACpB,IAAI73D,EAEJ,GADAA,EAAS/M,KAAKyd,eAAec,sBAAsBxe,EAAKwC,SAAWxC,EAAKwC,OACpEvC,KAAK2iB,YAAY5mB,UAAYgR,EAAOyB,QAAQzS,SAAWiE,KAAK2iB,YAAY3mB,UAAY+Q,EAAOyB,QAAQxS,QAAS,CAC5G,IAAI+sE,EAAc/oE,KAAKsiD,WAAWviD,EAAKwC,OAAQvC,KAAK+hE,gBAAiB/hE,KAAKgiE,aAAchiE,KAAKnH,OAAQmH,KAAK0iE,eAC1G1iE,KAAKwhE,QAAUxhE,KAAKgpE,aAAaD,EAAYxwE,MAAOwwE,EAAYzwE,OAAQ0H,KAAKnH,OAAQmH,KAAK+hE,gBAAiB/hE,KAAKgiE,aAAcj1D,GAC9H,IAAIm4D,GACAnpE,QAASgE,EAAKwC,OAAOiM,QAAQzS,QAASC,QAAS+D,EAAKwC,OAAOiM,QAAQxS,QACnEzD,MAAOwH,EAAKwC,OAAOiM,QAAQjC,WAAWhU,MAAOD,OAAQyH,EAAKwC,OAAOiM,QAAQjC,WAAWjU,QAEpFy7D,GACAxxD,OAAQxC,EAAKwC,OAAQmzB,MAAO,YAC5BwvC,SAAUA,EAAUC,SAAUD,EAAUE,QAAQ,GAEpDplE,KAAKyd,eAAe8nD,aAAalyB,eAAa41B,WAAYlV,GAC1D,IAAIx5D,EAAM0iB,GAAYld,EAAKwC,QACvB6a,GACAvhB,KAAM,cAAe0hB,WAAYN,GAAY1iB,GAAM+iB,WAAYL,GAAYjd,KAAK2iB,aAActF,SAAU,WACxGmO,WAAYxrB,KAAKwrB,YAErB,IAAKo7C,EAAkB,CAGnB,GAFA5mE,KAAKyd,eAAe0D,mBACpBnhB,KAAKyd,eAAeD,gBAAgBJ,GAChC7iB,EAAIuf,MAAM,IAAMvf,EAAIuf,MAAM,GAAG2sC,UAAW,CACxC,IAAIyiB,GACArtE,KAAM,cAAe0hB,WAAYvd,KAAKyd,eAAeipD,cAAc3mE,EAAKwC,QACxE+a,WAAYtd,KAAK2hE,kBAAmBtkD,SAAU,YAElDrd,KAAKyd,eAAeD,gBAAgB0rD,GAExClpE,KAAKyd,eAAeE,kBAI5B,OADA4zB,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAC5BC,KAAKwhE,SAGjBqH,EAAWz4B,UAAU+xB,UAAY,SAAUpiE,GACvCwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GACtC,IAAIgN,EAEJ,GADAA,EAAS/M,KAAKyd,eAAec,sBAAsBxe,EAAKwC,SAAWxC,EAAKwC,OACpEvC,KAAK2iB,YAAY5mB,UAAYgR,EAAOyB,QAAQzS,SAAWiE,KAAK2iB,YAAY3mB,UAAY+Q,EAAOyB,QAAQxS,QAAS,CAC5G,IAAIkpE,GACAnpE,QAASgE,EAAKwC,OAAOiM,QAAQzS,QAASC,QAAS+D,EAAKwC,OAAOiM,QAAQxS,QACnEzD,MAAOwH,EAAKwC,OAAOiM,QAAQjC,WAAWhU,MAAOD,OAAQyH,EAAKwC,OAAOiM,QAAQjC,WAAWjU,QAEpFy7D,GACAxxD,OAAQxC,EAAKwC,OAAQmzB,MAAO,QAASwvC,SAAUA,EAAUC,SAAUnlE,KAAKuhE,eAAgB6D,QAAQ,GAEpGplE,KAAKyd,eAAe8nD,aAAalyB,eAAa41B,WAAYlV,GAE9D/zD,KAAK+hE,gBAAkBhiE,EAAKM,SAC5B,IAEI8oE,GAAYnyE,EAFRgJ,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAK8hE,cAAc9qE,EAE9BC,EADd+I,KAAK+hE,gBAAgB9qE,EAAI+I,KAAK8hE,cAAc7qE,GAEpDkyE,EAAUz6D,IAAa1O,KAAKuhE,eAAe/yD,QAAQtB,iBAAajT,OAAWA,EAAWkvE,GAC5EnpE,KAAKuhE,eAAe/yD,QAAQjC,WAAWhU,MAAQ4wE,EAAQnyE,EAAKgJ,KAAKuhE,eAAe/yD,QAAQjC,WAAWhU,MACnGyH,KAAKuhE,eAAe/yD,QAAQjC,WAAWjU,OAAS6wE,EAAQlyE,EAAK+I,KAAKuhE,eAAe/yD,QAAQjC,WAAWjU,OAC9G6wE,EAAUnpE,KAAKopE,WAAWD,GAC1BnpE,KAAKyd,eAAemnD,aACpB,IAAImE,EAAc/oE,KAAKsiD,WAAWviD,EAAKwC,OAAQvC,KAAK8hE,cAAe9hE,KAAK+hE,gBAAiB/hE,KAAKnH,OAAQmH,KAAK0iE,eAE3G,GADA1iE,KAAKwhE,SAAYxhE,KAAKgpE,aAAaD,EAAYxwE,MAAOwwE,EAAYzwE,OAAQ0H,KAAKnH,OAAQmH,KAAK8hE,cAAe9hE,KAAK+hE,gBAAiBh1D,GAC7H/M,KAAKyd,eAAe0oD,0BAA2B,CAC/C,IAAIlmE,EAAUD,KAAKomE,kBAAkBrmE,EAAKwC,QAC1CvC,KAAKyd,eAAe4oD,YAAYtmE,EAAKwC,OAAQxC,EAAKM,SAAUJ,EAAS,aAAcD,KAAKyhE,kBACxFzhE,KAAKyhE,kBAAmB,EAG5B,OADAzhE,KAAKgiE,aAAehiE,KAAK+hE,iBACjB/hE,KAAKwhE,SAGjBqH,EAAWz4B,UAAUqyB,WAAa,SAAU1iE,GACxCC,KAAKoiE,QAAQriE,IAEjB8oE,EAAWz4B,UAAUg2B,kBAAoB,SAAU7lE,GAC/C,MAAO,KAAO9D,KAAKC,MAAM6D,EAAKiO,QAAQhN,OAAOjJ,OAAS,MAAakE,KAAKC,MAAM6D,EAAKiO,QAAQhN,OAAOlJ,SAEtGuwE,EAAWz4B,UAAUg5B,WAAa,SAAUC,GACxC,OAAQrpE,KAAKnH,QACT,IAAK,aACD,OAAS7B,EAAGqyE,EAAOryE,EAAGC,EAAG,GAC7B,IAAK,kBACD,OAAOoyE,EACX,IAAK,cACD,OAASryE,EAAG,EAAGC,EAAGoyE,EAAOpyE,GAC7B,IAAK,cACD,OAASD,EAAG,EAAGC,GAAIoyE,EAAOpyE,GAC9B,IAAK,kBACD,OAASD,EAAGqyE,EAAOryE,EAAGC,GAAIoyE,EAAOpyE,GACrC,IAAK,kBACD,OAASD,GAAIqyE,EAAOryE,EAAGC,GAAIoyE,EAAOpyE,GACtC,IAAK,aACD,OAASD,GAAIqyE,EAAOryE,EAAGC,EAAG,GAC9B,IAAK,kBACD,OAASD,GAAIqyE,EAAOryE,EAAGC,EAAGoyE,EAAOpyE,GAEzC,OAAOoyE,GAQXR,EAAWz4B,UAAU44B,aAAe,SAAU3F,EAAYC,EAAazqE,EAAQ+Z,EAAYjH,EAAUpJ,GAC7FA,aAAkByR,IAAoC,IAAxBzR,EAAOuX,MAAMrjB,QAAgB8L,EAAOuX,MAAM,GAAGtG,YAAcK,kBAAgBy1D,cAC1F,eAAXzwE,GAAsC,eAAXA,GAAsC,gBAAXA,GAAuC,gBAAXA,EAC5D,IAAhByqE,GAAoC,IAAfD,IACvBC,EAAcD,EAAa5mE,KAAKmJ,IAAoB,IAAhB09D,EAAoB,EAAIA,EAA4B,IAAfD,EAAmB,EAAIA,IAIpGC,EAAcD,EADTzwD,IAAejH,EACOlP,KAAKmJ,IAAI09D,EAAaD,GAGtB,GAGnC,IAAI6B,GACAnpE,QAASwG,EAAOxG,QAASC,QAASuG,EAAOvG,QACzCzD,MAAOgK,EAAOhK,MAAOD,OAAQiK,EAAOjK,QAExC0H,KAAKwhE,QAAUxhE,KAAKyd,eAAe8rD,mBAAmBlG,EAAYC,EAAatjE,KAAK2jE,SAAS3jE,KAAKnH,SAClG,IAIIk7D,EAMJ,OALAA,GAAQxxD,OAAQA,EAAQmzB,MAAO,WAAYwvC,SAAUA,EAAUC,UAJ3DppE,QAASwG,EAAOxG,QAASC,QAASuG,EAAOvG,QACzCzD,MAAOgK,EAAOhK,MAAOD,OAAQiK,EAAOjK,QAG2C8sE,QAAQ,GAC3FplE,KAAKyd,eAAe8nD,aAAalyB,eAAa41B,WAAYlV,GACtDA,EAAIqR,QACJplE,KAAKyd,eAAe8rD,mBAAmB,EAAIlG,EAAY,EAAIC,EAAatjE,KAAK2jE,SAAS3jE,KAAKnH,SAExFmH,KAAKwhE,SAETqH,GACT1H,IAKEqI,GAAiC,SAAUj4B,GAE3C,SAASi4B,EAAgB/rD,EAAgB8tB,GACrC,IAAIkK,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAEvD,OADAy1C,EAAMlK,aAAeA,EACdkK,EAkDX,OAtDAlF,GAAUi5B,EAAiBj4B,GAO3Bi4B,EAAgBp5B,UAAUyxB,UAAY,SAAU9hE,GAC5CwxC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtCC,KAAKqhE,UAAW,GAGpBmI,EAAgBp5B,UAAU+xB,UAAY,SAAUpiE,GAC5CwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GACtC,IAAI0pE,EACAlpE,GACAxE,QAASiE,KAAK+hE,gBAAgB/qE,EAAGuB,MAAO,EAAGD,OAAQ,EACnD0D,QAASgE,KAAK+hE,gBAAgB9qE,GAKlC,GAHK+I,KAAKmxB,gBACNnxB,KAAKmxB,cAAgBnxB,KAAKyd,eAAeisD,WAAWnpE,IAEpDP,KAAKqhE,WAAsE,IAA1D97D,GAAMhC,OAAOvD,KAAK+hE,gBAAiB/hE,KAAKgiE,cAAyB,CAClF,IAAI31D,EAAOC,GAAKmmB,UAAUzyB,KAAKgiE,aAAchiE,KAAK+hE,mBAClD0H,EAA2BzpE,KAAKyd,eAAegsD,8BAAyBxvE,OAAWA,EAAWoS,KAE1FrM,KAAKyd,eAAeksD,oBAAoB3pE,KAAKmxB,cAAe9kB,GAGpE,OAAOo9D,GAGXD,EAAgBp5B,UAAUgyB,QAAU,SAAUriE,GAC1CC,KAAKiiE,qBACL,IACI51D,EAAOC,GAAKmmB,UAAUzyB,KAAKgiE,aAAchiE,KAAK+hE,kBACvB/hE,KAAKyd,eAAegsD,8BAAyBxvE,OAAWA,EAAWoS,GAC1FrM,KAAKmxB,eAAiBnxB,KAAKmxB,yBAAyBrc,KACpD9U,KAAKyd,eAAemsD,mBAAmB5pE,KAAKmxB,eAC5CnxB,KAAKmxB,cAAgB,MAEzBogB,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,GACpCC,KAAKqhE,UAAW,GAGpBmI,EAAgBp5B,UAAUkyB,UAAY,WAClC/wB,EAAOnB,UAAUkyB,UAAU7rB,KAAKz2C,OAGpCwpE,EAAgBp5B,UAAUqyB,WAAa,SAAU1iE,GACzCC,KAAKqhE,UACLrhE,KAAKoiE,QAAQriE,IAGdypE,GACTrI,IAKEoD,GAAsC,SAAUhzB,GAEhD,SAASgzB,EAAqB9mD,EAAgB9R,EAAU4/B,GACpD,IAAIkK,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,EAAgB9R,IAAa3L,KAE3D,OADAy1C,EAAMlK,aAAeA,EACdkK,EAmDX,OAvDAlF,GAAUg0B,EAAsBhzB,GAOhCgzB,EAAqBn0B,UAAUyxB,UAAY,SAAU9hE,GACjDwxC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtCC,KAAKqhE,UAAW,GAGpBkD,EAAqBn0B,UAAU+xB,UAAY,SAAUpiE,GACjD,GAAIC,KAAKqhE,SAAU,CACf,IAAI98D,GACAxD,YAAaf,KAAK+hE,gBAAiB92D,YAAajL,KAAK+hE,iBAEpD/hE,KAAKmxB,gBACNnxB,KAAKmxB,cAAgBnxB,KAAKyd,eAAeisD,WAAWnlE,IAExDxE,EAAKwC,OAASvC,KAAKmxB,cACfpxB,EAAKiD,SAA6B,uBAAlBhD,KAAK2L,UAAsCkJ,GAAa9U,EAAKiD,UAC7EhD,KAAKyd,eAAewoD,QAAQjmE,KAAK2L,SAAU5L,GAE/CC,KAAK2L,SAAW,qBASpB,OAPK3L,KAAKqhE,WACNrhE,KAAKyd,eAAeknD,iBAChB5kE,EAAKwC,QAAUxC,EAAKiB,eACpBhB,KAAKyd,eAAe67C,kBAAkBv5D,GAAM,IAGpDwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,IAC9BC,KAAKwhE,SAGjB+C,EAAqBn0B,UAAUgyB,QAAU,SAAUriE,GAC/CC,KAAKiiE,qBACDjiE,KAAKmxB,eAAiBnxB,KAAKmxB,yBAAyBxd,KACpD3T,KAAKyd,eAAemsD,mBAAmB5pE,KAAKmxB,eAC5CnxB,KAAKmxB,cAAgB,MAEzBnxB,KAAKqhE,UAAW,EAChB9vB,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAGxCwkE,EAAqBn0B,UAAUkyB,UAAY,WACvC/wB,EAAOnB,UAAUkyB,UAAU7rB,KAAKz2C,OAGpCukE,EAAqBn0B,UAAUqyB,WAAa,SAAU1iE,GAC9CC,KAAKqhE,UACLrhE,KAAKoiE,QAAQriE,IAGdwkE,GACTD,IAEEuF,GAAiC,SAAUt4B,GAE3C,SAASs4B,EAAgBpsD,GACrB,OAAO8zB,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAwDtD,OA1DAuwC,GAAUs5B,EAAiBt4B,GAK3Bs4B,EAAgBz5B,UAAUyxB,UAAY,SAAU9hE,GAC5CwxC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtCC,KAAKyd,eAAeP,iBACpB,IAAI3c,GACAnC,OAASvC,KAAM,QACfE,QAASiE,KAAK+hE,gBAAgB/qE,EAAGuB,MAAO,GAAID,OAAQ,GACpD0D,QAASgE,KAAK+hE,gBAAgB9qE,GAE7B8I,EAAKwC,SACNvC,KAAK8pE,YAAc9pE,KAAKyd,eAAeisD,WAAWnpE,KAI1DspE,EAAgBz5B,UAAU+xB,UAAY,SAAUpiE,GAE5C,GADAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GACjCC,KAAK8pE,YAQN9pE,KAAK8pE,YAAY5pE,MAAM8Y,YAAc,QACrChZ,KAAK8pE,YAAY5pE,MAAM6e,gBAAkB,MACzC/e,KAAK8pE,YAAY5pE,MAAM6Y,KAAO,kBAVX,CACnB,IAAIxY,GACAnC,OAASvC,KAAM,QAAUE,QAASiE,KAAK+hE,gBAAgB/qE,EAAGuB,MAAO,GAAID,OAAQ,GAC7E4H,OAAS6e,gBAAiB,MAAOhG,KAAM,eAAiB/c,QAASgE,KAAK+hE,gBAAgB9qE,GAE1F+I,KAAK8pE,YAAc9pE,KAAKyd,eAAeisD,WAAWnpE,GAOtD,GAAIP,KAAKqhE,WAAsE,IAA1D97D,GAAMhC,OAAOvD,KAAK+hE,gBAAiB/hE,KAAKgiE,cAAyB,CAClF,IAAI31D,EAAOC,GAAKmmB,UAAUzyB,KAAKgiE,aAAchiE,KAAK+hE,kBAClD/hE,KAAKyd,eAAeksD,oBAAoB3pE,KAAK8pE,YAAaz9D,GAE9D,OAAQrM,KAAKwhE,SAGjBqI,EAAgBz5B,UAAUgyB,QAAU,SAAUriE,GAC1CC,KAAKiiE,qBACDjiE,KAAK8pE,aACL9pE,KAAK8pE,YAAY5pE,MAAM8Y,YAAc,OACrChZ,KAAK8pE,YAAY5pE,MAAM6Y,KAAO,QAG9B/Y,KAAK8pE,YAAc/pE,EAAKwC,OAExBvC,KAAK8pE,cAAgB9pE,KAAK8pE,uBAAuBh1D,IAAQ9U,KAAK8pE,uBAAuBn2D,KACrF3T,KAAKyd,eAAessD,QAAQ/pE,KAAK8pE,YAAa9pE,KAAK+hE,iBAEvDxwB,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,GACpCC,KAAKqhE,UAAW,GAGpBwI,EAAgBz5B,UAAUkyB,UAAY,WAClC/wB,EAAOnB,UAAUkyB,UAAU7rB,KAAKz2C,OAE7B6pE,GACT1I,IAKE6I,GAA6B,SAAUz4B,GAEvC,SAASy4B,EAAYvsD,EAAgBwsD,GACjC,IAAIx0B,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,IAAmBzd,KAEjD,OADAy1C,EAAMy0B,QAAUD,EACTx0B,EAiDX,OArDAlF,GAAUy5B,EAAaz4B,GAOvBy4B,EAAY55B,UAAUyxB,UAAY,SAAU9hE,GACxCwxC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtCC,KAAKqhE,UAAW,GAGpB2I,EAAY55B,UAAU+xB,UAAY,SAAUpiE,GAExC,GADAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GAClCC,KAAKqhE,SACL,GAAKrhE,KAAKkqE,UAAqE,IAA1D3kE,GAAMhC,OAAOvD,KAAK+hE,gBAAiB/hE,KAAKgiE,eAKxD,GAAIjiE,EAAKoqE,aAAepqE,EAAKoqE,YAAY1zE,QAAUsJ,EAAKoqE,YAAY1zE,QAAU,EAAG,CAClF,IAAI2zE,EAAcrqE,EAAKsqE,aAAa,GAChCC,EAAcvqE,EAAKsqE,aAAa,GAChCE,EAAaxqE,EAAKoqE,YAAY,GAC9BK,EAAazqE,EAAKoqE,YAAY,GAC9BxtD,EAAQ3c,KAAKyqE,YAAYF,EAAYC,GAAcxqE,KAAKyqE,YAAYL,EAAaE,GACjFI,EAAa3qE,EAAKM,SACtBL,KAAKyd,eAAewsD,KAAKttD,EAAO,EAAG,EAAG+tD,GACtC1qE,KAAK2qE,YAAYP,EAAaG,GAC9BvqE,KAAK2qE,YAAYL,EAAaE,QAdoD,CAClF,IAAIriE,EAAOnI,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAKgiE,aAAahrE,EAClD4zE,EAAO5qE,KAAK+hE,gBAAgB9qE,EAAI+I,KAAKgiE,aAAa/qE,EACtD+I,KAAKyd,eAAeotD,OAAO1iE,EAAMyiE,EAAM5qE,KAAK+hE,iBAcpD,OAAQ/hE,KAAKwhE,SAGjBwI,EAAY55B,UAAUgyB,QAAU,SAAUriE,GACtCC,KAAKiiE,qBACL1wB,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,GACpCC,KAAKqhE,UAAW,GAGpB2I,EAAY55B,UAAUkyB,UAAY,WAC9B/wB,EAAOnB,UAAUkyB,UAAU7rB,KAAKz2C,OAEpCgqE,EAAY55B,UAAUq6B,YAAc,SAAUK,EAAQC,GAClD,IAAI/zE,EAAI+zE,EAAOjhC,MAAQghC,EAAOhhC,MAC1B7yC,EAAI8zE,EAAO/gC,MAAQ8gC,EAAO9gC,MAC9B,OAAOvtC,KAAKg1C,KAAMz6C,EAAIA,EAAMC,EAAIA,IAEpC+yE,EAAY55B,UAAUu6B,YAAc,SAAUK,EAAYC,GACtDD,EAAWlhC,MAAQmhC,EAAUnhC,MAC7BkhC,EAAWhhC,MAAQihC,EAAUjhC,OAE1BggC,GACT7I,IAKE+J,GAA4B,SAAU35B,GAEtC,SAAS25B,EAAWztD,GAChB,OAAO8zB,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAQtD,OAVAuwC,GAAU26B,EAAY35B,GAKtB25B,EAAW96B,UAAUgyB,QAAU,SAAUriE,GACrCC,KAAKiiE,qBACLjiE,KAAKyd,eAAe0tD,WAAWprE,GAC/BwxC,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAEjCmrE,GACT/J,IAKEiK,GAA2B,SAAU75B,GAErC,SAAS65B,EAAU3tD,GACf,OAAO8zB,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAStD,OAXAuwC,GAAU66B,EAAW75B,GAKrB65B,EAAUh7B,UAAUgyB,QAAU,SAAUriE,GACpCC,KAAKiiE,qBACKt9B,OAAO0mC,KAAKtrE,EAAKiB,cAAcw8B,UAAUC,KAAM,UACrD6tC,QACJ/5B,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAEjCqrE,GACTjK,IAKEoK,GAAoC,SAAUh6B,GAE9C,SAASg6B,EAAmB9tD,GACxB,OAAO8zB,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAoEtD,OAtEAuwC,GAAUg7B,EAAoBh6B,GAK9Bg6B,EAAmBn7B,UAAUyxB,UAAY,SAAU9hE,GAG/C,GAFAwxC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtCC,KAAKqhE,UAAW,EACXrhE,KAAKmxB,cAeL,CACD,IAAIv1B,OAAK,EACLrB,EAAMyF,KAAKmxB,cAAc/yB,MAE7BxC,GAAO5E,GADP4E,EAAKrB,EAAI5B,OAAO4B,EAAI5B,OAAOlC,OAAS,IACvBO,EAAGC,EAAG2E,EAAG3E,GACtB+I,KAAKmxB,cAAc/yB,MAAMzF,OAAO7B,KAAK8E,OApBhB,CACrBoE,KAAK4S,YAAe5b,EAAGgJ,KAAK8hE,cAAc9qE,EAAGC,EAAG+I,KAAK8hE,cAAc7qE,GACnE,IAAIsJ,GACAxE,QAASiE,KAAK+hE,gBAAgB/qE,EAC9BgF,QAASgE,KAAK+hE,gBAAgB9qE,EAC9BsB,MAAO,EAAGD,OAAQ,EAClB4H,OAAS8Y,YAAa,QAASC,YAAa,GAC5C7a,OACIvC,KAAM,QACNuC,MAAO,UACPzF,SAAW3B,EAAGgJ,KAAK4S,WAAW5b,EAAGC,EAAG+I,KAAK4S,WAAW3b,IAAOD,EAAGgJ,KAAK+hE,gBAAgB/qE,EAAGC,EAAG+I,KAAK+hE,gBAAgB9qE,MAGtH+I,KAAKmxB,cAAgBnxB,KAAKyd,eAAeisD,WAAWnpE,KAW5DgrE,EAAmBn7B,UAAU+xB,UAAY,SAAUpiE,GAE/C,GADAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GAClCC,KAAKqhE,SAAU,CACf,IAAI9mE,EAAMyF,KAAKmxB,cAAc/yB,MAC7B,GAAI4B,KAAKmxB,eAAiBnxB,KAAK+hE,kBAC3BxnE,EAAI5B,OAAO4B,EAAI5B,OAAOlC,OAAS,GAAGO,EAAIgJ,KAAK+hE,gBAAgB/qE,EAC3DuD,EAAI5B,OAAO4B,EAAI5B,OAAOlC,OAAS,GAAGQ,EAAI+I,KAAK+hE,gBAAgB9qE,EAC3D+I,KAAKmxB,cAAc3iB,QAAQ2D,SAAS,GAAG/b,KAAO0C,EAAekH,KAAKmxB,cAAc/yB,MAAMzF,QAClFqH,KAAKqhE,WAAsE,IAA1D97D,GAAMhC,OAAOvD,KAAK+hE,gBAAiB/hE,KAAKgiE,eAAyB,CAClF,IAAIlxC,EAASxkB,GAAKmmB,SAASzyB,KAAKmxB,cAAc/yB,MAAMzF,QACpDqH,KAAKyd,eAAeksD,oBAAoB3pE,KAAKmxB,cAAeL,IAIxE,OAAO,GAGXy6C,EAAmBn7B,UAAUgyB,QAAU,SAAUriE,EAAMyrE,GACnDxrE,KAAKiiE,qBACL1wB,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GAClCC,KAAKqhE,WACLrhE,KAAKqhE,UAAW,EACZrhE,KAAKmxB,eACLnxB,KAAKyd,eAAemsD,mBAAmB5pE,KAAKmxB,gBAGpDnxB,KAAKsiE,aAGTiJ,EAAmBn7B,UAAUoyB,WAAa,SAAUziE,GAChDwxC,EAAOnB,UAAUoyB,WAAW/rB,KAAKz2C,KAAMD,GACvCC,KAAKmiE,UAAUpiE,IAGnBwrE,EAAmBn7B,UAAUkyB,UAAY,WACrCtiE,KAAKqhE,UAAW,EAChBrhE,KAAKmxB,cAAgB,MAElBo6C,GACTpK,IAKEsK,GAAqC,SAAUl6B,GAE/C,SAASk6B,EAAoBhuD,GACzB,OAAO8zB,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAsDtD,OAxDAuwC,GAAUk7B,EAAqBl6B,GAK/Bk6B,EAAoBr7B,UAAU+xB,UAAY,SAAUpiE,GAEhD,GADAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GAClCC,KAAKqhE,SAAU,CACf,IAAI9mE,EAAMyF,KAAKmxB,cACf52B,EAAI0Q,YAAcjL,KAAK+hE,gBACvB/hE,KAAKyd,eAAeiuD,sBAAsBnxE,GAE9C,OAAO,GAGXkxE,EAAoBr7B,UAAUyxB,UAAY,SAAU9hE,GAGhD,GAFAwxC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtCC,KAAKqhE,UAAW,EACXrhE,KAAKmxB,cASL,CACD,IAAIu4C,EAAa1pE,KAAKmxB,cAClB72B,OAAU,GACdA,EAAU,IAAIgT,GAAgBo8D,EAAY,YAAc7tE,KAAM,aAAc,IACpEF,MAAQqE,KAAK+hE,gBACrB2H,EAAWvwE,SAASuwE,EAAWvwE,SAAS1C,OAAS,GAAK6D,MAdjC,CACrB,IAAIiK,GACA1E,GAAI,YACJhE,KAAM,WACNkF,YAAaf,KAAK+hE,gBAClB92D,YAAajL,KAAK+hE,iBAEtB/hE,KAAKmxB,cAAgBnxB,KAAKyd,eAAeisD,WAAWnlE,KAW5DknE,EAAoBr7B,UAAUoyB,WAAa,SAAUziE,GACjDwxC,EAAOnB,UAAUoyB,WAAW/rB,KAAKz2C,KAAMD,GACvCC,KAAKmiE,UAAUpiE,IAGnB0rE,EAAoBr7B,UAAUgyB,QAAU,SAAUriE,GAC9CC,KAAKiiE,qBACL1wB,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GAClCC,KAAKqhE,UACDrhE,KAAKmxB,eACLnxB,KAAKyd,eAAemsD,mBAAmB5pE,KAAKmxB,eAGpDnxB,KAAKsiE,aAGTmJ,EAAoBr7B,UAAUkyB,UAAY,WACtCtiE,KAAKmxB,cAAgB,KACrBnxB,KAAKqhE,UAAW,GAEboK,GACTtK,IAEEwK,GAA+B,SAAUp6B,GAEzC,SAASo6B,EAAcluD,GACnB,OAAO8zB,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KA8CtD,OAhDAuwC,GAAUo7B,EAAep6B,GAKzBo6B,EAAcv7B,UAAUyxB,UAAY,SAAU9hE,GAC1CC,KAAKqhE,UAAW,EAChBrhE,KAAK2iB,YAAc1F,GAAYld,EAAKwC,QACpCvC,KAAK6hC,aAAe9hC,EAAKiB,cAAcnB,GACvC0xC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,IAG1C4rE,EAAcv7B,UAAU+xB,UAAY,SAAUpiE,GAC1CwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GACtC,IAAI+iE,EAAO9iE,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAKgiE,aAAahrE,EAClD+rE,EAAO/iE,KAAK+hE,gBAAgB9qE,EAAI+I,KAAKgiE,aAAa/qE,EAClDsJ,EAAOR,EAAKwC,OAChB,GAAIhC,aAAgBuU,GAAM,CACtB,IAAIpZ,EAASL,IACb0B,EAAarB,GAAS6E,EAAK2M,YAAa,EAAG,GAC3C,IAAIg/C,EAAOzwD,EAAuBC,GAAU1E,EAAG8rE,EAAM7rE,EAAG8rE,IACxDD,EAAO5W,EAAKl1D,EACZ+rE,EAAO7W,EAAKj1D,EAOhB,OALI+I,KAAKqhE,WACLrhE,KAAKyd,eAAemuD,UAAU7rE,EAAKwC,OAAQxC,EAAKiB,cAAe8hE,EAAMC,GACrE/iE,KAAKyd,eAAeknD,kBAExB3kE,KAAKgiE,aAAehiE,KAAK+hE,iBACjB/hE,KAAKwhE,SAGjBmK,EAAcv7B,UAAUgyB,QAAU,SAAUriE,GACxCC,KAAKiiE,qBACL,IAAI4J,EAAY9rE,EAAKwC,OACrBvC,KAAKqhE,UAAW,EAChB,IAAIyK,GACAjwE,KAAM,4BACN4rE,SAAUznE,KAAK6hC,aAAcvkB,WAAYL,GAAYjd,KAAK2iB,aAC1DtF,SAAU,WAAYE,WAAYN,GAAY4uD,IAElD7rE,KAAKyd,eAAeD,gBAAgBsuD,GACpCv6B,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAGxC4rE,EAAcv7B,UAAUqyB,WAAa,SAAU1iE,GAC3CC,KAAKoiE,QAAQriE,IAEV4rE,GACTxK,IAEE4K,GAAiC,SAAUx6B,GAE3C,SAASw6B,EAAgBtuD,EAAgB5kB,GACrC,IAAI48C,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAEvD,OADAy1C,EAAM58C,OAASA,EACR48C,EAwEX,OA5EAlF,GAAUw7B,EAAiBx6B,GAO3Bw6B,EAAgB37B,UAAUyxB,UAAY,SAAU9hE,GAC5CC,KAAKqhE,UAAW,EAChB,IAAIt0D,EAAUhN,EAAKwC,OAAOuX,MAAY,OAClC/Z,EAAKwC,OAAOuX,MAAM,GAAK/Z,EAAKwC,OAAOoc,WAAW,GAClD3e,KAAK6hC,aAAe9hC,EAAKwC,OAAOiM,QAAQ2D,SAAS,GAAGtS,GACpDG,KAAK2iB,YAAc1F,GAAYlQ,GAC/B,IAAI8W,EAAa9jB,EAAKwC,OAAOiM,QAAQ2D,SAAS,GAC9CnS,KAAK0iE,eACD1rE,EAAG6sB,EAAW9nB,QACd9E,EAAG4sB,EAAW7nB,QACdzD,MAAOsrB,EAAWtX,WAAWhU,MAC7BD,OAAQurB,EAAWtX,WAAWjU,QAElCi5C,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,IAG1CgsE,EAAgB37B,UAAU+xB,UAAY,SAAUpiE,GAK5C,OAJAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GAClCC,KAAKqhE,UACLrhE,KAAKgsE,aAAajsE,IAEdC,KAAKwhE,SAGjBuK,EAAgB37B,UAAUgyB,QAAU,SAAUriE,GAC1CC,KAAKiiE,qBACL,IAAI1kD,EAAcxd,EAAKwC,OAAOuX,MAAY,OACtC/Z,EAAKwC,OAAOuX,MAAM,GAAK/Z,EAAKwC,OAAOoc,WAAW,GAClD3e,KAAKqhE,UAAW,EAChB,IAAIjkD,GACAvhB,KAAM,4BAA6B4rE,SAAUznE,KAAK6hC,aAClDtkB,WAAYN,GAAYM,GAAaD,WAAYL,GAAYjd,KAAK2iB,aAActF,SAAU,YAE9Frd,KAAKyd,eAAeD,gBAAgBJ,GACpCm0B,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAGxCgsE,EAAgB37B,UAAUqyB,WAAa,SAAU1iE,GAC7CC,KAAKoiE,QAAQriE,IAGjBgsE,EAAgB37B,UAAU47B,aAAe,SAAUjsE,GAC/C,IAAIgN,EACJA,EAAUhN,EAAKwC,OAAOuX,MAAY,OAAI/Z,EAAKwC,OAAOuX,MAAM,GAAK/Z,EAAKwC,OAAOoc,WAAW,GACpF,IACI0kD,EACAC,EAFApnC,EAAcn8B,EAAKwC,OAAOiM,QAAQ2D,SAAS,GAG3ClR,GAAWjK,EAAGklC,EAAYngC,QAAS9E,EAAGilC,EAAYlgC,SAClDkR,EAAcgvB,EAAYhvB,YAE9BA,IADAA,GAAgBH,aAAkB+H,GAAQ/H,EAAOG,YAAc,GAClC,KAAO,IACpC,IAAIi3B,EAAQ9oC,IACZ0B,EAAaonC,EAAOj3B,EAAajM,EAAOjK,EAAGiK,EAAOhK,GAClD,IAAI4B,EAASmH,KAAKnH,OAAO+mB,MAAM,GAC3BmhB,EAAQ/gC,KAAKsiD,WAAWpmB,EAAal8B,KAAK8hE,cAAe9hE,KAAK+hE,gBAAiBlpE,EAAQmH,KAAK0iE,cAAex1D,GAC3GlW,EAAIklC,EAAYngC,QAAUmgC,EAAY3vB,WAAWhU,MAAQ2jC,EAAY6E,MAAM/pC,EAC3EC,EAAIilC,EAAYlgC,QAAUkgC,EAAY3vB,WAAWjU,OAAS4jC,EAAY6E,MAAM9pC,EAC5E+oD,EAAahgD,KAAK2jE,SAAS9qE,GAE3B8C,EAAQF,EAAuB0oC,EADnC6b,GAAehpD,EAAGA,EAAIklC,EAAY3vB,WAAWhU,MAAQynD,EAAWhpD,EAAGC,EAAGA,EAAIilC,EAAY3vB,WAAWjU,OAAS0nD,EAAW/oD,IAErH8pC,EAAM/pC,EAAI2E,EAAM3E,EAChB+pC,EAAM9pC,EAAI0E,EAAM1E,EAChBosE,EAAatiC,EAAMxoC,MACnB+qE,EAAcviC,EAAMzoC,OACpB+qE,EAAcA,EAAa,EAAK,EAAIA,EACpCC,EAAeA,EAAc,EAAK,EAAIA,EACtCtjE,KAAKyd,eAAewuD,YAAYl/D,EAAQhN,EAAKwC,OAAOshB,WAAYw/C,EAAYC,EAAaviC,EAAOhhC,EAAKwC,QACrGvC,KAAKyd,eAAeknD,kBAEjBoH,GACT5K,IAEE+K,GAAiC,SAAU36B,GAE3C,SAAS26B,EAAgBzuD,GACrB,OAAO8zB,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KA6CtD,OA/CAuwC,GAAU27B,EAAiB36B,GAK3B26B,EAAgB97B,UAAUyxB,UAAY,SAAU9hE,GAC5CC,KAAKqhE,UAAW,EAChBrhE,KAAK6hC,aAAe9hC,EAAKwC,OAAOiM,QAAQ2D,SAAS,GAAGtS,GACpD,IAAIkN,EAAUhN,EAAKwC,OAAOuX,MAAY,OAClC/Z,EAAKwC,OAAOuX,MAAM,GAAK/Z,EAAKwC,OAAOoc,WAAW,GAClD3e,KAAK2iB,YAAc1F,GAAYlQ,GAC/BwkC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,IAG1CmsE,EAAgB97B,UAAU+xB,UAAY,SAAUpiE,GAE5C,GADAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GAClCA,EAAKwC,QACDvC,KAAKqhE,SAAU,CACf,IAAIt0D,EAAShN,EAAKwC,OAAOuX,MAAM,GAAK/Z,EAAKwC,OAAOuX,MAAM,GAClD/Z,EAAKwC,OAAOoc,WAAW,GACvBkF,OAAa,EACjBA,EAAc9jB,EAAKwC,OAAiB,WACpCvC,KAAKyd,eAAe8wB,YAAYxhC,EAAQ8W,EAAY7jB,KAAK+hE,gBAAiBhiE,EAAKwC,QAC/EvC,KAAKyd,eAAeknD,iBAI5B,OADA3kE,KAAKgiE,aAAehiE,KAAK+hE,iBACjB/hE,KAAKwhE,SAGjB0K,EAAgB97B,UAAUgyB,QAAU,SAAUriE,GAC1CC,KAAKiiE,qBACLjiE,KAAKqhE,UAAW,EAChB,IAAI8K,EAAapsE,EAAKwC,OAAOuX,MAAY,OACrC/Z,EAAKwC,OAAOuX,MAAM,GAAK/Z,EAAKwC,OAAOoc,WAAW,GAC9CytD,GACAvwE,KAAM,4BAA6B4rE,SAAUznE,KAAK6hC,aAClDtkB,WAAYN,GAAYkvD,GACxB7uD,WAAYL,GAAYjd,KAAK2iB,aAActF,SAAU,YAEzDrd,KAAKyd,eAAeD,gBAAgB4uD,GACpC76B,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAGxCmsE,EAAgB97B,UAAUqyB,WAAa,SAAU1iE,GAC7CC,KAAKoiE,QAAQriE,IAEVmsE,GACT/K,IC1oDE5wB,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAwBxCy7B,GAAkC,SAAU96B,GAE5C,SAAS86B,EAAiB5uD,EAAgB9R,GACtC,IAAI8pC,EAAQlE,EAAOkF,KAAKz2C,KAAMyd,GAAgB,IAASzd,KAEvD,OADAy1C,EAAM9pC,SAAWA,EACV8pC,EAooBX,OAxoBAlF,GAAU87B,EAAkB96B,GAO5B86B,EAAiBj8B,UAAUyxB,UAAY,SAAU9hE,GAC7CC,KAAKqhE,UAAW,EAChBrhE,KAAK2iB,YAAc1F,GAAYld,EAAKwC,QACpCgvC,EAAOnB,UAAUyxB,UAAUprB,KAAKz2C,KAAMD,GACtC,IAAI4e,EACA5e,EAAKwC,QAAUxC,EAAKwC,OAAOoc,aAC3BA,EAAa5e,EAAKwC,OAAOoc,WAAW,IAGxC,IAAK,IAAIjoB,EAAI,EAAGA,EAAIioB,EAAWxlB,SAAS1C,OAAQC,IAAK,CACjD,IAAI4D,EAAUqkB,EAAWxlB,SAASzC,GAClC,GAAsB,eAAlBsJ,KAAK2L,SACL,IAAK,IAAItV,EAAI,EAAGA,EAAIiE,EAAQ3B,OAAOlC,OAAS,EAAGJ,IAAK,CAChD,IAAI8U,GAAanU,EAAG,EAAGC,EAAG,GAC1BkU,EAASnU,GAAMsD,EAAQ3B,OAAOtC,GAAGW,EAAIsD,EAAQ3B,OAAOtC,EAAI,GAAGW,GAAK,EAChEmU,EAASlU,GAAMqD,EAAQ3B,OAAOtC,GAAGY,EAAIqD,EAAQ3B,OAAOtC,EAAI,GAAGY,GAAK,EAC5D02C,GAAS3tC,KAAK+hE,gBAAiB52D,EAAU,MACzCnL,KAAK0kE,gBAAkBpqE,EACvB0F,KAAKssE,aAAej2E,QAKxBs3C,GAAS3tC,KAAK+hE,gBAAiBznE,EAAQqB,MAAO,MAC9CqE,KAAK0kE,gBAAkBpqE,KAMvC+xE,EAAiBj8B,UAAU+xB,UAAY,SAAUpiE,GAG7C,GAFAwxC,EAAOnB,UAAU+xB,UAAU1rB,KAAKz2C,KAAMD,GACtCC,KAAK+hE,gBAAkBhiE,EAAKM,SACxBL,KAAK+hE,iBAAmB/hE,KAAKgiE,aAAc,CAC3C,IAAI/6D,EAAQjH,KAAK+hE,gBAAgB9qE,EAAI+I,KAAKgiE,aAAa/qE,EACnDyQ,EAAQ1H,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAKgiE,aAAahrE,EACvDgJ,KAAK+hE,gBAAkB/hE,KAAKyd,eAAekoD,iBAAiB3lE,KAAK+hE,iBACjE,IAAIx9D,OAAY,EAIhB,GAHIxE,EAAKwC,QAAUxC,EAAKwC,OAAOoc,aAC3Bpa,EAAYxE,EAAKwC,OAAOoc,WAAW,IAEnC3e,KAAKqhE,eAA8BpnE,IAAlB+F,KAAK2L,UAAoC,IAAVjE,GAAyB,IAAVT,EAAa,CAC5E,GAAsB,eAAlBjH,KAAK2L,SACL3L,KAAKwhE,SAAWxhE,KAAKusE,sBAAsBhoE,EAAWvE,KAAK0kE,gBAAiB1kE,KAAK+hE,gBAAiB/hE,KAAKssE,kBAEtG,CACD,IAAIxqB,EAAK9hD,KAAK+hE,gBAAgB/qE,EAAIgJ,KAAK0kE,gBAAgB/oE,MAAM3E,EACzD+qD,EAAK/hD,KAAK+hE,gBAAgB9qE,EAAI+I,KAAK0kE,gBAAgB/oE,MAAM1E,EACzD6rB,EAAQve,EAAUpL,SAASmnB,QAAQtgB,KAAK0kE,iBAC5C1kE,KAAKwhE,SAAWxhE,KAAKyd,eAAe+uD,iBAAiBjoE,EAAWu9C,EAAIC,GAAI,EAAOj/B,GAEnF9iB,KAAKyd,eAAeknD,kBAI5B,OADA3kE,KAAKgiE,aAAehiE,KAAK+hE,iBACjB/hE,KAAKwhE,SAGjB6K,EAAiBj8B,UAAUgyB,QAAU,SAAUriE,GAC3C,IAAIwE,EACAugE,EAKJ,GAJI/kE,EAAKwC,QAAUxC,EAAKwC,OAAOoc,aAE3BmmD,GAAc3rE,UADdoL,EAAYxE,EAAKwC,OAAOoc,WAAW,IACDxlB,WAElC4G,GAAQA,EAAKwC,QAAUxC,EAAKukC,MAAQvkC,EAAKukC,KAAK2/B,SAAWlkE,EAAKukC,KAAKmoC,UAA+B,aAAnBloE,EAAU1I,KACzFmE,KAAK0sE,mBAAmBnoE,EAAWvE,KAAK+hE,sBAGxC,GAAsB,eAAlB/hE,KAAK2L,UAA6B3L,KAAK0kE,gBAAiB,CACxD,IAAI5hD,EAAQve,EAAUpL,SAASmnB,QAAQtgB,KAAK0kE,iBACxCtrE,EAAOmL,EAAUpL,SAAS2pB,EAAQ,GAClCrqB,EAAO8L,EAAUpL,SAAS2pB,EAAQ,GACtC,GAAIA,IAAUve,EAAUpL,SAAS1C,OAAS,GACnCuJ,KAAK2sE,kBAAkBpoE,EAAWvE,KAAK0kE,iBAC1CngE,EAAUpL,SAASoN,OAAOhC,EAAUpL,SAAS1C,OAAS,EAAG,QAGzD,GAAI2C,GAAQqD,KAAK6G,IAAIlK,EAAK3C,QAAU,EAClB,IAAVqsB,GACA9iB,KAAK4sE,kBAAkBroE,EAAWue,QAGrC,GAAIrqB,EAAM,CACX,IAAI+nD,EAAMj7C,GAAM2G,eAAezT,EAAKE,OAAO,GAAIF,EAAKE,OAAO,IACvD0S,EAAa5S,EAAKhC,QAA0B,IAAhBgC,EAAKhC,OAAgBgC,EAAKhC,OAAS+pD,EAC9D/jD,KAAK6G,IAAI+H,IAAa,GACvBrL,KAAK6sE,kBAAkBtoE,EAAWue,GAI9C9iB,KAAKyd,eAAeqvD,eAAevoE,EAAWugE,GAGtD,GAAI9kE,KAAK2iB,YAAa,CAClB,IAEIvF,GACAvhB,KAAM,iBAAkB0hB,WAFtBN,GAAYld,EAAKwC,QAEsB+a,WAAYtd,KAAK2iB,YAAatF,SAAU,YAErFrd,KAAKyd,eAAeD,gBAAgBJ,GAExCm0B,EAAOnB,UAAUgyB,QAAQ3rB,KAAKz2C,KAAMD,IAExCssE,EAAiBj8B,UAAUw8B,kBAAoB,SAAUroE,EAAWue,GAChE,IAAIzd,EAAQd,EAAUpL,SAAS2pB,EAAQ,GACnCrqB,EAAO8L,EAAUpL,SAAS2pB,EAAQ,GAEtC,MADcrqB,EAAKhC,QAA0B,IAAhBgC,EAAKhC,OAAgBgC,EAAKhC,OAAS8O,GAAM2G,eAAezT,EAAKE,OAAO,GAAIF,EAAKE,OAAO,MACjG,GAAI,CAChB,IAAIo0E,EAAOxoE,EAAUpL,SAAS2pB,EAAQ,GACtCve,EAAUpL,SAASoN,OAAOuc,EAAQ,EAAG,GACrC,IAAIxoB,EAAU0F,KAAK0kE,gBACO,SAAtBpqE,EAAQmI,WAA8C,UAAtBnI,EAAQmI,WACxC4C,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGO,EAAI+1E,EAAKp0E,OAAO,GAAG3B,EACzD+1E,EAAKp0E,OAAO,GAAG1B,EAAIoO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGQ,IAGzDoO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGQ,EAAI81E,EAAKp0E,OAAO,GAAG1B,EACzD81E,EAAKp0E,OAAO,GAAG3B,EAAIqO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGO,IAEzDsD,EAAQ7D,QAA6B,IAAnB6D,EAAQ7D,SAC1BuJ,KAAK0L,qBAAqBrG,GAE9BrF,KAAK0L,qBAAqBqhE,KAGlCV,EAAiBj8B,UAAU1kC,qBAAuB,SAAUpR,GACpDA,EAAQmI,YAAcnI,EAAQ7D,QAA6B,IAAnB6D,EAAQ7D,UAChD6D,EAAQ7D,OAAS8O,GAAM2G,eAAe5R,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,IAChG6D,EAAQmI,UAAY8C,GAAM9C,UAAUnI,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,MAGtG41E,EAAiBj8B,UAAUy8B,kBAAoB,SAAUtoE,EAAWue,GAChE,IAAIxoB,EAAU0F,KAAK0kE,gBACfr/D,EAAQd,EAAUpL,SAAS2pB,EAAQ,GACnCiqD,EAAOxoE,EAAUpL,SAAS2pB,EAAQ,GAClCrqB,EAAO8L,EAAUpL,SAAS2pB,EAAQ,GAuBtC,GAtBIrqB,EAAKhC,QAA0B,IAAhBgC,EAAKhC,QACpB8N,EAAUpL,SAASoN,OAAOuc,EAAO,GACP,QAAtBxoB,EAAQmI,WAA6C,WAAtBnI,EAAQmI,WACvCsqE,EAAKp0E,OAAO,GAAG1B,EAAIqD,EAAQ3B,OAAO,GAAG1B,EACrCoO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGO,EAAI+1E,EAAKp0E,OAAO,GAAG3B,IAGzD+1E,EAAKp0E,OAAO,GAAG3B,EAAIsD,EAAQ3B,OAAO,GAAG3B,EACrCqO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGQ,EAAI81E,EAAKp0E,OAAO,GAAG1B,KAI7DsN,EAAUpL,SAASoN,OAAOuc,EAAQ,EAAG,GACX,QAAtBxoB,EAAQmI,WAA6C,WAAtBnI,EAAQmI,UACvC4C,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGO,EAAIyB,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGO,EAG9EqO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGQ,EAAIwB,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGQ,EAElF+I,KAAK0L,qBAAqBrG,GAC1B/K,EAAQ7D,OAAS6D,EAAQmI,UAAY,MAErC4C,GAAS0nE,IACT1nE,EAAM5O,OAAS8O,GAAM2G,eAAe7G,EAAM1M,OAAO,GAAIo0E,EAAKp0E,OAAO,IACjE0M,EAAM5C,UAAY8C,GAAM9C,UAAU4C,EAAM1M,OAAO,GAAIo0E,EAAKp0E,OAAO,IAC3Do0E,EAAKt2E,QAA0B,IAAhBs2E,EAAKt2E,QAAc,CAClCs2E,EAAKt2E,OAAS8O,GAAM2G,eAAe7G,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAIs2E,EAAKp0E,OAAOo0E,EAAKp0E,OAAOlC,OAAS,IAC3G,IAAIga,EAASpL,EAAM1M,OACfH,EAASu0E,EAAKp0E,OAClBo0E,EAAKtqE,UAAY8C,GAAM9C,UAAUgO,EAAOA,EAAOha,OAAS,GAAI+B,EAAOA,EAAO/B,OAAS,MAI/F41E,EAAiBj8B,UAAUs8B,mBAAqB,SAAUnoE,EAAW5I,GAIjE,IAAK,IAHDqxE,EACAV,EACAxH,GAAc3rE,SAAUoL,EAAUpL,UAC7BzC,EAAI,EAAGA,EAAI6N,EAAUpL,SAAS1C,OAAQC,IAAK,CAE5Ci3C,GAAShyC,GADTrB,EAAWiK,EAAkB,SAAE7N,IACPiF,MAAO4I,EAAUouB,cACzC25C,EAAe51E,EACfs2E,GAAY,GAGpB,GAAIA,QAA8B/yE,IAAjBqyE,GACb,GAAI/nE,EAAUpL,UAAYoL,EAAUpL,SAASmzE,IAA2D,aAA1C/nE,EAAUpL,SAASmzE,GAAczwE,KAAqB,CAChH,IAAIvB,EAAUiK,EAAUpL,SAASmzE,GAC7BW,EAAW1oE,EAAUpL,SAASmzE,EAAe,GAC7CW,IACA1oE,EAAUpL,SAASoN,OAAO+lE,EAAc,GACxCW,EAASt0E,OAAO,GAAK2B,EAAQ3B,OAAO,SAI3C,CACD,IAAImqB,EAAQ9iB,KAAKktE,UAAU3oE,EAAW5I,GACtC,GAAI4I,EAAUpL,UAAYoL,EAAUpL,SAAS2pB,IAA6C,aAAnCve,EAAUpL,SAAS2pB,GAAOjnB,KAAqB,CAC9FvB,EAAUiK,EAAUpL,SAAS2pB,GAAjC,IACIqqD,EAAS,IAAI7/D,GAAgB/I,EAAW,YAAc1I,KAAM,WAAYF,MAAOA,IAAS,GAC5FwxE,EAAOx0E,OAAO,GAAK2B,EAAQ3B,OAAO,GAClCw0E,EAAOx0E,OAAO,GAAKgD,EACnBrB,EAAQ3B,OAAO,GAAKgD,EACpB4I,EAAUpL,SAASoN,OAAOuc,EAAO,EAAGqqD,GACpCH,GAAY,GAGhBA,GACAhtE,KAAKyd,eAAeqvD,eAAevoE,EAAWugE,IAGtDuH,EAAiBj8B,UAAU88B,UAAY,SAAU3oE,EAAW5I,GAExD,IAAK,IADDyxE,KACK12E,EAAI,EAAGA,EAAI6N,EAAUpL,SAAS1C,OAAQC,IAAK,CAChD,IAAI4D,EAAUiK,EAAUpL,SAASzC,GAC7B2V,EAAOC,GAAKmmB,UAAUn4B,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO,KAC5D0T,EAAKqmB,QAAQnuB,EAAUouB,YACnBtmB,EAAK7I,cAAc7H,IACnByxE,EAAiBt2E,KAAKwD,GAG9B,GAAgC,IAA5B8yE,EAAiB32E,OACjB,OAAO8N,EAAUpL,SAASmnB,QAAQ8sD,EAAiB,IAS9C,IANDxP,OAAQ,EACR12D,OAAM,EACN4b,OAAQ,EACR/pB,OAAM,EACNq4D,OAAI,EACJntB,OAAI,EACR,IAASvtC,EAAI,EAAGA,EAAI02E,EAAiB32E,OAAQC,IACzCqC,EAAMq0E,EAAiB12E,GACvB06D,GAAKz1D,EAAM1E,EAAI8B,EAAIJ,OAAO,GAAG1B,IAAM8B,EAAIJ,OAAO,GAAG1B,EAAI0E,EAAM1E,GAC3DgtC,GAAKtoC,EAAM3E,EAAI+B,EAAIJ,OAAO,GAAG3B,IAAM+B,EAAIJ,OAAO,GAAG3B,EAAI2E,EAAM3E,GAC3D4mE,EAAQnhE,KAAK6G,IAAI8tD,EAAIntB,GACX,IAANvtC,IACAwQ,EAAM02D,EACN96C,EAAQ,GAER86C,EAAQ12D,IACRA,EAAM02D,EACN96C,EAAQpsB,GAGhB,OAAO6N,EAAUpL,SAASmnB,QAAQ8sD,EAAiBtqD,KAG3DupD,EAAiBj8B,UAAUm8B,sBAAwB,SAAUhyE,EAAKD,EAASqB,EAAO2wE,GAC9E,IAAI7hE,GAAiBzT,EAAG,EAAGC,EAAG,GAC1B6tE,GAAc3rE,SAAUoB,EAAIpB,UAChCsR,EAAazT,GAAMsD,EAAQ3B,OAAO2zE,GAAct1E,EAAIsD,EAAQ3B,OAAO2zE,EAAe,GAAGt1E,GAAK,EAC1FyT,EAAaxT,GAAMqD,EAAQ3B,OAAO2zE,GAAcr1E,EAAIqD,EAAQ3B,OAAO2zE,EAAe,GAAGr1E,GAAK,EAC1F,IAAI8qD,EAAKpmD,EAAM1E,EAAIwT,EAAaxT,EAC5B6qD,EAAKnmD,EAAM3E,EAAIyT,EAAazT,EAC5B8rB,EAAQvoB,EAAIpB,SAASmnB,QAAQhmB,GAC7BkR,GAAS,EACMlR,EAAQ3B,OAAO,GAAG1B,EAAEkD,QAAQ,GAAOG,EAAQ3B,OAAO,GAAG1B,EAAEkD,QAAQ,GAuBlF,OApBe,IAAX2oB,IACc,IAAVA,GAAuC,IAAxBvoB,EAAIpB,SAAS1C,QAA0C,IAA1B6D,EAAQ3B,OAAOlC,QAC3DqsB,EAAQ9iB,KAAKqtE,YAAY9yE,EAAKD,EAASwnD,EAAIC,EAAIj/B,GAC/CtX,GAAS,GAEJsX,IAAUvoB,EAAIpB,SAAS1C,OAAS,GAA4B,OAAtB6D,EAAQmI,WAAyC,OAAnBnI,EAAQ7D,OAIlE,IAAVqsB,IACLA,EAAQ9iB,KAAKstE,mBAAmB/yE,EAAKD,EAASwnD,EAAIC,EAAIj/B,GACtDtX,GAAS,IALTsX,EAAQ9iB,KAAKutE,mBAAmBhzE,EAAKD,EAASwnD,EAAIC,EAAIuqB,GACtD9gE,GAAS,GAMTA,IACAxL,KAAK0kE,gBAAkBpqE,EAAUC,EAAIpB,SAAS2pB,GAC9C9iB,KAAKssE,aAAe,GAExBtsE,KAAKwtE,uBAAuBjzE,EAAKuoB,EAAOg/B,EAAIC,GAC5C/hD,KAAKyd,eAAeqvD,eAAevyE,EAAKuqE,KAErC,GAEXuH,EAAiBj8B,UAAUi9B,YAAc,SAAU9yE,EAAKD,EAASwnD,EAAIC,EAAI5R,GACrE,IACI1tC,EAEA+9C,EADArnD,KAEA1C,EAAS8O,GAAM2G,eAAe5R,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO,IAChE80E,EAAmBloE,GAAM9C,UAAUnI,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO,IAQzE,OAPAQ,EAASrC,KAAK,IAAI6P,GAAkBpM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWgrE,EAAkBh3E,OAAQA,EAAS,IAAK,IAC9HgM,EAAanI,EAAQ3B,OAAO,GAAG1B,IAAMqD,EAAQ3B,OAAO,GAAG1B,EAAO8qD,EAAK,EAAK,SAAW,MAAWD,EAAK,EAAK,QAAU,OAClHtB,EAAOlmD,EAAQ3B,OAAO,GAAG3B,IAAMsD,EAAQ3B,OAAO,GAAG3B,EAAK+qD,EAAKD,EAC3D3oD,EAASrC,KAAK,IAAI6P,GAAkBpM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQ+pD,IAAO,IAChHrnD,EAASrC,KAAK,IAAI6P,GAAkBpM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWgrE,EAAkBh3E,OAAQA,EAAS,IAAK,IAC9H8D,EAAIpB,SAAWA,EAAS0sB,OAAOtrB,EAAIpB,UAC3Bg3C,EAAO,GAGnBk8B,EAAiBj8B,UAAUk9B,mBAAqB,SAAU/yE,EAAKD,EAASwnD,EAAIC,EAAI5R,GAC5E,IAAI1tC,EACAhM,EAEAi3E,EACA5qD,EACA6qD,EAHAx0E,KAIJ,GAAIoB,EAAI00C,cAAgB30C,EAAQ7D,QAAU8D,EAAIpB,SAAS,GAAGR,OAAOlC,OAAS,EAAG,CACzE8D,EAAIpB,SAASoN,OAAO,EAAG,GAEvB,IAAK,IADDnN,OAAO,EACF1C,EAAI,EAAGA,EAAI4D,EAAQ3B,OAAOlC,OAAS,EAAGC,IAAK,CAChD,IAAI8pD,EAAMj7C,GAAM2G,eAAe5R,EAAQ3B,OAAOjC,GAAI4D,EAAQ3B,OAAOjC,EAAI,IACjE0W,EAAM7H,GAAM9C,UAAUnI,EAAQ3B,OAAOjC,GAAI4D,EAAQ3B,OAAOjC,EAAI,IAEvC,KADzBi3E,EAAY,IAAIhnE,GAAkBpM,EAAK,YAAcsB,KAAM,aAAc4G,UAAW2K,EAAK3W,OAAQ+pD,IAAO,IAC1F/pD,UACN2C,GAA4B,QAAnBA,EAAKqJ,WAA0C,WAAnBrJ,EAAKqJ,UAI1CkrE,EAAUlrE,UAAYs/C,EAAK,EAAI,SAAW,MAH1C4rB,EAAUlrE,UAAYq/C,EAAK,EAAI,QAAU,QAMjD1oD,EAAOu0E,EACPx0E,EAASrC,KAAK62E,GAElBpzE,EAAIpB,SAAWA,EAAS0sB,OAAOtrB,EAAIpB,UACnC2pB,EAAQ,MAEP,CACD4qD,GAAc7xE,KAAM,aAAc4G,UAAWnI,EAAQmI,UAAWhM,OAAQ6D,EAAQ7D,OAAS,GACzF0C,EAASrC,KAAK,IAAI6P,GAAkBpM,EAAK,WAAYmzE,GAAW,IACtC,WAAtBpzE,EAAQmI,WAAgD,QAAtBnI,EAAQmI,WAC1ChM,EAASgG,KAAK6G,IAAIw+C,GAClBr/C,EAAYq/C,EAAK,EAAI,QAAU,SAG/BrrD,EAASgG,KAAK6G,IAAIy+C,GAClBt/C,EAAYs/C,EAAK,EAAI,SAAW,OAEpC4rB,EAAY,IAAIhnE,GAAkBpM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQA,IAAU,GACjH0C,EAASrC,KAAK62E,GACd,IAAIC,EAAUrzE,EAAIpB,SAAS,GACvBy0E,GAAWA,EAAQn3E,SACnBm3E,EAAQn3E,OAAUgM,IAAcmrE,EAAQnrE,UAAamrE,EAAQn3E,OAASA,EAASm3E,EAAQn3E,OAASA,GAEpGqsB,EAAQ,EACRxoB,EAAQ7D,OAAS,EAAI6D,EAAQ7D,OAAS,EACtC8D,EAAIpB,SAAWA,EAAS0sB,OAAOtrB,EAAIpB,UAEvC,OAAO2pB,GAEXupD,EAAiBj8B,UAAUo9B,uBAAyB,SAAUjzE,EAAKuoB,EAAOg/B,EAAIC,GAC1E,IAAInqD,EAAU2C,EAAIpB,SAAS2pB,GACvBnX,EAAW/T,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,GAClDmc,EAAahb,EAAQe,OAAO,GAC5Bk1E,GAAe,EACnB,GAAqB,eAAjBj2E,EAAQiE,KAAuB,CAC/BjE,EAAQe,OAAO,GAAKia,EACpBhb,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,GAAKkV,EAK5C,GAJWpR,EAAIpB,SAAS2pB,EAAQ,KAE5B+qD,EAAe7tE,KAAK8tE,sBAAsBhsB,EAAIC,EAAIxnD,EAAKuoB,IAEvDvoB,EAAIpB,SAAS1C,OAAS,EAAIqsB,GAAS+qD,EAAc,CACjD,IAAIE,EAAcxzE,EAAIpB,SAAS2pB,EAAQ,GACvC9iB,KAAKguE,kBAAkBzzE,EAAK3C,EAASm2E,EAAajsB,EAAIC,MAIlEsqB,EAAiBj8B,UAAUm9B,mBAAqB,SAAUhpE,EAAWjK,EAASwnD,EAAIC,EAAIuqB,GAClF,IAEIjnE,EACAsoE,EACAntB,EACApzC,EALA03D,GAAc3rE,SAAUoL,EAAUpL,UAClC2pB,EAAQve,EAAUpL,SAASmnB,QAAQhmB,GAKvCiK,EAAUpL,SAAS80E,MACnB,IAAIlB,EAAOxoE,EAAUpL,SAASoL,EAAUpL,SAAS1C,OAAS,GAC1D4O,EAAS0nE,GAAsB,eAAdA,EAAKlxE,KAAyBkxE,EAAO,KACtD,IAAK,IAAIr2E,EAAI,EAAGA,EAAI4D,EAAQ3B,OAAOlC,OAAS,EAAGC,IAC3C8pD,EAAMj7C,GAAM2G,eAAe5R,EAAQ3B,OAAOjC,GAAI4D,EAAQ3B,OAAOjC,EAAI,IACjE0W,EAAM7H,GAAM9C,UAAUnI,EAAQ3B,OAAOjC,GAAI4D,EAAQ3B,OAAOjC,EAAI,IAC5Di3E,EAAY,IAAIhnE,GAAkBpC,EAAW,YAAc1I,KAAM,aAAcpF,OAAQ+pD,EAAK/9C,UAAW2K,IAAO,GAC9G7I,EAAUpL,SAASrC,KAAK62E,GACxBtoE,EAAQsoE,EAEZ,IAAIO,EAAM5B,EACV,IAA8B,IAA1BhyE,EAAQ3B,OAAOlC,QAAgBy3E,IAAQ5zE,EAAQ3B,OAAOlC,OAAS,KAC3D4O,IACAA,EAAM5O,QAAU,QAERwD,IAARi0E,GAAmB,CACnB,IAAIf,OAAS,EACb3sB,EAAM,EAAIj7C,GAAM2G,eAAe5R,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAI6D,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,IAAM,EACvH2W,EAAM7H,GAAM9C,UAAUnI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAI6D,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,IACxG02E,EAAS,IAAIxmE,GAAkBpC,EAAW,YAAc1I,KAAM,aAAcpF,OAAQ+pD,EAAK/9C,UAAW2K,IACpG7I,EAAUpL,SAASrC,KAAKq2E,GAGhC,IAAIgB,EAAU,IAAIxnE,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,GAInF,OAHA0I,EAAUpL,SAASrC,KAAKq3E,GACxBnuE,KAAKyd,eAAeqvD,eAAevoE,EAAWugE,GAC9ChiD,GAAgBwpD,GAGpBD,EAAiBj8B,UAAUg+B,kBAAoB,SAAUh1E,EAAMmL,EAAWue,EAAOg/B,EAAIC,GACjF,GAAc,IAAVj/B,GAAsC,IAAvB1pB,EAAKT,OAAOlC,QAAgB2C,EAAK3C,OAAS,EAAG,CAC5D,IAAI8L,EAASgC,EAAUvD,cAAcpI,QACjChB,EAAU2M,EAAUpL,SAAS2pB,GAC7BrqB,EAAO8L,EAAUpL,SAAS2pB,EAAQ,GAClCqqD,OAAS,EACT7yE,KACJ6yE,EAAS,IAAIxmE,GAAkBpC,EAAW,YAAc1I,KAAM,aAAcpF,OAAQ,GAAIgM,UAAWrJ,EAAKqJ,YACxGnI,EAAQxD,KAAKq2E,GACb,IAAI3sB,OAAM,EAENA,EADsB,SAAtB5oD,EAAQ6K,UACD7K,EAAQe,OAAO,GAAG3B,GAAKuL,EAAO+F,WAAWtR,EAAI,IAEzB,UAAtBY,EAAQ6K,UACLF,EAAOoF,YAAY3Q,EAAI,GAAMY,EAAQe,OAAO,GAAG3B,EAE5B,WAAtBY,EAAQ6K,UACLF,EAAOyF,aAAa/Q,EAAI,GAAMW,EAAQe,OAAO,GAAG1B,EAGjDW,EAAQe,OAAO,GAAG1B,GAAKsL,EAAOkB,UAAUxM,EAAI,IAE7CW,EAAQ6K,UAClB0qE,EAAS,IAAIxmE,GAAkBpC,EAAW,YAAc1I,KAAM,aAAcpF,OAAQ+pD,EAAK/9C,UAAW7K,EAAQ6K,YAC5GnI,EAAQxD,KAAKq2E,GACbv1E,EAAQnB,OAASmB,EAAQnB,OAAS+pD,EAC9B/nD,GAAQA,EAAKhC,QAAUgC,EAAKgK,YACxBhK,EAAKgK,YAAcrJ,EAAKqJ,UACxBhK,EAAKhC,QAAU,GAEVgC,EAAKgK,YAAc2C,GAAqBhM,EAAKqJ,aAClDhK,EAAKhC,QAAU,KAGvB8N,EAAUpL,SAAWmB,EAAQurB,OAAOthB,EAAUpL,UAC9C6G,KAAK0kE,gBAAkBngE,EAAUpL,SAAS,KAGlDkzE,EAAiBj8B,UAAU09B,sBAAwB,SAAUhsB,EAAIC,EAAIx9C,EAAWue,GAC5E,IAAIlrB,EAAU2M,EAAUpL,SAAS2pB,GAC7B1pB,EAAOmL,EAAUpL,SAAS2pB,EAAQ,GACtC1pB,EACKT,OAAOS,EAAKT,OAAOlC,OAAS,GAAKmB,EAAQe,OAAO,GACrD,IAAI01E,GAAgB9pE,EAAU9C,UAAuC,KAA3B8C,EAAU0qC,aAChD4+B,GAAe,EAyBnB,MAxBkB,eAAdz0E,EAAKyC,OACkB,WAAnBzC,EAAKqJ,UACLrJ,EAAK3C,QAAUsrD,EAES,QAAnB3oD,EAAKqJ,UACVrJ,EAAK3C,QAAUsrD,EAES,UAAnB3oD,EAAKqJ,UACVrJ,EAAK3C,QAAUqrD,EAGf1oD,EAAK3C,QAAUqrD,EAEY,KAA3Bv9C,EAAU0qC,cAAuB71C,EAAK3C,OAAS,EAC/CuJ,KAAKouE,kBAAkBh1E,EAAMmL,EAAWue,EAAOg/B,EAAIC,GAE9Cx9C,EAAU9C,UAAuC,KAA3B8C,EAAU0qC,cAAuB71C,EAAK3C,OAAS,GAAe,IAAVqsB,IAC/E+qD,GAAe,EACf7tE,KAAKsuE,mBAAmB/pE,EAAW3M,IAEnCy2E,GACAruE,KAAKuuE,uBAAuBn1E,IAG7By0E,GAEXxB,EAAiBj8B,UAAUm+B,uBAAyB,SAAUj0E,GACtDA,EAAQ7D,OAAS,IACjB6D,EAAQmI,UAAY2C,GAAqB9K,EAAQmI,WACjDnI,EAAQ7D,SAAW,IAG3B41E,EAAiBj8B,UAAU49B,kBAAoB,SAAUzzE,EAAK3C,EAASa,EAAMqpD,EAAIC,GACpEnqD,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,GAChDgC,EAAKE,OAAO,GAAKf,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,GACpDgC,GAAsB,eAAdA,EAAKoD,OACTpD,EAAKhC,QAA0B,IAAhBgC,EAAKhC,UACG,SAAnBgC,EAAKgK,WAA2C,UAAnBhK,EAAKgK,UACvB,IAAPq/C,IACArpD,EAAKhC,OAA6B,UAAnBgC,EAAKgK,UAAyBhK,EAAKhC,OAASqrD,EAAKrpD,EAAKhC,OAASqrD,GAC1ErpD,EAAKhC,QAA0B,IAAhBgC,EAAKhC,SACpBuJ,KAAKuuE,uBAAuB91E,IAKzB,IAAPspD,IACAtpD,EAAKhC,OAA6B,WAAnBgC,EAAKgK,UAA0BhK,EAAKhC,OAASsrD,EAAKtpD,EAAKhC,OAASsrD,GAC3EtpD,EAAKhC,QAA0B,IAAhBgC,EAAKhC,SACpBuJ,KAAKuuE,uBAAuB91E,MAOpD4zE,EAAiBj8B,UAAUk+B,mBAAqB,SAAU/pE,EAAWmgE,GACjE,IAKI3jE,EALA+hB,EAAQve,EAAUpL,SAASmnB,QAAQokD,GACnC8J,GAAc,EACd52E,EAAU2M,EAAUpL,SAAS2pB,GAC7B1pB,EAAOmL,EAAUpL,SAAS2pB,EAAQ,GAGlCgiD,GAAc3rE,SAAUoL,EAAUpL,UACtC,GAAIC,EAAK3C,OAAS,GAAK8N,EAAU9C,SAAU,CACvC,IAAIS,EAAaqC,EAAUvD,cAAcpI,QACrCO,KACAu0E,OAAY,EACZe,GAAoB,EACxBzuE,KAAKuuE,uBAAuB32E,GAC5B,IAAIa,EAAO8L,EAAUpL,SAAS2pB,EAAQ,GAClC4rD,EAAWnqE,EAAUpL,SAAS2pB,EAAQ,GAO1C,OANIrqB,GACAuH,KAAKuuE,uBAAuB91E,GAE5Bi2E,GACA1uE,KAAKuuE,uBAAuBG,GAExBt1E,EAAKqJ,WACT,IAAK,MACL,IAAK,SACD1B,EAAenJ,EAAQnB,OAAS,GAA2B,SAAtBmB,EAAQ6K,UAAwBP,EAAWoG,WAAapG,EAAWyF,YACpG/P,EAAQnB,OAASyL,EAAW3J,MAAQ,EAChCkE,KAAK6G,IAAIlK,EAAK3C,QAAUyL,EAAW5J,OAAS,IAC5Cc,EAAK3C,OAAS8O,GAAM2G,eAAehK,EAAWjB,OAAQ7H,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,IACvFmB,EAAQe,OAAO,GAAG3B,EAAI+J,EAAY/J,EAClCY,EAAQnB,OAAS8O,GAAM2G,eAAetU,EAAQe,OAAO,GAAIf,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,IAChGmB,EAAQnB,QAAU,GAClB+3E,GAAc,IAId/1E,GAAQA,EAAKgK,WAAahK,EAAKhC,SAC/BgC,EAAKE,OAAO,GAAG1B,EAAI8J,EAAY9J,EAC/BwB,EAAKE,OAAO,GAAG3B,EAAIyB,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGO,EAA2B,UAAtBY,EAAQ6K,UAChE1B,EAAY/J,EAAI,GAAK+J,EAAY/J,EAAI,IAE7Cw3E,GAAc,EACdC,GAAoB,GAExB,MACJ,IAAK,OACL,IAAK,QACD1tE,EAAenJ,EAAQnB,OAAS,GAA2B,QAAtBmB,EAAQ6K,UAAuBP,EAAWuB,UAAYvB,EAAW8F,aAClGpQ,EAAQnB,OAASyL,EAAW5J,OAAS,EACjCmE,KAAK6G,IAAIlK,EAAK3C,QAAUyL,EAAW3J,MAAQ,IAC3Ca,EAAK3C,OAAS8O,GAAM2G,eAAehK,EAAWjB,OAAQ7H,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,IACvFmB,EAAQe,OAAO,GAAG1B,EAAI8J,EAAY9J,EAClCW,EAAQnB,OAAS8O,GAAM2G,eAAetU,EAAQe,OAAO,GAAIf,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,IAChGmB,EAAQnB,QAAU,GAClB+3E,GAAc,IAId/1E,GAAQA,EAAKgK,WAAahK,EAAKhC,SAC/BgC,EAAKE,OAAO,GAAG3B,EAAI+J,EAAY/J,EAC/ByB,EAAKE,OAAO,GAAG1B,EAAIwB,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGQ,EAA2B,WAAtBW,EAAQ6K,UAChE1B,EAAY9J,EAAI,GAAK8J,EAAY9J,EAAI,IAE7Cu3E,GAAc,EACdC,GAAoB,GAIhCzuE,KAAKuuE,uBAAuBn1E,GAC5B4G,KAAKuuE,uBAAuB32E,GACxB42E,IACAd,GAAc7xE,KAAM,aAAc4G,UAAW7K,EAAQ6K,UAAWhM,OAAQ,IACxE0C,EAASrC,KAAK,IAAI6P,GAAkBpC,EAAW,WAAYmpE,GAAW,IAClEe,IACIh2E,GAAQA,EAAKgK,WAAahK,EAAKhC,SAC/BgC,EAAKhC,OAAS8O,GAAM2G,eAAezT,EAAKE,OAAO,GAAIF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,KAEpFi4E,GAAYA,EAASjsE,WAAaisE,EAASj4E,SAC3Ci4E,EAASj4E,OAAS8O,GAAM2G,eAAezT,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAIi4E,EAAS/1E,OAAO+1E,EAAS/1E,OAAOlC,OAAS,KAEzH8N,EAAUpL,SAASoN,OAAOuc,EAAQ,EAAG,IAEzCve,EAAUpL,SAAWA,EAAS0sB,OAAOthB,EAAUpL,WAEnD6G,KAAK0kE,gBAAmB,EAAsBngE,EAAUpL,SAAS2pB,EAAQ,GACrEve,EAAUpL,SAAS2pB,EAAQ,GAC/B9iB,KAAKyd,eAAeqvD,eAAevoE,EAAWugE,KAGtDuH,EAAiBj8B,UAAUu8B,kBAAoB,SAAUpoE,EAAWmgE,GAChE,GAAIngE,EAAU0iB,UAAuC,KAA3B1iB,EAAUq9C,aAAqB,CACrD,IAAI+sB,OAAa,EACbC,OAAW,EACXC,OAAa,EACbC,OAAW,EACXl2E,EAAU2L,EAAU7C,cAAc9I,QAClCm2E,EAAgBrK,EAAgB/rE,OAAO,GACvCq2E,EAAetK,EAAgB/rE,OAAO+rE,EAAgB/rE,OAAOlC,OAAS,GACxC,UAA9BiuE,EAAgBjiE,WAAuD,SAA9BiiE,EAAgBjiE,WACzDksE,GAAe33E,EAAG+3E,EAAc/3E,EAAGC,EAAG83E,EAAc93E,GACpD23E,GACI53E,EAAkC,SAA9B0tE,EAAgBjiE,UAAwBusE,EAAah4E,EAAI4B,EAAQL,MAAQ,EAAIy2E,EAAah4E,EAAI4B,EAAQL,MAAQ,EAClHtB,EAAG+3E,EAAa/3E,GAEpB43E,GAAe73E,EAAG4B,EAAQqI,OAAOjK,EAAGC,EAAG2B,EAAQqI,OAAOhK,EAAI2B,EAAQN,QAClEw2E,GAAa93E,EAAG4B,EAAQqI,OAAOjK,EAAGC,EAAG2B,EAAQqI,OAAOhK,EAAI2B,EAAQN,UAGhEq2E,GAAe33E,EAAG+3E,EAAc/3E,EAAGC,EAAG83E,EAAc93E,GACpD23E,GACI53E,EAAGg4E,EAAah4E,EAChBC,EAAkC,WAA9BytE,EAAgBjiE,UAA0BusE,EAAa/3E,EAAI2B,EAAQN,OAAS,EAAI02E,EAAa/3E,EAAI2B,EAAQN,OAAS,GAE1Hu2E,GAAe73E,EAAG4B,EAAQqI,OAAOjK,EAAI4B,EAAQL,MAAOtB,EAAG2B,EAAQqI,OAAOhK,GACtE63E,GAAa93E,EAAG4B,EAAQqI,OAAOjK,EAAI4B,EAAQL,MAAOtB,EAAG2B,EAAQqI,OAAOhK,IAIxE,OAAQ8N,IAFM7N,GAAIy3E,EAAW33E,EAAGG,GAAIw3E,EAAW13E,EAAGG,GAAIw3E,EAAS53E,EAAGK,GAAIu3E,EAAS33E,IACjEC,GAAI23E,EAAW73E,EAAGG,GAAI03E,EAAW53E,EAAGG,GAAI03E,EAAS93E,EAAGK,GAAIy3E,EAAS73E,IACvC,QAE5C,OAAO,GAOXo1E,EAAiBj8B,UAAUkZ,QAAU,aAQrC+iB,EAAiBj8B,UAAUiZ,cAAgB,WAIvC,MAAO,wBAEJgjB,GACTlL,IC9nBE8N,GAAqC,WAErC,SAASA,EAAoB/vE,EAASue,GAClCzd,KAAKkvE,cAAgB,OAErBlvE,KAAKsrE,OAAQ,EACbtrE,KAAKmvE,WAAY,EACjBnvE,KAAKovE,aAAc,EACnBpvE,KAAKqhE,UAAW,EAChBrhE,KAAKqvE,iBAAkB,EACvBrvE,KAAKd,QAAU,KACfc,KAAKsvE,aAAe,KACpBtvE,KAAKwW,KAAO,KACZxW,KAAKuvE,UAAY,KACjBvvE,KAAKd,QAAUA,EACfc,KAAKsvE,aAAe,IAAIE,GACxBxvE,KAAKyd,eAAiBA,EAigD1B,OA//CAS,OAAOozB,eAAe29B,EAAoB7+B,UAAW,UACjDgC,IAAK,WACD,OAAOpyC,KAAKkvE,eAEhBv6B,IAAK,SAAUpyB,GACPA,IAAWviB,KAAKkvE,gBACW,aAAvBlvE,KAAKkvE,gBACLlvE,KAAKd,QAAQsX,OAASC,eAAaO,SAC/BhX,KAAKwW,MACLxW,KAAKwW,KAAK4rD,SAAU/hE,SAAUL,KAAK+hE,kBAEvC/hE,KAAKwW,KAAO,MAED,WAAX+L,GAAkC,gBAAXA,EACvBviB,KAAKd,QAAQuwE,cAAc7zC,UAAUlQ,IAAI,oBAEb,WAAvB1rB,KAAKkvE,eAAqD,gBAAvBlvE,KAAKkvE,eAC7ClvE,KAAKd,QAAQuwE,cAAc7zC,UAAUlP,OAAO,oBAEhD1sB,KAAKkvE,cAAgB3sD,EACM,SAAvBviB,KAAKkvE,eAAmD,WAAvBlvE,KAAKkvE,eACpClvE,KAAKd,QAAQwY,eAAiBC,gBAAc+3D,SAI9C1vE,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,gBAAkBC,gBAAcC,WAH3E5X,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,eAAiBC,gBAAcC,WAK9E5X,KAAKd,QAAQ04D,UAAU53D,KAAKd,QAAQkwC,UAAU7sB,EAAQviB,KAAKqhE,aAGnEhvB,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAe29B,EAAoB7+B,UAAW,WACjDgC,IAAK,WACD,OAAOpyC,KAAKmvE,WAEhBx6B,IAAK,SAAU6sB,GACXxhE,KAAKmvE,UAAY3N,EACbxhE,KAAKwhE,QACLxhE,KAAKd,QAAQ04D,UAAU,eAGvB53D,KAAKd,QAAQ04D,UAAU53D,KAAKd,QAAQkwC,UAAUpvC,KAAKuiB,OAAQviB,KAAKqhE,YAGxEhvB,YAAY,EACZC,cAAc,IAGlB28B,EAAoB7+B,UAAUu/B,iBAAmB,SAAU7hE,GACvD,IAAI8hE,EACA7zE,EACAC,GAC6B,IAA7B8R,EAAEjS,KAAKykB,QAAQ,UAEfvkB,GADA6zE,EAAW9hE,GACQ+hE,eAAe,GAAG9lC,QACrC/tC,EAAU4zE,EAASC,eAAe,GAAG5lC,UAGrCluC,EAAU+R,EAAEi8B,QACZ/tC,EAAU8R,EAAEm8B,SAEhB,IAAI5pC,EAAW,IAAIif,GACnBjf,EAAW8tB,GAAanuB,KAAKd,SAC7B,IAAI4wE,EAAe9vE,KAAKd,QAAQU,QAAQ20B,wBAOxC,OANAx4B,EAAUA,EAAUiE,KAAKd,QAAQuwE,cAAcM,WAAaD,EAAaltE,KAAOvC,EAAS9H,MACzFyD,EAAUA,EAAUgE,KAAKd,QAAQuwE,cAAcO,UAAYF,EAAa/sE,IAAM1C,EAAS/H,OACvFyD,GAAWiE,KAAKd,QAAQmjB,SAASxc,UAAU8W,MAC3C3gB,GAAWgE,KAAKd,QAAQmjB,SAASxc,UAAU8W,MAC3C5gB,GAAWiE,KAAKd,QAAQmjB,SAASxc,UAAUi8C,GAC3C9lD,GAAWgE,KAAKd,QAAQmjB,SAASxc,UAAUk8C,IAClC/qD,EAAG+E,EAAS9E,EAAG+E,IAK5BizE,EAAoB7+B,UAAU6/B,aAAe,SAAUC,GACnD,IAAIz6B,EAAQz1C,KAOZ,OANIA,KAAKmwE,UACLC,aAAapwE,KAAKmwE,UAEtBnwE,KAAKmwE,SAAWt5B,WAAW,WACvBpB,EAAM46B,mBAAmB56B,EAAMv2C,QAAQU,UACxC,MACI,GAKXqvE,EAAoB7+B,UAAUigC,mBAAqB,SAAUzwE,GACzD,IAAIgZ,EAAYoV,SAASC,eAAeruB,EAAQC,IAChD,GAAI+Y,EAAW,CACX,IAAIpX,EAASoX,EAAU2b,wBACvBv0B,KAAKd,QAAQmjB,SAASiuD,gBAAgB9uE,EAAOjJ,MAAOiJ,EAAOlJ,QAC3D,IAAI+H,EAAW,IAAIif,GACnBjf,EAAW8tB,GAAanuB,KAAKd,SAC7B,IAAI3G,EAAQyH,KAAKd,QAAQqxE,aAAavwE,KAAKd,QAAQ3G,MAAO8H,EAAS9H,OAC/DD,EAAS0H,KAAKd,QAAQqxE,aAAavwE,KAAKd,QAAQ5G,OAAQ+H,EAAS/H,QACrE0H,KAAKd,QAAQuwE,cAAcvvE,MAAM3H,MAAQA,EACzCyH,KAAKd,QAAQuwE,cAAcvvE,MAAM5H,OAASA,EAC1C0H,KAAKd,QAAQmjB,SAASmuD,UACtBxwE,KAAKd,QAAQw/D,kBACT1+D,KAAKd,QAAQwvB,cAAcc,YAC3BL,GAAYnvB,KAAKd,WAK7B+vE,EAAoB7+B,UAAUqgC,gBAAkB,WAC5C,OAASzwE,KAAKwW,gBAAgB8vD,IAAYtmE,KAAKwW,gBAAgB6xD,KAAeroE,KAAKovE,aAGvFH,EAAoB7+B,UAAUsgC,aAAe,WACzC,GAAiD,IAA5C1wE,KAAKd,QAAQwf,cAAc5E,MAAMrjB,QAAiE,IAAjDuJ,KAAKd,QAAQwf,cAAcC,WAAWloB,OAAe,CACvG,IAAIk6E,KACJA,EAAOA,EAAK9qD,OAAO7lB,KAAKd,QAAQwf,cAAc5E,MAAO9Z,KAAKd,QAAQwf,cAAcC,YAChF3e,KAAKwhE,QAAWxhE,KAAKovE,aAA+B,IAAhBuB,EAAKl6E,QAAgBuJ,KAAKwW,gBAAgBotD,KAAe9vD,GAAQ68D,EAAK,MAGlH1B,EAAoB7+B,UAAUwgC,gBAAkB,SAAU5tE,EAAQ6tE,GAC9D,IAAIC,EAAgB9tE,EACpB,GAAI8tE,EACA,KAAoC,OAA7BA,EAAc7xD,YAAqB,CACtC,GAAuC,iBAA5B6xD,EAAcrnC,aAClBonC,IAAoE,IAAvDC,EAAcrnC,UAAUnpB,QAAQ,mBAC3CuwD,IAAyE,IAA5DC,EAAcrnC,UAAUnpB,QAAQ,wBAClD,OAAOwwD,EAGPA,EAAgBA,EAAc7xD,WAI1C,OAAO,MAEXgwD,EAAoB7+B,UAAU2gC,UAAY,SAAUb,GAChD,OAAOc,UAAUC,SAASn5E,MAAM,OAASo4E,EAAIgB,QAAUhB,EAAIjM,SAE/DgL,EAAoB7+B,UAAU+gC,qBAAuB,SAAUpxE,GAC3DC,KAAKd,QAAQue,eAAeyqD,yBAC5B,IAAI3nE,EAAOP,KAAKd,QAAQwf,cAAc5E,MAAM,GAC5C,GAAIvZ,GAAQA,EAAKqY,WAAqC,UAAxBrY,EAAKqY,UAAU/c,MAAwC,kBAApB0E,EAAKnC,MAAMvC,KAA0B,CAElG,IADY0E,EAAKiO,QAAQhN,OACdgC,cAAcxD,KAAK+hE,iBAAkB,CAC5C,IAAIltC,EAAU70B,KAAKd,QAAQkyE,uBAAwBp6E,EAAGgJ,KAAK+hE,gBAAgB/qE,EAAI,GAAIC,EAAG+I,KAAK+hE,gBAAgB9qE,IACvG+L,EAAShD,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,UAC1E,GAAIr+D,GAAUA,EAAO6Y,UAAa7Y,EAAO6Y,WAAatb,EAAKV,GAAK,CAC5D,IAAIkiB,EAA+E,aAAlE/hB,KAAKd,QAAQ0c,UAAU5Y,EAAO6Y,UAAUjD,UAAUvH,YACnEyQ,GAAuB9e,EAAOwL,QAASuT,EAAYhiB,EAAKM,SAAUL,KAAKd,SAAS,OAKhG+vE,EAAoB7+B,UAAUkhC,YAAc,SAAUx0C,EAAKn3B,GACvD,OAAQqrE,UAAUC,SAASn5E,MAAM,QAAkB,cAARglC,GAAiC,WAAVn3B,GAEtEspE,EAAoB7+B,UAAUmhC,mBAAqB,SAAUrB,GACzD,IAKIzjE,EACAC,EACArE,EACAK,EARA1R,EAAIk5E,EAAIn0E,QACR9E,EAAIi5E,EAAIl0E,QACRyzE,EAAgBzvE,KAAKd,QAAQuwE,cAC7Bn3E,EAASm3E,EAAchpC,aACvBluC,EAAQk3E,EAAcjpC,YAM1B,SAAIluC,EAASm3E,EAAc+B,eAEvB/kE,GAAYzV,EAAIuB,EAAQ,GAAKtB,EAAG,GAChCyV,GAAa1V,EAAGuB,EAAOtB,EAAG,GAC1BoR,GAAerR,EAAIuB,EAAQ,GAAKtB,EAAGqB,GACnCoQ,GAAgB1R,EAAGuB,EAAOtB,EAAGqB,GACpBgU,GAAKmmB,UAAUhmB,EAASC,EAAUrE,EAAYK,IAC5ClF,eAAgBxM,EAAGA,EAAGC,EAAGA,UAIpCsB,EAAQk3E,EAAcgC,cACtBhlE,GAAYzV,EAAG,EAAGC,EAAIqB,EAAS,IAC/BoU,GAAa1V,EAAGuB,EAAOtB,EAAIqB,EAAS,IACpC+P,GAAerR,EAAG,EAAGC,EAAGqB,GACxBoQ,GAAgB1R,EAAGuB,EAAOtB,EAAGqB,GACpBgU,GAAKmmB,UAAUhmB,EAASC,EAAUrE,EAAYK,IAC5ClF,eAAgBxM,EAAGA,EAAGC,EAAGA,OAO5Cg4E,EAAoB7+B,UAAUshC,qBAAuB,WACjD,IAEIC,EAFAl8B,EAAQz1C,KAGZ2xE,EAAuBC,YAAY,SAAU7xE,GACzC01C,EAAMv2C,QAAQ2yE,qBAAqBF,IAH3B,IAKZ96B,WAAW,WACPpB,EAAMv2C,QAAQ4yE,qBAAsB,GAN5B,KAShB7C,EAAoB7+B,UAAUyxB,UAAY,SAAUqO,GAChDlwE,KAAKsrE,OAAQ,EACb,IAAIzhC,EAEJ,GADAA,EAAUqmC,EAAIrmC,QACV7pC,KAAKuxE,mBAAmBrB,GAGxB,OAFAlwE,KAAK+xE,aAAc,OACnB7B,EAAI8B,iBAGR,IAAKhyE,KAAKiyE,qBAAqB/B,IAAS/4D,GAAgBnX,KAAKd,UACxDyX,GAAW3W,KAAKd,WAAa+X,GAAYjX,KAAKd,SAI/C,GAHoB,WAAhBc,KAAKuiB,QAAuC,SAAhBviB,KAAKuiB,QACjCviB,KAAKd,QAAQgzE,qBAAqBlyE,KAAKmyE,aAAcrjC,iBAAeC,OAAO,KAEzE/uC,KAAKwW,gBAAgB+0D,IAAsBvrE,KAAKwW,gBAAgBi1D,KAC/C,IAAfyE,EAAIkC,QAAgC,IAAhBlC,EAAImC,QAO3B,IAAwB,IAAlBryE,KAAKqhE,WAA2C,IAArBrhE,KAAKovE,cACtCpvE,KAAKwW,gBAAgB+0D,IAAsBvrE,KAAKwW,gBAAgBi1D,IACjEzrE,KAAKovE,aAAc,EACnBpvE,KAAKuvE,aACLvvE,KAAKsyE,kBAAkBtyE,KAAK+hE,gBAAiB/hE,KAAKuvE,WAClDvvE,KAAKuvE,UAAUlvE,SAAWL,KAAK+hE,gBAC/B/hE,KAAKwW,KAAKqrD,UAAU7hE,KAAKuvE,eAExB,CACDvvE,KAAKovE,aAAc,EACnBpvE,KAAK+hE,gBAAkB/hE,KAAKgiE,aAAehiE,KAAK2vE,iBAAiBO,GACjElwE,KAAKuvE,aACDvvE,KAAKd,QAAQqzE,cAAgBvyE,KAAKuxE,mBAAmBrB,KACrDlwE,KAAKd,QAAQszE,UACbxyE,KAAKd,QAAQqzE,aAAc,GAE/B,IAAIvvE,OAAS,EACT6xB,EAAU70B,KAAKsvE,aAAa8B,sBAAsBpxE,KAAK+hE,gBAAiB/hE,KAAKd,QAASc,KAAKuvE,UAAW,KAAMvvE,KAAKuiB,QACjHhoB,EAAMyF,KAAKsvE,aAAa+B,qBAAqBrxE,KAAKd,QAAS21B,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,SAAUrhE,KAAKuvE,UAAWW,GAChHuC,EAAgB,KACR,OAARl4E,IACAk4E,EAAgBzyE,KAAKd,QAAQwzE,sBAAsBn4E,EAAKyF,KAAK+hE,oBAEzD/+D,EAAShD,KAAKyd,eAAewnD,WAAWwN,EAAel4E,IAG/DyF,KAAKuiB,OAASviB,KAAKd,QAAQyzE,mBAAmBp4E,EAAKk4E,EAAezyE,KAAK+hE,gBAAiB/+D,GAExF,IAAIihE,EAAUjkE,KAAK+wE,UAAUb,GAa7B,GAZIjM,GAAWiM,EAAIzD,UAAYzsE,KAAKd,QAAQgvC,2BACxCluC,KAAKuiB,OAAS,cAER0hD,IAAWiM,EAAIzD,UAAe91D,GAAW3W,KAAKd,WACpDc,KAAKuiB,OAAS,UAElBviB,KAAKwW,KAAOxW,KAAKd,QAAQ0zE,QAAQ5yE,KAAKuiB,QACjCviB,KAAKwW,OACNxW,KAAKuiB,OAAS,SACdviB,KAAKwW,KAAOxW,KAAKd,QAAQ0zE,QAAQ5yE,KAAKuiB,SAE1CviB,KAAKsyE,kBAAkBtyE,KAAK+hE,gBAAiB/hE,KAAKuvE,WAC9CtL,GAAWiM,EAAIzD,SAAU,CACzB,IAAInoC,EAAQ2/B,GAAWiM,EAAIzD,UAAcxI,QAASA,EAASwI,SAAUyD,EAAIzD,WAAexI,SAAS,GACjGjkE,KAAKuvE,UAAUjrC,KAAOA,EAE1BtkC,KAAKuvE,UAAUlvE,SAAWL,KAAK+hE,gBAC/B/hE,KAAKwW,KAAKqrD,UAAU7hE,KAAKuvE,WACzBvvE,KAAK6yE,kBAAqBtwE,OAAQvC,KAAKuvE,UAAUhtE,OAAQvB,cAAehB,KAAKuvE,UAAUvuE,eACvFhB,KAAK6yE,iBAAiBxyE,SAAWL,KAAK+hE,gBACtC/hE,KAAK6yE,iBAAiBvuC,KAAOtkC,KAAKuvE,UAAUjrC,KAC5CtkC,KAAKqhE,UAAW,EACC,eAAb6O,EAAIr0E,OACAguC,GAAWA,EAAQpzC,QAAU,IAC7BuJ,KAAK8yE,eAAiBnpC,GAAgB3pC,KAAK8yE,eAAgB5C,EAAKrmC,IAE/DA,GACDqmC,EAAI8B,sBA/DiC,CAEhChyE,KAAKd,QAAmBc,KAAK+hE,gBAAwBmO,EAAImC,QAAuBryE,KAAKuvE,UAAU3wD,aAE5G5e,KAAKqhE,UAAW,EAChBrhE,KAAKwW,KAAK4rD,QAAQpiE,KAAKuvE,WA+D1BvvE,KAAK4wE,gBAAgBV,EAAIltE,SAAYhD,KAAK4wE,gBAAgBV,EAAIltE,QAAQ,IAAW6mC,GAClFqmC,EAAI8B,kBAIZ/C,EAAoB7+B,UAAU2iC,gBAAkB,SAAUjlE,EAAGvT,IACrDyF,KAAKwW,gBAAgB+0D,IAAsBvrE,KAAKwW,gBAAgBi1D,KAChEzrE,KAAKwW,KAAK2rD,UAAUniE,KAAKuvE,WAEzBvvE,KAAKd,QAAQ+7B,eAAe+3C,cAC5BhzE,KAAKizE,gBAAgBnlE,GAGhB9N,KAAKwhE,SACLxhE,KAAKwW,KAAK2rD,UAAUniE,KAAKuvE,WAG9BvvE,KAAKuvE,UAAUvsE,SACfhD,KAAKmyE,aAAenyE,KAAKuvE,UAAUvsE,QAEvC,IAAIkwE,IAASlzE,KAAKuvE,UAAUvsE,kBAAkB8R,IAAQva,aAAeua,IACjE9U,KAAKwW,gBAAgB8tD,IACrBtkE,KAAKd,QAAQgzE,qBAAqBlyE,KAAKmyE,wBAAwBr9D,GAAO9U,KAAKmyE,aAAenyE,KAAKmzE,UAAWrkC,iBAAekL,QAAUlL,iBAAeC,MAAOmkC,GAEzJlzE,KAAKmyE,wBAAwBr9D,IAC1B9U,KAAKmzE,qBAAqBr+D,IAAQ9U,KAAKmzE,WAAanzE,KAAKmzE,UAAUtzE,KAAOG,KAAKmyE,aAAatyE,IAC/FG,KAAKd,QAAQgzE,qBAAqBlyE,KAAKmzE,UAAWrkC,iBAAekL,QAAUlL,iBAAeC,OAAO,GAErG/uC,KAAKmyE,aAAee,EAAS,KAAO34E,EACpCyF,KAAKmzE,UAAYD,EAAS,KAAO34E,GAGrC00E,EAAoB7+B,UAAUgjC,YAAc,SAAU74E,GAClD,GAAoB,gBAAhByF,KAAKuiB,QAA4BviB,KAAKuvE,UAAUvuE,gBAC/ChB,KAAKuvE,UAAUvuE,yBAAyBsjB,IAAetkB,KAAKuvE,UAAUvuE,yBAAyB09B,IAAqB,CACrH,IAAI7a,EAAa7jB,KAAKyd,eAAewnD,WAAWjlE,KAAKuvE,UAAUvuE,cAAehB,KAAKuvE,UAAUhtE,SACxFssC,GAAW7uC,KAAKd,QAAS2kB,GAAY,EAAO7jB,KAAKuvE,UAAUvuE,gBAAkB8S,GAAQ+P,KACtF7jB,KAAKuiB,OAAS,YACdviB,KAAKwW,KAAOxW,KAAK4yE,QAAQ5yE,KAAKuiB,QAC9BviB,KAAKwW,KAAKqrD,UAAU7hE,KAAK6yE,wBAGxB/+D,GAAQvZ,IAAQ8Y,GAAU9Y,IAAQyF,KAAK6yE,kBAC5C7yE,KAAK6yE,iBAAiBtwE,QAA0B,WAAhBvC,KAAKuiB,UAChCssB,GAAW7uC,KAAKd,QAASc,KAAKuvE,UAAUhtE,QAAQ,IACjDvC,KAAKuvE,UAAUhtE,kBAAkByR,IACjChU,KAAKsyE,kBAAkBtyE,KAAK+hE,gBAAiB/hE,KAAKuvE,WAEhDh1E,aAAeoZ,OAAepZ,aAAeoZ,KAC7Cg6B,GAAS3tC,KAAK+hE,gBAAiBxnE,EAAIwG,YAAaxG,EAAIo4B,aAClDgb,GAAS3tC,KAAK+hE,gBAAiBxnE,EAAI0Q,YAAa1Q,EAAIo4B,eACxD3yB,KAAKuiB,OAAS,QAElBviB,KAAKwW,KAAOxW,KAAK4yE,QAAQ5yE,KAAKuiB,QAC9BviB,KAAKwW,KAAKqrD,UAAU7hE,KAAK6yE,oBAIjC5D,EAAoB7+B,UAAU+xB,UAAY,SAAUr0D,EAAG+7B,GAEnD,GADA7pC,KAAKsrE,OAAQ,EACTtrE,KAAK+xE,YACLjkE,EAAEkkE,sBAGN,GAAI76D,GAAgBnX,KAAKd,UAAayX,GAAW3W,KAAKd,WAAa+X,GAAYjX,KAAKd,SAAW,CAC3Fc,KAAK+hE,gBAAkB/hE,KAAK2vE,iBAAiB7hE,GAC7C,IAAI+mB,EAAU70B,KAAKd,QAAQkyE,sBAAsBpxE,KAAK+hE,iBAClDxnE,EAAMyF,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,W1C/RnF,SAAiCniE,EAAS+sD,GAClC/sD,EAAQwvB,cAAcc,aACtBtwB,EAAQ8vB,OAAOg9B,gBAAgB9sD,EAAQ8vB,OAAOpvB,QAASqsD,EAAc/sD,EAAQmjB,SAASgN,kBACtFnwB,EAAQ+vB,OAAO+8B,gBAAgB9sD,EAAQ+vB,OAAOrvB,QAASqsD,EAAc/sD,EAAQmjB,SAASkN,iB0C6RlF8jD,CAAiBrzE,KAAKd,QAASc,KAAK+hE,iBACpC,IAAI/rB,GAAQ,EACRhzC,OAAS,EAUb,GATe,cAAX8K,EAAEjS,OACFguC,EAAU/7B,EAAE+7B,UACGA,EAAQpzC,OAAS,IAC5BuJ,KAAKszE,cAAgB3pC,GAAgB3pC,KAAKszE,cAAexlE,EAAG+7B,GACxC,cAAhB7pC,KAAKuiB,SACLyzB,GAAQ,KAI0C,IAA1DzwC,GAAMhC,OAAOvD,KAAK+hE,gBAAiB/hE,KAAKgiE,eAA2BhiE,KAAKqhE,SAAU,CAClF,IAAyB,IAArBrhE,KAAKovE,aAAyBp5B,EAAO,CACrCh2C,KAAKuvE,aACL,IAAIkD,EAAgB,KACR,OAARl4E,IACAk4E,EAAgBzyE,KAAKd,QAAQwzE,sBAAsBn4E,EAAKyF,KAAK+hE,iBACzDxnE,IAAQyF,KAAKmyE,cACTnyE,KAAKmyE,eACLnyE,KAAKuzE,eACLvzE,KAAKd,QAAQgzE,qBAAqBlyE,KAAKmyE,aAAcrjC,iBAAeC,OAAO,IAE3Ex0C,aAAeua,KACf9U,KAAKmzE,UAAY54E,GAErByF,KAAKmyE,aAAe53E,EACpByF,KAAKwzE,aAAaxzE,KAAK+hE,iBAAiB,IAElC/hE,KAAKmyE,cAAgBnyE,KAAKmyE,eAAiB53E,GACjDyF,KAAKwzE,aAAaxzE,KAAK+hE,iBAAiB,GAExC0Q,IACAzvE,EAAShD,KAAKyd,eAAewnD,WAAWwN,EAAel4E,KAG/DyF,KAAKuiB,OAASviB,KAAKd,QAAQyzE,mBAAmBp4E,EAAKk4E,EAAezyE,KAAK+hE,gBAAiB/+D,GACxFhD,KAAKsyE,kBAAkBtyE,KAAK+hE,gBAAiB/hE,KAAKuvE,WAClDvvE,KAAKwW,KAAOxW,KAAK4yE,QAAQ5yE,KAAKuiB,QAC9BviB,KAAKyzE,cACDzzE,KAAKwW,gBAAgB+tD,IACrBvkE,KAAKwW,gBAAgBi1D,IACrBzrE,KAAKwW,gBAAgB+0D,GACrBvrE,KAAKwW,KAAK2rD,UAAUniE,KAAKuvE,WAEpB1lC,GAAW7pC,KAAKwW,gBAAgBwzD,IACrChqE,KAAKwW,KAAKqrD,UAAU7hE,KAAKuvE,WAE7BvvE,KAAK0wE,eACL1wE,KAAKmxE,qBAAqBnxE,KAAKuvE,WAC/B,IAAI2D,GAAS,IACPlzE,KAAKmyE,cAAmBnyE,KAAKwW,gBAAgBwzD,MAAiBzvE,aAAeua,KAClC,IAA5C9U,KAAKd,QAAQwf,cAAc5E,MAAMrjB,QAAiBo4C,GAAW7uC,KAAKd,QAASc,KAAKmyE,iBACjFe,GAAS,GAEblzE,KAAKd,QAAQgzE,qBAAqBlyE,KAAKmyE,aAAcrjC,iBAAeC,MAAOmkC,GAC/D,OAAR34E,GAAgByF,KAAKmyE,eACrBnyE,KAAKmyE,aAAe,KACpBnyE,KAAKuzE,gBAETv9B,GAAQ,MAEP,CAOD,GANAh2C,KAAKuvE,UAAUlvE,SAAWL,KAAK+hE,gBACX,SAAhB/hE,KAAKuiB,SAAsBssB,GAAW7uC,KAAKd,QAASc,KAAKuvE,UAAUhtE,QAAQ,IAC3EvC,KAAKuvE,UAAUhtE,kBAAkByR,IACjChU,KAAKsyE,kBAAkBtyE,KAAK+hE,gBAAiB/hE,KAAKuvE,WAEtDvvE,KAAKyzE,cACD3lE,EAAEm2D,SAAWn2D,EAAE2+D,SAAU,CACzB,IAAInoC,EAAQx2B,EAAEm2D,SAAWn2D,EAAE2+D,UAAcxI,QAASn2D,EAAEm2D,QAASwI,SAAU3+D,EAAE2+D,WAAexI,SAAS,GACjGjkE,KAAKuvE,UAAUjrC,KAAOA,EAE1BtkC,KAAKozE,YAAY74E,GACjByF,KAAKsyE,kBAAkBtyE,KAAK+hE,gBAAiB/hE,KAAKuvE,UAAWvvE,KAAKuvE,UAAUhtE,QAC5EvC,KAAK0wE,eACL1wE,KAAKqhE,UAAW,EAChBrhE,KAAK6yE,iBAAmB,KACJ,SAAhB7yE,KAAKuiB,QAAqC,WAAhBviB,KAAKuiB,SAC/BviB,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,eAAiBC,gBAAc+7D,cAE9E1zE,KAAK+yE,gBAAgBjlE,EAAGvT,GAE5ByF,KAAKgiE,aAAehiE,KAAK+hE,gBACpB/hE,KAAK4wE,gBAAgB9iE,EAAE9K,QAAQ,IAChC8K,EAAEkkE,oBAKlB/C,EAAoB7+B,UAAU6iC,gBAAkB,SAAUnlE,GACtD,IAAI6lE,EAAqB3zE,KAAK4zE,gBAAgB9lE,GAC9C,IAAK6lE,GAAsB3zE,KAAKqvE,gBAC5BrvE,KAAKqvE,iBAAkB,EACvBwE,cAAc7zE,KAAK8zE,mBAElB,GAAIH,GACL,IAAK3zE,KAAKwW,gBAAgB8vD,IAAYtmE,KAAKwW,gBAAgBqyD,IACpD7oE,KAAKwW,gBAAgBotD,KAAe5jE,KAAKqhE,SAAU,CACtD,IAAI0S,EAAY/zE,KAEZA,KAAKd,QAAQ+7B,eAAe+3C,eAAiBW,IAAuB3zE,KAAKqvE,kBACzErvE,KAAKqvE,iBAAkB,EACvBrvE,KAAK8zE,aAAelC,YAAY,SAAU7xE,GACtCg0E,EAAUC,aAAaL,EAAoB7lE,EAJrC,MAAA,YAUlB9N,KAAKwhE,SAAYxhE,KAAKwW,KAAK2rD,UAAUniE,KAAKuvE,YAIlDN,EAAoB7+B,UAAUgyB,QAAU,SAAU8N,GAC9C,IAAIrmC,EAQJ,GAP0B,QAAtB7pC,KAAKd,QAAQ0sB,MAAkBzV,GAAanW,KAAKd,UACjDc,KAAK0xE,uBAET1xE,KAAKd,QAAQ+0E,uBAAyB,KACtCj0E,KAAKd,QAAQkjB,gBAAgBnK,gBACzBjY,KAAKd,QAAQg1E,kBAAkBl0E,KAAKd,QAAQkjB,gBAAgBnK,gBAAiBC,iBAAeC,oBAChG0xB,EAAUqmC,EAAIrmC,QACV7pC,KAAK+xE,YAGL,OAFA/xE,KAAK+xE,aAAc,OACnB7B,EAAI8B,iBAGR,IAAKhyE,KAAKiyE,qBAAqB/B,IAAS/4D,GAAgBnX,KAAKd,UACrDyX,GAAW3W,KAAKd,WAAa+X,GAAYjX,KAAKd,SAAW,CAC7D,GAAIc,KAAKwW,SAAWxW,KAAKwW,gBAAgB+0D,IAAsBvrE,KAAKwW,gBAAgBi1D,MAC9EzrE,KAAKwW,gBAAgB+0D,IAAsBvrE,KAAKwW,gBAAgBi1D,KAC5C,IAAfyE,EAAIiE,QAAgB,CAI3B,IAHKn0E,KAAK4wE,gBAAgBV,EAAIltE,SAAWhD,KAAKovE,aAC1CphD,SAASC,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,WAAWyrE,SAE5DtrE,KAAKqhE,UAA0B,IAAd6O,EAAIkE,OACF,SAAhBp0E,KAAKuiB,OAAmB,CACxBviB,KAAKuiB,OAAS,SACd,IAAIsS,EAAU70B,KAAKd,QAAQkyE,sBAAsBpxE,KAAK+hE,iBAClDxnE,EAAMyF,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,UACnEgT,GAAmB,GACjBnE,EAAIjM,SAAWjkE,KAAKovE,aAClBpvE,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAASuJ,KAAKd,QAAQwf,cAAcC,WAAWloB,OAAU,GAC7E,IAAdy5E,EAAIkE,Q9ClQnC,SAAyC18D,GACrC,SAAIA,EAAiBC,gBAAc28D,uB8CiQYC,CAAyBv0E,KAAKd,QAAQwY,kBAC7D28D,GAAmB,EACnBr0E,KAAKyd,eAAeP,kBAEnB2xB,GAAW7uC,KAAKd,QAAS3E,IAAU85E,GACpCr0E,KAAKyd,eAAe2mD,eAAe7pE,IAI/C,IAAIi6E,EAAYx0E,KAAKy0E,4BACjB5zD,OAAgB,EAQpB,GAPA7gB,KAAK00E,aACL10E,KAAKqhE,UAAW,EAChBrhE,KAAKovE,aAAc,EACnBpvE,KAAK+hE,gBAAkB/hE,KAAK2vE,iBAAiBO,GACzClwE,KAAKd,QAAQsf,eAAeC,eAC5BoC,EAAgB7gB,KAAK20E,yBAErB30E,KAAKwW,OAASxW,KAAKwW,KAAKwrD,cAAgBhiE,KAAKwW,gBAAgB40D,IAAY,CACzEprE,KAAKuvE,UAAUlvE,SAAWL,KAAK+hE,gBAC/B/hE,KAAKsyE,kBAAkBtyE,KAAK+hE,gBAAiB/hE,KAAKuvE,UAAWvvE,KAAKuvE,UAAUhtE,QAC5E,IAAI0hE,EAAUjkE,KAAK+wE,UAAUb,GAC7B,GAAIjM,GAAWiM,EAAIzD,SAAU,CACzB,IAAInoC,EAAQ2/B,GAAWiM,EAAIzD,UAAcxI,QAASA,EAASwI,SAAUyD,EAAIzD,WACnExI,SAAS,GACfjkE,KAAKuvE,UAAUjrC,KAAOA,EAM1B,GAJItkC,KAAKd,QAAQwY,eAAiBC,gBAAc+7D,eAC5C1zE,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,gBAAkBC,gBAAc+7D,cAE/E1zE,KAAKuvE,UAAUrL,WAAagM,EAAIiE,OAC5Bn0E,KAAKd,QAAQsf,eAAeC,eAAiBze,KAAKwW,gBAAgB8vD,IAAYtmE,KAAKwW,gBAAgBqyD,IAAa,CAChH,GAAI7oE,KAAKd,QAAQsf,eAAeI,cAC0B,KAAtD5e,KAAKd,QAAQsf,eAAeI,aAAa/C,SAAiB,CAC1D,IAAIoD,EAAajf,KAAKd,QAAQmhB,UAAUrgB,KAAKd,QAAQsf,eAAeI,aAAa/C,UAC7EoD,GAAcA,EAAWG,SACzBpf,KAAKyd,eAAeC,aAAc,GAG1C1d,KAAKwW,KAAK4rD,QAAQpiE,KAAKuvE,UAAWiF,EAAU5N,uBAG5C5mE,KAAKwW,KAAK4rD,QAAQpiE,KAAKuvE,WAEvBiF,EAAUI,UACV50E,KAAKd,QAAQye,iBAYrB,GATIkD,GACA7gB,KAAKd,QAAQye,iBAEjB3d,KAAK20E,uBAAsB,GACvB30E,KAAKd,QAAQsf,gBAAkBxe,KAAKd,QAAQsf,eAAeC,eAC3Dze,KAAKd,QAAQwtB,OAAO1sB,KAAKd,QAAQsf,eAAeC,cAChDze,KAAKd,QAAQsf,gBAAmBC,kBAAcxkB,EAAW2kB,kBAAc3kB,IAE3E+F,KAAKwhE,SAAU,EACXxhE,KAAKmyE,aAAc,CACnB,IAAIzwC,EAAiBoN,iBAAekL,QAChCnL,GAAW7uC,KAAKd,QAASc,KAAKmyE,gBAC9BzwC,GAAkBoN,iBAAeC,OAErC/uC,KAAKd,QAAQgzE,qBAAqBlyE,KAAKmyE,aAAczwC,GAAgB,GACrE1hC,KAAKmyE,aAAe,KAExBnyE,KAAK8yE,eAAiB,KACtB9yE,KAAKszE,cAAgB,KACftzE,KAAKwW,gBAAgBqzD,KACvB7pE,KAAKwW,KAAO,MAGfqzB,GACDqmC,EAAI8B,iBAERhyE,KAAKd,QAAQgwC,0BAAuBj1C,EACpC,IAAIsvC,EAAWvpC,KAAKd,QAAQwf,cAI5B,IAHK1e,KAAKqhE,UAAY93B,EAAS/6B,SAAW+6B,EAASkE,YAAYh3C,OAAS,GACpEuJ,KAAKd,QAAQ21E,gBAAe,IAE3B70E,KAAKqhE,WAAarhE,KAAKd,QAAQkhB,eAAiBpgB,KAAKuvE,UAAW,CACjE,IAAIxb,GACAn0D,QAASI,KAAKuvE,UAAUhtE,QAAUvC,KAAKd,QAASmB,SAAUL,KAAKuvE,UAAUlvE,SAAU4nB,MAAOioD,EAAIiE,OAC9Fv1D,aAAc5e,KAAKuvE,UAAU3wD,cAEjC5e,KAAKd,QAAQqmE,aAAalyB,eAAayhC,MAAO/gB,GAElD/zD,KAAKuvE,aAETvvE,KAAKuvE,aACLvvE,KAAKd,QAAQue,eAAeyqD,0BAEhC+G,EAAoB7+B,UAAU2kC,kBAAoB,SAAUC,GACxD,IAAIC,EACA9yE,EACA/D,EACAuH,EACAuvE,EAEAjlE,EADA6S,EAAQ,EAERqyD,EAAcH,EAAa52E,MAC3By2B,EAAU70B,KAAKsvE,aAAa8B,sBAAsBpxE,KAAK+hE,gBAAiB/hE,KAAKd,QAASc,KAAKuvE,UAAW,KAAMvvE,KAAKuiB,QAKrH,GAJKpgB,IACDA,EAAanC,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,WAE9ErhE,KAAKd,QAAQk2E,qBACTjzE,KAAgBA,EAAWid,QAAUjd,EAAWgiB,SAAWhiB,EAAW0b,UACtE,IAAK,IAAInnB,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAAK,CACrC,IAAIsuB,EAAWhlB,KAAKd,QAAQ0c,UAAUiZ,EAAQn+B,GAAGmJ,KAC7CmlB,EAAS5F,QAAU4F,EAASb,SAAWa,EAASnH,YAChD1b,EAAa6iB,GAIzB,GAAI7iB,IAAegzE,EAAYhxD,SAAYgxD,EAAY/1D,QAAUjd,EAAWid,QAAU,CAClF,IAAIvf,EAAKsC,EAAW0Z,SACpBo5D,EAAej1E,KAAKd,QAAQ0c,UAAU/b,GAO1C,GALIo1E,IACA72E,EAAQ62E,EAAa72E,MACrB82E,EAAaC,EAAkB,OAAIA,EAAY9jE,cAAgBjT,EAAMiT,YACjE8jE,EAAY9jE,cAAgBjT,EAAMiT,aAEtC6jE,GAAa/yE,EAAY,CAOzB,GANI/D,EAAM2kB,QAAU3kB,EAAM4kB,WAAmC,eAAtB5kB,EAAMiT,cACzCyR,EAAQ,GAER1kB,EAAM+kB,OAAO1sB,OAAS,IACtBqsB,GAAS,GAETqyD,EAAYhxD,QAAS,CAEjBlU,EADsB,eAAtB7R,EAAMiT,YACGrR,KAAK+hE,gBAAgB/qE,EAAIi+E,EAAazmE,QAAQhN,OAAOxK,EAGrDgJ,KAAK+hE,gBAAgB9qE,GAAKg+E,EAAazmE,QAAQhN,OAAOvK,EAAImH,EAAM2kB,OAAOzqB,QAEpF,IAAI6qB,GAAWtjB,GAAIua,KAAYnK,OAAQA,EAAQ8S,QAAUc,YAAc5jB,QAAS,WAChFD,KAAKd,QAAQm2E,UAAUJ,GAAe9xD,QAErC,CACgBgyD,EAAYr1D,MAAM,GAAGiD,OAAOzqB,OAA7C,IACIynB,GACAlgB,GAAIua,KAAYla,MAAOi1E,EAAYr1D,MAAM,GAAG5f,MAAO6iB,QAC/Cc,YACI5jB,QAASk1E,EAAYr1D,MAAM,GAAGiD,OAAOc,WAAW5jB,QAChDC,MAAOi1E,EAAYr1D,MAAM,GAAGiD,OAAOc,WAAW3jB,OAElDA,MAAOi1E,EAAYr1D,MAAM,GAAGiD,OAAO7iB,QAGM,eAA5Bi1E,EAAY9jE,YACjB0O,EAAKznB,OAAS68E,EAAYr1D,MAAM,GAAGxnB,OAASynB,EAAKxnB,MAAQ48E,EAAYr1D,MAAM,GAAGvnB,MACpE,eAAtB6F,EAAMiT,aACN1L,EAAQxD,EAAWga,SAAWha,EAAWga,SACrCnc,KAAKd,QAAQ0c,UAAUzZ,EAAW0Z,UAAUM,SAC5Cha,EAAWqM,QAAQxS,QAAUgE,KAAK+hE,gBAAgB9qE,IAClD0O,GAAS,KAIbA,EAAQxD,EAAWma,YAAcna,EAAWma,YACxCtc,KAAKd,QAAQ0c,UAAUzZ,EAAW0Z,UAAUS,YAC5Ctc,KAAK+hE,gBAAgB/qE,EAAImL,EAAWqM,QAAQhN,OAAOP,OAAOjK,IAC1D2O,GAAS,IAGbvH,EAAM0hB,MAAMrpB,OAAUkP,EAAQmd,GAC9B/C,EAAKgD,OAAOxqB,MAAQ6F,EAAM0hB,MAAMna,EAAQmd,GAAOC,OAAOxqB,MACtDwnB,EAAKgD,OAAOzqB,OAAS8F,EAAM0hB,MAAMna,EAAQmd,GAAOC,OAAOzqB,SAGvDynB,EAAKgD,OAAOxqB,MAAQ6F,EAAM0hB,MAAMna,EAAQmd,EAAQ,GAAGC,OAAOxqB,MAC1DwnB,EAAKgD,OAAOzqB,OAAS8F,EAAM0hB,MAAMna,EAAQmd,EAAQ,GAAGC,OAAOzqB,QAE/D0H,KAAKd,QAAQo2E,SAASL,GAAel1D,GAAOpa,EAAQmd,GAExD9iB,KAAKyd,eAAeZ,OAAOo4D,QAE1B,GAAIE,EAAY/1D,OAAQ,CACzB,IAAIm2D,GACA11E,GAAIua,KAAY7hB,MAAOy8E,EAAaz8E,MAAOD,OAAQ08E,EAAa18E,OAChE8F,OACIvC,KAAM,WAAYknB,QACdc,YAAc5jB,QAAS,UAAY3H,OAAQ,GAAI4H,MAAOi1E,EAAYr1D,MAAM,GAAGiD,OAAO7iB,OAEtFijB,SAAWtjB,GAAIua,KAAY2I,QAAUc,YAAc5jB,QAAS,YAC5D6f,QACQjgB,GAAIua,KAAY9hB,OAAQ08E,EAAa18E,OAAQC,MAAOy8E,EAAaz8E,MAAO2H,MAAOi1E,EAAYr1D,MAAM,GAAG5f,MACpG6iB,QACIc,YACI5jB,QAASk1E,EAAYr1D,MAAM,GAAGiD,OAAOc,WAAW5jB,QAChDC,MAAOi1E,EAAYr1D,MAAM,GAAGiD,OAAOc,WAAW3jB,OAElDA,MAAOi1E,EAAYr1D,MAAM,GAAGiD,OAAO7iB,SAEvCmR,YAAa8jE,EAAY9jE,cAGT,aAA5B8jE,EAAY9jE,cACZkkE,EAAYh9E,OAAS,IAEzBg9E,EAAYx5E,QAAUiE,KAAK+hE,gBAAgB/qE,EAAKu+E,EAAYh9E,MAAQ,EACpEg9E,EAAYv5E,QAAUgE,KAAK+hE,gBAAgB9qE,EAAKs+E,EAAYj9E,OAAS,EACrE0H,KAAKd,QAAQwsB,IAAI6pD,KAIzBtG,EAAoB7+B,UAAUqyB,WAAa,SAAUyN,GAKjD,GAHIlwE,KAAKwW,MAAQxW,KAAKqhE,UAClBrhE,KAAKwW,KAAKisD,WAAWziE,KAAKuvE,WAE1BvvE,KAAKd,QAAQsf,eAAeC,aAAc,CAC1Cze,KAAKy0E,4BACez0E,KAAK20E,yBAErB30E,KAAKd,QAAQye,iBAGjB3d,KAAKuvE,WAAavvE,KAAKuvE,UAAUhtE,SACjCvC,KAAKd,QAAQgzE,qBAAqBlyE,KAAKuvE,UAAUhtE,OAAQusC,iBAAeC,OAAO,GAC/E/uC,KAAKmyE,aAAe,MAEpBnyE,KAAKwW,gBAAgB8tD,IAAetkE,KAAKuvE,WAAavvE,KAAKuvE,UAAUvsE,QAAUhD,KAAKuvE,UAAUvsE,kBAAkB8R,KAChH9U,KAAKd,QAAQgzE,qBAAqBlyE,KAAKuvE,UAAUvsE,OAAQ8rC,iBAAeC,MAAQD,iBAAekL,SAAS,GACxGh6C,KAAKmyE,aAAe,MAExB,IAAI5oC,EAAWvpC,KAAKd,QAAQwf,cACxB6qB,GAAYA,EAAS/6B,SACrBxO,KAAKd,QAAQ21E,gBAAe,IAE5B70E,KAAKd,QAAQwY,eAAiBC,gBAAc+7D,cAAgB1zE,KAAKd,QAAQwY,eAAiBC,gBAAcC,cACxG5X,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,gBAAkBC,gBAAcC,YAE/E5X,KAAKovE,aAAc,EACnBpvE,KAAKsrE,OAAQ,EACbtrE,KAAK8yE,eAAiB,KACtB9yE,KAAKszE,cAAgB,KACrBtzE,KAAKyd,eAAemnD,aACpB5kE,KAAKqhE,UAAW,EAChBrhE,KAAKuvE,aACLvvE,KAAKwW,KAAO,K1C9qBpB,WACI,IACIg/D,EACA9+E,EAFA++E,EAAUznD,SAAS6Z,uBAAuB,oBAG9C,GAAI4tC,GAAWA,EAAQh/E,OAAS,EAC5B,IAAKC,EAAI++E,EAAQh/E,OAAS,EAAGC,GAAK,EAAGA,KACjC8+E,EAASC,EAAQ/+E,KAEb8+E,EAAOv2D,WAAW8f,YAAYy2C,G0CuqBtCE,GACoB,WAAhB11E,KAAKuiB,QACLviB,KAAKd,QAAQuwE,cAAc7zC,UAAUlP,OAAO,oBAEhDwjD,EAAI8B,kBAGR/C,EAAoB7+B,UAAUoyB,WAAa,SAAU0N,GACjD,IAAIyF,EAAMzF,EAAI0F,WAAa,IAAM,GAAK1F,EAAIiE,OAAS,EAC/CjgD,EAAgBl0B,KAAK2vE,iBAAiBO,GAC1ClwE,KAAKd,QAAQsB,cAAcV,QAE3B,GADcE,KAAK+wE,UAAUb,GAEzBlwE,KAAKd,QAAQ+qE,KAAK0L,MAAa,MAAWzhD,GAC1Cg8C,EAAI8B,qBAEH,CACD,IAAI3iD,EAAmBrvB,KAAKd,QAAQmjB,SAASgN,iBACzCE,EAAiBvvB,KAAKd,QAAQmjB,SAASkN,eACvC85C,EAASsM,EAAK,IAAM,GACpB31E,KAAKwW,OAASxW,KAAKwW,gBAAgB+0D,IAAsBvrE,KAAKwW,gBAAgBi1D,MAC9EzrE,KAAKuvE,aACLvvE,KAAKsyE,kBAAkBp+C,EAAel0B,KAAKuvE,WAC3CvvE,KAAKuvE,UAAUlvE,SAAW6zB,EAC1Bl0B,KAAKwW,KAAKgsD,WAAWxiE,KAAKuvE,YAE1BW,EAAIzD,SACJzsE,KAAKd,QAAQmjB,SAAS4nD,KAAK,EAAGZ,EAAQ,EAAGn1C,GAGzCl0B,KAAKd,QAAQmjB,SAAS4nD,KAAK,EAAG,EAAGZ,EAAQn1C,GAEzC7E,IAAqBrvB,KAAKd,QAAQmjB,SAASgN,kBACxCE,IAAmBvvB,KAAKd,QAAQmjB,SAASkN,gBAC5C2gD,EAAI8B,iBAGZ,GAAIhyE,KAAKd,QAAQqzE,YAAa,CAE1B,GADAvyE,KAAKd,QAAQ22E,gBAAiB,EAC1B71E,KAAKd,QAAQ42E,YAAYj6D,SAAU,CACnC,IAAItb,EAAOP,KAAKd,QAAQmhB,UAAUrgB,KAAKd,QAAQ42E,YAAYj6D,UAC3D7b,KAAKd,QAAQ62E,cAAcx1E,EAAMP,KAAKd,QAAQ42E,YAAYj2E,IAE9DG,KAAKd,QAAQ22E,gBAAiB,IAItC5G,EAAoB7+B,UAAU4lC,QAAU,SAAU9F,GAC9C,KAAMlwE,KAAKd,QAAQwY,eAAiBC,gBAAc+3D,YAC5C1vE,KAAKiyE,qBAAqB/B,IAAsB,WAAZA,EAAIpzC,KAAoC,KAAhBozC,EAAI+F,QAAiB,CACnF,IACIl/E,OAAU,EACVm/E,EAAUhG,EAAI+F,QAAU/F,EAAI+F,QAAU/F,EAAIkE,MAC1Ct3C,EAAMozC,EAAIpzC,IACVmnC,EAAUjkE,KAAK+wE,UAAUb,GAC7B,GAAIlwE,KAAKd,QAAQ46B,gBAAkB95B,KAAKd,QAAQrH,SAE5C,IAAK,IADDA,EAAWmI,KAAKd,QAAQrH,SACnBgF,EAAK,EAAGohB,EAAKC,OAAOC,KAAKtmB,GAAWgF,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC/D,IAAI6oB,EAAMzH,EAAGphB,GAEb,IADA9F,EAAUiJ,KAAKd,QAAQrH,SAAS6tB,MAChB3uB,EAAQo/E,QAAQC,cAAgBr/E,EAAQo/E,QAAQr5C,OACvDo5C,IAAYn/E,EAAQo/E,QAAQr5C,KAAQA,IAAQqW,OAAKp8C,EAAQo/E,QAAQr5C,MAC/D98B,KAAKsxE,YAAYx0C,EAAKpX,OAClB3uB,EAAQo/E,QAAQC,eAAmBlG,EAAImG,SAAanG,EAAIzD,WAAexI,GACzEltE,EAAQo/E,QAAQC,eAAiBnS,GAAWiM,EAAImG,QAAUnG,EAAIzD,WAC1DzsE,KAAKs2E,cAAcv/E,EAAQo/E,QAAQC,eAAiBlG,EAAImG,QACxDr2E,KAAKu2E,gBAAgBx/E,EAAQo/E,QAAQC,eAAiBlG,EAAIzD,UAC1DzsE,KAAKw2E,eAAez/E,EAAQo/E,QAAQC,eAAiBnS,GAAY,CAC1E,IAAIjqC,EAAa3J,GAAYt5B,EAAQijC,YACrC,GAAIA,GAAcA,GACdy8C,iBAAoBC,cACpBC,UAAW5/E,EAAQ4/E,YACnB,CAEA,GADAzG,EAAI8B,iBACY,WAAZ9B,EAAIpzC,IACJ,GAAI98B,KAAKiyE,qBAAqB/B,GAC1BliD,SAASC,eAAejuB,KAAKd,QAAQuwE,cAAc5vE,IAAIyrE,aAEtD,GAAItrE,KAAKd,QAAQkhB,cAAe,CAIjCpgB,KAAKd,QAAQ2tB,gBAAgB7sB,KAAKd,QAAQkhB,eAC1CpgB,KAAKd,QAAQ4tB,uBAAuB9sB,KAAKd,QAAQ0c,UAAU5b,KAAKd,QAAQkhB,cAAcvgB,KACtFG,KAAKd,QAAQqhB,eAAevgB,KAAKd,QAAQkhB,eACzC4V,GAAiBh2B,KAAKd,QAAQkhB,cAAepgB,KAAKd,gBAC3Cc,KAAKd,QAAQ0c,UAAU5b,KAAKd,QAAQkhB,cAAcvgB,IACrCG,KAAKd,QAAQ03E,UAAgB,cACnCC,UAAoB,aAClC,IAAIj3E,EAAUI,KAAKd,QAAQ03E,UAAyB,gBACpDh3E,EAAQqf,WAAW8f,YAAYn/B,GAC/B,IAAI8X,EAAiB1X,KAAKd,QAAQwY,eAClC1X,KAAKd,QAAQwY,eACT1X,KAAKd,QAAQ43E,eAAep/D,EAAgBC,gBAAc28D,uBAC9Dt0E,KAAKwW,KAAK4rD,QAAQpiE,KAAKuvE,WACvBvvE,KAAKd,QAAQkjB,gBAAgBnK,gBAAkBjY,KAAKd,QAAQg1E,kBAAkBl0E,KAAKd,QAAQkjB,gBAAgBnK,gBAAiBC,iBAAeC,oBACvInY,KAAKd,QAAQ+0E,wBACbj0E,KAAKd,QAAQ2d,OAAO7c,KAAKd,QAAQ+0E,wBAErCj0E,KAAKuiB,OAAS,SACdviB,KAAKd,QAAQ+0E,uBAAyB,KACtCj0E,KAAKd,QAAQkhB,cAAgB,KAC7BpgB,KAAKd,QAAQwY,eACT1X,KAAKd,QAAQg1E,kBAAkBx8D,EAAgBC,gBAAc28D,uBACjEt0E,KAAKovE,aAAc,EAG3B,GAAIr4E,EAAQgjC,QAAS,CAIH1J,GAAYt5B,EAAQgjC,QAClCA,EAAU08C,iBAAoBC,cAAeC,UAAW5/E,EAAQ4/E,YAGpE,WAQ5B1H,EAAoB7+B,UAAUwjC,gBAAkB,SAAU9lE,GACtD,IAAIzN,EAAWL,KAAK2vE,iBAAiB7hE,GACrCzN,EAASrJ,GAAKgJ,KAAKd,QAAQmjB,SAAS8N,YACpC9vB,EAASpJ,GAAK+I,KAAKd,QAAQmjB,SAAS8N,YACpC,IACI4mD,EADA7oD,EAAYC,GAAanuB,KAAKd,SAE9B83E,EAAmBh3E,KAAKd,QAAQ+7B,eAAe+7C,iBAiBnD,OAhBIh3E,KAAKd,QAAQ+7B,eAAe+3C,gBACxB3yE,EAASrJ,EAAIgJ,KAAKd,QAAQmjB,SAASgN,iBAAmB2nD,EAAiBn0E,MAAQqrB,EAAU31B,OACzFyH,KAAKd,QAAQmjB,SAASyN,cAAgB,GACtCinD,EAAiB,QAEZ12E,EAASrJ,EAAIgJ,KAAKd,QAAQmjB,SAASgN,iBAAmB2nD,EAAiBp0E,KAC5Em0E,EAAiB,OAEZ12E,EAASpJ,EAAI+I,KAAKd,QAAQmjB,SAASkN,eAAiBynD,EAAiBl0E,OAASorB,EAAU51B,OAC7F0H,KAAKd,QAAQmjB,SAASwN,eAAiB,GACvCknD,EAAiB,SAEZ12E,EAASpJ,EAAI+I,KAAKd,QAAQmjB,SAASkN,eAAiBynD,EAAiBj0E,MAC1Eg0E,EAAiB,QAGlBA,GAEX9H,EAAoB7+B,UAAU4jC,aAAe,SAAUl/C,EAAQhnB,EAAGmpE,EAAOC,GACrE,IAAI72E,EAAWy0B,EACf,IAAK90B,KAAKwW,gBAAgB8vD,IAAYtmE,KAAKwW,gBAAgBqyD,IACpD7oE,KAAKwW,gBAAgBotD,KAAe5jE,KAAKqhE,SAAU,CACtD,IACIjK,EAAMp3D,KAAK2vE,iBAAiB7hE,GAG5BlL,GAFmB5C,KAAKd,QAAQ+7B,eAAe+7C,iBAExC,GACPtpE,EAAQ,EACR/R,GAAU3E,EAAGogE,EAAIpgE,EAAGC,EAAGmgE,EAAIngE,GAC/B,OAAQoJ,GACJ,IAAK,QACD1E,EAAM3E,EAAIogE,EAAIpgE,EAAI,GAClB4L,EAAO,GACP,MACJ,IAAK,OACDjH,EAAM3E,EAAIogE,EAAIpgE,EAAI,GAClB4L,GAAQ,GACR,MACJ,IAAK,SACDjH,EAAM1E,EAAImgE,EAAIngE,EAAI,GAClByW,EAAQ,GACR,MACJ,IAAK,MACD/R,EAAM1E,EAAImgE,EAAIngE,EAAI,GAClByW,GAAS,GAGjB1N,KAAKuvE,UAAUlvE,UAAarJ,EAAG2E,EAAM3E,EAAGC,EAAG0E,EAAM1E,GACjD+I,KAAKwW,KAAK2rD,UAAUniE,KAAKuvE,WACzBvvE,KAAKd,QAAQmjB,SAAS4nD,KAAK,GAAIrnE,GAAO8K,EAAO0pD,KAGrD6X,EAAoB7+B,UAAUqjC,YAAc,WAExC,IAAK,IADDzwE,EAAShD,KAAKd,QAAQkyE,sBAAsBpxE,KAAK+hE,iBAC5CrrE,EAAI,EAAGA,EAAIsM,EAAOvM,OAAQC,IAC3BsJ,KAAKuvE,UAAU3wD,eAAiB5b,EAAOtM,IACvCsM,EAAOuD,OAAO7P,EAAG,GAGzB,IAAIq9D,GACAojB,QAASn0E,EACTpD,QAAUI,KAAKuvE,UAAUhtE,SAAWvC,KAAKuvE,UAAU3wD,kBAAgB3kB,EAAY+F,KAAKuvE,UAAUhtE,OAC9Fqc,aAAc5e,KAAKuvE,UAAU3wD,cAEjC,GAAI5e,KAAKo3E,wBAA0Bp3E,KAAKuvE,UAAU3wD,cAAiB5e,KAAKo3E,uBAAyBp3E,KAAKuvE,UAAU3wD,cAAgB,CAC5H,IAAImpD,GAAUoP,aAASl9E,EAAW2F,QAASI,KAAKo3E,qBAAsBx4D,kBAAc3kB,GACpF+F,KAAKd,QAAQqmE,aAAalyB,eAAaovB,WAAYsF,GACnD/nE,KAAKo3E,qBAAuB,OAE3Bp3E,KAAKo3E,sBAAwBp3E,KAAKuvE,UAAUhtE,QAAWvC,KAAKo3E,uBAAyBp3E,KAAKuvE,UAAU3wD,gBACrG5e,KAAKo3E,qBAAuBp3E,KAAKuvE,UAAU3wD,aAC3C5e,KAAKd,QAAQqmE,aAAalyB,eAAagkC,WAAYtjB,IAEnD/zD,KAAKuvE,UAAU3wD,cACf5e,KAAKd,QAAQqmE,aAAalyB,eAAa40B,UAAWlU,IAG1Dkb,EAAoB7+B,UAAUojC,aAAe,SAAUt/C,EAAeojD,GAClE,IAAKA,EAAa,CACd,IAAIC,EAAqBv3E,KAAKmyE,wBAAwBr9D,IAClD9U,KAAKmyE,aAAa3+D,YAAcK,kBAAgBzU,SAC9CY,KAAKmyE,wBAAwBx+D,IAAc3T,KAAKmyE,aAAa3+D,YAAcI,uBAAqBxU,QACtGkB,EAAcN,KAAKd,QAASq4E,EAAmBv3E,KAAKmyE,kBAAel4E,GACnE,IAAIgW,EAASgkB,GAAiBj0B,KAAKd,QAASg1B,EAAel0B,KAAKmyE,cAChEnyE,KAAKd,QAAQsB,cAAcV,QAC3BE,KAAKd,QAAQsB,cAAczE,QAAUkU,EAAOjZ,EAC5CgJ,KAAKd,QAAQsB,cAAcxE,QAAUiU,EAAOhZ,EAC5C+I,KAAKd,QAAQsB,cAAc8vB,W9CtzBvC,SAAiC/vB,EAAMrB,GACnC,IAAIw2B,EAAQ,EAiBZ,OAhBIn1B,aAAgBoT,GACZpT,EAAKiT,YAAcI,uBAAqBxU,QACxCs2B,EAAQn1B,EAAKiT,YAAcI,uBAAqBxU,QAE3CmB,EAAKiT,YAAcI,uBAAqBwgB,iBAC7CsB,EAAQx2B,EAAQsU,YAAc4C,qBAAmBhX,SAIjDmB,EAAKiT,YAAcK,kBAAgBzU,QACnCs2B,EAAQn1B,EAAKiT,YAAcK,kBAAgBzU,QAEtCmB,EAAKiT,YAAcK,kBAAgBugB,iBACxCsB,EAAQx2B,EAAQsU,YAAc4C,qBAAmBhX,SAGlDs2B,E8CqyBK8hD,CAAiBx3E,KAAKmyE,aAAcnyE,KAAKd,UACzCc,KAAKd,QAAQsB,cAAc6qE,KAAKrrE,KAAKd,QAAQU,WAIzDqvE,EAAoB7+B,UAAUmjC,aAAe,WACzCvzE,KAAKd,QAAQsB,cAAcV,SAE/BmvE,EAAoB7+B,UAAUkmC,cAAgB,SAAUmB,GACpD,SAAIA,EAAcvkC,eAAawkC,MAKnCzI,EAAoB7+B,UAAUomC,eAAiB,SAAUiB,GACrD,SAAIA,EAAcvkC,eAAaykC,UAKnC1I,EAAoB7+B,UAAUmmC,gBAAkB,SAAUkB,GACtD,SAAIA,EAAcvkC,eAAa0kC,QAMnC3I,EAAoB7+B,UAAUynC,SAAW,SAAU3H,GAC/ClwE,KAAKd,QAAQ44E,sBAGjB7I,EAAoB7+B,UAAU2nC,YAAc,SAAU7H,GAClD,GAAI/4D,GAAgBnX,KAAKd,SAAU,CAC/B,IAAI2kB,OAAa,EACbgR,EAAU70B,KAAKd,QAAQkyE,sBAAsBpxE,KAAK+hE,iBAClDxnE,EAAMyF,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,UACvE,GAAY,OAAR9mE,GAAgB4c,GAAgBnX,KAAKd,SAGrC,GAFA2kB,EACa7jB,KAAKd,QAAQwzE,sBAAsBn4E,EAAKyF,KAAK+hE,iBACtD/hE,KAAKwW,OAASxW,KAAKwW,gBAAgB+0D,IAAsBvrE,KAAKwW,gBAAgBi1D,IAAsB,CAExFlxE,GAAOyF,KAAKd,QAAmBc,KAAK+hE,gBAAwBmO,EAAIiE,OAE5En0E,KAAKwW,KAAK4rD,QAAQpiE,KAAKuvE,WACvBvvE,KAAKovE,aAAc,EACnBpvE,KAAKuvE,aACLvvE,KAAKwW,KAAO,KACZ05D,EAAI8B,qBAEH,CACD,IAAI9pC,EAAQloC,KAAKd,QAAQue,eAAeu6D,eAAez9E,EAAIsF,IAC3D,GAAIqoC,IAAUA,EAAM+vC,MAAQ/vC,EAAMtK,WACxB59B,KAAKd,QAAQwY,eAAiBC,gBAAc+3D,UAAW,CACzD,IAAI7vE,EAAK,GACe,mBAApBtF,EAAI6D,MAAMA,QACVyB,EAAKtF,EAAIsF,GAAGkP,MAAM,oBAAoB,IAE1C/O,KAAKd,QAAQ62E,cAAcx7E,EAAKsF,IAAOgkB,aAAsBS,GACxDT,EAAa,GAAE9U,MAAMxU,EAAIsF,GAAK,KAAK,QAAK5F,KAK7D,IAAI85D,GACAxxD,OAAQhI,GAAOyF,KAAKd,QAASmB,SAAUL,KAAK+hE,gBAAiB95C,MAAOioD,EAAIiE,QAE5En0E,KAAKd,QAAQqmE,aAAalyB,eAAa0kC,YAAahkB,KAM5Dkb,EAAoB7+B,UAAU8nC,UAAY,SAAUC,EAAcj5E,GAC9D,IAAI3E,EAAM49E,EACV,OAAIz8D,GAAuB1b,KAAKd,QAAS3E,GAAK,GACnCA,EAEJ,MAKX00E,EAAoB7+B,UAAUgoC,YAAc,SAAUlI,GAClD,IACIh3D,EAEAm/D,EACAC,EACA/3E,EACAjI,EACAC,EACAggF,EAEAC,EACA77D,EACA87D,EAAczqD,SAASC,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,YAChE64E,EAAiB1qD,SAASC,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,mBACnE4a,EAAQg+D,EAAiB,MACzBzkD,EAAOvZ,EAAK1L,MAAM,SACtBxO,EAAQP,KAAKd,QAAQwf,cAAc5E,MAAM,GAAM9Z,KAAKd,QAAQwf,cAAc5E,MAAM,GAAK9Z,KAAKd,QAAQwf,cAAcC,WAAW,KAC7G3e,KAAKwW,gBAAgBqzD,IAAwC,aAApBtpE,EAAKnC,MAAMvC,QAC9D0E,EAAOP,KAAKd,QAAQ0c,UAAU5b,KAAKd,QAAQ42E,YAAYj6D,WAEvDtb,IAA8B,SAApBA,EAAKnC,MAAMvC,MAAmB0E,EAAK6Y,YAAY3iB,OAAS,GAA2B,SAApB8J,EAAKnC,MAAMvC,QACpFy8E,EAAct4E,KAAKd,QAAQijD,WAAW5hD,EAAKiO,QAASxO,KAAKd,QAAQ42E,YAAYj2E,IAE7EqZ,GADAA,EAAW3Y,EAAKiO,QAAQhN,OAAOjJ,MAAQ+/E,EAAY92E,OAAOjJ,MAAQgI,EAAKiO,QAAQhN,OAAOjJ,MAAQ+/E,EAAY92E,OAAOjJ,OAtBtG,GAuBsB2gB,EAvBtB,GAwBXq/D,EAAavyC,GAAgBsyC,EAAYp4E,MAAOua,OAAMxgB,OAAWA,EAAWif,GAC5Em/D,EAAWlgF,OAAQsgF,EAAYv4E,MAAc,SAAE6O,MAAM,MAAM,IACvDilB,EAAKv9B,OAAS,GAA+B,KAA1Bu9B,EAAKA,EAAKv9B,OAAS,KACtC8hF,EAAWjgF,OAASigF,EAAWjgF,OAAS+/E,GAE5CG,EAAax4E,KAAKd,QAAQmjB,SAASxc,UACnC8W,EAAQtF,GAAgBrX,KAAKd,SAAWs5E,EAAW77D,MAAQ,EAE3DpkB,GAhCW,IA+BXA,EAAQggF,EAAWhgF,OA/BR,GAgC8BA,GAASokB,EAClDrkB,GA/BY,GA+BWigF,EAAWjgF,OA/BtB,GA+B4CigF,EAAWjgF,QAAUqkB,EAC7E+7D,EAAex4E,MAAM0C,MAAW01E,EAAY92E,OAAOP,OAAOjK,EAAIwhF,EAAW12B,IAAM02B,EAAW77D,MAASpkB,EAAQ,EAAK,IAAO,KACvHmgF,EAAex4E,MAAM6C,KAAUu1E,EAAY92E,OAAOP,OAAOhK,EAAIuhF,EAAWz2B,IAAMy2B,EAAW77D,MAASrkB,EAAS,EAAK,EAAK,KACrHogF,EAAex4E,MAAM3H,MAAQA,EAAQ,KACrCmgF,EAAex4E,MAAM5H,OAASA,EAAS,KACvCmgF,EAAYv4E,MAAMma,UAAYA,OAC9Bo+D,EAAYv4E,MAAM2e,SAAWA,OAC7B45D,EAAYv4E,MAAM3H,MAAQA,EAAQ,KAClCkgF,EAAYv4E,MAAM5H,OAASA,EAAS,OAM5C22E,EAAoB7+B,UAAUuoC,cAAgB,SAAUp4E,EAAMq4E,GAC1D,SAAI54E,KAAKwW,gBAAgBqzD,IAAmB+O,KACxC54E,KAAKwW,KAAO,KACRjW,IAAWsW,GAAkB7W,KAAKd,WAClCc,KAAKd,QAAQiyB,mBAAgBl3B,EAC7B+F,KAAKd,QAAQgwC,0BAAuBj1C,KAEpCkoC,GAAwBniC,KAAKd,QAAQ4a,MAAOvZ,EAAKV,KACjDsiC,GAAwBniC,KAAKd,QAAQyf,WAAYpe,EAAKV,KACrDG,KAAKd,QAAQ8nD,YAAchnD,KAAKd,QAAQ8nD,WAAW6xB,yBAAyBv4D,QAAQ/f,IAAS,KAO1G0uE,EAAoB7+B,UAAU6hC,qBAAuB,SAAU/B,GAC3D,SAAKA,EAAIltE,QAAUktE,EAAIltE,OAAOnD,KAAOG,KAAKd,QAAQU,QAAQC,GAAK,aAKnEovE,EAAoB7+B,UAAUkiC,kBAAoB,SAAUjyE,EAAUN,EAAMwC,GACxExC,EAAKM,SAAWA,EAChB,IAAI9F,EACAs6B,EACCtyB,GAiBDsyB,EAAU70B,KAAKd,QAAQkyE,sBAAsBpxE,KAAK+hE,gBAAiBx/D,GACnEhI,EAAMyF,KAAKd,QAAQ45E,2BAA2BjkD,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,SAAUthE,EAAKM,SAAUkC,IAjB9E,SAAhBvC,KAAKuiB,QAAqC,uBAAhBviB,KAAKuiB,QAAmD,eAAhBviB,KAAKuiB,QACvD,eAAhBviB,KAAKuiB,QAA2C,sBAAhBviB,KAAKuiB,QAAkD,sBAAhBviB,KAAKuiB,QAC5D,uBAAhBviB,KAAKuiB,SAAsE,IAAnCviB,KAAKuiB,OAAOjC,QAAQ,YAAuD,IAAnCtgB,KAAKuiB,OAAOjC,QAAQ,WACpG/lB,EAAMyF,KAAKd,QAAQwf,eACd1e,KAAKd,QAAQkhB,eAAiC,SAAhBpgB,KAAKuiB,QAAqBhoB,GAAOyF,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAAS,GACvD,aAAnDuJ,KAAKd,QAAQwf,cAAc5E,MAAM,GAAG1b,MAAMvC,OAC1Cg5B,EAAU70B,KAAKd,QAAQkyE,sBAAsBpxE,KAAK+hE,iBAClDxnE,EAAMyF,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,aAIvExsC,EAAU70B,KAAKd,QAAQkyE,sBAAsBpxE,KAAK+hE,iBAClDxnE,EAAMyF,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,WAOvE9mE,GAAOA,EAAIsjB,WACXtjB,EAAMyF,KAAKd,QAAQ0c,UAAUrhB,EAAIshB,UACjC7b,KAAKuvE,UAAU3wD,aAAerkB,GAElC,IAAIiU,EAeJ,OAdIjU,IACAiU,EAAUxO,KAAKd,QAAQwzE,sBAAsBn4E,EAAKyF,KAAK+hE,kBAEtDx/D,GAKDxC,EAAKiD,OAASzI,EACdwF,EAAK2B,cAAgB8M,IALrBzO,EAAKwC,OAAShI,EACdwF,EAAKiB,cAAgBwN,GAMzBzO,EAAK6e,aAAe5e,KAAKuvE,UAAU3wD,aACnC7e,EAAKsqE,aAAerqE,KAAK8yE,eACzB/yE,EAAKoqE,YAAcnqE,KAAKszE,cACjBvzE,GAGXkvE,EAAoB7+B,UAAU2oC,UAAY,WACtC/4E,KAAKuiB,OAAS,SACdviB,KAAKmyE,aAAe,KACpBnyE,KAAKmzE,UAAY,KACjBnzE,KAAKwW,KAAOxW,KAAKd,QAAQ0zE,QAAQ5yE,KAAKuiB,QACtCviB,KAAK0wE,gBAGTzB,EAAoB7+B,UAAUwiC,QAAU,SAAUrwD,GAC9C,OAAQA,GACJ,IAAK,SACD,OAAO,IAAIqhD,GAAW5jE,KAAKyd,gBAAgB,GAC/C,IAAK,OACD,OAAO,IAAI6oD,GAAStmE,KAAKyd,gBAC7B,IAAK,SACD,OAAO,IAAI4qD,GAAWroE,KAAKyd,gBAC/B,IAAK,kBACD,OAAO,IAAIytD,GAAWlrE,KAAKyd,gBAC/B,IAAK,YACD,OAAO,IAAI2tD,GAAUprE,KAAKyd,gBAC9B,IAAK,kBACL,IAAK,kBACL,IAAK,kBACL,IAAK,kBACL,IAAK,cACL,IAAK,cACL,IAAK,aACL,IAAK,aACD,OAAO,IAAIorD,GAAW7oE,KAAKyd,eAAgB8E,GAC/C,IAAK,qBACL,IAAK,qBACL,IAAK,oBACL,IAAK,oBACD,OAAO,IAAI+hD,GAAYtkE,KAAKyd,eAAgB8E,GAChD,IAAK,aACL,IAAK,aACD,OAAO,IAAI8pD,GAAiBrsE,KAAKyd,eAAgB8E,GACrD,IAAK,OACD,IACI1mB,EAAOq1B,GAAelxB,KAAKd,QAAQiyB,eACvC,GAAa,SAATt1B,GAA6D,SAA1CmE,KAAKd,QAAQiyB,cAAc/yB,MAAMvC,KACpD,OAAO,IAAIguE,GAAgB7pE,KAAKyd,gBAE/B,GAAa,SAAT5hB,GAA+D,YAA5CmE,KAAKd,QAAQiyB,cAAc/yB,MAAW,QAC5D4B,KAAKd,QAAQiyB,cAAc/yB,MAAY,OACzC,OAAO,IAAImtE,GAAmBvrE,KAAKyd,gBAElC,GAAa,SAAT5hB,GACK,SAATA,GAA+D,YAA5CmE,KAAKd,QAAQiyB,cAAc/yB,MAAW,OACrD4B,KAAKd,QAAQiyB,cAAc/yB,MAAY,OAC5C,OAAO,IAAIorE,GAAgBxpE,KAAKyd,eAAgBzd,KAAKd,QAAQiyB,eAE5D,GAAa,cAATt1B,GAA4D,aAApCmE,KAAKd,QAAQiyB,cAAct1B,KACxD,OAAO,IAAI4vE,GAAoBzrE,KAAKyd,gBAEnC,GAAa,cAAT5hB,EACL,OAAO,IAAI0oE,GAAqBvkE,KAAKyd,eAAgB,qBAAsBzd,KAAKd,QAAQiyB,eAE5F,MACJ,IAAK,MACD,OAAO,IAAI64C,GAAYhqE,KAAKyd,gBAAgB,GAChD,IAAK,YACD,OAAO,IAAIusD,GAAYhqE,KAAKyd,gBAAgB,GAChD,IAAK,WACD,OAAO,IAAI6oD,GAAStmE,KAAKyd,eAAgB,QAC7C,IAAK,WACD,OAAO,IAAI8mD,GAAqBvkE,KAAKyd,eAAgB,qBAAsBzd,KAAKd,QAAQiyB,eAC5F,IAAK,cACD,OAAO,IAAIyyC,GAAW5jE,KAAKyd,gBAAgB,EAAM,eACrD,IAAK,YACD,OAAO,IAAIkuD,GAAc3rE,KAAKyd,gBAClC,IAAK,uBACL,IAAK,uBACL,IAAK,uBACL,IAAK,uBACL,IAAK,mBACL,IAAK,mBACL,IAAK,kBACL,IAAK,kBACD,OAAO,IAAIsuD,GAAgB/rE,KAAKyd,eAAgB8E,GACpD,IAAK,cACD,OAAO,IAAI2pD,GAAgBlsE,KAAKyd,gBAKxC,OAAO,MAGXwxD,EAAoB7+B,UAAUhB,UAAY,SAAU7sB,GAChD,IAAIxV,EAAU/M,KAAKd,QAAQwf,cAAwB,WAC/C1e,KAAKd,QAAQwf,cAAclQ,QAAQ2D,SAAS,GAAKnS,KAAKd,QAAQwf,cAGlE,OAAO0wB,GAAU7sB,EAFEviB,KAAKd,QAAQwf,cAAwB,WACnD3R,EAAOG,YAAcH,EAAOI,gBAAmBJ,EAAOG,cAK/D+hE,EAAoB7+B,UAAUsiC,sBAAwB,SAAUn4E,EAAK8F,GACjE,OAAOL,KAAKsvE,aAAa0J,6BAA6Bz+E,EAAK8F,IAG/D4uE,EAAoB7+B,UAAUghC,sBAAwB,SAAU/wE,EAAUkC,GACtE,OAAOvC,KAAKsvE,aAAa8B,sBAAsB/wE,EAAUL,KAAKd,QAASc,KAAKuvE,UAAWhtE,IAG3F0sE,EAAoB7+B,UAAUihC,qBAAuB,SAAUx8C,EAAStS,EAAQ8+C,GAC5E,OAAOrhE,KAAKsvE,aAAa+B,qBAAqBrxE,KAAKd,QAAS21B,EAAStS,EAAQ8+C,EAAUrhE,KAAKuvE,UAAWvvE,KAAK+hE,kBAGhHkN,EAAoB7+B,UAAU6oC,qBAAuB,SAAUpkD,EAAStS,EAAQ8+C,EAAUhhE,EAAUkC,GAChG,OAAOvC,KAAKsvE,aAAa+B,qBAAqBrxE,KAAKd,QAAS21B,EAAStS,EAAQ8+C,EAAUrhE,KAAKuvE,UAAWlvE,EAAUkC,IAGrH0sE,EAAoB7+B,UAAUuiC,mBAAqB,SAAUp4E,EAAKiU,EAASnO,EAAU2C,GACjF,OAAOqqC,GAAmB9yC,EAAKiU,EAASxO,KAAK+hE,gBAAiB/hE,KAAKd,QAASc,KAAK8yE,eAAgB9yE,KAAKszE,cAAetwE,IAEzHisE,EAAoB7+B,UAAUukC,sBAAwB,SAAUuE,GAC5D,IAAIr4D,GAAgB,EACpB,GAAI7gB,KAAKd,QAAQsf,eAAeC,aAAc,CAC1C,IAAI06D,EAAgBn5E,KAAKwW,gBAAgBqyD,GACrCtuE,EAAMyF,KAAKd,QAAQsf,eAAeI,aAClCK,EAAajf,KAAKd,QAAQ0c,UAAUrhB,EAAIshB,UACxCq9D,EACAn8D,GAAuB/c,KAAKd,QAAS3E,EAAKyF,KAAK+hE,gBAAiBoX,MAG3Dl6D,GAAeA,GAAwC,aAA1BA,EAAW7gB,MAAMvC,OAC/CmE,KAAKd,QAAQof,oBAAoB/jB,GAErCsmB,EAAgBtF,GAAmBvb,KAAKd,QAAS3E,EAAKyF,KAAK+hE,gBAAiBoX,GAC5En5E,KAAKd,QAAQylE,kBACTpqE,EAAI6kB,QAAU7kB,EAAI4pB,WAClBnkB,KAAKd,QAAQge,iBACbld,KAAKyd,eAAeZ,OAAOtiB,KAIvC,OAAOsmB,GAEXouD,EAAoB7+B,UAAUqkC,0BAA4B,WACtD,IAAIh2D,EAEAm2D,EACAj2D,EAEApkB,EAJA6+E,GAAqB,EAGrBC,GAAW,EAEXC,GAAY1E,UAAU,EAAOhO,kBAAkB,GACnD,GAAI5mE,KAAKd,QAAQsf,eAAeC,aAAc,CAC1C,IAAIoW,EAAU70B,KAAKd,QAAQkyE,sBAAsBpxE,KAAK+hE,iBAClD/+D,EAAShD,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,UAa1E,GAZA5iD,EAAeze,KAAKd,QAAQsf,eAAeC,aAEpB,cADvBlkB,EAAMyF,KAAKd,QAAQsf,eAAeI,cAC1BxgB,MAAMvC,OACV8iB,EAAa2G,GAActlB,KAAKd,QAAS3E,EAAIiU,QAAQ2D,SAAS,KAE3C,aAAnB5X,EAAI6D,MAAMvC,MAAuBtB,EAAIshB,UACe,aAApD7b,KAAKd,QAAQmhB,UAAU9lB,EAAIshB,UAAUzd,MAAMvC,MACvCmH,aAAkB8R,IAAQ9U,KAAKd,QAAQmhB,UAAUrd,EAAO6Y,WACD,aAAvD7b,KAAKd,QAAQmhB,UAAUrd,EAAO6Y,UAAUzd,MAAMvC,OAC9CmH,EAAShD,KAAKd,QAAQmhB,UAAUrd,EAAO6Y,WAGpB,SAAvB7b,KAAKkvE,eAA4B30E,EAAIqe,WAAoC,WAAvBre,EAAIqe,UAAU/c,MAAqBtB,EAAIshB,UACrC,aAApD7b,KAAKd,QAAQmhB,UAAU9lB,EAAIshB,UAAUzd,MAAMvC,MAAuBmH,GAAUA,IAAWzI,GACvFyI,EAAO4V,WAAuC,WAA1B5V,EAAO4V,UAAU/c,MAAqBmH,EAAOoc,QACjE7kB,EAAI6kB,QAAUpc,EAAO6Y,WAAathB,EAAIshB,SACtCqL,GAAiBlnB,KAAKd,QAAS3E,EAAKyI,EAAQhD,KAAK+hE,iBACjDuX,EAAQ1S,kBAAmB,MAE1B,CACD,IAAI3nD,EAAajf,KAAKd,QAAQ0c,UAAUrhB,EAAIshB,YACvCoD,GAAeA,GAAwC,aAA1BA,EAAW7gB,MAAMvC,QAC/CtB,EAAIwB,QAAU0iB,EAAa1iB,QAC3BxB,EAAIyB,QAAUyiB,EAAaziB,QACvBzB,GAAOA,EAAI6D,OAA4B,kBAAnB7D,EAAI6D,MAAMvC,OAC9BtB,EAAIhC,MAAQkmB,EAAalmB,MACzBgC,EAAIjC,OAASmmB,EAAanmB,QAE9BiC,EAAI2S,YAAcuR,EAAavR,aAEnC,IAAIyV,OAAc,EAKlB,GAJI1D,GAAcA,EAAWrG,WAA2C,UAA9BqG,EAAWrG,UAAU/c,OAC3DmE,KAAKd,QAAQiiB,mBACbk4D,GAAW,IAEVr2E,GAAUic,GAAcA,EAAWrG,WAA2C,UAA9BqG,EAAWrG,UAAU/c,MAAoC,SAAhBmE,KAAKuiB,OAAmB,CAClH,IAAIO,EAAQ7D,EAAWzQ,QAAQ2D,SAASmO,QAAQ/lB,EAAIiU,SAEpD,GADAmU,GAAgBF,iBAAaxoB,EAAW+I,YAAQ/I,EAAWyoB,YAAaI,EAAOvgB,OAAQ+tC,GAAM/1C,IACzFuoB,GAAS,EAAG,CACZ,IAAI3Q,EAAW8M,EAAW9M,SAC1BA,EAAS5L,OAAO4L,EAASmO,QAAQ/lB,EAAIsF,IAAK,GAC1CG,KAAKd,QAAQ0c,UAAUrhB,EAAIsF,IAAIgc,SAAW,GAC1C+4D,GAAW,EACX31D,EAAWzQ,QAAQ2D,SAAS5L,OAAOuc,EAAO,IAwBlD,GArBAR,GAAiB/nB,EAAKyI,EAAQhD,KAAKd,QAASc,KAAKuiB,SACjDtD,EAAavD,GAAuB1b,KAAKd,QAAS3E,GAAOyF,KAAKd,QAAQ0c,UAAUrhB,EAAIshB,UAC/E7b,KAAKd,QAAQ0c,UAAUrhB,EAAIshB,WAAathB,IAC3B0kB,EAAWrG,WAA2C,WAA9BqG,EAAWrG,UAAU/c,OAC3DojB,EAAWzQ,QAAQ0K,SAAW+F,EAAW/F,SAAW+F,EAAWzQ,QAAQjC,WAAWhU,MAClF0mB,EAAWzQ,QAAQsQ,UAAYG,EAAWH,UAAYG,EAAWzQ,QAAQjC,WAAWjU,OACpF8gF,GAAqB,GAErB19D,GAAuB1b,KAAKd,QAAS3E,GAAK,IAAS0kB,GAA4C,WAA9BA,EAAWrG,UAAU/c,KACtFqjB,GAA0Blf,KAAKd,QAAS3E,GAGxC++E,EAAUt5E,KAAKu5E,gCAAgCt6D,EAAY1kB,EAAKokB,EAAYF,EAAc66D,GAE1F/+E,EAAI6D,MAAM0hB,OACV9f,KAAKw5E,oBAAoBj/E,GAEzB6+E,IACAn6D,EAAW/F,SAAW+F,EAAWzQ,QAAQ0K,cAAWjf,EACpDglB,EAAWH,UAAYG,EAAWzQ,QAAQsQ,eAAY7kB,GAEtD26E,EAAU,CACV50E,KAAKd,QAAQigB,mBAAmBF,MAC5BljB,QAASkjB,EAAWljB,QAASC,QAASijB,EAAWjjB,QAASzD,MAAO0mB,EAAW1mB,MAAOD,OAAQ2mB,EAAW3mB,OACtG4U,YAAa+R,EAAW/R,cAE5B,IAAIkQ,GACAvhB,KAAM,4BAA6B0hB,YAAcmF,iBAAazoB,EAAWsI,OAAQogB,EAAYpgB,QAC7F+a,WAAYqF,EAAatF,SAAU,YAEjCrd,KAAKd,QAAQwY,eAAiBC,gBAAc+I,UAC9C1gB,KAAKd,QAAQse,gBAAgBJ,GAGjC7iB,GAAOA,EAAIqe,YAAqC,UAAvBre,EAAIqe,UAAU/c,MACf,WAAvBtB,EAAIqe,UAAU/c,MAAsC,KAAjBtB,EAAIshB,YACpCthB,GAAOA,EAAI6D,OAA4B,kBAAnB7D,EAAI6D,MAAMvC,OAC9BtB,EAAIiU,QAAQmnC,iBAAkB,GAElC31C,KAAKd,QAAQigB,mBAAmB5kB,MAC5BwB,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,QAASzD,MAAOgC,EAAIhC,MAAOD,OAAQiC,EAAIjC,OAAQ4U,YAAa3S,EAAI2S,cAEnG3S,GAAOA,EAAI6D,OAA4B,kBAAnB7D,EAAI6D,MAAMvC,OAC9BtB,EAAIiU,QAAQmnC,iBAAkB,IAI1C74B,GAA2B6B,EAAY3e,KAAKd,SAC5Co6E,EAAQ1E,SAAWyE,EAEvB,OAAOC,GAEXrK,EAAoB7+B,UAAUopC,oBAAsB,SAAUj/E,GAC1D,IAAK,IAAI7D,EAAI,EAAGA,EAAK6D,EAAI6D,MAAM0hB,MAAY,OAAGppB,IAC1C,GAAI6D,EAAI6D,MAAM0hB,MAAMppB,GAAGyb,UAAY5X,EAAI6D,MAAM0hB,MAAMppB,GAAGyb,SAAS1b,OAAS,EACpE,IAAK,IAAIJ,EAAI,EAAGA,EAAIkE,EAAI6D,MAAM0hB,MAAMppB,GAAGyb,SAAS1b,OAAQJ,IAAK,CACzD,IAAIwJ,EAAKtF,EAAI6D,MAAM0hB,MAAMppB,GAAGyb,SAAS9b,GAAGwJ,GACpC+hB,EAAY5hB,KAAKd,QAAQ0c,UAAU/b,GACvC+hB,EAAU7lB,QAAU6lB,EAAUpT,QAAQzS,QACtC6lB,EAAU5lB,QAAU4lB,EAAUpT,QAAQxS,UAKtDizE,EAAoB7+B,UAAUmpC,gCAAkC,SAAUt6D,EAAY1kB,EAAKokB,EAAYF,EAAc66D,GACjH,GAA2B,eAAvBt5E,KAAKkvE,eAAyD,gBAAvBlvE,KAAKkvE,eAAsD,aAAnB30E,EAAI6D,MAAMvC,KAAqB,CAC9G,IAAImhB,EAAUC,GAAY1iB,GACtBqmB,GAAc,EAClB,GAAI3B,GAAcA,EAAWrG,WAA2C,SAA9BqG,EAAWrG,UAAU/c,KAAiB,CAC5E,IAAIuC,EAAkC,aAA1B6gB,EAAW7gB,MAAMvC,KACzB+c,EAAaxa,EAAQ6gB,EAAWzQ,QAAQ2D,SAAS,GAAK8M,EAAWzQ,QACjErC,EAAU/N,EAAQ6gB,EAAW7gB,MAAM+N,aAAUlS,EAC7CjD,EAAIioB,EAAWzQ,QAAQhN,OAAOxK,EAC9BC,EAAIgoB,EAAWzQ,QAAQhN,OAAOvK,EAClC,QAAwBgD,IAApBM,EAAI+hB,aAAmE,eAArC2C,EAAWrG,UAAUvH,cACrDjT,GAAS7D,EAAI4pB,UAAc/lB,GAA0B,IAAjB7D,EAAI4hB,WACJ,aAArC8C,EAAWrG,UAAUvH,eACfjT,GAAS7D,EAAI4hB,SAAW,GAAK5hB,EAAI+hB,YAAc,GAAOle,GAAS7D,EAAI6kB,QAAW,CAOrF,GANyC,eAArCH,EAAWrG,UAAUvH,aAAgC9W,EAAI4pB,SAAW5pB,EAAIiU,QAAQjW,MAAQgC,EAAI2e,WAC5F3e,EAAI2e,SAAW3e,EAAIiU,QAAQjW,MAC3BgC,EAAIiU,QAAQ0K,SAAW3e,EAAIiU,QAAQjW,OAEvCivB,GAAqBxnB,KAAKd,QAAS3E,EAAK0kB,EAAYR,GACpD7F,EAAUyD,kBAAkB9hB,EAAI+hB,YAAamC,EAAalmB,OAAO,EAAM4T,GACnE5R,EAAI4pB,QAAS,CACb,IAAItkB,EAAKof,EAAW7gB,MAAM+kB,OAAO5oB,EAAI+hB,aAAayG,OAAOljB,GACrDU,EAAOP,KAAKd,QAAQ0c,UAAU/b,GAC9BU,EAAK2Y,SAAWuF,EAAalmB,QAC7BgI,EAAK2Y,SAAWuF,EAAalmB,MAC7BgI,EAAKiO,QAAQ0K,SAAWuF,EAAalmB,OAGf,aAA1B0mB,EAAW7gB,MAAMvC,OACjBojB,EAAW1mB,MAAS0mB,EAAgB,MAAIrG,EAAUrgB,MAAQ0mB,EAAW1mB,MACrEkkB,GAAqBzc,KAAKd,QAAS+f,GACnCA,EAAWzQ,QAAQjW,MAAQ0mB,EAAW1mB,MACtComB,EAAa2G,GAActlB,KAAKd,QAAS0Z,EAAWre,EAAI4hB,qBAGtCliB,IAAjBM,EAAI4hB,WACTyE,GAAc,EACd4G,GAAqBxnB,KAAKd,QAAS3E,EAAK0kB,EAAYR,GACpD7F,EAAUgE,gBAAgBriB,EAAI4hB,SAAUsC,EAAanmB,QAAQ,EAAM6T,GACrC,aAA1B8S,EAAW7gB,MAAMvC,OACjBojB,EAAW3mB,OAAU2mB,EAAiB,OAAIrG,EAAUtgB,OAAS2mB,EAAW3mB,OACxE2mB,EAAWzQ,QAAQlW,OAAS2mB,EAAW3mB,OACvCqmB,EAAa2G,GAActlB,KAAKd,QAAS0Z,EAAWre,EAAI4hB,YAGlC,aAA1B8C,EAAW7gB,MAAMvC,OACjBy9E,EAAQ1S,kBAAmB,GAE/B5mE,KAAKd,QAAQigB,mBAAmBF,MAC5BljB,QAASkjB,EAAWljB,QAASC,QAASijB,EAAWjjB,QACjDkR,YAAa+R,EAAW/R,cAE5BlN,KAAKd,QAAQwd,KAAKuC,EAAYjoB,EAAIioB,EAAWzQ,QAAQhN,OAAOxK,EAAGC,EAAIgoB,EAAWzQ,QAAQhN,OAAOvK,QAGzFsD,GAAOA,EAAI6D,OAA4B,kBAAnB7D,EAAI6D,MAAMvC,OAC9BtB,EAAIiU,QAAQmnC,iBAAkB,GAElC31C,KAAKd,QAAQigB,mBAAmB5kB,MAC5BwB,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,QAASzD,MAAOgC,EAAIhC,MAAOD,OAAQiC,EAAIjC,OAAQ4U,YAAa3S,EAAI2S,cAEvG3S,EAAIiU,QAAQmnC,iBAAkB,EAIlC,GAFAp7C,EAAIiU,QAAQ6Q,QAAQ,IAAIC,GAAK/kB,EAAIiU,QAAQjW,MAAOgC,EAAIiU,QAAQlW,SAC5DiC,EAAIiU,QAAQ+Q,QAAQhlB,EAAIiU,QAAQgR,aACL,eAAvBxf,KAAKkvE,eAAyD,gBAAvBlvE,KAAKkvE,cAAiC,CAC7E,IAAI3xD,EAAaN,GAAY1iB,GACzB6iB,GACAC,SAAU,WACVxhB,KAAM,EAAgB,mBAAqB,qBAC3CyhB,WAAYN,EAASO,WAAYA,GAErCvd,KAAKd,QAAQse,gBAAgBJ,IAIrC,OADAN,GAA2B6B,EAAY3e,KAAKd,SACrCo6E,GAEXrK,EAAoB7+B,UAAUskC,WAAa,WACvC,IAAIn0E,EAAOP,KAAKd,QAAQwf,cAAc5E,MAAM,GACxC+a,EAAU70B,KAAKd,QAAQkyE,uBAAwBp6E,EAAGgJ,KAAK+hE,gBAAgB/qE,EAAI,GAAIC,EAAG+I,KAAK+hE,gBAAgB9qE,IACvG+L,EAAShD,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,UAK1E,GAJKr+D,IACD6xB,EAAU70B,KAAKd,QAAQkyE,uBAAwBp6E,EAAGgJ,KAAK+hE,gBAAgB/qE,EAAI,GAAIC,EAAG+I,KAAK+hE,gBAAgB9qE,IACvG+L,EAAShD,KAAKd,QAAQmyE,qBAAqBx8C,EAAS70B,KAAKuiB,OAAQviB,KAAKqhE,WAEtE9gE,GAAQA,EAAKqY,WAAqC,UAAxBrY,EAAKqY,UAAU/c,MAAoBmH,GAAUA,EAAO6Y,UAC3E7Y,EAAO6Y,WAAatb,EAAKV,GAAI,CAChC,IAAI45E,EAAYz2E,EACZkf,EAAaC,GAAmBniB,KAAKd,QAAQU,QAAQC,IAEzD,GADkBqiB,EAAW+L,eAAe/L,EAAWriB,GAAK,sBAC3C,CACb,IAAIijB,EAAQviB,EAAKiO,QAAQ2D,SAASmO,QAAQtd,EAAOwL,SAAW,EACxDmC,EAAO,IAAImE,GAAK9U,KAAKd,QAAS,SAC9BgB,OAAS6Y,KAAMxY,EAAKL,MAAM6Y,KAAMC,YAAa,aAC7CI,YAAapW,EAAOoW,YAAaO,kBAAmB,UAAWC,oBAAqB,UACpFpG,aAAcK,kBAAgBgF,QAAUhF,kBAAgBiF,cAAgBjF,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB2B,QACxI6E,UAAW,KACZ,GACH1J,EAAKyI,YAAY,GAAGnZ,QAAU,iBACrBw5E,EAAU55E,GAAGkP,MAAM,KAC5B4B,EAAK9Q,GAAKua,KAAazJ,EAAK9Q,GAC5B8Q,EAAKkL,SAAWtb,EAAKV,GACrB8Q,EAAKka,QAAU,EACfla,EAAK+1C,SAAW5jC,EAChB9iB,KAAKd,QAAQiiB,mBAEI5gB,EAAKiO,QAAQ2D,SAASmO,QAAQ3P,EAAKnC,SAGpDxO,KAAKd,QAAQwsB,IAAI/a,GACjB3Q,KAAKd,QAAQsuD,qBAAqBjtD,GAClCP,KAAKd,QAAQ2d,QAAQ7c,KAAKd,QAAQ0c,UAAUjL,EAAK9Q,MACjDG,KAAKd,QAAQye,iBACb3d,KAAKd,QAAQ62E,mBAIlB9G,KAIPO,GAA8B,WAC9B,SAASA,KA6TT,OA1TAA,EAAap/B,UAAUghC,sBAAwB,SAAUx1E,EAAIsD,EAASqwE,EAAWhtE,EAAQm3E,GAErF,IAAIvB,KACA51E,GAAUA,aAAkByR,IACxBzR,EAAOuX,MAAMrjB,OAAS8L,EAAOoc,WAAWloB,SAAW,IACnD8L,EAAUA,EAAOuX,MAAM,IAAMvX,EAAOoc,WAAW,IACpCxM,UAAuC,IAA3B5P,EAAO4P,SAAS1b,SACnC84E,EAAU3wD,aAAerc,GAWrC,IAAK,IAPDqW,EACApX,EACA+M,EACA7S,EAGAi+E,EADAC,KAEK/8E,EAAK,EAAGg9E,EAHF36E,EAAQ46E,cAAcC,YAAY,IAAIztE,GAAK1Q,EAAG5E,EAAI,GAAI4E,EAAG3E,EAAI,GAAI,IAAK,MAG7C4F,EAAKg9E,EAAWpjF,OAAQoG,IAAM,CAClE,IACIlB,EAAQC,EACZ4F,GAFIjH,EAAMs/E,EAAWh9E,IAER2R,QAAQxB,YACrB,IAAIgtE,GAAiBz/E,EAAe,aAAYiH,EAAOgC,cAAc7H,GACrE,IAAKpB,IAAQgI,GAAUrD,EAAQgwC,gCAAgCv7B,KAC1DpZ,aAAeoZ,GAAapZ,IAAQ2E,EAAQgwC,qBAA+B30C,EAAIiU,QAAQovB,QAAS,CAEjG,IADIsK,EAAQhpC,EAAQue,eAAeu6D,eAAez9E,EAAIsF,OACxCqoC,EAAM+vC,MAAQ/vC,EAAMtK,QAAS,CAEvC,GADA+7C,EAAcC,EAAc1xC,EAAMrd,QAAU+uD,EAAc1xC,EAAMrd,YAC5DtwB,EAAI2S,YAAa,CAEjB1L,EAASD,GADTqX,EAAYre,EAAIiU,SAEhB,IAAK,IAAIyP,EAAK,EAAGkd,EAAKviB,EAAUzG,SAAU8L,EAAKkd,EAAG1kC,OAAQwnB,IACtD1P,EAAQ4sB,EAAGld,GAEXlhB,EADArB,EAASL,MACckT,EAAMrB,YAAcqB,EAAMpB,iBAAkBoB,EAAMxS,QAASwS,EAAMvS,SACxFL,EAAQF,EAAuBC,EAAQE,GACnC2F,GAA4BgN,GAAO/K,cAAc7H,KACjDq+E,GAAgB,GAI5B,KAAKz3E,IAAwC,IAA7BssC,GAAW3vC,EAAS3E,KAC5B0Z,GAAuB1Z,KAClBA,aAAeoZ,GAAaye,GAAqB73B,EAAKqB,GAAMo+E,GAAe,CAC5E,IAAI7tE,EAAW5R,aAAeoZ,GAAapZ,EAAIo4B,YAAc,EAAI,EAEvD3yB,KAAK0yE,sBAAsBn4E,EAAKqB,EAAIuQ,IACpB,WAAX5R,EAAIsF,IACfijC,GAAavoC,EAAK,SAAUo/E,MAQxD,IAAK,IAAIv+C,EAAK,EAAGkqB,EAAKpmD,EAAQg8B,OAAQE,EAAKkqB,EAAG7uD,OAAQ2kC,IAGlD,IAAK,IAFD8M,EAAQod,EAAGlqB,GAENmqB,EAAK,EAAG00B,EADjB9B,EAAeA,EAAatyD,OAAO+zD,EAAc1xC,EAAMrd,aACP06B,EAAK00B,EAAexjF,OAAQ8uD,IAAM,CAC9E,IAAIhrD,EAEJ,GAAuB,UAFnBA,EAAM0/E,EAAe10B,IAEjBnnD,MAAMvC,MAAmBtB,EAAIksD,cAAgBvnD,EAAoB,aAAEsX,gBAAgB8vD,KACtFpnE,EAAoB,aAAEsX,gBAAgB8vD,IAAarwD,GAAa1b,IAAO,EACpEuoB,EAAQq1D,EAAa73D,QAAQphB,EAAQ0c,UAAUrhB,EAAIksD,cAC1C,GACT0xB,EAAa5xE,OAAOuc,EAAO,GAGnC,GAAuB,kBAAnBvoB,EAAI6D,MAAMvC,MAA4BtB,EAAIqe,WAAoC,UAAvBre,EAAIqe,UAAU/c,KAAkB,EACnFinB,EAAQq1D,EAAa73D,QAAQphB,EAAQ0c,UAAU1c,EAAQ0c,UAAUrhB,EAAIsF,IAAI2O,QAAQ2D,SAAS,GAAGtS,OACpF,GACTs4E,EAAa5xE,OAAOuc,EAAO,IAK3C,IAAK,IAAIpsB,EAAI,EAAGA,EAAIyhF,EAAa1hF,OAAQC,IAAK,CAC1C,IAAIwjF,EAAYh7E,EAAQ0c,UAAUu8D,EAAazhF,GAAGmlB,UAClD,GAAIq+D,EAEA,IAAK,IADDC,EAAcn6E,KAAK0yE,sBAAsBwH,EAAWt+E,GAC/CvF,EAAI,EAAGA,EAAI6jF,EAAUn+C,MAAMtlC,OAAQJ,IACxC,GAAI8jF,EAAYt6E,GAAG/H,MAAM,IAAMoiF,EAAUn+C,MAAM1lC,GAAGwJ,GAAK,KAAM,CACzD,IAAIsD,EAAO+2E,EAAUn+C,MAAM1lC,GAC3B,GAAI0hB,GAAQ5U,IAAkB0U,GAAQ1U,GAClC,OAAOg1E,EAKvB,KAAO+B,GAAW,CACd,IAAIp3D,EACJ,IAAe,KADXA,EAAQq1D,EAAa73D,QAAQ45D,IAK7B,MAHA/B,EAAa5xE,OAAOuc,EAAO,GAK/Bo3D,EAAYh7E,EAAQ0c,UAAUs+D,EAAUr+D,WAGhD,GAAI0zD,IAAcA,EAAUhtE,OACxB,IAAS7L,EAAI,EAAGA,EAAIyhF,EAAa1hF,OAAQC,IAAK,CAC1C,IAAIuoB,EAAa/f,EAAQ0c,UAAUu8D,EAAazhF,GAAGmlB,UACnD,GAAIoD,GAAwC,aAA1BA,EAAW7gB,MAAMvC,KAC/B,IAASxF,EAAI,EAAGA,EAAI8hF,EAAa1hF,OAAQJ,IAAK,CAC1B8hF,EAAa9hF,aACJsd,IACrBwkE,EAAa5xE,OAAO7P,EAAG,IAM3C,OAAOyhF,GAGX3I,EAAap/B,UAAUxkC,SAAW,SAAUusE,EAAcj5E,EAASqjB,GAC/D,IACIhiB,EADAgE,EAAYrF,EAAQwf,cAAcC,WAAW,GAajD,KAXApe,EAAkB,uBAAXgiB,EAAkCrjB,EAAQ0c,UAAUrX,EAAU0iB,UACjE1mB,EAAOrB,EAAQ0c,UAAUrX,EAAU9C,aACzBlB,EAAKkmD,WAAc0xB,EAAa1xB,YAAalmD,EAAKkmD,YAAc0xB,EAAa1xB,YACnFlmD,EAAKkmD,YAAc0xB,EAAa1xB,YAChC0xB,EAAe,MAEfA,GAAgBA,EAAat8D,UAC2B,kBAAxD3c,EAAQ0c,UAAUu8D,EAAat8D,UAAUzd,MAAMvC,OAC/Cs8E,EAAej5E,EAAQ0c,UAAUu8D,EAAat8D,YAGvC,uBAAX0G,GAAmChe,EAAU0iB,SAAU,CACvD,IAAI9kB,EAAajD,EAAQ0c,UAAUrX,EAAU0iB,UAC7C,GAAI9kB,GAAcA,EAAW/D,OAAqC,mBAA3B+D,EAAW/D,MAAMA,MAA6B,CACjF,IAAIyB,EAAK0E,EAAU1E,GAAGkP,MAAM,MACI,SAA1B5M,EAAW/D,MAAMvC,MAAgD,SAA5Bs8E,EAAa/5E,MAAMvC,MAAqBgE,EAAG,KAAOs4E,EAAat4E,IACzE,mBAA7Bs4E,EAAa/5E,MAAMA,SACnB+5E,EAAe,MAEfA,EAAat8D,UAC2C,kBAAxD3c,EAAQ0c,UAAUu8D,EAAat8D,UAAUzd,MAAMvC,OAC/Cs8E,EAAej5E,EAAQ0c,UAAUu8D,EAAat8D,YAI1D,OAAOs8D,GAIX3I,EAAap/B,UAAUihC,qBAAuB,SAAUnyE,EAAS21B,EAAStS,EAAQ8+C,EAAU+Y,EAAU/5E,EAAUkC,GAI5G,IACIkjE,EACAC,EAFA2U,EAAe,eAGflC,EAAe,KACnB,GAAuB,IAAnBtjD,EAAQp+B,OAMR,GALI8L,GAAUA,aAAkByR,IACxBzR,EAAOuX,MAAMrjB,OAAS8L,EAAOoc,WAAWloB,SAAW,IACnD8L,EAAUA,EAAOuX,MAAM,IAAMvX,EAAOoc,WAAW,IAGvC,uBAAX4D,GAAmChgB,GAAqB,aAAXggB,IAC5CxL,GAAY7X,IAAY2X,GAAkB3X,KAAamf,GAAcnf,EAAQiyB,iBAAmBxd,IAElG,IAAK,IADDpP,EAAYrF,EAAQwf,cAAcC,WAAW,GACxCjoB,EAAIm+B,EAAQp+B,OAAS,EAAGC,GAAK,EAAGA,IAErC,GADAgvE,EAAU1jC,GAAqBnN,EAAQn+B,IAAI,GACvCm+B,EAAQn+B,aAAcoe,KAASK,GAAc0f,EAAQn+B,KAAQ2e,GAAkBqwD,IAM/E,OALAyS,EAAetjD,EAAQn+B,GACnB6N,IACA4zE,EAAen4E,KAAK4L,SAASusE,EAAcj5E,EAASqjB,IAExD63D,EAASx7D,aAAeu5D,EACjBA,OAId,GAAe,uBAAX51D,GAAmChgB,GACxC,IAAS7L,EAAIm+B,EAAQp+B,OAAS,EAAGC,GAAK,EAAGA,IAErC,GADA+uE,EAASzjC,GAAqBnN,EAAQn+B,IAAI,GACtCm+B,EAAQn+B,aAAcoe,KAASD,GAAaggB,EAAQn+B,KAAQse,GAAiBywD,IAI7E,OAHA0S,EAAetjD,EAAQn+B,GACvByhF,EAAen4E,KAAK4L,SAASusE,EAAcj5E,EAASqjB,GACpD63D,EAASx7D,aAAeu5D,EACjBA,MAId,CAAA,GAAI51E,IAAsB,SAAXggB,GAAsBrjB,EAAQm7E,GAAc7jE,gBAAgB8vD,IAAY,CAEnF,IADDxjD,EAAQ,EACZ,IAASpsB,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAAK,CACrC,IAAIia,EAAOkkB,EAAQn+B,GACf6L,IAAWoO,IAASA,aAAgBgD,KACnCtT,GAAYsQ,EAAKnC,QAAQhN,OAAOgC,cAAcnD,KAC3C4V,GAAatF,KACRwnE,GAKDA,EAAer1D,GAASnS,EAAKka,OAASstD,EAAexnE,EACrDmS,EAAQrmB,KAAKmJ,IAAIkd,EAAOnS,EAAKka,SAJ7B/H,GADAq1D,EAAexnE,GACMka,QAoBrC,OAXIstD,GAA4C,SAA5BA,EAAa/5E,MAAMvC,OAE/Bs8E,EADAj5E,EAAQwf,cAAc5E,MAAMrjB,OAAS,GAAmD,SAA9CyI,EAAQwf,cAAc5E,MAAM,GAAG1b,MAAMvC,KAChEs8E,EAGA,MAGnBA,IACAiC,EAASx7D,aAAeu5D,GAErBA,EAEN,GAAe,WAAX51D,GAAuBrjB,EAAQm7E,GAAc7jE,KAAM,CACxD,IAAS9f,EAAIm+B,EAAQp+B,OAAS,EAAGC,GAAK,EAAGA,IACrC,GAAIm+B,EAAQn+B,aAAcid,IAClBkhB,EAAQn+B,EAAI,aAAcoe,IAAQ+f,EAAQn+B,EAAI,GAAGqlC,MAAO,CAExD,IADIo+C,EAAcn6E,KAAKs6E,kBAAkBzlD,EAAQn+B,EAAI,GAAG8X,QAASnO,OAAUpG,MACtDkgF,EAAYt6E,GAAG/H,MAAM,yBAA2BqiF,EAAYt6E,GAAG/H,MAAM,wBACtF,OAAO+8B,EAAQn+B,EAAI,GAEvB,IAAK,IAAIL,EAAI,EAAGA,EAAIw+B,EAAQn+B,EAAI,GAAGqlC,MAAMtlC,OAAQJ,IAC7C,GAAI8jF,GAAeA,EAAYt6E,GAAG/H,MAAM,IAAM+8B,EAAQn+B,EAAI,GAAGqlC,MAAM1lC,GAAGwJ,GAAK,MACnEgY,GAAQgd,EAAQn+B,EAAI,GAAGqlC,MAAM1lC,IAC7B,OAAOw+B,EAAQn+B,EAAI,GAS3C,GAFAyhF,EAAetjD,EAAQA,EAAQp+B,OAAS,GACxC2jF,EAASx7D,aAAeu5D,GACnBj5E,EAAQm7E,GAAcnC,UAAUC,GAAc,IAC3CA,EAAat8D,SAGb,IAFA,IAAIthB,EAAM49E,EACNoC,EAAW1rC,GAAW3vC,EAAS3E,GAC5BA,KACCs0C,GAAW3vC,EAAS3E,IAASggF,IAGjCpC,EAAe59E,EACfA,EAAM2E,EAAQ0c,UAAUrhB,EAAIshB,eAKvC,GAAe,QAAX0G,GAA+B,oBAAXA,GACzB,IAAS7rB,EAAIm+B,EAAQp+B,OAAS,EAAGC,GAAK,EAAGA,IACrC,GAAIm+B,EAAQn+B,aAAcoe,GAAM,CAC5B,IAAIqlE,EAAcn6E,KAAKs6E,kBAAkBzlD,EAAQn+B,GAAG8X,QAASnO,OAAUpG,GACvE,GAAgB,oBAAXsoB,GAA2C,QAAXA,GAAuB43D,IAAgBA,EAAYt6E,GAAG/H,MAAM,yBAA2BqiF,EAAYt6E,GAAG/H,MAAM,wBAC7I,OAAO+8B,EAAQn+B,SAM3ByhF,EAAetjD,EAAQA,EAAQp+B,OAAS,GACpC2jF,GAAYjC,IACZiC,EAASx7D,aAAeu5D,GAIpC,OAAOA,GAIX3I,EAAap/B,UAAU4oC,6BAA+B,SAAUz+E,EAAK8F,GAEjE,OAAI9F,aAAeyZ,GACU,IAArBzZ,EAAIuf,MAAMrjB,QAAkB8D,EAAIokB,YAAepkB,EAAIokB,WAAWloB,OAGvD8D,EAAIuf,QAASvf,EAAIuf,MAAMrjB,QAAqC,IAA1B8D,EAAIokB,WAAWloB,OAOzD,KANQuJ,KAAK0yE,sBAAsBn4E,EAAIokB,WAAW,GAAIte,GAH9CL,KAAK0yE,sBAAsBn4E,EAAIuf,MAAM,GAAIzZ,GAO7CL,KAAK0yE,sBAAsBn4E,EAAK8F,IAI/CmvE,EAAap/B,UAAUsiC,sBAAwB,SAAUn4E,EAAK8F,EAAU8L,GACpE,OAAOnM,KAAKs6E,kBAAkB//E,EAAIiU,QAASnO,EAAU8L,IAGzDqjE,EAAap/B,UAAUkqC,kBAAoB,SAAU1hE,EAAWvY,EAAU8L,GACtE,IAAK,IAAIzV,EAAIkiB,EAAUzG,SAAS1b,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACrD,IAAIkJ,EAAUgZ,EAAUzG,SAASzb,GACjC,GAAIkJ,GAAWA,EAAQoN,YAAYxJ,cAAcnD,GAAW,CACxD,GAAIT,aAAmB4iC,GAAW,CAC9B,IAAIx/B,EAAShD,KAAKs6E,kBAAkB16E,EAASS,GAC7C,GAAI2C,EACA,OAAOA,EAGf,GAAIpD,EAAQ4B,OAAOgC,cAAcnD,GAC7B,OAAOT,GAInB,OAAIgZ,EAAUpX,OAAOgC,cAAcnD,EAAU8L,IAAqC,SAAzByM,EAAU1Y,MAAM6Y,KAC9DH,EAEJ,MAEJ42D,KCv3DPj/B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAO5DysE,GAAuB,SAAUjpC,GAGjC,SAASipC,EAAMt6D,EAAQ8rB,EAAUwM,EAAcC,GAC3C,IAAIhD,EAAQlE,EAAOkF,KAAKz2C,KAAMkgB,EAAQ8rB,EAAUwM,EAAcC,IAAYz4C,KAM1E,OAJAy1C,EAAMglC,cAAgB,EAEtBhlC,EAAMilC,eACNjlC,EAAM5gB,WACC4gB,EAoBX,OA7BAlF,GAAUiqC,EAAOjpC,GAWjBT,IACIoB,WAAS,KACVsoC,EAAMpqC,UAAW,UAAM,GAC1BU,IACIoB,YAAS,IACVsoC,EAAMpqC,UAAW,eAAW,GAC/BU,IACIoB,YAAS,IACVsoC,EAAMpqC,UAAW,YAAQ,GAC5BU,IACIoB,cACDsoC,EAAMpqC,UAAW,eAAW,GAC/BU,IACIoB,cACDsoC,EAAMpqC,UAAW,eAAW,GAC/BU,IACIoB,YAAU,IACXsoC,EAAMpqC,UAAW,cAAU,GACvBoqC,GACTroC,iBCpBEwoC,GAAgC,WAChC,SAASA,EAAez7E,GAEpBc,KAAKirB,iBAELjrB,KAAK46E,mBAEL56E,KAAK66E,gBAEL76E,KAAK0d,aAAc,EACnB1d,KAAKwrB,cACLxrB,KAAK86E,eACL96E,KAAKd,QAAUA,EA6/GnB,OA3/GAgf,OAAOozB,eAAeqpC,EAAevqC,UAAW,kBAE5CgC,IAAK,WACD,OAAOpyC,KAAKd,QAAQ+jE,gBAExB5wB,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAeqpC,EAAevqC,UAAW,uBAE5CgC,IAAK,WACD,OAAOpyC,KAAKd,QAAQ67E,qBAExB1oC,YAAY,EACZC,cAAc,IAGlBqoC,EAAevqC,UAAU8xB,iBAAmB,SAAUd,GAClDphE,KAAK01B,OAAU91B,QAASI,KAAKd,QAAQwf,cAAes8D,OAAQ,MACxD5Z,GACAphE,KAAKd,QAAQyc,uBAAsB,GAEvC+sB,GAAgB1oC,KAAKd,QAAQU,QAAQC,IAAIK,MAAM+6E,cAAgB,QAGnEN,EAAevqC,UAAUiyB,eAAiB,SAAUjB,GAChDphE,KAAK01B,MAAQ,KACT0rC,GACAphE,KAAKd,QAAQyc,uBAAsB,GAEvC+sB,GAAgB1oC,KAAKd,QAAQU,QAAQC,IAAIK,MAAM+6E,cAAgB,OAKnEN,EAAevqC,UAAUi2B,YAAc,SAAU9lE,EAAMF,EAAUJ,EAASi7E,EAAUzZ,GAChF,IAAIhsB,EAAQz1C,KACRyhE,IACAzhE,KAAKd,QAAQsB,cAAcH,SAAW,eACtCL,KAAKd,QAAQsB,cAAcE,WAAc2qE,MAAQ4L,MAAO,EAAGkE,SAAU,IACrEn7E,KAAKd,QAAQI,QAAQo1B,aAA4B,gBAAbwmD,EAA6B,QAAU,SAC3El7E,KAAKd,QAAQsB,cAAc46E,UAAY,EACvCp7E,KAAKd,QAAQsB,cAAc66E,WAAa,GAE5Cr7E,KAAKd,QAAQsB,cAAcP,QAAUA,EACrC,IAAIw0B,EAAgBR,GAAiBj0B,KAAKd,SAAWlI,EAAGqJ,EAASrJ,EAAGC,EAAGoJ,EAASpJ,GAAKsJ,GACrFP,KAAKd,QAAQsB,cAAczE,QAAU04B,EAAcz9B,GAAkB,gBAAbkkF,EAA6B,GAAK,GAC1Fl7E,KAAKd,QAAQsB,cAAcxE,QAAUy4B,EAAcx9B,EAAI,GACvD+I,KAAKd,QAAQsB,cAAc8vB,WACvBmxC,GACA5qB,WAAW,WACPpB,EAAMv2C,QAAQsB,cAAc6qE,KAAK51B,EAAMv2C,QAAQU,UAChD,IAMX+6E,EAAevqC,UAAUmyB,aAAe,WACpCviE,KAAKd,QAAQsB,cAAcV,SAK/B66E,EAAevqC,UAAU+1B,wBAA0B,WAC/C,SAAInmE,KAAKd,QAAQwf,cAAclL,YAAc8tB,sBAAoBg6C,UAUrEX,EAAevqC,UAAUu0B,eAAiB,WACtC3kE,KAAKd,QAAQylE,kBAKjBgW,EAAevqC,UAAUm1B,aAAe,SAAUlf,EAAOtmD,GACrD,GAAIsmD,IAAUhT,eAAa1Q,MAAQ0jB,IAAUhT,eAAa2zB,gBACtD3gB,IAAUhT,eAAakoC,iBAAkB,CACzC,GAAIv7E,KAAKd,QAAQkhB,cACb,OAKJ,GAHIimC,IAAUhT,eAAa1Q,OACvB5iC,EAAKwC,OAASvC,KAAKd,SAEnBc,KAAKd,QAAQgwC,qBACb,OAGRlvC,KAAKd,QAAQqmE,aAAalf,EAAOtmD,IAKrC46E,EAAevqC,UAAUu3B,gBAAkB,SAAU5nE,EAAMgiE,GACvD,GAAI/hE,KAAKd,QAAQkhB,cAAe,CAC5B,IAAIo7D,GACA57E,QAASG,EAAKwC,OAAQS,OAAQjD,EAAKiD,OAAQkxB,cAAe6tC,EAAiB7iE,QAASc,KAAKd,SAE7Fc,KAAKulE,aAAalyB,eAAaooC,SAAUD,KAMjDb,EAAevqC,UAAU41B,WAAa,SAAUzrE,EAAKoR,GACjD,IAGIpH,EAHAm3E,KACAC,KAUJ,GAPIphF,aAAeyZ,GAEfzP,EADgBhK,EACUokB,WAAW,GAEhCpkB,aAAeoZ,IAAa3T,KAAKd,QAAQgwC,uBAC9C3qC,EAAYvE,KAAKd,QAAQgwC,sBAEzB30C,GAAOgK,IAAcupC,GAAoB9tC,KAAKd,UAAYc,KAAKd,QAAQgwC,sBACvE,IAAIvjC,GAA0B,uBAAbA,GAAkD,uBAAbA,GAejD,GAAkB,eAAbA,GAA0C,eAAbA,IAA+BpH,EAAU9C,UAAY8C,EAAU0iB,UAAW,CAC7Gy0D,GACIj6E,SAAU8C,EAAU9C,SAAUwtC,aAAc1qC,EAAU0qC,aACtDhoB,SAAU1iB,EAAU0iB,SAAU26B,aAAcr9C,EAAUq9C,cAE1Dr9C,EAAU9C,SAAW,GACrB8C,EAAU0qC,aAAe,GACzB1qC,EAAU0iB,SAAW,GACrB1iB,EAAUq9C,aAAe,GAKzB,IAAImS,GACAxvD,UAAWA,EAAW2gE,SAAUwW,EAChCvW,SANJwW,GACIl6E,SAAU8C,EAAU9C,SAAUwtC,aAAc1qC,EAAU0qC,aACtDhoB,SAAU1iB,EAAU0iB,SAAU26B,aAAcr9C,EAAUq9C,cAIhCwjB,QAAQ,EAAO1vC,MAAO,WAAYkmD,aAAcjwE,GAE1E3L,KAAKulE,aAAalyB,eAAakoC,iBAAkBxnB,GAC7CA,EAAIqR,QACJ7gE,EAAU9C,SAAWi6E,EAAWj6E,SAChC8C,EAAU0qC,aAAeysC,EAAWzsC,aACpC1qC,EAAU0iB,SAAWy0D,EAAWz0D,SAChC1iB,EAAUq9C,aAAe85B,EAAW95B,eAGpC5hD,KAAKd,QAAQ8nB,wBAAwBziB,EAAWm3E,EAAYC,GAC5D37E,KAAKd,QAAQof,oBAAoB/Z,GACjCwvD,GACIxvD,UAAWA,EAAW2gE,SAAUwW,EAChCvW,SAAUwW,EAAYvW,QAAQ,EAAO1vC,MAAO,UAAWkmD,aAAcjwE,GAEzE3L,KAAKulE,aAAalyB,eAAakoC,iBAAkBxnB,SA9CiC,CACtF,IAAI8nB,EAAyB,uBAAblwE,EAAoC,WAAa,WAC7DmwE,EAAyB,uBAAbnwE,EAAoC,eAAiB,eACjEpH,EAAUs3E,KACVH,EAAWG,GAAat3E,EAAUs3E,GAClCt3E,EAAUs3E,GAAa,GACvBF,EAAWE,GAAat3E,EAAUs3E,IAC9Bt3E,EAAU0qC,cAAgB1qC,EAAUq9C,gBACpC85B,EAAWI,GAAav3E,EAAUu3E,GAClCv3E,EAAUu3E,GAAa,GACvBH,EAAWG,GAAav3E,EAAUu3E,IAEtC97E,KAAK+7E,sBAAsBx3E,EAAWm3E,EAAYC,EAAYhwE,MAuC9EgvE,EAAevqC,UAAU2rC,sBAAwB,SAAUx3E,EAAWm3E,EAAYC,EAAYhwE,GAC1F,IAAIkwE,EAAyB,uBAAblwE,EAAoC,WAAa,WAC7DmwE,EAAyB,uBAAbnwE,EAAoC,eAAiB,eACjEooD,GACAxvD,UAAWA,EAAW2gE,UAAYvhC,OAAQ+3C,EAAWG,GAAY95C,OAAQ25C,EAAWI,IACpF3W,UAAYxhC,OAAQg4C,EAAWE,GAAY95C,OAAQ45C,EAAWG,IAC9D1W,QAAQ,EAAO1vC,MAAO,WAAYkmD,aAAcjwE,GAEpD3L,KAAKulE,aAAalyB,eAAakoC,iBAAkBxnB,GAC7CA,EAAIqR,QACJ7gE,EAAUs3E,GAAaH,EAAWG,GAClCt3E,EAAUu3E,GAAaJ,EAAWI,GAClCH,EAAaD,IAGb17E,KAAKd,QAAQ8nB,wBAAwBziB,EAAWm3E,EAAYC,GAC5D37E,KAAKd,QAAQof,oBAAoB/Z,GACjCwvD,GACIxvD,UAAWA,EAAW2gE,UAAYvhC,OAAQ+3C,EAAWG,GAAY95C,OAAQ25C,EAAWI,IACpF3W,UAAYxhC,OAAQg4C,EAAWE,GAAY95C,OAAQ45C,EAAWG,IAC9D1W,QAAQ,EAAO1vC,MAAO,UAAWkmD,aAAcjwE,GAEnD3L,KAAKulE,aAAalyB,eAAakoC,iBAAkBxnB,KAMzD4mB,EAAevqC,UAAU60B,WAAa,SAAUrlE,EAASo8E,EAAYz5E,EAAQ05E,GACzE,GACID,aAAsBlnE,GAAM,CAC5B,GAAIlV,GAAWA,EAAQC,KAAOm8E,EAAWn8E,GAAK,WAC1C,OAAOm8E,EAEX,GAAIz5E,GAAoC,SAA1By5E,EAAW59E,MAAMvC,MAA8C,aAA3BmgF,EAAW59E,MAAMA,OACb,gBAA9C49E,EAAW59E,MAAM+oD,SAASD,WAAWrrD,KAAwB,CAC7D,IAAIqgF,EAAcF,EAAW59E,MAAM+oD,SAASD,WAAWg1B,YACvD,GAAIA,EAAYC,QAAQv+C,SAA8D,IAAnDh+B,EAAQC,GAAGygB,QAAQ07D,EAAWn8E,GAAK,YAClE,OAAOq8E,EAAYC,QAEvB,GAAID,EAAY9W,OAAOxnC,SAA6D,IAAlDh+B,EAAQC,GAAGygB,QAAQ07D,EAAWn8E,GAAK,WACjE,OAAOq8E,EAAY9W,OAEvB,GAAI8W,EAAYE,QAAQx+C,SAA8D,IAAnDh+B,EAAQC,GAAGygB,QAAQ07D,EAAWn8E,GAAK,YAClE,OAAOq8E,EAAYE,QAI/B,GAAIx8E,aAAmBkP,GACnB,IAAK,IAAIpY,EAAI,EAAGA,EAAIslF,EAAWjgD,MAAMtlC,OAAQC,IAAK,CAC9C,IAAIyM,EAAO64E,EAAWjgD,MAAMrlC,GAC5B,GAAIkJ,EAAQC,KAAOm8E,EAAWn8E,GAAK,IAAMsD,EAAKtD,GAC1C,OAAOsD,GAKvB,IAAK84E,EAEI,CAAA,IADDp4D,OAAa,EACjB,IAASntB,EAAI,EAAGA,EAAIslF,EAAW5iE,YAAY3iB,OAAQC,IAE/C,GADAmtB,EAAam4D,EAAW5iE,YAAY1iB,GAChCkJ,EAAQC,KAAOm8E,EAAWn8E,GAAK,IAAMgkB,EAAWhkB,GAChD,OAAOgkB,EAInB,OAAOm4D,GAKXrB,EAAevqC,UAAU21B,cAAgB,SAAUp6D,EAAU5L,EAAM6lE,EAAcC,GAC7E,IACII,EACAlmE,EAAKwC,kBAAkByR,GAEvBiyD,EADWlmE,EAAKwC,OACGoc,WAAW,GAEzB5e,EAAKwC,kBAAkBoR,IAAa3T,KAAKd,QAAQgwC,uBACtD+2B,EAAUjmE,KAAKd,QAAQgwC,sBAERlvC,KAAKilE,WAAWllE,EAAK2B,cAAe3B,EAAKiD,OAAqB,uBAAb2I,GAAmC,GAAvG,IAEI0wE,EAAuB,uBAAb1wE,EAAoC,eAAiB,eACnE,OAAIs6D,EAFuB,uBAAbt6D,EAAoC,WAAa,cAEtCk6D,GAAgBI,EAAQoW,KAAazW,GAQlE+U,EAAevqC,UAAUy0B,qBAAuB,SAAU9kE,GACtD,IACIwE,EACJ,GAAIxE,EAAKwC,QAAUxC,EAAKwC,OAAOoc,YAC3B5e,EAAKwC,OAAOoc,WAAWloB,QAAUuJ,KAAKd,QAAQ8nD,YAC9ChnD,KAAKd,QAAQ8nD,WAAW6xB,yBAAyBv4D,QAAQvgB,EAAKwC,OAAOoc,WAAW,KAAO,EAAG,CACtF5e,EAAKwC,kBAAkByR,KAEvBzP,EADgBxE,EAAKwC,OACKoc,WAAW,IAEzC,IAAI9e,EAAK0E,EAAU1E,GAAGkP,MAAM,KAExB40B,GADe9jC,EAAGA,EAAGpJ,OAAS,GACrBoJ,EAAGA,EAAGpJ,OAAS,IAAMoJ,EAAG,IACrC,GAAIE,EAAKiD,QAAUjD,EAAKiD,OAAOnD,KAAO8jC,GACN,mBAA5B5jC,EAAKiD,OAAO5E,MAAMA,MAA4B,CAC9C4B,KAAKd,QAAQiiB,mBACb,IAAIlC,EAAajf,KAAKd,QAAQ0c,UAAU/b,EAAG,IACvCy8E,EAAat8E,KAAK4jC,cAAc3kB,EAAYpf,EAAG,IAC/C08E,GACA18E,GAAIA,EAAG,GAAKua,KACZ5iB,MAAO+N,GAAMsI,UAAUtJ,EAAU8tB,mBAAmB,GAAI9tB,EAAU8tB,mBAAmB,IACrF5X,KAAM6hE,EAAW7hE,KACjBhkB,OAAQ8O,GAAM2G,eAAe3H,EAAU8tB,mBAAmB,GAAI9tB,EAAU8tB,mBAAmB,IAC3Fj0B,OAASA,MAAO,iBAAkBvC,KAAM,QACxC8nC,OAAQ24C,EAAW34C,QAEnB64C,EAAgB,IAAItkD,GAAen4B,EAAKiD,OAAO5E,MAAO,cAAem+E,GAAgB,GACzFv8E,KAAKd,QAAQ8nD,WAAWy1B,0BAA0Bz8E,KAAKd,QAAQ0c,UAAUrX,EAAU0iB,UAAWjnB,KAAKd,SACnGc,KAAKd,QAAQw9E,sBACbF,EAAc38E,GAAKA,EAAG,GACtBG,KAAKd,QAAQy9E,kBAAkBH,EAAez8E,EAAKiD,QACnDhD,KAAKd,QAAQye,sBAERpZ,IACLA,EAAU9C,SAAWkiC,EACrB3jC,KAAKd,QAAQ8nB,wBAAwBziB,MAAiB9C,SAAUkiC,IAChE3jC,KAAKd,QAAQof,oBAAoB/Z,MAO7Co2E,EAAevqC,UAAU61B,QAAU,SAAUt6D,EAAU5L,GACnD,IAEI68E,EACAC,EAEAt4E,EALAo3E,KACAD,KAKA37E,EAAKwC,kBAAkByR,GAEvBzP,EADgBxE,EAAKwC,OACKoc,WAAW,GAEhC5e,EAAKwC,kBAAkBoR,IAAa3T,KAAKd,QAAQgwC,uBACtD3qC,EAAYvE,KAAKd,QAAQgwC,sBAE7B,IAAIlsC,EAAShD,KAAKilE,WAAWllE,EAAK2B,cAAe3B,EAAKiD,OAAqB,uBAAb2I,GAAmC,GAC7FkwE,EAAyB,uBAAblwE,EAAoC,WAAa,WAC7DmwE,EAAyB,uBAAbnwE,EAAoC,eAAiB,eACrE,GAAI3I,aAAkB8R,GAClB4mE,EAAWG,GAAat3E,EAAUs3E,GAClCt3E,EAAUs3E,GAAa74E,EAAOnD,GAC9B87E,EAAWE,GAAat3E,EAAUs3E,GAClCH,EAAWI,GAAav3E,EAAUu3E,GAClC97E,KAAK+7E,sBAAsBx3E,EAAWm3E,EAAYC,EAAYhwE,OAE7D,CACDixE,EAAYr4E,EAAUs3E,GACtBgB,EAAYt4E,EAAUu3E,GACtBv3E,EAAUu3E,GAAa94E,EAAOnD,GAC9B0E,EAAUs3E,GAAa97E,EAAKiD,OAAOnD,GACnC87E,EAAWE,GAAat3E,EAAUs3E,GAClCF,EAAWG,GAAav3E,EAAUu3E,GAClC,IAAI/nB,GACAxvD,UAAWA,EAAW2gE,UAAYvhC,OAAQi5C,EAAW76C,OAAQ86C,GAC7D1X,UAAYxhC,OAAQg4C,EAAWE,GAAY95C,OAAQ45C,EAAWG,IAC9D1W,QAAQ,EAAO1vC,MAAO,WAAYkmD,aAAcjwE,GAEpD3L,KAAKulE,aAAalyB,eAAakoC,iBAAkBxnB,GAC7CA,EAAIqR,QACJ7gE,EAAUs3E,GAAae,EACvBr4E,EAAUu3E,GAAae,EACvBlB,EAAWE,GAAae,EACxBjB,EAAWG,GAAae,IAGxB78E,KAAKd,QAAQ8nB,wBAAwBziB,EAAWm3E,EAAYC,GAC5D37E,KAAKd,QAAQof,oBAAoB/Z,GACjCwvD,GACIxvD,UAAWA,EAAW2gE,UAAYvhC,OAAQi5C,EAAW76C,OAAQ86C,GAC7D1X,UAAYxhC,OAAQg4C,EAAWE,GAAY95C,OAAQ45C,EAAWG,IAAc1W,QAAQ,EACpF1vC,MAAO,UAAWkmD,aAAcjwE,GAEpC3L,KAAKulE,aAAalyB,eAAakoC,iBAAkBxnB,IAGzD/zD,KAAKs5D,kBAAkBv5D,OAAM9F,EAAwB,uBAAb0R,IAG5CgvE,EAAevqC,UAAU0sC,IAAM,WAC3B98E,KACKirB,cAAcQ,WAAa,EAC5BzrB,KAAKd,QAAQ69E,gBACb/8E,KAAKd,QAAQqqB,eAAepI,mBAEhCnhB,KAAKirB,cAAc+xD,WAAah9E,KAAKi9E,cACjCj9E,KAAKd,QAAQ69E,gBACb/8E,KAAKd,QAAQqqB,eAAe5L,iBAEN,QAAtB3d,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQ2sB,uBAIrB8uD,EAAevqC,UAAU8sC,SAAW,SAAUh1C,EAAOrT,GACjDqT,EAAMroC,GAAKqoC,EAAMroC,IAAMua,KACvB8tB,EAAMrd,OAAS7qB,KAAKd,QAAQg8B,OAAOzkC,QACnCyxC,EAAQ,IAAIsyC,GAAMx6E,KAAKd,QAAS,SAAUgpC,GAAO,IAC3CuyC,cAAgB,EACtBvyC,EAAMwyC,eACN16E,KAAKd,QAAQg8B,OAAOpkC,KAAKoxC,GACzBloC,KAAKd,QAAQi+E,iBAAiBj1C,EAAMrd,QAAUqd,EAAMroC,GACpDG,KAAKd,QAAQk+E,YAAcl1C,EACdA,EAAMrT,QACnB,GAAIA,EACA,IAAK,IAAIn+B,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAChCsJ,KAAKd,QAAQwsB,IAAImJ,EAAQn+B,KAKrCikF,EAAevqC,UAAU4nC,eAAiB,SAAUqF,GAEhD,IAAK,IADDniD,EAASl7B,KAAKd,QAAQg8B,OACjBxkC,EAAI,EAAGA,EAAIwkC,EAAOzkC,OAAQC,IAAK,CAEpC,GADewkC,EAAOxkC,GAAGm+B,QAAQvU,QAAQ+8D,IACzB,EACZ,OAAOniD,EAAOxkC,GAGtB,OAAOsJ,KAAKd,QAAQk+E,aAGxBzC,EAAevqC,UAAUgzB,SAAW,SAAUka,GAE1C,IAAK,IADDpiD,EAASl7B,KAAKd,QAAQg8B,OACjBxkC,EAAI,EAAGA,EAAIwkC,EAAOzkC,OAAQC,IAC/B,GAAIwkC,EAAOxkC,GAAGmJ,KAAOy9E,EACjB,OAAOpiD,EAAOxkC,IAM1BikF,EAAevqC,UAAUmtC,YAAc,SAAUC,GAC7C,IAAItiD,EAASl7B,KAAKojE,SAASoa,GAC3B,GAAItiD,EAAQ,CAGR,IAAK,IAFDpY,EAAQ9iB,KAAKd,QAAQg8B,OAAO5a,QAAQ4a,GACpCuiD,EAAcviD,EAAOrG,QAChBn+B,EAAI+mF,EAAYhnF,OAAS,EAAGC,GAAK,EAAGA,IACzCsJ,KAAKd,QAAQilE,SAASnkE,KAAKd,QAAQ0c,UAAU6hE,EAAY/mF,KACzDsJ,KAAKd,QAAQwtB,OAAO1sB,KAAKd,QAAQ0c,UAAU6hE,EAAY/mF,KACrC,kBAAdwkC,EAAOr7B,IACHG,KAAKd,QAAQk+E,YAAYv9E,KAAO29E,IAChCx9E,KAAKd,QAAQk+E,YAAcp9E,KAAKd,QAAQg8B,OAAOl7B,KAAKd,QAAQg8B,OAAOzkC,OAAS,WAIjFuJ,KAAKd,QAAQi+E,iBAAiBjiD,EAAOrQ,QAC5C7qB,KAAKd,QAAQg8B,OAAO30B,OAAOuc,EAAO,GACR,QAAtB9iB,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQ2sB,wBAKzB8uD,EAAevqC,UAAUstC,YAAc,SAAU7oD,EAAS8oD,GACtD,IAAIz1C,EAAQloC,KAAKojE,SAASua,IAAgB39E,KAAKd,QAAQk+E,YACvDp9E,KAAKd,QAAQ0+E,eAAe11C,EAAMroC,IAElC,IAAK,IADDg+E,EACKhhF,EAAK,EAAGihF,EAAYjpD,EAASh4B,EAAKihF,EAAUrnF,OAAQoG,IAAM,CAC/D,IAAInG,EAAIonF,EAAUjhF,GACJmD,KAAKg4E,eAAethF,GACdm+B,QAAQvU,QAAQ5pB,IACvB,IACTmnF,EAAc79E,KAAKd,QAAQ0c,UAAUllB,GACrCsJ,KAAKd,QAAQilE,SAAS0Z,GACtB79E,KAAKd,QAAQwtB,OAAO1sB,KAAKd,QAAQ0c,UAAUllB,IAC3CsJ,KAAKd,QAAQwsB,IAAImyD,MAK7BlD,EAAevqC,UAAU2tC,WAAa,SAAUT,GAC/Bt9E,KAAKd,QAAQg8B,OAA1B,IACIgN,EAAQloC,KAAKojE,SAASka,GAC1B,GAAIp1C,EAAO,CACP,IAAI81C,KACAC,GACAp+E,GAAIy9E,EAAY,IAAMljE,KAAYya,WAAa+I,SAAS,EAAMq6C,MAAM,GAExEj4E,KAAKk9E,SAASe,GACdA,EAASpzD,OAAS7qB,KAAKd,QAAQg8B,OAAOzkC,OAAS,EAC/C,IACK,IAAIoG,EAAK,EAAGohB,EAAKiqB,EAAMrT,QAASh4B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAItC,EAAM0jB,EAAGphB,GACbmhF,EAAclnF,KAAKkJ,KAAKd,QAAQ0c,UAAUrhB,IAE9CyF,KAAKk+E,MAAMF,KAInBrD,EAAevqC,UAAU+tC,KAAO,WAG5B,OAFAn+E,KAAKirB,cAAcQ,WAAa,EAChCzrB,KAAKirB,cAAc+xD,WAAah9E,KAAKi9E,cAC9Bj9E,KAAKirB,cAAc+xD,YAG9BrC,EAAevqC,UAAU6sC,YAAc,WACnC,IAAIv+D,KACAnkB,KAEJ,GADAyF,KAAKirB,cAAcO,cACfxrB,KAAKd,QAAQwf,cAAcC,WAAWloB,OAAS,EAAG,CAClDioB,EAAgB1e,KAAKd,QAAQwf,cAAcC,WAC3C,IAAK,IAAItoB,EAAI,EAAGA,EAAIqoB,EAAcjoB,OAAQJ,IAAK,CAC3C,IAAIuJ,OAAU,EAGVA,EAFAI,KAAKd,QAAQ8nD,YACbhnD,KAAKd,QAAQ8nD,WAAW6xB,yBAAyBv4D,QAAQ5B,EAAcroB,KAAO,EACpE4mB,GAAajd,KAAKd,QAAQ0c,UAAU8C,EAAcroB,GAAG4wB,WAGrDhK,GAAayB,EAAcroB,IAEzCkE,EAAIzD,KAAK8I,IAGjB,GAAII,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAAS,EAAG,CAC7CioB,EAAgBA,EAAcmH,OAAO7lB,KAAKd,QAAQwf,cAAc5E,OAChE,IAASzjB,EAAI,EAAGA,EAAI2J,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAAQJ,IAAK,CAC9D,IAAIkK,EAAO+vC,GAAMtwC,KAAKd,QAAQwf,cAAc5E,MAAMzjB,IAClD2J,KACKo+E,cAAc79E,GACnBhG,EAAIzD,KAAKw5C,GAAM/vC,IACf,IAAI7E,EAASL,IAEb,GADA0B,EAAarB,GAAS6E,EAAK2M,YAAa3M,EAAKxE,QAASwE,EAAKvE,SACvDuE,EAAK4R,SAAU,CAKf,IAAK,IAJDqZ,EAAaxrB,KAAKirB,cAAcO,WAChC6yD,OAAW,EAEXvkE,EAAQ9Z,KAAKsoE,kBAAkB/nE,MAAgB,GAC1C7J,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAAK,CAEnC,IAAI2/B,EAAe7K,GADnB6yD,EAAWr+E,KAAKd,QAAQ0c,UAAU9B,EAAMpjB,GAAGmJ,KACJA,IAAMywC,GAAM+tC,GAC/CzjF,EAAYa,EAAuBC,GAAU1E,EAAGq/B,EAAa7nB,QAAQzS,QAAS9E,EAAGo/B,EAAa7nB,QAAQxS,UACtGqiF,aAAoBvpE,KACpBuhB,EAAat6B,QAAUnB,EAAU5D,EACjCq/B,EAAar6B,QAAUpB,EAAU3D,EACjCo/B,EAAanpB,aAAe3M,EAAK2M,aAGzClN,KAAKirB,cAAcO,WAAaA,EAEpC,GAAwB,aAApBjrB,EAAKnC,MAAMvC,KAIN,CAAA,IAHD6jB,EAAW1f,KAAKd,QAAQmhB,UAAUrgB,KAAKd,QAAQwf,cAAc5E,MAAMzjB,GAAGwJ,IAEtEy+E,GADA9yD,EAAaxrB,KAAKirB,cAAcO,WACflG,GAActlB,KAAKd,QAASwgB,EAASlR,QAAQ2D,SAAS,KAC3E,IAASzb,EAAI,EAAGA,EAAI4nF,EAAe7nF,OAAQC,IAAK,CAC5C,IAAI6N,EAAYvE,KAAKd,QAAQmhB,UAAUi+D,EAAe5nF,IACtD80B,EAAWjnB,EAAU1E,IAAMywC,GAAM/rC,IAGzC,GAAIhE,GAAQA,EAAK6e,OAAQ,CACjBoM,EAAaxrB,KAAKirB,cAAcO,WAApC,IAEIzG,EAAY8C,GADZnI,EAAW1f,KAAKd,QAAQmhB,UAAU9f,EAAKsb,UACHtb,GACxCirB,EAAWjrB,EAAKV,IAAMod,GAAYyC,EAASthB,MAAM0hB,MAAMiF,IACvDyG,EAAWjrB,EAAKV,IAAItH,MAAQmnB,EAASlR,QAAQjC,WAAWhU,QAIpE,GAAsC,IAAlCyH,KAAKirB,cAAcQ,WAAkB,CACrCzrB,KAAKmhB,mBACL,IAAK,IAAItkB,EAAK,EAAG0hF,EAAkB7/D,EAAe7hB,EAAK0hF,EAAgB9nF,OAAQoG,IAAM,CACjF,IAAIqjC,EAAOq+C,EAAgB1hF,GACvBmD,KAAKd,QAAQ0c,UAAUskB,EAAKrgC,MACxBG,KAAKd,QAAQ8nD,YACbhnD,KAAKd,QAAQ8nD,WAAW6xB,yBAAyBv4D,QAAQ4f,IAAS,EAClElgC,KAAKd,QAAQwtB,OAAO1sB,KAAKd,QAAQ0c,UAAUskB,EAAKjZ,WAGhDjnB,KAAKd,QAAQwtB,OAAOwT,IAIhClgC,KAAK2d,iBAGT,OADA3d,KAAKw+E,aAAajkF,EAAK,UAChBA,GAEXogF,EAAevqC,UAAUguC,cAAgB,SAAU79E,GAC/C,GAAwB,SAApBA,EAAKnC,MAAMvC,MAAmB0E,EAAKnC,MAAM+oD,UACzC5mD,EAAKnC,MAAM+oD,SAASD,WAAWE,WAC/B7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAAS,EAAG,CAErD,IAAK,IAAIoG,EAAK,EAAG4hF,EADDl+E,EAAKnC,MAAM+oD,SAASD,WAAWE,UACLvqD,EAAK4hF,EAAYhoF,OAAQoG,IAAM,CACrE,IAAInG,EAAI+nF,EAAY5hF,GACpBmD,KAAK66E,aAAankF,GAAM45C,GAAMtwC,KAAKd,QAAQ0c,UAAUllB,IACjDsJ,KAAK66E,aAAankF,GAAG0H,MAAM+oD,SAASD,WAAWE,WAC/CpnD,KAAK66E,aAAankF,GAAG0H,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAAS,GAClEuJ,KAAKo+E,cAAcp+E,KAAK66E,aAAankF,IAG7CsJ,KAAKirB,cAAc4vD,aAAe76E,KAAK66E,eAI/CF,EAAevqC,UAAUumB,MAAQ,WAC7B,IACI+nB,EAAkB1+E,KAAKd,QAAgB,oBAC3Cc,KAAKd,QAAQyc,uBAAsB,GACnC3b,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,eAAiBC,gBAAcgnE,MAC1E,IAEIhoB,EAFAj4C,KACAnkB,KAEJA,EAAIsF,GAAK,QAAUua,MACnB7f,EAAM,IAAIua,GAAK9U,KAAKd,QAAS,QAAS3E,GAAK,IACvC4X,YAEJuM,GADAA,EAAgB1e,KAAKd,QAAQwf,cAAc5E,OACb+L,OAAO7lB,KAAKd,QAAQwf,cAAcC,YAChE,IAAK,IAAIjoB,EAAI,EAAGA,EAAIgoB,EAAcjoB,OAAQC,IACjCgoB,EAAchoB,GAAGmlB,UAClBthB,EAAI4X,SAASrb,KAAK4nB,EAAchoB,GAAGmJ,KAG3C82D,EAAQ32D,KAAKd,QAAQwsB,IAAInxB,KAErByF,KAAK6c,OAAO85C,GAEhB,IAAIv5C,GAAUvhB,KAAM,QAASyhB,WAAY/iB,EAAKgjB,WAAYhjB,EAAK8iB,SAAU,YACzErd,KAAKwd,gBAAgBJ,GACrBpd,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,gBAAkBC,gBAAcgnE,MAC3E3+E,KAAKd,QAAQyc,sBAAsB+iE,IAGvC/D,EAAevqC,UAAUwuC,QAAU,SAAUrkF,GACzC,IACImkF,EAAkB1+E,KAAKd,QAAgB,oBAC3Cc,KAAKd,QAAQyc,uBAAsB,GACnC3b,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,eAAiBC,gBAAcgnE,MAC1E,IAAIjgE,KACAnkB,EACAmkB,EAAc5nB,KAAKyD,GAGnBmkB,EAAgB1e,KAAKd,QAAQwf,cAAc5E,MAE/C,IAAK,IAAIpjB,EAAI,EAAGA,EAAIgoB,EAAcjoB,OAAQC,IAAK,CAC3C,IAAI6J,EAAOme,EAAchoB,GACrB0mB,GACAvhB,KAAM,UAAWyhB,WAAYL,GAAY1c,GACzCgd,WAAYN,GAAY1c,GAAO8c,SAAU,YAK7C,GAHMrd,KAAKd,QAAQwY,eAAiBC,gBAAc+I,UAC9C1gB,KAAKwd,gBAAgBJ,GAErB7c,EAAK4R,SAAU,CACX5R,EAAKw7B,OAASx7B,EAAKw7B,MAAMtlC,OAAS,GAClCuJ,KAAKd,QAAQ2/E,YAAYt+E,EAAMA,EAAKw7B,OAEpCx7B,EAAK6Y,aAAe7Y,EAAK6Y,YAAY3iB,OAAS,GAC9CuJ,KAAKd,QAAQ4/E,aAAav+E,EAAMA,EAAK6Y,aAGzC,IAAK,IADD6F,EAAajf,KAAKd,QAAQ0c,UAAUrb,EAAKsb,UACpCxlB,EAAIkK,EAAK4R,SAAS1b,OAAS,EAAGJ,GAAK,EAAGA,IAC1C2J,KAAKd,QAAQ0c,UAAUrb,EAAK4R,SAAS9b,IAAKwlB,SAAW,GACtD7b,KAAKd,QAAQ8gB,YAAYhgB,KAAKd,QAAQ0c,UAAUrb,EAAK4R,SAAS9b,IAAKkK,GAC/DA,EAAKsb,UAAYtb,EAAK4R,SAAS9b,IAC/B2J,KAAKd,QAAQshB,SAASvB,EAAY1e,EAAK4R,SAAS9b,IAGpDkK,EAAKsb,UACL7b,KAAKd,QAAQ8gB,YAAYzf,EAAM0e,GAGvCjf,KAAKd,QAAQ6/E,WAAWx+E,GACxBP,KAAKkd,iBAETld,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,gBAAkBC,gBAAcgnE,MAC3E3+E,KAAKd,QAAQyc,sBAAsB+iE,IAGvC/D,EAAevqC,UAAU8tC,MAAQ,SAAU3jF,GACvC,GAAIA,GAAOyF,KAAKirB,cAAc+xD,WAAY,CACtCh9E,KAAKd,QAAQyc,uBAAsB,GACnC,IAAIqjE,EAAczkF,EAAMyF,KAAKi/E,aAAa1kF,GACtCyF,KAAKirB,cAAc+xD,WACvB,GAAIgC,EAAa,CACb,IAAIE,EAAqC,IAAvBF,EAAYvoF,OAC1BglB,GAAc,EACd0jE,KACAC,KACkC,IAAlCp/E,KAAKirB,cAAcQ,YACnBzrB,KAAKkd,iBAELld,KAAKd,QAAQ69E,iBACbthE,GAAc,EACdzb,KAAKd,QAAQqqB,eAAepI,oBAEhC,IAAK,IAAItkB,EAAK,EAAGwiF,EAAgBL,EAAaniF,EAAKwiF,EAAc5oF,OAAQoG,IAAM,CAE3EsiF,GADIhB,EAAOkB,EAAcxiF,IACRgD,IAAMs+E,EAE3B,IAAK,IAAI9nF,EAAI,EAAGA,EAAI2oF,EAAYvoF,OAAQJ,IAAK,CACzC,IAAI8nF,EAAOa,EAAY3oF,GACvB,GAAIgoB,GAAc8/D,KAAUxqE,GAAW,CACnC,IAAI2rE,EAAYhvC,GAAM6tC,GAClBx6C,EAAS27C,EAAU79E,SACvB69E,EAAU79E,SAAW,GACjB09E,EAAYx7C,IAAWy7C,EAASz7C,KAChC27C,EAAU79E,SAAW29E,EAASz7C,IAElCA,EAAS27C,EAAUr4D,SACnBq4D,EAAUr4D,SAAW,GACjBk4D,EAAYx7C,IAAWy7C,EAASz7C,KAChC27C,EAAUr4D,SAAWm4D,EAASz7C,IAElC,IAAIxqB,EAASnZ,KAAKu/E,eAAeD,EAAWJ,GAC5CE,EAASjB,EAAKt+E,IAAMsZ,EAAOtZ,OAE1B,CACD,IAAI2/E,EAAUx/E,KAAKsqC,UAAU6zC,EAAMe,GAEnC,GAAIM,EAAS,CACTJ,EAASjB,EAAKt+E,IAAM2/E,EAAQ3/E,GAC5B,IAAI2lB,EAAQ24D,EAAKx4D,QACjB,GAAIH,EACA,IAAK,IAAIvH,EAAK,EAAGwhE,EAAUj6D,EAAOvH,EAAKwhE,EAAQhpF,OAAQwnB,IAAM,CAEzD,GAAIkhE,EADAO,EAAOD,EAAQxhE,KACMmhE,EAASM,GAAO,EACjCC,EAAe3/E,KAAKd,QAAQ0c,UAAUwjE,EAASM,KACtCz4D,SAAWm4D,EAASjB,EAAKt+E,IACtCG,KAAKd,QAAQ8nB,wBAAwB24D,GAAgB14D,SAAU,GAAI26B,aAAc,KAAQ36B,SAAU04D,EAAa14D,SAAU26B,aAAc+9B,EAAa/9B,gBAKjK,GADAp8B,EAAQ24D,EAAKv4D,SAET,IAAK,IAAIuV,EAAK,EAAGykD,EAAUp6D,EAAO2V,EAAKykD,EAAQnpF,OAAQ0kC,IAAM,CACzD,IAAIukD,EACJ,GAAIP,EADAO,EAAOE,EAAQzkD,KACMikD,EAASM,GAAO,CACrC,IAAIC,GAAAA,EAAe3/E,KAAKd,QAAQ0c,UAAUwjE,EAASM,KACtCj+E,SAAW29E,EAASjB,EAAKt+E,IACtCG,KAAKd,QAAQ8nB,wBAAwB24D,GAAgBl+E,SAAU,GAAIwtC,aAAc,KAAQxtC,SAAUk+E,EAAal+E,SAAUwtC,aAAc0wC,EAAa1wC,oBAOzJ,IAAhBxzB,IACAzb,KAAKd,QAAQqqB,eAAe5L,iBAC5BlC,GAAc,GAEQ,QAAtBzb,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQ2sB,sBAEjB7rB,KAAKirB,cAAcQ,aACnBzrB,KAAKd,QAAQyc,uBAAsB,MAI/Cg/D,EAAevqC,UAAU6uC,aAAe,SAAU1kF,GAC9C,IAAI4e,EACA0mE,KACJ7/E,KAAKirB,cAAcQ,WAAa,EAChC,IAAK,IAAI/0B,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IAC5ByiB,EAAS8D,GAAY1iB,EAAI7D,IACzBmpF,EAAQ/oF,KAAKqiB,GAEjB,OAAO0mE,GAEXlF,EAAevqC,UAAUmvC,eAAiB,SAAUh7E,EAAW26E,GAC3D,IAAIS,EACA1iE,EAAcqzB,GAAM/rC,GAKxB,OAJAvE,KAAK8/E,gBAAgB7iE,GACrBA,EAAY4N,QAAU,EACtB80D,EAAe3/E,KAAKd,QAAQwsB,IAAIzO,GAChCjd,KAAKokE,eAAeub,GAAeT,GAC5BS,GAEXhF,EAAevqC,UAAU9F,UAAY,SAAU/pC,EAAM2+E,EAAa/sE,EAAU4tE,GACxE,IAAIP,EAGAQ,EAFApF,KACA39D,EAAcqzB,GAAM/vC,GAEpBoQ,EAAO3Q,KAAKd,QAAQ0c,UAAUrb,EAAKsb,UAQvC,GAPItb,EAAKnC,OAA6B,SAApBmC,EAAKnC,MAAMvC,MAAmB0E,EAAKnC,MAAM+oD,UACvD5mD,EAAKnC,MAAM+oD,SAASD,WAAWE,WAC5B7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAAU3wD,SAC5CupF,EAAU/iE,EAAY7e,MAAM+oD,SAASD,WAAWE,UAChDnqC,EAAY4N,QAAU,EACtB5N,EAAY7e,MAAM+oD,SAASD,WAAWE,eAAYntD,GAElDsG,EAAKnC,OAA6B,aAApBmC,EAAKnC,MAAMvC,KACzBmvB,GAAczqB,EAAMP,KAAKd,QAASc,KAAKirB,oBAEtC,GAAIta,GAA4B,aAApBA,EAAKvS,MAAMvC,KACxBmvB,GAAcslB,GAAM3/B,GAAO3Q,KAAKd,QAASc,KAAKirB,cAAe1qB,GAAM,QAElE,IAAIA,EAAK4R,WAAY5R,EAAK4R,SAAS1b,QAAY0b,GAAaA,EAAS1b,OAGrE,GAAI8J,EAAKnC,OAA8B,mBAArBmC,EAAKnC,MAAMA,QAAuE,IAAzCmC,EAAKV,GAAGygB,QAAQ,qBAC5EtgB,KAAKd,QAAQ0c,UAAUrb,EAAKV,IAI5B,IAAK,IAHDogF,EAAkB1/E,EAAKV,GAAGkP,MAAM,oBAChCkQ,OAAa,EACb4E,EAAa7jB,KAAKd,QAAQ0c,UAAUrb,EAAKV,IACpCxJ,EAAI,EAAGA,EAAIwtB,EAAW8B,QAAQlvB,OAAQJ,IAAK,CAChD,IAAIkO,EAAYvE,KAAKd,QAAQ0c,UAAUiI,EAAW8B,QAAQtvB,IAC1D,GAAIkO,EAAW,CACX0a,EAAajf,KAAKd,QAAQ0c,UAAUrX,EAAU9C,UAC9C,IAAI66E,EAAat8E,KAAK4jC,cAAc3kB,EAAYghE,EAAgB,IAC5D1D,GACA18E,GAAIogF,EAAgB,GAAK7lE,KACzB5iB,MAAO8kF,EAAW9kF,MAClBijB,KAAM6hE,EAAW7hE,KACjBhkB,OAAQ6lF,EAAW7lF,OACnB2H,OAASA,MAAO,iBAAkBvC,KAAM,QACxC8nC,OAAQ24C,EAAW34C,QAEvB3jC,KAAKd,QAAQy9E,kBAAkBJ,EAAgBt9D,SAKvDjf,KAAK8/E,gBAAgB7iE,EAAa8iE,GAClC9iE,EAAY4N,QAAU,EAClB1Y,IACA8K,EAAY9K,SAAWA,GAE3BqtE,EAAUx/E,KAAKd,QAAQwsB,IAAIzO,QA9B3BuiE,EAAUx/E,KAAKkgF,WAAW3/E,EAAM2+E,GAgCpC,IAAK,IAAIriF,EAAK,EAAGohB,EAAKC,OAAOC,KAAKy8D,GAAkB/9E,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtE,IAAInG,EAAIunB,EAAGphB,GACXmD,KAAKd,QAAQwsB,IAAIkvD,EAAgBlkF,IASrC,OAPIspF,GAAWA,EAAQvpF,SACnB+oF,EAAQphF,MAAM+oD,SAASD,WAAWE,UAAY44B,EAC9ChgF,KAAKmgF,kBAAkBX,IAEvBA,GACAx/E,KAAKokE,eAAeob,GAAUN,GAE3BM,GAEX7E,EAAevqC,UAAUxM,cAAgB,SAAU1jB,EAAQ2hB,GACvD,IAAIu+C,EAAoBlgE,EAAO9hB,MAAMgb,YACrC,GAAIgnE,GAAqBA,EAAkB3pF,OACvC,IAAK,IAAI40D,EAAI,EAAGA,GAAK+0B,EAAkB3pF,OAAQ40D,IAC3C,GAAI+0B,EAAkB/0B,GAAGxrD,KAAOgiC,EAC5B,OAAOu+C,EAAkB/0B,IAMzCsvB,EAAevqC,UAAU+vC,kBAAoB,SAAU5/E,GACnD,IAAIgE,KACAoM,KACJ,GAAwB,SAApBpQ,EAAKnC,MAAMvC,MAAmB0E,EAAKnC,MAAM+oD,UACzC5mD,EAAKnC,MAAM+oD,SAASD,WAAWE,WAC5B7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAE5C,IAAK,IADDupF,EAAUz/E,EAAKnC,MAAM+oD,SAASD,WAAWE,UACpCiE,EAAI,EAAGA,EAAI20B,EAAQvpF,OAAQ40D,IAAK,CAErC,IAAK,IADD98C,EAAQvO,KAAKd,QAAQ0c,UAAUokE,EAAQ30B,KAAOrrD,KAAKirB,cAAc4vD,aAAamF,EAAQ30B,IACjFxuD,EAAK,EAAGohB,EAAK1P,EAAMqX,SAAU/oB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACxD,IAAIxG,EAAI4nB,EAAGphB,GACP0H,EAAU+b,QAAQjqB,GAAK,GACvBkO,EAAUzN,KAAKT,GAGvB,IAAK,IAAI8kC,EAAK,EAAGC,EAAK7sB,EAAMoX,QAASwV,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACnD9kC,EAAI+kC,EAAGD,GACP52B,EAAU+b,QAAQjqB,GAAK,GACvBkO,EAAUzN,KAAKT,GAGvB,IAAIgqF,EAAapjE,GAAYjd,KAAKirB,cAAc4vD,aAAamF,EAAQ30B,KACrEg1B,EAAW55B,UAAYlmD,EAAKV,GAC5B,IAAI2/E,EAAUx/E,KAAKsqC,UAAU+1C,GAAY,GACzC1vE,EAAKqvE,EAAQ30B,IAAMm0B,EAAQ3/E,GAC3BmgF,EAAQ30B,GAAKm0B,EAAQ3/E,GACrBG,KAAKd,QAAQohF,WAAWd,EAASj/E,EAAKV,IACtC,IAAK,IAAIylD,EAAK,EAAGi7B,EAAch8E,EAAW+gD,EAAKi7B,EAAY9pF,OAAQ6uD,IAAM,CACrE,IAAI5uD,EAAI6pF,EAAYj7B,GAEhBg3B,EAAar/D,GADJjd,KAAKd,QAAQ0c,UAAUllB,IAAMsJ,KAAKd,QAAQshF,eAAe9pF,IAElEia,EAAK2rE,EAAW76E,WAAakP,EAAK2rE,EAAWr1D,YAC7Cq1D,EAAWzxD,QAAU,EACrByxD,EAAWz8E,IAAMua,KACjBkiE,EAAW76E,SAAWkP,EAAK2rE,EAAW76E,UACtC66E,EAAWr1D,SAAWtW,EAAK2rE,EAAWr1D,UACtC1iB,EAAUgC,OAAOhC,EAAU+b,QAAQ5pB,GAAI,GACvCsJ,KAAKd,QAAQwsB,IAAI4wD,OAMrC3B,EAAevqC,UAAU8vC,WAAa,SAAU3lF,EAAK2kF,GACjD,IAII/lE,EAHAsnE,KACAtuE,KACAuuE,KAEAC,KACJxuE,EAAWA,EAAS0T,OAAOtrB,EAAI4X,UAC/B,IAAItS,EAAKua,KACT,GAAIpa,KAAKirB,cAAcO,YAAcjxB,EAAI4X,SAAS1b,OAAS,EACvD,IAAK,IAAIC,EAAI,EAAGA,EAAIyb,EAAS1b,OAAQC,IAAK,CACtC,IAAIkqF,OAAW,GAEXA,EADA5gF,KAAKirB,cAAcO,WACRxrB,KAAKirB,cAAcO,WAAWrZ,EAASzb,IAGvCsJ,KAAKd,QAAQ0c,UAAUzJ,EAASzb,KAEtCmlB,SAAW,GAChB+kE,IACIviE,GAAcuiE,KAAcjtE,GAC5B+sE,EAAa5pF,KAAK8pF,IAGlBznE,EAASnZ,KAAKsqC,UAAUs2C,EAAU1B,OAAajlF,EAAW4F,GAC1D8gF,EAAM7pF,KAAK8pF,EAAS/gF,IACpB4gF,EAAY3pF,KAAKqiB,EAAOtZ,MAKxC,IAAK,IAAI2jB,EAAI,EAAGA,EAAIk9D,EAAajqF,OAAQ+sB,IAAK,CAC1C,GAAIk9D,EAAal9D,GAAG/hB,UAAYi/E,EAAal9D,GAAGyD,SAC5C,IAAK,IAAI5wB,EAAI,EAAGA,EAAIsqF,EAAMlqF,OAAQJ,IAC1BqqF,EAAal9D,GAAG/hB,WAAck/E,EAAMtqF,KACpCqqF,EAAal9D,GAAG/hB,UAAY5B,GAE5B6gF,EAAal9D,GAAGyD,WAAc05D,EAAMtqF,KACpCqqF,EAAal9D,GAAGyD,UAAYpnB,GAIxCsZ,EAASnZ,KAAKu/E,eAAemB,EAAal9D,GAAI07D,GAC9CuB,EAAY3pF,KAAKqiB,EAAOtZ,IAE5B,IAAIq6E,EAAYl6E,KAAKsqC,UAAU/vC,EAAK2kF,EAAauB,GAKjD,OAJIvG,GAAaA,EAAUthE,WAAashE,EAAU97E,OAAkC,kBAAzB87E,EAAU97E,MAAMvC,OACvEmE,KAAKd,QAAQof,oBAAoB47D,GACjCA,EAAU1rE,QAAQ6Q,QAAQ,IAAIC,KAE3B46D,GAGXS,EAAevqC,UAAU0vC,gBAAkB,SAAUvlF,EAAKwlF,GACtDxlF,EAAIsF,IAAMkgF,GAAe3lE,KACzB,IAAI8xC,EAAuC,GAAhClsD,KAAKirB,cAAcQ,WAC9B,GAAIpN,GAAc9jB,KAASoZ,GAAW,CAOlC,GANApZ,EAAIwG,aACA/J,EAAGuD,EAAIwG,YAAY/J,EAAIk1D,EAAMj1D,EAAGsD,EAAIwG,YAAY9J,EAAIi1D,GAExD3xD,EAAI0Q,aACAjU,EAAGuD,EAAI0Q,YAAYjU,EAAIk1D,EAAMj1D,EAAGsD,EAAI0Q,YAAYhU,EAAIi1D,GAEvC,WAAb3xD,EAAIsB,KAEJ,IAAK,IADD1C,EAAWoB,EAAIpB,SACVzC,EAAI,EAAGA,EAAIyC,EAAS1C,OAAQC,IAC5B6O,GAAMC,aAAarM,EAASzC,GAAG+Z,UAChCtX,EAASzC,GAAG+Z,QACRzZ,EAAGmC,EAASzC,GAAG+Z,OAAOzZ,EAAIk1D,EAAMj1D,EAAGkC,EAASzC,GAAG+Z,OAAOxZ,EAAIi1D,IAG7D3mD,GAAMC,aAAarM,EAASzC,GAAG8B,UAChCW,EAASzC,GAAG8B,QACRxB,EAAGmC,EAASzC,GAAG8B,OAAOxB,EAAIk1D,EAAMj1D,EAAGkC,EAASzC,GAAG8B,OAAOvB,EAAIi1D,IAK1E,IAAiB,aAAb3xD,EAAIsB,MAAoC,WAAbtB,EAAIsB,OAC3BtB,EAAIpB,UAAYoB,EAAIpB,SAAS1C,OAAS,EAEtC,IADI0C,EAAWoB,EAAIpB,SACVzC,EAAI,EAAGA,EAAIyC,EAAS1C,OAAS,EAAGC,IACrCyC,EAASzC,GAAGiF,MAAM3E,GAAKk1D,EACvB/yD,EAASzC,GAAGiF,MAAM1E,GAAKi1D,OAMnC3xD,EAAIwB,SAAWmwD,EACf3xD,EAAIyB,SAAWkwD,GAMvByuB,EAAevqC,UAAUs5B,WAAa,SAAUnvE,GAC5C,IAAI4e,EACA8D,EACJA,EAAcqzB,GAAMtwC,KAAKd,QAAQiyB,eACjC,IAAK,IAAIt0B,EAAK,EAAGohB,EAAKC,OAAOC,KAAK5jB,GAAMsC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC1D,IAAIuhB,EAAOH,EAAGphB,GACdogB,EAAYmB,GAAQ7jB,EAAI6jB,GAc5B,OAZIC,GAAcre,KAAKd,QAAQiyB,iBAAmBrc,KAC9CqE,EAAS,IAAIrE,GAAK9U,KAAKd,QAAS,QAAS+d,GAAa,IAC/Cpd,IAAMG,KAAKd,QAAQiyB,cAActxB,IAAM,QAAUua,KACxDpa,KAAKd,QAAQ2a,WAAWV,MAGxBA,EAAS,IAAIxF,GAAU3T,KAAKd,QAAS,aAAc+d,GAAa,IACzDpd,IAAMG,KAAKd,QAAQiyB,cAActxB,IAAM,aAAeua,KAC7Dpa,KAAKd,QAAQ2a,WAAWV,IAE5BnZ,KAAKd,QAAQof,oBAAoBnF,GACjCnZ,KAAKd,QAAQgwC,qBAAuB/1B,EAC7BA,GAKXwhE,EAAevqC,UAAUw5B,mBAAqB,SAAUrvE,GACpD,IAAI4e,EACJnZ,KAAKd,QAAQ2tB,gBAAgBtyB,GAC7ByF,KAAKd,QAAQ4tB,uBAAuB9sB,KAAKd,QAAQ0c,UAAUrhB,EAAIsF,YACxDG,KAAKd,QAAQ0c,UAAUrhB,EAAIsF,IAClCsZ,EAASnZ,KAAKd,QAAQwsB,IAAInxB,GACA,QAAtByF,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQ2sB,sBAEjB7rB,KAAKokE,eAAejrD,IAChB5e,IAAUsc,GAAkB7W,KAAKd,WACjCc,KAAKd,QAAQsX,OAASC,eAAaO,SACnChX,KAAKd,QAAQgwC,0BAAuBj1C,IAM5C0gF,EAAevqC,UAAU25B,QAAU,SAAUxvE,EAAKwnE,GAC9C,IAAIl+C,EAAa7jB,KAAKd,QAAQwzE,sBAAsBn4E,EAAKwnE,GACzD/hE,KAAKd,QAAQ62E,cAAcx7E,EAAKspB,aAAsBS,GAAeT,EAAa,GAAE9U,MAAM,KAAK,QAAK9U,IAGxG0gF,EAAevqC,UAAUg0B,cAAgB,SAAU7pE,EAAKsmF,EAAmB3b,GACvE,IAAInR,GACAmR,SAAUA,MAA0BC,SAAU5qE,EAAKumF,MAAO9gF,KAAKd,QAAQwY,eACvEge,MAAO,WAAY75B,KAAM,WAAYupE,QAAQ,GAGjDplE,KAAKd,QAAQqmE,aAAalyB,eAAa0tC,gBAAiBhtB,GACxD,IAAIitB,EhD51BZ,SAA+BzqE,GAC3B,OAAOA,EAAMC,KAAOC,eAAaS,egD21BA+pE,CAAejhF,KAAKd,SAC7CgiF,EAAuB5qE,GAAgBtW,KAAKd,SAChD,GAAIgiF,GAAwBF,EAAwB,CAChD,IAAKA,IAA4BzmF,EAAI9D,OAAS,GAAOoqF,GAAoC,IAAftmF,EAAI9D,QAAgB,CAC1F,GAAmB,IAAf8D,EAAI9D,OAIJ,OAHAuJ,KAAKkd,iBAMb,KAAKgkE,GAAuC,IAAf3mF,EAAI9D,QAAkBoqF,GAAsBrzC,GAAaxtC,KAAKd,UAEvF,YADAc,KAAKkd,iBAIb,IAAK62C,EAAIqR,OAAQ,CACb,IAAK,IAAI1uE,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IAAK,CACjC,IAAIyiB,EAAS5e,EAAI7D,GAEjB,IADS,EACJ82C,GAAaxtC,KAAKd,SAGlB,CACD,IAAKxI,EAAI,GAAKmqF,IAAsB1nE,EAAOhH,WAAagH,EAAO0C,SAC3D,IAAK,IAAI6J,EAAM,EAAGA,EAAM1lB,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAAQivB,IAAO,CACpE,IAAIzG,EAAajf,KAAKd,QAAQ0c,UAAU5b,KAAKd,QAAQwf,cAAc5E,MAAM4L,GAAK7J,UAC1EoD,IACAA,EAAajf,KAAKmhF,WAAWliE,KAErB9F,EAAOtZ,KAAOof,EAAWpf,IACzBG,KAAKohF,YAAYjoE,GAMrCnZ,KAAKqhF,gBAAgBloE,GACZnZ,KAAKshF,uBAAuBnoE,IAEjCnZ,KAAK6c,OAAO1D,EAAQziB,EAAI,GAAKmqF,GAAmB,QAnBpD7gF,KAAK6c,OAAO1D,EAAQziB,EAAI,GAAKmqF,GAAmB,GAuBxD9sB,GACImR,SAAUA,MAA0BC,SAAU5qE,EAAKumF,MAAO9gF,KAAKd,QAAQwY,eACvEge,MAAO,UAAW75B,KAAM,WAAYupE,QAAQ,GAEhDplE,KAAKd,QAAQqmE,aAAalyB,eAAa0tC,gBAAiBhtB,GACxD/zD,KAAKd,QAAQ21E,eAAegM,GAAsBtmF,GAAOA,EAAI9D,OAAS,KAM9EkkF,EAAevqC,UAAU+wC,WAAa,SAAU5gF,GAK5C,OAJIA,EAAKsb,WACLtb,EAAOP,KAAKd,QAAQ0c,UAAUrb,EAAKsb,UACnC7b,KAAKmhF,WAAW5gF,IAEbA,GAEXo6E,EAAevqC,UAAUixC,gBAAkB,SAAUloE,GACjD,GAAInZ,KAAKuhF,aAAapoE,GAElB,IAAK,IADDiuC,EAAY,EAAShpD,MAAM+oD,SAASD,WAAWE,UAC1C1wD,EAAI,EAAGA,EAAI0wD,EAAU3wD,OAAQC,IAAK,CACvC,IAAI2pF,EAAargF,KAAKd,QAAQ0c,UAAUwrC,EAAU1wD,IAC9CsJ,KAAKuhF,aAAalB,IAClBrgF,KAAKokE,eAAeic,IAAa,GAErCrgF,KAAKmkE,SAASkc,KAI1B1F,EAAevqC,UAAUgxC,YAAc,SAAUjoE,GAC7C,IAAK,IAAI9iB,EAAI,EAAGA,EAAI8iB,EAAOhH,SAAS1b,OAAQJ,IAAK,CAC7C,IAAIgqF,EAAargF,KAAKd,QAAQ0c,UAAUzC,EAAOhH,SAAS9b,IACpDgqF,EAAWluE,UACXnS,KAAKohF,YAAYf,GAErBrgF,KAAKmkE,SAASnkE,KAAKd,QAAQ0c,UAAUzC,EAAOhH,SAAS9b,OAM7DskF,EAAevqC,UAAUkxC,uBAAyB,SAAU/gF,GACxD,IACI2f,EADArD,GAAS,EAEb,GAAItc,EAAKkmD,UAED5pC,GADAgyB,GAAW7uC,KAAKd,QAASc,KAAKd,QAAQ0c,UAAUrb,EAAKkmD,aAI5CzmD,KAAKshF,uBAAuBthF,KAAKd,QAAQ0c,UAAUrb,EAAKkmD,iBAGpE,GAAIlmD,aAAgBoT,KACjBpT,EAAKkB,UAAYzB,KAAKd,QAAQ0c,UAAUrb,EAAKkB,WAC7CzB,KAAKd,QAAQ0c,UAAUrb,EAAKkB,UAAUglD,YACtCvmC,EAASlgB,KAAKd,QAAQ0c,UAAUrb,EAAKkB,UAAUglD,WAE/ClmD,EAAK0mB,UAAYjnB,KAAKd,QAAQ0c,UAAUrb,EAAK0mB,WAC7CjnB,KAAKd,QAAQ0c,UAAUrb,EAAK0mB,UAAUw/B,YACtCvmC,EAASlgB,KAAKd,QAAQ0c,UAAUrb,EAAK0mB,UAAUw/B,WAE/CvmC,GAAQ,CACR,GAAI2uB,GAAW7uC,KAAKd,QAASc,KAAKd,QAAQ0c,UAAUsE,IAChD,OAAO,EAGPrD,EAAS7c,KAAKshF,uBAAuBthF,KAAKd,QAAQ0c,UAAUsE,IAIxE,OAAOrD,GAKX89D,EAAevqC,UAAUmxC,aAAe,SAAUhhF,GAC9C,SAAIA,GACyB,SAApBA,EAAKnC,MAAMvC,MAAoB0E,EAAKnC,MAAM+oD,UAC3C5mD,EAAKnC,MAAM+oD,SAASD,WAAWE,WAC/B7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAAS,IAO9DkkF,EAAevqC,UAAUvzB,OAAS,SAAUtiB,EAAKsmF,EAAmBW,GAChE,IAAIC,EAAWzhF,KAAKg4E,eAAez9E,EAAIsF,IACvC,GAAKwT,GAAU9Y,MAAUA,aAAeyZ,MAAc66B,GAAW7uC,KAAKd,QAAS3E,IACvEknF,IAAaA,EAASxJ,MAAQwJ,EAAS7jD,SAAYrjC,EAAIiU,QAAQovB,QAAS,EAC5EijD,IAAoBrzC,GAAaxtC,KAAKd,UAAW2hF,IAE7C7gF,KAAKkd,iBAET,IAAI6O,EAAgB/rB,KAAKd,QAAQwf,cAEjC,GADcnkB,aACSua,GACnB,GAAIva,EAAIsjB,SAAU,CACd,IAAItd,EAAOP,KAAKd,QAAQ0c,UAAUrhB,EAAIshB,UACtCkQ,EAAcjS,MAAMhjB,KAAKyJ,QAGzBwrB,EAAcjS,MAAMhjB,KAAKyD,QAI7BwxB,EAAcpN,WAAW7nB,KAAKyD,GAElC,GAAKsmF,EAaD90D,EAAcvd,QAAQtB,YAAc6e,EAAc7e,YAAc,EAChE6e,EAAcvd,QAAQ2D,SAASrb,KAAKyD,EAAIiU,cAZxC,GADAud,EAAc8W,KAAK7iC,KAAKd,SACW,IAA/B6sB,EAAcjS,MAAMrjB,QAAoD,IAApCs1B,EAAcpN,WAAWloB,OAAc,CAC3E,IAAI+X,EAAUsd,GAAc9rB,KAAKd,QAAS6sB,GACtCvd,IACAud,EAAcvd,QAAQ2D,SAAS,GAAK3D,GAExCud,EAAc7e,YAAc6e,EAAcjS,MAAM,GAAG5M,YACnD6e,EAAcvd,QAAQtB,YAAc6e,EAAcjS,MAAM,GAAG5M,YAC3D6e,EAAcvd,QAAQuyB,MAAQhV,EAAcjS,MAAM,GAAGinB,MAOxDygD,GACDxhF,KAAKd,QAAQ21E,eAAegM,KAKxClG,EAAevqC,UAAUi0B,YAAc,SAAU9pE,EAAK+9E,GAClD,IAAIvsD,EAAiB/rB,KAAKd,QAAqB,cAC/C6sB,EAAcjS,MAAQiS,EAAcpN,cAChCpkB,aAAeua,GACfiX,EAAcjS,MAAM,GAAKvf,EAGzBwxB,EAAcpN,WAAW,GAAKpkB,EAElCwxB,EAAclI,WAAc7jB,KAAKilE,WAAWqT,EAAa/9E,GACzDwxB,EAAc8W,KAAK7iC,KAAKd,SACxBc,KAAKd,QAAQ21E,gBAAe,IAGhC8F,EAAevqC,UAAU+zB,SAAW,SAAU5pE,GAC1C,IAAImnF,KACJA,EAAS5qF,KAAKyD,GACd,IAAIw5D,GACAmR,SAAUwc,EAAUvc,YAAc2b,MAAO9gF,KAAKd,QAAQwY,eACtDge,MAAO,WAAY75B,KAAM,UAAWupE,QAAQ,GAKhD,GAHKplE,KAAKd,QAAQkhB,eACdpgB,KAAKd,QAAQqmE,aAAalyB,eAAa0tC,gBAAiBhtB,GAExDllB,GAAW7uC,KAAKd,QAAS3E,GAAM,CAC/B,IAAIonF,EAAgB3hF,KAAKd,QAAQwf,cAC7BoE,OAAQ,EACRvoB,aAAeua,IACfgO,EAAQ6+D,EAAc7nE,MAAMwG,QAAQ/lB,EAAK,GACzConF,EAAc7nE,MAAMvT,OAAOuc,EAAO,KAGlCA,EAAQ6+D,EAAchjE,WAAW2B,QAAQ/lB,EAAK,GAC9ConF,EAAchjE,WAAWpY,OAAOuc,EAAO,KAE3CixC,GACImR,SAAUwc,EAAUvc,YAAc2b,MAAO9gF,KAAKd,QAAQwY,eACtDge,MAAO,UAAW75B,KAAM,UAAWupE,QAAQ,IAEtCA,SACLtiD,EAAQ6+D,EAAcnzE,QAAQ2D,SAASmO,QAAQ/lB,EAAIiU,QAAS,GAC5DmzE,EAAcnzE,QAAQ2D,SAAS5L,OAAOuc,EAAO,GAC7C9iB,KAAKd,QAAQylE,iBACR3kE,KAAKd,QAAQkhB,eACdpgB,KAAKd,QAAQqmE,aAAalyB,eAAa0tC,gBAAiBhtB,MAMxE4mB,EAAevqC,UAAUwxC,iBAAmB,SAAUrzE,GAElD,IAAK,IADD4D,KACKzb,EAAI,EAAGA,EAAI6X,EAAM9X,OAAQC,IAAK,CACnC,IAAIkrB,EAAYrT,EAAM7X,GAClBkrB,EAAUzP,UAAYyP,EAAUzP,SAAS1b,OAAS,EAClD0b,EAAS0T,OAAO7lB,KAAK4hF,iBAAiBhgE,EAAUzP,YAGhDA,EAASrb,KAAK8qB,EAAU/hB,IACpB+hB,aAAqB0C,IACrBnS,EAASrb,KAAK8qB,EAAU/hB,GAAK,UAIzC,OAAOsS,GAGXwoE,EAAevqC,UAAUyxC,YAAc,SAAUl+C,EAAQ1c,GACrD,IAAI66D,EAAahjD,GAAkB7X,EAAW,gBAAiBjnB,KAAKd,QAAQU,QAAQC,IAChFkiF,EAAWjjD,GAAkB6E,EAAS,gBAAiB3jC,KAAKd,QAAQU,QAAQC,IAChFiiF,EAAW7iE,WAAWsP,aAAawzD,EAAUD,IAGjDnH,EAAevqC,UAAU4xC,kBAAoB,SAAU1E,GACnD,IAAIp1C,EAAQloC,KAAKojE,SAASka,GAC1B,GAAIp1C,GAA0B,IAAjBA,EAAMrd,OAAc,CAC7B,IAAI/H,EAAQolB,EAAMrd,OAClB,GAA0B,QAAtB7qB,KAAKd,QAAQ0sB,KAAgB,CAC7B,IAAIq2D,EAAqB/5C,EAAMrT,QAC3BqtD,EAAeliF,KAAKojE,SAASpjE,KAAKd,QAAQi+E,iBAAiBr6D,EAAQ,IAAI+R,QAAQ,GACnF,GAAIqtD,EACA,IAAK,IAAIrlF,EAAK,EAAGslF,EAAuBF,EAAoBplF,EAAKslF,EAAqB1rF,OAAQoG,IAAM,CAChG,IAAItC,EAAM4nF,EAAqBtlF,GAC/BmD,KAAK6hF,YAAYtnF,EAAK2nF,IAIlC,IAAIvE,EAAc39E,KAAKojE,SAASpjE,KAAKd,QAAQi+E,iBAAiBr6D,EAAQ,IACtE66D,EAAY9yD,OAAS8yD,EAAY9yD,OAAS,EAC1Cqd,EAAMrd,OAASqd,EAAMrd,OAAS,EAC9B,IAAIla,EAAO3Q,KAAKd,QAAQi+E,iBAAiBr6D,GACzC9iB,KAAKd,QAAQi+E,iBAAiBr6D,GAAS9iB,KAAKd,QAAQi+E,iBAAiBr6D,EAAQ,GAC7E9iB,KAAKd,QAAQi+E,iBAAiBr6D,EAAQ,GAAKnS,EACjB,WAAtB3Q,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQ2sB,wBAKzB8uD,EAAevqC,UAAUgyC,kBAAoB,SAAU9E,GACnD,IAAIp1C,EAAQloC,KAAKojE,SAASka,GAC1B,GAAIp1C,GAASA,EAAMrd,OAAS7qB,KAAKd,QAAQg8B,OAAOzkC,OAAS,EAAG,CACxD,IAAIqsB,EAAQolB,EAAMrd,OACd8yD,EAAc39E,KAAKojE,SAASpjE,KAAKd,QAAQi+E,iBAAiBr6D,EAAQ,IACtE,GAA0B,QAAtB9iB,KAAKd,QAAQ0sB,KAGb,IAAK,IAFDq2D,EAAqB/5C,EAAMrT,QAAQ,GAE9Bh4B,EAAK,EAAGwlF,EADQ1E,EAAY9oD,QACuBh4B,EAAKwlF,EAAqB5rF,OAAQoG,IAAM,CAChG,IAAItC,EAAM8nF,EAAqBxlF,GAC3BtC,GACAyF,KAAK6hF,YAAYtnF,EAAK0nF,GAIlCtE,EAAY9yD,OAAS8yD,EAAY9yD,OAAS,EAC1Cqd,EAAMrd,OAASqd,EAAMrd,OAAS,EAC9B,IAAIla,EAAO3Q,KAAKd,QAAQi+E,iBAAiBr6D,GACzC9iB,KAAKd,QAAQi+E,iBAAiBr6D,GAAS9iB,KAAKd,QAAQi+E,iBAAiBr6D,EAAQ,GAC7E9iB,KAAKd,QAAQi+E,iBAAiBr6D,EAAQ,GAAKnS,EACjB,WAAtB3Q,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQ2sB,wBAKzB8uD,EAAevqC,UAAUkyC,WAAa,WAClC,GAAI90C,GAAaxtC,KAAKd,SAAU,CAM5B,IAAK,IALDuoE,EAAWznE,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAASuJ,KAAKd,QAAQwf,cAAc5E,MAAM,GAAGja,GACvFG,KAAKd,QAAQwf,cAAcC,WAAW,GAAG9e,GAC3CijB,EAAQ9iB,KAAKd,QAAQ0c,UAAU6rD,GAAU58C,OACzC03D,EAAWviF,KAAKd,QAAQg8B,OAAO5a,QAAQtgB,KAAKg4E,eAAevQ,IAC3DiT,EAAc16E,KAAKd,QAAQg8B,OAAOqnD,GAAU7H,YACvChkF,EAAIosB,EAAOpsB,EAAI,EAAGA,IACnBgkF,EAAYhkF,KAEPgkF,EAAYhkF,EAAI,IAOjBgkF,EAAYhkF,GAAKgkF,EAAYhkF,EAAI,GACjCsJ,KAAKd,QAAQ0c,UAAU8+D,EAAYhkF,IAAIm0B,OAASn0B,IAPhDgkF,EAAYhkF,EAAI,GAAKgkF,EAAYhkF,GACjCsJ,KAAKd,QAAQ0c,UAAU8+D,EAAYhkF,EAAI,IAAIm0B,OAASn0B,SAC7CgkF,EAAYhkF,KAW/B,GAFAgkF,EAAY,GAAK16E,KAAKd,QAAQ0c,UAAU6rD,GAAU5nE,GAClDG,KAAKd,QAAQ0c,UAAU6rD,GAAU58C,OAAS,EAChB,QAAtB7qB,KAAKd,QAAQ0sB,KAAgB,CAG7B,IAFA,IACI5oB,EAAS03E,EADThkF,EAAI,IAEAsM,GAAUtM,EAAIosB,GAClB9f,EAAS03E,IAAchkF,GAE3BsJ,KAAK6hF,YAAYpa,EAAUzkE,GAC3BhD,KAAKwiF,sBAAsB/a,QAG3BznE,KAAKd,QAAQw9E,wBAKzB/B,EAAevqC,UAAUqyC,aAAe,WACpC,GAAIj1C,GAAaxtC,KAAKd,SAAU,CAQ5B,IAAK,IAPDm+E,EAAar9E,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAASuJ,KAAKd,QAAQwf,cAAc5E,MAAM,GAAGja,GACzFG,KAAKd,QAAQwf,cAAcC,WAAW,GAAG9e,GAC3C0iF,EAAWviF,KAAKd,QAAQg8B,OAAO5a,QAAQtgB,KAAKg4E,eAAeqF,IAC3D3C,EAAc16E,KAAKd,QAAQg8B,OAAOqnD,GAAU7H,YAE5CgI,EAAcvqF,OAAO+lB,OAAOC,KAAKu8D,GAAa9lD,KAAK,SAAUrkB,EAAGC,GAAK,OAAOrY,OAAOoY,GAAKpY,OAAOqY,KAAO3E,UAAU,IAE3GnV,EADGsJ,KAAKd,QAAQ0c,UAAUyhE,GAAYxyD,OAC3Bn0B,EAAIgsF,EAAahsF,IAE7BgkF,EAAYhkF,KACPgkF,EAAYhkF,EAAI,IAOjBgkF,EAAYhkF,GAAKgkF,EAAYhkF,EAAI,GACjCsJ,KAAKd,QAAQ0c,UAAU8+D,EAAYhkF,IAAIm0B,OAASn0B,IAPhDgkF,EAAYhkF,EAAI,GAAKgkF,EAAYhkF,GACjCsJ,KAAKd,QAAQ0c,UAAU8+D,EAAYhkF,EAAI,IAAIm0B,OAASn0B,SAC7CgkF,EAAYhkF,KAW/B,GAFAgkF,EAAYgI,GAAe1iF,KAAKd,QAAQ0c,UAAUyhE,GAAYx9E,GAC9DG,KAAKd,QAAQ0c,UAAUyhE,GAAYxyD,OAAS63D,EAClB,QAAtB1iF,KAAKd,QAAQ0sB,KAAgB,CAC7B,IAAI+2D,EAAe3iF,KAAKd,QAAQyjF,aAG5B/iF,GAFQI,KAAK4hF,iBAAiB5hF,KAAKd,QAAQ0c,UAAUyhE,GAAY7uE,QAAQ2D,UAE/D2sB,GAAkBu+C,EAAa,gBAAiBr9E,KAAKd,QAAQU,QAAQC,KAC/Eia,EAAQ9Z,KAAKd,QAAQwf,cAAc5E,MACvC,GAAIA,EAAMrjB,OAAS,IAA8B,WAAxBqjB,EAAM,GAAG1b,MAAMvC,MAA6C,SAAxBie,EAAM,GAAG1b,MAAMvC,MAAkB,CAC1F+D,EAAQqf,WAAW8f,YAAYn/B,GAC/B,IAAK,IAAIvJ,EAAI,EAAGA,EAAI2J,KAAKd,QAAQw8B,MAAMjlC,OAAQJ,IAAK,CAEhD,IAAIusF,GADJhjF,EAAUk/B,GAAkBu+C,GAAsC,SAAxBvjE,EAAM,GAAG1b,MAAMvC,KAAkB,wBAA0B,yBAA0BmE,KAAKd,QAAQw8B,MAAMrlC,KACtH4oB,WAAW4rC,UACvC+3B,EAAc3jE,WAAWsP,aAAa3uB,EAASgjF,EAAcC,aAEjE,IAAI7wD,EAAYqW,GAAaroC,KAAKd,QAAQU,QAAQC,IAClDG,KAAKd,QAAQkjB,gBAAgBu2C,cAAc34D,KAAKd,QAAQ0c,UAAUyhE,GAAY7uE,QAASm0E,EAAc3wD,OAKhG,CAAA,IADDkW,EAAQloC,KAAKg4E,eAAeqF,GAChC,IAAS3mF,EAAI,EAAGA,EAAIwxC,EAAMrT,QAAQp+B,OAAQC,IAClCwxC,EAAMrT,QAAQn+B,KAAO2mF,IACrBr9E,KAAK6hF,YAAY35C,EAAMrT,QAAQn+B,GAAI2mF,GACnCr9E,KAAKwiF,sBAAsBnF,UAMvCr9E,KAAKd,QAAQw9E,wBAKzB/B,EAAevqC,UAAUouC,aAAe,SAAUsE,EAAWC,GACzD,IAAIljF,EAAKkjF,GAAkB,SAI3B,OAHAD,EAAYA,EAAUluD,KAAK,SAAUrkB,EAAGC,GACpC,OAAOD,EAAE1Q,GAAM2Q,EAAE3Q,MAKzB86E,EAAevqC,UAAU4yC,YAAc,WACnC,GAAIx1C,GAAaxtC,KAAKd,SAAU,CAC5B,IAAIykC,EAAS3jC,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAASuJ,KAAKd,QAAQwf,cAAc5E,MAAM,GAAGja,GACrFG,KAAKd,QAAQwf,cAAcC,WAAW,GAAG9e,GAC3CojF,EAAajjF,KAAKd,QAAQg8B,OAAO5a,QAAQtgB,KAAKg4E,eAAer0C,IAC7D+2C,EAAc16E,KAAKd,QAAQg8B,OAAO+nD,GAAYvI,YAE9C53D,GADc5E,OAAOC,KAAKu8D,GAAajkF,OAC/BuJ,KAAKd,QAAQ0c,UAAU+nB,IAC/Bu/C,KACAvyE,EAAO3Q,KAAKd,QAAQ46E,cAAcC,YAAYj3D,EAAMtU,QAAQhN,QAC5DmP,EAAKla,OAAS,IACdka,EAAO3Q,KAAKw+E,aAAa7tE,IAE7B,IAAK,IAAI9T,EAAK,EAAGsmF,EAASxyE,EAAM9T,EAAKsmF,EAAO1sF,OAAQoG,IAAM,CACtD,IAAInG,EAAIysF,EAAOtmF,GACf,GAAIimB,EAAMjjB,KAAOnJ,EAAEmJ,GAAI,CAEnB,GAAIojF,IADejjF,KAAKg4E,eAAethF,EAAEmJ,IAAIgrB,QACT1yB,OAAO6H,KAAKd,QAAQ0c,UAAU+nB,GAAQ9Y,QAAU1yB,OAAOzB,EAAEm0B,SACzF/H,EAAMtU,QAAQhN,OAAOmxC,WAAWj8C,EAAE8X,QAAQhN,QAAS,CACnD0hF,EAAepsF,KAAKJ,GACpB,QAIZ,GAAIwsF,EAAezsF,OAAS,EAAG,CAC3B,IAAI2sF,EAAgBF,EAAe,GAAGr4D,OAClCw4D,EAAgBvgE,EAAM+H,OACb6vD,EAAY0I,GAEzBpjF,KAAKd,QAAQg8B,OAAO,GAAGw/C,YAAY0I,GAAiBtgE,EAAMjjB,GAC1DG,KAAKd,QAAQ0c,UAAU8+D,EAAY0I,IAAgBv4D,OAASu4D,EAC5DpjF,KAAKd,QAAQg8B,OAAO,GAAGw/C,YAAY2I,GAAiBH,EAAe,GAAGrjF,GACtEG,KAAKd,QAAQ0c,UAAU8+D,EAAY2I,IAAgBx4D,OAASw4D,EAClC,QAAtBrjF,KAAKd,QAAQ0sB,MACb5rB,KAAK6hF,YAAYnH,EAAYviF,OAAO+qF,EAAe,GAAGr4D,SAAU8Y,GAChE3jC,KAAKwiF,sBAAsB9H,EAAYviF,OAAO+qF,EAAe,GAAGr4D,SAAU8Y,IAG1E3jC,KAAKd,QAAQw9E,yBAM7B/B,EAAevqC,UAAUkzC,aAAe,WACpC,GAAI91C,GAAaxtC,KAAKd,SAAU,CAC5B,IAAIuoE,EAAWznE,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAASuJ,KAAKd,QAAQwf,cAAc5E,MAAM,GAAGja,GACvFG,KAAKd,QAAQwf,cAAcC,WAAW,GAAG9e,GAC3C0iF,EAAWviF,KAAKd,QAAQg8B,OAAO5a,QAAQtgB,KAAKg4E,eAAevQ,IAC3DiT,EAAc16E,KAAKd,QAAQg8B,OAAOqnD,GAAU7H,YAE5Cn6E,GADc2d,OAAOC,KAAKu8D,GAAajkF,OAChCuJ,KAAKd,QAAQ0c,UAAU6rD,IAC9Byb,KACAvyE,EAAO3Q,KAAKd,QAAQ46E,cAAcC,YAAYx5E,EAAKiO,QAAQhN,QAC3DmP,EAAKla,OAAS,IACdka,EAAO3Q,KAAKw+E,aAAa7tE,IAE7B,IAAK,IAAI9T,EAAK,EAAG0mF,EAAS5yE,EAAM9T,EAAK0mF,EAAO9sF,OAAQoG,IAAM,CACtD,IAAInG,EAAI6sF,EAAO1mF,GACf,GAAI0D,EAAKV,KAAOnJ,EAAEmJ,GAAI,CAEd0iF,IADeviF,KAAKg4E,eAAethF,EAAEmJ,IAAIgrB,QACX1yB,OAAO6H,KAAKd,QAAQ0c,UAAU6rD,GAAU58C,QAAU1yB,OAAOzB,EAAEm0B,SACzFtqB,EAAKiO,QAAQhN,OAAOmxC,WAAWj8C,EAAE8X,QAAQhN,SACzC0hF,EAAepsF,KAAKJ,IAIhC,GAAIwsF,EAAezsF,OAAS,EAAG,CAC3B,IAAI2sF,EAAgBF,EAAeA,EAAezsF,OAAS,GAAGo0B,OAC1Dw4D,EAAgB9iF,EAAKsqB,OACZ6vD,EAAY0I,GAEzB1I,EAAY0I,GAAiB7iF,EAAKV,GAClCG,KAAKd,QAAQ0c,UAAU8+D,EAAY0I,IAAgBv4D,OAASu4D,EAC5D1I,EAAY2I,GAAiBH,EAAeA,EAAezsF,OAAS,GAAGoJ,GACvEG,KAAKd,QAAQ0c,UAAU8+D,EAAY2I,IAAgBx4D,OAASw4D,EAClC,QAAtBrjF,KAAKd,QAAQ0sB,MACb5rB,KAAK6hF,YAAYpa,EAAUiT,EAAYwI,EAAeA,EAAezsF,OAAS,GAAGo0B,SACjF7qB,KAAKwiF,sBAAsB/a,EAAUiT,EAAYwI,EAAeA,EAAezsF,OAAS,GAAGo0B,UAG3F7qB,KAAKd,QAAQw9E,yBAM7B/B,EAAevqC,UAAUoyC,sBAAwB,SAAU7+C,EAAQ1c,GAE/D,IAAK,IADDnN,EAAQ9Z,KAAKd,QAAQwf,cAAc5E,MAC9BpjB,EAAI,EAAGA,EAAIsJ,KAAKd,QAAQw8B,MAAMjlC,OAAQC,IAC3C,GAAIojB,EAAMrjB,OAAS,IACa,SAAxBqjB,EAAM,GAAG1b,MAAMvC,MACY,WAAxBie,EAAM,GAAG1b,MAAMvC,MAAoB,CAC1C,IAAIgE,EAA6B,SAAxBia,EAAM,GAAG1b,MAAMvC,KAAkB,wBAA0B,wBAChEkmF,EAAWjjD,GAAkB6E,EAAS9jC,EAAIG,KAAKd,QAAQw8B,MAAMhlC,IAC7DorF,EAAa76D,EAAW6X,GAAkB7X,EAAWpnB,EAAIG,KAAKd,QAAQw8B,MAAMhlC,IAC1EqrF,EAAS9vD,cAAczD,WACzBuzD,EAAS9iE,WAAWpf,KAAOiiF,EAAW7iE,WAAWpf,IACjDiiF,EAAW7iE,WAAWsP,aAAawzD,EAAUD,KAM7DnH,EAAevqC,UAAUozC,oBAAsB,WAC3C,IAAIz3D,EAAgB/rB,KAAKd,QAAQwf,cACjCqN,EAAc8W,KAAK7iC,KAAKd,SACW,IAA/B6sB,EAAcjS,MAAMrjB,QAAoD,IAApCs1B,EAAcpN,WAAWloB,SAC7Ds1B,EAAc7e,YAAc6e,EAAcjS,MAAM,GAAG5M,YACnD6e,EAAcvd,QAAQtB,YAAc6e,EAAcjS,MAAM,GAAG5M,YAC3D6e,EAAcvd,QAAQuyB,MAAQhV,EAAcjS,MAAM,GAAGinB,QAI7D45C,EAAevqC,UAAU0zB,sBAAwB,SAAUhzC,GACvD9wB,KAAKyjF,0BACL,IAAIC,KACAC,KACJD,EAAW1jF,KAAKd,QAAQ0kF,mBAAmBF,IAEvCC,EADuD,sBAAvD3jF,KAAKd,QAAQwf,cAAcmlE,wBACbhzD,GAAeC,EAAQ4yD,GAGvB1jF,KAAKd,QAAQ46E,cAAcC,YAAYjpD,IAEzCr6B,QACZuJ,KAAKokE,cAAcuf,GAAa,IAGxChJ,EAAevqC,UAAUqzC,wBAA0B,WAC/C,IACI7jF,EADauiB,GAAmBniB,KAAKd,QAAQU,QAAQC,IAChCouB,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,mCAC9DD,GACA8sB,SAAO9sB,IAIf+6E,EAAevqC,UAAU01B,kBAAoB,SAAUn6D,EAAUpR,EAAKoB,EAAOrB,EAAS0I,EAAQ4iE,GAC1F,IACIrhE,EAEAu9C,EAEAC,EAEA+hC,GAAmB,EAYvB,OAXIvpF,aAAeyZ,GAEfzP,EADgBhK,EACUokB,WAAW,GAEhCpkB,aAAeoZ,IAAa3T,KAAKd,QAAQgwC,uBAC9ClvC,KAAKkd,iBACL3Y,EAAYvE,KAAKd,QAAQgwC,sBAEZ,sBAAbvjC,GAAiD,sBAAbA,IACpCm4E,GAAmB,GAEN,uBAAbn4E,GAAkD,sBAAbA,GACrCm2C,EAAKnmD,EAAM3E,GAAK8sF,EAAmBxpF,EAAQg4B,aAAat7B,EAAIuN,EAAUxD,YAAY/J,GAClF+qD,EAAKpmD,EAAM1E,GAAK6sF,EAAmBxpF,EAAQg4B,aAAar7B,EAAIsN,EAAUxD,YAAY9J,GAC3E+I,KAAK+jF,cAAcx/E,EAAWu9C,EAAIC,EAAI,KAAMpmD,EAAOgQ,OAAU1R,EAAW+I,EAAQ4iE,OAAc3rE,EAAWK,KAGhHwnD,EAAKnmD,EAAM3E,GAAK8sF,EAAmBxpF,EAAQi4B,aAAav7B,EAAIuN,EAAU0G,YAAYjU,GAClF+qD,EAAKpmD,EAAM1E,GAAK6sF,EAAmBxpF,EAAQi4B,aAAat7B,EAAIsN,EAAU0G,YAAYhU,GAC3E+I,KAAKgkF,cAAcz/E,EAAWu9C,EAAIC,EAAI,KAAMpmD,EAAOgQ,OAAU1R,EAAWK,KAIvFqgF,EAAevqC,UAAU4zB,kBAAoB,WACzC,IAAI2d,EAAgB3hF,KAAKd,QAAQwf,cACjC,OAAQijE,EAAmB,MAAE97D,OAAO87D,EAAchjE,aAGtDg8D,EAAevqC,UAAUlzB,eAAiB,SAAU+mE,GAChD,GAAIz2C,GAAaxtC,KAAKd,SAAU,CAC5B,IAAIyiF,EAAgB3hF,KAAKd,QAAQwf,cAC7BqlD,EAAa/jE,KAAKgkE,oBAClBhkE,KAAKd,QAAQkhB,gBACbpgB,KAAKd,QAAQ+0E,uBAAyBlQ,GAE1C,IAAIhQ,GACAmR,SAAUnB,EAAYoB,YAAc2b,MAAO9gF,KAAKd,QAAQwY,eACxDge,MAAO,WAAY75B,KAAM,UAAWupE,QAAQ,GAE5C6e,GACAjkF,KAAKd,QAAQqmE,aAAalyB,eAAa0tC,gBAAiBhtB,GAEvDA,EAAIqR,SACLuc,EAAc5lF,QAAU,EACxB4lF,EAAc3lF,QAAU,EACxB2lF,EAAcppF,MAAQ,EACtBopF,EAAcrpF,OAAS,EACvBqpF,EAAcz0E,YAAc,EAC5By0E,EAAc7nE,SACd6nE,EAAchjE,cACdgjE,EAAcnzE,QAAU,KACxBmzE,EAAc99D,gBAAa5pB,EAC3B+F,KAAKd,QAAQk2E,qBACT6O,IACAlwB,GACImR,SAAUnB,EAAYoB,YAAc2b,MAAO9gF,KAAKd,QAAQwY,eACxDge,MAAO,UAAW75B,KAAM,UAAWupE,QAAQ,GAE/CplE,KAAKd,QAAQqmE,aAAalyB,eAAa0tC,gBAAiBhtB,OAMxE4mB,EAAevqC,UAAUyzB,mBAAqB,WAC1C,IAAIqgB,EAAgBlkF,KAAKd,QAAQwf,cAAc5E,MAAQ9Z,KAAKd,QAAQwf,cAAc5E,MAAMrjB,OAAS,EAC7F0tF,EAAqBnkF,KAAKd,QAAQwf,cAAcC,WAAa3e,KAAKd,QAAQwf,cAAcC,WAAWloB,OAAS,EAChHuJ,KAAKkd,eAAgBgnE,EAAgBC,EAAsB,IAK/DxJ,EAAevqC,UAAU83B,uBAAyB,WAC9C,IAAIhmD,EAAaC,GAAmBniB,KAAKd,QAAQU,QAAQC,IACrDukF,EAAcliE,EAAW+L,eAAe/L,EAAWriB,GAAK,sBACxDukF,GACAA,EAAYnlE,WAAW8f,YAAYqlD,IAM3CzJ,EAAevqC,UAAUtuB,uBAAyB,SAAU/hB,EAAMiD,GAC9D,IACIqhF,EACA9jF,EACAwrB,EAHAxpB,EAASvC,KAAKd,QAAQwf,cAAc5E,MAAM,GAI9C,IAAK9W,EAAQ,CACT,IAAI6xB,EAAU70B,KAAKd,QAAQkyE,sBAAsBrxE,EAAKM,UAEtD,IADA2C,EAAShD,KAAKd,QAAQmyE,qBAAqBx8C,EAAS,QAAQ,OAC5C7xB,EAAOoc,QAAUpc,EAAOmhB,SAAWnhB,EAAO6a,UACtD,IAAK,IAAInnB,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAAK,CACrC,IAAIsuB,EAAWhlB,KAAKd,QAAQ0c,UAAUiZ,EAAQn+B,GAAGmJ,KAC7CmlB,EAAS5F,QAAU4F,EAASb,SAAWa,EAASnH,YAChD7a,EAASgiB,IAKzB,GAAIziB,GAAUS,GAAUA,EAAOoc,QAAU7c,EAAOnE,QAAUmE,EAAOnE,MAAM+lB,UACnE5jB,EAAOP,KAAKd,QAAQ0c,UAAU5Y,EAAO6Y,UACjC7b,KAAKd,QAAQkhB,eAAqC,aAApB7f,EAAKnC,MAAMvC,OACzCwoF,GAAa,GAEZ9hF,IAAWA,EAAOsZ,UAAkC,aAAtBtZ,EAAOnE,MAAMvC,MAC3C0G,GAAUA,EAAOsZ,UAAY7b,KAAKd,QAAQ0c,UAAUrZ,EAAOsZ,WAAa7b,KAAKd,QAAQ0c,UAAUrZ,EAAOsZ,UAAUuD,QAC5G7c,EAAOsZ,WAAa7Y,EAAO6Y,UAAYtZ,EAAOsZ,WAAa7Y,EAAOnD,IAAM,CAC7EksB,EAAgB/rB,KAAKd,QAAQwf,eACzB+C,EAASqK,GAAc9rB,KAAKd,QAAS6sB,EAAe/oB,EAAOnD,IAAI,MAE/DksB,EAAcvd,QAAQ2D,SAAS,GAAKsP,GAExCzhB,KAAKd,QAAQ21E,gBAAe,GAAO,GACnC9oD,EAAcvd,QAAQ2D,SAAS,GAAK4Z,EAAcjS,MAAM,GAAGtL,QAGnE,GAAIjM,GAAUS,GAAUA,EAAO6Y,UAAYtZ,EAAOnE,OAASmE,EAAOnE,MAAM+lB,QAAS,CAEnD,aADbnkB,KAAKd,QAAQ0c,UAAU5Y,EAAO6Y,UAChCzd,MAAMvC,OACbmE,KAAKd,QAAQwf,cAAclQ,QAAQ2D,SAAS,GAAKnS,KAAKd,QAAQ0c,UAAU5Y,EAAO6Y,UAAUrN,QACzFxO,KAAKd,QAAQ21E,gBAAe,GAAO,IAG3C,GAAKwP,GAAcrkF,KAAKd,QAAQkhB,cAAchiB,MAAMghB,QAAY7c,GAAUS,GACtET,EAAOsZ,UAAY7Y,EAAO6Y,WAAatZ,EAAO4hB,SAAY5hB,EAAOsZ,WAAa7Y,EAAO6Y,UACjFtZ,EAAO1C,KAAOmD,EAAOnD,IAAOU,GAC/BA,EAAKqY,YAAsC,UAAxBrY,EAAKqY,UAAU/c,MAA4C,SAAxB0E,EAAKqY,UAAU/c,MAAoB,CAC1F,IAAI4lB,OAAS,EACT9b,EAAuC,aAA/BpF,EAAKqY,UAAUvH,YACvB0Q,EAAgC,UAAnBxhB,EAAKqY,UAAwBjT,GAASA,EAC3B,SAAxBpF,EAAKqY,UAAU/c,MAAmBmH,EAAOoc,UACtCpf,KAAKd,QAAQkhB,eACgB,eAA3B7f,EAAKnC,MAAMiT,aAAgCrO,EAAOmZ,WAAa5Z,EAAO4Z,UAC3C,aAA3B5b,EAAKnC,MAAMiT,aAA8BrO,EAAOsZ,cAAgB/Z,EAAO+Z,aACpEtc,KAAKd,QAAQkhB,eACbpgB,KAAKd,QAAQkhB,cAAchiB,MAAMiT,cAAgB9Q,EAAKqY,UAAUvH,eACxE0a,EAAgB/rB,KAAKd,QAAQwf,cAC7B+C,EAASqK,GAAc9rB,KAAKd,QAAS6sB,EAAe/oB,EAAOnD,GAAIwkF,IAEnE,IAAI71E,EAAkC,UAAxBjO,EAAKqY,UAAU/c,KAAmBmH,EAAOwL,QAAUiT,EAC7DjT,GACAsT,GAAuBtT,EAASuT,EAAYhiB,EAAKM,SAAUL,KAAKd,SAAS,GAAO,KAK5Fy7E,EAAevqC,UAAU1zB,KAAO,SAAUniB,EAAKunD,EAAIC,GAC/C,IAAIs8B,EAEJ,GAAIvqE,GAAQvZ,IAAQyF,KAAKypE,yBAAyB3nB,EAAIC,EAAIxnD,EAAIiU,QAAQhN,SAAW+V,GAAgBvX,KAAKd,SAClG,GAAI3E,aAAeua,GAAM,CACrB,IAAIgwD,GAAc/oE,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,SAGrD,GAFAzB,EAAIwB,SAAW+lD,EACfvnD,EAAIyB,SAAW+lD,EACXxnD,EAAI4X,WAAc5X,EAAa,UAAG,CAElC,IAAK,IADDuf,EAAQ9Z,KAAKsoE,kBAAkB/tE,MAC1B7D,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAC9B2nF,EAAYr+E,KAAKd,QAAQ0c,UAAU9B,EAAMpjB,GAAGmJ,IAC5CG,KAAK0c,KAAK2hE,EAAUv8B,EAAIC,GAE5B/hD,KAAKskF,4BAA4B/pF,GAYrC,GAVImhB,GAAuB1b,KAAKd,QAAS3E,GAAK,GAC1C2kB,GAA0Blf,KAAKd,QAAS3E,IAGpCA,GAAOA,EAAI6D,OAA4B,kBAAnB7D,EAAI6D,MAAMvC,OAC9BtB,EAAIiU,QAAQmnC,iBAAkB,GAElC31C,KAAKd,QAAQigB,mBAAmB5kB,EAAKuqE,GAAa/oE,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,cAAW/B,OAAWA,GAAW,GACtHM,EAAIiU,QAAQmnC,iBAAkB,GAEX,aAAnBp7C,EAAI6D,MAAMvC,OAAwBmE,KAAKd,QAAQkhB,cAAe,CAC9D,IAAIa,EAAO1mB,EAAIiU,QAAQ2D,SAAS,GAEhC2K,GADiBwI,GAActlB,KAAKd,QAAS+hB,GACNjhB,KAAKd,cAG/C,CACD,IAAIqF,EAAYhK,EAEZiR,GADAs5D,GAAc/jE,YAAawD,EAAUxD,YAAakK,YAAa1G,EAAU0G,aAC7C,WAAnB1G,EAAU1I,MACnB0oF,GAAU,EAad,GAZKhgF,EAAUvD,cAIXujF,GAAU,EAHVvkF,KAAK+jF,cAAcx/E,EAAWu9C,EAAIC,GAAI,EAAM,KAAM,GAAIv2C,GAKrDjH,EAAU7C,cAIX6iF,GAAU,EAHVvkF,KAAKgkF,cAAcz/E,EAAWu9C,EAAIC,GAAI,EAAM,KAAM,GAAIv2C,IAKrD+4E,EAAS,CACVvkF,KAAKwsE,iBAAiBjoE,EAAWu9C,EAAIC,GAAI,GACzC,IAAIt8B,GAAS1kB,YAAawD,EAAUxD,YAAakK,YAAa1G,EAAU0G,aACxEjL,KAAKd,QAAQ8nB,wBAAwBziB,EAAWugE,EAAWr/C,MAM3Ek1D,EAAevqC,UAAUo0C,uBAAyB,SAAU5lE,EAAc6lE,EAAqBC,GAC3F,IAAI5iC,EACAC,EACA4iC,GAAgB,EACpB,IAAqF,IAAjFF,EAAoBlhF,OAAOkhF,EAAqB7lE,EAAapQ,QAAQhN,SACjEod,EAAagH,SAASnvB,OAAS,EAC/B,IAAK,IAAI+sB,EAAI,EAAGA,EAAI5E,EAAagH,SAASnvB,OAAQ+sB,IAAK,CACnD,IAAIjf,EAAYvE,KAAKd,QAAQ0c,UAAUgD,EAAagH,SAASpC,IAO7D,GALImhE,EADuB,KAAvBpgF,EAAU0iB,UACMjnB,KAAK6uC,WAAW7uC,KAAKd,QAAQ0c,UAAUrX,EAAU0iB,YAGjDjnB,KAAK6uC,WAAW7uC,KAAKd,QAAQ0c,UAAUrX,EAAU1E,KAE9C,eAAnB0E,EAAU1I,MAAyB0I,EAAUpL,UAAYoL,EAAUpL,SAAS1C,OAAS,EACrF,GAAKiuF,EAuBA,CACD,IAAIlkD,EAAej8B,EAAUpL,SAAS,GAClCyrF,EAAgBrgF,EAAUpL,SAAS,GAEnC4H,EAAcoE,GADCf,EAAWwa,EAAapQ,QAASoQ,EAAapQ,QAAQ5V,QAASgmB,EAAapQ,QAAQhN,QAC7Dg/B,EAAa/9B,WAQnD4vB,EAAqBrpB,IALrBpQ,aAASqB,EAAW0B,MAFxBoF,EAAcc,GAAgB0C,EAAWA,EAAUvD,cAAeD,GAAe/J,EAAGuN,EAAUvD,cAAcjF,QAAS9E,EAAGsN,EAAUvD,cAAchF,UAAW,GAE/G2G,YAAQ1I,EAAWwI,UAAW+9B,EAAa/9B,YAGnF7J,aAASqB,EAAW0B,MAAOipF,EAAcjsF,OAAO,GAAIgK,YAAQ1I,EAAWwI,eAAWxI,IAGtFumC,EAAa/pC,OAAS8O,GAAM2G,eAAemmB,EAAmB,GAAIA,EAAmB,IACjFuyD,EAAcniF,WAAamiF,EAAcnuF,SACzCmuF,EAAcnuF,OAAS8O,GAAM2G,eAAemmB,EAAmB,GAAIA,EAAmB,UArC1F,GAAIsyD,EAAe,CACf,OAAQpgF,EAAUpL,SAAS,GAAGsJ,WAC1B,IAAK,SACDq/C,EAAKljC,EAAapQ,QAAQhN,OAAOwG,aAAahR,EAAIytF,EAAoBz8E,aAAahR,EACnF+qD,EAAKnjC,EAAapQ,QAAQhN,OAAOwG,aAAa/Q,EAAIwtF,EAAoBz8E,aAAa/Q,EACnF,MACJ,IAAK,MACD6qD,EAAKljC,EAAapQ,QAAQhN,OAAOiC,UAAUzM,EAAIytF,EAAoBhhF,UAAUzM,EAC7E+qD,EAAKnjC,EAAapQ,QAAQhN,OAAOiC,UAAUxM,EAAIwtF,EAAoBhhF,UAAUxM,EAC7E,MACJ,IAAK,OACD6qD,EAAKljC,EAAapQ,QAAQhN,OAAO8G,WAAWtR,EAAIytF,EAAoBn8E,WAAWtR,EAC/E+qD,EAAKnjC,EAAapQ,QAAQhN,OAAO8G,WAAWrR,EAAIwtF,EAAoBn8E,WAAWrR,EAC/E,MACJ,IAAK,QACD6qD,EAAKljC,EAAapQ,QAAQhN,OAAOmG,YAAY3Q,EAAIytF,EAAoB98E,YAAY3Q,EACjF+qD,EAAKnjC,EAAapQ,QAAQhN,OAAOmG,YAAY1Q,EAAIwtF,EAAoB98E,YAAY1Q,EAGzF+I,KAAK+jF,cAAcx/E,EAAWu9C,EAAIC,GAAI,EAAM,KAAM,0BAAsB9nD,OAAWA,OAAWA,GAAW,MA2BrI0gF,EAAevqC,UAAU08B,eAAiB,SAAUvoE,EAAWm3E,GAE1Cn3E,EAAUxD,YAA0BwD,EAAU0G,YACjD1G,EAAU9C,UAAW8C,EAAU9C,SAC/B8C,EAAU0iB,UAAW1iB,EAAU0iB,SAC3B1iB,EAAU0qC,cAAe1qC,EAAU0qC,aACnC1qC,EAAUq9C,cAAer9C,EAAUq9C,aACvCr9C,EAAUpL,UAAWoL,EAAUpL,SAN7C,IAQIgsE,GAAapkE,YAAawD,EAAUxD,YAAakK,YAAa1G,EAAU0G,aACxE1G,EAAU9C,WACV0jE,EAAS1jE,SAAW8C,EAAU9C,UAE9B8C,EAAU0iB,WACVk+C,EAASl+C,SAAW1iB,EAAU0iB,UAE9B1iB,EAAU0qC,eACVk2B,EAASl2B,aAAe1qC,EAAU0qC,cAElC1qC,EAAUq9C,eACVujB,EAASvjB,aAAer9C,EAAUq9C,cAElCr9C,EAAUpL,WACVgsE,EAAShsE,SAAWoL,EAAUpL,UAElC6G,KAAKd,QAAQ8nB,wBAAwBziB,EAAWm3E,MAA8BvW,GAE9EnlE,KAAKd,QAAQylE,kBAGjBgW,EAAevqC,UAAU2zC,cAAgB,SAAUxpF,EAAKunD,EAAIC,EAAIy/B,EAAe7lF,EAAOgQ,EAAUH,EAAQxI,EAAQ4iE,EAAcif,EAAcvqF,GACxI,IAAIiK,EAAYvE,KAAKd,QAAQ0c,UAAUrhB,EAAIsF,IACvC67E,KACAjS,EAA2BzpE,KAAKypE,yBAAyB3nB,EAAIC,EAAIx9C,EAAUiK,QAAQhN,QAavF,GAZI2S,GAAiB5P,IAAcklE,GACd,sBAAb99D,GAAqC4L,GAAgBvX,KAAKd,WAC9Dw8E,GAAe36E,YAAawD,EAAUxD,aACtCwD,EAAUxD,YAAY/J,GAAK8qD,EAC3Bv9C,EAAUxD,YAAY9J,GAAK8qD,EACV,uBAAbp2C,GAAwD,eAAnBpH,EAAU1I,MAC/CmE,KAAK8kF,oBAAoBvgF,EAAWvB,EAAQ4iE,EAAcif,GAEjC,SAAzBtgF,EAAUnG,MAAMvC,MAAgD,YAA7B0I,EAAUnG,MAAM2mF,UACnD/kF,KAAKglF,wBAAwBzgF,IAGd,WAAnBA,EAAU1I,KAEV,GADA6/E,GAAe36E,YAAawD,EAAUxD,aAClCzG,EACA0F,KAAKilF,sBAAsB1qF,EAAmB,KAAboR,EAAmB,qBAAuBA,EAAUm2C,EAAIC,EAAIznD,EAASqB,GAAQ6P,QAG9G,IAAK,IAAI9U,EAAI,EAAGA,EAAI6D,EAAIpB,SAAS1C,OAAQC,IACrCsJ,KAAKilF,sBAAsB1qF,EAAmB,KAAboR,EAAmB,qBAAuBA,EAAUm2C,EAAIC,EAAIxnD,EAAIpB,SAASzC,GAAIiF,GAAQ6P,GAQlI,OAJKg2E,GACDxhF,KAAK8sE,eAAevoE,EAAWm3E,GAEnC17E,KAAKd,QAAQw9E,sBACNjT,GAKXkR,EAAevqC,UAAU40C,wBAA0B,SAAUzgF,GACzDA,EAAUiK,QAAQ2D,SAAS5L,OAAO,EAAG,GACrC,IAAImnD,EAAc,IAAI5+C,GAClBmvC,EAAc15C,EAAU8tB,mBAC5Bq7B,EAAczO,GAAkBhB,EAAa15C,GAC7CA,EAAUiK,QAAQ2D,SAAS5L,OAAO,EAAG,EAAGmnD,IAK5CitB,EAAevqC,UAAU00C,oBAAsB,SAAUvgF,EAAWvB,EAAQ4iE,EAAcif,GACtF,GAAItgF,EAAUpL,UAAgD,OAApCoL,EAAUpL,SAAS,GAAGsJ,aACtCO,GAAiC,KAAvBuB,EAAU9C,UAAoBojF,GAAe,CAC7D,IAAIx/E,EAAQd,EAAUpL,SAAS,GAC3B+rF,EAAS3gF,EAAUpL,SAAS,GAC5BoH,EAAOP,KAAKd,QAAQ0c,UAAUrX,EAAU9C,UACxC0jF,OAAW,EAiBf,GAhBA9/E,EAAM1M,OAAO,GAAK4L,EAAUxD,YACJ,QAApBsE,EAAM5C,WAA2C,WAApB4C,EAAM5C,WACnC4C,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGO,EAAIuN,EAAUxD,YAAY/J,EAChEkuF,EAAOvsF,OAAO,GAAG1B,EAAIoO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGQ,IAG3DoO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGQ,EAAIsN,EAAUxD,YAAY9J,EAChEiuF,EAAOvsF,OAAO,GAAG3B,EAAIqO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGO,GAE3DqO,EAAM5C,YAAc4C,EAAM5O,QAA2B,IAAjB4O,EAAM5O,UAC1C4O,EAAM5O,OAAS8O,GAAM2G,eAAe7G,EAAM1M,OAAO,GAAI0M,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,KAExFyuF,EAAOziF,YAAcyiF,EAAOzuF,QAA4B,IAAlByuF,EAAOzuF,UAC7CyuF,EAAOzuF,OAAS8O,GAAM2G,eAAe7G,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAIyuF,EAAOvsF,OAAOusF,EAAOvsF,OAAOlC,OAAS,IACjHyuF,EAAOziF,UAAY8C,GAAM9C,UAAU4C,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAIyuF,EAAOvsF,OAAOusF,EAAOvsF,OAAOlC,OAAS,KAEpF,KAA3B8N,EAAU0qC,cAAuB5pC,EAAM5O,OAAS,GAChD,GAAI8N,EAAUpL,SAAS1C,OAAS,EAAG,CAC/B,IAAIgC,EAAO8L,EAAUpL,SAAS,GAC1BisF,EAAgB7/E,GAAM9C,UAAUhK,EAAKE,OAAO,GAAIF,EAAKE,OAAO,IAC5D0M,EAAM5C,YAAc2C,GAAqBggF,IACjB,UAApB//E,EAAM5C,UACNhK,EAAKE,OAAO,GAAG3B,EAAIqO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGO,EAAIuJ,EAAKiO,QAAQ5V,QAAQ+O,YAAY3Q,EAAI,GAEzE,SAApBqO,EAAM5C,UACXhK,EAAKE,OAAO,GAAG3B,EAAIqO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGO,EAAIuJ,EAAKiO,QAAQ5V,QAAQ0P,WAAWtR,EAAI,GAExE,QAApBqO,EAAM5C,UACXhK,EAAKE,OAAO,GAAG1B,EAAIoO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGQ,EAAIsJ,EAAKiO,QAAQ5V,QAAQ6K,UAAUxM,EAAI,GAGhGwB,EAAKE,OAAO,GAAG1B,EAAIoO,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,GAAGQ,EAAIsJ,EAAKiO,QAAQ5V,QAAQoP,aAAa/Q,EAAI,GAEnGwB,EAAKgK,WAAahK,EAAKhC,SACvBgC,EAAKhC,OAAS8O,GAAM2G,eAAezT,EAAKE,OAAO,GAAIF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,KAExF4O,EAAM5O,OAAS8O,GAAM2G,eAAe7G,EAAM1M,OAAO,GAAI0M,EAAM1M,OAAO0M,EAAM1M,OAAOlC,OAAS,KAEnF4O,EAAM5C,YAAc2iF,GAAiB3sF,EAAKgK,WAAahK,EAAKhC,QACzC,QAApB4O,EAAM5C,WAA2C,WAApB4C,EAAM5C,WACnChK,EAAKE,OAAO,GAAK0M,EAAM1M,OAAO,GAC9BF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGO,EAAIyB,EAAKE,OAAO,GAAG3B,IAGvDyB,EAAKE,OAAO,GAAK0M,EAAM1M,OAAO,GAC9BF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGQ,EAAIwB,EAAKE,OAAO,GAAG1B,GAE3DwB,EAAKhC,OAAS8O,GAAM2G,eAAezT,EAAKE,OAAO,GAAIF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,IACpF8N,EAAUpL,SAASoN,OAAO,EAAG,IAG7BlB,EAAM5O,OAAS,QAInB4O,EAAM5O,OAAS,QAGlB,GAAI4O,EAAM5O,OAAS,EACpB,GAA2B,KAAvB8N,EAAU9C,SAAiB,CAkB3B,GAjByB,UAArByjF,EAAOziF,WACP0iF,EAAW5kF,EAAKiO,QAAQ5V,QAAQ+O,YAChCu9E,EAAOvsF,OAAOusF,EAAOvsF,OAAOlC,OAAS,GAAGQ,EAAIkuF,EAASluF,GAE3B,SAArBiuF,EAAOziF,WACZ0iF,EAAW5kF,EAAKiO,QAAQ5V,QAAQ0P,WAChC48E,EAAOvsF,OAAOusF,EAAOvsF,OAAOlC,OAAS,GAAGQ,EAAIkuF,EAASluF,GAE3B,QAArBiuF,EAAOziF,WACZ0iF,EAAW5kF,EAAKiO,QAAQ5V,QAAQ6K,UAChCyhF,EAAOvsF,OAAOusF,EAAOvsF,OAAOlC,OAAS,GAAGO,EAAImuF,EAASnuF,IAGrDmuF,EAAW5kF,EAAKiO,QAAQ5V,QAAQoP,aAChCk9E,EAAOvsF,OAAOusF,EAAOvsF,OAAOlC,OAAS,GAAGO,EAAImuF,EAASnuF,GAEzDkuF,EAAOzuF,OAAS8O,GAAM2G,eAAei5E,EAAUD,EAAOvsF,OAAOusF,EAAOvsF,OAAOlC,OAAS,IAChF8N,EAAUpL,SAAS1C,OAAS,EAAG,EAC3BgC,EAAO8L,EAAUpL,SAAS,IACrBsJ,WAAahK,EAAKhC,SACvBgC,EAAKhC,OAAS8O,GAAM2G,eAAeg5E,EAAOvsF,OAAOusF,EAAOvsF,OAAOlC,OAAS,GAAIgC,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,KAGrH8N,EAAUpL,SAASoN,OAAO,EAAG,QAG7BhC,EAAUpL,SAASoN,OAAO,EAAG,QAKjCvD,IAAW4iE,GAAgBrhE,EAAU9C,WAAauB,EAAOnD,IACzD0E,EAAUpL,UAAgD,OAApCoL,EAAUpL,SAAS,GAAGsJ,WAAsBO,GAAUA,aAAkB8R,IAC9F9U,KAAKqlF,sBAAsB9gF,EAAWvB,GAEtCA,GAAU4iE,GAAgBrhE,EAAU0qC,eAAiB22B,GACrDrhE,EAAUpL,UAAgD,OAApCoL,EAAUpL,SAAS,GAAGsJ,WAAsBO,GAAUA,aAAkB8R,IAC9F9U,KAAKslF,sBAAsB/gF,EAAWvB,EAAQ4iE,IAO1D+U,EAAevqC,UAAUk1C,sBAAwB,SAAU/gF,EAAWvB,EAAQ4iE,GAC1E,IAAIziE,EAAOnD,KAAKd,QAAQijD,WAAWn/C,EAAOwL,QAASo3D,GAC/CjqE,GAAU3E,EAAGmM,EAAKpH,QAAS9E,EAAGkM,EAAKnH,SACnCyG,EAAYnB,GAAiB3F,EAAO4F,GAA4ByB,EAAOwL,SAAUxL,EAAOwL,QAAQhN,QAChGg/B,EAAej8B,EAAUpL,SAAS,GAClCyrF,EAAgBrgF,EAAUpL,SAAS,GACvC,GAAIqnC,EAAa/9B,YAAcA,EAAW,CACtC,IAAItJ,KACAu0E,KACJ,GAAIltC,EAAa/9B,YAAc2C,GAAqB3C,GAAY,CAC5DirE,KACA,IAAI6X,OAAa,EACC,QAAd9iF,GAAqC,WAAdA,GACvB8iF,EAA4B,QAAd9iF,GACV5G,KAAM,aAAc2pF,YAAY,EAAM/iF,UAAWA,EACjDhM,OAAQgG,KAAK6G,IAAIk9B,EAAa7nC,OAAO,GAAG1B,EAAI0E,EAAM1E,KAG9C4E,KAAM,aAAc2pF,YAAY,EAAM/iF,UAAWA,EACjDhM,OAAQgG,KAAK6G,IAAI3H,EAAM1E,EAAIupC,EAAa7nC,OAAO,GAAG1B,IAE1Dy2E,EAAaltC,EAAa7nC,OAAO,GAAG3B,EAAI2E,EAAM3E,GACxC6E,KAAM,aAAc2pF,YAAY,EAAM/iF,UAAW,QAAShM,OAAS+pC,EAAa7nC,OAAO,GAAG3B,EAAI2E,EAAM3E,IACpG6E,KAAM,aAAc2pF,YAAY,EAAM/iF,UAAW,OAAQhM,OAASkF,EAAM3E,EAAIwpC,EAAa7nC,OAAO,GAAG3B,KAGzGuuF,EAA4B,UAAd9iF,GACV5G,KAAM,aAAc2pF,YAAY,EAAM/iF,UAAWA,EACjDhM,OAAQgG,KAAK6G,IAAIk9B,EAAa7nC,OAAO,GAAG3B,EAAI2E,EAAM3E,KAG9C6E,KAAM,aAAc2pF,YAAY,EAAM/iF,UAAWA,EACjDhM,OAAQgG,KAAK6G,IAAI3H,EAAM3E,EAAIwpC,EAAa7nC,OAAO,GAAG3B,IAE1D02E,EAAaltC,EAAa7nC,OAAO,GAAG1B,EAAI0E,EAAM1E,GACxC4E,KAAM,aAAc4G,UAAW,MAAO+iF,YAAY,EAAM/uF,OAAS+pC,EAAa7nC,OAAO,GAAG1B,EAAI0E,EAAM1E,IAClG4E,KAAM,aAAc4G,UAAW,SAAU+iF,YAAY,EAAM/uF,OAASkF,EAAM1E,EAAIupC,EAAa7nC,OAAO,GAAG1B,IAE/GkC,EAASrC,KAAK,IAAI6P,GAAkBpC,EAAW,WAAYghF,GAAY,IACvEpsF,EAASrC,KAAK,IAAI6P,GAAkBpC,EAAW,WAAYmpE,GAAW,SAGtEA,GAAc7xE,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQ,GAAI+uF,YAAY,GAChFrsF,EAASrC,KAAK,IAAI6P,GAAkBpC,EAAW,WAAYmpE,GAAW,IAEtEltC,EAAa/9B,YAAc2C,GAAqB3C,KAC9B,QAAdA,GAAqC,WAAdA,GACvB+9B,EAAa7nC,OAAO,GAAG3B,EAAI2E,EAAM3E,EACjCwpC,EAAa7nC,OAAO,GAAG1B,EAAIupC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGQ,EAAmB,QAAdwL,EAChF9G,EAAM1E,EAAI,GAAK0E,EAAM1E,EAAI,KAG7BupC,EAAa7nC,OAAO,GAAG1B,EAAI0E,EAAM1E,EACjCupC,EAAa7nC,OAAO,GAAG3B,EAAIwpC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGO,EAAmB,UAAdyL,EAChF9G,EAAM3E,EAAI,GAAK2E,EAAM3E,EAAI,IAEjCwpC,EAAa/pC,OAAS8O,GAAM2G,eAAes0B,EAAa7nC,OAAO,GAAI6nC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,IACpHmuF,EAAcnuF,OAAS8O,GAAM2G,eAAes0B,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAImuF,EAAcjsF,OAAOisF,EAAcjsF,OAAOlC,OAAS,KAExJ8N,EAAUpL,SAAWA,EAAS0sB,OAAOthB,EAAUpL,eAG/CqnC,EAAa7nC,OAAO,GAAKgD,EACP,QAAd8G,GAAqC,WAAdA,EACvB+9B,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGO,EAAI2E,EAAM3E,EAG9DwpC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGQ,EAAI0E,EAAM1E,EAElEupC,EAAa/pC,OAAS8O,GAAM2G,eAAes0B,EAAa7nC,OAAO,GAAI6nC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,IACpHmuF,EAAcnuF,OAAS8O,GAAM2G,eAAes0B,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAImuF,EAAcjsF,OAAOisF,EAAcjsF,OAAOlC,OAAS,KAO5JkkF,EAAevqC,UAAUo1B,sBAAwB,SAAUjhE,EAAWkhF,GAClE,IAAK,IAAI/uF,EAAI,EAAGA,EAAI6N,EAAUpL,SAAS1C,OAAS,EAAGC,IAAK,CACpD,IAAI4D,EAAUiK,EAAUpL,SAAS,GAC7BmB,EAAQkrF,aACJC,EACAnrF,EAAQkrF,YAAa,GAGrBjhF,EAAUpL,SAASoN,OAAO7P,EAAG,GAC7BA,QAQhBikF,EAAevqC,UAAUi1C,sBAAwB,SAAU9gF,EAAWvB,GAClEhD,KAAKwlE,sBAAsBjhE,GAC3B,IACIxD,EACA2kF,EAFA1kF,EAAgBgC,EAAOwL,QAAQ2D,SAAS,GAAGvZ,QAG3C4nC,EAAej8B,EAAUpL,SAAS,GAClC40E,EAAcxpE,EAAUpL,SAAS,GACjCA,KACJ,GAA+B,UAA3BqnC,EAAa/9B,WAAoD,SAA3B+9B,EAAa/9B,UAEnD,GADA1B,EAA0C,SAA3By/B,EAAa/9B,UAAwBzB,EAAcsH,WAAatH,EAAc2G,YACzF64B,EAAa/pC,OAASuK,EAAczI,OAAsC,SAA3BioC,EAAa/9B,WAC5D1B,EAAY/J,GAAKwpC,EAAa7nC,OAAO,GAAG3B,GAAkC,UAA3BwpC,EAAa/9B,WAC5D1B,EAAY/J,GAAKwpC,EAAa7nC,OAAO,GAAG3B,EACxCwpC,EAAa7nC,OAAO,GAAG1B,EAAIupC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGQ,EAAI8J,EAAY9J,EAC/FupC,EAAa7nC,OAAO,GAAG3B,EAAI+J,EAAY/J,EACvCwpC,EAAa/pC,OAAS8O,GAAM2G,eAAes0B,EAAa7nC,OAAO,GAAI6nC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,IACpHs3E,EAAYt3E,OAAS8O,GAAM2G,eAAes0B,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAIs3E,EAAYp1E,OAAOo1E,EAAYp1E,OAAOlC,OAAS,QAE7I,CACD,IAAIgM,OAAY,EAOhBijF,EAA8B,YAL1BjjF,EADAsrE,EAAYtrE,UACAsrE,EAAYtrE,UAGZ8C,GAAM9C,UAAUsrE,EAAYp1E,OAAO,GAAIo1E,EAAYp1E,OAAOo1E,EAAYp1E,OAAOlC,OAAS,KAE5DuK,EAAcgH,aAAehH,EAAcyC,UACjFsqE,EAAYt3E,QAAUs3E,EAAYtrE,YAClCsrE,EAAYt3E,OACO,QAAdgM,EAAuB+9B,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGQ,GAAKyuF,EAAazuF,EAAI,IAC7FyuF,EAAazuF,EAAI,GAAMupC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGQ,GAExFupC,EAAa/pC,OAAS+pC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGO,EAAI0uF,EAAa1uF,EAC3FwpC,EAAa/9B,UAAa+9B,EAAa/pC,OAAS,EAAK,QAAU,OAC/D,IAAIi3E,GAAc7xE,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQ,IACpE0C,EAASrC,KAAK,IAAI6P,GAAkBpC,EAAW,WAAYmpE,GAAW,IACtEnpE,EAAUpL,SAAWA,EAAS0sB,OAAOthB,EAAUpL,eAKnD,GADA4H,EAA0C,WAA3By/B,EAAa/9B,UAA0BzB,EAAcgH,aAAehH,EAAcyC,UAC7F+8B,EAAa/pC,OAASuK,EAAc1I,QAAuC,QAA3BkoC,EAAa/9B,WAC7D1B,EAAY9J,GAAKupC,EAAa7nC,OAAO,GAAG1B,GACZ,WAA3BupC,EAAa/9B,WAA0B1B,EAAY9J,GAAKupC,EAAa7nC,OAAO,GAAG1B,EAChFupC,EAAa7nC,OAAO,GAAG3B,EAAIwpC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGO,EAAI+J,EAAY/J,EAC/FwpC,EAAa7nC,OAAO,GAAG1B,EAAI8J,EAAY9J,EACvCupC,EAAa/pC,OAAS8O,GAAM2G,eAAes0B,EAAa7nC,OAAO,GAAI6nC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,IACpHs3E,EAAYt3E,OAAS8O,GAAM2G,eAAes0B,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAIs3E,EAAYp1E,OAAOo1E,EAAYp1E,OAAOlC,OAAS,QAE7I,CACDivF,EAA0C,SAA1B3X,EAAYtrE,UAAwBzB,EAAcsH,WAAatH,EAAc2G,YACzFlF,OAAY,EAEZA,EADAsrE,EAAYtrE,UACAsrE,EAAYtrE,UAGZ8C,GAAM9C,UAAUsrE,EAAYp1E,OAAO,GAAIo1E,EAAYp1E,OAAOo1E,EAAYp1E,OAAOlC,OAAS,IAElGs3E,EAAYt3E,QAAUs3E,EAAYtrE,YAClCsrE,EAAYt3E,OACO,SAAdgM,EAAwB+9B,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGO,GAAK0uF,EAAa1uF,EAAI,IAC9F0uF,EAAa1uF,EAAI,GAAMwpC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGO,GAExFwpC,EAAa/pC,OAAS+pC,EAAa7nC,OAAO6nC,EAAa7nC,OAAOlC,OAAS,GAAGQ,EAAIyuF,EAAazuF,EAC3FupC,EAAa/9B,UAAa+9B,EAAa/pC,OAAS,EAAK,SAAW,MAC5Di3E,GAAc7xE,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQ,IACpE0C,EAASrC,KAAK,IAAI6P,GAAkBpC,EAAW,WAAYmpE,GAAW,IACtEnpE,EAAUpL,SAAWA,EAAS0sB,OAAOthB,EAAUpL,YAO3DwhF,EAAevqC,UAAU60C,sBAAwB,SAAU1gF,EAAWoB,EAAOm8C,EAAIC,EAAIhpD,EAAK4C,EAAO6P,GAC7F,IAAIsX,EAASve,EAAUpL,SAASmnB,QAAQvnB,GACpCuB,EAAUiK,EAAUpL,SAAS2pB,GAC7BxoB,IACc,sBAAVqL,IAAkCrL,EAAQmL,QAAQjO,OAAS8C,EAAQmL,QAAQC,UAC3EpL,EAAQmL,SACJC,SAAUnB,EAAUmB,SAASnB,EAAUxD,YAAapF,GACpDnE,MAAO+N,GAAMsI,UAAUtJ,EAAUxD,YAAapF,IAGnC,sBAAVgK,IAAkCrL,EAAQwL,QAAQtO,OAAS8C,EAAQwL,QAAQJ,UAChFpL,EAAQwL,SACJJ,SAAUnB,EAAUmB,SAASnB,EAAU0G,YAAatP,GACpDnE,MAAO+N,GAAMsI,UAAUtJ,EAAU0G,YAAatP,KAGlC,uBAAVgK,IAAmCpB,EAAU9C,UAAsB,uBAAVkE,IAAmCpB,EAAU0iB,WACzGzb,GAAUiH,GAAcnY,EAAQmL,UAAYgN,GAAcnY,EAAQwL,UACjEP,GAAMC,aAAalL,EAAQmW,UAC3BnW,EAAQg4B,aAAe5f,GAAgBnO,EAAUxD,YAAawD,EAAU0G,cAExE1F,GAAMC,aAAalL,EAAQ9B,UAC3B8B,EAAQi4B,aAAe7f,GAAgBnO,EAAU0G,YAAa1G,EAAUxD,eAG7D,sBAAV4E,GAA4C,uBAAVA,IAAmC6F,GAAUiH,GAAcnY,EAAQmL,UAC1GnL,EAAQg4B,aAAat7B,GAAK8qD,EAC1BxnD,EAAQg4B,aAAar7B,GAAK8qD,EACpBx8C,GAAMC,aAAalL,EAAQmW,cAC7BnW,EAAQmW,QAAWzZ,EAAGsD,EAAQg4B,aAAat7B,EAAGC,EAAGqD,EAAQg4B,aAAar7B,MAG3D,sBAAV0O,GAA4C,uBAAVA,IAAmC6F,GAAUiH,GAAcnY,EAAQwL,YAC1GxL,EAAQi4B,aAAav7B,GAAK8qD,EAC1BxnD,EAAQi4B,aAAat7B,GAAK8qD,EACpBx8C,GAAMC,aAAalL,EAAQ9B,cAC7B8B,EAAQ9B,QAAWxB,EAAGsD,EAAQi4B,aAAav7B,EAAGC,EAAGqD,EAAQi4B,aAAat7B,OAMtF0jF,EAAevqC,UAAU4zC,cAAgB,SAAUzpF,EAAKunD,EAAIC,EAAIy/B,EAAe7lF,EAAOgQ,EAAUH,EAAQlR,GACpG,IACIohF,EADAn3E,EAAYvE,KAAKd,QAAQ0c,UAAUrhB,EAAIsF,IAEvC8lF,EAAsB3lF,KAAKypE,yBAAyB3nB,EAAIC,EAAIx9C,EAAUiK,QAAQhN,QAClF,GAAI6S,GAAiB9P,IAA2B,sBAAboH,GAC5Bg6E,GAAuBpuE,GAAgBvX,KAAKd,SAAU,CAIzD,GAHAw8E,GAAezwE,YAAa1G,EAAU0G,aACtC1G,EAAU0G,YAAYjU,GAAK8qD,EAC3Bv9C,EAAU0G,YAAYhU,GAAK8qD,EACV,uBAAbp2C,GAAwD,eAAnBpH,EAAU1I,MAC/C0I,EAAUpL,UAAYoL,EAAUpL,SAAS1C,OAAS,EAAG,CACrD,IAAI2C,EAAOmL,EAAUpL,SAASoL,EAAUpL,SAAS1C,OAAS,GACtD2C,GAA4E,IAApEmL,EAAUpL,SAASoL,EAAUpL,SAAS1C,OAAS,GAAGkC,OAAOlC,SAC1C,SAAnB2C,EAAKqJ,WAA2C,UAAnBrJ,EAAKqJ,UAClCrJ,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,GAAGO,EAAIuN,EAAU0G,YAAYjU,EAG9DoC,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,GAAGQ,EAAIsN,EAAU0G,YAAYhU,EAElEmC,EAAK3C,OAAS8O,GAAM2G,eAAe9S,EAAKT,OAAO,GAAIS,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,IACpF2C,EAAKqJ,UAAY8C,GAAM9C,UAAUrJ,EAAKT,OAAO,GAAIS,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,KAG7D,SAAzB8N,EAAUnG,MAAMvC,MAAgD,YAA7B0I,EAAUnG,MAAM2mF,UACnD/kF,KAAKglF,wBAAwBzgF,GAGrC,GAAuB,WAAnBA,EAAU1I,KAEV,GADA6/E,GAAezwE,YAAa1G,EAAU0G,aAClC3Q,EACA0F,KAAKilF,sBAAsB1qF,EAAmB,KAAboR,EAAmB,qBAAuBA,EAAUm2C,EAAIC,EAAIznD,EAASqB,GAAQ6P,QAG9G,IAAK,IAAI9U,EAAI,EAAGA,EAAI6D,EAAIpB,SAAS1C,OAAQC,IACrCsJ,KAAKilF,sBAAsB1qF,EAAmB,KAAboR,EAAmB,qBAAuBA,EAAUm2C,EAAIC,EAAIxnD,EAAIpB,SAASzC,GAAIiF,GAAQ6P,GAQlI,OAJKg2E,GACDxhF,KAAK8sE,eAAevoE,EAAWm3E,GAEnC17E,KAAKd,QAAQw9E,sBACNiJ,GAGXhL,EAAevqC,UAAUo8B,iBAAmB,SAAUjyE,EAAKunD,EAAIC,EAAIy/B,EAAeoE,GAC9E,IAAIrhF,EAAYvE,KAAKd,QAAQ0c,UAAUrhB,EAAIsF,IAC3C,IAAwB,aAAnB0E,EAAU1I,MAA0C,WAAnB0I,EAAU1I,OAAsB0I,EAAUpL,SAAS1C,OAAS,EAAG,CACjG,QAAsBwD,IAAlB2rF,GAA+BrhF,EAAUpL,SAASysF,GAClDrhF,EAAUpL,SAASysF,GAAejqF,MAAM3E,GAAK8qD,EAC7Cv9C,EAAUpL,SAASysF,GAAejqF,MAAM1E,GAAK8qD,OAG7C,IAAK,IAAIrrD,EAAI,EAAGA,EAAI6N,EAAUpL,SAAS1C,OAAS,EAAGC,IAC/C6N,EAAUpL,SAASzC,GAAGiF,MAAM3E,GAAK8qD,EACjCv9C,EAAUpL,SAASzC,GAAGiF,MAAM1E,GAAK8qD,EAGpCy/B,GACDxhF,KAAK8sE,eAAevoE,GAG5B,OAAO,GAGXo2E,EAAevqC,UAAUy1C,cAAgB,SAAU3lE,EAAQ2U,EAASr9B,EAAOupC,EAAO+kD,GAC9E/kD,EAAQA,MACR,IAAIrlC,EAASL,IACb0B,EAAarB,EAAQlE,EAAOupC,EAAM/pC,EAAG+pC,EAAM9pC,GAE3C,IAAK,IADD6tE,EACKjoE,EAAK,EAAGkpF,EAAYlxD,EAASh4B,EAAKkpF,EAAUtvF,OAAQoG,IAAM,CAC/D,IAAItC,EAAMwrF,EAAUlpF,GACpB,GAAItC,aAAeua,IACf,GAAIL,GAAUla,IAAQgd,GAAgBvX,KAAKd,SAAU,CACjD,IAAsB,IAAlB4mF,GAA2B5lE,IAAW3lB,EAAK,CAC3CuqE,GAAc53D,YAAa3S,EAAI2S,aAC/B3S,EAAI2S,aAAe1V,EACnB+C,EAAI2S,aAAe3S,EAAI2S,YAAc,KAAO,IAC5C,IAAItS,EAAYa,EAAuBC,GAAU1E,EAAGuD,EAAIwB,QAAS9E,EAAGsD,EAAIyB,UACxEzB,EAAIwB,QAAUnB,EAAU5D,EACxBuD,EAAIyB,QAAUpB,EAAU3D,EACxB+I,KAAKd,QAAQigB,mBAAmB5kB,EAAKuqE,GAAa53D,YAAa3S,EAAI2S,cAEvE,GAAI3S,EAAIksD,UAAW,CACf,IAAI1qC,EAAW/b,KAAKd,QAAQ0c,UAAUrhB,EAAIksD,WACtC9xB,EAAQ30B,KAAKd,QAAQ8nD,WAAWg/B,iBAAiBjqE,EAAUxhB,EAAIsF,GAAIG,KAAKd,SAC5Ec,KAAKd,QAAQ8nD,WAAWi/B,oBAAoBtxD,EAAOp6B,EAAKyF,KAAKd,SAE7D3E,EAAI4X,UAAY5X,EAAI4X,SAAS1b,SAAW8D,EAAIqe,WAC5C5Y,KAAKkmF,YAAY3rF,EAAKs6B,SAK9B70B,KAAKmmF,aAAa5rF,EAAK/C,EAAOupC,IAAW/pC,EAAGuD,EAAIiU,QAAQzS,QAAS9E,EAAGsD,EAAIiU,QAAQxS,UAEpFgE,KAAKd,QAAQof,oBAAoB/jB,GAErCyF,KAAKd,QAAQw9E,sBACb18E,KAAKd,QAAQylE,kBAGjBgW,EAAevqC,UAAUu1B,iBAAmB,SAAU5D,GAKlD,OAJK/hE,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBszC,aACtDpmF,KAAKijE,gBACRjjE,KAAKd,QAAQ+jE,eAAe0C,iBAAiB5D,GAE1CA,GAGX4Y,EAAevqC,UAAUu4B,UAAY,SAAUnxE,GAC3C,OAAKwI,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBszC,aACtDpmF,KAAKijE,eACDjjE,KAAKijE,eAAe0F,UAAU3oE,KAAKd,QAAS1H,GAG5C,GAIfmjF,EAAevqC,UAAU+1C,aAAe,SAAU1gE,EAAMjuB,EAAOupC,GAC3D,IAAKtb,EAAKzkB,gBAAkBykB,EAAK/jB,cAAe,CAC5C,IAAIhG,EAASL,IACb0B,EAAarB,EAAQlE,EAAOupC,EAAM/pC,EAAG+pC,EAAM9pC,GAC3CwuB,EAAK1kB,YAActF,EAAuBC,EAAQ+pB,EAAK1kB,aACvD0kB,EAAKxa,YAAcxP,EAAuBC,EAAQ+pB,EAAKxa,aAC/B,SAApBwa,EAAKrnB,MAAMvC,MAA2C,YAAxB4pB,EAAKrnB,MAAM2mF,UACzC/kF,KAAKglF,wBAAwBv/D,GAEjC,IAAIkkC,GAAY5oD,YAAa0kB,EAAK1kB,YAAakK,YAAawa,EAAKxa,aACjEjL,KAAKd,QAAQ8nB,wBAAwBvB,KAAUkkC,KAGvDgxB,EAAevqC,UAAUk0C,4BAA8B,SAAUjG,GAC7D,IAEIjd,EAAgBphE,KAAKd,QAAe,oBACxCc,KAAKd,QAAQyc,uBAAsB,GAEnC,IAAK,IADD0qE,EAAermF,KAAKsoE,kBAAkB+V,MAAoB,GAAO,GAC5D3nF,EAAI,EAAGA,EAAI2vF,EAAa5vF,OAAQC,IAAK,CAC1C,IAAI6D,EAAMyF,KAAKd,QAAQ0c,UAAUyqE,EAAa3vF,GAAGmJ,IACjDtF,EAAIwB,QAAUxB,EAAIiU,QAAQzS,QAC1BxB,EAAIyB,QAAUzB,EAAIiU,QAAQxS,QAC1BzB,EAAIhC,MAAQgC,EAAIiU,QAAQjW,MACxBgC,EAAIjC,OAASiC,EAAIiU,QAAQlW,OAE7B0H,KAAKd,QAAQyc,sBAAsBylD,IAGvCuZ,EAAevqC,UAAUzzB,MAAQ,SAAUpiB,EAAK8nC,EAAIC,EAAIvB,EAAOwB,GAC3D,IAAIhiC,EAAOP,KAAKd,QAAQ0c,UAAUrhB,EAAIsF,IAClCw+E,EAAW99E,EAEXX,EAAUW,EAAKiO,QACd+zB,IACDA,EAAYhoC,GAEhB,IAAI+rF,EAAa/jD,EAAU/zB,QAGvB3K,EAAWkgC,GAFPuiD,EAAWvqF,QAAUuqF,EAAW/5E,WAAWhU,MAAQ+tF,EAAWvlD,MAAM/pC,EACpEsvF,EAAWtqF,QAAUsqF,EAAW/5E,WAAWjU,OAASguF,EAAWvlD,MAAM9pC,EAC/CqvF,EAAW/5E,WAAWhU,MAAO+tF,EAAW/5E,WAAWjU,OAAQguF,EAAWp5E,YAAao5E,EAAWvqF,QAASuqF,EAAWtqF,QAAS+kC,GACzJ,QAAiC9mC,IAA7B2F,EAAQ2M,WAAWhU,YAAqD0B,IAA9B2F,EAAQ2M,WAAWjU,QAAwBif,GAAgBvX,KAAKd,SAAU,CACpH,GAAIm/E,EAASlsE,WAAcksE,EAAkB,UAAG,CAE5C,IAAK,IAAIxhF,EAAK,EAAGi/B,EADL97B,KAAKsoE,kBAAkB+V,MACDxhF,EAAKi/B,EAAQrlC,OAAQoG,IAAM,CACzD,IAAI8T,EAAOmrB,EAAQj/B,GACnBmD,KAAKumF,YAAYlkD,EAAIC,EAAIz+B,EAAU8M,EAAM/Q,EAAS2iC,GAEtDhoC,EAAIiU,QAAQ6Q,QAAQ,IAAIC,IACxB/kB,EAAIiU,QAAQ+Q,QAAQhlB,EAAIiU,QAAQgR,aAChCxf,KAAKd,QAAQsnF,kBAAkBjmF,GAC/BP,KAAKskF,4BAA4BjG,QAGjCr+E,KAAKumF,YAAYlkD,EAAIC,EAAIz+B,EAAUtD,EAAMX,EAAS2iC,GAEtD,IAAI/gC,EAASuzB,GAAUx6B,EAAIiU,SAE3B,IAD+BxO,KAAKypE,8BAAyBxvE,OAAWA,EAAWuH,GAG/E,OADAxB,KAAK2c,MAAMpiB,EAAK,EAAI8nC,EAAI,EAAIC,EAAIvB,IACzB,EAEX/gC,KAAKd,QAAQof,oBAAoB/jB,GAErC,OAAO,GAGXogF,EAAevqC,UAAUk4B,kBAAoB,SAAU/nE,EAAMuZ,EAAOgsE,EAAeW,GAG/E,IAAK,IAFD91E,EAAOpQ,EACPmmF,KACKhwF,EAAI,EAAGA,EAAIia,EAAKwB,SAAS1b,OAAQC,KACtC6J,EAAQP,KAAKd,QAAQ0c,UAAUjL,EAAKwB,SAASzb,OAEpC6J,EAAK4R,UAIF2zE,GACAhsE,EAAMhjB,KAAKyJ,GAEXkmF,GACAC,EAAY5vF,KAAKyJ,GAErBuZ,EAAQ9Z,KAAKsoE,kBAAkB/nE,EAAMuZ,IATrCA,EAAMhjB,KAAKyJ,IAavB,OAAO,EAAgBmmF,EAAc5sE,GAGzC6gE,EAAevqC,UAAU81C,YAAc,SAAU3lF,EAAMuZ,GACnD,IAAInJ,EAAOpQ,EACX,GAAIA,EAAK4R,SACL,IAAK,IAAIzb,EAAI,EAAGA,EAAIia,EAAKwB,SAAS1b,OAAQC,IACtC6J,EAAQP,KAAKd,QAAQ0c,UAAUjL,EAAKwB,SAASzb,IAC7CojB,EAAMhjB,KAAKyJ,GAGnB,OAAOuZ,GAGX6gE,EAAevqC,UAAUm4B,WAAa,SAAU1oE,GAE5C,OADWG,KAAKd,QAAQ0c,UAAU/b,IAItC86E,EAAevqC,UAAUm2C,YAAc,SAAUlkD,EAAIC,EAAIvB,EAAOxmC,EAAKqF,EAAS2iC,GAC1EF,EAAKA,EAAK,EAAI,EAAIA,EAClBC,EAAKA,EAAK,EAAI,EAAIA,EAClB,IACIwiC,KACJ,GAAW,IAAPziC,GAAmB,IAAPC,EAAU,CACtB,IAAI/pC,OAAQ,EACRD,OAAS,EACb,GAAIiC,aAAeua,GAAM,CACrB,IAAIvU,EAAOhG,EACPosF,OAAW,EACXhyD,OAAQ,EACZmwC,GACIvsE,MAAOgC,EAAIiU,QAAQjC,WAAWhU,MAAOD,OAAQiC,EAAIiU,QAAQjC,WAAWjU,OACpEyD,QAASxB,EAAIiU,QAAQzS,QAASC,QAASzB,EAAIiU,QAAQxS,QACnD2G,QAAUI,IAAKxC,EAAKoC,OAAOI,IAAKH,KAAMrC,EAAKoC,OAAOC,OAE9B,SAApBrC,EAAKnC,MAAMvC,MAAmB0E,EAAKnC,MAAM+oD,SAASD,WAAWE,WAC1D7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAAS,IACrDk+B,EAAQ30B,KAAKd,QAAQ8nD,WAAWg/B,iBAAiBzlF,EAAMA,EAAKV,GAAIG,KAAKd,SACrEynF,EAAWpmF,EAAKiO,QAAQhN,OAAOwvB,aAAa2D,IAEhDp8B,EAAQgI,EAAKiO,QAAQjC,WAAWhU,MAAQ8pC,EACxC/pC,EAASiI,EAAKiO,QAAQjC,WAAWjU,OAASgqC,OACpBroC,IAAlBsG,EAAK2Y,UAA4C,IAAlB3Y,EAAK2Y,WACpC3gB,EAAQkE,KAAKyK,IAAI3G,EAAK2Y,SAAU3gB,SAEd0B,IAAlBsG,EAAKse,UAA4C,IAAlBte,EAAKse,WACpCtmB,EAAQkE,KAAKmJ,IAAIrF,EAAKse,SAAUtmB,SAEb0B,IAAnBsG,EAAKue,WAA8C,IAAnBve,EAAKue,YACrCxmB,EAASmE,KAAKyK,IAAI3G,EAAKue,UAAWxmB,SAEf2B,IAAnBsG,EAAK8Z,WAA8C,IAAnB9Z,EAAK8Z,YACrC/hB,EAASmE,KAAKmJ,IAAIrF,EAAK8Z,UAAW/hB,IAElCquF,IACApuF,EAAQkE,KAAKmJ,IAAIrN,EAAQo8B,EAAM9xB,MAAQtC,EAAKiO,QAAQhN,OAAOxK,GAC3DsB,EAASmE,KAAKmJ,IAAItN,EAASq8B,EAAM7xB,OAASvC,EAAKiO,QAAQhN,OAAOvK,IAElEorC,EAAK9pC,EAAQgI,EAAKgM,WAAWhU,MAC7B+pC,EAAKhqC,EAASiI,EAAKgM,WAAWjU,OAElC,IAAIoD,EAASL,IACTirF,OAAa,EAQjB,GAPK/jD,IACDA,EAAYhoC,GAEhB+rF,EAAa/jD,EAAU/zB,QACvBzR,EAAarB,GAAS4qF,EAAWp5E,YAAa6zB,EAAM/pC,EAAG+pC,EAAM9pC,GAC7DwG,EAAY/B,EAAQ2mC,EAAIC,EAAIvB,EAAM/pC,EAAG+pC,EAAM9pC,GAC3C8F,EAAarB,EAAQ4qF,EAAWp5E,YAAa6zB,EAAM/pC,EAAG+pC,EAAM9pC,GACxDsD,aAAeua,GAAM,CACrB,IAEIpH,EADA9K,OAAO,EAEP6/B,EAAchnC,EAAuBC,GAAU1E,GAH/CuJ,EAAOhG,GAGgDiU,QAAQzS,QAAS9E,EAAGsJ,EAAKiO,QAAQxS,UACxF4qF,EAAUrmF,EAAKiO,QAAQzS,QAAUwE,EAAKiO,QAAQjC,WAAWhU,MAAQgI,EAAKwgC,MAAM/pC,EAC5E6vF,EAAStmF,EAAKiO,QAAQxS,QAAUuE,EAAKiO,QAAQjC,WAAWjU,OAASiI,EAAKwgC,MAAM9pC,EAChF,GAAIsB,EAAQ,EACR,GAAIgI,EAAKkmD,UAAW,CAChB,IAAIxqC,EAAWjc,KAAKd,QAAQ0c,UAAUrb,EAAKkmD,aACtCxqC,EAAS/C,UAAc3Y,EAAKoC,OAAOC,KAAOrK,EAAS0jB,EAAS/C,YAC7D3Y,EAAKhI,MAAQA,EACbgI,EAAKxE,QAAU0mC,EAAYzrC,QAI/BuJ,EAAKhI,MAAQA,EACbgI,EAAKxE,QAAU0mC,EAAYzrC,EAGnC,GAAIsB,EAAS,EACT,GAAIiI,EAAKkmD,UAAW,CAChB,IAAIqgC,EAAW9mF,KAAKd,QAAQ0c,UAAUrb,EAAKkmD,aACtCqgC,EAAShoE,WAAeve,EAAKoC,OAAOI,IAAMzK,EAAUwuF,EAAShoE,aAC9Dve,EAAKjI,OAASA,EACdiI,EAAKvE,QAAUymC,EAAYxrC,QAI/BsJ,EAAKjI,OAASA,EACdiI,EAAKvE,QAAUymC,EAAYxrC,EAGnC2L,EAAOrC,EAAKiO,QAAQzS,QAAUwE,EAAKiO,QAAQjC,WAAWhU,MAAQgI,EAAKwgC,MAAM/pC,EACzE0W,EAAQnN,EAAKiO,QAAQxS,QAAUuE,EAAKiO,QAAQjC,WAAWjU,OAASiI,EAAKwgC,MAAM9pC,EAC5D+I,KAAKd,QAAQ0c,UAAUrb,EAAKkmD,aACzBlmD,EAAKoC,OAAOI,KAAO2K,EAAQm5E,IAAY,GACpDtmF,EAAKoC,OAAOC,MAAQA,EAAOgkF,IAAY,GACxC5mF,KAAKd,QAAQigB,mBAAmB5kB,MAC5BoI,QAAUI,IAAKxC,EAAKoC,OAAOI,IAAKH,KAAMrC,EAAKoC,OAAOC,QAIlD8Y,GAAuB1b,KAAKd,QAAS3E,GAAK,GAC1C2kB,GAA0Blf,KAAKd,QAAS3E,GAGxCyF,KAAKd,QAAQigB,mBAAmB5kB,EAAKuqE,GACjCvsE,MAAOgI,EAAKhI,MAAOD,OAAQiI,EAAKjI,OAAQyD,QAASwE,EAAKxE,QAASC,QAASuE,EAAKvE,QAC7E2G,QAAUI,IAAKxC,EAAKoC,OAAOI,KAAO2K,EAAQm5E,GAASjkF,KAAMrC,EAAKoC,OAAOC,MAAQA,EAAOgkF,UAK/F,CACD,IAAIriF,EAAYhK,EACZqtE,GAAgB7mE,YAAawD,EAAUxD,YAAakK,YAAa1G,EAAU0G,aAC1E1G,EAAUvD,eAAkBuD,EAAU7C,eACvC1B,KAAK+mF,eAAexiF,EAAW7I,EAAQksE,GAG/C,IAAI3oD,EAAajf,KAAKd,QAAQ0c,UAAUrhB,EAAIksD,WAC5C,GAAIxnC,EAAY,CACGA,EAAWzQ,QAAQhN,OACtBjH,EAAIiU,QAAQhN,OACpBmzB,EAAQ30B,KAAKd,QAAQ8nD,WAAWg/B,iBAAiB/mE,EAAY1kB,EAAIsF,GAAIG,KAAKd,SAC9Ec,KAAKd,QAAQ8nD,WAAWi/B,oBAAoBtxD,EAAOp6B,EAAKyF,KAAKd,YAIzEy7E,EAAevqC,UAAU22C,eAAiB,SAAUxiF,EAAW7I,EAAQopE,GACnEvgE,EAAUxD,YAActF,EAAuBC,EAAQ6I,EAAUxD,aACjEwD,EAAU0G,YAAcxP,EAAuBC,EAAQ6I,EAAU0G,aACpC,SAAzB1G,EAAUnG,MAAMvC,MAAgD,YAA7B0I,EAAUnG,MAAM2mF,UACnD/kF,KAAKglF,wBAAwBzgF,GAEjC,IAAIolD,GAAY5oD,YAAawD,EAAUxD,YAAakK,YAAa1G,EAAU0G,aAC3EjL,KAAKd,QAAQ8nB,wBAAwBziB,EAAWugE,EAAWnb,IAG/DgxB,EAAevqC,UAAUg4B,SAAW,SAAU7tE,EAAK4/E,EAAar4B,EAAIC,GAChE,IAAI+iB,EACAkiB,EACA7jF,EAAOnD,KAAKilE,WAAWkV,EAAa5/E,GACpCiH,EAASuzB,GAAUx6B,EAAIiU,SACvBrL,GAAQ4U,GAAQ5U,EAAMnD,KAAKd,WAC3B4lE,EAAY9kE,KAAKinF,eAAe1sF,EAAK4I,GACrCA,EAAK8M,OAAOjZ,GAAM8qD,EAAKtgD,EAAOjJ,MAC9B4K,EAAK8M,OAAOhZ,GAAM8qD,EAAKvgD,EAAOlJ,OAC9B0uF,EAAgBhnF,KAAKinF,eAAe1sF,EAAK4I,GACzCnD,KAAKd,QAAQigB,mBAAmB5kB,EAAKuqE,EAAWkiB,GAChDhnF,KAAKd,QAAQof,oBAAoB/jB,KAIzCogF,EAAevqC,UAAUw7B,UAAY,SAAUrxE,EAAK2hC,EAAa4lB,EAAIC,GACjE,IAAI+iB,EACAkiB,EACAp+B,EACJA,EAAQ5oD,KAAKilE,WAAW/oC,EAAa3hC,GACrC,IAAIiH,EAASD,GAA4BhH,EAAIiU,SAC7Cs2D,EAAY9kE,KAAKknF,qBAAqB3sF,EAAKquD,GACvCA,aAAiBt1C,IACjBs1C,EAAM34C,OAAOjZ,GAAM8qD,EAAKtgD,EAAOjJ,MAC/BqwD,EAAM34C,OAAOhZ,GAAM8qD,EAAKvgD,EAAOlJ,SAG/B0H,KAAKmnF,2BAA2B5sF,EAAKquD,EAAO9G,EAAIC,GAC5C6G,aAAiBr1C,KACjBq1C,EAAMjzB,UAAY,WAG1BqxD,EAAgBhnF,KAAKknF,qBAAqB3sF,EAAKquD,GAC3CruD,aAAeua,GACf9U,KAAKd,QAAQigB,mBAAmB5kB,EAAKuqE,EAAWkiB,GAGhDhnF,KAAKd,QAAQ8nB,wBAAwBzsB,EAAKuqE,EAAWkiB,GAEzDhnF,KAAKd,QAAQof,oBAAoB/jB,GAC5Bs0C,GAAW7uC,KAAKd,QAAS0pD,GAAO,EAAO1sB,IACxCl8B,KAAKqkE,YAAY9pE,EAAK2hC,IAG9By+C,EAAevqC,UAAU+2C,2BAA6B,SAAUp6E,EAAQ67C,EAAO9G,EAAIC,EAAItf,EAAavhB,GAChG,IAGIjR,EAEA7W,EAGAguF,EARA9O,EAAct4E,KAAKd,QAAQijD,WAAWp1C,EAAOyB,QAASo6C,EAAM/oD,IAC5D9D,EAAUu8E,EAAYv8E,QACtBC,EAAUs8E,EAAYt8E,QAEtBq2B,EAAqBtlB,EAAOslB,mBAE5Bg1D,EAAc,EACdC,EAAc,EAEdvlB,EAAkB,IAAgC/qE,EAAG+E,EAAU+lD,EAAI7qD,EAAG+E,EAAU+lD,GAChFwlC,EAAiBvnF,KAAKwnF,wBAAwBzlB,EAAiB1vC,GAC/Dz3B,EAAYy3B,EAAmBA,EAAmB57B,OAAS,GAE/D,GADA6wF,EAAc/hF,GAAMusC,0BAA0Bzf,GAC1Ck1D,EAAe9wF,OAAS,EAAG,CAC3B,GAAImyD,EAAM6+B,UAAU1kF,KAAO6lD,EAAM6+B,UAAU3kF,QAAU8lD,EAAM6+B,UAAU7kF,MAAQgmD,EAAM6+B,UAAU5kF,MAAO,CAChG,IAAI6kF,GAAgBA,YAAa,MACjC9sF,EAAYoF,KAAK2nF,kBAAkB5lB,EAAiB1vC,EAAoBq1D,GACxE,IAAIhiF,GAAagiF,YAAa,MAE9B,GADAN,EAAqBpnF,KAAK2nF,kBAAkB5lB,EAAiBwlB,EAAgB7hF,GAC1D,MAAfgiF,GAAuBhiF,EAASgiF,YAAcA,EAAYA,YAC1D9sF,EAAYwsF,MAEX,CAEDxsF,EADsBs6B,GAAqBnoB,EAAOslB,mBAAoBu2B,EAAO77C,EAAOyB,QAAQhN,QAChE7F,YAKhCf,EADAwsF,EAAqBG,EAAeA,EAAe9wF,OAAS,GAGhE,GAAImE,EAAW,CACX,IAAI+1C,OAAI,EAER,IAAKA,EAAI,EAAGA,EAAIte,EAAmB57B,OAAQk6C,IAAK,CAC5C,GAAY,MAARv3C,EAAc,CAEd,GADSkT,GAAKmmB,UAAUr5B,EAAMi5B,EAAmBse,KACtCntC,cAAc5I,GAAY,CACjCysF,GAAe9hF,GAAM0I,WAAW7U,EAAMwB,GACtC,MAGAysF,GAAe9hF,GAAM0I,WAAW7U,EAAMi5B,EAAmBse,IAGjEv3C,EAAOi5B,EAAmBse,GAE9B1gC,GAAWjZ,EAAGqwF,EAAcC,EAAarwF,EAAG,GAEhD+I,KAAK4nF,kBAAkB76E,EAAQ67C,EAAO34C,EAAQ8xD,EAAiB7gD,EAAM4gC,EAAIC,QAGzE/hD,KAAK4nF,kBAAkB76E,EAAQ67C,EAAO,KAAMmZ,EAAiB7gD,EAAM4gC,EAAIC,IAG/E44B,EAAevqC,UAAUu3C,kBAAoB,SAAU5lB,EAAiBppE,EAAQ+uF,GAC5E,IAAI9sF,EACA8K,EACA9J,EACAlF,EACJ,IAAKA,EAAI,EAAGA,EAAIiC,EAAOlC,OAAQC,IAC3BkF,EAAKjD,EAAOjC,GACZgP,EAAWjJ,KAAKC,MAAMD,KAAKg1C,KAAKh1C,KAAKi1C,IAAKqwB,EAAgB/qE,EAAI4E,EAAG5E,EAAI,GACjEyF,KAAKi1C,IAAKqwB,EAAgB9qE,EAAI2E,EAAG3E,EAAI,KACT,OAA5BywF,EAAYA,aACZjrF,KAAKyK,IAAIzK,KAAK6G,IAAIokF,EAAYA,aAAcjrF,KAAK6G,IAAIoC,MAAejJ,KAAK6G,IAAIoC,KAC7E9K,EAAYgB,EACZ8rF,EAAYA,YAAchiF,GAGlC,OAAO9K,GAGX+/E,EAAevqC,UAAUy3C,eAAiB,SAAUj/B,EAAOjtD,EAAOmsF,EAAQC,GACtE,IAAI/wF,GAAI,EACJC,GAAI,EASR,OARK6wF,EAAO9wF,GAAM2E,EAAM3E,EAAI4xD,EAAM6+B,UAAU7kF,KAAQmlF,EAAiBxvF,MAAQ,GACxEuvF,EAAO9wF,GAAK2E,EAAM3E,EAAI4xD,EAAM6+B,UAAU5kF,MAASklF,EAAiBxvF,MAAQ,IACzEvB,GAAI,GAEH8wF,EAAO7wF,GAAM0E,EAAM1E,EAAI2xD,EAAM6+B,UAAU1kF,IAAOglF,EAAiBzvF,OAAS,GACxEwvF,EAAO7wF,GAAK0E,EAAM1E,EAAI2xD,EAAM6+B,UAAU3kF,OAAUilF,EAAiBzvF,OAAS,IAC3ErB,GAAI,IAECD,EAAGA,EAAGC,EAAGA,IAGtB0jF,EAAevqC,UAAUw3C,kBAAoB,SAAUrnF,EAAMqoD,EAAO34C,EAAQ63E,EAAQ5mE,EAAM4gC,EAAIC,GAE1F,GADA9xC,EAASA,IAAoBjZ,EAAG4xD,EAAM34C,OAAQhZ,EAAG,GAC7C2xD,GAAS34C,GAAUA,EAAOjZ,EAAI,GAAKiZ,EAAOjZ,EAAI,EAAG,CACjD,IAAI2E,OAAQ,EACR0P,EAAW9F,GAAMusC,0BAA0BvxC,EAAK8xB,oBACpD12B,EAAQqE,KAAKm3C,iBAAiB9rC,EAAW4E,EAAOjZ,EAAGuJ,EAAK8xB,mBAAoB,GAC5E,IAAI21D,EAAgBhoF,KAAKd,QAAQ+7B,eAAe9K,YAC5Cs3D,EAAY7+B,EAAM6+B,UACtB,GAAIA,EAAU1kF,KAAO0kF,EAAU3kF,QAAU2kF,EAAU7kF,MAAQ6kF,EAAU5kF,MAAO,CACtD7C,KAAKd,QAAQijD,WAAW5hD,EAAKiO,QAASo6C,EAAM/oD,IAA9D,IACIkoF,EAAmB,IAAIz7E,GAAK,EAAG,EAAG,EAAG,GACrC27E,EAAqBjoF,KAAKd,QAAQijD,WAAW5hD,EAAKiO,QAASo6C,EAAM/oD,IACrEkoF,EAAiB/wF,EAAK,EAAqB+E,QAAUisF,EAAiBlmC,EACtEimC,EAAiB9wF,EAAKgxF,EAAmBjsF,QAAUgsF,EAAiBjmC,EACpEgmC,EAAiBxvF,MAAQ0vF,EAAmBzmF,OAAOjJ,MAAQyvF,EAC3DD,EAAiBzvF,OAAS2vF,EAAmBzmF,OAAOlJ,OAAS0vF,EAC7D,IAAIE,EAAkB,IAAI57E,GAAK3Q,EAAM3E,GAAKywF,EAAU7kF,MAAQ,GAAKmlF,EAAiBxvF,MAAQ,EAAGoD,EAAM1E,GAAKwwF,EAAU1kF,KAAO,GAAKglF,EAAiBzvF,OAAS,GAAImvF,EAAU7kF,MAAQ,IAAM6kF,EAAU5kF,OAAS,GAAKklF,EAAiBxvF,OAAQkvF,EAAU1kF,KAAO,IAAM0kF,EAAU3kF,QAAU,GAAKilF,EAAiBzvF,QACtS,GAAI4vF,EAAgB1kF,cAAcskF,GAC9BA,EAASA,OAMT,IAAK,IAFDK,GAASxsF,EAAOmsF,GAEXjrF,EAAK,EAAGurF,EADApoF,KAAKqoF,iBAAiBF,EAAOD,GAAiB,GACXrrF,EAAKurF,EAAiB3xF,OAAQoG,IAAM,CAGpFirF,EAFQM,EAAiBvrF,GAKjC,IAAIyrF,EAActoF,KAAK6nF,eAAej/B,EAAOjtD,EAAOmsF,EAAQC,GAC5Dn/B,EAAMjmD,QACFC,KAAM0lF,EAAYtxF,EAAI8wF,EAAO9wF,EAAI2E,EAAM3E,EAAI4xD,EAAMjmD,OAAOC,KACxDG,IAAKulF,EAAYrxF,EAAI6wF,EAAO7wF,EAAI0E,EAAM1E,EAAI2xD,EAAMjmD,OAAOI,IAAKF,MAAO,EAAGC,OAAQ,QAIlF8lD,EAAMjmD,QAAWC,KAAMklF,EAAO9wF,EAAI2E,EAAM3E,EAAG+L,IAAK+kF,EAAO7wF,EAAI0E,EAAM1E,EAAG4L,MAAO,EAAGC,OAAQ,GAE1F8lD,EAAM34C,OAASA,EAAOjZ,EAClBkqB,IACA0nC,EAAMrwD,MAAQ2oB,EAAK3oB,MACnBqwD,EAAMtwD,OAAS4oB,EAAK5oB,UAIhCqiF,EAAevqC,UAAUi4C,iBAAmB,SAAUE,EAAU/mF,EAAQgnF,GACpE,IAAI71C,EACJ,GAAInxC,EAAQ,CACR,IAAIinF,IACEzxF,EAAGwK,EAAOxK,EAAGC,EAAGuK,EAAOvK,IACvBD,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAOtB,EAAGuK,EAAOvK,IACtCD,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAOtB,EAAGuK,EAAOvK,EAAIuK,EAAOlJ,SACjDtB,EAAGwK,EAAOxK,EAAGC,EAAGuK,EAAOvK,EAAIuK,EAAOlJ,SAClCtB,EAAGwK,EAAOxK,EAAGC,EAAGuK,EAAOvK,IAE7B07C,EAAa3yC,KAAKoP,UAAUm5E,EAAUE,EAAWD,GAErD,OAAO71C,GAGXgoC,EAAevqC,UAAUhhC,UAAY,SAAUs5E,EAAWD,EAAWD,GAEjE,IAAK,IADDp5E,KACK1Y,EAAI,EAAGA,EAAIgyF,EAAUjyF,OAAS,EAAGC,IACtC,IAAK,IAAIL,EAAI,EAAGA,EAAIoyF,EAAUhyF,OAAS,EAAGJ,IAAK,CAC3C,IAAIs6C,EAAIld,GAAWi1D,EAAUhyF,GAAIgyF,EAAUhyF,EAAI,GAAI+xF,EAAUpyF,GAAIoyF,EAAUpyF,EAAI,IACnE,IAARs6C,EAAE35C,GAAmB,IAAR25C,EAAE15C,GACfmY,EAAUtY,KAAK65C,GAI3B,OAAOvhC,GAGXurE,EAAevqC,UAAU+G,iBAAmB,SAAU1gD,EAAQkC,EAAQnB,GAMlE,IAAK,IAHDmxF,EAEA/sF,EAHAuuD,EAAM,EAENy+B,GAAU5xF,EAAG,EAAGC,EAAG,GAEdP,EAAI,EAAGA,EAAIiC,EAAOlC,OAAQC,IAE/B,GADAkF,EAAKjD,EAAOjC,GACPiyF,EAAL,CAKI,IAAIvtF,EAAImK,GAAM0I,WAAW06E,EAAK/sF,GAC1BmS,OAAI,EACJ86E,OAAM,EACN7xF,OAAI,EACJC,OAAI,EACR,GAAIkzD,EAAM/uD,GAAK3E,EAAQ,CACnBsX,EAAItX,EAAS0zD,EACb0+B,EAAMtjF,GAAMsI,UAAU86E,EAAK/sF,GAC3B5E,EAAI+W,EAAItR,KAAKY,IAAIwrF,EAAMpsF,KAAK2R,GAAK,KACjCnX,EAAI8W,EAAItR,KAAKW,IAAIyrF,EAAMpsF,KAAK2R,GAAK,KACjCw6E,GAAU5xF,EAAG2xF,EAAI3xF,EAAIA,EAAGC,EAAG0xF,EAAI1xF,EAAIA,GAC3B4xF,EACR,MAGA1+B,GAAO/uD,EAGfutF,EAAM/sF,OAtBF+sF,EAAM/sF,EAwBd,OAAOgtF,GAEXjO,EAAevqC,UAAUo3C,wBAA0B,SAAUzlB,EAAiB+mB,GAC1E,IAGIC,EACAC,EACAC,EALAC,KACAC,KACAC,KAIJH,EAAY1jF,GAAM0I,YAAajX,EAAG,EAAGC,EAAG,IAAOD,EAAGgJ,KAAKd,QAAQmjB,SAASyN,cAAe74B,EAAG+I,KAAKd,QAAQmjB,SAASwN,iBAChH,IAAK,IAAIn5B,EAAI,EAAGA,EAAIoyF,EAAUryF,OAAQC,IAAK,CACvC0yF,GAAWN,EAAUpyF,EAAI,GAAIoyF,EAAUpyF,IACvCyyF,KACAH,EAAWvsF,KAAKC,MAAM6I,GAAMsI,UAAUu7E,EAAQ,GAAIA,EAAQ,IAAM,KAChEL,EAAWtsF,KAAKC,MAAM6I,GAAMsI,UAAUu7E,EAAQ,GAAIA,EAAQ,IAAM,KAChE,IAAIC,EAAYL,EAAW,GAAKA,GAAY,IAAQA,EAAW,KAAOA,GAAY,IAAO,IAAM,GAC/FG,EAAQryF,KAAKyO,GAAMM,UAAUk8D,EAAiBinB,EAAWK,EAAUJ,IACnEE,EAAQryF,KAAKyO,GAAMM,UAAUk8D,EAAiBgnB,EAAWM,EAAUJ,IACnE,IAEIn1D,EAAQ/uB,IAFM7N,GAAIkyF,EAAQ,GAAGpyF,EAAGG,GAAIiyF,EAAQ,GAAGnyF,EAAGG,GAAIgyF,EAAQ,GAAGpyF,EAAGK,GAAI+xF,EAAQ,GAAGnyF,IACrEC,GAAIiyF,EAAQ,GAAGnyF,EAAGG,GAAIgyF,EAAQ,GAAGlyF,EAAGG,GAAI+xF,EAAQ,GAAGnyF,EAAGK,GAAI8xF,EAAQ,GAAGlyF,IAEnF68B,EAAM9uB,SACNkkF,EAAWpyF,KAAKg9B,EAAMhB,aAG9B,OAAOo2D,GAGXvO,EAAevqC,UAAU82C,qBAAuB,SAAUn6E,EAAQ67C,GAC9D,IACIxvC,KAWJ,OAVAA,EAFY8oB,GAAgBn1B,EAAQ67C,EAAM/oD,IAAI,KAG1CtH,MAAOqwD,EAAMrwD,MAAOD,OAAQswD,EAAMtwD,OAAQ2X,OAASlD,aAAkB+H,IACjE9d,EAAG4xD,EAAM34C,OAAOjZ,EAChBC,EAAG2xD,EAAM34C,OAAOhZ,GACf2xD,EAAM34C,OACX/C,YAAa07C,EAAM17C,YACnBvK,QAAUC,KAAMgmD,EAAMjmD,OAAOC,KAAMC,MAAO+lD,EAAMjmD,OAAOE,MAAOE,IAAK6lD,EAAMjmD,OAAOI,IAAKD,OAAQ8lD,EAAMjmD,OAAOG,QAC1G8W,oBAAqBgvC,EAAMhvC,oBAAqBD,kBAAmBivC,EAAMjvC,kBACzEgc,UAAa5oB,aAAkB4G,GAAai1C,EAAMjzB,eAAY17B,IAEzDmf,YAAaA,IAG1BuhE,EAAevqC,UAAU62C,eAAiB,SAAUl6E,EAAQ5J,GACxD,IACI44B,KAEJ,OADAA,EAFYmG,GAAgBn1B,EAAQ5J,EAAKtD,IAAI,KAE5BoQ,OAAQ9M,EAAK8M,SACrB8rB,MAAOA,IAGpB4+C,EAAevqC,UAAU7B,YAAc,SAAUxhC,EAAQ67C,EAAOmZ,EAAiBx4B,GAC7E,IAAIu7B,EACAkiB,EACJliB,EAAY9kE,KAAKknF,qBAAqBn6E,EAAQ67C,GACjCvtD,IACKutD,EAAM17C,YADxB,IAEIo8E,EAAetpF,KAAKd,QAAQijD,WAAWp1C,EAAOyB,QAASo6C,EAAM/oD,IAC7DrI,EAAQqW,IAAY7W,EAAGsyF,EAAavtF,QAAS9E,EAAGqyF,EAAattF,SAAW+lE,GAAmB,GAC3F4G,EAAY3oE,KAAK2oE,UAAUnxE,GAE/B,GADAA,EAAsB,IAAdmxE,EAAkBA,EAAYnxE,EAClCoxD,aAAiBr1C,IAAkBq1C,EAAM3I,aAAc,CAEvDzoD,GADmBw9B,GAAsBjoB,EAAOslB,mBAAoBu2B,EAAO77C,EAAOyB,QAAQhN,QACpEhK,MAE1BA,GAASA,EAAQ,KAAO,IACxBoxD,EAAM17C,aAAe1V,GAASoxD,EAAM17C,YAAco8E,EAAan8E,iBAC/Dy7C,EAAMjmD,OAAOG,QAA8C,QAAnCwmF,EAAa3vE,mBAAiCivC,EAAMtwD,OAAS,EAA0C,WAAnCgxF,EAAa3vE,kBAAmCivC,EAAMtwD,OAAS,EAAK,EAChKswD,EAAMjmD,OAAOE,OAA+C,SAArCymF,EAAa1vE,qBAAoCgvC,EAAMrwD,MAAQ,EAA4C,UAArC+wF,EAAa1vE,oBAAoCgvC,EAAMrwD,MAAQ,EAAK,EAC7JqwD,aAAiBr1C,GACjBq1C,EAAMjzB,UAAY,SAGlBizB,EAAMhvC,oBAAsBgvC,EAAMjvC,kBAAoB,SAE1D4vB,EAAS/6B,QAAQtB,YAAcq8B,EAASr8B,YAAc07C,EAAM17C,YAC5D85E,EAAgBhnF,KAAKknF,qBAAqBn6E,EAAQ67C,GAC9C77C,aAAkB+H,GAClB9U,KAAKd,QAAQigB,mBAAmBpS,EAAQ+3D,EAAWkiB,GAGnDhnF,KAAKd,QAAQ8nB,wBAAwBja,EAAQ+3D,EAAWkiB,GAE5DhnF,KAAKd,QAAQof,oBAAoBvR,IAGrC4tE,EAAevqC,UAAU67B,YAAc,SAAU1rE,EAAMqoD,EAAOya,EAAYC,EAAaviC,EAAOwI,GAC1F,IAAIu7B,EACAkiB,EACA95E,EACJ43D,EAAY9kE,KAAKknF,qBAAqB3mF,EAAMqoD,GAC5C,IAAI1sB,EAAcqN,EAAS/6B,QAAQ2D,SAAS,GAC5C,GAAKkxD,GAA6B,IAAfA,GAAsBC,GAA+B,IAAhBA,EAAoB,CACxE,IAAIimB,EAASluF,IACTK,EAASL,IACb0B,EAAawsF,GAAShpF,EAAK2M,YAAa3M,EAAKxE,QAASwE,EAAKvE,SAE3De,EAAarB,IADbwR,GAAgBgvB,EAAYhvB,aAAgB3M,aAAgBuU,GAAQvU,EAAK2M,YAAc,GAAM,KAAO,KACjE6zB,EAAM/pC,EAAG+pC,EAAM9pC,GAClDwG,EAAY/B,EAAQ2nE,EAAYC,EAAaviC,EAAM/pC,EAAG+pC,EAAM9pC,GAC5D8F,EAAarB,EAAQwR,EAAa6zB,EAAM/pC,EAAG+pC,EAAM9pC,GACjD,IAAIwrC,EAAchnC,EAAuBC,GAAU1E,EAAGklC,EAAYngC,QAAS9E,EAAGilC,EAAYlgC,UACtF1D,EAAS4jC,EAAY3vB,WAAWjU,OAASgrE,EACzC/qE,EAAQ2jC,EAAY3vB,WAAWhU,MAAQ8qE,EACvCjlE,EAAQ4B,KAAKilE,WAAW/oC,EAAa37B,GACzC,GAAInC,aAAiBmV,GACjBvT,KAAKmnF,2BAA2B5mF,EAAMqoD,EAAO,EAAG,EAAGnmB,EAAa,IAAInjB,GAAK/mB,EAAOD,QAE/E,CACD,IAAIkJ,EAASD,GAA4BhB,EAAKiO,UAC9Ci0B,EAAchnC,EAAuB8tF,EAAQ9mD,IACjCzrC,EAAIyrC,EAAYzrC,EAAIklC,EAAYv5B,OAAOC,KAAOs5B,EAAYv5B,OAAOE,MAC7E4/B,EAAYxrC,EAAIwrC,EAAYxrC,EAAIilC,EAAYv5B,OAAOI,IAAMm5B,EAAYv5B,OAAOG,OAC5E2/B,EAAYxrC,GAAkC,QAA5BmH,EAAMub,mBAAiCrhB,EAAS,EAAmC,WAA5B8F,EAAMub,kBAAmCrhB,EAAS,EAAK,EAChImqC,EAAYzrC,GAAoC,SAA9BoH,EAAMwb,qBAAoCrhB,EAAQ,EAAqC,UAA9B6F,EAAMwb,oBAAoCrhB,EAAQ,EAAK,EAClI,IAAIixF,EAAUhoF,EAAOjJ,OAASkqC,EAAYzrC,EAAIwK,EAAOxK,GACjDyyF,EAAUjoF,EAAOlJ,QAAUmqC,EAAYxrC,EAAIuK,EAAOvK,GAClDsB,EAAQ,IACR6F,EAAM7F,MAAQA,EACd6F,EAAM6R,OAAOjZ,EAAI,EAAIwyF,GAErBlxF,EAAS,IACT8F,EAAM9F,OAASA,EACf8F,EAAM6R,OAAOhZ,EAAI,EAAIwyF,IAI7B7gC,aAAiBr1C,KACjBq1C,EAAMjzB,UAAY,UAEtBqxD,EAAgBhnF,KAAKknF,qBAAqB3mF,EAAMqoD,GAC5CroD,aAAgBuU,GAChB9U,KAAKd,QAAQigB,mBAAmB5e,EAAMukE,EAAWkiB,GAGjDhnF,KAAKd,QAAQ8nB,wBAAwBzmB,EAAMukE,EAAWkiB,GAE1DhnF,KAAKd,QAAQof,oBAAoB/d,IAGrCo6E,EAAevqC,UAAUs2B,cAAgB,SAAUnkE,GAC/C,IACIy9E,EADAz2C,GAAazvB,SAAW6E,eAS5B,OAPIpc,aAAkBuS,GAClBkrE,EAAUz9E,EAAOkkD,UAEZlkD,GAAUA,EAAOuX,OAAUvX,EAAOuX,MAAY,QAChDvX,EAAOuX,MAAM,GAAG2sC,YACnBu5B,EAAUz9E,EAAOuX,MAAM,GAAG2sC,WAE1Bu5B,GACAz2C,EAASzvB,MAAMhjB,KAAKw5C,GAAMtwC,KAAKd,QAAQ0c,UAAUokE,KAC1Cz2C,GAEJA,GAGXoxC,EAAevqC,UAAUq5B,yBAA2B,SAAU3nB,EAAIC,EAAI/gC,GAClE,IAAI+Z,EAAe/6B,KAAKd,QAAQ67B,aAC5B4qD,EAAsB3lF,KAAKd,QAAQ67B,aAAa4qD,oBAChDtjE,EAAWriB,KAAKd,QAAQmjB,SAC5B,GAA4B,SAAxBsjE,GAA0D,YAAxBA,EAAmC,CACrE,IAAI+D,EAAkB1oE,OAAyD/mB,EAA5C+F,KAAKd,QAAQwf,cAAclQ,QAAQhN,OAClEjJ,EAAgC,SAAxBotF,EAAiC5qD,EAAaxiC,MAAQ8pB,EAASyN,cACvEx3B,EAAiC,SAAxBqtF,EAAiC5qD,EAAaziC,OAAS+pB,EAASwN,eACzEruB,EAASwf,EACTne,GAASme,EAAaxf,EAAOqB,MAAQ6mF,EAAe7mF,QAAUi/C,GAAM,GACpEl/C,GAAQoe,EAAaxf,EAAOoB,KAAO8mF,EAAe9mF,OAASk/C,GAAM,GACjE6nC,GAAS3oE,EAAaxf,EAAOuB,IAAM2mF,EAAe3mF,MAAQg/C,GAAM,GAChEj/C,GAAUke,EAAaxf,EAAOsB,OAAS4mF,EAAe5mF,SAAWi/C,GAAM,GAC3E,OAAIl/C,GAAStK,GAASqK,GAAQ,GACvBE,GAAUxK,GAAUqxF,GAAS,EAKxC,OAAO,GAIXhP,EAAevqC,UAAU43B,oBAAsB,SAAUlmB,EAAIC,GACzD,IAAIxnD,EAAMyF,KAAKd,QAAQwf,cAOvB,OANI1e,KAAK01B,QAAU11B,KAAK01B,MAAMslD,SAC1Bh7E,KAAK01B,MAAMslD,UACXh7E,KAAK01B,MAAMslD,OAAOj/E,QAAUxB,EAAIwB,QAChCiE,KAAK01B,MAAMslD,OAAOh/E,QAAUzB,EAAIyB,SAEpCzB,EAAMgkB,GAAsBve,KAAKd,QAAS3E,IAAQA,IAC9CyF,KAAKypE,yBAAyB3nB,EAAIC,KAClC/hD,KAAKd,QAAQwd,KAAKniB,EAAKunD,EAAIC,GAC3B/hD,KAAKd,QAAQw9E,uBACN,IAKf/B,EAAevqC,UAAUm5B,mBAAqB,SAAUhY,EAAIC,EAAIzwB,GAC5D,IAAIxmC,EAAMyF,KAAKd,QAAQwf,cAUvB,OATI1e,KAAK01B,QAAU11B,KAAK01B,MAAMslD,SAC1Bh7E,KAAK01B,MAAMslD,UACXh7E,KAAK01B,MAAMslD,OAAOj/E,QAAUxB,EAAIwB,QAChCiE,KAAK01B,MAAMslD,OAAOh/E,QAAUzB,EAAIyB,QAChCgE,KAAK01B,MAAMslD,OAAOziF,MAAQgC,EAAIhC,MAC9ByH,KAAK01B,MAAMslD,OAAO1iF,OAASiC,EAAIjC,OAC/B0H,KAAK01B,MAAMslD,OAAOj6C,MAAQA,GAE9BxmC,EAAMgkB,GAAsBve,KAAKd,QAAS3E,IAAQA,EAC3CyF,KAAKd,QAAQyd,MAAMpiB,EAAKg3D,EAAIC,EAAIzwB,IAG3C45C,EAAevqC,UAAUw4B,oBAAsB,SAAUpxE,GACrD,IAAI+C,EAAMyF,KAAKd,QAAQwf,cAMvB,OALI1e,KAAK01B,QAAU11B,KAAK01B,MAAMslD,SAC1Bh7E,KAAK01B,MAAMslD,UACXh7E,KAAK01B,MAAMslD,OAAOxjF,MAAQ+C,EAAI2S,aAElC3S,EAAMgkB,GAAsBve,KAAKd,QAAS3E,IAAQA,EAC3CyF,KAAKd,QAAQ4wD,OAAOv1D,EAAK/C,IAGpCmjF,EAAevqC,UAAU5C,aAAe,WACpC,OAAOA,GAAaxtC,KAAKd,UAG7By7E,EAAevqC,UAAUvB,WAAa,SAAUjvC,GAC5C,OAAOivC,GAAW7uC,KAAKd,QAASU,IAKpC+6E,EAAevqC,UAAU+6B,WAAa,SAAUprE,GAC5C,IACI2+E,EAAkB1+E,KAAKd,QAAgB,oBAC3Cc,KAAKd,QAAQyc,uBAAsB,GACnC,IAAIpb,EAAQR,EAAKiD,QAAUjD,EAAKwC,OAC5BuiE,GAAc9c,WAAYznD,EAAKynD,YACnCznD,EAAKynD,YAAcznD,EAAKynD,WACxBhoD,KAAKd,QAAQ0qF,oBAAqB,EAClC5pF,KAAKd,QAAQwY,gBAAkBC,gBAAckyE,mBAC7C7pF,KAAKd,QAAQigB,mBAAmB5e,EAAMukE,GAAa9c,WAAYznD,EAAKynD,aACpEhoD,KAAKd,QAAQwY,eAAiB1X,KAAKd,QAAQwY,gBAAkBC,gBAAckyE,mBAC3E7pF,KAAKd,QAAQ0qF,oBAAqB,EAClC5pF,KAAKd,QAAQyc,sBAAsB+iE,IAGvC/D,EAAevqC,UAAU05C,WAAa,SAAUvpF,EAAMrB,GAClD,IACI21B,EACA+0D,EAAqB5pF,KAAKd,QAAQ0qF,mBAClCG,EAASxpF,EAAKynD,WAYlB,GAXAhoD,KAAKd,QAAQ0qF,oBAAqB,EAClC5pF,KAAKd,QAAQ8qF,yBAA0B,EACvChqF,KAAKiqF,eAAe1pF,EAAMwpF,EAAQ/pF,KAAKd,SACvCqB,EAAKynD,WAAa+hC,EAClB/pF,KAAKd,QAAQk7B,OAAO8vD,UAAY3pF,EAAKV,GACjCG,KAAKd,QAAQ67E,qBAAuB/6E,KAAKd,QAAQk7B,OAAO+vD,iBAAmBnqF,KAAKd,QAAQkrF,4BACxFpqF,KAAKd,QAAQkrF,0BAA0BC,aAAc,GAEzDx1D,EAAU70B,KAAKd,QAAQorF,WACvBtqF,KAAKd,QAAQ0qF,mBAAqBA,EAClC5pF,KAAKd,QAAQ8qF,yBAA0B,EACnChqF,KAAKd,QAAQ67E,qBAAuB/6E,KAAKd,QAAQkrF,0BACjDpqF,KAAK+6E,oBAAoBgP,OAAO/pF,KAAKd,QAAQk7B,OAAO+vD,gBAAiBt1D,EAASt0B,EAAMP,KAAKd,aAExF,CACD,IAAI60D,GACAn0D,QAAS0wC,GAAM/vC,GAAOm1B,QAAQn1B,EAAe,YAEjDP,KAAKulE,aAAalyB,eAAak3C,kBAAmBx2B,GAEtD,OAAOl/B,GAEX8lD,EAAevqC,UAAUo6C,gBAAkB,SAAUxnF,EAAQ9D,EAASyiC,EAAYp9B,GAE9E,IAAK,IADDkmF,EACK/zF,EAAI,EAAGA,EAAIsM,EAAO2iB,QAAQlvB,OAAQC,IAAK,CAC5C,IAAIipF,EAAezgF,EAAQ0c,UAAU5Y,EAAO2iB,QAAQjvB,IAChDg0F,EAAexrF,EAAQ0c,UAAU+jE,EAAal+E,UAClD,GAAIipF,EAAa1iC,aAAermB,GAAc+oD,EAAa7qF,KAAO0E,EAAU9C,UAAYk+E,EAAa/hD,QACjG,OAAO,EAGP6sD,GAAU,EAGlB,OAAOA,GAMX9P,EAAevqC,UAAU65C,eAAiB,SAAU1nF,EAAQo/B,EAAYziC,GACpE,IAAK,IAAIxI,EAAI,EAAGA,EAAI6L,EAAOqjB,SAASnvB,OAAQC,IAAK,CAC7C,IAAI6N,EAAYrF,EAAQ0c,UAAUrZ,EAAOqjB,SAASlvB,IAC9CsM,EAAS9D,EAAQ0c,UAAUrX,EAAU0iB,UACrCthB,EAAQ3F,KAAKwqF,gBAAgBxnF,EAAQ9D,EAASyiC,EAAYp9B,GAC9DA,EAAUq5B,QAAU+D,EACpB,IAAImjC,GACAlnC,QAAS56B,EAAO46B,QAChB19B,OAASo8B,QAASt5B,EAAO9C,MAAMo8B,UAE/BsC,GACAhB,QAAS56B,EAAO46B,QAChB19B,OAASo8B,QAASt5B,EAAO9C,MAAMo8B,UAE/B32B,IACI3C,EAAOglD,YACPhoD,KAAKiqF,eAAejnF,EAAQ2+B,EAAYziC,GAE5C8D,EAAO46B,QAAU+D,EACjB3+B,EAAO9C,MAAMo8B,QAAWt8B,KAAKd,QAAQ67E,qBACjC/6E,KAAKd,QAAQk7B,OAAO+vD,iBAAmBxoD,EAAc,GAAM3+B,EAAO9C,MAAMo8B,QAC5Ep9B,EAAQigB,mBAAmBnc,EAAQ8hE,EAAWlmC,IAElD1/B,EAAQ8nB,wBAAwBziB,EAAWugE,EAAWlmC,KAM9D+7C,EAAevqC,UAAUu5B,oBAAsB,SAAUpvE,EAAK8R,GACtD9R,aAAeua,KACfva,EAAIwB,QAAUsQ,EAAKrV,EAAIqV,EAAK9T,MAAQ,EACpCgC,EAAIyB,QAAUqQ,EAAKpV,EAAIoV,EAAK/T,OAAS,EACrCiC,EAAIhC,MAAQ8T,EAAK9T,MACjBgC,EAAIjC,OAAS+T,EAAK/T,OAClBiC,EAAIiU,QAAQ2D,SAAS,GAAGmtB,gBAAiB,EACzCt/B,KAAKd,QAAQigB,mBAAmB5kB,MAC5BhC,MAAO8T,EAAK9T,MAAOD,OAAQ+T,EAAK/T,OAAQyD,QAASxB,EAAIwB,QACrDC,QAASzB,EAAIyB,UAES,QAAtBgE,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQ2sB,wBAOzB8uD,EAAevqC,UAAUs7B,sBAAwB,SAAUnxE,EAAK8R,GACxD9R,aAAeoZ,KACf3T,KAAKd,QAAQ8nB,wBAAwBzsB,MACjC0Q,YAAa1Q,EAAI0Q,cAErBjL,KAAKd,QAAQof,oBAAoB/jB,KAIzCogF,EAAevqC,UAAUgpB,uBAAyB,SAAUpiE,EAAGC,EAAGsB,EAAOD,GACrE0H,KAAKd,QAAQk6D,uBAAuBpiE,EAAGC,EAAGsB,EAAOD,IAGrDqiF,EAAevqC,UAAUjvB,iBAAmB,WACxCnhB,KAAKd,QAAQiiB,oBAGjBw5D,EAAevqC,UAAUzyB,eAAiB,WACtC3d,KAAKd,QAAQye,kBAGjBg9D,EAAevqC,UAAU03B,oBAAsB,SAAUv5D,EAAOo8E,EAAWC,GACvE,IAAIrwF,EAAMyF,KAAKd,QAAQ0c,UAAUrN,EAAM1O,KAAO0O,EAAMuL,MAAM,GAC1D,GAAI8wE,GACI,GAASrwF,EAAIksD,WAAalsD,EAAIksD,YAAcmkC,EAAUp8E,QAAQ3O,GAAI,CAClE,IAAIU,EAAO+vC,GAAM/1C,GACjBgG,EAAKkmD,UAAYlsD,EAAIksD,UACrBzmD,KAAKd,QAAQiiB,mBAGb,IAAK,IAFDqE,KAEK9uB,GADT8uB,EAAQA,EAAMK,OAAOtrB,EAAIqrB,SAAUrrB,EAAIorB,UACpBlvB,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACxC,IAAI6N,EAAYvE,KAAKd,QAAQ0c,UAAU4J,EAAM9uB,IACzC6N,GACAvE,KAAKd,QAAQwtB,OAAOnoB,GAG5B,IAAIsmF,OAAiB,GACrBA,EAAkB7qF,KAAKd,QAAQ0c,UAAUrhB,EAAIksD,WAAWroD,MAAM+oD,SAASD,WAAoB,eAC5E3gD,OAAOskF,EAAevqE,QAAQ,EAAMzgB,IAAK,GACxDG,KAAKd,QAAQ8nD,WAAW8jC,oBAAoB9qF,KAAKd,QAAQ0c,UAAUrhB,EAAIksD,WAAWj4C,QAAS,EAAM3O,IACjGG,KAAKd,QAAQ0c,UAAU,EAAM/b,IAAI4mD,UAAY,GAC7ClsD,EAAIwB,QAAUxB,EAAIiU,QAAQzS,QAC1BxB,EAAIyB,QAAUzB,EAAIiU,QAAQxS,QAC1B,IACIohB,GACAvhB,KAAM,kBAAmB0hB,YAAczD,OAFzBw2B,GAAM/1C,KAE2C+iB,YAAcxD,OAAQvZ,IAAS8c,SAAU,YAE5Grd,KAAKwd,gBAAgBJ,GACrBpd,KAAKd,QAAQye,mBAKzBg9D,EAAevqC,UAAUg3B,YAAc,SAAU7kE,EAAQwoF,GACrD,IAAIxqF,EAAOP,KAAKd,QAAQ0c,UAAUrZ,EAAO1C,KAAO0C,EAAOuX,MAAM,GAC7D,QAAIvZ,IACyB,mBAArBA,EAAKnC,MAAMA,SAGXmC,GAA4B,SAApBA,EAAKnC,MAAMvC,QACd0E,EAAKkmD,YAAcskC,EAAYlrF,IAAQU,EAAKV,KAAOkrF,EAAYtkC,WACrC,SAA3BskC,EAAY3sF,MAAMvC,MACXkvF,EAAY3sF,MAAM+oD,SAASD,WAAWI,cAW7DqzB,EAAevqC,UAAUkpB,kBAAoB,SAAUv5D,EAAMirF,EAAoBzoF,GAChE,IAAI+J,GACjB,GAAIvM,EAAKiD,kBAAkB8R,IAASk2E,GAAsBjrF,EAAKwC,kBAAkBuS,GAAO,CACpF,IAAIm2E,EAAMD,EAAqBjrF,EAAKwC,OAASxC,EAAKiD,OAC9CkoF,EAAUF,EAAqBjrF,EAAKiB,cAAgBjB,EAAK2B,cACzDsB,EAAShD,KAAKilE,WAAWimB,EAASD,EAAK1oF,GAAQ,GAC/C3C,OAAU,EACd,GAAIoD,aAAkBg1B,GAIlB,IAAK,IAHD+J,EAAS/+B,EAAOnD,GAChBU,EAAOR,EAAKiD,OAEPnG,EAAK,EAAGohB,EADF1d,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAC9BA,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC3D,IAAI0R,EAAQ0P,EAAGphB,GACf,GAAI0R,EAAM1O,KAAOU,EAAKV,GAAK,IAAMkiC,EAAQ,CACrCniC,EAAU2O,EAAM4D,SAAS,GACzB,YAKRvS,EAAUoD,aAAkB8R,GACxB9R,EAAOwL,QAAUw8E,EAAqBjrF,EAAKiB,cAAgBjB,EAAK2B,cAExE1B,KAAKd,QAAQo6D,kBAAkB15D,KAKvC+6E,EAAevqC,UAAU63B,UAAY,SAAU1lE,EAAQS,EAAQ3C,GAG3D,OAAO,GAKXs6E,EAAevqC,UAAU82B,UAAY,SAAUt0D,EAAYjH,EAAUm2C,EAAIC,GACrE,IACIpmD,EADApB,EAAMyF,KAAKd,QAAQwf,cAEnBysE,EAAcx/E,EAAS3U,EAAI4b,EAAW5b,EACtCo0F,EAAaz/E,EAAS1U,EAAI2b,EAAW3b,EAErC4wE,EADJlsE,GAAU3E,EAAG8qD,EAAI7qD,EAAG8qD,GAKpB,OAHI/hD,KAAKijE,iBACL4E,EAAe7nE,KAAKd,QAAQ+jE,eAAeiE,UAAUlnE,KAAKd,QAAS3E,EAAK4wF,EAAaC,EAAYzvF,EAAOiX,EAAYjH,IAEjHk8D,GAKX8S,EAAevqC,UAAUw0B,WAAa,WAC7B5kE,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBu4C,cAAiBrrF,KAAKijE,gBAC/EjjE,KAAKijE,eAAeqoB,iBAAiBtrF,KAAKd,UAIlDy7E,EAAevqC,UAAUo3B,eAAiB,SAAUjlE,EAAQS,GACxD,IAAIzC,EAAQgC,aAAkBuS,GAAQvS,EAASA,EAAOuX,MAAM,GAC5D,GAAI9Z,KAAKd,QAAQ8nD,YAAoC,SAAtBhkD,EAAO5E,MAAMvC,MAChB,mBAArB0E,EAAKnC,MAAMA,MAA4B,CAE1CmC,EAAc,UAAIyC,EAAOnD,GACzBU,EAAKnC,MAAMylB,WAAW8f,OAAS3gC,EAAOnD,GACjCG,KAAKd,QAAQkhB,gBACdpgB,KAAKd,QAAQy9E,kBAAkBp8E,EAAKnC,MAAMylB,WAAY7gB,GACtDzC,EAAKnC,MAAMylB,WAAW8f,OAAS,GAC/B3jC,KAAKd,QAAQwtB,OAAOnsB,IAExBP,KAAKd,QAAQ2sB,wBAKrB8uD,EAAevqC,UAAUzN,KAAO,SAAUpgC,EAAQS,EAAQ3C,GAElDL,KAAKd,QAAQ8nD,aACbhnD,KAAKd,QAAQ8nD,WAAWukC,cAAcvoF,EAAST,aAAkBuS,GAAQvS,EAASA,EAAOuX,MAAM,GAAI9Z,KAAKd,SACxGc,KAAKd,QAAQ2sB,wBAIrB8uD,EAAevqC,UAAU5yB,gBAAkB,SAAUJ,GACjDpd,KAAKd,QAAQse,gBAAgBJ,IAGjCu9D,EAAevqC,UAAUhS,MAAQ,SAAUvJ,EAASC,EAAQj5B,GACxD,GAAIg5B,EAAQp+B,OAAS,EAAG,CACpB,IAAIC,EAAI,EACJ8K,EAAmB,WAAT3F,EAAqBk5B,GAAUF,EAAQ,GAAGrmB,SAAWxO,KAAKd,QAAQwf,cAAclQ,QAAQhN,OAClGwb,GAAYlD,SAAW6E,eACvBuJ,GAAYpO,SAAW6E,eAC3B,IAAKjoB,EAAe,WAATmF,EAAsBnF,EAAI,EAAKA,EAAIA,EAAIm+B,EAAQp+B,OAAQC,IAAK,CACnE,IAAIorD,EAAK,EACLC,EAAK,EACLypC,EAAez2D,GAAUF,EAAQn+B,GAAG8X,SACzB,SAAXsmB,EACAgtB,EAAKtgD,EAAOoB,KAAO4oF,EAAajzF,MAAQ,EAAIizF,EAAavqF,OAAOjK,EAEhD,UAAX89B,EACLgtB,EAAKtgD,EAAOqB,MAAQ2oF,EAAajzF,MAAQ,EAAIizF,EAAavqF,OAAOjK,EAEjD,QAAX89B,EACLitB,EAAKvgD,EAAOuB,IAAMyoF,EAAalzF,OAAS,EAAIkzF,EAAavqF,OAAOhK,EAEhD,WAAX69B,EACLitB,EAAKvgD,EAAOsB,OAAS0oF,EAAalzF,OAAS,EAAIkzF,EAAavqF,OAAOhK,EAEnD,WAAX69B,EACLgtB,EAAKtgD,EAAOP,OAAOjK,EAAIw0F,EAAavqF,OAAOjK,EAE3B,WAAX89B,IACLitB,EAAKvgD,EAAOP,OAAOhK,EAAIu0F,EAAavqF,OAAOhK,GAE/C+lB,EAAUhd,KAAKyrF,YAAYzuE,EAAS6X,EAAQn+B,IAC5CsJ,KAAK0c,KAAKmY,EAAQn+B,GAAIorD,EAAIC,GAC1B/hD,KAAKd,QAAQylE,iBACbz8C,EAAUloB,KAAKyrF,YAAYvjE,EAAS2M,EAAQn+B,IAEhDsmB,EAAUszB,GAAMtzB,GAChBkL,EAAUooB,GAAMpoB,GAChB,IAAI9K,GACAvhB,KAAM,QAASwhB,SAAU,WACzBC,WAAYL,GAAYD,GAAUO,WAAYN,GAAYiL,IAE9DloB,KAAKwd,gBAAgBJ,KAI7Bu9D,EAAevqC,UAAUs7C,WAAa,SAAU72D,EAASC,GACrD,GAAID,EAAQp+B,OAAS,EAAG,CACpB,IAAIC,EAAI,EAKJmM,GAHO,IAAIyJ,GAGH,GACR1J,EAAO,EACP+oF,EAAQ,EACR7oF,EAAS,EACT7B,EAAS,EACT2rC,EAAS,EACTg/C,EAAM,EAENC,GAAoB/xE,SAAW6E,eAC/BmtE,GAAoBhyE,SAAW6E,eAEnC,IADAkW,EAAUD,GAAKC,EAASC,GACnBp+B,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAC5BmM,EAAQA,EAAQgyB,EAAQn+B,GAAG8X,QAAQhN,OAAOkL,SAAS1V,EAAI69B,EAAQn+B,EAAI,GAAG8X,QAAQhN,OAAOkL,SAAS1V,EAC9F4L,EAAOA,EAAOiyB,EAAQn+B,GAAG8X,QAAQhN,OAAOiL,QAAQzV,EAAI69B,EAAQn+B,EAAI,GAAG8X,QAAQhN,OAAOiL,QAAQzV,EAC1F20F,EAAQA,EAAQ92D,EAAQn+B,GAAG8X,QAAQhN,OAAOkL,SAASzV,EAAI49B,EAAQn+B,EAAI,GAAG8X,QAAQhN,OAAOkL,SAASzV,EAC9F6L,EAASA,EAAS+xB,EAAQn+B,GAAG8X,QAAQhN,OAAOkH,YAAYzR,EAAI49B,EAAQn+B,EAAI,GAAG8X,QAAQhN,OAAOkH,YAAYzR,EACtGgK,EAASA,EAAS4zB,EAAQn+B,GAAG8X,QAAQhN,OAAOP,OAAOjK,EAAI69B,EAAQn+B,EAAI,GAAG8X,QAAQhN,OAAOP,OAAOjK,EAC5F41C,EAASA,EAAS/X,EAAQn+B,GAAG8X,QAAQhN,OAAOP,OAAOhK,EAAI49B,EAAQn+B,EAAI,GAAG8X,QAAQhN,OAAOP,OAAOhK,EAC5F20F,EAAMA,EAAM/2D,EAAQn+B,GAAG8X,QAAQhN,OAAOkL,SAASzV,EAAI49B,EAAQn+B,EAAI,GAAG8X,QAAQhN,OAAOkH,YAAYzR,EAEjG,IAAKP,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAS,EAAGC,IAAK,CACrC,IAAIorD,EAAK,EACLC,EAAK,EACL3oD,EAAO27B,GAAUF,EAAQn+B,EAAI,GAAG8X,SAChC5W,EAAUm9B,GAAUF,EAAQn+B,GAAG8X,SACpB,gBAAXsmB,GAAuC,WAAXA,EAC5BgtB,EAAK1oD,EAAK6H,OAAOjK,EAAIY,EAAQqJ,OAAOjK,EAAKiK,GAAU4zB,EAAQp+B,OAAS,GAEpD,UAAXq+B,EACLgtB,EAAK1oD,EAAKsT,SAAS1V,EAAIY,EAAQ8U,SAAS1V,EAAK6L,GAASgyB,EAAQp+B,OAAS,GAEvD,SAAXq+B,EACLgtB,EAAK1oD,EAAKqT,QAAQzV,EAAIY,EAAQ6U,QAAQzV,EAAK4L,GAAQiyB,EAAQp+B,OAAS,GAEpD,WAAXq+B,EACLitB,EAAK3oD,EAAK6H,OAAOhK,EAAIW,EAAQqJ,OAAOhK,EAAK21C,GAAU/X,EAAQp+B,OAAS,GAEpD,QAAXq+B,EACLitB,EAAK3oD,EAAKsT,SAASzV,EAAIW,EAAQ8U,SAASzV,EAAK00F,GAAS92D,EAAQp+B,OAAS,GAEvD,WAAXq+B,EACLitB,EAAK3oD,EAAKsP,YAAYzR,EAAIW,EAAQ8Q,YAAYzR,EAAK6L,GAAU+xB,EAAQp+B,OAAS,GAE9D,gBAAXq+B,IACLitB,EAAK3oD,EAAKsP,YAAYzR,EAAIW,EAAQ8U,SAASzV,EAAK20F,GAAO/2D,EAAQp+B,OAAS,IAE5Eo1F,EAAkB7rF,KAAKyrF,YAAYI,EAAiBh3D,EAAQn+B,IAC5DsJ,KAAK0c,KAAKmY,EAAQn+B,GAAIorD,EAAIC,GAC1B/hD,KAAKd,QAAQylE,iBACbmnB,EAAkB9rF,KAAKyrF,YAAYK,EAAiBj3D,EAAQn+B,IAEhEm1F,EAAkBv7C,GAAMu7C,GACxBC,EAAkBx7C,GAAMw7C,GACxB,IAAI1uE,GACAvhB,KAAM,aAAcwhB,SAAU,WAC9BC,WAAYL,GAAY4uE,GAAkBtuE,WAAYN,GAAY6uE,IAEtE9rF,KAAKwd,gBAAgBJ,KAI7Bu9D,EAAevqC,UAAU27C,SAAW,SAAUl3D,EAASC,GACnD,GAAID,EAAQp+B,OAAS,EAAG,CACpB,IAAIC,EAAI,EACJqqC,OAAQ,EACZA,GAAU/pC,EAAG,GAAKC,EAAG,IACrB,IAAIuK,EAASuzB,GAAUF,EAAQ,GAAGrmB,SAC9B8O,GAAexD,SAAW6E,eAC1BpB,GAAezD,SAAW6E,eAC9B,IAAKjoB,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAAK,CACjC,IAAI2V,EAAO0oB,GAAUF,EAAQn+B,GAAG8X,SAC5B6zB,EAAK,EACLC,EAAK,EACM,UAAXxN,EACAuN,EAAK7gC,EAAOjJ,MAAQ8T,EAAK9T,MAET,WAAXu8B,EACLwN,EAAK9gC,EAAOlJ,OAAS+T,EAAK/T,OAEV,SAAXw8B,IACLuN,EAAK7gC,EAAOjJ,MAAQ8T,EAAK9T,MACzB+pC,EAAK9gC,EAAOlJ,OAAS+T,EAAK/T,QAE9BglB,EAAatd,KAAKyrF,YAAYnuE,EAAYuX,EAAQn+B,IAClDsJ,KAAK2c,MAAMkY,EAAQn+B,GAAI2rC,EAAIC,EAAIvB,GAC/BxjB,EAAavd,KAAKyrF,YAAYluE,EAAYsX,EAAQn+B,IAEtDsJ,KAAKd,QAAQylE,iBACbrnD,EAAagzB,GAAMhzB,GACnBC,EAAa+yB,GAAM/yB,GACnB,IAAIH,GACAvhB,KAAM,SAAUwhB,SAAU,WAC1BC,WAAYL,GAAYK,GAAaC,WAAYN,GAAYM,IAEjEvd,KAAKwd,gBAAgBJ,KAG7Bu9D,EAAevqC,UAAUq7C,YAAc,SAAUO,EAAgBzxF,GAO7D,OANIA,aAAeua,GACfk3E,EAAelyE,MAAMhjB,KAAKw5C,GAAM/1C,IAGhCyxF,EAAertE,WAAW7nB,KAAKw5C,GAAM/1C,IAElCyxF,GAGXrR,EAAevqC,UAAUy6B,OAAS,SAAUohB,EAASC,EAASxhB,GAC1D,IAAIyhB,EhD1tGZ,SAAwB51E,GACpB,OAASA,EAAM/C,YAAc4C,qBAAmBg2E,KgDytGjCC,CAAQrsF,KAAKd,SACpBotF,EhDvtGZ,SAAwB/1E,GACpB,OAASA,EAAM/C,YAAc4C,qBAAmBm2E,KgDstGjCC,CAAQxsF,KAAKd,SACxBc,KAAKd,QAAQutF,KAAKR,EAAUE,EAAOF,EAAU,GAAKjsF,KAAKd,QAAQmjB,SAAS8N,aAAc+7D,EAAUI,EAAOJ,EAAU,GAAKlsF,KAAKd,QAAQmjB,SAAS8N,YAAau6C,IAK7JiQ,EAAevqC,UAAU+3B,gBAAkB,SAAUvoE,GACjDI,KAAKd,QAAQo6D,kBAAkB15D,EAAQ4O,UAK3CmsE,EAAevqC,UAAU+2B,kBAAoB,WACzCnnE,KAAKd,QAAQwtF,oBAKjB/R,EAAevqC,UAAU7xB,sBAAwB,SAAUhe,GACvD,OAAOge,GAAsBve,KAAKd,QAASqB,IAK/Co6E,EAAevqC,UAAUi3B,oBAAsB,SAAU9mE,EAAMye,GAC3D,OAAOtD,GAAuB1b,KAAKd,QAASqB,EAAMye,IAKtD27D,EAAevqC,UAAUm3B,qBAAuB,SAAUrnD,EAAQ3f,GAC9D0f,GAAoBjgB,KAAKd,QAASghB,EAAQ3f,IAG9Co6E,EAAevqC,UAAU04B,eAAiB,SAAUv/B,EAAU1wC,GAC1D,IAAI0H,EACJ,GAI8B,IAA1BgpC,EAASzvB,MAAMrjB,QAA+C,IAA/B8yC,EAAS5qB,WAAWloB,OACnD,GAAIilB,GAAuB1b,KAAKd,QAASqqC,EAASzvB,MAAM,IAAI,GAAO,CAC/DvZ,EAAoC,aAA5BgpC,EAASzvB,MAAM,GAAG1b,MAAwBmrC,EAASzvB,MAAM,GAC7D9Z,KAAKd,QAAQ0c,UAAU2tB,EAASzvB,MAAM,GAAG+B,UAC7C,IAAI8wE,EAAUpjD,EAASzvB,MAAM,GAC7B,GAAwB,aAApBvZ,EAAKnC,MAAMvC,KAAqB,CAChC,IAAIssB,EAA4C,eAA3B5nB,EAAKnC,MAAMiT,aAC3Bs7E,EAAQxoE,UAAagE,GAA4B,gBAAXtvB,IAA+BsvB,GAA4B,eAAXtvB,IACtF8zF,EAAQvtE,SAAY+I,GAA4B,eAAXtvB,IAA8BsvB,GAA4B,gBAAXtvB,KACrFkyB,GAAkB/qB,KAAKd,QAASqB,EAAM1H,QAGzC,GAA4B,SAAxB0H,EAAKqY,UAAU/c,KACpB,GAAqC,eAA/B0E,EAAKqY,UAAUvH,aAAqD,IAArBs7E,EAAQxwE,UACzB,aAA/B5b,EAAKqY,UAAUvH,aAA8Bs7E,EAAQxwE,SAAW,GAAKwwE,EAAQrwE,YAAc,GAC5F,GAAe,gBAAXzjB,EACA,IAAK,IAAInC,EAAI,EAAGA,EAAIsJ,KAAKd,QAAQ4a,MAAMrjB,OAAQC,IAAK,CAEhD,IADI6D,EAAMyF,KAAKd,QAAQ4a,MAAMpjB,IACrBylB,WAAa5b,EAAKud,KAAKrnB,OAAS,GAAyB,IAApB8D,EAAI+hB,YAAmB,CAChEtc,KAAK6c,OAAOtiB,GACZ,aAMZ,GAAe,eAAX1B,EACA,IAASnC,EAAI,EAAGA,EAAIsJ,KAAKd,QAAQ4a,MAAMrjB,OAAQC,IAAK,CAChD,IAAI6D,EACJ,GAAqB,KADjBA,EAAMyF,KAAKd,QAAQ4a,MAAMpjB,IACrBylB,UAAkB5hB,EAAI+hB,cAAgB/b,EAAK6b,QAAQ3lB,OAAS,EAAG,CACnEuJ,KAAK6c,OAAOtiB,GACZ,aAQpBwwB,GAAkB/qB,KAAKd,QAASqqC,EAASzvB,MAAM,GAAIjhB,IAK/D8hF,EAAevqC,UAAU65B,KAAO,SAAUttD,EAAOsvE,EAASC,EAASxhB,GAC/D1qE,KAAKd,QAAQmjB,SAAS4nD,KAAKttD,EAAOsvE,EAAUjsF,KAAKd,QAAQmjB,SAAS8N,YAAa+7D,EAAUlsF,KAAKd,QAAQmjB,SAAS8N,YAAau6C,IAEzHiQ,KCriHPiS,GAAiC,WACjC,SAASA,EAAgB1tF,GAErBc,KAAK6F,WAAci8C,GAAI,EAAGC,GAAI,EAAGplC,MAAO,GAExC3c,KAAK6sF,wBAEL7sF,KAAK8sF,oBACL9sF,KAAK+sF,WAAa,EAClB/sF,KAAKgtF,YAAc,EACnBhtF,KAAKitF,kBAAoB,EACzBjtF,KAAKovB,QAAU,EACfpvB,KAAKsvB,QAAU,EACftvB,KAAK63E,UAAW,EAChB73E,KAAKktF,YAAc,EACnBltF,KAAKmtF,YAAc,EACnBntF,KAAKd,QAAUA,EACfc,KAAK60B,WACL70B,KAAK6F,UAAY3G,EAAQmjB,SAAWnjB,EAAQmjB,SAASxc,WAAci8C,GAAI,EAAGC,GAAI,EAAGplC,MAAO,GACxF3c,KAAK+sF,WAAa7tF,EAAQ+7B,eAAenL,cACzC9vB,KAAKgtF,YAAc9tF,EAAQ+7B,eAAepL,eAC1C7vB,KAAKitF,kBAAoB/tF,EAAQ+7B,eAAe9K,YAChDnwB,KAAKovB,QAAUlwB,EAAQ+7B,eAAe5L,iBACtCrvB,KAAKsvB,QAAUpwB,EAAQ+7B,eAAe1L,eAujB1C,OArjBArR,OAAOozB,eAAes7C,EAAgBx8C,UAAW,kBAE7CgC,IAAK,WACD,OAAOpyC,KAAKgtF,aAGhBr4C,IAAK,SAAU1kC,GACXjQ,KAAKgtF,YAAc/8E,EACnBjQ,KAAKd,QAAQ+7B,eAAepL,eAAiB5f,GAEjDoiC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAes7C,EAAgBx8C,UAAW,eAE7CgC,IAAK,WACD,OAAOpyC,KAAKitF,mBAGhBt4C,IAAK,SAAU1kC,GACXjQ,KAAKitF,kBAAoBh9E,EACzBjQ,KAAKd,QAAQ+7B,eAAe9K,YAAclgB,GAE9CoiC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAes7C,EAAgBx8C,UAAW,iBAE7CgC,IAAK,WACD,OAAOpyC,KAAK+sF,YAGhBp4C,IAAK,SAAU1kC,GACXjQ,KAAK+sF,WAAa98E,EAClBjQ,KAAKd,QAAQ+7B,eAAenL,cAAgB7f,GAEhDoiC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAes7C,EAAgBx8C,UAAW,oBAE7CgC,IAAK,WACD,OAAOpyC,KAAKovB,SAGhBulB,IAAK,SAAU1kC,GACXjQ,KAAKovB,QAAUnf,EACXxT,KAAK6G,IAAItD,KAAKovB,QAAUpvB,KAAKd,QAAQ+7B,eAAe5L,kBAAoB,IACxErvB,KAAKd,QAAQkuF,YAAcptF,KAAKd,QAAQkuF,YAAch6C,aAAWi6C,gBACjErtF,KAAK63E,UAAW,GAEpB73E,KAAKd,QAAQ+7B,eAAe5L,iBAAmBpf,GAEnDoiC,YAAY,EACZC,cAAc,IAElBp0B,OAAOozB,eAAes7C,EAAgBx8C,UAAW,kBAE7CgC,IAAK,WACD,OAAOpyC,KAAKsvB,SAGhBqlB,IAAK,SAAU1kC,GACXjQ,KAAKsvB,QAAUrf,EACXxT,KAAK6G,IAAItD,KAAKsvB,QAAUtvB,KAAKd,QAAQ+7B,eAAe1L,gBAAkB,IACtEvvB,KAAKd,QAAQkuF,YAAcptF,KAAKd,QAAQkuF,YAAch6C,aAAWk6C,gBACjEttF,KAAK63E,UAAW,GAEpB73E,KAAKd,QAAQ+7B,eAAe1L,eAAiBtf,GAEjDoiC,YAAY,EACZC,cAAc,IAGlBs6C,EAAgBx8C,UAAUm9C,oBAAsB,SAAUn+D,EAASE,GAC/D,IAAIvzB,EAAU,EACVC,EAAU,EACVwxF,EAAaxtF,KAAKytF,mBAAcxzF,OAAWA,GAAW,GAC1DuzF,EAAWx2F,GAAKgJ,KAAKmwB,YACrBq9D,EAAWv2F,GAAK+I,KAAKmwB,YACrBq9D,EAAWj1F,OAASyH,KAAKmwB,YACzBq9D,EAAWl1F,QAAU0H,KAAKmwB,YAC1Bp0B,EAAUU,KAAKmJ,IAAI,EAAGwpB,EAAUo+D,EAAW5qF,MAC3C5G,EAAUS,KAAKmJ,IAAI,EAAG0pB,EAAUk+D,EAAWzqF,UAC3B9I,IAAZm1B,QAAqCn1B,IAAZq1B,GACzBtvB,KAAKqvB,iBAAmBtzB,EACxBiE,KAAKuvB,eAAiBvzB,EACtBgE,KAAKd,QAAQwuF,UAAU3xF,EAASC,IAGhCgE,KAAKd,QAAQwuF,WAAW1tF,KAAKqvB,iBAAmBm+D,EAAWx2F,GAAIgJ,KAAKuvB,eAAiBi+D,EAAWv2F,GAEpG+I,KAAK6F,WACDi8C,GAAIrlD,KAAKmJ,IAAI5F,KAAKqvB,kBAAmBm+D,EAAW5qF,MAAQ5C,KAAKmwB,YAAa4xB,GAAItlD,KAAKmJ,IAAI5F,KAAKuvB,gBAAiBi+D,EAAWzqF,KAAO/C,KAAKmwB,YACpIxT,MAAO3c,KAAKmwB,cAIpBy8D,EAAgBx8C,UAAUu9C,gBAAkB,SAAUv+D,EAASE,GAC3DtvB,KAAK63E,UAAW,EAChB,IAAI2V,EAAaxtF,KAAKytF,mBAAcxzF,OAAWA,GAAW,GAC1DuzF,EAAWx2F,GAAKgJ,KAAKmwB,YACrBq9D,EAAWv2F,GAAK+I,KAAKmwB,YACrBq9D,EAAWj1F,OAASyH,KAAKmwB,YACzBq9D,EAAWl1F,QAAU0H,KAAKmwB,YAC1B,IAAIn5B,GAAKw2F,EAAW5qF,KAChB3L,GAAKu2F,EAAWzqF,IAChB4xC,GAAM,EACNi5C,EAAY5tF,KAAK8vB,cAAgB9vB,KAAKmwB,YACtC09D,EAAa7tF,KAAK6vB,eAAiB7vB,KAAKmwB,YACxC29D,EAAO92F,EAAIo4B,EACf,GAAI0+D,IAAS9tF,KAAKqvB,iBAAkB,CAC5Br4B,EAAIgJ,KAAKqvB,mBACLrvB,KAAKqvB,iBAAmBy+D,EACxB9tF,KAAKqvB,kBAAoBD,EAGzBpvB,KAAKqvB,iBAAmBy+D,EAE5Bn5C,GAAM,GAEV,IAAI9xC,EAAQpG,KAAKmJ,IAAI4nF,EAAW3qF,MAAQ7C,KAAKmtF,YAAaS,GAC1D,IAAKj5C,GAAO9xC,GAASirF,EAAO9tF,KAAK8vB,cAAe,CAC5C,IAAIi+D,GAAeD,EAAOF,EAAY5tF,KAAKmtF,YACvCa,GAAgBhuF,KAAKqvB,iBAAmBu+D,EAAY5tF,KAAKmtF,YACzDY,EAAcC,EAEdhuF,KAAKqvB,iBAAmBy+D,EAGpBC,EAAcP,EAAW3qF,MAAQkrF,EAAcC,EAC/ChuF,KAAKqvB,iBAAmBy+D,EAGxB9tF,KAAKqvB,mBAAqBm+D,EAAW3qF,MAAQ7C,KAAKmtF,YAAcS,GAGxEj5C,GAAM,EAELA,IACD30C,KAAKqvB,iBAAmBr4B,EAAIo4B,GAGpCulB,GAAM,EAEN,IAAIs5C,EAAOh3F,EAAIq4B,EACf,GAAI2+D,IAASjuF,KAAKuvB,eAAgB,CAC1Bt4B,EAAI+I,KAAKuvB,iBACLvvB,KAAKuvB,eAAiB0+D,EACtBjuF,KAAKuvB,gBAAkBD,EAGvBtvB,KAAKuvB,eAAiB0+D,EAE1Bt5C,GAAM,GAEV,IAAI7xC,EAASrG,KAAKmJ,IAAI4nF,EAAW1qF,OAAS9C,KAAKktF,YAAaW,GAC5D,IAAKl5C,GAAO7xC,GAAUmrF,EAAOJ,EAAY,CACrC,IAAIK,GAAgBD,EAAOJ,EAAa7tF,KAAKktF,YACzCiB,GAAiBnuF,KAAKuvB,eAAiBs+D,EAAa7tF,KAAKktF,YACzDgB,EAAeC,EAEfnuF,KAAKuvB,eAAiB0+D,EAGlBC,EAAeV,EAAW1qF,OAASorF,EAAeC,EAClDnuF,KAAKuvB,eAAiB0+D,EAGtBjuF,KAAKuvB,iBAAmBi+D,EAAW1qF,OAAS9C,KAAKktF,YAAcW,GAGvEl5C,GAAM,EAELA,IACD30C,KAAKuvB,eAAiBt4B,EAAIq4B,GAGlCtvB,KAAK6F,WACDi8C,GAAIrlD,KAAKmJ,IAAI5F,KAAKqvB,kBAAmBm+D,EAAW5qF,MAAQ5C,KAAKmwB,YAAa4xB,GAAItlD,KAAKmJ,IAAI5F,KAAKuvB,gBAAiBi+D,EAAWzqF,KAAO/C,KAAKmwB,YACpIxT,MAAO3c,KAAKmwB,aAEhBnwB,KAAKwwE,WAGToc,EAAgBx8C,UAAUg+C,WAAa,SAAUC,EAAOC,GAEpD,IAAK,IADDz5D,KACKn+B,EAAI,EAAGA,EAAI23F,EAAM53F,OAAQC,IAAK,CAEnC,IAAK,IADD63F,GAAU,EACLl4F,EAAI,EAAGA,EAAIi4F,EAAM73F,OAAQJ,IAC9B,GAAIg4F,EAAM33F,KAAO43F,EAAMj4F,GAAI,CACvBk4F,GAAU,EACV,MAGHA,GACD15D,EAAQ/9B,KAAKu3F,EAAM33F,IAG3B,OAAOm+B,GAGX+3D,EAAgBx8C,UAAUo+C,mBAAqB,WAK3C,IAAK,IAJDZ,EAAY5tF,KAAK8vB,cAAgB9vB,KAAKmwB,YACtC09D,EAAa7tF,KAAK6vB,eAAiB7vB,KAAKmwB,YACxCs+D,EAAWzuF,KAAKd,QAAQ46E,cAAcC,YAAY,IAAIztE,IAAMtM,KAAKqvB,iBAAmBrvB,KAAKmwB,aAAcnwB,KAAKuvB,eAAiBvvB,KAAKmwB,YAAay9D,EAAWC,IAC1Ja,KACKh4F,EAAI,EAAGA,EAAI+3F,EAASh4F,OAAQC,IACjCg4F,EAAW53F,KAAK23F,EAAS/3F,GAAGmJ,IAEhC,IAAI8uF,EAAa3uF,KAAKouF,WAAWM,EAAY1uF,KAAK6sF,sBACT,IAArC7sF,KAAK6sF,qBAAqBp2F,SAC1BuJ,KAAK6sF,qBAAuB6B,GAEhC,IAAIE,EAAgB5uF,KAAKouF,WAAWpuF,KAAK6sF,qBAAsB6B,GAC/D1uF,KAAKd,QAAQ2vF,qBAAqBF,GAAY,EAAOC,GACrD5uF,KAAK6sF,qBAAuB6B,GAGhC9B,EAAgBx8C,UAAUogC,QAAU,WAChC,IAAIgd,EAAaxtF,KAAKytF,mBAAcxzF,OAAWA,GAAW,GAC1DuzF,EAAWx2F,GAAKgJ,KAAKmwB,YACrBq9D,EAAWv2F,GAAK+I,KAAKmwB,YACrBq9D,EAAWj1F,OAASyH,KAAKmwB,YACzBq9D,EAAWl1F,QAAU0H,KAAKmwB,YAC1B,IAAIn5B,EAAIyF,KAAKyK,IAAIsmF,EAAWx2F,GAAIgJ,KAAKqvB,kBACjCp4B,EAAIwF,KAAKyK,IAAIsmF,EAAWv2F,GAAI+I,KAAKuvB,gBAGjC29D,GAFQltF,KAAKqvB,iBAAmBrvB,KAAK8vB,cAAgB09D,EAAW3qF,MACxD7C,KAAKuvB,eAAiBvvB,KAAK6vB,eAAiB29D,EAAW1qF,OACjD9C,KAAK8uF,eACnB3B,EAAcntF,KAAK8uF,eAClB9uF,KAAKuvB,gBAAkBi+D,EAAWv2F,IAAM+I,KAAKuvB,eAAiBvvB,KAAK6vB,gBAAkB29D,EAAW1qF,SACjGqqF,EAAc,IAEbntF,KAAKqvB,kBAAoBm+D,EAAWx2F,IAAMgJ,KAAKqvB,iBAAmBrvB,KAAK8vB,eAAiB09D,EAAW3qF,QACpGqqF,EAAc,GAElBltF,KAAKktF,YAAcA,EACnBltF,KAAKmtF,YAAcA,EACnB,IAAI4B,EAAW/uF,KAAKgvF,aAChBC,EAAYjvF,KAAKkvF,cACrBlvF,KAAKgvF,aAAevyF,KAAKmJ,IAAI4nF,EAAW3qF,OAAQ7C,KAAKqvB,iBAAmBrvB,KAAK8vB,cAAgBq9D,GAAen2F,EAC5GgJ,KAAKkvF,cAAgBzyF,KAAKmJ,IAAI4nF,EAAW1qF,QAAS9C,KAAKuvB,eAAiBvvB,KAAK6vB,eAAiBq9D,GAAej2F,EACzG83F,IAAa/uF,KAAKgvF,cAAgBC,IAAcjvF,KAAKkvF,eACrDlvF,KAAKd,QAAQsxE,QAAQxwE,KAAKgvF,aAAchvF,KAAKkvF,eAEjDlvF,KAAKd,QAAQw/D,kBACb1+D,KAAKd,QAAQU,QAAQM,MAAMivF,SAAW,UAG1CvC,EAAgBx8C,UAAUkgC,gBAAkB,SAAU/3E,EAAOD,GACzD0H,KAAK8vB,cAAgBv3B,EACrByH,KAAK6vB,eAAiBv3B,GAM1Bs0F,EAAgBx8C,UAAUq9C,cAAgB,SAAU3d,EAAch/C,EAAQs+D,GACtE,IACI5B,EADAnhF,EAAO,IAAIC,GAEf,GACe,YAAXwkB,GAA4D,OAApC9wB,KAAKd,QAAQ67B,aAAaxiC,OAAuD,OAArCyH,KAAKd,QAAQ67B,aAAaziC,OAAiB,CAC/G,IAAIC,EAAQyH,KAAKd,QAAQ67B,aAAaxiC,MAClCD,EAAS0H,KAAKd,QAAQ67B,aAAaziC,OACnC+2F,EAAW,EACXC,EAAY,EAChB,GAAItvF,KAAKd,QAAQ67B,aAAaw0D,aAAc,CAExC,IADAljF,EAAOrM,KAAKd,QAAQ46E,cAAc2T,cAAc,EAAG,IAC1C5qF,MAAQtK,EAAO,CAEpBA,GADIvB,EAAIyF,KAAK+oC,KAAKn5B,EAAKxJ,MAAQtK,GAGnC,GAAI8T,EAAKvJ,OAASxK,EAAQ,CAEtBA,GADItB,EAAIyF,KAAK+oC,KAAKn5B,EAAKvJ,OAASxK,GAGpC,GAAI+T,EAAKzJ,KAAO,GAAKnG,KAAK6G,IAAI+I,EAAKzJ,MAAQysF,EAAU,CACjD,IAAIr4F,EAAIyF,KAAK+oC,KAAK/oC,KAAK6G,IAAI+I,EAAKzJ,MAAQ5C,KAAKd,QAAQ67B,aAAaxiC,OAClE82F,EAAWrvF,KAAKd,QAAQ67B,aAAaxiC,MAAQvB,EAEjD,GAAIqV,EAAKtJ,IAAM,GAAKtG,KAAK6G,IAAI+I,EAAKtJ,KAAOusF,EAAW,CAC5Ct4F,EAAIyF,KAAK+oC,KAAK/oC,KAAK6G,IAAI+I,EAAKtJ,KAAO/C,KAAKd,QAAQ67B,aAAaziC,QACjEg3F,EAAYtvF,KAAKd,QAAQ67B,aAAaziC,OAAStB,GAGvDw2F,EAAa,IAAIlhF,IAAO+iF,GAAaC,EAAY/2F,EAAQ82F,EAAU/2F,EAASg3F,OAE3E,CACD,IAAIE,EAAS1f,OAAe71E,EAAY,EACxCuzF,EAAaxtF,KAAKd,QAAQ46E,cAAc2T,cAAc+B,EAAQA,GAElE,GAAIJ,EAAY,CACZ,IAAIK,EAAgBzvF,KAAKd,QAAQ+7B,eAAe9uB,QAChDqhF,EAAWx2F,GAAKy4F,EAAc7sF,KAC9B4qF,EAAWv2F,GAAKw4F,EAAc1sF,IAC9ByqF,EAAWj1F,OAAUk3F,EAAc7sF,KAAO6sF,EAAc5sF,MACxD2qF,EAAWl1F,QAAWm3F,EAAc1sF,IAAM0sF,EAAc3sF,OAE5D,OAAO0qF,GAMXZ,EAAgBx8C,UAAUs/C,aAAe,SAAUlC,GAgB/C,IAfA,IAAI92F,EAAI,EACJL,EAAI,EACJ+6D,GAAK,EACL96D,KACAY,EAAK,EACLE,EAAK,EACLD,EAAK,EACLE,EAAK,EACLuL,EAAO5C,KAAKd,QAAQ67B,aAAap4B,OAAOC,KACxCC,EAAQ7C,KAAKd,QAAQ67B,aAAap4B,OAAOE,MACzCE,EAAM/C,KAAKd,QAAQ67B,aAAap4B,OAAOI,IACvCD,EAAS9C,KAAKd,QAAQ67B,aAAap4B,OAAOG,OAC1C6sF,EAAa,EACbC,EAAc,EACdt1F,GAAYpD,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,GACrCm2F,EAAWj1F,MAAQ7B,IACtBA,GAASsJ,KAAKd,QAAQ67B,aAAaxiC,MAAQyH,KAAKd,QAAQ67B,aAAaxiC,MAAQi1F,EAAWj1F,SAC9EyH,KAAKd,QAAQ67B,aAAaxiC,QAChC+B,GACIpD,GAAIs2F,EAAW5qF,KAAOA,EAAMzL,GAAIq2F,EAAWzqF,IAAMA,EACjD3L,GAAIo2F,EAAW5qF,KAAOA,EAAMvL,GAAIm2F,EAAW1qF,OAASA,GAExDxM,IAAa86D,GAAK92D,GAElB5D,EAAI82F,EAAWj1F,QAKf+B,GAAYpD,GAJZA,EAAKs2F,EAAW/gF,QAAQzV,EAAIgJ,KAAKd,QAAQ67B,aAAaxiC,MAAQo3F,EAI1Cx4F,GAHpBA,EAAKq2F,EAAW/gF,QAAQxV,EAAI8L,EAGA3L,GAF5BA,EAAKo2F,EAAWnlF,WAAWrR,EAAIgJ,KAAKd,QAAQ67B,aAAaxiC,MAAQo3F,EAE7Bt4F,GADpCA,EAAKm2F,EAAWnlF,WAAWpR,EAAI6L,GAE/BxM,IAAa86D,GAAK92D,EAClBq1F,KAEAnC,EAAWj1F,QAAU7B,IACrB4D,GACIpD,GAAIs2F,EAAW3qF,MAAQA,EAAO1L,GAAIq2F,EAAWzqF,IAAMA,EACnD3L,GAAIo2F,EAAW3qF,MAAQA,EAAOxL,GAAIm2F,EAAW1qF,OAASA,GAE1DxM,IAAa86D,GAAK92D,GAG1B,KAAOkzF,EAAWl1F,OAASjC,IACvBA,GAAS2J,KAAKd,QAAQ67B,aAAaziC,OAAS0H,KAAKd,QAAQ67B,aAAaziC,OAASk1F,EAAWl1F,UAChF0H,KAAKd,QAAQ67B,aAAaziC,SAChCgC,GACIpD,GAAIs2F,EAAW5qF,KAAOA,EAAMzL,GAAIq2F,EAAWzqF,IAAMA,EACjD3L,GAAIo2F,EAAW3qF,MAAQA,EAAOxL,GAAIm2F,EAAWzqF,IAAMA,GAEvDzM,IAAa86D,GAAK92D,GAElBjE,EAAIm3F,EAAWl1F,SAKfgC,GAAYpD,GAJZA,EAAKs2F,EAAW/gF,QAAQzV,EAAI4L,EAIRzL,GAHpBA,EAAKq2F,EAAW/gF,QAAQxV,EAAI+I,KAAKd,QAAQ67B,aAAaziC,OAASs3F,EAGnCx4F,GAF5BA,EAAKo2F,EAAW9gF,SAAS1V,EAAI6L,EAEOxL,GADpCA,EAAKm2F,EAAW9gF,SAASzV,EAAI+I,KAAKd,QAAQ67B,aAAaziC,OAASs3F,GAEhEt5F,IAAa86D,GAAK92D,EAClBs1F,KAEApC,EAAWl1F,SAAWjC,IACtBiE,GACIpD,GAAIs2F,EAAW5qF,KAAOA,EAAMzL,GAAIq2F,EAAW1qF,OAASA,EACpD1L,GAAIo2F,EAAW3qF,MAAQA,EAAOxL,GAAIm2F,EAAW1qF,OAASA,GAE1DxM,IAAa86D,GAAK92D,GAG1B,OAAOhE,GAGXs2F,EAAgBx8C,UAAU65B,KAAO,SAAU4lB,EAAQC,EAAQC,EAAQrlB,GAC/D,GjD/KR,SAAwBn0D,GACpB,OAAOA,EAAM/C,YAAc4C,qBAAmB45E,KiD8KtCC,CAAQjwF,KAAKd,UAAuB,IAAX2wF,GjD3KrC,SAAuBt5E,GACnB,OAAOA,EAAM/C,YAAc4C,qBAAmBkqD,IiD0KI4vB,CAAOlwF,KAAKd,UAAuB,IAAX2wF,EAAe,CACjF,IAAIn0F,EAASL,IAQb,GAPAoC,EAAY/B,EAAQsE,KAAKmwB,YAAanwB,KAAKmwB,aAC3CtyB,EAAgBnC,EAAQsE,KAAKqvB,iBAAkBrvB,KAAKuvB,gBACpDm7C,EAAaA,IACT1zE,GAAIgJ,KAAK8vB,cAAgB,EAAI9vB,KAAKqvB,kBAAoBrvB,KAAKmwB,YAC3Dl5B,GAAI+I,KAAK6vB,eAAiB,EAAI7vB,KAAKuvB,gBAAkBvvB,KAAKmwB,aAE9Du6C,EAAajvE,EAAuBC,EAAQgvE,GACvC1qE,KAAKmwB,YAAc0/D,GAAW7vF,KAAKd,QAAQ+7B,eAAek1D,SAC1DnwF,KAAKmwB,YAAc0/D,GAAW7vF,KAAKd,QAAQ+7B,eAAem1D,QAAS,CACpEpwF,KAAKmwB,aAAe0/D,EACpB,IAAIrC,EAAaxtF,KAAKytF,mBAAcxzF,OAAWA,GAAW,GAC1DuzF,EAAWx2F,GAAKgJ,KAAKmwB,YACrBq9D,EAAWv2F,GAAK+I,KAAKmwB,YAErB,IAAIkgE,EAAeh1F,IACnBoC,EAAY4yF,EAAcR,EAAQA,EAAQnlB,EAAW1zE,EAAG0zE,EAAWzzE,GACnE4G,EAAgBwyF,EAAcP,GAAU,EAAGC,GAAU,GACrD7yF,EAAexB,EAAQ20F,GACvB,IAAIz1F,EAAYa,EAAuBC,GAAU1E,EAAG,EAAGC,EAAG,IAC3C,IAAX44F,IACAj1F,EAAYoF,KAAKswF,iBAAiB11F,EAAU5D,EAAG4D,EAAU3D,IAE7D+I,KAAK6F,WACDi8C,GAAIrlD,KAAKmJ,IAAIhL,EAAU5D,GAAIw2F,EAAW5qF,MAAQ5C,KAAKmwB,YACnD4xB,GAAItlD,KAAKmJ,IAAIhL,EAAU3D,GAAIu2F,EAAWzqF,KAAO/C,KAAKmwB,YAClDxT,MAAO3c,KAAKmwB,aAEhBnwB,KAAKqvB,iBAAmBz0B,EAAU5D,EAClCgJ,KAAKuvB,eAAiB30B,EAAU3D,EAChC+I,KAAKwwE,UACqB,QAAtBxwE,KAAKd,QAAQ0sB,MAAkBzV,GAAanW,KAAKd,UACjDc,KAAKd,QAAQmjB,SAASmsE,qBAEA,QAAtBxuF,KAAKd,QAAQ0sB,MAAmBzV,GAAanW,KAAKd,UAClDc,KAAKd,QAAQ2sB,sBAEjB7rB,KAAKd,QAAQwuF,WAAW1tF,KAAKqvB,iBAAmBm+D,EAAWx2F,GAAIgJ,KAAKuvB,eAAiBi+D,EAAWv2F,GAChGk4B,GAAYnvB,KAAKd,YAK7B0tF,EAAgBx8C,UAAUmgD,UAAY,SAAU3pD,GAE5C,IAAIhb,GADJgb,EAAUA,OACShb,KACfkF,EAAS8V,EAAQ9V,OACjBnuB,EAASikC,EAAQjkC,WACjB6tF,EAAY5pD,EAAQ4pD,UACpBC,EAAe7pD,EAAQ6pD,aAC3B9tF,EAAOG,OAASH,EAAOG,QAAU,GACjCH,EAAOI,IAAMJ,EAAOI,KAAO,GAC3BJ,EAAOC,KAAOD,EAAOC,MAAQ,GAC7BD,EAAOE,MAAQF,EAAOE,OAAS,GAC/B,IACIgtF,EADAruF,EAASivF,EAETX,GAAU9vF,KAAKqvB,iBACf0gE,GAAU/vF,KAAKuvB,eAGnB,GAAgB,kBAFhBuB,EAASA,GAAkB,iBAEO9wB,KAAKd,QAAQ67B,aAAaxiC,OAASyH,KAAKd,QAAQ67B,aAAaziC,QACvF0H,KAAKd,QAAQ4a,MAAMrjB,OAAS,GAAKuJ,KAAKd,QAAQyf,WAAWloB,OAAS,EAAI,CAC1Em1B,EAAOA,GAAc,OACN,iBAAXkF,IACAtvB,EAASxB,KAAKytF,eAAc,EAAM38D,GAAQ,IAE9C,IAAInU,GAAU3lB,EAAG,EAAGC,EAAG,GACvB0lB,EAAM3lB,GAAKgJ,KAAK8vB,eAAiBntB,EAAOC,KAAOD,EAAOE,QAAWrB,EAAY,MAC7Emb,EAAM1lB,GAAK+I,KAAK6vB,gBAAkBltB,EAAOI,IAAMJ,EAAOG,SAAYtB,EAAa,QAC1EgvF,GAAehvF,EAAOjJ,MAAQyH,KAAKqvB,iBAAoBrvB,KAAK8vB,eAC5DtuB,EAAOlJ,OAAS0H,KAAKuvB,eAAkBvvB,KAAK6vB,iBAC7ClT,EAAM3lB,EAAIyF,KAAKyK,IAAI,EAAGyV,EAAM3lB,GAC5B2lB,EAAM1lB,EAAIwF,KAAKyK,IAAI,EAAGyV,EAAM1lB,IAEhC,IAAIy5F,OAAa,EACb1zF,OAAU,EACVC,OAAU,EACd,OAAQ2uB,GACJ,IAAK,QAEDikE,GADAa,EAAa/zE,EAAM3lB,GACGgJ,KAAKmwB,YAE3B2/D,IADA9yF,GAAWgD,KAAK8vB,cAAiBtuB,EAAY,MAAIkvF,GAAc,EAAIlvF,EAAOxK,EAAI05F,IACzD/tF,EAAOC,KAAOD,EAAOE,OAAS,EAAI6tF,EACvDX,IAAW/vF,KAAKuvB,eAAiBsgE,EACjCE,EAAoB,iBAAXj/D,EAA4Bi/D,EAASA,EAAS/vF,KAAKuvB,eAAiBsgE,EAC7E,MACJ,IAAK,SAEDA,GADAa,EAAa/zE,EAAM1lB,GACI+I,KAAKmwB,YAC5BnzB,GAAYgD,KAAK8vB,cAAiBtuB,EAAY,MAAIkvF,GAAc,EAAKlvF,EAAOxK,EAAI05F,EAChFzzF,GAAY+C,KAAK6vB,eAAkBruB,EAAa,OAAIkvF,GAAc,EAAKlvF,EAAOvK,EAAIy5F,EAClFZ,GAAU9yF,GAAW2F,EAAOC,KAAOD,EAAOE,OAAS,EAAI6tF,EACvDX,GAAU9yF,GAAW0F,EAAOI,IAAMJ,EAAOG,QAAU,EAAI4tF,EACvD,MACJ,IAAK,OAEDb,GADAa,EAAaj0F,KAAKyK,IAAIyV,EAAM3lB,EAAG2lB,EAAM1lB,IACd+I,KAAKmwB,YAC5BnzB,GAAWgD,KAAK8vB,cAAiBtuB,EAAY,MAAIkvF,GAAc,EAAIlvF,EAAOxK,EAAI05F,EAC9EzzF,GAAW+C,KAAK6vB,eAAkBruB,EAAa,OAAIkvF,GAAc,EAAIlvF,EAAOvK,EAAIy5F,EAChFZ,GAAU9yF,GAAW2F,EAAOC,KAAOD,EAAOE,OAAS,EAAI6tF,EACvDX,GAAU9yF,GAAW0F,EAAOI,IAAMJ,EAAOG,QAAU,EAAI4tF,EAG/D1wF,KAAKiqE,KAAK4lB,EAAQC,EAAQC,GAAU/4F,EAAG,EAAGC,EAAG,SAG7C44F,EAAS,EAAI7vF,KAAKmwB,YAClBnwB,KAAKiqE,KAAK4lB,EAAQC,EAAQC,GAAU/4F,EAAG,EAAGC,EAAG,KAIrD21F,EAAgBx8C,UAAUugD,cAAgB,SAAUtkF,GAChD,IAAIrV,EAAI,EACJC,EAAI,EACJ0lB,EAAQ3c,KAAKmwB,YACb3uB,EAAS6K,EACTukF,GAAW5wF,KAAKqvB,iBAChBwhE,GAAW7wF,KAAKuvB,eACpB/tB,EAAS,IAAI8K,GAAK9K,EAAOxK,EAAI2lB,EAAOnb,EAAOvK,EAAI0lB,EAAOnb,EAAOjJ,MAAQokB,EAAOnb,EAAOlJ,OAASqkB,GACjF,IAAIrQ,GAAKskF,EAASC,EAAS7wF,KAAK8vB,cAAe9vB,KAAK6vB,gBACpDmB,aAAaxvB,KAChBA,EAAOqB,OAAU+tF,EAAU5wF,KAAK8vB,gBAChC94B,EAAIwK,EAAOqB,MAAQ7C,KAAK8vB,eAExBtuB,EAAOxK,GAAK45F,IACZ55F,EAAIwK,EAAOxK,GAEXwK,EAAOsB,QAAW+tF,EAAU7wF,KAAK6vB,iBACjC54B,EAAIuK,EAAOsB,OAAS9C,KAAK6vB,gBAEzBruB,EAAOvK,GAAK45F,IACZ55F,EAAIuK,EAAOvK,GAEf+I,KAAKiqE,KAAK,GAAIjqE,KAAKqvB,iBAAmBr4B,GAAIgJ,KAAKuvB,eAAiBt4B,EAAG,QAI3E21F,EAAgBx8C,UAAU0gD,cAAgB,SAAUtvF,GAChD,IAAImb,EAAQ3c,KAAKmwB,YACb4gE,EAAe,IAAIzkF,GAAK9K,EAAOxK,EAAI2lB,EAAOnb,EAAOvK,EAAI0lB,EAAOnb,EAAOjJ,MAAQokB,EAAOnb,EAAOlJ,OAASqkB,GAClGi0E,EAAUG,EAAa/5F,EAAI+5F,EAAax4F,MAAQ,EAAIyH,KAAK8vB,cAAgB,EACzE+gE,EAAUE,EAAa95F,EAAI85F,EAAaz4F,OAAS,EAAI0H,KAAK6vB,eAAiB,EAC/E7vB,KAAKiqE,KAAK,GAAIjqE,KAAKqvB,iBAAmBuhE,GAAU5wF,KAAKuvB,eAAiBshE,EAAS,OAEnFjE,EAAgBx8C,UAAUkgD,iBAAmB,SAAUlhE,EAASE,GAC5D,GAAgD,aAA5CtvB,KAAKd,QAAQ+7B,eAAe+1D,YAA4B,CACxD,IAAIxvF,OAAS,EACmC,YAA5CxB,KAAKd,QAAQ+7B,eAAe+1D,cAC5BxvF,EAASxB,KAAKd,QAAQ+7B,eAAeg2D,iBAEzCzvF,EAASA,GAAUxB,KAAKytF,eAAc,IAC/Bz2F,GAAKgJ,KAAKmwB,YACjB3uB,EAAOvK,GAAK+I,KAAKmwB,YACjB3uB,EAAOjJ,OAASyH,KAAKmwB,YACrB3uB,EAAOlJ,QAAU0H,KAAKmwB,YACtBf,IAAY,EACZE,IAAY,EACZ,IAAI4hE,EAAez0F,KAAKmJ,IAAIpE,EAAOqB,MAAO7C,KAAK8vB,eAC/C,KAAMV,GAAW5tB,EAAOxK,IAAMo4B,EAAUpvB,KAAK8vB,eAAiBtuB,EAAOqB,OACjEusB,GAAW5tB,EAAOqB,MAAQ7C,KAAK8vB,gBAC5BV,GAAW5tB,EAAOxK,GAAMo4B,EAAUpvB,KAAK8vB,eAAiBohE,GAE3D,GAAI9hE,GAAW5tB,EAAOxK,EAClBo4B,EAAU3yB,KAAKmJ,IAAIpE,EAAOxK,EAAGyF,KAAKyK,IAAIkoB,EAASA,GAAWA,EAAUpvB,KAAK8vB,cAAgB9vB,KAAKmtF,YAAc+D,SAE3G,CACD,IAAIC,EAAU3vF,EAAOqB,MAAQ7C,KAAK8vB,cAClCV,EAAU3yB,KAAKyK,IAAIiqF,EAAS3vF,EAAOxK,GAG3C,IAAIo6F,EAAgB30F,KAAKmJ,IAAIpE,EAAOsB,OAAQ9C,KAAK6vB,gBACjD,KAAMP,GAAW9tB,EAAOvK,GAAKq4B,EAAUtvB,KAAK6vB,gBAAkBruB,EAAOsB,QAC9DwsB,GAAW9tB,EAAOvK,GAAKq4B,EAAUtvB,KAAK6vB,gBAAkBuhE,GAE3D,GAAI9hE,GAAW9tB,EAAOvK,EAClBq4B,EAAU7yB,KAAKmJ,IAAIpE,EAAOvK,EAAGwF,KAAKyK,IAAIooB,EAASA,GAAWA,EAAUtvB,KAAK6vB,eAAiB7vB,KAAKktF,YAAckE,SAE5G,CACGD,EAAU3vF,EAAOsB,OAAS9C,KAAK6vB,eACnCP,EAAU7yB,KAAKyK,IAAI1F,EAAOvK,EAAGk6F,GAGrC/hE,IAAY,EACZE,IAAY,EAEhB,OAASt4B,EAAGo4B,EAASn4B,EAAGq4B,IAErBs9D,KCjlBPyE,GAAsB,WAEtB,SAASA,EAAKzuF,EAAMG,EAAKxK,EAAOD,EAAQg5F,GACpCtxF,KAAK60B,WACL70B,KAAK4C,KAAOA,EACZ5C,KAAK+C,IAAMA,EACX/C,KAAKzH,MAAQA,EACbyH,KAAK1H,OAASA,EACd0H,KAAK85E,cAAgBwX,EAqJzB,OAlJAD,EAAKjhD,UAAUmhD,UAAY,SAAUC,EAAiBC,GAChC,MAAdzxF,KAAKqF,OAAiBrF,KAAKqF,MAAMqsF,YAAYF,IAC7CxxF,KAAKqF,MAAMksF,UAAUC,EAAiBC,GAEvB,MAAfzxF,KAAKklF,QAAkBllF,KAAKklF,OAAOwM,YAAYF,IAC/CxxF,KAAKklF,OAAOqM,UAAUC,EAAiBC,GAEzB,MAAdzxF,KAAK2xF,OAAiB3xF,KAAK2xF,MAAMD,YAAYF,IAC7CxxF,KAAK2xF,MAAMJ,UAAUC,EAAiBC,GAEvB,MAAfzxF,KAAK4xF,QAAkB5xF,KAAK4xF,OAAOF,YAAYF,IAC/CxxF,KAAK4xF,OAAOL,UAAUC,EAAiBC,GAEvCzxF,KAAK60B,QAAQp+B,OAAS,GACtBg7F,EAAM36F,KAAKkJ,OAGnBqxF,EAAKjhD,UAAUshD,YAAc,SAAUv+E,GACnC,QAAInT,KAAK4C,KAAO5C,KAAKzH,MAAQ4a,EAAEvQ,MAAQ5C,KAAK+C,IAAM/C,KAAK1H,OAAS6a,EAAEpQ,KAAO/C,KAAK4C,KAAOuQ,EAAEtQ,OAAS7C,KAAK+C,IAAMoQ,EAAErQ,SAMjHuuF,EAAKjhD,UAAUyhD,WAAa,WAIxB,IAHA,IAEIC,EAFA9uF,EAAS,KACTpL,EAAUoI,KAEI,MAAXpI,GAEHA,GADAk6F,EAAUl6F,EAAQm6F,QAAQ/uF,IACRT,OAClBS,EAAS8uF,EAAQ9uF,QAAUA,EAE/B,OAAOA,GAEXquF,EAAKjhD,UAAU2hD,QAAU,SAAU/uF,GAE/B,IAAIgvF,EAAYhyF,KAAKzH,MAAQ,EACzB05F,EAAajyF,KAAK1H,OAAS,EAC/B,GAAI05F,GAAa,KAAQC,GAAc,IAAM,CACzC,IAAIC,EAAUlyF,KAAK4C,KAAOovF,EACtBG,EAAUnyF,KAAK+C,IAAMkvF,EACzB,GAAIjyF,KAAK85E,cAAcsY,YAAcF,EAAS,CAC1C,GAAIlyF,KAAK85E,cAAcuY,aAAeF,EAAS,CAC3C,IAAKnyF,KAAKqF,MAAO,EACTitF,EAAU,IAAIjB,EAAKrxF,KAAK4C,KAAM5C,KAAK+C,IAAKivF,EAAWC,EAAYjyF,KAAK85E,gBAChE55D,OAASlgB,KACjBA,KAAKqF,MAAQitF,EAEjB,OAAS/vF,OAAQvC,KAAKqF,OAE1B,GAAIrF,KAAK85E,cAAcyY,UAAYJ,EAAS,CACxC,IAAKnyF,KAAK2xF,MAAO,EACTW,EAAU,IAAIjB,EAAKrxF,KAAK4C,KAAMuvF,EAASH,EAAWC,EAAYjyF,KAAK85E,gBAC/D55D,OAASlgB,KACjBA,KAAK2xF,MAAQW,EAEjB,OAAS/vF,OAAQvC,KAAK2xF,aAGzB,GAAI3xF,KAAK85E,cAAc0Y,WAAaN,EAAS,CAC9C,GAAIlyF,KAAK85E,cAAcuY,aAAeF,EAAS,CAC3C,IAAKnyF,KAAKklF,OAAQ,EACVoN,EAAU,IAAIjB,EAAKa,EAASlyF,KAAK+C,IAAKivF,EAAWC,EAAYjyF,KAAK85E,gBAC9D55D,OAASlgB,KACjBA,KAAKklF,OAASoN,EAElB,OAAS/vF,OAAQvC,KAAKklF,QAE1B,GAAIllF,KAAK85E,cAAcyY,UAAYJ,EAAS,CACxC,IAAKnyF,KAAK4xF,OAAQ,CACd,IAAIU,GAAAA,EAAU,IAAIjB,EAAKa,EAASC,EAASH,EAAWC,EAAYjyF,KAAK85E,gBAC7D55D,OAASlgB,KACjBA,KAAK4xF,OAASU,EAElB,OAAS/vF,OAAQvC,KAAK4xF,UAMlC,OAFS5xF,KACTA,KAAK60B,QAAQ/9B,KAAKkJ,KAAK85E,cAAcl4D,YAC5B5e,OAAQhD,OAGrBqxF,EAAKjhD,UAAUqiD,YAAc,WACzB,OAAIzyF,KAAK85E,cAAc0Y,WAAaxyF,KAAK4C,MAAQ5C,KAAK85E,cAAcsY,YAAcpyF,KAAK4C,KAAO5C,KAAKzH,OAC/FyH,KAAK85E,cAAcyY,UAAYvyF,KAAK+C,KAAO/C,KAAK85E,cAAcuY,aAAeryF,KAAK+C,IAAM/C,KAAK1H,QAMrG+4F,EAAKjhD,UAAUsiD,aAAe,SAAUnyF,GACpC,IAAIoyF,KACJ3yF,KAAK85E,cAAc8Y,eAAeryF,GAElC,IADA,IAAIsyF,EAAO,MACHF,EAAaG,SAEjBD,GADAF,EAAe3yF,KAAK85E,cAAciZ,WAAWrnE,IAAImnE,IAC7BA,KAExB,OAAOA,GAEXxB,EAAKjhD,UAAU1kB,IAAM,SAAUmnE,GAE3B,GADAA,EAAO,KACH7yF,KAAKyyF,cAEL,OADAI,EAAO7yF,KAAK6xF,cACHiB,SAAS,EAAMD,KAAMA,GAG9B,IAAIG,OAAY,EACZC,IAAkC,IAAxBjzF,KAAK60B,QAAQp+B,QAAiBuJ,KAAKqF,OAAUrF,KAAKklF,QAAWllF,KAAK2xF,OAC3E3xF,KAAK4xF,QACNsB,EAAwB,EAAblzF,KAAKzH,MAChB46F,EAA0B,EAAdnzF,KAAK1H,OA6BrB,OA5BI0H,KAAK85E,cAAc0Y,UAAYxyF,KAAK4C,KAChC5C,KAAK85E,cAAcyY,SAAWvyF,KAAK+C,KACnCiwF,EAAY,IAAI3B,EAAKrxF,KAAK4C,KAAO5C,KAAKzH,MAAOyH,KAAK+C,IAAM/C,KAAK1H,OAAQ46F,EAAUC,EAAWnzF,KAAK85E,eAC1FmZ,IACDD,EAAUpB,OAAS5xF,QAIvBgzF,EAAY,IAAI3B,EAAKrxF,KAAK4C,KAAO5C,KAAKzH,MAAOyH,KAAK+C,IAAKmwF,EAAUC,EAAWnzF,KAAK85E,eAC5EmZ,IACDD,EAAU9N,OAASllF,OAItBA,KAAK85E,cAAcyY,SAAWvyF,KAAK+C,KACxCiwF,EAAY,IAAI3B,EAAKrxF,KAAK4C,KAAM5C,KAAK+C,IAAM/C,KAAK1H,OAAQ46F,EAAUC,EAAWnzF,KAAK85E,eAC7EmZ,IACDD,EAAUrB,MAAQ3xF,QAItBgzF,EAAY,IAAI3B,EAAKrxF,KAAK4C,KAAM5C,KAAK+C,IAAKmwF,EAAUC,EAAWnzF,KAAK85E,eAC/DmZ,IACDD,EAAU3tF,MAAQrF,OAG1BA,KAAKkgB,OAAS8yE,EACdhzF,KAAK85E,cAAciZ,WAAaC,GACvBF,SAAS,EAAOD,KAAMA,IAIhCxB,KC5JP+B,GAA+B,WAE/B,SAASA,EAAcjU,GACnBn/E,KAAKqzF,SAAW,IAChBrzF,KAAKm/E,YAAcA,EACnBn/E,KAAK+yF,WAAa,IAAI1B,GAAK,EAAG,EAAmB,EAAhBrxF,KAAKqzF,SAA8B,EAAhBrzF,KAAKqzF,SAAcrzF,MACvEA,KAAKszF,SAAWn7F,OAAOyV,UACvB5N,KAAKuzF,WAAap7F,OAAOyV,UACzB5N,KAAKwzF,QAAUr7F,OAAOyV,UACtB5N,KAAKyzF,YAAct7F,OAAOyV,UAC1B5N,KAAK0zF,aAgVT,OA7UAN,EAAchjD,UAAUvjB,gBAAkB,SAAUtsB,GAChD,GAAIP,KAAK0zF,UAAUnzF,EAAKV,IAAK,CACzB,IAAIgzF,EAAO7yF,KAAK0zF,UAAUnzF,EAAKV,IAC3BijB,EAAQ9iB,KAAK2zF,YAAYd,EAAKh+D,QAASt0B,IAC5B,IAAXuiB,IACA+vE,EAAKh+D,QAAQtuB,OAAOuc,EAAO,GAC3B9iB,KAAKwL,OAAOqnF,UACL7yF,KAAK0zF,UAAUnzF,EAAKV,OAIvCuzF,EAAchjD,UAAU5kC,OAAS,SAAUqnF,GACvC,GAAIA,EAAK3yE,QAAkC,IAAxB2yE,EAAKh+D,QAAQp+B,QAAgBo8F,EAAKxtF,OAASwtF,EAAK3N,QAAU2N,EAAKlB,OAASkB,EAAKjB,OAAhG,CACI,IAAI71E,EAAW82E,EAAK3yE,OAChBnE,EAAS1W,QAAUwtF,EACnB92E,EAAS1W,MAAQ,KAEZ0W,EAASmpE,SAAW2N,EACzB92E,EAASmpE,OAAS,KAEbnpE,EAAS41E,QAAUkB,EACxB92E,EAAS41E,MAAQ,KAEZ51E,EAAS61E,SAAWiB,IACzB92E,EAAS61E,OAAS,MAEtB5xF,KAAKwL,OAAOqnF,EAAK3yE,aAGb2yE,IAAS7yF,KAAK+yF,YAAeF,EAAKxtF,OAAUwtF,EAAK3N,QAAW2N,EAAKlB,OAAUkB,EAAKjB,SAChFiB,EAAKjwF,KAAO,EACZiwF,EAAKt6F,MAAQ,IACbs6F,EAAK9vF,IAAM,EACX8vF,EAAKv6F,OAAS,MAK1B86F,EAAchjD,UAAUsiD,aAAe,SAAUnyF,GAC7C,IAAIsyF,EAAO7yF,KAAK+yF,WAAWL,aAAanyF,GACxCP,KAAK0zF,UAAUnzF,EAAKV,IAAMgzF,GAG9BO,EAAchjD,UAAUujD,YAAc,SAAU9+D,EAASt0B,GACrD,IAAK,IAAI7J,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAChC,GAAKm+B,EAAQn+B,GAAImJ,KAAOU,EAAKV,GACzB,OAAOnJ,EAGf,OAAQ,GAGZ08F,EAAchjD,UAAUwjD,WAAa,SAAUrzF,GAC3CP,KAAK4yF,eAAeryF,GACpB,IAAIszF,EAAYtzF,EAAKyM,YACrB,GAAOmC,MAAM0kF,EAAU78F,IAAOmY,MAAM0kF,EAAU58F,IACzCkY,MAAM0kF,EAAUt7F,QAAW4W,MAAM0kF,EAAUv7F,QAC5C,OAAO,EAGX,GAAI0H,KAAK0zF,UAAUnzF,EAAKV,IAAK,CACdG,KAAK0zF,UAAUnzF,EAAKV,IACrB4yF,gBACNzyF,KAAK6sB,gBAAgBtsB,GACrBP,KAAK0yF,aAAanyF,SAItBP,KAAK0yF,aAAanyF,GAEtB,IAAIP,KAAK8zF,mBAAmBD,IACxB7zF,KAAK+zF,cAAgBxzF,GACrBP,KAAKg0F,aAAezzF,GACpBP,KAAKi0F,eAAiB1zF,GACtBP,KAAKk0F,gBAAkB3zF,EAGtB,CACD,IAAI4zF,GAAW,EAiDf,OAhDIn0F,KAAKszF,WAAatzF,KAAKwyF,WAAajyF,IAASP,KAAK+zF,cAC9C/zF,KAAKszF,UAAYtzF,KAAKwyF,WACtBxyF,KAAKszF,SAAWtzF,KAAKwyF,UACrBxyF,KAAK+zF,YAAcxzF,EACnB4zF,GAAW,GAEN5zF,IAASP,KAAK+zF,cACnB/zF,KAAKszF,SAAWn7F,OAAOyV,UACvB5N,KAAKo0F,SAASp0F,KAAK+yF,YACnBoB,GAAW,IAGfn0F,KAAKwzF,UAAYxzF,KAAKuyF,UAAYhyF,IAASP,KAAKg0F,aAC5Ch0F,KAAKwzF,SAAWxzF,KAAKuyF,UACrBvyF,KAAKwzF,QAAUxzF,KAAKuyF,SACpBvyF,KAAKg0F,WAAazzF,EAClB4zF,GAAW,GAEN5zF,IAASP,KAAKg0F,aACnBh0F,KAAKwzF,QAAUr7F,OAAOyV,UACtB5N,KAAKq0F,QAAQr0F,KAAK+yF,YAClBoB,GAAW,IAGfn0F,KAAKyzF,aAAezzF,KAAKqyF,aAAe9xF,IAASP,KAAKk0F,gBAClDl0F,KAAKyzF,YAAczzF,KAAKqyF,aACxB8B,GAAW,EACXn0F,KAAKyzF,WAAazzF,KAAKqyF,YACvBryF,KAAKk0F,cAAgB3zF,GAEhBA,IAASP,KAAKk0F,gBACnBl0F,KAAKyzF,YAAct7F,OAAOyV,UAC1B5N,KAAKs0F,WAAWt0F,KAAK+yF,YACrBoB,GAAW,IAGfn0F,KAAKuzF,YAAcvzF,KAAKoyF,YAAc7xF,IAASP,KAAKi0F,eAChDj0F,KAAKuzF,WAAavzF,KAAKoyF,YACvBpyF,KAAKuzF,UAAYvzF,KAAKoyF,WACtBpyF,KAAKi0F,aAAe1zF,EACpB4zF,GAAW,GAEN5zF,IAASP,KAAKi0F,eACnBj0F,KAAKuzF,WAAap7F,OAAOyV,UACzB5N,KAAKu0F,UAAUv0F,KAAK+yF,YACpBoB,GAAW,IAGZA,EAGX,OADAn0F,KAAK4yF,eAAe,OACb,GAEXQ,EAAchjD,UAAU0jD,mBAAqB,SAAUvzF,GACnD,OAAIA,EAAKqC,MAAQ5C,KAAKszF,UAAY/yF,EAAKsC,OAAS7C,KAAKuzF,WAAahzF,EAAKwC,KAAO/C,KAAKwzF,SAC5EjzF,EAAKuC,QAAU9C,KAAKyzF,YAQ/BL,EAAchjD,UAAUmhD,UAAY,SAAUzgE,GAC1C,IAAI2gE,KAEJ,OADAzxF,KAAK+yF,WAAWxB,UAAUzgE,EAAQ2gE,GAC3BA,GAGX2B,EAAchjD,UAAU2pC,YAAc,SAAUjpD,GAG5C,IAAK,IADD+D,KACKh4B,EAAK,EAAG23F,EAFLx0F,KAAKuxF,UAAUzgE,GAEOj0B,EAAK23F,EAAQ/9F,OAAQoG,IAEnD,IAAK,IAAIohB,EAAK,EAAGkd,EADNq5D,EAAQ33F,GACQg4B,QAAS5W,EAAKkd,EAAG1kC,OAAQwnB,IAAM,CACtD,IAAI1jB,EAAM4gC,EAAGld,GACT1jB,EAAIyS,YAAY2lC,WAAW7hB,IAC3B+D,EAAQ/9B,KAAKkJ,KAAKm/E,YAAY5kF,EAAIsF,KAI9C,OAAOg1B,GAGXu+D,EAAchjD,UAAU0E,aAAe,SAAUv0C,GAC7C,IAAI4zF,GAAW,EAyBf,OAxBI5zF,IAASP,KAAKg0F,aACdh0F,KAAKwzF,QAAUr7F,OAAOyV,UACtB5N,KAAKg0F,WAAa,KAClBh0F,KAAKq0F,QAAQr0F,KAAK+yF,YAClBoB,GAAW,GAEX5zF,IAASP,KAAK+zF,cACd/zF,KAAKszF,SAAWn7F,OAAOyV,UACvB5N,KAAK+zF,YAAc,KACnB/zF,KAAKo0F,SAASp0F,KAAK+yF,YACnBoB,GAAW,GAEX5zF,IAASP,KAAKi0F,eACdj0F,KAAKuzF,WAAap7F,OAAOyV,UACzB5N,KAAKi0F,aAAe,KACpBj0F,KAAKu0F,UAAUv0F,KAAK+yF,YACpBoB,GAAW,GAEX5zF,IAASP,KAAKk0F,gBACdl0F,KAAKyzF,YAAct7F,OAAOyV,UAC1B5N,KAAKk0F,cAAgB,KACrBl0F,KAAKs0F,WAAWt0F,KAAK+yF,YACrBoB,GAAW,GAERA,GAEXf,EAAchjD,UAAUkkD,WAAa,SAAUzB,GAGnCA,EAAKlB,OAASkB,EAAKjB,QACfiB,EAAKlB,OACL3xF,KAAKs0F,WAAWzB,EAAKlB,OAErBkB,EAAKjB,QACL5xF,KAAKs0F,WAAWzB,EAAKjB,UAIrBiB,EAAK3N,QACLllF,KAAKs0F,WAAWzB,EAAK3N,QAErB2N,EAAKxtF,OACLrF,KAAKs0F,WAAWzB,EAAKxtF,QAIjC,IAAK,IAAIxI,EAAK,EAAGohB,EAAK40E,EAAKh+D,QAASh4B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtD,IAAI0D,EAAO0d,EAAGphB,GACVmD,KAAKyzF,YAAclzF,EAAKyM,YAAYlK,SACpC9C,KAAKyzF,WAAalzF,EAAKyM,YAAYlK,OACnC9C,KAAKk0F,cAAgB3zF,KAIjC6yF,EAAchjD,UAAUmkD,UAAY,SAAU1B,GAGlCA,EAAK3N,QAAU2N,EAAKjB,QAChBiB,EAAK3N,QACLllF,KAAKu0F,UAAU1B,EAAK3N,QAEpB2N,EAAKjB,QACL5xF,KAAKu0F,UAAU1B,EAAKjB,UAIpBiB,EAAKxtF,OACLrF,KAAKu0F,UAAU1B,EAAKxtF,OAEpBwtF,EAAKlB,OACL3xF,KAAKu0F,UAAU1B,EAAKlB,QAIhC,IAAK,IAAI90F,EAAK,EAAGohB,EAAK40E,EAAKh+D,QAASh4B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtD,IAAI0D,EAAO0d,EAAGphB,GACVmD,KAAKuzF,WAAahzF,EAAKyM,YAAYnK,QACnC7C,KAAKuzF,UAAYhzF,EAAKyM,YAAYnK,MAClC7C,KAAKi0F,aAAe1zF,KAIhC6yF,EAAchjD,UAAUgkD,SAAW,SAAUvB,GAGjCA,EAAKxtF,OAASwtF,EAAKlB,OACfkB,EAAKxtF,OACLrF,KAAKo0F,SAASvB,EAAKxtF,OAEnBwtF,EAAKlB,OACL3xF,KAAKo0F,SAASvB,EAAKlB,SAInBkB,EAAK3N,QACLllF,KAAKo0F,SAASvB,EAAK3N,QAEnB2N,EAAKjB,QACL5xF,KAAKo0F,SAASvB,EAAKjB,SAI/B,IAAK,IAAI/0F,EAAK,EAAGohB,EAAK40E,EAAKh+D,QAASh4B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtD,IAAI0D,EAAO0d,EAAGphB,GACVmD,KAAKszF,UAAY/yF,EAAKyM,YAAYpK,OAClC5C,KAAKszF,SAAW/yF,EAAKyM,YAAYpK,KACjC5C,KAAK+zF,YAAcxzF,KAI/B6yF,EAAchjD,UAAUikD,QAAU,SAAUxB,GAGhCA,EAAKxtF,OAASwtF,EAAK3N,QACf2N,EAAKxtF,OACLrF,KAAKq0F,QAAQxB,EAAKxtF,OAElBwtF,EAAK3N,QACLllF,KAAKq0F,QAAQxB,EAAK3N,UAIlB2N,EAAKlB,OACL3xF,KAAKq0F,QAAQxB,EAAKlB,OAElBkB,EAAKjB,QACL5xF,KAAKq0F,QAAQxB,EAAKjB,SAI9B,IAAK,IAAI/0F,EAAK,EAAGohB,EAAK40E,EAAKh+D,QAASh4B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtD,IAAI0D,EAAO0d,EAAGphB,GACVmD,KAAKwzF,SAAWjzF,EAAKyM,YAAYjK,MACjC/C,KAAKwzF,QAAUjzF,EAAKyM,YAAYjK,IAChC/C,KAAKg0F,WAAazzF,KAK9B6yF,EAAchjD,UAAUwiD,eAAiB,SAAUryF,GAE/C,GADAP,KAAK4hB,UAAYrhB,EACbA,EAAM,CACN,IAAIwN,EAAIxN,EAAKyM,YACbhN,KAAKwyF,UAAYr6F,OAAO4V,EAAEnL,MAC1B5C,KAAKuyF,SAAWp6F,OAAO4V,EAAEhL,KACzB/C,KAAKoyF,WAAaj6F,OAAO4V,EAAElL,OAC3B7C,KAAKqyF,YAAcl6F,OAAO4V,EAAEjL,aAG5B9C,KAAKwyF,UAAYr6F,OAAOyV,UACxB5N,KAAKuyF,SAAWp6F,OAAOyV,UACvB5N,KAAKoyF,YAAcj6F,OAAOyV,UAC1B5N,KAAKqyF,aAAel6F,OAAOyV,WAInCwlF,EAAchjD,UAAUq9C,cAAgB,SAAUgH,EAASC,GACvD,GAAI10F,KAAKszF,WAAan7F,OAAOyV,UACzB,OAAO,IAAItB,GAAK,EAAG,EAAG,EAAG,GAE7B,IAAI1J,OAAmB3I,IAAZw6F,EAAwBh4F,KAAKyK,IAAIlH,KAAKszF,SAAU,GAAKtzF,KAAKszF,SACjEvwF,OAAkB9I,IAAZy6F,EAAwBj4F,KAAKyK,IAAIlH,KAAKwzF,QAAS,GAAKxzF,KAAKwzF,QACnE,OAAO,IAAIlnF,GAAK7P,KAAKC,MAAMkG,GAAOnG,KAAKC,MAAMqG,GAAMtG,KAAKC,MAAMsD,KAAKuzF,UAAY3wF,GAAOnG,KAAKC,MAAMsD,KAAKyzF,WAAa1wF,KAGvHqwF,EAAchjD,UAAU2hD,QAAU,SAAUxxF,GACxC,OAAOP,KAAK0zF,UAAUnzF,EAAKV,KAExBuzF,KC/VP7iD,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAkB5D4mF,GAAuC,SAAUpjD,GAEjD,SAASojD,IACL,OAAkB,OAAXpjD,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAK/D,OAPAuwC,GAAUokD,EAAuBpjD,GAIjCT,IACIoB,YAAS,IACVyiD,EAAsBvkD,UAAW,uBAAmB,GAChDukD,GACTxiD,iBC5CE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GA8E5DgpB,GAAyB,SAAUwa,GAKnC,SAASxa,EAAQ6P,EAAShnC,GACtB,IAAI61C,EAAQlE,EAAOkF,KAAKz2C,KAAM4mC,EAAShnC,IAAYI,KAEnDy1C,EAAM5Z,QAAU,KAEhB4Z,EAAM+qC,kBAEN/qC,EAAMm/C,cAENn/C,EAAMqgC,aAAgBj2E,GAAI,GAAIgc,SAAU,GAAIg5E,SAAS,GAErDp/C,EAAM88B,aAAc,EAEpB98B,EAAMogC,gBAAiB,EAEvBpgC,EAAMm0C,oBAAqB,EAE3Bn0C,EAAMu0C,yBAA0B,EAEhCv0C,EAAMq/C,2BAENr/C,EAAMq8B,qBAAsB,EAC5Br8B,EAAMs/C,mBAENt/C,EAAMj3B,gBAAmBC,kBAAcxkB,EAAW2kB,kBAAc3kB,GAChEw7C,EAAMu/C,YAAc,KAGpB,IAAK,IAFDzmF,EACAhO,EACK7J,EAAI,EAAGkwC,GAAWA,EAAQ9sB,OAASpjB,EAAIkwC,EAAQ9sB,MAAMrjB,OAAQC,IAClE6X,EAAQq4B,EAAQ9sB,MAAMpjB,GACtB6J,EAAOk1C,EAAM37B,MAAMpjB,GACf6X,EAAM4D,UAAY5D,EAAM4D,SAAS1b,OAAS,IACrC8X,EAAMrO,OAAUqO,EAAMrO,MAAM6Y,OAC7BxY,EAAKL,MAAM6Y,KAAO,eAEjBxK,EAAMrO,OAAUqO,EAAMrO,MAAM8Y,cAC7BzY,EAAKL,MAAM8Y,YAAc,gBAG7BzK,EAAMnQ,OAA8B,gBAArBmQ,EAAMnQ,MAAMvC,MAC3Bw1B,GAAuB9iB,EAAOhO,GAE9BgO,EAAMnQ,OAA8B,aAArBmQ,EAAMnQ,MAAMvC,MAC3Bu1B,GAAoB7iB,EAAOhO,GAGnC,OAAOk1C,EAuqMX,OAztMAlF,GAAUxZ,EAASwa,GAoDnBxa,EAAQqZ,UAAU6kD,gBAAkB,SAAUC,GAG1C,IAAK,IADD36F,EADAjE,KAEKuG,EAAK,EAAGohB,EAAKC,OAAOC,KAAKne,KAAK4b,WAAY/e,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACrE,IAAIigC,EAAM7e,EAAGphB,IACbtC,EAAMyF,KAAK4b,UAAUkhB,MACRo4D,GAAe36F,aAAeoZ,KAAgBuhF,GAAe36F,aAAeua,KACrFxe,EAAWQ,KAAKyD,GAGxByF,KAAKm1F,aAAa7+F,IAQtBygC,EAAQqZ,UAAUsZ,kBAAoB,SAAUC,EAASC,GAOrD,IAAK,IAHDwrC,GAAoB,EACpBC,GAAgB,EAChBC,GAAqB,EAChBz4F,EAAK,EAAGohB,EAAKC,OAAOC,KAAKwrC,GAAU9sD,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAE9D,OADWohB,EAAGphB,IAEV,IAAK,QACL,IAAK,SACDmD,KAAKJ,QAAQM,MAAM3H,MAAQyH,KAAKuwE,aAAavwE,KAAKzH,OAClDyH,KAAKJ,QAAQM,MAAM5H,OAAS0H,KAAKuwE,aAAavwE,KAAK1H,QACnD0H,KAAKq6E,aAAahK,mBAAmBrwE,KAAKJ,SAC1C,IAAK,IAAIu7B,EAAK,EAAGC,EAAKp7B,KAAK07B,MAAOP,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACpD,IAAIo6D,EAAOn6D,EAAGD,GACVxqB,EAAO3Q,KAAK07B,MAAM65D,GAChB5kF,aAAgBomB,GAClBpmB,EAAK6kF,WAAW7kF,GAGxB,MACJ,IAAK,QACD,GAAIg5C,EAAQ7vC,MAAMrjB,OAAS,GAA8B,IAAzBmzD,EAAQ9vC,MAAMrjB,OAC1CuJ,KAAKi1F,kBACLK,GAAqB,MAEpB,CACD,IAAK,IAAIhwC,EAAK,EAAGC,EAAKrnC,OAAOC,KAAKwrC,EAAQ7vC,OAAQwrC,EAAKC,EAAG9uD,OAAQ6uD,IAAM,CACpE,IAAIxoB,EAAMyoB,EAAGD,GACTxiC,EAAQ3qB,OAAO2kC,GACfle,EAAe5e,KAAK8Z,MAAMgJ,GAC1B2yE,EAAc9rC,EAAQ7vC,MAAMgJ,GAChCuyE,EAAgBA,QAAmDp7F,IAAlCw7F,EAAYC,kBAC7C11F,KAAKmf,mBAAmBP,EAAcgrC,EAAQ9vC,MAAMgJ,GAAQ2yE,OAAax7F,GAAW,GAAM,GAC1F,IAAI8F,GACAH,QAASgf,EAAckiE,MAAO9gF,KAAK0X,eACnCwtD,SAAUtb,EAAQ9vC,MAAMgJ,GACxBqiD,SAAUxb,EAAQ7vC,MAAMgJ,IAE5B9iB,KAAKulE,aAAalyB,eAAasiD,eAAgB51F,GAC3Cq1F,IACAA,GAAoB,GAGV,WAAdp1F,KAAK4rB,MACL5rB,KAAK6rB,sBAGb,MACJ,IAAK,aAED,GAAI89B,EAAQhrC,WAAWloB,OAAS,GAAmC,IAA9BmzD,EAAQjrC,WAAWloB,OACpDuJ,KAAKi1F,iBAAgB,GACrBK,GAAqB,MAEpB,CACD,IAAK,IAAI7vC,EAAK,EAAGC,EAAKxnC,OAAOC,KAAKwrC,EAAQhrC,YAAa8mC,EAAKC,EAAGjvD,OAAQgvD,IAAM,CACrE3oB,EAAM4oB,EAAGD,GACT3iC,EAAQ3qB,OAAO2kC,GACfle,EAAe5e,KAAK2e,WAAWmE,GAC/B2yE,EAAc9rC,EAAQhrC,WAAWmE,GACrC9iB,KAAKgnB,wBAAwBpI,EAAcgrC,EAAQjrC,WAAWmE,GAAQ2yE,GAAa,GAAM,GACrF11F,GACAH,QAASgf,EAAckiE,MAAO9gF,KAAK0X,eACnCwtD,SAAUtb,EAAQjrC,WAAWmE,GAC7BqiD,SAAUxb,EAAQhrC,WAAWmE,IAEjC9iB,KAAKulE,aAAalyB,eAAasiD,eAAgB51F,GAC3C6e,GAAgBA,EAAa/C,UAAiE,kBAArD7b,KAAK4b,UAAUgD,EAAa/C,UAAUzd,MAAMvC,MACrFmE,KAAKwtD,qBAAqBxtD,KAAK4b,UAAUgD,EAAa/C,WAAa+C,GAEnEw2E,IACAA,GAAoB,GAG5Bp1F,KAAK41F,iBACa,WAAd51F,KAAK4rB,MACL5rB,KAAK6rB,sBAGb,MACJ,IAAK,kBACD7rB,KAAK41F,iBACa,WAAd51F,KAAK4rB,MACL5rB,KAAK6rB,sBAET,MACJ,IAAK,kBACD7rB,KAAK61F,uBACL,MACJ,IAAK,eACD71F,KAAK81F,mBACL91F,KAAK+1F,aACL,MACJ,IAAK,gBACD,GAAIpsC,EAAQjrC,cAAc+uB,aAAeztC,KAAK0e,cAAclQ,SAAWxO,KAAK0e,cAAc+uB,aAClFztC,KAAK0e,cAAc+uB,YAAYh3C,OAAS,EAAG,CAC3CuJ,KAAK60E,gBAAe,GACpB,MAGR,GAAIlrB,EAAQjrC,cAAclL,YAAa,CACnCxT,KAAK60E,gBAAe,GACpB,MAEJ,MACJ,IAAK,eACD70E,KAAKg2F,mBAAmBrsC,GACxB,MACJ,IAAK,iBACD3pD,KAAKi2F,eACL,MACJ,IAAK,SACDZ,GAAgB,EAChB,MACJ,IAAK,qBACDr1F,KAAKu5B,QACLv5B,KAAKk2F,cACoB,SAArBl2F,KAAKo6B,OAAOv+B,KACZy5F,GAAqB,EAGrBD,GAAgB,EAEpB,MACJ,IAAK,UACDp2F,EAAYe,MACZ,MACJ,IAAK,gBACDA,KAAKm2F,oBAAoBxsC,GACzB,MACJ,IAAK,SACD3pD,KAAKo2F,YAAYzsC,GACjB,MACJ,IAAK,iBACD3pD,KAAKq2F,qBAAqB1sC,GAC1B,MACJ,IAAK,SACD3pD,KAAKotF,aAAeh6C,aAAWkjD,gBAC/B/kD,EAAOnB,UAAUzU,QAAQ8a,KAAKz2C,MAC9BA,KAAKotF,cAAgBh6C,aAAWkjD,gBAChC,MACJ,IAAK,sBAOD,QANuDr8F,IAAnD0vD,EAAQ9uB,oBAAoB07D,qBAC5Bv2F,KAAK66B,oBAAoB07D,mBAAqB5sC,EAAQ9uB,oBAAoB07D,yBAErCt8F,IAArC0vD,EAAQ9uB,oBAAoB27D,OAC5Bx2F,KAAK66B,oBAAoB27D,KAAO7sC,EAAQ9uB,oBAAoB27D,MAE5D7sC,EAAQ9uB,oBAAoB47D,MAE5B,IAAK,IADDA,EAAQ9sC,EAAQ9uB,oBAAoB47D,MAC/BC,EAAK,EAAGC,EAAKz4E,OAAOC,KAAKs4E,GAAQC,EAAKC,EAAGlgG,OAAQigG,IAAM,CACxD55D,EAAM65D,EAAGD,GACT5zE,EAAQ3qB,OAAO2kC,GACnB98B,KAAK66B,oBAAoB47D,MAAM3zE,GAAS2zE,EAAM3zE,GAGtD,MACJ,IAAK,6BACqD7oB,IAAlD0vD,EAAQpzB,sBAAsBC,kBAC9Bx2B,KAAKu2B,sBAAsBC,gBAAkBmzB,EAAQpzB,sBAAsBC,kBAQ3F,GAHI6+D,GACAr1F,KAAKsqF,WAEL8K,EAAmB,CACfr1F,GAASH,QAASI,KAAM8gF,MAAO9gF,KAAK0X,eAAgBwtD,SAAUtb,EAASub,SAAUxb,GACrF3pD,KAAKulE,aAAalyB,eAAasiD,eAAgB51F,GAEnD,IAAKu1F,GAAuBt1F,KAAK42F,gBAAoB52F,KAAK62F,aAAaltC,EAASC,GAAW,CACvF,IAAIxsC,GAAUvhB,KAAM,kBAAmByhB,WAAYssC,EAASrsC,WAAYosC,EAAStsC,SAAU,YAC3Frd,KAAKwd,gBAAgBJ,GAEzBpd,KAAK82F,sBACDxB,IACAt1F,KAAKk2F,aAAY,GACjBl2F,KAAK6rB,wBAIbkL,EAAQqZ,UAAU4lD,mBAAqB,SAAUrsC,SACJ1vD,IAArC0vD,EAAQpuB,aAAa/nB,aAA6Bm2C,EAAQpuB,aAAawgC,qBACvEpS,EAAQpuB,aAAa0gC,oBACrBj8D,KAAKoiB,gBAAgB06C,WAAW98D,KAAKu7B,aAAcqN,GAAgB5oC,KAAKJ,QAAQC,IAAKG,KAAKqiB,SAASxc,UAAW7F,KAAK0uB,cAAe1uB,KAAKgvB,OAAQhvB,KAAKivB,SAG5J8H,EAAQqZ,UAAU+lD,oBAAsB,SAAUxsC,QACJ1vD,IAAtC0vD,EAAQj7B,cAAcotC,aACtB97D,KAAKoiB,gBAAgB06C,WAAW98D,KAAKu7B,aAAcqN,GAAgB5oC,KAAKJ,QAAQC,IAAKG,KAAKqiB,SAASxc,UAAW7F,KAAK0uB,cAAe1uB,KAAKgvB,OAAQhvB,KAAKivB,aAE/Gh1B,IAArC0vD,EAAQj7B,cAAcc,YACtBxvB,KAAK61F,uBACL71F,KAAKqiB,SAASmuD,UACdxwE,KAAK+2F,qBAE0C98F,IAA1C0vD,EAAQj7B,cAAcC,sBACa10B,IAAxC0vD,EAAQj7B,cAAcE,qBACkC30B,IAApD0vD,EAAQj7B,cAAcC,gBAAgBiB,gBACY31B,IAAlD0vD,EAAQj7B,cAAcE,cAAcgB,WACpCF,GAAoB1vB,MACpBA,KAAK61F,uBACL71F,KAAKqiB,SAASmuD,UACdxwE,KAAK+2F,gBAGL5nE,GAAYnvB,OAGpBA,KAAKoiB,gBAAgB06C,WAAW98D,KAAKu7B,aAAcqN,GAAgB5oC,KAAKJ,QAAQC,IAAKG,KAAKqiB,SAASxc,UAAW7F,KAAK0uB,cAAe1uB,KAAKgvB,OAAQhvB,KAAKivB,SAMxJ8H,EAAQqZ,UAAUoZ,eAAiB,WAE/B,OAAOxpD,KAAKypD,cADK,YAMrB1yB,EAAQqZ,UAAU4Y,UAAY,WAC1BhpD,KAAKg3F,6BACLh3F,KAAKi3F,qBAAsB,EAC3Bj3F,KAAKk3F,eAAiB,IAAI/3B,GAC1Bn/D,KAAKm3F,qBACLn3F,KAAKo3F,aAEDzyD,OAAqB,iBACrBA,OAAqB,eAAI,MAE7B3kC,KAAKq3F,cACLr3F,KAAKs3F,YACLt3F,KAAKipD,eACLjpD,KAAKkpD,aACLlpD,KAAKJ,QAAQg8B,UAAUlQ,IAAI,cAE/BqL,EAAQqZ,UAAU4mD,2BAA6B,WAC3Ch3F,KAAKu3F,eACDC,KAAM,OACNC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,UAAW,aACXC,SAAU,WACVnZ,MAAO,QACPoZ,QAAS,WACTC,MAAO,QACPC,aAAc,iBACdC,YAAa,eACbC,WAAY,eACZC,aAAc,iBAElBp4F,KAAKq4F,aAAe,EACpBr4F,KAAKm9E,oBACLn9E,KAAK4b,aACL5b,KAAKs4F,aACLt4F,KAAK40F,cACL50F,KAAKnI,YACAmI,KAAKw7B,YACNx7B,KAAK07B,UAET17B,KAAKyd,eAAiB,IAAIk9D,GAAe36E,MACzCA,KAAKq6E,aAAe,IAAIpL,GAAoBjvE,KAAMA,KAAKyd,gBACvDzd,KAAK85E,cAAgB,IAAIsZ,GAAcpzF,KAAK4b,WAC5C5b,KAAKqiB,SAAW,IAAIuqE,GAAgB5sF,OAExC+2B,EAAQqZ,UAAU+mD,mBAAqB,WACnCn3F,KAAKk3F,eAAe73B,SAAS,eAAgBr/D,KAAKu4F,UAAY,IAAIC,OAAKx4F,KAAKqpD,gBAAiBrpD,KAAKu3F,cAAev3F,KAAKy4F,UAK1H1hE,EAAQqZ,UAAUgnD,WAAa,WAC3Bp3F,KAAKu4F,UAAY,IAAIC,OAAKx4F,KAAKqpD,gBAAiBrpD,KAAKu3F,cAAev3F,KAAKy4F,SAK7E1hE,EAAQqZ,UAAU+Y,OAAS,WACvB,IAAIuvC,KACA14F,KAAKy5B,mBAAmBk/D,WAAWC,MACnC54F,KAAK64F,oBAET74F,KAAK84F,cACL94F,KAAKoiB,gBAAkB,IAAIm1C,GAAgBv3D,KAAKJ,QAAQC,GAAI,IAAI00D,GAA6B,QAAdv0D,KAAK4rB,MACpF5rB,KAAK+4F,aACL/4F,KAAKg5F,0BACLh5F,KAAKoiB,gBAAgBy1C,YACrB73D,KAAKk2F,aAAY,GACjBl2F,KAAKsqF,WACLtqF,KAAK81F,mBACL91F,KAAKi5F,mBACLj5F,KAAKoiB,gBAAgBg5C,mBAAmBp7D,KAAKu7B,aAAcqN,GAAgB5oC,KAAKJ,QAAQC,IAAKG,KAAKqiB,SAASxc,UAAW7F,KAAK0uB,cAAe1uB,KAAKgvB,OAAQhvB,KAAKivB,QAC5JjvB,KAAKyd,eAAe+lE,sBAIpBxjF,KAAKupD,OAAO,mBAIZvpD,KAAKsmD,QAAQ,QACbtmD,KAAKqiB,SAASmuD,UACdxwE,KAAKqiB,SAASkrE,sBACdvtF,KAAK6rB,uBACD7rB,KAAKi7B,eAAe1L,eAAiB,GAAKvvB,KAAKi7B,eAAe5L,iBAAmB,IACjFrvB,KAAK83E,qBAKLzzC,UAAQ60D,WACRl5F,KAAKwW,KAAOC,eAAaG,QAAUH,eAAaC,cAEpD1W,KAAKupD,OAAO,kBACZvpD,KAAKi3F,qBAAsB,EAC3Bj3F,KAAKQ,cAAgBvB,EAAYe,MACjCA,KAAK0X,eAAiBC,gBAAcwhF,OAEpC,IAAK,IADDr/E,EAAQ9Z,KAAK8Z,MACRpjB,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IACzBojB,EAAMpjB,GAAGsxD,YACV0wC,EAAc5hG,KAAKgjB,EAAMpjB,IAGjC,GAAIgiG,EAAcjiG,OACd,IAASC,EAAIgiG,EAAcjiG,OAAS,EAAGC,GAAK,EAAGA,IAC3CsJ,KAAKyd,eAAeqsE,WAAW4O,EAAchiG,GAAIsJ,MAGzDA,KAAKi2F,eACLj2F,KAAKw7B,WAAY,GAErBzE,EAAQqZ,UAAUyoD,kBAAoB,WAClC,IAAIO,EAAUp5F,KACd,GAAIo5F,EAAQ3/D,mBAAmBk/D,WAAWC,KAAM,EACxCS,EAAW,IAAIC,OAAKF,EAAQ3/D,mBAAmBk/D,WAAWC,KAAM,OAAO,IAClEW,UAAY,SAAUnjG,GAC3BgjG,EAAQ3/D,mBAAmB+/D,YAAc9iE,KAAKiE,MAAMvkC,GACpDgjG,EAAQ9oE,YAEZ+oE,EAASI,OAAOC,OAEpB,GAAIN,EAAQ3/D,mBAAmBkgE,qBAAqBhB,WAAWC,KAAM,CACjE,IAAIS,GAAAA,EAAW,IAAIC,OAAKF,EAAQ3/D,mBAAmBkgE,qBAAqBhB,WAAWC,KAAM,OAAO,IACvFW,UAAY,SAAUnjG,GAC3BgjG,EAAQ3/D,mBAAmBkgE,qBAAqBH,YAAc9iE,KAAKiE,MAAMvkC,GACzEgjG,EAAQ9oE,YAEZ+oE,EAASI,OAAOC,SAMxB3iE,EAAQqZ,UAAUiZ,cAAgB,WAC9B,MAAO,WAMXtyB,EAAQqZ,UAAU6B,aAAe,WAC7B,MAAO,WAOXlb,EAAQqZ,UAAUwpD,gBAAkB,WAChC,IAAIC,KA+EJ,OA9EAA,EAAQ/iG,MACJijB,OAAQ,OACRha,UAEJ85F,EAAQ/iG,MACJijB,OAAQ,WACRha,UAEJ85F,EAAQ/iG,MACJijB,OAAQ,uBACRha,UAEAC,KAAKwT,YAAc4C,qBAAmBsK,UACtCm5E,EAAQ/iG,MACJijB,OAAQ,WACRha,WAGiB,wBAArBC,KAAKo6B,OAAOv+B,MAAuD,qBAArBmE,KAAKo6B,OAAOv+B,MAC1DmE,KAAKo6B,OAAO+vD,kBACZ0P,EAAQ/iG,MACJijB,OAAQ,gBACRha,UAGJC,KAAKu7B,aAAa/nB,aAClBqmF,EAAQ/iG,MACJijB,OAAQ,WACRha,MAAOC,QAGf65F,EAAQ/iG,MACJijB,OAAQ,iBACRha,MAAOC,QAEPA,KAAK66B,oBAAoB27D,MACzBqD,EAAQ/iG,MACJijB,OAAQ,cACRha,MAAOC,KAAMA,KAAKk3F,kBAGD,wBAArBl3F,KAAKo6B,OAAOv+B,MAAuD,qBAArBmE,KAAKo6B,OAAOv+B,MAC1Dg+F,EAAQ/iG,MACJijB,OAAQ,sBACRha,UAGiB,4BAArBC,KAAKo6B,OAAOv+B,MACZg+F,EAAQ/iG,MACJijB,OAAQ,0BACRha,UAGiB,YAArBC,KAAKo6B,OAAOv+B,MACZg+F,EAAQ/iG,MACJijB,OAAQ,eACRha,UAGiB,eAArBC,KAAKo6B,OAAOv+B,MACZg+F,EAAQ/iG,MACJijB,OAAQ,aACRha,UAGiB,sBAArBC,KAAKo6B,OAAOv+B,MACZg+F,EAAQ/iG,MACJijB,OAAQ,oBACRha,WAGJC,KAAKy5B,mBAAmB+/D,aAAex5F,KAAKy5B,mBAAmBrjC,MAC/D4J,KAAKy5B,mBAAmBk/D,WAAWC,MAAQ54F,KAAKy5B,mBAAmBkgE,qBAAqBhB,WAAWC,OACnGiB,EAAQ/iG,MACJijB,OAAQ,cACRha,UAGD85F,GAKX9iE,EAAQqZ,UAAUkZ,QAAU,WAYxB,GAXAuqB,cAAc7zE,KAAKg1F,aACnBh1F,KAAKg1F,YAAc,KACfh1F,KAAKgvB,QAAUhvB,KAAKivB,SACpBjvB,KAAKgvB,OAAOs6B,UACZtpD,KAAKivB,OAAOq6B,WAEhBtpD,KAAKQ,cAAc8oD,UACnBtpD,KAAK42E,UAAUttB,UACftpD,KAAKipD,eACLjpD,KAAKupD,OAAO,cACZhY,EAAOnB,UAAUkZ,QAAQ7S,KAAKz2C,MAC1BguB,SAASC,eAAejuB,KAAKJ,QAAQC,IAAK,CAC1CG,KAAKJ,QAAQg8B,UAAUlP,OAAO,aAE9B,IADA,IAAIotE,EAAiB9rE,SAAS6Z,uBAAuB,kBAC9CiyD,EAAerjG,OAAS,GAC3BqjG,EAAe,GAAG76E,WAAW8f,YAAY+6D,EAAe,IAE5D,IAAI75F,EAAU+tB,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,WACpDI,GACAD,KAAKJ,QAAQm/B,YAAY9+B,GAE7B,IAAIykC,EAAiB,iBACjBC,OAAOD,KACPC,OAAOD,GAAgB+F,YAAc,EACK,IAAtC9F,OAAOD,GAAgB+F,aACvB9F,OAAOD,GAAgBzlB,WAAW8f,YAAY4F,OAAOD,IACrDC,OAAOD,GAAkB,SAQzC3N,EAAQqZ,UAAU8Y,WAAa,WAC3B,IAAI6wC,EAAa11D,UAAQ21D,gBACrBC,EAAY51D,UAAQ61D,cACpBC,EAAY91D,UAAQ+1D,eACpBC,EAAch2D,UAAQi2D,UAAY,eAAiB,aACnDC,EAAgBl2D,UAAQi2D,UACxBE,EAAmC,YAAtBn2D,UAAQC,KAAKjrB,KACzBkhF,EAAgB,aAAe,iBAAoB,aACxDE,eAAa/uE,IAAI1rB,KAAKyvE,cAAesqB,EAAY/5F,KAAKq6E,aAAaxY,UAAW7hE,KAAKq6E,cACnFogB,eAAa/uE,IAAI1rB,KAAKyvE,cAAe0qB,EAAWn6F,KAAKq6E,aAAalY,UAAWniE,KAAKq6E,cAClFogB,eAAa/uE,IAAI1rB,KAAKyvE,cAAewqB,EAAWj6F,KAAKq6E,aAAajY,QAASpiE,KAAKq6E,cAChFogB,eAAa/uE,IAAI1rB,KAAKyvE,cAAe4qB,EAAar6F,KAAKq6E,aAAa5X,WAAYziE,KAAKq6E,cACrFogB,eAAa/uE,IAAI1rB,KAAKyvE,cAAe,UAAWzvE,KAAKq6E,aAAarE,QAASh2E,KAAKq6E,cAChFogB,eAAa/uE,IAAI1rB,KAAKyvE,cAAe,WAAYzvE,KAAKq6E,aAAatC,YAAa/3E,KAAKq6E,cACrFogB,eAAa/uE,IAAI1rB,KAAKyvE,cAAe,SAAUzvE,KAAKq6E,aAAaxC,SAAU73E,KAAKq6E,cAChFogB,eAAa/uE,IAAI1rB,KAAKyvE,cAAe+qB,EAAYx6F,KAAKq6E,aAAa7X,WAAYxiE,KAAKq6E,cACpFogB,eAAa/uE,IAAIiZ,OAAQ,SAAU3kC,KAAKq6E,aAAapK,aAAcjwE,KAAKq6E,cACxEr6E,KAAK06F,kBAKT3jE,EAAQqZ,UAAU6Y,aAAe,WAC7B,IAAI8wC,EAAa11D,UAAQ21D,gBACrBG,EAAY91D,UAAQ+1D,eACpBC,EAAch2D,UAAQi2D,UAAY,eAAiB,aACnDC,EAAgBl2D,UAAQi2D,UACxBE,EAAmC,YAAtBn2D,UAAQC,KAAKjrB,KACzBkhF,EAAgB,aAAe,iBAAoB,aACpDN,EAAY51D,UAAQ61D,cACxBO,eAAa/tE,OAAO1sB,KAAKyvE,cAAesqB,EAAY/5F,KAAKq6E,aAAaxY,WACtE44B,eAAa/tE,OAAO1sB,KAAKyvE,cAAe0qB,EAAWn6F,KAAKq6E,aAAalY,WACrEs4B,eAAa/tE,OAAO1sB,KAAKyvE,cAAewqB,EAAWj6F,KAAKq6E,aAAajY,SACrEq4B,eAAa/tE,OAAO1sB,KAAKyvE,cAAe4qB,EAAar6F,KAAKq6E,aAAa5X,YACvEg4B,eAAa/tE,OAAO1sB,KAAKyvE,cAAe,UAAWzvE,KAAKq6E,aAAarE,SACrEykB,eAAa/tE,OAAO1sB,KAAKyvE,cAAe,WAAYzvE,KAAKq6E,aAAatC,aACtE0iB,eAAa/tE,OAAO1sB,KAAKyvE,cAAe,SAAUzvE,KAAKq6E,aAAaxC,UACpE4iB,eAAa/tE,OAAO1sB,KAAKyvE,cAAe+qB,EAAYx6F,KAAKq6E,aAAa7X,YACtEi4B,eAAa/tE,OAAOiY,OAAQ,SAAU3kC,KAAKq6E,aAAapK,eAQ5Dl5C,EAAQqZ,UAAUvzB,OAAS,SAAUgY,EAASgsD,GAC3B,MAAXhsD,GACA70B,KAAKyd,eAAe2mD,cAAcvvC,EAASgsD,IAMnD9pD,EAAQqZ,UAAUuqD,UAAY,WAC1B,IAAIj8E,KACJA,EAAgB1e,KAAK46F,kBAAkB56F,KAAKo9E,YAAYvoD,SACxD70B,KAAK6c,OAAO6B,IAMhBqY,EAAQqZ,UAAU+zB,SAAW,SAAU5pE,GAC/BA,GAAOs0C,GAAW7uC,KAAMzF,IACxByF,KAAKyd,eAAe0mD,SAAS5pE,IAMrCw8B,EAAQqZ,UAAUlzB,eAAiB,WAC/Bld,KAAKyd,eAAeP,gBAAe,IAKvC6Z,EAAQqZ,UAAUyqD,eAAiB,WAC/B76F,KAAKq6E,aAAahK,mBAAmBrwE,KAAKJ,UAE9Cm3B,EAAQqZ,UAAU0qD,WAAa,WAC3B96F,KAAK88E,OAKT/lD,EAAQqZ,UAAU0sC,IAAM,WACpB98E,KAAKyd,eAAeq/D,OAKxB/lD,EAAQqZ,UAAUkwC,WAAa,SAAUN,EAASnkE,GAC1C7b,KAAKgnD,YACLhnD,KAAKgnD,WAAWs5B,WAAWN,EAASnkE,EAAU7b,OAMtD+2B,EAAQqZ,UAAU2qD,cAAgB,SAAUl7F,GACpCG,KAAKgnD,YACLhnD,KAAKgnD,WAAW+zC,cAAcl7F,EAAIG,OAG1C+2B,EAAQqZ,UAAU4qD,aAAe,WAC7Bh7F,KAAKk+E,SAMTnnD,EAAQqZ,UAAU8tC,MAAQ,SAAU3jF,GAChCyF,KAAKyd,eAAeygE,MAAM3jF,IAK9Bw8B,EAAQqZ,UAAUmgD,UAAY,SAAU3pD,GACpC5mC,KAAKqiB,SAASkuE,UAAU3pD,IAK5B7P,EAAQqZ,UAAUugD,cAAgB,SAAUh8D,GACxC30B,KAAKqiB,SAASsuE,cAAch8D,IAKhCoC,EAAQqZ,UAAU0gD,cAAgB,SAAUn8D,GACxC30B,KAAKqiB,SAASyuE,cAAcn8D,IAEhCoC,EAAQqZ,UAAU6qD,YAAc,WAC5Bj7F,KAAKm+E,QAKTpnD,EAAQqZ,UAAU+tC,KAAO,WAErB,OADUn+E,KAAKyd,eAAe0gE,QAMlCpnD,EAAQqZ,UAAUumB,MAAQ,WACtB32D,KAAKyd,eAAek5C,SAKxB5/B,EAAQqZ,UAAUwuC,QAAU,WACxB5+E,KAAKyd,eAAemhE,WAKxB7nD,EAAQqZ,UAAUkyC,WAAa,WAC3BtiF,KAAKyd,eAAe6kE,cAMxBvrD,EAAQqZ,UAAUwtC,eAAiB,SAAUN,GACzC,IAAIp1C,EAAQloC,KAAKyd,eAAe2lD,SAASka,GACzCt9E,KAAKo9E,YAAcl1C,GAOvBnR,EAAQqZ,UAAU8sC,SAAW,SAAUh1C,EAAOu1C,GAC1Cz9E,KAAKyd,eAAey/D,SAASh1C,EAAOu1C,IAMxC1mD,EAAQqZ,UAAUmtC,YAAc,SAAUC,GACtCx9E,KAAKyd,eAAe8/D,YAAYC,IAMpCzmD,EAAQqZ,UAAUstC,YAAc,SAAU7oD,EAAS8oD,GAC/C39E,KAAKyd,eAAeigE,YAAY7oD,EAAS8oD,IAM7C5mD,EAAQqZ,UAAU4xC,kBAAoB,SAAU1E,GAC5Ct9E,KAAKyd,eAAeukE,kBAAkB1E,IAM1CvmD,EAAQqZ,UAAUgyC,kBAAoB,SAAU9E,GAC5Ct9E,KAAKyd,eAAe2kE,kBAAkB9E,IAM1CvmD,EAAQqZ,UAAU2tC,WAAa,SAAUT,GACrCt9E,KAAKyd,eAAesgE,WAAWT,IAKnCvmD,EAAQqZ,UAAUqyC,aAAe,WAC7BziF,KAAKyd,eAAeglE,gBAKxB1rD,EAAQqZ,UAAU8qD,YAAc,WAC5Bl7F,KAAKyd,eAAeulE,eAKxBjsD,EAAQqZ,UAAUkzC,aAAe,WAC7BtjF,KAAKyd,eAAe6lE,gBAKxBvsD,EAAQqZ,UAAU/vB,UAAY,SAAUhH,GACpC,OAAOrZ,KAAK4b,UAAUvC,IAK1B0d,EAAQqZ,UAAU+qD,eAAiB,WAC/B,OAAOn7F,KAAKo9E,aAEhBrmD,EAAQqZ,UAAUgrD,aAAe,SAAU34F,EAAWzL,EAAGC,GAC5B,iBAAdwL,GACPzC,KAAKq7F,MAAM54F,IASnBs0B,EAAQqZ,UAAUirD,MAAQ,SAAU54F,EAAWzL,EAAGC,GAC9C,IAAI6qD,EAAK,EACLC,EAAK,EAES,SAAdt/C,GAAsC,UAAdA,EAExBq/C,GADmC,SAAdr/C,GACM,EAAI,IAAMzL,GAAQ,GAI7C+qD,GADmC,OAAdt/C,GACM,EAAI,IAAMxL,GAAQ,GAEjD,IAAIsD,EAAMyF,KAAK0e,cACXmF,EAAa7jB,KAAK0e,cAAclQ,QAAQ2D,SAAS,GACjD0R,aAAsBS,GACtBtkB,KAAKyd,eAAemuD,UAAUrxE,EAAIuf,MAAM,GAAI+J,EAAYi+B,EAAIC,GAG5D/hD,KAAK0c,KAAKniB,EAAKunD,EAAIC,GAEvB/hD,KAAK08E,uBAQT3lD,EAAQqZ,UAAU1zB,KAAO,SAAUniB,EAAKunD,EAAIC,GACxC,GAAI/hD,KAAKgnD,YAAezsD,aAAeua,GAAO,CAE1C,GADc9U,KAAKgnD,WAAWs0C,qBAAqB/gG,EAAKyF,KAAM8hD,EAAIC,GAE9D,OAGR,GAAIxnD,aAAeyZ,GAAU,CAEzB,GADAhU,KAAKgqF,yBAA0B,EAC3BzvF,EAAIuf,OAASvf,EAAIuf,MAAMrjB,OACvB,IAAK,IAAIoG,EAAK,EAAGohB,EAAK1jB,EAAIuf,MAAOjd,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACnD,IAAI0D,EAAO0d,EAAGphB,GAEd,GADAmD,KAAK0c,KAAKnc,EAAMuhD,EAAIC,GAChBxhD,EAAKsb,SAAU,CACf,IAAIE,EAAW/b,KAAK4b,UAAUrb,EAAKsb,UACnC,GAAIE,EAASqD,OAAQ,CAEjBpD,GAA8BD,EADf/b,KAAK4b,UAAUG,EAASF,UACWtb,EAAMP,QAKxE,GAAIzF,EAAIokB,YAAcpkB,EAAIokB,WAAWloB,OACjC,IAAK,IAAI0kC,EAAK,EAAGC,EAAK7gC,EAAIokB,WAAYwc,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACxD,IAAI1V,EAAO2V,EAAGD,GACdn7B,KAAK0c,KAAK+I,EAAMq8B,EAAIC,IACgC,IAAhD/hD,KAAK80F,wBAAwBx0E,QAAQmF,IACrCzlB,KAAK80F,wBAAwBh+F,KAAK2uB,GAI9CzlB,KAAK2kE,sBAGDpqE,aAAeua,IACX9U,KAAKgnD,YACLhnD,KAAKgnD,WAAWs0C,qBAAqB/gG,EAAKyF,KAAM8hD,EAAIC,GAG5D/hD,KAAKyd,eAAef,KAAKniB,EAAKunD,EAAIC,GAEtC,GAAIxnD,aAAeyZ,GAAU,CACzBhU,KAAKgqF,yBAA0B,EAC/B,IAAK,IAAI1kC,EAAK,EAAGC,EAAKvlD,KAAK80F,wBAAyBxvC,EAAKC,EAAG9uD,OAAQ6uD,IAAM,CACtE,IAAI3mC,EAAa4mC,EAAGD,GACpBtlD,KAAKu7F,0BAA0Bv7F,KAAK4b,UAAU+C,EAAW9e,KAC3B,SAA1B8e,EAAWvgB,MAAMvC,MAAiD,YAA9B8iB,EAAWvgB,MAAM2mF,UACrD/kF,KAAKyd,eAAeunE,wBAAwBrmE,GAGpD3e,KAAK80F,2BAEH90F,KAAK0X,eAAiBC,gBAAcC,YACtC5X,KAAK2kE,kBAUb5tC,EAAQqZ,UAAUzzB,MAAQ,SAAUpiB,EAAKg3D,EAAIC,EAAIzwB,GAC7C,IAAI0oC,GAA2B,EAC/B,GAAIlvE,aAAeyZ,GAAU,CACzB,GAAIzZ,EAAIuf,OAASvf,EAAIuf,MAAMrjB,OACvB,IAAK,IAAIoG,EAAK,EAAGohB,EAAK1jB,EAAIuf,MAAOjd,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACnD,IAAI0D,EAAO0d,EAAGphB,GACd4sE,EAA2BzpE,KAAKyd,eAAed,MAAMpc,EAAMgxD,EAAIC,EAAIzwB,EAAOxmC,GAGlF,GAAIA,EAAIokB,YAAcpkB,EAAIokB,WAAWloB,OACjC,IAAK,IAAI0kC,EAAK,EAAGC,EAAK7gC,EAAIokB,WAAYwc,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACxD,IAAI1V,EAAO2V,EAAGD,GACdn7B,KAAKyd,eAAed,MAAM8I,EAAM8rC,EAAIC,EAAIzwB,EAAOxmC,GAGvDyF,KAAK2kE,iBACL3kE,KAAK08E,2BAGL18E,KAAKyd,eAAed,MAAMpiB,EAAKg3D,EAAIC,EAAIzwB,EAAQxmC,EAAI4X,SAAW5X,OAAMN,GAExE,OAAOwvE,GAQX1yC,EAAQqZ,UAAU0f,OAAS,SAAUv1D,EAAK/C,EAAOupC,GAC7C,IAAI0oC,EACJ,GAAIlvE,EAEA,GADAwmC,EAAQA,IAAW/pC,EAAGuD,EAAIiU,QAAQzS,QAAS9E,EAAGsD,EAAIiU,QAAQxS,SACtDzB,aAAeyZ,GAAU,CACzBzZ,EAAI2S,aAAe1V,EACnB+C,EAAIiU,QAAQtB,aAAe1V,EAC3B,IAAIgK,EAASuzB,GAAUx6B,EAAIiU,SAE3B,KADAi7D,EAA2BzpE,KAAKyd,eAAegsD,8BAAyBxvE,OAAWA,EAAWuH,IAI1F,OAFAjH,EAAI2S,aAAe1V,EACnB+C,EAAIiU,QAAQtB,aAAe1V,EACpBiyE,EAEX,IAAI50C,KAEJA,GADAA,EAAUA,EAAQhP,OAAOtrB,EAAIuf,QACX+L,OAAOtrB,EAAIokB,YAC7B3e,KAAKyd,eAAeooE,cAActrF,EAAKs6B,EAASr9B,EAAOupC,QAGvD/gC,KAAKyd,eAAeooE,cAActrF,GAAMA,GAAM/C,EAAOupC,GAG7D,OAAO0oC,GAQX1yC,EAAQqZ,UAAU2zC,cAAgB,SAAUxpF,EAAKunD,EAAIC,GACjD/hD,KAAKyd,eAAesmE,cAAcxpF,EAAKunD,EAAIC,IAQ/ChrB,EAAQqZ,UAAU4zC,cAAgB,SAAUzpF,EAAKunD,EAAIC,GACjD/hD,KAAKyd,eAAeumE,cAAczpF,EAAKunD,EAAIC,IAO/ChrB,EAAQqZ,UAAUghC,sBAAwB,SAAU/wE,EAAUkC,GAC1D,OAAOvC,KAAKq6E,aAAajJ,sBAAsB/wE,EAAUkC,IAQ7Dw0B,EAAQqZ,UAAUihC,qBAAuB,SAAUx8C,EAAStS,EAAQ8+C,GAChE,OAAOrhE,KAAKq6E,aAAahJ,qBAAqBx8C,EAAStS,EAAQ8+C,IAQnEtqC,EAAQqZ,UAAU0oC,2BAA6B,SAAUjkD,EAAStS,EAAQ8+C,EAAUhhE,EAAUkC,GAC1F,OAAOvC,KAAKq6E,aAAapB,qBAAqBpkD,EAAStS,EAAQ8+C,EAAUhhE,EAAUkC,IAOvFw0B,EAAQqZ,UAAUsiC,sBAAwB,SAAUn4E,EAAK8F,GACrD,OAAOL,KAAKq6E,aAAa3H,sBAAsBn4E,EAAK8F,IASxD02B,EAAQqZ,UAAUuiC,mBAAqB,SAAUp4E,EAAKiU,EAASnO,EAAU2C,GACrE,OAAOhD,KAAKq6E,aAAa1H,mBAAmBp4E,EAAKiU,EAASnO,EAAU2C,IAMxE+zB,EAAQqZ,UAAUwiC,QAAU,SAAUrwD,GAClC,IAAI/L,EACAglF,EAAgBnrE,GAAYrwB,KAAKw7F,eACrC,OAAIA,IACAhlF,EAAOglF,EAAcj5E,IAEV/L,EAGRxW,KAAKq6E,aAAazH,QAAQrwD,IAMrCwU,EAAQqZ,UAAUhB,UAAY,SAAU7sB,EAAQk5E,GAC5C,IAAIpsD,EACAqsD,EAAkBrrE,GAAYrwB,KAAK07F,iBACvC,OAAIA,IACArsD,EAASqsD,EAAgBn5E,EAAQk5E,IAEtBpsD,EAGRrvC,KAAKq6E,aAAajrC,UAAU7sB,IAMvCwU,EAAQqZ,UAAU0oD,YAAc,WACxB94F,KAAK+8E,gBACL/8E,KAAK+8E,eAAe+b,YAAY94F,OAOxC+2B,EAAQqZ,UAAU5yB,gBAAkB,SAAUJ,GAC1C,GAAIpd,KAAK+8E,gBAAmB/8E,KAAKwT,YAAc4C,qBAAmBsK,WAAc1gB,KAAKogB,cAAe,CAChG,GAAIhD,EAAME,YAAsC,WAAxBF,EAAME,WAAWzd,GACrC,OAEJG,KAAK+8E,eAAev/D,gBAAgBJ,EAAOpd,MACxB,eAAfod,EAAMvhB,MAAwC,aAAfuhB,EAAMvhB,MACrCmE,KAAK27F,qBAAqBv+E,KAKtC2Z,EAAQqZ,UAAUurD,qBAAuB,SAAUv+E,GAC/C,IAAIisD,KACAnE,EAAW,WACXC,EAAW,WAEX5iE,KAWJ,OAVI6a,GAASA,EAAMG,YAAgBH,EAAMG,WAAgB,iBAAa2b,OAChE9b,EAAMG,WAAqB,sBAAa2b,MAC1C32B,EAAS6a,EAAMG,WAAWzD,MAAM+L,OAAOzI,EAAMG,WAAWoB,YAGpDvB,EAAMG,YACNhb,EAAOzL,KAAKsmB,EAAMG,YAG1B8rD,EAAW,KAAIjsD,EAAMvhB,KACbuhB,EAAMvhB,MACV,IAAK,kBACDwtE,EAAOnE,IAAcnpE,QAASqhB,EAAME,WAAWvhB,QAASC,QAASohB,EAAME,WAAWthB,SAClFqtE,EAAOlE,IAAcppE,QAASqhB,EAAMG,WAAWxhB,QAASC,QAASohB,EAAMG,WAAWvhB,SAClF,MACJ,IAAK,kBACDqtE,EAAOnE,IAAch4D,YAAakQ,EAAME,WAAWpQ,aACnDm8D,EAAOlE,IAAcj4D,YAAakQ,EAAMG,WAAWrQ,aACnD,MACJ,IAAK,cACDm8D,EAAOnE,IACHnpE,QAASqhB,EAAME,WAAWvhB,QAASC,QAASohB,EAAME,WAAWthB,QAC7DzD,MAAO6kB,EAAME,WAAW/kB,MAAOD,OAAQ8kB,EAAME,WAAWhlB,QAE5D+wE,EAAOlE,IACHppE,QAASqhB,EAAMG,WAAWxhB,QAASC,QAASohB,EAAMG,WAAWvhB,QAC7DzD,MAAO6kB,EAAMG,WAAWhlB,MAAOD,OAAQ8kB,EAAMG,WAAWjlB,QAE5D,MACJ,IAAK,oBACD+wE,EAAOjsD,EAAMqL,YAAclmB,EAC3B,MACJ,IAAK,oBACD8mE,EAAOnE,IAAcnpE,QAASqhB,EAAME,WAAWvhB,QAASC,QAASohB,EAAME,WAAWthB,SAClFqtE,EAAOlE,IAAcppE,QAASqhB,EAAMG,WAAWxhB,QAASC,QAASohB,EAAMG,WAAWvhB,SAG1F,IAAI+3D,GACA+sB,MAAO1jE,EAAMC,SAAU9a,OAAQA,EAAQ8mE,OAAQA,GAE/C9mE,EAAO9L,QACPuJ,KAAKulE,aAAalyB,eAAauoD,cAAe7nC,IAMtDh9B,EAAQqZ,UAAUjvB,iBAAmB,WAEjCnhB,KAAKwd,iBADS3hB,KAAM,aAAcwhB,SAAU,cAMhD0Z,EAAQqZ,UAAUzyB,eAAiB,WAE/B3d,KAAKwd,iBADS3hB,KAAM,WAAYwhB,SAAU,cAM9C0Z,EAAQqZ,UAAUyrD,KAAO,WACjB77F,KAAK+8E,gBAAmB/8E,KAAKwT,YAAc4C,qBAAmBsK,UAC9D1gB,KAAK+8E,eAAe8e,KAAK77F,OAMjC+2B,EAAQqZ,UAAU0rD,KAAO,WACjB97F,KAAK+8E,gBAAmB/8E,KAAKwT,YAAc4C,qBAAmBsK,UAC9D1gB,KAAK+8E,eAAe+e,KAAK97F,OAQjC+2B,EAAQqZ,UAAUhS,MAAQ,SAAUtJ,EAAQD,EAASh5B,GAC5Cg5B,IAEDA,GADAA,MACkBhP,OAAO7lB,KAAK0e,cAAc5E,MAAO9Z,KAAK0e,cAAcC,aAE1E3e,KAAK0X,eAAiB1X,KAAK0X,eAAiBC,gBAAcokF,aAC1D/7F,KAAKyd,eAAe2gB,MAAMvJ,EAASC,EAASj5B,GAAc,WAO9Dk7B,EAAQqZ,UAAUs7C,WAAa,SAAU52D,EAAQD,GACxCA,IAEDA,GADAA,MACkBhP,OAAO7lB,KAAK0e,cAAc5E,MAAO9Z,KAAK0e,cAAcC,aAE1E3e,KAAK0X,eAAiB1X,KAAK0X,eAAiBC,gBAAcokF,aAC1D/7F,KAAKyd,eAAeiuE,WAAW72D,EAASC,IAO5CiC,EAAQqZ,UAAU27C,SAAW,SAAUj3D,EAAQD,GACtCA,IAEDA,GADAA,MACkBhP,OAAO7lB,KAAK0e,cAAc5E,MAAO9Z,KAAK0e,cAAcC,aAE1E3e,KAAK0X,eAAiB1X,KAAK0X,eAAiBC,gBAAcokF,aAC1D/7F,KAAKyd,eAAesuE,SAASl3D,EAASC,IAO1CiC,EAAQqZ,UAAU65B,KAAO,SAAU4lB,EAAQmM,GACvCh8F,KAAKqiB,SAAS4nD,KAAK4lB,EAAQ,EAAG,EAAGmM,IAOrCjlE,EAAQqZ,UAAU6rD,OAAS,SAAUr1D,GACjC,IAAIipD,EAASjpD,EAAQ8pD,WAAa9pD,EAAQ8pD,WAAa,GACvDb,EAA0B,YAAjBjpD,EAAQ/qC,KAAqB,GAAK,EAAIg0F,GAAW,EAAIA,EAC9D7vF,KAAKqiB,SAAS4nD,KAAK4lB,EAAQ,EAAG,EAAGjpD,EAAQ8jC,aAO7C3zC,EAAQqZ,UAAUq8C,IAAM,SAAUp9D,EAAkBE,EAAgBysE,GAChEh8F,KAAKqiB,SAAS4nD,KAAK,EAAG56C,EAAkBE,EAAgBysE,IAK5DjlE,EAAQqZ,UAAU3D,MAAQ,WACtBzsC,KAAKqiB,SAAS4nD,KAAK,EAAIjqE,KAAKqiB,SAAS8N,aAAcnwB,KAAKqiB,SAASgN,kBAAmBrvB,KAAKqiB,SAASkN,gBAAkBv4B,EAAG,EAAGC,EAAG,KAGjI8/B,EAAQqZ,UAAUm1B,aAAe,SAAU22B,EAAWn8F,GAC9CA,GACAC,KAAKm8F,iBAAiBp8F,GAE1BC,KAAKsmD,QAAQjT,eAAa6oD,GAAYn8F,IAE1Cg3B,EAAQqZ,UAAU+rD,iBAAmB,SAAUp8F,GAC3C,IAAIH,EAAUG,EAAKH,QACfG,EAAKH,SAAWA,aAAmBoU,IAAapU,EAAQka,MAAMrjB,OAASmJ,EAAQ+e,WAAWloB,SAAW,IACrGsJ,EAAKH,QAAoC,IAAzBA,EAAQka,MAAMrjB,OAAgBmJ,EAAQka,MAAM,GAAKla,EAAQ+e,WAAW,KAO5FoY,EAAQqZ,UAAU1kB,IAAM,SAAUnxB,EAAKo8D,GACnC,IAAIx9C,EACJ,GAAI5e,EAAK,CAEL,IAAIwF,GACAH,QAFJrF,EAAM0iB,GAAY1iB,GAEAumF,MAAO9gF,KAAK0X,eAAgBge,MAAO,WAAY75B,KAAM,WAAYupE,QAAQ,GAE5E,WAAX7qE,EAAIsF,IACJG,KAAKulE,aAAalyB,eAAa+oD,iBAAkBr8F,GAErDC,KACK0X,eAAiB1X,KAAK0X,eAAiBC,gBAAcokF,aAC1DxhG,EAAIsF,GAAKtF,EAAIsF,IAAMua,KACnB,IAAI8gB,EAASl7B,KAAKo9E,YAClB,IAAKr9E,EAAKqlE,SAAWlqC,EAAO+8C,KAAM,CAQ9B,GAPI/8C,EAAOrG,QAAQvU,QAAQ/lB,EAAIsF,IAAM,IAAMq7B,EAAO+8C,OACzC/8C,EAAO0C,UACR1C,EAAO0C,SAAU,EACjB59B,KAAKswB,YAET4K,EAAOrG,QAAQ/9B,KAAKyD,EAAIsF,KAExBwe,GAAc9jB,KAASoZ,IACvBwF,EAAS,IAAIxF,GAAU3T,KAAM,aAAczF,GAAK,IACzC+iD,OAAS,MAChBt9C,KAAK2e,WAAW7nB,KAAKqiB,GACrBnZ,KAAK6Z,WAAWV,IACI,IAAhB5e,EAAIqjC,SACJ59B,KAAKunD,wBAAwBpuC,EAAO3K,QAAS2K,EAAQ5e,EAAIqjC,SAE7D59B,KAAKq8F,YAAYljF,OAEhB,CAOD,GANAA,EAAS,IAAIrE,GAAK9U,KAAM,QAASzF,GAAK,GACtC4e,EAAO0C,SAAWthB,EAAIshB,SACtB1C,EAAOutC,SAAWnsD,EAAImsD,SACtBvtC,EAAOmkC,OAAS,MAChBt9C,KAAK8Z,MAAMhjB,KAAKqiB,GAChBnZ,KAAK6Z,WAAWV,EAAQ+hB,OAAQjhC,EAAW08D,GACvC32D,KAAKgnD,WAAY,CACjB,GAAI7tC,EAAO/a,MAAMgb,aAAmD,IAApCD,EAAO/a,MAAMgb,YAAY3iB,OACrD,IAAK,IAAIoG,EAAK,EAAGohB,EAAKje,KAAKgnD,WAAWs1C,sBAAsBnjF,GAAStc,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvF,IAAI6wC,EAAQzvB,EAAGphB,GACfmD,KAAKu8F,eAAe7uD,EAAOxS,GAAQ,GAGvC/hB,EAAO/a,MAAM+oD,UAAYhuC,EAAO/a,MAAM+oD,SAASD,WAAWE,WAC1DjuC,EAAO/a,MAAM+oD,SAASD,WAAWE,UAAU3wD,QAC3CuJ,KAAKgnD,WAAWw1C,YAAYrjF,EAAQnZ,MAG5C,GAAImZ,EAAOutC,UAAY,GAAKnsD,EAAIshB,UAAY7b,KAAK4b,UAAUrhB,EAAIshB,WACf,kBAA5C7b,KAAK4b,UAAUrhB,EAAIshB,UAAUzd,MAAMvC,KAA0B,CAC7D,IAAIogB,EAAWjc,KAAK4b,UAAUrhB,EAAIshB,UAClCI,EAAS9J,SAAS5L,OAAO4S,EAAOutC,SAAU,EAAGvtC,EAAOtZ,IACpDoc,EAASzN,QAAQ2D,SAAS5L,OAAO4S,EAAOutC,SAAU,EAAGvtC,EAAO3K,SAC5DyN,EAASzN,QAAQ6Q,QAAQ,IAAIC,IAC7BrD,EAASzN,QAAQ+Q,QAAQtD,EAASzN,QAAQgR,aAC1Cxf,KAAKse,oBAAoBrC,IASjC,GANAlc,GACIH,QAASuZ,EAAQ2nE,MAAO9gF,KAAK0X,eAAgBge,MAAO,UAAW75B,KAAM,WAAYupE,QAAQ,GAE9E,WAAX7qE,EAAIsF,IACJG,KAAKulE,aAAalyB,eAAa+oD,iBAAkBr8F,KAE/CC,KAAK0X,eAAiBC,gBAAc+I,UAAe1gB,KAAK0X,eAAiBC,gBAAcgnE,OACvF3+E,KAAK0X,eAAiBC,gBAAc8kF,gBAAiB,CACvD,IAAIr/E,GACAvhB,KAAM,oBAAqB4sB,WAAY,SAAUnL,WAAYL,GAAY1iB,GACzEgjB,WAAYN,GAAY1iB,GAAM8iB,SAAU,YAE5Crd,KAAKwd,gBAAgBJ,GAEP,QAAdpd,KAAK4rB,OACL5rB,KAAK08F,eAAevjF,GACpBnZ,KAAKse,oBAAoBnF,GACrBA,EAAO/a,MAAM+oD,UAAYhuC,EAAO/a,MAAM+oD,SAASD,WAAWE,WAC1DjuC,EAAO/a,MAAM+oD,SAASD,WAAWE,UAAU3wD,QAC3CuJ,KAAK28F,gBAAgBxjF,GAEzBnZ,KAAK41F,mBAQjB,OAJA51F,KAAK82F,oBAAoBn/E,gBAAcokF,cACnC5iF,GAAUnZ,KAAKk7B,OAAOzkC,OAAS,GAC/BuJ,KAAK48F,SAASzjF,GAEXA,GAEX4d,EAAQqZ,UAAUssD,eAAiB,SAAUn8F,GACzC,GAAIA,EAAK4R,SACL,IAAK,IAAItV,EAAK,EAAGohB,EAAK1d,EAAK4R,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAIxG,EAAI4nB,EAAGphB,GACX,GAAImD,KAAK4b,UAAUvlB,IAAM2J,KAAK4b,UAAUvlB,GAAGwlB,SAAU,CACjD,IAAItN,EAAQuwB,GAAkBzoC,EAAI,gBAAiB2J,KAAKJ,QAAQC,IAChE0O,EAAM0Q,WAAW8f,YAAYxwB,MAM7CwoB,EAAQqZ,UAAUusD,gBAAkB,SAAUp8F,GAC1C,GAAIP,KAAKgnD,YAAczmD,GAAQA,EAAKnC,OAASmC,EAAKnC,MAAM+oD,UACpD5mD,EAAKnC,MAAM+oD,SAASD,WAAWE,WAC/B7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAAQ,CACjD,IAAI2wD,EAAY7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAC/CpnD,KAAK6hF,YAAYthF,EAAKV,IACtB,IAAK,IAAIhD,EAAK,EAAG4hF,EAAcr3B,EAAWvqD,EAAK4hF,EAAYhoF,OAAQoG,IAAM,CACrE,IAAIxG,EAAIooF,EAAY5hF,GACpBmD,KAAK6hF,YAAYxrF,GAGjB,IAAK,IAFDmvB,KAEK9uB,GADT8uB,EAAQA,EAAMK,OAAO7lB,KAAK4b,UAAUvlB,GAAGuvB,SAAU5lB,KAAK4b,UAAUvlB,GAAGsvB,UAChDlvB,OAAS,EAAGC,GAAK,EAAGA,IACnCsJ,KAAK6hF,YAAYr8D,EAAM9uB,IAG/B,IAAK,IAAIunB,EAAK,EAAG4+E,EAAcz1C,EAAWnpC,EAAK4+E,EAAYpmG,OAAQwnB,IAAM,CACjE5nB,EAAIwmG,EAAY5+E,GAChBje,KAAK4b,UAAUvlB,GAAG+H,MAAM+oD,SAASD,WAAWE,WAC5CpnD,KAAK4b,UAAUvlB,GAAG+H,MAAM+oD,SAASD,WAAWE,UAAU3wD,QACtDuJ,KAAK28F,gBAAgB38F,KAAK4b,UAAUvlB,UAK5C2J,KAAK6hF,YAAYthF,EAAKV,KAI9Bk3B,EAAQqZ,UAAUyxC,YAAc,SAAUl+C,GACtC,IAAIp1B,EAAQuwB,GAAkB6E,EAAS,gBAAiB3jC,KAAKJ,QAAQC,IACjEqgB,EAAS3R,EAAM0jB,cACnB1jB,EAAM0Q,WAAW8f,YAAYxwB,GAC7B2R,EAAO8e,YAAYzwB,IAOvBwoB,EAAQqZ,UAAUusC,kBAAoB,SAAU94D,EAAYtjB,GACxD,GAAIP,KAAKgnD,WAAY,CACjB,IAAIziD,EAAYvE,KAAKgnD,WAAW81C,cAAcv8F,EAAMsjB,EAAY7jB,MAGhE,GAFAA,KAAKu8F,eAAeh4F,EAAWvE,KAAKyd,eAAeu6D,eAAez3E,EAAKV,KAAK,GAC5EG,KAAKse,oBAAoB/d,KACnBP,KAAK0X,eAAiBC,gBAAc+I,UAAe1gB,KAAK0X,eAAiBC,gBAAcgnE,OAAQ,CACjG,IAAIvhE,GACAvhB,KAAM,oBAAqB4sB,WAAY,SAAUnL,WAAYL,GAAY4G,GACzEtG,WAAYN,GAAY4G,GAAaxG,SAAU,YAEnDrd,KAAKwd,gBAAgBJ,MAOjC2Z,EAAQqZ,UAAU2sD,qBAAuB,SAAUx4F,EAAWg8C,GAC1D,IAAIhgD,EACAilB,KAEJ,GADAjlB,EAAOggD,EAAWvgD,KAAK4b,UAAUrX,EAAU9C,UAAYzB,KAAK4b,UAAUrX,EAAU0iB,UAG5E,IAAK,IAAIvwB,GADT8uB,EAAQ+6B,EAAWhgD,EAAKqlB,SAAWrlB,EAAKolB,SACrBlvB,OAAS,EAAGC,GAAK,EAAGA,IAC/B8uB,EAAM9uB,KAAO6N,EAAU1E,IACvB2lB,EAAMjf,OAAO7P,EAAG,IAShCqgC,EAAQqZ,UAAU3jB,yBAA2B,SAAUlsB,GAInD,IAAK,IAHDgE,EACAihB,KAEK9uB,GADT8uB,EAAQA,EAAMK,OAAOtlB,EAAKqlB,SAAUrlB,EAAKolB,UACtBlvB,OAAS,EAAGC,GAAK,EAAGA,KACnC6N,EAAYvE,KAAK4b,UAAU4J,EAAM9uB,OAE7BsJ,KAAKwgF,eAAej8E,EAAU1E,IAAMod,GAAY1Y,GAChDvE,KAAK0sB,OAAOnoB,KAKxBwyB,EAAQqZ,UAAUtjB,uBAAyB,SAAUvyB,GACjD,GAAIA,EAAI4X,SACJ,IAAK,IAAIzb,EAAI,EAAGA,EAAI6D,EAAI4X,SAAS1b,OAAQC,IAAK,CAC1C,IAAIqW,EAAS/M,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IACrCqW,GACA/M,KAAK8sB,uBAAuB/f,GAIxC,IAAIm7B,EAAQloC,KAAKk7B,OAAO5a,QAAQtgB,KAAKyd,eAAeu6D,eAAez9E,EAAIsF,KAEnEm9F,EADUh9F,KAAKk7B,OAAOgN,GAAOrT,QACVvU,QAAQ/lB,EAAIsF,IAC/Bm9F,GAAY,IACRnuD,GAAW7uC,KAAMzF,IACjByF,KAAKmkE,SAAS5pE,GAElByF,KAAKk7B,OAAOgN,GAAOrT,QAAQtuB,OAAOy2F,EAAU,UACrCh9F,KAAKk7B,OAAOgN,GAAOwyC,YAAY16E,KAAK4b,UAAUrhB,EAAIsF,IAAIgrB,UAIrEkM,EAAQqZ,UAAU7vB,eAAiB,SAAU8L,GACzC,GAAkB,QAAdrsB,KAAK4rB,MAAiC,WAAd5rB,KAAK4rB,MAA+C,WAA1BS,EAAWjuB,MAAMvC,KAAoB,CACvF,IAAIohG,EAAkBn+D,GAAkBzS,EAAWxsB,GAAK,gBAAiBG,KAAKJ,QAAQC,IAClFo9F,GACAA,EAAgBh+E,WAAW8f,YAAYk+D,GAG/Cj9F,KAAK08E,sBAGL,IACK,IAFD98E,EADAuS,EAAWka,EAAW7d,QAAQ2D,SAGzBzb,EAAI,EAAGA,EAAIyb,EAAS1b,OAAQC,IAAK,CACtC,GAAIyb,EAASzb,aAAc8nC,IAA0BrsB,EAASzb,GAAK,IAAMyb,EAASzb,GAAK,GAAE4pB,QAAQ,gBAAkB,EAAI,CAC9GnO,EAASzb,GAAK,GAAE4pB,QAAQ,gBAAkB,GAAmB,QAAdtgB,KAAK4rB,QACrDhsB,EAAUk/B,GAAkB3sB,EAASzb,GAAGmJ,GAAK,sBAAuBG,KAAKJ,QAAQC,KACzEof,WAAW8f,YAAYn/B,IAC/BA,EAAUk/B,GAAkB3sB,EAASzb,GAAGmJ,GAAK,qBAAsBG,KAAKJ,QAAQC,KACxEof,WAAW8f,YAAYn/B,IAEnC,IAAK,IAAI/C,EAAK,EAAGohB,EAAKje,KAAK07B,MAAO7+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAIghC,EAAY5f,EAAGphB,GACnB8yB,GAAcxd,EAASzb,GAAGmJ,GAAK,gBAAiBg+B,SAGnD,GAAI1rB,EAASzb,aAAcgoC,GAC5B,IAAK,IAAIvD,EAAK,EAAGC,EAAKp7B,KAAK07B,MAAOP,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CAChD0C,EAAYzC,EAAGD,GACnBxL,GAAcxd,EAASzb,GAAGmJ,GAAK,gBAAiBg+B,GAGxDiC,GAAe3tB,EAASzb,GAAGmJ,MAGnCk3B,EAAQqZ,UAAU8sD,cAAgB,WAC9Bl9F,KAAK0sB,UAOTqK,EAAQqZ,UAAU1jB,OAAS,SAAUnyB,GACjC,IAAImkB,KACJA,EAAgBA,EAAcmH,OAAO7lB,KAAK0e,cAAc5E,MAAO9Z,KAAK0e,cAAcC,YAClF,IAAI5e,EACA0b,GAAc,EAClB,GAAIlhB,GAKA,IAJAA,EAAMyF,KAAK4b,UAAUrhB,EAAIsF,MACdtF,EAAI6D,OAA4B,aAAnB7D,EAAI6D,MAAMvC,MlDxM9C,SAA+BqD,EAAS3E,GACpC,IAEIgG,EACA7J,EACAL,EACAmtB,EACAjV,EACAwwE,EAPAjhE,EAAOvjB,EAAIiU,QAAQ2D,SAAS,GAAG2L,KAQnC,IAAKpnB,EAAI,EAAGA,EAAIonB,EAAKrnB,OAAQC,IACzB,IAAKL,EAAI,EAAGA,EAAIynB,EAAKpnB,GAAGqnB,MAAMtnB,OAAQJ,IAAK,CAEvC,IADAkY,EAAQoe,GAAgB7O,EAAKpnB,GAAGqnB,MAAM1nB,MACzBkY,EAAM4D,SACf,IAAKqR,EAAI,EAAGA,EAAIjV,EAAM4D,SAAS1b,OAAQ+sB,IAC/BjV,EAAM4D,SAASqR,GAAGrR,WAClB4sE,EAAa7/E,EAAQ0c,UAAUrN,EAAM4D,SAASqR,GAAG3jB,OAEzCk/E,EAAW3/D,OACXwN,GAAW1tB,EAAS6/E,IAGpB7/E,EAAQutB,yBAAyBsyD,GACjC7/E,EAAQwY,gBAAkBC,gBAAc8kF,eACxCv9F,EAAQwtB,OAAOqyD,GACf7/E,EAAQwY,iBAAmBC,gBAAc8kF,eACzCj5E,MAMhBjV,IACAhO,EAAOrB,EAAQ0c,UAAUrN,EAAM1O,MAE3B+sB,GAAW1tB,EAASqB,IkDuKxB48F,CAAen9F,KAAMzF,GAErBA,IrD7gDhB,SAA0BgG,GAQtB,OANIA,aAAgBoT,GACRpT,EAAKiT,YAAcI,uBAAqBwpF,OAGxC78F,EAAKiT,YAAcK,kBAAgBupF,OqDugD3BC,CAAU9iG,IAASyF,KAAK0X,eAAiBC,gBAAc2lF,SAC/Dv9F,GACIH,QAASrF,EAAKumF,MAAO9gF,KAAK0X,eAC1Bge,MAAO,WAAY75B,KAAM,UAAWupE,QAAQ,GAE1CplE,KAAK0X,eAAiBC,gBAAc2lF,OAAsB,WAAX/iG,EAAIsF,IACrDG,KAAKulE,aAAalyB,eAAa+oD,iBAAkBr8F,IAEhDA,EAAKqlE,QAAQ,CACd,GAAIplE,KAAKgnD,YACDhnD,KAAKgnD,WAAWy1B,0BAA0BliF,EAAKyF,MAE/C,YADAA,KAAK08E,sBAIb,KAAO18E,KAAK0X,eAAiBC,gBAAc+I,UAAgB1gB,KAAK0X,eAAiBC,gBAAc8kF,kBAC1FliG,aAAeua,IAAQva,aAAeoZ,KAAY,CACnD,IAAIyJ,GACAvhB,KAAM,oBAAqB4sB,WAAY,SAAUnL,WAAYL,GAAY1iB,GACzEgjB,WAAYN,GAAY1iB,GAAM8iB,SAAU,YAEtCrd,KAAK0X,eAAiBC,gBAAc2lF,OAClC5+E,EAAcjoB,OAAS,GAAKuJ,KAAK+8E,iBAAmB/8E,KAAKo6B,OAAOv+B,OAChEmE,KAAKupB,eAAepI,mBACpB1F,GAAc,GAGlBlhB,aAAeua,IACf9U,KAAKysB,yBAAyBlyB,GAE7BA,EAAI6kB,QAAW7kB,EAAI4pB,SACdnkB,KAAK0X,eAAiBC,gBAAc2lF,OAAWt9F,KAAKu9F,aAAahjG,IACnEyF,KAAKwd,gBAAgBJ,IAI7B7iB,EAAI4X,UAAa5X,EAAI6kB,QAAW7kB,EAAI4pB,SACpCnkB,KAAKw9F,YAAYjjG,GAEjBA,EAAIshB,WACJ7b,KAAKggB,YAAYzlB,GACbyF,KAAK4b,UAAUrhB,EAAIshB,WAAyD,kBAA5C7b,KAAK4b,UAAUrhB,EAAIshB,UAAUzd,MAAMvC,OACnEmE,KAAKse,oBAAoBte,KAAK4b,UAAUrhB,EAAIshB,WAC5C7b,KAAKwtD,qBAAqBxtD,KAAK4b,UAAUrhB,EAAIshB,aAGrD,IAAIiH,OAAQ,EACZ9iB,KAAK0X,eAAiB1X,KAAK0X,eAAiBC,gBAAcokF,aAC1D,IAAI1vE,EAAarsB,KAAK4b,UAAUrhB,EAAIsF,IACpC,GAAIwsB,aAAsBvX,GAAM,CAI5B,GAH8B,SAA1BuX,EAAWjuB,MAAMvC,MAAmBmE,KAAKgnD,YACzChnD,KAAKgnD,WAAWy2C,oBAAoBpxE,EAAYrsB,MAEhDqsB,EAAWjN,QAAUiN,EAAWlI,SAAqC,aAA1BkI,EAAWjuB,MAAMvC,KAAqB,EAC7EuwB,EAAgBC,EAAWjN,QAAUiN,EAAWlI,QAChDnkB,KAAK4b,UAAUyQ,EAAWxQ,UAAY7b,KAAK4b,UAAUyQ,EAAWxsB,KAC5C2O,QAAQ2D,SAAS,GACrCka,EAAWjN,OlDrN3C,SAA2BlgB,EAAS6gB,EAAMY,GACtC,IAAIviB,EAAQuiB,EAASviB,MACrB,GAA2B,IAAvBA,EAAM0hB,MAAMrpB,OACZyI,EAAQwtB,OAAO/L,OAEd,CACD,IAAI3pB,EAAI2pB,EAASnS,QAAQhN,OAAOxK,EAC5BC,EAAI0pB,EAASnS,QAAQhN,OAAOvK,EAC5B4rB,OAAM,EACNnsB,OAAI,EACJyvB,OAAO,EACP9vB,OAAI,EAEJ4qB,EAAON,EAASnS,QAAQ2D,SAAS,GACjC4S,EAAY8C,GAAclH,EAAUZ,GACpC/C,EAAUC,GAAY7e,EAAM0hB,MAAMiF,IAEtC,GADAoH,GAAoBjtB,EAASyhB,EAAUZ,KACjC7gB,EAAQwY,eAAiBC,gBAAc+I,UAAW,CACpD,IAAItD,GACAvhB,KAAM,wBAAyB4sB,WAAY,SAAUnL,WAAYN,EACjEO,WAAYN,GAAY8C,GAAO1C,SAAU,YAE7Cne,EAAQse,gBAAgBJ,GAG5B,GADAhf,EAAM0hB,MAAMvZ,OAAOwe,EAAW,GACJ,eAAtB3mB,EAAMiT,YAA8B,CAEpC,IADAwR,EAAM5B,EAAKnD,KAAKiC,EAAK5D,UAChBzlB,EAAI,EAAGA,EAAImsB,EAAI9E,MAAMtnB,OAAQC,IAE9B,IADAyvB,EAAOtD,EAAI9E,MAAMrnB,KACLyvB,EAAKhU,SAAS1b,OAAS,EAC/B,IAAKJ,EAAI,EAAGA,EAAI8vB,EAAKhU,SAAS1b,OAAQJ,IAElC02B,GAAe7tB,EADPinB,EAAKhU,SAAS9b,IAKlC4qB,EAAK0M,UAAU5N,EAAK5D,cAEnB,CAGD,IAFAwE,EAASpoB,WAA4B0B,IAAnB0mB,EAASpoB,MACvBooB,EAASpoB,MAAQ0oB,EAAKnD,KAAK,GAAGC,MAAMgC,EAAKzD,aAAa/P,WAAWhU,MAAQooB,EAASpoB,MACjF7B,EAAI,EAAGA,EAAIuqB,EAAKnD,KAAKrnB,OAAQC,IAE9B,IADAyvB,EAAOlF,EAAKnD,KAAKpnB,GAAGqnB,MAAMgC,EAAKzD,eACnB6J,EAAKhU,SAAS1b,OAAS,EAC/B,IAAKJ,EAAI,EAAGA,EAAI8vB,EAAKhU,SAAS1b,OAAQJ,IAElC02B,GAAe7tB,EADPinB,EAAKhU,SAAS9b,IAKlC4qB,EAAKuM,aAAazN,EAAKzD,aAE3BqE,EAASpoB,MAAQooB,EAASnS,QAAQjW,MAAQ0oB,EAAK1oB,MAC/CooB,EAASroB,OAASqoB,EAASnS,QAAQlW,OAAS2oB,EAAK3oB,OACjD8oB,GAA0BT,GAC1BqF,GAAgB9mB,EAASyhB,EAAUZ,EAAK5D,UACxCjd,EAAQwd,KAAKiE,EAAU3pB,EAAI2pB,EAASnS,QAAQhN,OAAOxK,EAAGC,EAAI0pB,EAASnS,QAAQhN,OAAOvK,GAClFiI,EAAQof,oBAAoBqC,IkD6JJ+8E,CAAW19F,KAAMqsB,EAAYD,GAExBC,EAAWlI,SAChB6I,GAAYhtB,KAAMqsB,EAAYD,IAIvB,KADftJ,EAAQ9iB,KAAK8Z,MAAMwG,QAAQ+L,MAEvBrsB,KAAK+0F,gBAAgBj+F,KAAKkJ,KAAK4b,UAAUyQ,EAAWxsB,KACpDG,KAAK8Z,MAAMvT,OAAOuc,EAAO,GACzB9iB,KAAK29F,gBAAgBtxE,SAKV,KADfvJ,EAAQ9iB,KAAK2e,WAAW2B,QAAQ+L,MAE5BrsB,KAAK+0F,gBAAgBj+F,KAAKkJ,KAAK4b,UAAUyQ,EAAWxsB,KACpDG,KAAK2e,WAAWpY,OAAOuc,EAAO,IAElC9iB,KAAKq8F,YAAYhwE,GACjBrsB,KAAK+8F,qBAAqBxiG,GAAK,GAC/ByF,KAAK+8F,qBAAqBxiG,GAAK,GAQnC,GANIkhB,GACAzb,KAAKupB,eAAe5L,iBAEpBkxB,GAAW7uC,KAAMqsB,IACjBrsB,KAAKmkE,SAAS93C,IAEbA,EAAWlI,QAAS,CAMrB,GALAnkB,KAAK8sB,uBAAuBvyB,GACxByF,KAAKkvC,uBACLlvC,KAAKkvC,qBAAqB1gC,aAAUvU,UAEjC+F,KAAK4b,UAAUrhB,EAAIsF,IACtB6e,EAAcjoB,OAAS,GAAKioB,EAAc,GAAG7e,KAAOwsB,EAAWxsB,IAAMwsB,EAAWxQ,SAAU,CAC1F,IAAI+hF,EAAa59F,KAAK4b,UAAUyQ,EAAWxQ,UAC3C,GAAI+hF,GAAcA,EAAWx+E,QAA6D,aAAnDpf,KAAK4b,UAAUgiF,EAAW/hF,UAAUzd,MAAMvC,KAAqB,CAClG,IAAIuwB,EACJD,GAAoBnsB,KADhBosB,EAAepsB,KAAK4b,UAAUgiF,EAAW/hF,UACL+hF,EAAYvxE,IAG5DrsB,KAAKugB,eAAe8L,GACpBrsB,KAAK41F,iBACa,QAAd51F,KAAK4rB,MACL5rB,KAAK6rB,sBAEH7rB,KAAK0X,eAAiBC,gBAAc2lF,QACtCt9F,KAAK6sB,gBAAgBR,GACrBtsB,GACIH,QAASrF,EAAKumF,MAAO9gF,KAAK0X,eAC1Bge,MAAO,UAAW75B,KAAM,UAAWupE,QAAQ,GAEhC,WAAX7qE,EAAIsF,IACJG,KAAKulE,aAAalyB,eAAa+oD,iBAAkBr8F,GAErDC,KAAK+4E,oBAMpB,GAAIr6D,EAAcjoB,OAAS,EAAG,CAC3BuJ,KAAK+8E,iBACL/8E,KAAKupB,eAAepI,mBACpB1F,GAAc,GAElB,IAAK,IAAI/kB,EAAI,EAAGA,EAAIgoB,EAAcjoB,OAAQC,IAAK,CAChCgoB,EAAchoB,GACzB,GAAIsJ,KAAK4b,UAAU8C,EAAchoB,GAAGmJ,IAAK,CACrC,GAAK6e,EAAchoB,aAAcid,IAAc3T,KAAKgnD,YAChDhnD,KAAKgnD,WAAW6xB,yBAAyBv4D,QAAQ5B,EAAchoB,KAAO,EAEtE,YADAsJ,KAAK0sB,OAAO1sB,KAAK4b,UAAU8C,EAAchoB,GAAGuwB,WAGhDjnB,KAAK0sB,OAAOhO,EAAchoB,KAG9B+kB,GACAzb,KAAKupB,eAAe5L,iBAExB3d,KAAKkd,mBAIb6Z,EAAQqZ,UAAUmtD,aAAe,SAAUhjG,GACvC,IAAIsjG,EACA39E,EAASlgB,KAAK4b,UAAUrhB,EAAIshB,UAChC,GAAIthB,GAAOA,EAAIshB,UAAYqE,EAAOtH,WACH,UAA1BsH,EAAOtH,UAAU/c,MAC8B,kBAA5CmE,KAAK4b,UAAUrhB,EAAIshB,UAAUzd,MAAMvC,KAA2B,CAClEgiG,GAAU,EACV,IAIIzgF,GACAvhB,KAAM,4BAA6B0hB,YAC/BmF,iBAAazoB,EAAWsI,OAAQhI,EAChCyI,YAAQ/I,EAAWwoB,iBAAaxoB,GAEpCqjB,YARAoF,YAAaxC,EAAO1R,QAAQ2D,SAASmO,QAAQ/lB,EAAIiU,SAAUjM,OAAQhI,EACnEyI,YAAQ/I,EAAWwoB,iBAAaxoB,GAQhCojB,SAAU,YAERrd,KAAK0X,eAAiBC,gBAAc+I,UACtC1gB,KAAKwd,gBAAgBJ,GAG7B,OAAOygF,GAGX9mE,EAAQqZ,UAAUpwB,YAAc,SAAUzf,EAAM0e,GAC5C,IAAIpf,EAQJ,GAPAof,EAAaA,EAAajf,KAAK4b,UAAUqD,EAAWpf,IAAMG,KAAK4b,UAAUrb,EAAKsb,UAE1Ehc,EADgB,iBAATU,EACFA,EAGAA,EAAKV,GAEVof,GAAcA,EAAW9M,SAAU,CACnC,IAAK,IAAIzb,EAAI,EAAGA,EAAIuoB,EAAW9M,SAAS1b,OAAQC,IAC5C,GAAIuoB,EAAW9M,SAASzb,KAAOmJ,EAAI,CAC/Bof,EAAW9M,SAAS5L,OAAO7P,EAAG,GAC9B,IAAK,IAAIL,EAAI,EAAGA,EAAI4oB,EAAWzQ,QAAQ2D,SAAS1b,OAAQJ,IAChD4oB,EAAWzQ,QAAQ2D,SAAS9b,GAAGwJ,KAAOA,GACtCof,EAAWzQ,QAAQ2D,SAAS5L,OAAOlQ,EAAG,GAKtD4oB,EAAWzQ,QAAQ6Q,QAAQ,IAAIC,IAC/BL,EAAWzQ,QAAQ+Q,QAAQN,EAAWzQ,QAAQgR,eAItDuX,EAAQqZ,UAAU5vB,SAAW,SAAUjgB,EAAMgO,EAAOuU,GAChD,IAAIjjB,EACAof,EAAajf,KAAK4b,UAAUrb,EAAKV,IAIrC,GAHKof,EAAW9M,WACZ8M,EAAW9M,aAEX8M,EAAW9M,WACU,iBAAV5D,EACHvO,KAAK4b,UAAUrN,KACf1O,EAAK0O,IAIT1O,EAAK0O,EAAM1O,GAAK0O,EAAM1O,IAAMua,KAC5Bpa,KAAK0rB,IAAInd,IAET1O,KAAQ0O,EAAMm4C,WAAgC,IAApBn4C,EAAMm4C,WAAkB,CAClD,IAAI9kC,EAAY5hB,KAAK4b,UAAU/b,GAC/B+hB,EAAU/F,SAAWoD,EAAWpf,GAC5Bof,EAAWrG,WAA2C,UAA9BqG,EAAWrG,UAAU/c,MAC7CmE,KAAK89F,oBAAoB7+E,EAAY2C,GAErCkB,GACA7D,EAAW9M,SAAS5L,OAAOuc,EAAO,EAAGjjB,GACrCof,EAAWzQ,QAAQ2D,SAAS5L,OAAOuc,EAAO,EAAGlB,EAAUpT,WAGvDyQ,EAAW9M,SAASrb,KAAK+I,GACzBof,EAAWzQ,QAAQ2D,SAASrb,KAAK8qB,EAAUpT,UAE/CyQ,EAAWzQ,QAAQ6Q,QAAQ,IAAIC,IAC/BL,EAAWzQ,QAAQ+Q,QAAQN,EAAWzQ,QAAQgR,kBACjBvlB,IAAzBglB,EAAWrG,YACXgJ,EAAU7lB,QAAU6lB,EAAUpT,QAAQzS,QACtC6lB,EAAU5lB,QAAU4lB,EAAUpT,QAAQxS,WAErCijB,EAAWpD,UACX7b,KAAK4b,UAAUqD,EAAWpD,WAC4B,aAAnD7b,KAAK4b,UAAUqD,EAAWpD,UAAUzd,MAAMvC,OAC9CmE,KAAKse,oBAAoBW,KAQzC8X,EAAQqZ,UAAU7W,MAAQ,WACtBv5B,KAAKm1F,gBAETp+D,EAAQqZ,UAAU+kD,aAAe,SAAU7+F,GACvC,IAAIu+B,KAMAA,EALCv+B,IACDu+B,EAAUA,EAAQhP,OAAO7lB,KAAK8Z,QACZ+L,OAAO7lB,KAAK2e,YAKlC3e,KAAK0X,eAAiB1X,KAAK0X,eAAiBC,gBAAc2lF,MAC1D,IAAK,IAAIzgG,EAAK,EAAGihF,EAAYjpD,EAASh4B,EAAKihF,EAAUrnF,OAAQoG,IAAM,CAC/D,IAAItC,EAAMujF,EAAUjhF,GAChBmD,KAAK4b,UAAUrhB,EAAIsF,KACnBG,KAAK0sB,OAAOnyB,GAGpByF,KAAK0X,eAAiB1X,KAAK0X,gBAAkBC,gBAAc2lF,MAC3Dt9F,KAAK85E,cAAgB,IAAIsZ,GAAcpzF,KAAK4b,WAC5C5b,KAAK84F,eAET/hE,EAAQqZ,UAAU2tD,gBAAkB,WAChC,IAAIr8E,EACAnhB,EAAQP,KAAK0e,cAAc5E,MAAM,GAAM9Z,KAAK0e,cAAc5E,MAAM,QAAK7f,EACzE,GAAIsG,GAAQA,aAAgBuU,GACxB,GAAIvU,EAAK6e,QAAU7e,EAAKsb,SAKpB,IAAK,IAJD6D,EAAW1f,KAAK4b,UAAUrb,EAAKsb,UAC/BiE,EAAQJ,EAASthB,MAAM0hB,MACvBH,EAAYpf,EAAKV,GAAG+f,MAAMF,EAAS7f,GAAGpJ,QACtCgqB,EAAkBd,EAASznB,UAAU,EAAGynB,EAASlpB,OAAS,GACrDC,EAAI,EAAGA,EAAIopB,EAAMrpB,OAAQC,IAC1B6J,EAAK6e,QAAUqB,IAAoBX,EAAMppB,GAAGmJ,KAC5C6hB,EAAa1hB,KAAK4b,UAAUkE,EAAMppB,GAAGqsB,OAAOljB,UAInD,GAAwB,aAApBU,EAAKnC,MAAMvC,MAAuB0E,EAAKnC,MAAM2kB,QAAUxiB,EAAKnC,MAAM4kB,UAAW,CAClF,IAAInjB,EAAKU,EAAKiO,QAAQ2D,SAAS,GAAG2L,KAAK,GAAGC,MAAM,GAAG5L,SAAS,GAAGtS,GAC/D6hB,EAAa1hB,KAAK4b,UAAU/b,GAGpCG,KAAK+1E,cAAcr0D,IAOvBqV,EAAQqZ,UAAU2lC,cAAgB,SAAUx1E,EAAMV,GAC9C,IAAK8W,GAAW3W,OAASsW,GAAgBtW,MAAO,CAC5CA,KAAKuyE,aAAc,EACnB,IAAI1sE,EAAY7F,KAAKqiB,SAASxc,UAC1B8W,EAAQtF,GAAgBrX,MAAQ6F,EAAU8W,MAAQ,EAElDlC,OAAO,EACPjZ,OAAS,EAETxK,OAAI,EACJC,OAAI,EACJqhF,OAAc,EAIlB,GAHK/3E,IACDA,EAAQP,KAAK0e,cAAc5E,MAAM,GAAM9Z,KAAK0e,cAAc5E,MAAM,GAAK9Z,KAAK0e,cAAcC,WAAW,IAEnGpe,EAAM,CACFA,EAAKnC,OAA6B,kBAApBmC,EAAKnC,MAAMvC,OACzB0E,EAAOP,KAAK4b,UAAUrb,EAAK4R,SAAS,KAExC,IAAI6rF,GAAiB,EAyBrB,GAxBIh+F,KAAKgnD,aACLsxB,EAAct4E,KAAKgnD,WAAWi3C,yBAAyB19F,EAAMV,MAEzDU,EAAOP,KAAK4b,UAAUrb,EAAKV,GAAGkP,MAAM,oBAAoB,KAG3DupE,EAgBD0lB,GAAiB,GAfO,SAApBz9F,EAAKnC,MAAMvC,MAA+C,IAA5B0E,EAAK6Y,YAAY3iB,SACzC8J,EAAKiT,YAAcK,kBAAgB6F,WACrC1Z,KAAK81E,YAAY+e,SAAU,EAC3B70F,KAAKmhB,mBACLnhB,KAAKk+F,UAAU39F,IAASV,GAAIua,KAAYna,QAAS,SAGpDJ,IAA4B,SAApBU,EAAKnC,MAAMvC,MAAmB0E,EAAK6Y,YAAY3iB,OAAS,GAA2B,SAApB8J,EAAKnC,MAAMvC,QACnFgE,EAA0B,SAApBU,EAAKnC,MAAMvC,KAAoB0E,EAAKiO,QAAQ2D,SAAS,GAAK,GAAEpD,MAAM,KAAK,GAAKxO,EAAK6Y,YAAY,GAAGvZ,IAEtGA,IACAy4E,EAAct4E,KAAKmiD,WAAW5hD,EAAKiO,QAAS3O,KAMhDU,GAAQ+3E,KAAiBA,aAAuB55C,OrD5oDpE,SAA+B7a,EAAYtjB,GACvC,IAAI49F,EAAY,EAEhB,OADAA,EAAa59F,aAAgBoT,GAAaC,uBAAqB8F,SAAW7F,kBAAgB6F,SAClE,SAApBnZ,EAAKnC,MAAMvC,KACJ0E,EAAKiT,YAAcK,kBAAgB6F,SAErCnZ,EAAKiT,YAAc2qF,EACpBt6E,EAAWrQ,YAAcC,wBAAsB6kC,gBACxC,EAGA,EAGNz0B,EAAWrQ,YAAcC,wBAAsBiG,SAC7C,EAEJ,EqD4nDW0kF,CAAe9lB,EAAa/3E,IAASy9F,GAAiB,CACxD,IAAI99F,EAASo4E,EAAiB,MAC1Bp/D,OAAW,EAEfA,EA5CO,IA2CPA,EAAWo/D,EAAY92E,OAAOjJ,MAAQgI,EAAKiO,QAAQhN,OAAOjJ,MAAQ+/E,EAAY92E,OAAOjJ,MAAQgI,EAAKiO,QAAQhN,OAAOjJ,OA3C1G,GA4CqC2gB,EAC5C,IAAIq5D,EAAcvkD,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,mBACxDw+F,EAAWrwE,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,YACzD4a,EAAO4jF,EAAWA,EAAS14F,MAAQ2yE,EAAYr4E,QAC1CsyE,GAAgB8rB,IACjB9rB,EAAcjkD,GAAkB,UAChC+vE,EAAW/vE,GAAkB,eAC7BtuB,KAAKyvE,cAAczwC,YAAYuzC,GAC/BA,EAAYvzC,YAAYq/D,GACxBA,EAASr/D,YAAYhR,SAAS4c,eAAenwB,MAEjDjZ,EAASwkC,GAAgBsyC,EAAYp4E,MAAOua,OAAMxgB,OAAWA,EAAWif,IAC7Dm3B,YAEH7uC,EADoB,SAApBjB,EAAKnC,MAAMvC,KACF,IAAIyjB,GAAKsiB,GAAerhC,EAAO+3E,EAAc,GAAEvpE,MAAMxO,EAAKV,GAAK,KAAK,IAAItH,OAAS,GAAI+/E,EAAYp4E,MAAMqZ,UAGvG,IAAI+F,GAAM/e,EAAKhI,MAAQ,GAAM,GAAKgI,EAAKhI,MAAO+/E,EAAYp4E,MAAMqZ,WAG7EhZ,EAAKsb,UAAyD,kBAA7C7b,KAAK4b,UAAUrb,EAAKsb,UAAUzd,MAAMvC,MACrD2F,EAAOjJ,MAAQgI,EAAKiO,QAAQhN,OAAOjJ,MAAQ,GAC3CvB,GAAQuJ,EAAKiO,QAAQhN,OAAOP,OAAOjK,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MAAUnb,EAAOjJ,MAAQ,EAAKokB,EAAS,IACxG1lB,GAAQsJ,EAAKiO,QAAQhN,OAAOP,OAAOhK,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,MAAUnb,EAAOlJ,OAAS,EAAKqkB,EAAS,EACzG27D,EAAYp4E,MAAMu8B,UAAY,SAG9Bj7B,EAAOjJ,MAAQkE,KAAKmJ,IAAIpE,EAAOjJ,MAAO,IACtCvB,GAAQshF,EAAY92E,OAAOP,OAAOjK,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MAAUnb,EAAOjJ,MAAQ,EAAKokB,EAAS,IACvG1lB,GAAQqhF,EAAY92E,OAAOP,OAAOhK,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,MAAUnb,EAAOlJ,OAAS,EAAKqkB,EAAS,GAO5GssB,GAAiBspC,GAJb1yE,GAAMG,KAAKJ,QAAQC,GAAK,kBAAmBK,MAAS,2BAAkClJ,EAAI,UACtFC,EAAI,aAAgBuK,EAAOjJ,MAAQ,GAAKokB,EAAS,aAAgBnb,EAAOlJ,OAASqkB,EACjF,qBAAuBpc,EAAKV,GAAK,MAUzCopC,GAAiBo1D,GANbx+F,GAAMG,KAAKJ,QAAQC,GAAK,WAAYK,MAAS,UAAasB,EAAOjJ,MAAQ,GAAKokB,EAC1E,aAAgBnb,EAAOlJ,OAASqkB,EAAS,+DACvBzc,EAAMq8B,WACxB,cAAiBr8B,EAAMqZ,SAAWoD,EAAS,iBAC1C27D,EAAYp4E,MAAMu8B,UAAU6hE,oBAAuB,IAAK7lF,MAAS,wBAG1E4lF,EAASn+F,MAAM+lC,WAAc/lC,EAAU,KAAI,OAAS,GACpDm+F,EAASn+F,MAAMgmC,UAAahmC,EAAY,OAAI,SAAW,GACvDm+F,EAASn+F,MAAMq+F,YAA+B,IAAjBr+F,EAAMqZ,SAAiB,OAAOjb,WAC3D+/F,EAASn+F,MAAMy8B,eAAkBz8B,EAAoB,eAAIA,EAAMy8B,eAAiB,GAChF38B,KAAK81E,YAAYj6D,SAAWtb,EAAKV,GACjCG,KAAK81E,YAAYj2E,GAAKA,EACtBy4E,EAAY16C,SAAU,EACtB59B,KAAKse,oBAAoB/d,GACzBP,KAAK0X,eAAiB1X,KAAK0X,eAAiBC,gBAAc+3D,SACrD1vE,KAAK61E,iBACN4kB,eAAa/uE,IAAI2yE,EAAU,QAASr+F,KAAKq6E,aAAajC,YAAap4E,KAAKq6E,cACxEogB,eAAa/uE,IAAI2yE,EAAU,WAAYr+F,KAAKw+F,aAAcx+F,MAC1Dq+F,EAASxhF,cAM7Bka,EAAQqZ,UAAUquD,iBAAmB,SAAUl+F,EAAMohC,GACjD,IAAK,IAAIjrC,EAAI,EAAGA,EAAI6J,EAAKqlB,SAASnvB,OAAQC,IAAK,CAC3C,IAAI6N,EAAYvE,KAAK4b,UAAUrb,EAAKqlB,SAASlvB,IACzCsM,EAAShD,KAAK4b,UAAUrX,EAAU0iB,UACtC1iB,EAAUq5B,QAAU+D,EACfA,IACD3hC,KAAKunD,wBAAwBhjD,EAAUiK,QAASjK,GAAW,GAC3DvB,EAAOglD,WAAarmB,GAExB3hC,KAAKy+F,iBAAiBz7F,EAAQA,EAAOglD,YACrChlD,EAAO46B,QAAU+D,EACZA,GACD3hC,KAAKunD,wBAAwBvkD,EAAOwL,QAASxL,GAAQ,KAIjE+zB,EAAQqZ,UAAUsuD,0BAA4B,SAAUn6F,GACpD,GAAIA,EAAU6U,YAAY3iB,OAEtB,IAAK,IADDkoG,OAAoB,EACf9hG,EAAK,EAAGohB,EAAK1Z,EAAU6U,YAAavc,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC/D,IAAIgnB,EAAa5F,EAAGphB,GACpB8hG,EAAoB3+F,KAAKmiD,WAAW59C,EAAUiK,QAASqV,EAAWhkB,IAClE0E,EAAUu7C,iBAAiBj8B,EAAYtf,EAAU8tB,mBAAoB9tB,EAAUiK,QAAQhN,OAAQm9F,EAAoB3+F,KAAK0X,eAAiBC,gBAAc+7D,cAG/JnvE,EAAUiK,QAAQ6Q,QAAQ,IAAIC,GAAK/a,EAAUiK,QAAQjW,MAAOgM,EAAUiK,QAAQlW,SAC9EiM,EAAUiK,QAAQ+Q,QAAQhb,EAAUiK,QAAQgR,cAKhDuX,EAAQqZ,UAAUk6C,SAAW,WACzB,IACIlwD,EADA5uB,GAAS,EAETozF,EAAa5+F,KAAKi3F,oBACtBj3F,KAAK2b,uBAAsB,GAC3B,IAAIkjF,GAAa7nG,EAAGgJ,KAAKqiB,SAASyN,cAAe74B,EAAG+I,KAAKqiB,SAASwN,gBA2BlE,GA1BI7vB,KAAKoqF,2BACLhwD,EAASp6B,KAAKoqF,0BAA0B0U,aAAa9+F,KAAK8Z,MAAO9Z,KAAK4b,UAAW5b,KAAKo6B,OAAQykE,EAAU7+F,KAAKy5B,mBAAmB55B,GAAIG,KAAK0X,gBACzIlM,GAAS,EACLxL,KAAK+6E,qBAAuB3gD,EAAO2kE,WAAa/+F,KAAK0X,gBACrD1X,KAAKy+F,iBAAiBrkE,EAAO2kE,SAAU3kE,EAAO2kE,SAAS/2C,aAGtDhoD,KAAKg/F,oBACVh/F,KAAKg/F,mBAAmBF,aAAa9+F,KAAK8Z,MAAO9Z,KAAK4b,UAAW5b,KAAKo6B,OAAQykE,EAAU7+F,KAAKy5B,mBAAmB55B,GAAIG,KAAKy5B,mBAAmBwlE,MAC5IzzF,GAAS,GAEJxL,KAAKk/F,kBACVl/F,KAAKk/F,iBAAiBJ,aAAa9+F,KAAK8Z,MAAO9Z,KAAK4b,UAAW5b,KAAKo6B,OAAQykE,GAC5ErzF,GAAS,GAEJxL,KAAKm/F,yBACVn/F,KAAKm/F,wBAAwBC,aAAep/F,KAAKo6B,OAAOglE,aACxDp/F,KAAKm/F,wBAAwBE,aAAer/F,KAAKo6B,OAAOilE,aACxDr/F,KAAKm/F,wBAAwBG,aAAet/F,KAAKo6B,OAAOklE,aACxDt/F,KAAKm/F,wBAAwBL,aAAa9+F,KAAK8Z,MAAO9Z,KAAK2e,WAAY3e,KAAKm/F,wBAAyBn/F,KAAK4b,UAAW5b,KAAKo6B,OAAQykE,GAClIrzF,GAAS,GAEJxL,KAAKu/F,gCACVv/F,KAAKu/F,8BAA8BjV,SAAStqF,KAAK8Z,MAAO9Z,KAAK4b,UAAW5b,KAAKo6B,OAAQykE,GACrFrzF,GAAS,GAETA,EAAQ,CACRxL,KAAKwhF,eAAgB,EAErB,IAAK,IADD7iE,KACK9hB,EAAK,EAAGohB,EAAKje,KAAK8Z,MAAOjd,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IACI0D,EADM0d,EAAGphB,GAYb,GAVKmD,KAAK4pF,oBAAwB5pF,KAAK0X,gBAAoB1X,KAAK0X,eAAiBC,gBAAckyE,qBAC3F7pF,KAAKw/F,WAAWj/F,GAChBP,KAAKy/F,yBAAyBl/F,IAElCP,KAAK4pF,oBAAqB,EAC1B5pF,KAAKmf,mBAAmB5e,MAAYxE,QAASwE,EAAKxE,QAASC,QAASuE,EAAKvE,UAAW,GACpFgE,KAAK4pF,oBAAqB,EAC1BrpF,EAAKiO,QAAQ6Q,QAAQ,IAAIC,GAAK/e,EAAKiO,QAAQjW,MAAOgI,EAAKiO,QAAQlW,SAC/DiI,EAAKiO,QAAQ+Q,QAAQhf,EAAKiO,QAAQgR,aAClCxf,KAAKse,oBAAoB/d,GAAM,GAC3BA,EAAKolB,QAAQlvB,OAAS,EACtB,IAAK,IAAIJ,EAAI,EAAGA,EAAIkK,EAAKolB,QAAQlvB,OAAQJ,IAAK,CAE1CsoB,GADIpa,EAAYvE,KAAK4b,UAAUrb,EAAKolB,QAAQtvB,KACvBwJ,IAAM0E,EAGnC,GAAIhE,EAAKqlB,SAASnvB,OAAS,EACvB,IAAK,IAAI+sB,EAAI,EAAGA,EAAIjjB,EAAKqlB,SAASnvB,OAAQ+sB,IAAK,CAC3C,IAAIy4D,EAAaj8E,KAAK4b,UAAUrb,EAAKqlB,SAASpC,IAC9C7E,EAAWs9D,EAAWp8E,IAAMo8E,GAIxC,IAAK,IAAI9gD,EAAK,EAAGC,EAAKld,OAAOC,KAAKQ,GAAawc,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACjE,IACI52B,EAEJ47B,GAFI57B,EAAYoa,EADLyc,EAAGD,IAEDn7B,KAAK6M,UAAUtI,IAE5BA,EAAUiK,QAAQ6Q,QAAQ,IAAIC,QAAKrlB,OAAWA,IAC9CsK,EAAUiK,QAAQ+Q,QAAQhb,EAAUiK,QAAQgR,aAC5Cxf,KAAK0+F,0BAA0Bn6F,GAC/BvE,KAAK4zF,WAAWrvF,GAChBvE,KAAKse,oBAAoB/Z,GAAW,GAExCvE,KAAKwhF,eAAgB,EACrBxhF,KAAK+1F,aACE/1F,KAAK0X,eAAiBC,gBAAcwhF,QAA0B,WAAdn5F,KAAK4rB,MACxD5rB,KAAK6rB,sBAMb,OAHK+yE,GACD5+F,KAAK2b,sBAAsBijF,GAExBxkE,GAKXrD,EAAQqZ,UAAUsvD,YAAc,WAC5B,OAAOxpE,GAAUl2B,OAMrB+2B,EAAQqZ,UAAUuvD,YAAc,SAAUvpG,GACtC,OAAOkjC,GAAYljC,EAAM4J,OAM7B+2B,EAAQqZ,UAAUwvD,kBAAoB,SAAUC,GAC5C,GAAI7/F,KAAK8/F,qBAAsB,CAE3B,OADW9/F,KAAK8/F,qBAAqBF,kBAAkBC,GAG3D,MAAO,IAOX9oE,EAAQqZ,UAAU2vD,YAAc,SAAU1tC,EAAOzrB,GACzC5mC,KAAK8/F,sBACL9/F,KAAK8/F,qBAAqBE,aAAa3tC,EAAOzrB,IAQtD7P,EAAQqZ,UAAU6vD,WAAa,SAAU5tC,EAAOzrB,GACxC5mC,KAAK8/F,uBACLl5D,EAAQs5D,cAAe,EACvBlgG,KAAK8/F,qBAAqBE,aAAa3tC,EAAOzrB,KAOtD7P,EAAQqZ,UAAU+vD,cAAgB,SAAUC,GACpCpgG,KAAK+8E,gBAAkBqjB,IACvBpgG,KAAKupB,eAAe62E,WAAaA,EACjCpgG,KAAK+8E,eAAesjB,WAAWrgG,KAAKupB,eAAeC,aAAc42E,EAAYpgG,MAAM,KAM3F+2B,EAAQqZ,UAAUkwD,aAAe,WACzBtgG,KAAK+8E,gBACL/8E,KAAK+8E,eAAeujB,aAAatgG,OAMzC+2B,EAAQqZ,UAAUmwD,iBAAmB,WACjC,GAAIvgG,KAAK8/F,qBAAsB,CAC3B,IAAIt+F,EAASxB,KAAK8/F,qBAAqBS,iBAAiB,OAOxD,OANA/+F,EAAOjJ,MAAQiJ,EAAOjJ,MAAQyH,KAAKi7B,eAAenL,cAC9CtuB,EAAOjJ,OAASiJ,EAAOxK,EAAI,EAAIwK,EAAOxK,EAAI,GAAKgJ,KAAKi7B,eAAenL,cACvEtuB,EAAOlJ,OAASkJ,EAAOlJ,OAAS0H,KAAKi7B,eAAepL,eAChDruB,EAAOlJ,QAAUkJ,EAAOvK,EAAI,EAAIuK,EAAOvK,EAAI,GAAK+I,KAAKi7B,eAAepL,eACxEruB,EAAOxK,EAAIwK,EAAOxK,EAAI,EAAI,EAAIwK,EAAOxK,EACrCwK,EAAOvK,EAAIuK,EAAOvK,EAAI,EAAI,EAAIuK,EAAOvK,EAC9BuK,EAEX,OAAO,IAAI8K,IAMfyqB,EAAQqZ,UAAUowD,cAAgB,SAAU55D,GACxC,GAAI5mC,KAAK8/F,qBAAsB,CAE3B,OADW9/F,KAAK8/F,qBAAqBU,cAAc55D,GAGvD,MAAO,IAMX7P,EAAQqZ,UAAUqwD,MAAQ,SAAU75D,GAC5B5mC,KAAK8/F,sBACL9/F,KAAK8/F,qBAAqBW,MAAM75D,IAMxC7P,EAAQqZ,UAAUswD,SAAW,SAAUnmG,EAAKwhC,GACxC/7B,KAAK2b,uBAAsB,GAC3B,IAAIxC,EACA4iB,EAAMtlC,OAAS,GACfuJ,KAAKmhB,mBAET,IAAK,IAAIzqB,EAAI,EAAGA,EAAIqlC,EAAMtlC,OAAQC,IAAK,CAGnC,GAFAyiB,EAAS,IAAIye,GAAUr9B,EAAK,QAASwhC,EAAMrlC,IAAI,GAC/C6D,EAAIwhC,MAAMjlC,KAAKqiB,GACX5e,EAAI4X,SAAU,CACd,IAAIyG,EAAYre,EAAIiU,QACpBjU,EAAIktD,UAAUznD,KAAK65B,eAAgBt/B,EAAIiU,QAAQ2D,SAASyG,EAAUzG,SAAS1b,OAAS,QAEnF,CACY8D,EAAIiU,QACV2D,SAASrb,KAAKyD,EAAIotD,gBAAgBptD,EAAIwhC,MAAMxhC,EAAIwhC,MAAMtlC,OAAS,KAE1E,KAAMuJ,KAAK0X,eAAiBC,gBAAc+I,UAAe1gB,KAAK0X,eAAiBC,gBAAcgnE,OAAQ,CACjG,IAAIvhE,GACAvhB,KAAM,wBAAyB4sB,WAAY,SAAUnL,WAAYL,GAAY9D,GAC7EoE,WAAYN,GAAY1iB,GAAM8iB,SAAU,YAE5Crd,KAAKwd,gBAAgBJ,IAGzB2e,EAAMtlC,OAAS,GACfuJ,KAAK2d,iBAETpjB,EAAIiU,QAAQ6Q,QAAQ,IAAIC,GAAK/kB,EAAIhC,MAAOgC,EAAIjC,SAC5CiC,EAAIiU,QAAQ+Q,QAAQhlB,EAAIiU,QAAQgR,aAChCxf,KAAKse,oBAAoB/jB,GACzByF,KAAK2b,uBAAsB,IAK/Bob,EAAQqZ,UAAU0mC,eAAiB,SAAU6pB,EAAiBC,GAC1D,OAAOD,EAAkBC,GAK7B7pE,EAAQqZ,UAAU8jC,kBAAoB,SAAUysB,EAAiBC,GAC7D,OAAOD,GAAmBC,GAK9B7pE,EAAQqZ,UAAU8tD,UAAY,SAAU3jG,EAAKsmG,GACzC7gG,KAAK2b,uBAAsB,GAC3B,IACIxC,EADAsI,EAASlnB,EAAIiU,QAEbqyF,EAAOpqG,OAAS,GAChBuJ,KAAKmhB,mBAET,IAAK,IAAIzqB,EAAI,EAAGA,EAAImqG,EAAOpqG,OAAQC,IAAK,CACpC,GAAI6D,aAAeua,GAGf,GAFAqE,EAAS,IAAI7F,GAAgB/Y,EAAK,cAAesmG,EAAOnqG,IAAI,GAC5D6D,EAAI6e,YAAYtiB,KAAKqiB,GACjB5e,EAAI4X,UAEJ,IAAK,IADD5R,EAAOhG,EACFmrB,EAAM,EAAGA,EAAMnlB,EAAKiO,QAAQ2D,SAAS1b,OAAQivB,IAClD,GAAInlB,EAAKiO,QAAQ2D,SAASuT,GAAK7lB,KAAOU,EAAKV,GAAK,kBAAmB,CAC/CU,EAAKiO,QAAQ2D,SAASuT,GAC5BvT,SAASrb,KAAKyD,EAAIguD,sBAAsBhuD,EAAI6e,YAAY7e,EAAI6e,YAAY3iB,OAAS,GAAIuJ,KAAKJ,QAAQC,WAKpH4hB,EAAOtP,SAASrb,KAAKyD,EAAIguD,sBAAsBhuD,EAAI6e,YAAY7e,EAAI6e,YAAY3iB,OAAS,GAAIuJ,KAAKJ,QAAQC,UAG5G,GAAItF,aAAeoZ,GAAW,CAC/BwF,EAAS,IAAI5F,GAAehZ,EAAK,cAAesmG,EAAOnqG,IAAI,GAC3D6D,EAAI6e,YAAYtiB,KAAKqiB,GACrB,IAAI7e,EAAUmnB,EAAOtP,SAAS,GAC1B3Q,EAAS,IAAI8K,GAAKhS,EAAQyB,QAAUzB,EAAQ/B,MAAQ,EAAG+B,EAAQ0B,QAAU1B,EAAQhC,OAAS,EAAGgC,EAAQ/B,MAAO+B,EAAQhC,QACxHmpB,EAAOtP,SAASrb,KAAKyD,EAAI6jD,qBAAqB7jD,EAAI6e,YAAY7e,EAAI6e,YAAY3iB,OAAS,GAAI8D,EAAI83B,mBAAoB7wB,EAAQxB,KAAK65B,eAAgB75B,KAAKJ,QAAQC,KAEjK,KAAMG,KAAK0X,eAAiBC,gBAAc+I,UAAe1gB,KAAK0X,eAAiBC,gBAAcgnE,OAAQ,CACjG,IAAIvhE,GACAvhB,KAAM,yBAA0B4sB,WAAY,SAAUnL,WAAYL,GAAY9D,GAC9EoE,WAAYN,GAAY1iB,GAAM8iB,SAAU,YAE5Crd,KAAKwd,gBAAgBJ,IAGzByjF,EAAOpqG,OAAS,GAChBuJ,KAAK2d,iBAETpjB,EAAIiU,QAAQ6Q,QAAQ,IAAIC,GAAKmC,EAAOlpB,MAAOkpB,EAAOnpB,SAClDiC,EAAIiU,QAAQ+Q,QAAQkC,EAAOjC,aAC3Bxf,KAAKse,oBAAoB/jB,GACzByF,KAAK2b,uBAAsB,IAK/Bob,EAAQqZ,UAAUklC,SAAW,SAAU/0E,EAAMwf,EAAM+C,GAC/C,IAAK,IAAIpsB,EAAI,EAAGA,EAAIqpB,EAAKtpB,OAAQC,IAC7BsxB,GAAQhoB,KAAMO,EAAMwf,EAAKrpB,GAAIosB,QACf7oB,IAAV6oB,IACAA,GAAS,IAOrBiU,EAAQqZ,UAAUilC,UAAY,SAAU90E,EAAM4iB,GAC1C,IAAK,IAAIzsB,EAAI,EAAGA,EAAIysB,EAAO1sB,OAAQC,IAC/BiyB,GAAS3oB,KAAMO,EAAM4iB,EAAOzsB,KAGpCqgC,EAAQqZ,UAAU0wD,qBAAuB,SAAUvmG,EAAKsmG,EAAQxqG,EAAGmY,GAC/D,IAAK,IAAI9X,EAAI,EAAGA,EAAI8X,EAAQ2D,SAAS1b,OAAQC,IAAK,CAC9C,IAAI+qB,EAASjT,EAAQ2D,SAASzb,GAC9B,IAAK+qB,aAAkB6C,IAAiB7C,aAAkBid,KAClDjd,EAAO5hB,GAAG/H,MAAM,IAAM+oG,EAAOxqG,GAAGwJ,GAAK,KAAM,CAC3C,IAAK,IAAI2jB,EAAI,EAAGA,EAAIjpB,EAAI6e,YAAY3iB,OAAQ+sB,IACxC,GAAI/B,EAAO5hB,GAAG/H,MAAM,IAAMyC,EAAI6e,YAAYoK,GAAG3jB,GAAK,KAAM,CACpD,KAAMG,KAAK0X,eAAiBC,gBAAc+I,UAAW,CACjD,IAAItD,GACAvhB,KAAM,yBAA0B4sB,WAAY,SAAUnL,WAAYL,GAAY1iB,EAAI6e,YAAYoK,IAC9FjG,WAAYN,GAAY1iB,GAAM8iB,SAAU,YAE5Crd,KAAKwd,gBAAgBJ,GAEzB7iB,EAAI6e,YAAY7S,OAAOid,EAAG,GAIlC,GADAhV,EAAQ2D,SAAS5L,OAAO7P,EAAG,GACT,QAAdsJ,KAAK4rB,KAAgB,CACrB,IAAIhsB,EAAUk/B,GAAkBrd,EAAO5hB,GAAIG,KAAKJ,QAAQC,IACxD,GAAID,EAAS,CACT,IAAImhG,EAAYjiE,GAAkBrd,EAAO5hB,GAAIG,KAAKJ,QAAQC,IAC1DkhG,EAAU9hF,WAAW8f,YAAYgiE,GAEnBjiE,GAAkBrd,EAAO5hB,GAAK,QAASG,KAAKJ,QAAQC,MAElED,EAAUk/B,GAAkBrd,EAAO5hB,GAAK,QAASG,KAAKJ,QAAQC,KACtDof,WAAW8f,YAAYn/B,GAEnC,IAAIs/B,EAAcJ,GAAkBrd,EAAO5hB,GAAK,gBAAiBG,KAAKJ,QAAQC,IAC1Eq/B,GACAA,EAAYjgB,WAAW8f,YAAYG,QAIvCl/B,KAAK08E,yBASzB3lD,EAAQqZ,UAAU0uC,aAAe,SAAUvkF,EAAKsmG,GACxCA,EAAOpqG,OAAS,GAChBuJ,KAAKmhB,mBAET,IAAK,IAAI9qB,EAAIwqG,EAAOpqG,OAAS,EAAGJ,GAAK,EAAGA,IACpC,GAAIkE,EAAI4X,UAAY5X,EAAI4X,SAAS1b,OAAS,EACtC,IAAK,IAAI+sB,EAAI,EAAGA,EAAIjpB,EAAIiU,QAAQ2D,SAAS1b,OAAQ+sB,IAC7CxjB,KAAK8gG,qBAAqBvmG,EAAKsmG,EAAQxqG,EAAGkE,EAAIiU,QAAQ2D,SAASqR,SAInExjB,KAAK8gG,qBAAqBvmG,EAAKsmG,EAAQxqG,EAAGkE,EAAIiU,SAGlDqyF,EAAOpqG,OAAS,GAChBuJ,KAAK2d,kBAGboZ,EAAQqZ,UAAU4wD,oBAAsB,SAAUzmG,EAAKwhC,EAAO1lC,EAAGmY,GAC7D,IAAK,IAAI9X,EAAI,EAAGA,EAAI8X,EAAQ2D,SAAS1b,OAAQC,IAAK,CAC9C,IAAI+qB,EAASjT,EAAQ2D,SAASzb,GAC9B,GAAI+qB,aAAkB3S,IACd2S,EAAO5hB,GAAG/H,MAAM,IAAMikC,EAAM1lC,GAAGwJ,GAAK,KAAM,CAC1C,IAAK,IAAI2jB,EAAI,EAAGA,EAAIjpB,EAAIwhC,MAAMtlC,OAAQ+sB,IAClC,GAAI/B,EAAO5hB,GAAG/H,MAAM,IAAMyC,EAAIwhC,MAAMvY,GAAG3jB,GAAK,KAAM,CAC9C,KAAMG,KAAK0X,eAAiBC,gBAAc+I,UAAW,CACjD,IAAItD,GACAvhB,KAAM,wBAAyB4sB,WAAY,SAAUnL,WAAYL,GAAY1iB,EAAIwhC,MAAMvY,IACvFjG,WAAYN,GAAY1iB,GAAM8iB,SAAU,YAE5Crd,KAAKwd,gBAAgBJ,GAEzB7iB,EAAIwhC,MAAMx1B,OAAOid,EAAG,GAI5B,GADAhV,EAAQ2D,SAAS5L,OAAO7P,EAAG,GACT,QAAdsJ,KAAK4rB,KAAgB,CACrB,IAAIhsB,EAAUk/B,GAAkBrd,EAAO5hB,GAAIG,KAAKJ,QAAQC,IACxDD,EAAQqf,WAAW8f,YAAYn/B,QAG/BI,KAAK08E,yBASzB3lD,EAAQqZ,UAAUyuC,YAAc,SAAUtkF,EAAKwhC,GACvCA,EAAMtlC,OAAS,GACfuJ,KAAKmhB,mBAET,IAAK,IAAI9qB,EAAI0lC,EAAMtlC,OAAS,EAAGJ,GAAK,EAAGA,IACnC,GAAIkE,EAAI4X,UAAY5X,EAAI4X,SAAS1b,OAAS,EACtC,IAAK,IAAI+sB,EAAI,EAAGA,EAAIjpB,EAAIiU,QAAQ2D,SAAS1b,OAAQ+sB,IAC7CxjB,KAAKghG,oBAAoBzmG,EAAKwhC,EAAO1lC,EAAGkE,EAAIiU,QAAQ2D,SAASqR,SAIjExjB,KAAKghG,oBAAoBzmG,EAAKwhC,EAAO1lC,EAAGkE,EAAIiU,SAGhDutB,EAAMtlC,OAAS,GACfuJ,KAAK2d,kBAUboZ,EAAQqZ,UAAUmgC,aAAe,SAAU0wB,EAAM/yE,GAC7C,IAAIvoB,EAUJ,GARIA,EADAs7F,EAAK3iG,WAAWgiB,QAAQ,MAAQ,EACxB2gF,EAAK3iG,WAER2iG,EAAK3iG,WAAWgiB,QAAQ,KAAO,OACdrmB,IAAdi0B,EAA0B,OAAS+yE,EAAK3iG,WAGxC2iG,EAAK3iG,WAAa,KAE1B4vB,EAAW,CACIC,GAAanuB,MAC5B2F,EAAQ,QAAUA,EAAQ,MAAQuoB,EAAY,MAElD,OAAOvoB,GAEXoxB,EAAQqZ,UAAU2mD,aAAe,WACzB/2F,KAAK0uB,cAAcc,ajDn6E/B,SAAqCtwB,GACjC,IAAIgvB,EAAYC,GAAajvB,GAMzBgiG,EAAU5yE,GAAkB,OAJ5BzuB,GAAMX,EAAQU,QAAQC,GAAK,gBAC3BK,MAAO,UAAYguB,EAAU51B,OAAS,YAAc41B,EAAU31B,MAAQ,oCACtEkgB,MAAO,oBAGXvZ,EAAQU,QAAQ2uB,aAAa2yE,EAAShiG,EAAQU,QAAQ4uB,YiD45E9C2yE,CAAqBnhG,MACrB6tB,GAAY7tB,MAAM,GAClB6tB,GAAY7tB,MAAM,IAGlB0vB,GAAoB1vB,OAG5B+2B,EAAQqZ,UAAUylD,qBAAuB,WACrC,IAAIx1F,EAAW,IAAIif,GACnBjf,EAAW8tB,GAAanuB,MACxB,IAAIJ,EAAUouB,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,WACpDtH,EAAQyH,KAAKuwE,aAAavwE,KAAKzH,MAAO8H,EAAS9H,OAC/CD,EAAS0H,KAAKuwE,aAAavwE,KAAK1H,OAAQ+H,EAAS/H,QACjD4H,EAAQF,KAAK0uB,cAAcc,WAC3B,SAAWj3B,EAAQ,YAAcD,EAAS,QAC7B+H,EAAS/H,OAAS,WAAa+H,EAAS9H,MAAQ,uDAE7D,SAAWA,EAAQ,YAAcD,EAAS,yDAE1C0yD,GACAnrD,GAAMG,KAAKJ,QAAQC,GAAK,UACxBuhG,SAAY,IACZlhG,MAASA,GAERN,GAKDI,KAAKyvE,cAAgB7vE,EACrBI,KAAKyvE,cAAc7qC,aAAa,QAAS1kC,KALzCF,KAAKyvE,cAAgBnhD,GAAkB,MAAO08B,GAC9ChrD,KAAKJ,QAAQo/B,YAAYh/B,KAAKyvE,gBAMlCzvE,KAAKyvE,cAAcvvE,MAAMq+D,WAAav+D,KAAKq7B,iBAE/CtE,EAAQqZ,UAAUinD,YAAc,WAC5Br3F,KAAK61F,uBACL5sD,GAAiBjpC,KAAKJ,SAClBM,MAAO,SAAWF,KAAKuwE,aAAavwE,KAAKzH,OAAS,YAC5CyH,KAAKuwE,aAAavwE,KAAK1H,QAAU,yCAI/Cy+B,EAAQqZ,UAAUixD,sBAAwB,SAAU7/F,EAAQ8/F,GACxD,IAAIC,EAAUvhG,KAAKwhG,UAAUxhG,KAAKJ,QAAQC,GAAK,uBAAwB2B,EAAOjJ,MAAOiJ,EAAOlJ,QAC5FipG,EAAQ38D,aAAa,QAAS08D,GAC9B,IAAIG,EAAkBv4D,GAAiB,KACnCrpC,GAAMG,KAAKJ,QAAQC,GAAK,wBACxB4Y,MAAS,6BAEb8oF,EAAQviE,YAAYyiE,GACpB,IACIljC,EAAar1B,GAAiB,KADrBrpC,GAAMG,KAAKJ,QAAQC,GAAK,mBAAoB4Y,MAAS,uBAElE8oF,EAAQviE,YAAYu/B,GACpBv+D,KAAKyvE,cAAczwC,YAAYuiE,IAEnCxqE,EAAQqZ,UAAUsxD,gBAAkB,SAAUlgG,EAAQ8/F,GAClD,IAAIK,EAAa3hG,KAAKwhG,UAAUxhG,KAAKJ,QAAQC,GAAK,gBAAiB2B,EAAOjJ,MAAOiJ,EAAOlJ,QACxFqpG,EAAW/8D,aAAa,QAAS,gBACjC,IAAIm4B,EAAU7zB,GAAiB,KAAOrpC,GAAMG,KAAKJ,QAAQC,GAAK,YAAatH,MAAS,OAAQD,OAAU,SAClG+T,EAAO68B,GAAiB,QACxBrpC,GAAMG,KAAKJ,QAAQC,GAAK,aAAc7I,EAAK,IAAKC,EAAK,IAAKsB,MAAS,OAAQD,OAAU,OACrFygB,KAAQ,QAAU/Y,KAAKJ,QAAQC,GAAK,cAExCk9D,EAAQ/9B,YAAY3yB,GACpBs1F,EAAW3iE,YAAY+9B,GACvB/8D,KAAKyvE,cAAczwC,YAAY2iE,GAC/Bv4D,GAAgBu4D,GAAczhG,MAASohG,KAE3CvqE,EAAQqZ,UAAUwxD,mBAAqB,SAAUpgG,EAAQ8/F,GACrD,IAAI/mF,GACA1a,GAAMG,KAAKJ,QAAQC,GAAK,oBACxBK,MAAS,SAAWsB,EAAOjJ,MAAQ,cAAgBiJ,EAAOlJ,OAAS,MAAQgpG,GAG/E,GADAthG,KAAK6hG,gBAAkBvzE,GAAkB,MAAO/T,GAC9B,QAAdva,KAAK4rB,KAAgB,CACrB,IAAIk2E,EAAa9hG,KAAKwhG,UAAUxhG,KAAKJ,QAAQC,GAAK,oBAAqB2B,EAAOjJ,MAAOiJ,EAAOlJ,QAC5FwpG,EAAWl9D,aAAa,QAAS,2BACjCk9D,EAAWl9D,aAAa,QAAS,mBACjC,IAAI+9C,EAAez5C,GAAiB,KAAOrpC,GAAMG,KAAKJ,QAAQC,GAAK,kBAC/DkiG,EAAsB74D,GAAiB,QAC3ClpC,KAAK2iF,aAAeA,EACpBA,EAAa/9C,aAAa,QAAS,wBACnCm9D,EAAoB/iE,YAAY2jD,GAChCmf,EAAW9iE,YAAY+iE,GACvB/hG,KAAK6hG,gBAAgB7iE,YAAY8iE,QAGjC9hG,KAAK2iF,aAAe50B,GAAeyB,aAAaxvD,KAAKJ,QAAQC,GAAK,WAAY2B,EAAOjJ,MAAOiJ,EAAOlJ,QACnG0H,KAAK2iF,aAAa/9C,aAAa,QAAS,uCACxC5kC,KAAK6hG,gBAAgB7iE,YAAYh/B,KAAK2iF,cAE1C3iF,KAAKyvE,cAAczwC,YAAYh/B,KAAK6hG,kBAExC9qE,EAAQqZ,UAAU2oD,WAAa,WAC3B,IAAIuI,EAAc,0EAEd9/F,EADYwsB,SAASC,eAAejuB,KAAKJ,QAAQC,IAC9B00B,wBACnBytE,E9C5+DZ,WACI,IAAIC,EAAQ3zE,GAAkB,OAASpuB,MAAS,oCAChD8tB,SAASuY,KAAKvH,YAAYijE,GAC1B,IAAIC,EAAgBD,EAAM1tE,wBAAwBh8B,MAElD0pG,EAAM/hG,MAAMivF,SAAW,SAEvB,IAAIgT,EAAQ7zE,GAAkB,OAASpuB,MAAS,eAChD+hG,EAAMjjE,YAAYmjE,GAClB,IAAIC,EAAkBD,EAAM5tE,wBAAwBh8B,MAGpD,OADA0pG,EAAMhjF,WAAW8f,YAAYkjE,GACtBC,EAAgBE,E8Cg+DAC,GACnBriG,KAAKqiB,SAASysE,cAAgBkT,EAC9BhiG,KAAKqiB,SAASiuD,gBAAgB9uE,EAAOjJ,MAAOiJ,EAAOlJ,QACnD0H,KAAK+2F,eACLvsD,KAEAxqC,KAAKqhG,sBAAsB7/F,EAAQ8/F,GACnCthG,KAAK0hG,gBAAgBlgG,EAAQ8/F,GAC7BthG,KAAK4hG,mBAAmBpgG,EAAQ8/F,GAChCthG,KAAKsiG,gBAAgB9gG,EAAQ8/F,GAC7BthG,KAAKuiG,uBAAuB/gG,EAAQ8/F,GACpCthG,KAAKwiG,kBAAkBhhG,EAAQ8/F,GAC/BthG,KAAKyiG,mBAAmBjhG,EAAQ8/F,IAEpCvqE,EAAQqZ,UAAUqyD,mBAAqB,SAAUjhG,EAAQ8/F,GACrD,IAAI52D,EAAapc,GAAkB,OAC/BzuB,GAAMG,KAAKJ,QAAQC,GAAK,uBACxBK,MAAS,SAAWsB,EAAOjJ,MAAQ,aAAeiJ,EAAOlJ,OAAS,MAAQgpG,IAE1EoB,EAAgB1iG,KAAKwhG,UAAUxhG,KAAKJ,QAAQC,GAAK,sBAAuB2B,EAAOjJ,MAAOiJ,EAAOlJ,QACjGoqG,EAAc99D,aAAa,QAAS,mBACpC89D,EAAc99D,aAAa,QAAS,wBACpC5kC,KAAKq5D,aAAenwB,GAAiB,KAAOrpC,GAAMG,KAAKJ,QAAQC,GAAK,oBACpEG,KAAKq5D,aAAaz0B,aAAa,QAAS,0BACxC89D,EAAc1jE,YAAYh/B,KAAKq5D,cAC/B3uB,EAAW1L,YAAY0jE,GACvB1iG,KAAKyvE,cAAczwC,YAAY0L,GAC/B,IAAIi4D,EAAcz5D,GAAiB,KAAOrpC,GAAMG,KAAKJ,QAAQC,GAAK,qBAClEG,KAAKq5D,aAAar6B,YAAY2jE,GAC9Bv5D,GAAgBs5D,GAAiBxiG,MAAO,0BAE5C62B,EAAQqZ,UAAUmyD,uBAAyB,SAAU/gG,EAAQ8/F,GACzD,IAAIsB,EAAc5iG,KAAKwhG,UAAUxhG,KAAKJ,QAAQC,GAAK,oBAAqB2B,EAAOjJ,MAAOiJ,EAAOlJ,QAC7FsqG,EAAYh+D,aAAa,QAAS,wBAClC,IAAIi+D,EAAgB35D,GAAiB,KACjCrpC,GAAMG,KAAKJ,QAAQC,GAAK,gBACxB4Y,MAAS,gBACTvY,MAAS,yBAEb0iG,EAAY5jE,YAAY6jE,GACxB,IAAIC,EAAiB55D,GAAiB,KAClCrpC,GAAMG,KAAKJ,QAAQC,GAAK,mBACxB4Y,MAAS,iBACTvY,MAAS,yBAEb0iG,EAAY5jE,YAAY8jE,GACxB9iG,KAAKyvE,cAAczwC,YAAY4jE,GAC/Bx5D,GAAgBw5D,GAAe1iG,MAASohG,KAE5CvqE,EAAQqZ,UAAUkyD,gBAAkB,SAAU9gG,EAAQ8/F,GAClDthG,KAAKgyB,UAAY1D,GAAkB,OAC/BzuB,GAAMG,KAAKJ,QAAQC,GAAK,aACxBK,MAAS,SAAWsB,EAAOjJ,MAAQ,cAAgBiJ,EAAOlJ,OAAS,6EAEnEmgB,MAAS,iBAEb,IAAIsqF,EAAez0E,GAAkB,OACjCzuB,GAAMG,KAAKJ,QAAQC,GAAK,iBACxBK,MAAS,2DAEbF,KAAKgyB,UAAUgN,YAAY+jE,GAC3B/iG,KAAKyvE,cAAczwC,YAAYh/B,KAAKgyB,YAExC+E,EAAQqZ,UAAUoyD,kBAAoB,SAAUhhG,EAAQ8/F,GACpD,IAAI0B,EAAiBhjG,KAAKwhG,UAAUxhG,KAAKJ,QAAQC,GAAK,mBAAoB2B,EAAOjJ,MAAOiJ,EAAOlJ,QAC3F+kE,EAAcn0B,GAAiB,KAAOrpC,GAAMG,KAAKJ,QAAQC,GAAK,eAAgBK,MAAS,wBAC3F8iG,EAAehkE,YAAYq+B,GAC3Br9D,KAAK6hG,gBAAgB7iE,YAAYgkE,GACjC55D,GAAgB45D,GAAkBvqF,MAAS,iBAAkBvY,MAASohG,KAG1EvqE,EAAQqZ,UAAUoxD,UAAY,SAAU3hG,EAAItH,EAAOD,GAC/C,IAAI2qG,EAASj1E,SAASmb,gBAAgB,6BAA8B,OAEpE,OADAC,GAAgB65D,GAAUpjG,GAAMA,EAAItH,MAASA,EAAOD,OAAUA,IACvD2qG,GAEXlsE,EAAQqZ,UAAU8lD,YAAc,SAAUgN,GACjCljG,KAAKw7B,WACNx7B,KAAKmjG,WAETnjG,KAAKojG,mBACLpjG,KAAK41F,eAAesN,IAGxBnsE,EAAQqZ,UAAUgzD,iBAAmB,WAQjC,IACK,IARDC,EAAYrjG,KAAKk7B,OAAOzkC,OAAS,EAEjCkoB,KACA2kF,KACAC,KAEAC,KAEK3mG,EAAK,EAAGohB,EAAKje,KAAK8Z,MAAOjd,EAAKohB,EAAGxnB,OAAQoG,IAAM,EAChDtC,EAAM0jB,EAAGphB,IACTgD,GAAKtF,EAAIsF,IAAMua,KACnBpa,KAAKyjG,WAAWlpG,EAAK8oG,GACrBC,EAAU/oG,EAAIsF,IAAMtF,EAExB,IAAK,IAAI4gC,EAAK,EAAGC,EAAKp7B,KAAK2e,WAAYwc,EAAKC,EAAG3kC,OAAQ0kC,IAAM,EACrD5gC,EAAM6gC,EAAGD,IACTt7B,GAAKtF,EAAIsF,IAAMua,KACnBpa,KAAKyjG,WAAWlpG,EAAK8oG,GACrBC,EAAU/oG,EAAIsF,IAAMtF,EAExB,IAAK,IAAI+qD,EAAK,EAAGC,EAAKvlD,KAAKk7B,OAAQoqB,EAAKC,EAAG9uD,OAAQ6uD,IAAM,CAErD,IAAK,IAAIG,EAAK,EAAGC,GADbxd,EAAQqd,EAAGD,IACazwB,QAAS4wB,EAAKC,EAAGjvD,OAAQgvD,IAAM,CAEvD,GAAI69C,EADA/oG,EAAMmrD,EAAGD,IAET,GAAM69C,EAAU/oG,aAAgBoZ,GAa3B,CAED,IADIpP,EAAY++F,EAAU/oG,IACZkH,UAAY8C,EAAU0iB,SAAU,CAC1C,IAAI/kB,EAAaohG,EAAU/+F,EAAU9C,UACjCU,EAAamhG,EAAU/+F,EAAU0iB,UACjC/kB,GAAcA,EAAWsM,SAAWrM,GAAcA,EAAWqM,QAC7DxO,KAAKu8F,eAAe+G,EAAU/oG,GAAM2tC,GAGpCvpB,EAAW7nB,KAAKwsG,EAAU/oG,SAI9ByF,KAAKu8F,eAAe+G,EAAU/oG,GAAM2tC,QAzBpCo7D,EAAU/oG,GAAK4X,SACfqxF,EAAO1sG,KAAKyD,GAEN+oG,EAAU/oG,GAAK6D,iBAAiBm5B,IACtC+rE,EAAU/oG,GAAK6D,MAAM+oD,SAASD,WAAWE,WACzCk8C,EAAU/oG,GAAK6D,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAAS,EAC5D8sG,EAAUD,EAAU/oG,GAAKsF,IAAMtF,EAG/ByF,KAAK0jG,UAAUJ,EAAU/oG,GAAM2tC,GAqB/C,GAAIloC,KAAKgnD,WACL,IAAK,IAAI0vC,EAAK,EAAGC,EAAK32F,KAAKgnD,WAAW6xB,yBAA0B6d,EAAKC,EAAGlgG,OAAQigG,IAAM,CAClF,IAAIn8F,EAAMo8F,EAAGD,GACb12F,KAAKu8F,eAAehiG,EAAK2tC,GAAO,IAI5C,IAAK,IAAIy7D,EAAK,EAAGC,EAAK1lF,OAAOC,KAAKolF,GAAYI,EAAKC,EAAGntG,OAAQktG,IAAM,CAC5DppG,EAAMqpG,EAAGD,GACb3jG,KAAK6Z,WAAWypF,EAAU/oG,IAC1ByF,KAAKgnD,WAAWw1C,YAAY8G,EAAU/oG,GAAMyF,MAEhD,IAAK,IAAI6jG,EAAK,EAAGC,EAAWN,EAAQK,EAAKC,EAASrtG,OAAQotG,IAAM,CACxDtpG,EAAMupG,EAASD,GAAnB,IACI37D,EAAQloC,KAAKyd,eAAeu6D,eAAez9E,GAC/CyF,KAAK0jG,UAAUJ,EAAU/oG,GAAM2tC,GAEnC,IAAK,IAAI67D,EAAK,EAAGC,EAAerlF,EAAYolF,EAAKC,EAAavtG,OAAQstG,IAAM,CACxE,IAAIx/F,EAAYy/F,EAAaD,GACzB77D,EAAQloC,KAAKyd,eAAeu6D,eAAezzE,EAAU1E,IACzDG,KAAKu8F,eAAeh4F,EAAW2jC,KAGvCnR,EAAQqZ,UAAUqzD,WAAa,SAAUlpG,EAAK8oG,GAC1C,IAAIn7D,EACAm7D,IACAn7D,EAAQloC,KAAKyd,eAAeu6D,eAAez9E,EAAIsF,KAE9CwjG,GAAcn7D,IACmC,IAA9CloC,KAAKo9E,YAAYvoD,QAAQvU,QAAQ/lB,EAAIsF,KACrCG,KAAKo9E,YAAYvoD,QAAQ/9B,KAAKyD,EAAIsF,IAG1CG,KAAKikG,UAAU/7D,GAASloC,KAAKo9E,YAAa7iF,IAE9Cw8B,EAAQqZ,UAAUgmD,YAAc,SAAUzsC,GACtC,IAAK,IAAI9sD,EAAK,EAAGohB,EAAKC,OAAOC,KAAKwrC,EAAQzuB,QAASr+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAGrE,IAAK,IAFDigC,EAAM7e,EAAGphB,GAEJs+B,EAAK,EAAG+oE,EADClkG,KAAKk7B,OAAO4B,GAAKjI,QACWsG,EAAK+oE,EAAcztG,OAAQ0kC,IAAM,CAC3E,IAAI5gC,EAAM2pG,EAAc/oE,GACpB56B,EAAOP,KAAK4b,UAAUrhB,QACUN,IAAhC0vD,EAAQzuB,OAAO4B,GAAKc,QACpB59B,KAAKunD,wBAAwBhnD,EAAKiO,QAASjO,EAAMopD,EAAQzuB,OAAO4B,GAAKc,UAEnC,IAA7B+rB,EAAQzuB,OAAO4B,GAAKm7C,MACzBj4E,KAAKmkE,SAAS5jE,QAGWtG,IAA7B0vD,EAAQzuB,OAAO4B,GAAKm7C,OACpBj4E,KAAKk7B,OAAO4B,GAAKm7C,KAAOtuB,EAAQzuB,OAAO4B,GAAKm7C,MAGlC,QAAdj4E,KAAK4rB,MACL5rB,KAAK6rB,uBAGbkL,EAAQqZ,UAAUimD,qBAAuB,SAAU1sC,GAC/C,IAAIw6C,GAASnkG,KAAKqiB,SAASgN,iBAAmBs6B,EAAQ1uB,eAAe5L,kBAAoB,EACrF+0E,EAAQpkG,KAAKqiB,SAASkN,eAAiBo6B,EAAQ1uB,eAAe1L,gBAAkB,EAChF21C,GACAm/B,eAAgBrkG,KAAKi7B,eAAe1L,eAAgB+0E,iBAAkBtkG,KAAKi7B,eAAe5L,iBAC1Fk1E,eAAgBvkG,KAAKi7B,eAAepL,eAAgB20E,cAAexkG,KAAKi7B,eAAenL,cACvF20E,YAAazkG,KAAKqiB,SAAS8N,aAElB,IAATg0E,GAAuB,IAATC,GACdpkG,KAAKysF,IAAI0X,EAAMC,GAEnB,IAKIrwC,GACAmR,SAAUA,EAAUC,UALpBk/B,eAAgBrkG,KAAKi7B,eAAe1L,eAAgB+0E,iBAAkBtkG,KAAKi7B,eAAe5L,iBAC1Fk1E,eAAgBvkG,KAAKi7B,eAAepL,eAAgB20E,cAAexkG,KAAKi7B,eAAenL,cACvF20E,YAAazkG,KAAKqiB,SAAS8N,aAGa5tB,OAAQvC,MAEpDA,KAAKulE,aAAalyB,eAAaqxD,aAAc3wC,GAC3B,WAAd/zD,KAAK4rB,MAAsB5rB,KAAKwT,YAAc4C,qBAAmBC,gBACjErW,KAAK6rB,uBAGbkL,EAAQqZ,UAAU+yD,SAAW,YAErBnjG,KAAK2kG,mBAAuB3kG,KAAKotF,YAAch6C,aAAWkjD,kBACtDt2F,KAAKy5B,mBAAmB+/D,aAAex5F,KAAKy5B,mBAAmBkgE,qBAAqBH,aACpFx5F,KAAK8Z,MAAQ9Z,KAAK4kG,aAAa5kG,KAAKy5B,mBAAmB+/D,aAAa,GACpEx5F,KAAK2e,WAAa3e,KAAK4kG,aAAa5kG,KAAKy5B,mBAAmBkgE,qBAAqBH,aAAa,IAEzFx5F,KAAKy5B,mBAAmB+/D,aAAex5F,KAAKy5B,mBAAmB+/D,YAAYqL,iBACzB5qG,IAAvD+F,KAAKy5B,mBAAmB+/D,YAAYqL,WAAWC,IAC/C9kG,KAAK2kG,kBAAkBI,WAAW/kG,KAAKy5B,mBAAoBz5B,MAG3DA,KAAK2kG,kBAAkBxB,SAASnjG,KAAKy5B,mBAAoBz5B,QAIrE+2B,EAAQqZ,UAAUw0D,aAAe,SAAUC,EAAY3xB,GACnD,IACIx8E,EADAojB,KAEJ,IAAKpjB,EAAI,EAAGA,EAAImuG,EAAWpuG,OAAQC,IAAK,CACpC,IAAImsB,EAAMgiF,EAAWnuG,GACjB6J,EAAO2yE,EAASlzE,KAAKglG,SAASniF,GAAK,GAAQ7iB,KAAKglG,SAASniF,GAAK,IAC9DtiB,IAAQA,EAAKV,IAAQoxB,GAAenX,EAAOvZ,EAAKV,KAAQoxB,GAAenX,EAAOvZ,EAAKV,KACnFia,EAAMhjB,KAAKyJ,GAGnB,UAEJw2B,EAAQqZ,UAAU40D,SAAW,SAAUniF,EAAKqwD,GACxC,IAAIx8E,EACAuuG,EAAS/xB,EAASlzE,KAAKy5B,mBAAqBz5B,KAAKy5B,mBAAmBkgE,qBACpEvjG,KAcJ,GAbAA,EAAKyJ,GAAKgjB,EAAIoiF,EAAOplG,IAAMgjB,EAAIoiF,EAAOplG,IAAMua,KACxC6qF,EAAOxjG,WACPrL,EAAKqL,SAAWohB,EAAIoiF,EAAOxjG,WAE3BwjG,EAAOh+E,WACP7wB,EAAK6wB,SAAWpE,EAAIoiF,EAAOh+E,WAE3BpE,EAAIoiF,EAAOC,eAAiBriF,EAAIoiF,EAAOE,gBACvC/uG,EAAK2K,aAAgB/J,EAAKmB,OAAO0qB,EAAIoiF,EAAOC,eAAgBjuG,EAAKkB,OAAO0qB,EAAIoiF,EAAOE,iBAEnFtiF,EAAIoiF,EAAOG,eAAiBviF,EAAIoiF,EAAOI,gBACvCjvG,EAAK6U,aAAgBjU,EAAKmB,OAAO0qB,EAAIoiF,EAAOG,eAAgBnuG,EAAKkB,OAAO0qB,EAAIoiF,EAAOI,iBAEnFJ,EAAOtM,WAAW2M,cAAgBL,EAAOtM,WAAW2M,aAAa7uG,OAAS,EAC1E,IAAKC,EAAI,EAAGA,EAAIuuG,EAAOtM,WAAW2M,aAAa7uG,OAAQC,IACnDN,EAAK6uG,EAAOtM,WAAW2M,aAAa5uG,IAAMmsB,EAAIoiF,EAAOtM,WAAW2M,aAAa5uG,IAGrF,OAAON,GAEX2gC,EAAQqZ,UAAUszD,UAAY,SAAUnpG,EAAK2tC,GACzCloC,KAAKwhF,eAAgB,EACrBxhF,KAAK6Z,WAAWtf,EAAK2tC,GACrBloC,KAAKwhF,eAAgB,GAEzBzqD,EAAQqZ,UAAUmsD,eAAiB,SAAUhiG,EAAK2tC,EAAOq9D,GACrDvlG,KAAKwhF,eAAgB,EACrBxhF,KAAK6Z,WAAWtf,EAAK2tC,EAAOq9D,GAC5BvlG,KAAKq8F,YAAY9hG,GACjByF,KAAKwhF,eAAgB,GAEzBzqD,EAAQqZ,UAAU6zD,UAAY,SAAU/7D,EAAO3tC,GAE3C,IAAIirG,EAAet9D,EACnB,IAAsB,IAAlB,EAAMrd,OAAe,CACrB,KAAO26E,EAAa9qB,YAAY8qB,EAAa/qB,aAAe,IACxDvyC,EAAMuyC,eAEVlgF,EAAIswB,SAAW26E,EAAa/qB,iBAE3B,CACD,IAAI33D,EAAQvoB,EAAIswB,OAChB,GAAI26E,EAAa9qB,YAAY53D,GAEzB,IACK,IAFD4/D,EAAcxkE,OAAOC,KAAKqnF,EAAa9qB,aAAajkF,OAE/CC,EAAI,EAAGA,EAAIgsF,EAAahsF,IAC7B,GAAIA,IAAMosB,EAAO,CACb,IAAK,IAAI4+B,EAAMghC,EAAahhC,EAAM5+B,EAAO4+B,IACrC8jD,EAAa9qB,YAAYh5B,GAAO8jD,EAAa9qB,YAAYh5B,EAAM,GAC3D1hD,KAAK4b,UAAU4pF,EAAa9qB,YAAYh5B,MACxC1hD,KAAK4b,UAAU4pF,EAAa9qB,YAAYh5B,IAAM72B,OAAS62B,GAG/D8jD,EAAa9qB,YAAYhkF,GAAK6D,EAAIsF,MAOtDk3B,EAAQqZ,UAAU4oD,wBAA0B,WACvBh5F,KAAKk7B,OACtB,IAAK,IAAIxkC,EAAI,EAAGA,EAAIsJ,KAAKk7B,OAAOzkC,OAAQC,IACpC,IAA+B,IAA3BsJ,KAAKk7B,OAAOxkC,GAAGm0B,OAAe,CAC9B,IAAIla,EAAO3Q,KAAKk7B,OAAOxkC,GACvBsJ,KAAKk7B,OAAOxkC,GAAKsJ,KAAKk7B,OAAOl7B,KAAKk7B,OAAOxkC,GAAGm0B,QAC5C7qB,KAAKk7B,OAAOvqB,EAAKka,QAAUla,EAGnC,IAAK,IAAI9T,EAAK,EAAGohB,EAAKje,KAAKk7B,OAAQr+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACrD,IAAIqrC,EAAQjqB,EAAGphB,GACfqrC,EAAMrd,QAA2B,IAAlBqd,EAAMrd,OAAgBqd,EAAMrd,OAAS7qB,KAAKk7B,OAAO5a,QAAQ4nB,GACxEloC,KAAKm9E,iBAAiBj1C,EAAMrd,QAAUqd,EAAMroC,GAEhD,IAASnJ,EAAI,EAAGA,EAAIsJ,KAAKk7B,OAAOzkC,OAAQC,IACpC,IAAK,IAAIL,EAAIK,EAAI,EAAGL,EAAI2J,KAAKk7B,OAAOzkC,OAAQJ,IACxC,GAAI2J,KAAKk7B,OAAOxkC,GAAGm0B,OAAS7qB,KAAKk7B,OAAO7kC,GAAGw0B,OAAQ,CAC3Cla,EAAO3Q,KAAKk7B,OAAOxkC,GACvBsJ,KAAKk7B,OAAOxkC,GAAKsJ,KAAKk7B,OAAO7kC,GAC7B2J,KAAKk7B,OAAO7kC,GAAKsa,EAI7B,GAA2B,IAAvB3Q,KAAKk7B,OAAOzkC,OAAc,CAK1BuJ,KAAKyd,eAAey/D,UAHhBr9E,GAAI,gBAAiB+9B,SAAS,EAAMq6C,MAAM,EAAOpjD,WAAahK,OAAQ,EACtE4vD,cAAe,EAAGC,iBAI1B16E,KAAK49E,eAAe59E,KAAKk7B,OAAOl7B,KAAKk7B,OAAOzkC,OAAS,GAAGoJ,KAG5Dk3B,EAAQqZ,UAAU2oC,UAAY,WAC1B/4E,KAAKq6E,aAAatB,aAEtBhiD,EAAQqZ,UAAUq1D,iBAAmB,SAAUlrG,EAAK2tC,EAAOq9D,GACvD,GAAIA,EAAgB,CAChB,IAAI97B,EAA2BzpE,KAAKyd,eAAegsD,8BAAyBxvE,OAAWA,EAAWM,EAAIiU,QAAQhN,QAE9G,GADA0mC,EAAMwyC,YAAYngF,EAAIswB,QAAUtwB,EAAIsF,IAC/B4pE,EAA0B,CAE3B,IAAK,IADDlpE,EAAOhG,aAAeua,GAAO9U,KAAK8Z,MAAQ9Z,KAAK2e,WAC1CjoB,EAAI,EAAGA,GAAK6J,EAAK9J,OAAQC,IAC1B6J,EAAK7J,IAAM6D,EAAIsF,KAAOU,EAAK7J,GAAGmJ,IAC9BU,EAAKgG,OAAO7P,EAAG,UAGhBwxC,EAAMwyC,YAAYngF,EAAIswB,WAKzCkM,EAAQqZ,UAAUv2B,WAAa,SAAUtf,EAAK2tC,EAAOq9D,EAAgB5uC,GAEjE,QADuB,IAAnB4uC,IAA6BA,GAAiB,QACtCtrG,IAARM,EAAmB,CAWnB,GAVIgrG,IACKr9D,IACDloC,KAAKyjG,WAAWlpG,GAAK,GACrB2tC,EAAQloC,KAAKo9E,cAGb7iF,aAAeua,IAAQva,aAAeoZ,KACtC3T,KAAKikG,UAAU/7D,EAAO3tC,IAG1BA,aAAeua,IACf,GAAIywF,EAAgB,CAChB,GAAe,WAAXhrG,EAAIsF,GAAiB,CAErB,GADI6lG,EAAcr1E,GAAYrwB,KAAKu6B,iBAClB,EACTorE,EAAWD,EAAYnrG,EAAKyF,QAChB2lG,IAAaprG,GACzB4xC,GAAaw5D,EAAUprG,IAInCyF,KAAK4lG,SAASrrG,EAAKyF,KAAKJ,QAAQC,UAGnC,GAAItF,aAAeoZ,GAAW,CAC/B,IAAI+xF,EACJ,GADIA,EAAcr1E,GAAYrwB,KAAKy6B,sBAClB,CACb,IAAIkrE,GAAAA,EAAWD,EAAYnrG,EAAKyF,QAChB2lG,IAAaprG,GACzB4xC,GAAaw5D,EAAUprG,GAEvBA,EAAIpB,SAAS1C,QACT8D,EAAIsB,OAAStB,EAAIpB,SAAS,GAAG0C,OAC7BtB,EAAIpB,aAIhB,IAAI+I,EAAalC,KAAK4b,UAAUrhB,EAAIkH,UAChCU,EAAanC,KAAK4b,UAAUrhB,EAAI0sB,UAChC9jB,EAAOnD,KAAK6lG,iBAAiB3jG,EAAY3H,GACzC8H,EAAarC,KAAK6lG,iBAAiB1jG,EAAY5H,GAC/CmrE,EAAU1lE,KAAK8lG,sBAAsB5jG,GAAY,GACjDujE,EAASzlE,KAAK8lG,sBAAsB3jG,GAAY,GAiBpD,SAhBoBlI,IAAfiI,GAA4BiT,GAAcjT,IAAsC,KAArB3H,EAAI00C,cAAuB55B,GAAkBqwD,MACzGnrE,EAAIyG,cAAgBhB,KAAK+lG,kBAAkB7jG,EAAY3H,GAAK,GACxDA,EAAI00C,gBACA9rC,IAAQA,EAAKqQ,aAAiBrQ,EAAKqQ,YAAcyB,kBAAgBC,OACjE3a,EAAI4G,kBAAoBnB,KAAKmiD,WAAWjgD,EAAWsM,QAASjU,EAAI00C,uBAIxDh1C,IAAfkI,GAA4B0S,GAAa1S,IAAsC,KAArB5H,EAAIqnD,cAAuB5sC,GAAiBywD,MACvGlrE,EAAImH,cAAgB1B,KAAK+lG,kBAAkB5jG,EAAY5H,GAAK,GACxDA,EAAIqnD,gBACAv/C,IAAcA,EAAWmR,aAAiBnR,EAAWmR,YAAcyB,kBAAgBC,OACnF3a,EAAI+H,kBAAoBtC,KAAKmiD,WAAWhgD,EAAWqM,QAASjU,EAAIqnD,kBAIvE2jD,EAAgB,CAEjBplE,GAAgB5lC,EADHA,EAAIkjD,mBAAmBljD,EAAIsB,OAGxC0pG,GACAhrG,EAAIsoC,KAAK7iC,MAEb,IAAK,IAAIwjB,EAAI,EAAGA,EAAIjpB,EAAIiU,QAAQ2D,SAAS1b,OAAQ+sB,IACzCxjB,KAAKs4F,UAAU/9F,EAAIiU,QAAQ2D,SAASqR,GAAGptB,QACvCmE,EAAIiU,QAAQ2D,SAASqR,GAAGmzB,eACpB32C,KAAKs4F,UAAU/9F,EAAIiU,QAAQ2D,SAASqR,GAAGptB,MAAMugD,gBAGzDp8C,EAAIiU,QAAQ6Q,QAAQ,IAAIC,QAAKrlB,OAAWA,IACxCM,EAAIiU,QAAQ+Q,QAAQhlB,EAAIiU,QAAQgR,aAChC,IAAK,IAAInpB,EAAI,EAAGA,EAAIkE,EAAIiU,QAAQ2D,SAAS1b,OAAQJ,IAC7C2J,KAAKs4F,UAAU/9F,EAAIiU,QAAQ2D,SAAS9b,GAAGD,SACvC4J,KAAKs4F,UAAU/9F,EAAIiU,QAAQ2D,SAAS9b,GAAGD,MAAMugD,eACzCp8C,EAAIiU,QAAQ2D,SAAS9b,GAAGsgD,eAGpC,GAAIp8C,aAAeua,IAAQva,EAAI4X,UAAY5X,EAAIqe,UAC3C,IAAK,IAAIliB,EAAI,EAAGA,EAAI6D,EAAI4X,SAAS1b,OAAQC,IACrCsJ,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IAAIqF,QAAUiE,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IAAI8X,QAAQzS,QAClFiE,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IAAIsF,QAAUgE,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IAAI8X,QAAQxS,QAS1F,GANIgE,KAAKgnD,YAAczsD,aAAeua,IACZ,SAAnBva,EAAI6D,MAAMvC,MAAmBtB,EAAI6D,MAAMgb,YAAY3iB,OAAS,GAC/DuJ,KAAKgnD,WAAW4sC,WAAWr5F,EAAKyF,MAEpCA,KAAKylG,iBAAiBlrG,EAAK2tC,EAAOq9D,GAClCvlG,KAAK4b,UAAUrhB,EAAIsF,IAAMtF,EACrBA,aAAeua,IAAQva,EAAI4X,SAAU,CAChCwkD,GAAUp8D,EAAIqe,WACf5Y,KAAKwmF,kBAAkBjsF,GAAK,GAEhCyF,KAAK40F,WAAWr6F,EAAIsF,IAAMtF,EAAI4X,SAC9B,IAASzb,EAAI,EAAGA,EAAI6D,EAAI4X,SAAS1b,OAAQC,IAAK,CAC1C,IAAI6J,EAAQP,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IACpC6J,IACAA,EAAKsb,SAAWthB,EAAIsF,IAGvBG,KAAKw7B,YAAajhC,EAAI2S,aAAgB3S,EAAIqe,WAC3C5Y,KAAKyd,eAAeooE,cAActrF,GAAMA,GAAMA,EAAI2S,aAAelW,EAAGuD,EAAIwB,QAAS9E,EAAGsD,EAAIyB,UAAW,GAG3GgE,KAAK4zF,WAAWr5F,IAEA,IAAhBA,EAAIqjC,SACJ59B,KAAKunD,wBAAwBhtD,EAAIiU,QAASjU,GAAK,IAGvDw8B,EAAQqZ,UAAUy1D,iBAAmB,SAAUtlG,EAAMgE,GACjD,GAAIhE,GAAQA,EAAKw7B,MACb,IAAK,IAAIl/B,EAAK,EAAGohB,EAAK1d,EAAKw7B,MAAOl/B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAIsG,EAAO8a,EAAGphB,GACd,GAAIsG,EAAKtD,KAAO0E,EAAU0qC,aACtB,OAAO9rC,EAEN,GAAIA,EAAKtD,KAAO0E,EAAUq9C,aAC3B,OAAOz+C,EAInB,OAAO,MAEX4zB,EAAQqZ,UAAUm2C,YAAc,SAAUhsF,EAAK2mB,EAAM8kF,GACjD,IAAIz5F,EAAay5F,EAAUzrG,EAAIiU,QAAQjC,WAAWhU,MAAQgC,EAAIiU,QAAQjC,WAAWjU,OAC7E+pC,EAAK,EAAY,GAAMnhB,EAAO3U,GAAcA,EAAc,EAC1D+1B,EAAK,EAAY,EAAI,GAAMphB,EAAO3U,GAAcA,EACjChS,EAAIwB,QACJxB,EAAIyB,QACvBgE,KAAKotF,aAAeh6C,aAAW6yD,YAC/BjmG,KAAK2c,MAAMpiB,EAAK8nC,EAAIC,GAAMtrC,EAAG,GAAKC,EAAG,KACrC+I,KAAKotF,cAAgBh6C,aAAW6yD,aAEpClvE,EAAQqZ,UAAUqvD,yBAA2B,SAAUl/F,GAC1B,wBAArBP,KAAKo6B,OAAOv+B,MAAuD,qBAArBmE,KAAKo6B,OAAOv+B,MACrC,4BAArBmE,KAAKo6B,OAAOv+B,OAERmE,KAAKkmG,wBAAwB3lG,EAAMA,EAAK0nD,YACxCjoD,KAAKkmG,wBAAwB3lG,EAAMA,EAAK2nD,gBAIpDnxB,EAAQqZ,UAAU81D,wBAA0B,SAAU3lG,EAAMzB,GACxD,GAAmB,SAAfA,EAAKV,OAC4B,SAA7BU,EAAK8a,qBAA6D,SAA3B9a,EAAK6a,mBAC1B,KAAlB7a,EAAKmR,OAAOjZ,GAA8B,IAAlB8H,EAAKmR,OAAOhZ,EAAS,CAC7C,IAAIkvG,EAAcnmG,KAAKmiD,WAAW5hD,EAAKiO,QAAS,gBAC5CzS,OAAU,EACVC,OAAU,EACkB,gBAA5BgE,KAAKo6B,OAAO/oB,aAA6D,gBAA5BrR,KAAKo6B,OAAO/oB,aACzDtV,EAAU,GACVC,EAAsC,gBAA5BgE,KAAKo6B,OAAO/oB,YAAgC,EAAI,GAEzB,gBAA5BrR,KAAKo6B,OAAO/oB,aAA6D,gBAA5BrR,KAAKo6B,OAAO/oB,cAC9DtV,EAAsC,gBAA5BiE,KAAKo6B,OAAO/oB,YAAgC,EAAI,EAC1DrV,EAAU,IAEdmqG,EAAY1xD,6BAA6B14C,EAASC,EAAS,YAC3DmqG,EAAYvsF,oBAAsB,SAClCusF,EAAYxsF,kBAAoB,SAChCpZ,EAAKiO,QAAQ6Q,QAAQ,IAAIC,GAAK/e,EAAKiO,QAAQjW,MAAOgI,EAAKiO,QAAQlW,SAC/DiI,EAAKiO,QAAQ+Q,QAAQhf,EAAKiO,QAAQgR,eAO9CuX,EAAQqZ,UAAUo2C,kBAAoB,SAAUjmF,EAAM6lG,GAClD,GAAK7lG,EAAK4R,UAAY5R,EAAK4R,SAAS1b,OAAS,IAAO8J,EAAKqY,WAAgBrY,EAAc,UAAG,CACtF,IAAI8lG,EAAQrmG,KAAK4b,UAAUrb,EAAKV,IAChC,KAAMG,KAAKotF,YAAch6C,aAAWkzD,cAAmBtmG,KAAKotF,YAAch6C,aAAW6yD,aAAc,CAC/F,IAAII,EAAMtqG,SAAaiE,KAAK0X,eAAiBC,gBAAcC,YAClD5X,KAAK0X,eAAiBC,gBAAcokF,aAUzCsK,EAAMtqG,QAAUwE,EAAKiO,QAAQzS,YAV2B,CACxDiE,KAAKotF,aAAeh6C,aAAWkzD,aAC/B,IAAI5+F,EAAS2+F,EAAMtqG,QAAUwE,EAAKiO,QAAQzS,QAC1CsqG,EAAMtqG,QAAUwE,EAAKiO,QAAQzS,QACX,SAAdwE,EAAKszC,MACL7zC,KAAK0c,KAAK2pF,EAAO3+F,EAAO,GAE5B1H,KAAKotF,cAAgBh6C,aAAWkzD,aAKpC,IAAID,EAAMrqG,SAAagE,KAAK0X,eAAiBC,gBAAcC,WAUvDyuF,EAAMrqG,QAAUuE,EAAKiO,QAAQxS,YAVuC,CACpEgE,KAAKotF,aAAeh6C,aAAWkzD,aAC/B,IAAIr/F,EAASo/F,EAAMrqG,QAAUuE,EAAKiO,QAAQxS,QAC1CqqG,EAAMrqG,QAAUuE,EAAKiO,QAAQxS,QACX,SAAduE,EAAKszC,MACL7zC,KAAK0c,KAAK2pF,EAAO,EAAGp/F,GAExBjH,KAAKotF,cAAgBh6C,aAAWkzD,aAKhCtmG,KAAK0X,iBACL2uF,EAAM9tG,MAAQgI,EAAKiO,QAAQjC,WAAWhU,MACtC8tG,EAAM/tG,OAASiI,EAAKiO,QAAQjC,WAAWjU,SAI/C8tG,GACK7lG,EAAK4R,UAAY5R,EAAK4R,SAAS1b,OAAS,SACHwD,IAAlC+F,KAAK4b,UAAUrb,EAAKV,IAAItH,MACxByH,KAAKumF,YAAYhmF,EAAMP,KAAK4b,UAAUrb,EAAKV,IAAItH,OAAO,GAGtDyH,KAAK4b,UAAUrb,EAAKV,IAAItH,MAAQgI,EAAKiO,QAAQjC,WAAWhU,WAErB0B,IAAnC+F,KAAK4b,UAAUrb,EAAKV,IAAIvH,OACxB0H,KAAKumF,YAAYhmF,EAAMP,KAAK4b,UAAUrb,EAAKV,IAAIvH,QAAQ,GAGvD0H,KAAK4b,UAAUrb,EAAKV,IAAIvH,OAASiI,EAAKiO,QAAQjC,WAAWjU,SAKzEy+B,EAAQqZ,UAAUw1D,SAAW,SAAUrrG,EAAK8oC,EAAWszB,GACnD,IAEI12D,EAFAwhB,EAASlnB,EAAIqoC,gBACb2jE,EAAgB,IAAI5kF,GAKxB,GAHKF,EAAOtP,WACRsP,EAAOtP,aAEP5X,EAAI4X,SAAU,CAEd,GADAsP,EAAOk0B,iBAAkB,EACrBp7C,EAAIqe,WAAqC,SAAvBre,EAAIqe,UAAU/c,KAChC,IAAK,IAAInF,EAAI,EAAGA,EAAI6D,EAAI4X,SAAS1b,OAAQC,IAAK,CAC1C,IAAI8vG,EAAkB,IAAI7kF,GACtBpT,EAAQvO,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IACxC8vG,EAAgBr0F,YAChBq0F,EAAgBr0F,SAASrb,KAAKyX,EAAMC,SAChCD,GACAkT,EAAOsC,UAAUxV,EAAMC,QAASD,EAAM4N,SAAU5N,EAAM+N,YAAa/N,EAAMg1C,QAASh1C,EAAM+Y,iBAKhG,IAAS5wB,EAAI,EAAGA,EAAI6D,EAAI4X,SAAS1b,OAAQC,IACrC,GAAIsJ,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IAAK,CAC7B6X,EAAQvO,KAAK4b,UAAUrhB,EAAI4X,SAASzb,IACxCsJ,KAAK89F,oBAAoBvjG,EAAKgU,EAAO7X,GACrC+qB,EAAOtP,SAASrb,KAAKyX,EAAMC,SAC3BiT,EAAO4yB,eAAiB5yB,EAAO4yB,eAAiBtB,gBAAcsD,eAC9D9nC,EAAMC,QAAQqlC,KAA8B,SAAvBtlC,EAAMC,QAAQqlC,KAC/Bt5C,EAAIiU,QAAQqlC,KAAOtlC,EAAMC,QAAQqlC,KAIjD0yD,EAAc1mG,GAAKtF,EAAIsF,GAAK,kBAC5B0mG,EAAcrmG,MAAM6Y,KAAO,OAC3BwtF,EAAcrmG,MAAM8Y,YAAc,OAClCutF,EAAc3sF,oBAAsB,UACpC2sF,EAAc5sF,kBAAoB,UAClC8H,EAAOvhB,MAAQ3F,EAAI2F,MACnBqmG,EAAcp0F,YACdo0F,EAAcvyD,kBAAmB,EAC7Bz5C,EAAIqe,YACJ2tF,EAAc7xE,aAAe,UAE5Bn6B,EAAIqe,WAAqC,SAAvBre,EAAIqe,UAAU/c,MACjC4lB,EAAOtP,SAASrb,KAAKyvG,OAGxB,CACD,IAAI3sE,EAAkBvJ,GAAYrwB,KAAK45B,iBACnCA,IACA35B,EAAU25B,EAAgBr/B,EAAKyF,OAE9BC,IACDA,EAAU1F,EAAIsoC,KAAK7iC,OAEvByhB,EAAOtP,SAASrb,KAAKmJ,GAGzB,IAAIk+C,EACJA,EAAiB9tB,GAAYrwB,KAAK65B,iBAE7Bt/B,EAAI4X,SAAWsP,EAASxhB,GAASinC,YADlCiX,IAIgD5jD,EAAI6e,YAAY3iB,OAAS8D,EAAI6e,YAAY,GAAGnZ,QAAU1F,EAAIsF,IAE9G,IAAI+Y,EAAYre,EAAI4X,SAAWo0F,EAAgB9kF,EAC/ClnB,EAAI8tD,gBAAgBroD,KAAK65B,eAAgBjhB,EAAW5Y,KAAKJ,QAAQC,KAAIsW,GAAanW,OAClFzF,EAAIktD,UAAUznD,KAAK65B,eAAgBjhB,GACnCre,EAAIwtD,UAAU/nD,KAAK65B,eAAgB75B,KAAKo6B,OAAQxhB,EAAWyqB,GACpC,aAAnB9oC,EAAI6D,MAAMvC,MAAuBtB,EAAIiU,SAAWjU,EAAIiU,QAAQ2D,SAAS1b,OAAS,GAC9E8D,EAAIiU,QAAQ2D,SAAS,aAAc2T,IACnC1E,GAA0B7mB,GAC1B6rB,GAA4BpmB,KAAMzF,KAGlCknB,EAAOpC,QAAQ,IAAIC,GAAK/kB,EAAIhC,MAAOgC,EAAIjC,SACnCmpB,aAAkBqE,GAClBrE,EAAOlC,QAAQkC,EAAOjC,aAAa,GAGnCiC,EAAOlC,QAAQkC,EAAOjC,cAGL,SAArBjlB,EAAIiU,QAAQqlC,MAAmBt5C,EAAIiU,QAAQ6lC,eAAiBtB,gBAAcsD,gBAC1EkX,GAAahzD,EAAIiU,QAASjU,EAAIiU,QAAQzS,QAASxB,EAAIiU,QAAQxS,QAASgE,KAAMzF,EAAIiU,QAAQqlC,MAEtFt5C,aAAeua,IAAQva,EAAIqe,YAAcre,EAAIhC,MAAQkpB,EAAOzU,YAAYzU,OAASgC,EAAIjC,OAASmpB,EAAOzU,YAAY1U,SACjHmpB,EAAOjgB,OAAOxK,GAAKyqB,EAAOzU,YAAYhW,GAAKyqB,EAAOjgB,OAAOvK,GAAKwqB,EAAOzU,YAAY/V,IACjFsD,EAAIhC,MAAQkpB,EAAOlpB,MAAQkpB,EAAOzU,YAAYzU,MAC9CgC,EAAIjC,OAASmpB,EAAOnpB,OAASmpB,EAAOzU,YAAY1U,OAChDmpB,EAAOpC,QAAQ,IAAIC,GAAK/kB,EAAIhC,MAAOgC,EAAIjC,SACvCmpB,EAAOlC,QAAQkC,EAAOjC,cAEtBjlB,EAAIqe,WAAoC,SAAvBre,EAAIqe,UAAU/c,MAAmBtB,EAAI4X,UAAY5X,EAAI4X,SAAS1b,OAAS,GACxFuJ,KAAKymG,oBAAoBlsG,IAGjCw8B,EAAQqZ,UAAUq2D,oBAAsB,SAAUlsG,GAC9C,IAAK,IAAI7D,EAAI,EAAGA,EAAI6D,EAAI4X,SAAS1b,OAAQC,IAAK,CAC1C,IAAI6X,EAAQvO,KAAKqgB,UAAU9lB,EAAI4X,SAASzb,IACxC6X,EAAMxS,QAAUwS,EAAMC,QAAQzS,QAC9BwS,EAAMvS,QAAUuS,EAAMC,QAAQxS,QAC1BuS,EAAM4D,UAAY5D,EAAM4D,SAAS1b,OAAS,GAC1CuJ,KAAKymG,oBAAoBl4F,KAIrCwoB,EAAQqZ,UAAUpW,WAAa,WAC3B,OAAO,GAEXjD,EAAQqZ,UAAU0tD,oBAAsB,SAAUvjG,EAAKgU,EAAOuU,GACtDvoB,EAAIqe,WAAoC,UAAvBre,EAAIqe,UAAU/c,OAC1B0S,EAAMhW,QACPgW,EAAMC,QAAQoL,oBAAsB,UACpCrL,EAAMqL,oBAAsB,WAE3BrL,EAAMjW,SACPiW,EAAMoL,kBAAoB,UAC1BpL,EAAMC,QAAQmL,kBAAoB,WAElCmJ,GAA4B,kBAAnBvoB,EAAI6D,MAAMvC,OACnB0S,EAAMm4C,SAAW5jC,KAI7BiU,EAAQqZ,UAAUknD,UAAY,WACrBt3F,KAAKw7B,YACNx7B,KAAK07B,MAAM5kC,KAAKkJ,KAAKJ,QAAQC,IAC7BG,KAAK07B,MAAM17B,KAAKJ,QAAQC,IAAMG,OAGtC+2B,EAAQqZ,UAAU6lD,aAAe,WAC7B,IACIyQ,EAAc1mG,KAAK85B,eAAejiC,SAClCA,GACAsmF,MACIpkD,QAAS/5B,KAAKi7F,YAAY0L,KAAK3mG,MAAOg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MACvEm2E,SAAWr5C,IAAKqW,OAAKyzD,EAAGxwB,aAAcljC,eAAaykC,UAEvDuG,OACInkD,QAAS/5B,KAAKg7F,aAAa2L,KAAK3mG,MAAOg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MACxEm2E,SAAWr5C,IAAKqW,OAAK0zD,EAAGzwB,aAAcljC,eAAaykC,UAEvDmF,KACI/iD,QAAS/5B,KAAK86F,WAAW6L,KAAK3mG,MAAOg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MACtEm2E,SAAWr5C,IAAKqW,OAAK8G,EAAGm8B,aAAcljC,eAAaykC,UAEvDmvB,QACI/sE,QAAS/5B,KAAKk9F,cAAcyJ,KAAK3mG,MAAOg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MACzEm2E,SAAWr5C,IAAKqW,OAAKiqD,SAEzBzC,WACI5gE,QAAS/5B,KAAK26F,UAAUgM,KAAK3mG,MAAOg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MACrEm2E,SAAWr5C,IAAKqW,OAAK4zD,EAAG3wB,aAAcljC,eAAaykC,UAEvDkkB,MACI9hE,QAAS/5B,KAAK67F,KAAK8K,KAAK3mG,MAAOg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAChEm2E,SAAWr5C,IAAKqW,OAAK6zD,EAAG5wB,aAAcljC,eAAaykC,UAEvDmkB,MACI/hE,QAAS/5B,KAAK87F,KAAK6K,KAAK3mG,MAAOg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAChEm2E,SAAWr5C,IAAKqW,OAAK8zD,EAAG7wB,aAAcljC,eAAaykC,UAEvDuvB,SACIntE,QAAS/5B,KAAKo7F,aAAauL,KAAK3mG,KAAM,MACtCg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAKg0D,IAC7DxwB,UAAW,MAEfywB,YACIrtE,QAAS/5B,KAAKo7F,aAAauL,KAAK3mG,KAAM,SACtCg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAKk0D,OAC7D1wB,UAAW,SAEf2wB,WACIvtE,QAAS/5B,KAAKo7F,aAAauL,KAAK3mG,KAAM,QACtCg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAKo0D,MAC7D5wB,UAAW,QAEf6wB,WACIztE,QAAS/5B,KAAKo7F,aAAauL,KAAK3mG,KAAM,QACtCg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAKs0D,MAC7D9wB,UAAW,QAEf+wB,WACI3tE,QAAS/5B,KAAK+9F,gBAAgB4I,KAAK3mG,MACnCg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAKw0D,KAEjEn1B,SACIz4C,QAAS/5B,KAAK4nG,eAAejB,KAAK3mG,MAClCg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAK00D,SAEjEC,iBAEI9tE,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAK40D,MAEjEC,qBAEIhuE,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAK40D,IAAK3xB,aAAcljC,eAAaykC,UAEjGswB,mBACIluE,QAAS/5B,KAAK+9F,gBAAgB4I,KAAK3mG,MACnCg6B,WAAYh6B,KAAKg6B,WAAW2sE,KAAK3mG,MAAOm2E,SAAWr5C,IAAKqW,OAAK+0D,SAGrEloG,KAAKmoG,mBAAmBzB,EAAa7uG,IAEzCk/B,EAAQqZ,UAAUg4D,iBAAmB,SAAUC,EAAYxwG,GAEvD,IAAK,IADDd,EACK8F,EAAK,EAAGohB,EAAKC,OAAOC,KAAKtmB,GAAWgF,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC/D,IAAIigC,EAAM7e,EAAGphB,GAEb,GADA9F,EAAUc,EAASilC,GACfurE,EAAWlyB,QAAQr5C,MAAQ/lC,EAAQo/E,QAAQr5C,KAAOurE,EAAWlyB,QAAQC,eAAiBr/E,EAAQo/E,QAAQC,aAAc,QAC7Gv+E,EAASilC,GAChB,SAIZ/F,EAAQqZ,UAAU+3D,mBAAqB,SAAUzB,EAAa7uG,GAC1D,IAAInB,EAAI,EACR,GAAIgwG,EACA,IAAKhwG,EAAI,EAAGA,EAAIgwG,EAAYjwG,OAAQC,IAC5BmB,EAAS6uG,EAAYhwG,GAAG2iB,OAASqtF,EAAYhwG,IACzCgwG,EAAYhwG,GAAGsjC,aACfniC,EAAS6uG,EAAYhwG,GAAG2iB,MAAM2gB,WAAa0sE,EAAYhwG,GAAGsjC,YAE1D0sE,EAAYhwG,GAAGqjC,UACfliC,EAAS6uG,EAAYhwG,GAAG2iB,MAAM0gB,QAAU2sE,EAAYhwG,GAAGqjC,UAEvD2sE,EAAYhwG,GAAGy/E,QAAQr5C,KAAO4pE,EAAYhwG,GAAGy/E,QAAQC,gBACrDv+E,EAAS6uG,EAAYhwG,GAAG2iB,MAAM88D,QAAUuwB,EAAYhwG,GAAGy/E,SAE1B,KAA7BuwB,EAAYhwG,GAAGigF,YACf9+E,EAAS6uG,EAAYhwG,GAAG2iB,MAAMs9D,UAAY+vB,EAAYhwG,GAAGigF,aAI7D32E,KAAKooG,iBAAiB1B,EAAYhwG,GAAImB,GACtCA,EAAS6uG,EAAYhwG,GAAG2iB,OACpB0gB,QAAS2sE,EAAYhwG,GAAGqjC,QAASC,WAAY0sE,EAAYhwG,GAAGsjC,WAAYm8C,QAASuwB,EAAYhwG,GAAGy/E,QAChGQ,UAAW+vB,EAAYhwG,GAAGigF,YAK1C32E,KAAKnI,SAAWA,GAGpBk/B,EAAQqZ,UAAUutD,gBAAkB,SAAUp9F,GAC1C,IAAK,IAAI1D,EAAK,EAAGohB,EAAK1d,EAAKolB,QAAS9oB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtD,IAAI6iF,EAAOzhE,EAAGphB,GACVmD,KAAK4b,UAAU8jE,KACf1/E,KAAK4b,UAAU8jE,GAAMz4D,SAAW,IAGxC,IAAK,IAAIkU,EAAK,EAAGC,EAAK76B,EAAKqlB,SAAUuV,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACnDukD,EAAOtkD,EAAGD,GACVn7B,KAAK4b,UAAU8jE,KACf1/E,KAAK4b,UAAU8jE,GAAMj+E,SAAW,IAGxClB,EAAKolB,WACLplB,EAAKqlB,aAGTmR,EAAQqZ,UAAUk4D,qBAAuB,SAAU/nG,EAAMohC,GACrD,IAAK,IAAIjrC,EAAI,EAAGA,EAAI6J,EAAKiO,QAAQ2D,SAAS1b,OAAQC,IAAK,CACnD,IAAI6X,EAAQhO,EAAKiO,QAAQ2D,SAASzb,GAClC,GAAI6X,EAAM1O,GAAI,CACV,IAAIA,EAAK0O,EAAM1O,GAAGkP,MAAMxO,EAAKV,IAAI,GAC7BA,GAAMA,EAAG/H,MAAM,YACfyW,EAAMqvB,QAAU+D,EAChB3hC,KAAKuoG,iCAAiCh6F,EAAOozB,OAM7D5K,EAAQqZ,UAAUisD,YAAc,SAAU9hG,GACtC,QAAqBN,IAAjBM,EAAIkH,UAA2C,KAAjBlH,EAAIkH,SAAiB,EAC/ClB,EAAOP,KAAK4b,UAAUrhB,EAAIkH,YAClBlB,EAAKqlB,UAAqC,IAAzBrlB,EAAKqlB,SAASnvB,SACvC8J,EAAKqlB,aAELrlB,GAAQA,EAAKqlB,WAA+C,IAAnCrlB,EAAKqlB,SAAStF,QAAQ/lB,EAAIsF,KACnDU,EAAKqlB,SAAS9uB,KAAKyD,EAAIsF,IAG/B,QAAqB5F,IAAjBM,EAAI0sB,UAA2C,KAAjB1sB,EAAI0sB,SAAiB,CACnD,IAAI1mB,EAOJ,IAPIA,EAAOP,KAAK4b,UAAUrhB,EAAI0sB,YAClB1mB,EAAKolB,SAAmC,IAAxBplB,EAAKolB,QAAQlvB,SACrC8J,EAAKolB,YAELplB,GAAQA,EAAKolB,UAA6C,IAAlCplB,EAAKolB,QAAQrF,QAAQ/lB,EAAIsF,KACjDU,EAAKolB,QAAQ7uB,KAAKyD,EAAIsF,IAEtBU,GAAQA,EAAKq9B,SAAWr9B,EAAKqlB,SAAU,CACvC,IAAIjgB,EAAiC,IAAzBpF,EAAKqlB,SAASnvB,OAC1BuJ,KAAKsoG,qBAAqB/nG,EAAMoF,MAK5CoxB,EAAQqZ,UAAUo4D,eAAiB,WAC/BxoG,KAAKojG,mBACLpjG,KAAKsqF,WACLtqF,KAAK41F,iBACL51F,KAAKqiB,SAASmuD,WAElBz5C,EAAQqZ,UAAUq4D,qBAAuB,SAAU7oG,EAAS+F,GACxD,IAAK,IAAItP,EAAI,EAAGA,EAAIuJ,EAAQnJ,OAAQJ,IAC5BuJ,EAAQvJ,GAAG8b,UACXnS,KAAKyoG,qBAAqB7oG,EAAQvJ,GAAG8b,SAAUxM,GAEnD/F,EAAQvJ,GAAG8lC,cAAgBx2B,GAGnCoxB,EAAQqZ,UAAUs4D,kBAAoB,SAAUnuG,EAAK0tC,GACjD,IAAIpT,KACA/R,OAAQ7oB,EAEZ46B,GADAA,EAAUA,EAAQhP,OAAO7lB,KAAK8Z,QACZ+L,OAAO7lB,KAAK2e,YAC9B,IAAI9iB,EACJ,IAAoB,IAAhBtB,EAAIswB,OACJ,IAAK,IAAIn0B,EAAI,EAAGA,EAAIm+B,EAAQp+B,OAAQC,IAC5Bm+B,EAAQn+B,GAAGm0B,OAAStwB,EAAIswB,SACD,SAAnBtwB,EAAI6D,MAAMvC,MAAsC,WAAnBtB,EAAI6D,MAAMvC,OACvCA,EAA0B,SAAnBtB,EAAI6D,MAAMvC,KAAkB,OAAS,UAEhDinB,EAAQklB,GAAYC,EAAQpT,EAAQn+B,GAAGmJ,GAAIhE,IAIvD,OAAOinB,GAGXiU,EAAQqZ,UAAU9xB,oBAAsB,SAAU/jB,EAAKouG,GAEnD,IAAK,IADDpT,EACK14F,EAAK,EAAGohB,EAAKje,KAAK07B,MAAO7+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAI8T,EAAOsN,EAAGphB,GAEd,GADA04F,EAAOv1F,KAAK07B,MAAM/qB,GACd3Q,KAAK0X,gBACa,QAAd69E,EAAK3pE,KAAgB,CACrB,IAAIoG,EAAYqW,GAAaroC,KAAKJ,QAAQC,IACtCi/D,EAAuB9wC,SAASC,eAAesnE,EAAK31F,QAAQC,GAAK,iBACjEG,KAAK0X,eAAiBC,gBAAc+7D,cACpC1zE,KAAKyoG,qBAAqBluG,EAAIiU,QAAQ2D,UAAU,GAEpDnS,KAAKoiB,gBAAgBy8C,WAAWtkE,EAAIiU,QAASswD,EAAsB9sC,OAAW/3B,EAAW0uG,OAAiB1uG,EAAY+F,KAAK0oG,kBAAkBnuG,EAAKg7F,EAAK31F,QAAQC,KAC/JG,KAAKyoG,qBAAqBluG,EAAIiU,QAAQ2D,UAAU,MAMhE4kB,EAAQqZ,UAAUw4D,oBAAsB,SAAU3nF,GAG9C,IAAK,IAFDs0E,EACAvjE,EAAYqW,GAAaroC,KAAKJ,QAAQC,IACjChD,EAAK,EAAGohB,EAAKje,KAAK07B,MAAO7+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAI8T,EAAOsN,EAAGphB,GAEd,GAAkB,SADlB04F,EAAOv1F,KAAK07B,MAAM/qB,IACTib,MAAkB5rB,KAAK0X,eAAgB,CAC5C,IAAIonD,EAAuB9wC,SAASC,eAAesnE,EAAK31F,QAAQC,GAAK,iBACrEG,KAAKoiB,gBAAgBy8C,WAAW59C,EAAM69C,EAAsB9sC,OAAW/3B,QAGvE+F,KAAK6oG,0BAA0BtT,KAK3Cx+D,EAAQqZ,UAAUwqD,kBAAoB,SAAUkO,GAE5C,IAAK,IADDhmB,KACKjmF,EAAK,EAAGksG,EAAgBD,EAAajsG,EAAKksG,EAActyG,OAAQoG,IAAM,CAC3E,IAAItC,EAAMwuG,EAAclsG,GACpBmD,KAAK4b,UAAUrhB,IACfuoF,EAAUhsF,KAAKkJ,KAAK4b,UAAUrhB,IAGtC,OAAOuoF,GAGX/rD,EAAQqZ,UAAUvkB,oBAAsB,WAEpC,IAAK,IADD0pE,EACK14F,EAAK,EAAGohB,EAAKje,KAAK07B,MAAO7+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAI8T,EAAOsN,EAAGphB,GAEd,QADA04F,EAAOv1F,KAAK07B,MAAM/qB,IACLib,MACT,IAAK,MACD5rB,KAAKgpG,uBAAuBzT,GAC5B,MACJ,IAAK,SACDv1F,KAAK08E,oBAAoB6Y,MAMzCx+D,EAAQqZ,UAAUssC,oBAAsB,SAAU6Y,GAC9C,GAAKA,EAQDv1F,KAAK6oG,0BAA0BtT,QAP/B,IAAK,IAAI14F,EAAK,EAAGohB,EAAKje,KAAK07B,MAAO7+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAI8T,EAAOsN,EAAGphB,GACVosG,EAASjpG,KAAK07B,MAAM/qB,GACxB3Q,KAAK6oG,0BAA0BI,KAO3ClyE,EAAQqZ,UAAU84D,mBAAqB,SAAU3T,GAE7C,IAAK,IADDvjE,EAAYqW,GAAaktD,EAAK31F,QAAQC,IACjCnJ,EAAI,EAAGA,EAAIsJ,KAAKs7B,cAAc7kC,OAAQC,IAAK,CAChD,IAAIkJ,EAAUI,KAAKs7B,cAAc5kC,GAC7BkJ,aAAmB4iC,KACnB5iC,EAAQg2C,gBAAkB,GAE9Bh2C,EAAQyf,QAAQ,IAAIC,GAAK1f,EAAQrH,MAAOqH,EAAQtH,SAChDsH,EAAQ2f,QAAQ3f,EAAQ4f,aACxB+1E,EAAKnzE,gBAAgBu2C,cAAc/4D,EAAS21F,EAAK5S,aAAc3wD,KAGvE+E,EAAQqZ,UAAU+4D,gBAAkB,SAAU5T,GAC1C,IAAKv1F,KAAKopG,YAAa,CACnBppG,KAAKqpG,YAAY9T,GACbA,aAAgBx+D,IAChBw+D,EAAK5S,aAAa30B,WAAW,MAAMs7C,aAAa/T,EAAKlzE,SAAS8N,YAAa,EAAG,EAAGolE,EAAKlzE,SAAS8N,YAAa,EAAG,GAC/GolE,EAAK5S,aAAa30B,WAAW,MAAMrxC,MAAM,IAAK,MAElD,IAAIqV,EAAYqW,GAAaktD,EAAK31F,QAAQC,IAC7BG,KAAK85E,cAAc2T,gBAChCztF,KAAKupG,sBAAsBhU,EAAK5S,aAAc4S,EAAKnzE,gBAAiB4P,GACpE,IAAK,IAAIt7B,EAAI,EAAGA,EAAIsJ,KAAKs7B,cAAc7kC,OAAQC,IAAK,CAChD,IAAIkJ,EAAUI,KAAKs7B,cAAc5kC,GACjCkJ,EAAQyf,QAAQ,IAAIC,GAAK1f,EAAQrH,MAAOqH,EAAQtH,SAChDsH,EAAQ2f,QAAQ3f,EAAQ4f,aACxB+1E,EAAKnzE,gBAAgBu2C,cAAc/4D,EAAS21F,EAAK5S,aAAc3wD,GAE/DujE,aAAgBx+D,IAChBw+D,EAAK5S,aAAaziF,MAAM2F,UAAY,SAAY,EAAI,EAAK,IACzD0vF,EAAK5S,aAAaziF,MAAMspG,gBAAkB,OAE9CxpG,KAAKg1F,YAAc,OAI3Bj+D,EAAQqZ,UAAUy4D,0BAA4B,SAAUtT,GACpD,IAAI9/C,EAAQz1C,KACM,QAAdu1F,EAAK3pE,MAAmB5rB,KAAKopG,cACzBppG,KAAKs7B,cAAc7kC,OAAS,GAC5BuJ,KAAKkpG,mBAAmB3T,IAEtBv1F,KAAK0X,gBAAmE,IAAhD1X,KAAK0X,eAAiBC,gBAAcwhF,SAC1DxhF,gBAAcC,WAAa5X,KAAK0X,gBAAmBvB,GAAanW,OAAwC,IAA9BA,KAAKqiB,SAAS8N,YAC5FnwB,KAAKmpG,gBAAgB5T,GAEfv1F,KAAKg1F,cACXh1F,KAAKg1F,YAAcn+C,WAAW,WAC1BpB,EAAM0zD,gBAAgB5T,IACvB,OAKfx+D,EAAQqZ,UAAU8hC,qBAAuB,SAAU3xE,EAAMmhC,EAAgB+nE,GACrE,IAAItvB,EACAhpD,GAAkBnxB,KAAKmxB,gBAAiBnxB,KAAKmxB,cAAc/yB,MAC/D,GAAImC,aAAgBuU,IAAQqc,GAAiBrd,GAAQvT,GAAO,CAGxD,IAAK,IAFDw7B,EAAQx7B,EAAKw7B,MACb2tE,GAAU,EACLhzG,EAAI,EAAGA,EAAIqlC,EAAMtlC,OAAQC,IAC9ByjF,EAAcn6E,KAAKmiD,WAAW5hD,EAAKiO,QAASutB,EAAMrlC,GAAGmJ,KAChD6hC,EAAiBoN,iBAAeC,OAASrN,EAAiBoN,iBAAekL,UACtEvY,GAAqB1F,EAAMrlC,GAAIgrC,KAC/By4C,EAAYv8C,SAAW6rE,EACvBC,GAAU,GAIlBA,GACA1pG,KAAKse,oBAAoB/d,KAKrCw2B,EAAQqZ,UAAU44D,uBAAyB,SAAUzT,GACjD,IAAI31F,EACAk/D,EAAuB9wC,SAASC,eAAesnE,EAAK31F,QAAQC,GAAK,iBACjEmyB,EAAYqW,GAAaktD,EAAK31F,QAAQC,IAC1C,GAAKsW,GAAanW,MAUdA,KAAKqiB,SAASmsE,yBAVO,CACrB,IAAK,IAAI93F,EAAI,EAAGA,EAAIsJ,KAAKs7B,cAAc7kC,OAAQC,KAC3CkJ,EAAUI,KAAKs7B,cAAc5kC,IACrB2oB,QAAQ,IAAIC,GAAK1f,EAAQrH,MAAOqH,EAAQtH,SAChDsH,EAAQ2f,QAAQ3f,EAAQ4f,cAAgBxf,KAAK0X,eAAiBC,gBAAcwhF,SAC5En5F,KAAKoiB,gBAAgBu2C,cAAc/4D,EAASk/D,EAAsB9sC,GAEtEhyB,KAAKupG,sBAAsBzqC,EAAsB9+D,KAAKoiB,gBAAiB4P,KAO/E+E,EAAQqZ,UAAUyhC,qBAAuB,SAAU83B,GAC/C,GAAI3pG,KAAK8xE,oBAAqB,CAC1B,IAAK,IAAIp7E,EAAI,EAAGA,EAAIsJ,KAAKqiB,SAASyqE,iBAAiBr2F,OAAQC,IAAK,CAC5D,IAAI6D,EAAMyF,KAAK4b,UAAU5b,KAAKqiB,SAASyqE,iBAAiBp2F,IACxDsJ,KAAKugB,eAAehmB,GAExByF,KAAK8xE,qBAAsB,EAE/B+B,cAAc81B,IAGlB5yE,EAAQqZ,UAAUw5D,uBAAyB,SAAU78F,GACjD,IAAK,IAAI1W,EAAI,EAAGA,EAAI0W,EAAOyB,QAAQ2D,SAAS1b,OAAQJ,IAAK,CACrD,IAAIuJ,EAAUmN,EAAOyB,QAAQ2D,SAAS9b,GAClCuJ,aAAmB0kB,KACnB1kB,EAAQk4C,YAAa,EACrBl4C,EAAQyf,QAAQ,IAAIC,GAAKvS,EAAOxU,MAAOwU,EAAOzU,SAC9CsH,EAAQ2f,QAAQ3f,EAAQ4f,gBAKpCuX,EAAQqZ,UAAUy+C,qBAAuB,SAAUv4F,EAAYo2B,EAAQm9E,GACnE,IAAI/qC,EAAuB9wC,SAASC,eAAe,wBAC/C+D,EAAYqW,GAAa,WAC7B,GAAkB,QAAdroC,KAAK4rB,KAAgB,CACrB,IAAK,IAAIl1B,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IAAK,CACxC,IAAIosB,EAAQ9iB,KAAKqiB,SAASyqE,iBAAiBxsE,QAAQhqB,EAAWI,IAC1DosB,GAAS,GACT9iB,KAAKqiB,SAASyqE,iBAAiBvmF,OAAOuc,EAAO,GAEjD,IAAI/V,EAAS/M,KAAK4b,UAAUtlB,EAAWI,IACvCsJ,KAAK4pG,uBAAuB78F,GAC5B/M,KAAKoiB,gBAAgBu2C,cAAc5rD,EAAOyB,QAASswD,EAAsB9sC,OAAW/3B,OAAWA,OAAWA,OAAWA,EAAW8S,EAAO8d,QAE3I,IAAK,IAAIrH,EAAI,EAAGA,EAAIqmF,EAAYpzG,OAAQ+sB,IACpCxjB,KAAKqiB,SAASyqE,iBAAiBh2F,KAAK+yG,EAAYrmF,IAElB,IAA9BxjB,KAAKqiB,SAAS8N,aACdnwB,KAAKq6E,aAAa3I,4BAGjB1xE,KAAK0X,gBACV1X,KAAK6rB,uBAIbkL,EAAQqZ,UAAUm5D,sBAAwB,SAAU9nF,EAAQi2C,EAAU1lC,EAAWnsB,EAAWikG,EAAYC,QAClF,IAAdlkG,IAAwBA,GAAY,GACxC,IAAI2nF,EAAaxtF,KAAKqiB,SAASorE,gBAC/BD,EAAWx2F,GAAKgJ,KAAKqiB,SAAS8N,YAC9Bq9D,EAAWv2F,GAAK+I,KAAKqiB,SAAS8N,YAC9Bq9D,EAAWj1F,OAASyH,KAAKqiB,SAAS8N,YAClCq9D,EAAWl1F,QAAU0H,KAAKqiB,SAAS8N,YAGnC,IAAK,IAFDhoB,GAAQnI,KAAKqiB,SAASgN,iBAAmBm+D,EAAWx2F,EACpD4zE,GAAQ5qE,KAAKqiB,SAASkN,eAAiBi+D,EAAWv2F,EAC7C4F,EAAK,EAAGohB,EAAKC,OAAOC,KAAKne,KAAKm9E,kBAAmBtgF,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC5E,IAAI2gF,EAAUv/D,EAAGphB,GACbqrC,EAAQloC,KAAKyd,eAAe2lD,SAASpjE,KAAKm9E,iBAAiBK,IAC3D56E,OAAO,EACP8K,OAAQ,EACM,WAAd1N,KAAK4rB,MAAqBzV,GAAanW,QAAUA,KAAK0X,gBACtD1X,KAAKqiB,SAASmsE,qBAKlB,IAAK,IAHD3uF,EAAoB,WAAdG,KAAK4rB,MAAqBzV,GAAanW,OAC7CA,KAAKqiB,SAASwqE,qBAAqBp2F,OAAS,EAC5CuJ,KAAKqiB,SAASwqE,0BAAuB5yF,EAChCkhC,EAAK,EAAGC,EAAKld,OAAOC,KAAKte,GAAMqoC,EAAMwyC,aAAcv/C,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CAC9E,IAAI56B,EAAO66B,EAAGD,GACV6uE,EAAanqG,EAAKG,KAAK4b,UAAU/b,EAAGU,IAASP,KAAK4b,UAAUssB,EAAMwyC,YAAYn6E,IAClF,GAAIypG,IAAgBA,EAAmB,WACjCA,EAAoB,UAAG,CACzB,IAAIC,GACAnoD,GAAI9hD,KAAKqiB,SAASxc,UAAUi8C,GAC5BC,GAAI/hD,KAAKqiB,SAASxc,UAAUk8C,GAC5BplC,MAAO3c,KAAKqiB,SAASxc,UAAU8W,OAEnC,GAAIxG,GAAanW,MAAO,CACpB,GAAIA,KAAKqiB,SAAS8N,YAAc,EAAG,CAC/B,GAAIq9D,EAAWx2F,EAAI,GAAKgJ,KAAKqiB,SAASgN,iBAAmB,EAAG,CACxD,IAAI66E,EAAgBlqG,KAAKqiB,SAASkN,eAAiB,EAAIvvB,KAAKqiB,SAASkN,eAAiB,EACtF3sB,GAAQuF,EAAO,EAAIA,EAAO,GAAK,KAC/BuF,GAAU1N,KAAKotF,YAAch6C,aAAWk6C,gBAAmB,GAAK4c,GAAiB,UAGjFtnG,EAAO,MACP8K,EAAQ,MAER1N,KAAKotF,YAAch6C,aAAWi6C,kBAC9BrtF,KAAKotF,YAAcptF,KAAKotF,aAAeh6C,aAAWi6C,iBAElDrtF,KAAKotF,YAAch6C,aAAWk6C,kBAC9BttF,KAAKotF,YAAcptF,KAAKotF,aAAeh6C,aAAWk6C,sBAItD1qF,GAAQ4qF,EAAWx2F,EAAI,EAAImR,GAAQnI,KAAKqiB,SAASgN,kBAAoB,KACrE3hB,GAAS8/E,EAAWv2F,EAAI,EAAI2zE,GAAQ5qE,KAAKqiB,SAASkN,gBAAkB,KAExEvvB,KAAK2iF,aAAaziF,MAAM0C,KAAOA,EAC/B5C,KAAK2iF,aAAaziF,MAAM6C,IAAM2K,EAC9Bu8F,EAAenoD,GAAK9hD,KAAKqiB,SAASgN,iBAAmB46E,EAAettF,MACpEstF,EAAeloD,GAAK/hD,KAAKqiB,SAASkN,eAAiB06E,EAAettF,MAEtE,IAAIwtF,GAAW,EACXL,IACAK,GAAW,GAEfnqG,KAAK4pG,uBAAuBI,GAC5BtyC,EAASiB,cAAcqxC,EAAWx7F,QAASiT,EAAQuQ,GAAa0lC,EAASD,WAAa5xD,EAAaokG,OAAiBhwG,OAAWA,OAAWA,EAAWkwG,KAAcnqG,KAAK0X,gBAAkBqyF,QAM1MhzE,EAAQqZ,UAAUwlD,eAAiB,SAAUsN,GACzC,GAAIljG,KAAKoqG,eACL,IAAK,IAAI1zG,EAAI,EAAGA,EAAIsJ,KAAK2e,WAAWloB,OAAQC,IAAK,CAC7C,IAAI6N,EAAYvE,KAAK2e,WAAWjoB,GAChCsJ,KAAKoqG,eAAexU,eAAerxF,EAAWvE,MAC9C,IAAIyhB,EAASzhB,KAAK2e,WAAWjoB,GAAG8X,QAChC,GAAIiT,EAAQ,CACR,IAAI4oF,EAAc5oF,EAAOtP,SAAS,GAC9B/b,EAAOi0G,EAAYj0G,KACvBmO,EAAUi5C,kBAAkBj5C,EAAW8lG,EAAkC,4BAArBrqG,KAAKo6B,OAAOv+B,MAA2D,qBAArBmE,KAAKo6B,OAAOv+B,KAC9GmE,KAAKo6B,OAAO/oB,iBAAcpX,GAC1BowG,EAAYj0G,OAASA,IACrBqrB,EAAOpC,QAAQ,IAAIC,IACnBmC,EAAOlC,QAAQkC,EAAOjC,aACJ,QAAdxf,KAAK4rB,MAAmBs3E,GACxBljG,KAAKse,oBAAoB/Z,OAQjDwyB,EAAQqZ,UAAUwnB,UAAY,SAAUvoB,GACpCrvC,KAAKoiB,gBAAgBw1C,UAAU53D,KAAKyvE,cAAepgC,IAGvDtY,EAAQqZ,UAAUi5D,YAAc,SAAU9T,GACtC,IAAIh9F,EACAD,EAGJ,GAFAC,EAAQg9F,EAAK9+B,cAAgB8+B,EAAK5S,aAAapqF,MAAQyH,KAAKqiB,SAAS8N,YACrE73B,EAASi9F,EAAK7+B,eAAiB6+B,EAAK5S,aAAarqF,OAAS0H,KAAKqiB,SAAS8N,YACtD,QAAdolE,EAAK3pE,KAAgB,CACXmiC,GAAeC,WAAWunC,EAAK5S,cACrC2nB,UAAU,EAAG,EAAG/xG,EAAOD,KAInCy+B,EAAQqZ,UAAU0nC,mBAAqB,WACnC93E,KAAKqiB,SAASsrE,gBAAgB3tF,KAAKyvE,cAAcM,WAAY/vE,KAAKyvE,cAAcO,WAChF7gD,GAAYnvB,MACRmW,GAAanW,OACbA,KAAKqiB,SAASmsE,sBAItBz3D,EAAQqZ,UAAUs9C,UAAY,SAAU3xF,EAASC,GAC7C,IAAI4c,EAAYoV,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,WACtD+Y,IACAA,EAAUm3D,WAAah0E,EACvB6c,EAAUo3D,UAAYh0E,IAI9B+6B,EAAQqZ,UAAUogC,QAAU,SAAUj4E,EAAOD,GACzC,GAAI0H,KAAK2iF,eAAiB3iF,KAAKwhF,cAAe,CAC1C,IAAInhF,EAAW8tB,GAAanuB,MAC5BzH,GAAS8H,EAAS9H,MAClBD,GAAU+H,EAAS/H,OACnB,IAAIkJ,EAASxB,KAAK85E,cAAc2T,gBAChCjsF,EAAOxK,GAAKgJ,KAAKqiB,SAAS8N,YAC1B3uB,EAAOvK,GAAK+I,KAAKqiB,SAAS8N,YAC1B3uB,EAAOjJ,OAASyH,KAAKqiB,SAAS8N,YAC9B3uB,EAAOlJ,QAAU0H,KAAKqiB,SAAS8N,YAC/B,IAAI0/D,EAAuB,QAAd7vF,KAAK4rB,KAAiB,EAAI,IACnC+2D,EAA6B,QAAd3iF,KAAK4rB,KACpB+b,GAAmB3nC,KAAKJ,QAAQC,IAAMG,KAAK2iF,aAC3C3+C,EAAmB,WAAdhkC,KAAK4rB,MACT5rB,KAAKwT,YAAc4C,qBAAmBC,eAAmBrW,KAAKqiB,SAASyN,cAAgBv3B,EACxF0rC,EAAmB,WAAdjkC,KAAK4rB,MACT5rB,KAAKwT,YAAc4C,qBAAmBC,eAAmBrW,KAAKqiB,SAASwN,eAAiBv3B,EAC7FqqF,EAAa/9C,aAAa,SAAUirD,EAAS7rD,GAAG1lC,YAChDqkF,EAAa/9C,aAAa,UAAWirD,EAAS5rD,GAAG3lC,YACjD,IAAI0sD,GAASzyD,MAASA,EAAM+F,WAAYhG,OAAUA,EAAOgG,YACzD0B,KAAK6hG,gBAAgB3hG,MAAM3H,MAAQA,EAAQ,KAC3CyH,KAAK6hG,gBAAgB3hG,MAAM5H,OAASA,EAAS,KAC7C8wC,GAAgBT,GAAkB3oC,KAAKJ,QAAQC,IAAKmrD,GACpD5hB,G9Cx2GZ,SAAgC/F,GAM5B,OAJqBvE,GAAkBuE,GAEVwE,uBAAuB,wBACtB,G8Cm2GN0iE,CAAgBvqG,KAAKJ,QAAQC,IAAKmrD,GAClD,IAAIw/C,EAAaroF,GAAmBniB,KAAKJ,QAAQC,IACjDupC,GAAgBohE,EAAYx/C,GAC5Bw/C,EAAWvrF,WAAW/e,MAAM3H,MAAQA,EAAQ,KAC5CiyG,EAAWvrF,WAAW/e,MAAM5H,OAASA,EAAS,KAC9C,IAAImyG,EAAY7hE,GAAgB5oC,KAAKJ,QAAQC,IAC7CupC,GAAgBqhE,EAAWz/C,GAC3BhrD,KAAKoiB,gBAAgB06C,WAAW98D,KAAKu7B,aAAckvE,EAAWzqG,KAAKqiB,SAASxc,UAAW7F,KAAK0uB,cAAe1uB,KAAKgvB,OAAQhvB,KAAKivB,QAC7Hma,GAAgBP,GAAsB7oC,KAAKJ,QAAQC,IAAKmrD,GACxDhrD,KAAKgyB,UAAU9xB,MAAM3H,MAAQA,EAAQ,KACrCyH,KAAKgyB,UAAU9xB,MAAM5H,OAASA,EAAS,KACrB,QAAd0H,KAAK4rB,MAAoBzV,GAAanW,OACtCA,KAAK6rB,sBAES,QAAd7rB,KAAK4rB,MAAkBzV,GAAanW,OACpCA,KAAKqiB,SAASmsE,uBAK1Bz3D,EAAQqZ,UAAUsuB,gBAAkB,WAChC,IAAIl9D,EAASxB,KAAK85E,cAAc2T,gBAChCjsF,EAAOxK,GAAKgJ,KAAKqiB,SAAS8N,YAC1B3uB,EAAOvK,GAAK+I,KAAKqiB,SAAS8N,YAC1B3uB,EAAOjJ,OAASyH,KAAKqiB,SAAS8N,YAC9B3uB,EAAOlJ,QAAU0H,KAAKqiB,SAAS8N,YAC/BnwB,KAAKoiB,gBAAgB06C,WAAW98D,KAAKu7B,aAAcqN,GAAgB5oC,KAAKJ,QAAQC,IAAKG,KAAKqiB,SAASxc,UAAW7F,KAAK0uB,cAAe1uB,KAAKgvB,OAAQhvB,KAAKivB,QACpJjvB,KAAKoiB,gBAAgBs8C,gBAAgB1+D,KAAKqiB,SAASxc,UAAyB,QAAd7F,KAAK4rB,MACnE5rB,KAAK2kE,iBACL3kE,KAAKi5F,iBAAiBz3F,IAM1Bu1B,EAAQqZ,UAAUs6D,iBAAmB,WACjC,GAAI1qG,KAAK2iF,aAAc,CACnB,IAAI3uD,EAAO8U,GAAmB9oC,KAAKJ,QAAQC,IAC3C,GAAIm0B,GAAQA,EAAKuQ,WAEb,IAAK,IADDl5B,EAAW2oB,EAAKuQ,WAAW9tC,OACtBC,EAAI,EAAGA,EAAI2U,EAAU3U,IAC1Bs9B,EAAK+K,YAAY/K,EAAKuQ,WAAW,MASjDxN,EAAQqZ,UAAU6oD,iBAAmB,SAAUz3F,GAC3CxB,KAAK0qG,mBACL,IAAIC,EAAkB7hE,GAAmB9oC,KAAKJ,QAAQC,IACtD,GAAI8qG,EAAiB,CACjB,IAAIj0G,EAAI,EACR8K,EAASxB,KAAKqiB,SAASorE,eAAc,GACrC,IAAIz2F,GAAKgJ,KAAKqiB,SAASxc,UAAUi8C,GAAKtgD,EAAOxK,GAAKgJ,KAAKqiB,SAAS8N,YAC5Dl5B,GAAK+I,KAAKqiB,SAASxc,UAAUk8C,GAAKvgD,EAAOvK,GAAK+I,KAAKqiB,SAAS8N,YAC5D73B,EAASkJ,EAAOlJ,OAAS0H,KAAKqiB,SAAS8N,YACvC53B,EAAQiJ,EAAOjJ,MAAQyH,KAAKqiB,SAAS8N,YACzConC,GAAgB+G,yBAAyBt+D,KAAK+6B,aAAawjC,WAAYv+D,KAAKJ,QAAS5I,EAAGC,EAAGsB,EAAOD,GAClG,IAAIsuC,GACA/mC,GAAI8qG,EAAgB9qG,GAAK,OAAQ7I,EAAGA,EACpCC,EAAGA,EACHqB,OAAQA,EACRC,MAAOA,EAAOf,MAAO,EAAGqvC,OAAQ,GAAI5tB,YAAa,EACjDF,KAAM/Y,KAAK+6B,aAAawjC,WAAW/kD,MAAO8iB,QAAS,EACnDwK,OAAQ,EAAGC,OAAQ,EAAGnJ,SAAS,EAAMoJ,UAAW,KAGpD,GADAhnC,KAAKoiB,gBAAgBi8C,SAASssC,EAAiB/jE,GAC3C5mC,KAAK+6B,aAAa6vE,eAAgB,CAClC,IAAIt0G,EAAa0J,KAAKqiB,SAASqtE,aAAaluF,GAC5C,IAAK9K,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IAC/BsJ,KAAKoiB,gBAAgB+yC,SAASw1C,GAC1BlyF,MAAO,uBACPM,KAAM,OAAQ8tB,OAAQ,UAAW5tB,YAAa,EAAG+tB,UAAW,QAC5D1K,QAAS,EAAGtlC,EAAG,EAAGC,EAAG,EAAGsB,MAAO,EAAGD,OAAQ,EAAGd,MAAO,EAAGsvC,OAAQ,EAAGC,OAAQ,EAAGnJ,SAAS,EACtFhrB,YACI5b,GAAIV,EAAWI,GAAGQ,GAAK8I,KAAKqiB,SAASxc,UAAUi8C,IAAM9hD,KAAKqiB,SAAS8N,YACnEl5B,GAAIX,EAAWI,GAAGS,GAAK6I,KAAKqiB,SAASxc,UAAUk8C,IAAM/hD,KAAKqiB,SAAS8N,aAEvExkB,UACI3U,GAAIV,EAAWI,GAAGU,GAAK4I,KAAKqiB,SAASxc,UAAUi8C,IAAM9hD,KAAKqiB,SAAS8N,YACnEl5B,GAAIX,EAAWI,GAAGW,GAAK2I,KAAKqiB,SAASxc,UAAUk8C,IAAM/hD,KAAKqiB,SAAS8N,aACpEtwB,GAAIvJ,EAAWI,GAAGS,KAAOb,EAAWI,GAAGW,GAAK,kBAAoB,qBAMvF0/B,EAAQqZ,UAAU0lD,iBAAmB,WACjC,IAAInlF,EAAO,EAC2B,aAAlC3Q,KAAK+6B,aAAa1pB,YACdrR,KAAK+6B,aAAaxiC,MAAQyH,KAAK+6B,aAAaziC,SAC5CqY,EAAO3Q,KAAK+6B,aAAaziC,OACzB0H,KAAK+6B,aAAaziC,OAAS0H,KAAK+6B,aAAaxiC,MAC7CyH,KAAK+6B,aAAaxiC,MAAQoY,GAI1B3Q,KAAK+6B,aAAaziC,OAAS0H,KAAK+6B,aAAaxiC,QAC7CoY,EAAO3Q,KAAK+6B,aAAaxiC,MACzByH,KAAK+6B,aAAaxiC,MAAQyH,KAAK+6B,aAAaziC,OAC5C0H,KAAK+6B,aAAaziC,OAASqY,IAOvComB,EAAQqZ,UAAUy6D,YAAc,SAAUC,EAAUjrG,GAChD,GAAIirG,EACIA,IACA9qG,KAAK07B,MAAM5kC,KAAKg0G,EAASjrG,IACzBG,KAAK07B,MAAMovE,EAASjrG,IAAMirG,EAC1BA,EAASC,eAAeD,GACxBA,EAAS1oF,gBAAgBy1C,YACzBizC,EAAStV,WAAWsV,GACpB9qG,KAAKgrG,YAAYF,QAGpB,CACD,IAAK,IAAIp0G,EAAI,EAAGA,EAAIsJ,KAAK07B,MAAMjlC,OAAQC,IAC/BsJ,KAAK07B,MAAMhlC,KAAOmJ,IAClBirG,EAAY9qG,KAAK07B,MAAM77B,IAG/BG,KAAK07B,MAAM77B,QAAM5F,EACjB,IAAI6oB,EAAQ9iB,KAAK07B,MAAMpb,QAAQzgB,GAC/BG,KAAK07B,MAAMn1B,OAAOuc,EAAO,KAGjCiU,EAAQqZ,UAAU46D,YAAc,SAAUF,GACtC,GAAIA,EAAU,CACV,IAAIpzC,EAAW,IAAIH,GAAgBuzC,EAASjrG,GAAI,IAAI00D,IAAe,GAC/DlJ,EAAIr9B,SAASC,eAAe68E,EAASlrG,QAAQC,GAAK,iBAClDmyB,EAAYqW,GAAayiE,EAASlrG,QAAQC,IAC9CG,KAAKupG,sBAAsBl+C,EAAGy/C,EAAS1oF,iBAAmBs1C,EAAU1lC,OAAW/3B,OAAWA,GAAW,KAG7G88B,EAAQqZ,UAAU66D,uBAAyB,SAAU1qG,EAAMwrB,EAAem/E,GAGtE,IAAK,IADDz0G,EAAS8J,EAAK9J,OACTC,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC7B,IAAI6D,EAAMgG,EAAK7J,GACXy0G,GAAa,EACbC,GAAa,EACbC,EAAmBt/E,EAAcsV,kBACjC9mC,aAAeua,IACfq2F,EAAiC,SAAnB5wG,EAAI6D,MAAMvC,MAAwC,aAApBtB,EAAI6D,MAAMA,QACL,IAA5C7D,EAAI6D,MAAM+oD,SAASD,WAAWI,WACX,mBAApB/sD,EAAI6D,MAAMA,MACdgtG,EAAiC,SAAnB7wG,EAAI6D,MAAMvC,MAAuC,mBAApBtB,EAAI6D,MAAMA,MAChDqW,GAAUla,IAAU8wG,EAAmB9pE,oBAAkB7sB,SAAWy2F,IACrEE,IAAuC9pE,oBAAkB7sB,QAExDY,GAAU/a,EAAK,cAAkB8wG,EAAmB9pE,oBAAkB9rB,kBAAoB21F,IAC3FC,IAAuC9pE,oBAAkB9rB,iBAExDH,GAAU/a,EAAK,cAAkB8wG,EAAmB9pE,oBAAkBvrB,kBAAoBo1F,IAC3FC,IAAuC9pE,oBAAkBvrB,iBAExDV,GAAU/a,EAAK,SAAa8wG,EAAmB9pE,oBAAkB7rB,aAAe01F,IACjFC,IAAuC9pE,oBAAkB7rB,YAExDJ,GAAU/a,EAAK,SAAa8wG,EAAmB9pE,oBAAkBxrB,aAAeq1F,IACjFC,IAAuC9pE,oBAAkBxrB,YAExDT,GAAU/a,EAAK,UAAc8wG,EAAmB9pE,oBAAkB1rB,cAAgBu1F,IACnFC,IAAuC9pE,oBAAkB1rB,aAExDP,GAAU/a,EAAK,UAAc8wG,EAAmB9pE,oBAAkB3rB,cAAgBw1F,IACnFC,IAAuC9pE,oBAAkB3rB,aAExDN,GAAU/a,EAAK,cAAkB8wG,EAAmB9pE,oBAAkB5rB,kBAAoBy1F,IAC3FC,IAAuC9pE,oBAAkB5rB,iBAExDL,GAAU/a,EAAK,cAAkB8wG,EAAmB9pE,oBAAkBzrB,kBAAoBs1F,IAC3FC,IAAuC9pE,oBAAkBzrB,kBAGxDvb,aAAeoZ,IACfu3F,IACDG,GAAsC9pE,oBAAkB1oB,SAExD1E,GAAiB5Z,GACjB8wG,GAAsC9pE,oBAAkB84B,gBAGxDgxC,IAAuC9pE,oBAAkB84B,gBAEzDhmD,GAAiB9Z,GACjB8wG,GAAsC9pE,oBAAkB+4B,gBAGxD+wC,IAAuC9pE,oBAAkB+4B,kBAIxD4wC,IACDG,GAAsC9pE,oBAAkB1oB,SAEvDvD,GAAU/a,KACX8wG,KAAwC9pE,oBAAkB9rB,gBAAkB8rB,oBAAkBzrB,gBAC1FyrB,oBAAkB3rB,YAAc2rB,oBAAkB7rB,WAAa6rB,oBAAkBxrB,WACjFwrB,oBAAkB1rB,YAAc0rB,oBAAkB5rB,gBAAkB4rB,oBAAkBvrB,kBAEzFvB,GAAUla,KACX8wG,IAAuC9pE,oBAAkB7sB,SAGjEqX,EAAcsV,kBAAoBgqE,IAI1Ct0E,EAAQqZ,UAAUykC,eAAiB,SAAUgM,EAAmByqB,GAC5D,IAAIpqF,EAAO,IAAI5B,GACXyM,EAAgB/rB,KAAK0e,cAErBzG,GADsB8T,EAAcvY,YAClBxT,KAAKoiB,gBAAgBnK,iBAK3C,GAJAjY,KAAKoiB,gBAAgBnK,gBAAkBjY,KAAKogB,cACxCpgB,KAAK82E,eAAe7+D,EAAiBC,iBAAeC,oBACpDnY,KAAKk0E,kBAAkBj8D,EAAiBC,iBAAeC,oBAC3DnY,KAAKo1E,qBACDp1E,KAAKyd,eAAe+vB,eAAgB,CAWpC,GAVmC,IAA/BzhB,EAAcjS,MAAMrjB,QAAoD,IAApCs1B,EAAcpN,WAAWloB,SAC7Ds1B,EAAc7e,YAAc6e,EAAcjS,MAAM,GAAG5M,YACnD6e,EAAcgV,MAAQhV,EAAcjS,MAAM,GAAGinB,OAEjDhV,EAAcvd,QAAQ6Q,QAAQ6B,GAC9B6K,EAAcvd,QAAQ+Q,QAAQwM,EAAcvd,QAAQgR,aACpDuM,EAAcxzB,MAAQwzB,EAAcvd,QAAQjC,WAAWhU,MACvDwzB,EAAczzB,OAASyzB,EAAcvd,QAAQjC,WAAWjU,OACxDyzB,EAAchwB,QAAUgwB,EAAcvd,QAAQzS,QAC9CgwB,EAAc/vB,QAAU+vB,EAAcvd,QAAQxS,QACZ,IAA9B+vB,EAAc7e,YAAmB,CACjC,IAAK,IAAIrQ,EAAK,EAAGohB,EAAK8N,EAAcjS,MAAOjd,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC7D,IAAItC,EAAM0jB,EAAGphB,GACbtC,EAAIwB,QAAUxB,EAAIiU,QAAQzS,QAC1BxB,EAAIyB,QAAUzB,EAAIiU,QAAQxS,QAE9B,IAAK,IAAIm/B,EAAK,EAAGC,EAAKrP,EAAcpN,WAAYwc,EAAKC,EAAG3kC,OAAQ0kC,IACjDC,EAAGD,GAITn7B,KAAK85E,cAAc2T,gBAAhC,IACI8d,OAAkB,EAUtB,GATAA,EAAkB9iE,GAAmBzoC,KAAKJ,QAAQC,IAClDksB,EAAcsV,kBAAoBE,oBAAkB1oB,QAChDkT,EAAclI,WACd7jB,KAAKirG,wBAAwBl/E,EAAclI,YAAakI,IAGxD/rB,KAAKirG,uBAAuBl/E,EAAcjS,MAAOiS,GACjD/rB,KAAKirG,uBAAuBl/E,EAAcpN,WAAYoN,GAAe,IAErEA,EAAclI,WACd7jB,KAAKwrG,4BAA4Bz/E,EAAew/E,QAE/C,GAAIx/E,EAAcjS,MAAMrjB,OAASs1B,EAAcpN,WAAWloB,SAAW,GACtE,GAAIs1B,EAAcjS,MAAM,aAAchF,GAAM,CACxC,IAAIvU,EAAOwrB,EAAcjS,MAAM,GAC3B4B,GAAuB1b,KAAMO,KACxB+qG,GAAmC,kBAApB/qG,EAAKnC,MAAMvC,MAA8B0E,EAAKsb,UAC9D7b,KAAK4b,UAAUrb,EAAKsb,WAC4B,kBAA7C7b,KAAK4b,UAAUrb,EAAKsb,UAAUzd,MAAMvC,SACjC0E,EAAKqY,WAAsC,WAAxBrY,EAAKqY,UAAU/c,MAA6C,SAAxB0E,EAAKqY,UAAU/c,QACxEkwB,EAAcjS,MAAM,GAAGtG,eAAiBK,kBAAgBa,OAASb,kBAAgBiF,aAErFiT,EAAcsV,oBAAsBE,oBAAkB7sB,SAG9D,IAAIlB,IAAc83F,MAAsB/qG,EAAKiT,YAAcK,kBAAgBiF,YACvE4G,KAAgC,aAApBnf,EAAKnC,MAAMvC,MAAuB0E,EAAK6e,QAAU7e,EAAK4jB,SAAWmnF,GACjFtrG,KAAKoiB,gBAAgBm3C,mBAAmBxtC,EAAcvd,QAAQ2D,SAAS,GAAIo5F,EAAiBx/E,EAAcsV,kBAAmBrhC,KAAKqiB,SAAS8N,YAAapE,EAAcvY,YAAaxT,KAAKqiB,SAASxc,eAAW5L,EAAW6Z,GAAQvT,GAAOiT,EAAakM,QAElP,GAAIqM,EAAcpN,WAAW,aAAchL,IAAaqE,GAAchY,KAAKoiB,gBAAgBnK,iBAAkB,CAC9G,IAAI1T,EAAYwnB,EAAcpN,WAAW,GACzC3e,KAAKoiB,gBAAgB63C,qBAAqB11D,EAAWgnG,EAAiBx/E,EAAcsV,kBAAmBtV,EAAcvY,YAAaxT,KAAKqiB,SAASxc,eAAuC5L,IAA5BsK,EAAUvD,mBAAyD/G,IAA5BsK,EAAU7C,iBAA8B1B,KAAKkuC,6BAA8B35B,GAAoBhQ,WAIrSvE,KAAKoiB,gBAAgBm3C,mBAAmBxtC,EAAcvd,QAAS+8F,EAAiBx/E,EAAcsV,kBAAmBrhC,KAAKqiB,SAAS8N,YAAapE,EAAcvY,YAAaxT,KAAKqiB,SAASxc,eAAW5L,EAAW6Z,GAAQiY,IAEjNA,EAAwB,YAC1B/rB,KAAKoiB,gBAAgB24C,kBAAkBhvC,EAAew/E,EAAiBvrG,KAAKqiB,SAASxc,aAKjGkxB,EAAQqZ,UAAUu0B,eAAiB,WAC/B,IAAIzjD,EAAO,IAAI5B,GACXiqB,EAAWvpC,KAAK0e,cAChB0iB,EAAsBmI,EAAS/1B,YAKnC,GAJMxT,KAAK0X,eAAiBC,gBAAcC,YAAmD,IAApC5X,KAAK0e,cAAc5E,MAAMrjB,SAC9EuJ,KAAK0e,cAAcxR,YAAclN,KAAK0e,cAAc5E,MAAM,GAAG5M,YAC7DlN,KAAK0e,cAAclQ,QAAQtB,YAAclN,KAAK0e,cAAc5E,MAAM,GAAG5M,kBAE9CjT,IAAvB+F,KAAK0e,gBACL1e,KAAKo1E,qBACoB,OAArB7rC,EAAS/6B,SAAoB+6B,EAAS/6B,QAAQ2D,UAAYo3B,EAAS/6B,QAAQ2D,SAAS1b,QAAQ,CAG5F,GAFA8yC,EAAS/6B,QAAQ6Q,QAAQ6B,GACzBqoB,EAAS/6B,QAAQ+Q,QAAQgqB,EAAS/6B,QAAQgR,aACb,IAAzB+pB,EAASr8B,aAAqBq8B,EAASr8B,cAAgBq8B,EAAS/6B,QAAQonC,gBACxE,IAAK,IAAI/4C,EAAK,EAAGohB,EAAKsrB,EAASzvB,MAAOjd,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACxD,IAAItC,EAAM0jB,EAAGphB,GACbtC,EAAIwB,QAAUxB,EAAIiU,QAAQzS,QAC1BxB,EAAIyB,QAAUzB,EAAIiU,QAAQxS,QAGlCutC,EAAShxC,MAAQgxC,EAAS/6B,QAAQjC,WAAWhU,MAC7CgxC,EAASjxC,OAASixC,EAAS/6B,QAAQjC,WAAWjU,OAC9CixC,EAASxtC,QAAUwtC,EAAS/6B,QAAQzS,QACpCwtC,EAASvtC,QAAUutC,EAAS/6B,QAAQxS,QACpC,IAAIyvG,OAAc,EAClBA,EAAchjE,GAAmBzoC,KAAKJ,QAAQC,IAC9C,IAAI4wE,EAAkBzwE,KAAKq6E,aAAa5J,kBAYxC,GAXAlnC,EAASlI,kBAAoBE,oBAAkB1oB,QAC3C0wB,EAAS1lB,WACT7jB,KAAKirG,wBAAwB1hE,EAAS1lB,YAAa0lB,IAGnDvpC,KAAKirG,uBAAuB1hE,EAASzvB,MAAOyvB,GAC5CvpC,KAAKirG,uBAAuB1hE,EAAS5qB,WAAY4qB,GAAU,IAE1DvpC,KAAK0e,cAAclL,YAAc8tB,sBAAoB1I,aAAkB2Q,EAAmB,YAC3FvpC,KAAKoiB,gBAAgB24C,kBAAkBxxB,EAAUkiE,EAAazrG,KAAKqiB,SAASxc,WAE5E0jC,EAAS1lB,WACT7jB,KAAKwrG,4BAA4BjiE,EAAUkiE,QAE1C,GAAIliE,EAASzvB,MAAMrjB,OAAS8yC,EAAS5qB,WAAWloB,SAAW,GAC5D,GAAI8yC,EAAS5qB,WAAW,aAAchL,IAAaqE,GAAchY,KAAKoiB,gBAAgBnK,iBAAkB,CACpG,IAAI1T,EAAYglC,EAAS5qB,WAAW,GACpC3e,KAAKoiB,gBAAgB63C,qBAAqB11D,EAAWknG,EAAaliE,EAASlI,kBAAmBD,EAAqBphC,KAAKqiB,SAASxc,eAAuC5L,IAA5BsK,EAAUvD,mBAAyD/G,IAA5BsK,EAAU7C,iBAA8B1B,KAAKkuC,6BAA8B35B,GAAoBhQ,UAEjR,GAAIglC,EAASzvB,MAAM,aAAchF,GAAM,CACxC,IAAI42F,EAAaniE,EAASzvB,MAAM,GAC5B4B,GAAuB1b,KAAMupC,EAASzvB,MAAM,MACd,kBAA1B4xF,EAAWttG,MAAMvC,MAA8B6vG,EAAW7vF,UAC1D7b,KAAK4b,UAAU8vF,EAAW7vF,WAC4B,kBAAnD7b,KAAK4b,UAAU8vF,EAAW7vF,UAAUzd,MAAMvC,SACvC6vG,EAAW9yF,WAA4C,WAA9B8yF,EAAW9yF,UAAU/c,MACf,SAA9B6vG,EAAW9yF,UAAU/c,QACxB0tC,EAASzvB,MAAM,GAAGtG,eAAiBK,kBAAgBiF,WAAajF,kBAAgBa,SAEpF60B,EAASlI,oBAAsBE,oBAAkB7sB,SAGzD,IAAIgL,IAAsC,aAA1BgsF,EAAWttG,MAAMvC,OAAuB6vG,EAAWtsF,SAC/DssF,EAAWvnF,SACfnkB,KAAKoiB,gBAAgBm3C,mBAAmBhwB,EAAS/6B,QAAQ2D,SAAS,GAAIs5F,EAAaliE,EAASlI,kBAAmBrhC,KAAKqiB,SAAS8N,YAAaoZ,EAAS/1B,YAAaxT,KAAKqiB,SAASxc,UAAW4qE,EAAiB38D,GAAQy1B,EAASzvB,MAAM,OAAMyvB,EAASzvB,MAAM,GAAGtG,YAAcK,kBAAgBiF,YAA4B4G,SAInT1f,KAAK0X,eAAiBC,gBAAc+7D,eACpC1zE,KAAKoiB,gBAAgBnK,gBAAkBjY,KAAKoiB,gBAAgBnK,gBAAkBC,iBAAeG,uBAEjGrY,KAAKoiB,gBAAgBm3C,mBAAmBhwB,EAAS/6B,QAASi9F,EAAaliE,EAASlI,kBAAmBrhC,KAAKqiB,SAAS8N,YAAaoZ,EAAS/1B,YAAaxT,KAAKqiB,SAASxc,UAAW4qE,EAAiB38D,GAAQy1B,IACtMvpC,KAAKoiB,gBAAgBnK,gBAAkBjY,KAAKoiB,gBAAgBnK,iBAAmBC,iBAAeG,wBAM9G0e,EAAQqZ,UAAUo7D,4BAA8B,SAAUz/E,EAAew/E,GACrEvrG,KAAKoiB,gBAAgBm3C,mBAAmBxtC,EAAcvd,QAAQ2D,SAAS,GAAIo5F,EAAiBx/E,EAAcsV,kBAAmBrhC,KAAKqiB,SAAS8N,YAAapE,EAAcvY,YAAaxT,KAAKqiB,SAASxc,eAAW5L,EAAW6Z,GAAQiY,EAAclI,cAGjPkT,EAAQqZ,UAAUgpB,uBAAyB,SAAUpiE,EAAGC,EAAGsB,EAAOD,GAC9D0H,KAAKo1E,qBACLp1E,KAAKoiB,gBAAgBg3C,uBAAuBpiE,EAAGC,EAAGsB,EAAOD,EAAQ0H,KAAKq5D,aAAcr5D,KAAKqiB,SAASxc,YAKtGkxB,EAAQqZ,UAAUkpB,kBAAoB,SAAU15D,GAC5C,IAAIsiB,EAAaC,GAAmBniB,KAAKJ,QAAQC,IACjDG,KAAKoiB,gBAAgBk3C,kBAAkB15D,EAASsiB,EAAYliB,KAAKqiB,SAASxc,YAK9EkxB,EAAQqZ,UAAUs8C,iBAAmB,WACjC,IAAIxqE,EAAaC,GAAmBniB,KAAKJ,QAAQC,IAC7CukF,EAAcliE,EAAW+L,eAAe/L,EAAWriB,GAAK,gBACxDukF,GACAA,EAAYnlE,WAAW8f,YAAYqlD,IAI3CrtD,EAAQqZ,UAAUwzC,mBAAqB,SAAUllE,GAC7C,IAAK,IAAIhoB,EAAI,EAAGA,EAAIsJ,KAAK8Z,MAAMrjB,OAAQC,IAAK,CACxC,IAAI6J,EAAOP,KAAK8Z,MAAMpjB,GACtBgoB,EAAc5nB,KAAKyJ,GAEvB,IAAS7J,EAAI,EAAGA,EAAIsJ,KAAK2e,WAAWloB,OAAQC,IAAK,CAC7C,IAAI+uB,EAAOzlB,KAAK2e,WAAWjoB,GAC3BgoB,EAAc5nB,KAAK2uB,GAEvB,OAAO/G,GAGXqY,EAAQqZ,UAAUglC,mBAAqB,WACnC,IAAIlzD,EAAaC,GAAmBniB,KAAKJ,QAAQC,IACjD,GAAKG,KAAKogB,cAaL,CACD,IAAIurF,EAAezpF,EAAW+L,eAAe,qBACzC09E,GACAA,EAAa1sF,WAAW8f,YAAY4sE,OAhBnB,CACrB,IAAIC,EAAgB1pF,EAAW+L,eAAejuB,KAAKq5D,aAAax5D,GAAK,oBACjE+rG,GACAA,EAAc3sF,WAAW8f,YAAY6sE,GAEzC5rG,KAAK0sF,mBAGL,IAAK,IAFDnoD,EAAakE,GAAmBzoC,KAAKJ,QAAQC,IAAI0kC,WACjDh2B,OAAQ,EACH7X,EAAI6tC,EAAW9tC,OAAQC,EAAI,EAAGA,KACnC6X,EAAQg2B,EAAW7tC,EAAI,IACjBuoB,WAAW8f,YAAYxwB,KAWzCwoB,EAAQqZ,UAAU+R,WAAa,SAAUroC,EAAOja,GAC5C,IAAI2O,EACJ3O,EAAKia,EAAMja,GAAK,IAAMA,EAEtB,IAAK,IADD+Y,EAAYkB,aAAiB6H,GAAS7H,EAAQ9Z,KAAK6rG,iBAAiB7rG,KAAK4b,UAAU9B,EAAMja,KACpFnJ,EAAI,EAAGA,EAAIkiB,EAAUzG,SAAS1b,OAAQC,IACvCmJ,IAAO+Y,EAAUzG,SAASzb,GAAGmJ,KAC7B2O,EAAUoK,EAAUzG,SAASzb,IAGrC,OAAO8X,GAGXuoB,EAAQqZ,UAAU21D,kBAAoB,SAAUxlG,EAAMgE,EAAWhC,GAC7D,GAAwB,SAApBhC,EAAKnC,MAAMvC,MAAmB0E,EAAKiO,QAAQ2D,SAAS,aAAcwP,GAAQ,CAC1E,GAAyB,aAArBphB,EAAKnC,MAAMA,MAAsB,CACjC,GAAImE,GAAkD,gBAAxChC,EAAKnC,MAAM+oD,SAASD,WAAWrrD,MACtC0I,EAAU0qC,aAAc,CAC3B,IAAIlN,EAASx9B,EAAU0qC,aACnB63C,EAAWvmF,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAC7D,GAAI20E,EAAS30E,SACT,IAAK,IAAItV,EAAK,EAAGohB,EAAK6oE,EAAS30E,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC3D,IAAI0R,EAAQ0P,EAAGphB,GACf,GAAI0R,EAAMqvB,SAAWrvB,EAAM1O,KAAOU,EAAKV,GAAK,IAAMkiC,EAC9C,OAAOxzB,EAAM4D,SAAS,IAKtC,OAAO5R,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAEzD,OAAO5R,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GAE7C,OAAKnS,KAAK8rG,eAAevrG,EAAKiO,QAAQ2D,SAAS,KACtC5R,EAAK4R,SAIP5R,EAAKiO,QAHGjO,EAAKiO,QAAQ2D,SAAS,IAKzC4kB,EAAQqZ,UAAU07D,eAAiB,SAAUvrG,GACzC,OAAOA,EAAKoC,SAAgC,IAArBpC,EAAKoC,OAAOC,MAAkC,IAApBrC,EAAKoC,OAAOI,KAAmC,IAAtBxC,EAAKoC,OAAOE,OAAsC,IAAvBtC,EAAKoC,OAAOG,SAErHi0B,EAAQqZ,UAAUouD,aAAe,WAC7Bx+F,KAAKwyE,WAETz7C,EAAQqZ,UAAUw3D,eAAiB,WAC/B5nG,KAAKwyE,UACLxyE,KAAKuyE,aAAc,GAKvBx7C,EAAQqZ,UAAUoiC,QAAU,WACxB,GAAIxyE,KAAK0X,eAAiBC,gBAAc+3D,SAAU,CAC9C,IAAI2uB,EAAWrwE,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,YACrD4a,EAAO4jF,EAAS14F,MACpB80F,eAAa/tE,OAAO2xE,EAAU,QAASr+F,KAAKq6E,aAAajC,aACzDqiB,eAAa/tE,OAAO2xE,EAAU,WAAYr+F,KAAKw+F,cAC/C,IAAI5+F,EAAUouB,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,mBACpDE,GAASmlE,SAAUtlE,EAAQumC,YAAag/B,SAAU1qD,EAAM2qD,QAAQ,GAChE44B,GAAiB,EACjBz9F,OAAO,EACXX,EAAQqf,WAAW8f,YAAYn/B,GAC/B,IAAI04E,OAAc,EAclB,GAbIt4E,KAAKgnD,aACLzmD,EAAOP,KAAKgnD,WAAW+kD,qBAAqB/rG,KAAK81E,YAAa91E,MAC9Ds4E,EAAct4E,KAAKgnD,WAAWi3C,yBAAyB19F,EAAMP,KAAK81E,YAAYj2E,KAC9Em+F,IAAiBz9F,IAETX,EAAQumC,cAAgB1rB,IACxBza,KAAKulE,aAAalyB,eAAa24D,SAAUjsG,GACpCA,EAAKqlE,QACNplE,KAAKgnD,WAAWilD,4BAA4B1rG,EAAMP,KAAK81E,YAAar7D,EAAMza,SAKrFg+F,EAAgB,CACjBz9F,EAAOP,KAAK4b,UAAU5b,KAAK81E,YAAYj6D,UACvC,IAAI+Q,EAAa5sB,KAAKq6E,aAAa1B,cAAcp4E,GAAM,GAClDqsB,GAAchtB,EAAQumC,cAAgB1rB,GACvCza,KAAKulE,aAAalyB,eAAa24D,SAAUjsG,GAExCu4E,IACDA,EAAct4E,KAAKmiD,WAAW5hD,EAAKiO,QAASxO,KAAK81E,YAAYj2E,KAEjE,IAAIgkB,EAAa+d,GAAerhC,EAAMP,KAAK81E,YAAYj2E,IAiBvD,GAhBIgkB,EAAW5jB,UAAYwa,GAAS1a,EAAKqlE,SACjC7kE,EAAKsb,UAAyD,kBAA7C7b,KAAK4b,UAAUrb,EAAKsb,UAAUzd,MAAMvC,OAC3B,IAAvB4e,EAAK6F,QAAQ,OAAsC,IAAvB7F,EAAK6F,QAAQ,OAAsC,IAAvB7F,EAAK6F,QAAQ,OAC9C,IAAvB7F,EAAK6F,QAAQ,OAAwD,IAAzC/f,EAAKV,GAAGygB,QAAQ,sBAC/C7F,EAAO,MAAQA,IAEfla,EAAK6e,QAAU7e,EAAK4jB,UACpBnkB,KAAK2b,uBAAsB,GAE/BkI,EAAW5jB,QAAUwa,EACrBza,KAAKswB,WACLtwB,KAAK2kE,kBACDpkE,EAAK6e,QAAU7e,EAAK4jB,UACpBnkB,KAAK2b,uBAAsB,IAG/BiR,IACA5sB,KAAK8sB,uBAAuBvsB,GAC5BP,KAAK6sB,gBAAgBtsB,UACdP,KAAK4b,UAAU5b,KAAK81E,YAAYj6D,UAC1B,KAATpB,GAAa,CACbza,KAAKkd,iBACL,IAAImZ,EAAepZ,GAAY1c,GAC/BA,EAAOP,KAAK0rB,IAAI2K,GAChBr2B,KAAKse,oBAAoB/d,GACzBP,KAAKyd,eAAeZ,OAAO7c,KAAK4b,UAAUrb,EAAKV,MAI3D,GAAIG,KAAK0e,cAAc5E,MAAMrjB,OAAQ,CACjC,IAAIu+E,EAAeh1E,KAAK4b,UAAU5b,KAAK81E,YAAYj6D,UAC/CuQ,EAAepsB,KAAK4b,UAAUo5D,EAAan5D,UAC/C,GAAKuQ,GAA4C,aAA5BA,EAAahuB,MAAMvC,MAAqD,aAA5Bm5E,EAAa52E,MAAMvC,KAAsB,CAOtG,GAJiC,aAA5Bm5E,EAAa52E,MAAMvC,OACpBuwB,EAAepsB,KAAK4b,UAAU5b,KAAK81E,YAAYj6D,UAC/Cm5D,EAAez0E,GAEdy0E,EAAa51D,QAAU41D,EAAa7wD,QAGrC,IAAK,IAFD7tB,EAAa0+E,EAAa51D,OAC1BgN,EAAahuB,MAAM0hB,MAAQsM,EAAahuB,MAAM+kB,OACzC9sB,EAAI,EAAGA,EAAIC,EAAWG,OAAQJ,IAC/BC,EAAWD,GAAGwJ,MAAQm1E,EAAuB,kBAAKA,EAAwB,qBAC1E1+E,EAAWD,GAAG0sB,OAAOc,WAAW5jB,QAAU+0E,EAAa57D,YAAY,GAAGnZ,cAIzE+0E,EAAan3D,UAAYuO,EAAahuB,MAAM4kB,YACjDoJ,EAAahuB,MAAM2kB,OAAOc,WAAW5jB,QAAU+0E,EAAa57D,YAAY,GAAGnZ,SAGnFD,KAAKswB,WAETgoD,EAAY16C,SAAU,EACtB59B,KAAKse,oBAAoB/d,GACzBP,KAAK0X,eAAiB1X,KAAK0X,gBAAkBC,gBAAc+3D,SACvD1vE,KAAK81E,YAAY+e,SACjB70F,KAAK2d,iBAET3d,KAAK81E,aAAgBj2E,GAAI,GAAIgc,SAAU,GAAIg5E,SAAS,KAI5D99D,EAAQqZ,UAAUwmD,aAAe,WAC7B,UAAK52F,KAAK0X,eAAiBC,gBAAcwhF,SAAcn5F,KAAK0X,eAAiBC,gBAAcC,YACpF5X,KAAK0X,eAAiBC,gBAAc+I,UAAiB1gB,KAAK0X,eAAiBC,gBAAcokF,eAOpGhlE,EAAQqZ,UAAUymD,aAAe,SAAUltC,EAASC,GAChD,SAAID,EAAQhrC,YAAcirC,EAAQjrC,YAAcgrC,EAAQ7vC,OAAS8vC,EAAQjrC,YAClEgrC,EAAQ5uB,cAAgB6uB,EAAQ7uB,cAAgB4uB,EAAQ7uB,iBAAmB8uB,EAAQ9uB,kBAK9F/D,EAAQqZ,UAAU0mD,oBAAsB,SAAUv0E,GAC9C,IAAI2pF,IAAW3pF,EACXviB,KAAK0X,eAAiBC,gBAAc+I,YAAcwrF,GAAa3pF,IAAW5K,gBAAc+I,YACxF1gB,KAAK0X,eAAiB1X,KAAK0X,gBAAkBC,gBAAc+I,UAE3D1gB,KAAK0X,eAAiBC,gBAAcokF,gBAAkBmQ,GAAY3pF,IAAW5K,gBAAcokF,gBAC3F/7F,KAAK0X,eAAiB1X,KAAK0X,gBAAkBC,gBAAcokF,eAInEhlE,EAAQqZ,UAAU2uC,WAAa,SAAUx+E,GACrCP,KAAK8sB,uBAAuBvsB,GAC5BP,KAAK6sB,gBAAgB7sB,KAAK4b,UAAUrb,EAAKV,YAClCG,KAAK4b,UAAUrb,EAAKV,IACvBU,EAAK4R,iBACEnS,KAAK40F,WAAWr0F,EAAKV,IAEhCG,KAAK8Z,MAAMvT,OAAOvG,KAAK8Z,MAAMwG,QAAQ/f,GAAO,IAGhDw2B,EAAQqZ,UAAUotD,YAAc,SAAUj9F,GACtC,IACI89E,KACA99E,EAAK4R,WACLksE,EAAWr+E,KAAKyd,eAAeyoE,YAAY3lF,OAE/C,IAAK,IAAI1D,EAAK,EAAGsvG,EAAa9tB,EAAUxhF,EAAKsvG,EAAW11G,OAAQoG,IAAM,CAClE,IAAIid,EAAQqyF,EAAWtvG,GACnBmD,KAAK4b,UAAU9B,EAAMja,KACrBG,KAAK0sB,OAAO5S,KAOxBid,EAAQqZ,UAAUg8D,aAAe,SAAUxtF,EAAcmf,EAAW03D,GAChE,KAAMz1F,KAAK0X,eAAiBC,gBAAcC,YAAa,CACnD,IAAI+c,EAAQ/V,EAAapQ,QAAQ2D,SAAS,GAAG3Q,OAE7C,IAD+BxB,KAAKyd,eAAegsD,8BAAyBxvE,OAAWA,EAAW06B,GAE9F,GAAI/V,aAAwB9J,GAAM,CAE9B,IAAK,IADDu3F,EAAUtuE,EACLlhC,EAAK,EAAGohB,EAAKC,OAAOC,KAAKs3E,GAAc54F,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAElE,OADIigC,EAAM7e,EAAGphB,IAET,IAAK,QACD+hB,EAAarmB,MAAQ8zG,EAAQ9zG,MAC7B,MACJ,IAAK,SACDqmB,EAAatmB,OAAS+zG,EAAQ/zG,OAC9B,MACJ,IAAK,UACDsmB,EAAa7iB,QAAUswG,EAAQtwG,QAC/B,MACJ,IAAK,UACD6iB,EAAa5iB,QAAUqwG,EAAQrwG,QAC/B,MACJ,IAAK,cACD4iB,EAAa1R,YAAcm/F,EAAQn/F,aAI/ClN,KAAKmf,mBAAmBP,EAAc62E,EAAa13D,OAElD,CACD,IAAK,IAAI5C,EAAK,EAAGC,EAAKld,OAAOC,KAAKs3E,GAAct6D,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CAClE,IAAI2B,EAAM1B,EAAGD,GACTmxE,EAAevuE,EACfwuE,EAAoB3tF,EAAa7d,YACjCyrG,EAAoB5tF,EAAa3T,YACrC,OAAQ6xB,GACJ,IAAK,cACDyvE,EAAkBv1G,EAAIs1G,EAAavrG,YAAY/J,GAAKu1G,EAAkBv1G,EACtEu1G,EAAkBt1G,EAAIq1G,EAAavrG,YAAY9J,GAAKs1G,EAAkBt1G,EACtE,MACJ,IAAK,cACDu1G,EAAkBx1G,EAAIs1G,EAAarhG,YAAYjU,GAAKw1G,EAAkBx1G,EACtEw1G,EAAkBv1G,EAAIq1G,EAAarhG,YAAYhU,GAAKu1G,EAAkBv1G,GAGlF+I,KAAKgnB,wBAAwBpI,EAAc62E,EAAa13D,MAKxEhH,EAAQqZ,UAAUq8D,yBAA2B,SAAU7tF,EAAcmf,EAAWx9B,EAAMiL,GAqBlF,YApBmBvR,IAAfsG,EAAKL,OAAmD,SAA5B0e,EAAaxgB,MAAMvC,OAC/CmgC,GAAYz7B,EAAKL,MAAO0e,EAAapQ,QAAQ2D,SAAS,IACtD3G,GAAS,QAEOvR,IAAhBsG,EAAK0mC,SACLjnC,KAAK0sG,aAAa9tF,EAAaqoB,OAAQ1mC,EAAK0mC,QAC5Cz7B,GAAS,QAEYvR,IAArBsG,EAAKiT,cACAuqB,EAAUvqB,YAAcK,kBAAgBH,UACtCnT,EAAKiT,YAAcK,kBAAgBH,SAAYm7B,GAAW7uC,KAAM4e,GACnE5e,KAAKkd,kBAGLld,KAAKirG,uBAAuBjrG,KAAK0e,cAAc5E,MAAO9Z,KAAK0e,eAC3D1e,KAAK2kE,iBACLn5D,GAAS,IAGjBxL,KAAK2sG,2BAA2B/tF,EAAcmf,EAAWx9B,EAAMiL,GACxDA,GAGXurB,EAAQqZ,UAAUu8D,2BAA6B,SAAU/tF,EAAcmf,EAAWx9B,EAAMiL,GACpF,GAAgC,aAA5BoT,EAAaxgB,MAAMvC,OAAwBmE,KAAKogB,cAAe,CAC/D,GAAI2d,EAAU3/B,MAAO,CACjB,IAAIA,EAAQmC,EAAKnC,MACb+2E,EAAcv2D,EAAaxgB,MAC3B+pB,EAA6C,eAA5BgtD,EAAY9jE,YAC7BlF,EAAUgpE,EAAYhpE,QACtBygG,EAAW7uE,EAAU3/B,MACrB6iB,EAAOrC,EAAapQ,QAAQ2D,SAAS,GACrC06F,OAAa,EACble,OAAa,EACb9uF,OAAK,EACT,GAAI+sG,EAAS9sF,OAAS8sF,EAASzpF,OAAQ,CACnC,GAAIypF,EAAS9sF,MACT,IAAK,IAAIjjB,EAAK,EAAGohB,EAAKC,OAAOC,KAAK/f,EAAM0hB,OAAQjjB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAClE,IAAIorB,EAAQhK,EAAGphB,GACX6nB,EAAavsB,OAAO8vB,GACpBlI,EAAO6sF,EAAS9sF,MAAM4E,GACtBK,OAAY,EACZ+nF,EAAU1uG,EAAM0hB,MAAM4E,GAO1B,GANIooF,GAAWA,EAAQ/pF,SACnBljB,EAAKs1E,EAAYr1D,MAAM4E,GAAY3B,OAAOljB,GAC1CgtG,EAAa9sF,EAAKgD,OAClB4rE,EAAame,EAAQ/pF,OACrB/iB,KAAKmf,mBAAmBnf,KAAK4b,UAAU/b,GAAKgtG,EAAYle,IAExD5uE,EAAK5N,SACL,IAAK,IAAIgpB,EAAK,EAAGC,EAAKld,OAAOC,KAAK4B,EAAK5N,UAAWgpB,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACpE,IAAI4xE,EAAiB3xE,EAAGD,GACxBt7B,EAAKs1E,EAAYr1D,MAAM4E,GAAYvS,SAASha,OAAO40G,IAAiBltG,GACpE,IAAImtG,EAAShtG,KAAK4b,UAAU/b,GAC5BgtG,EAAa9sF,EAAK5N,SAASha,OAAO40G,IAClCpe,EAAame,EAAQ36F,SAASha,OAAO40G,IACrC/sG,KAAKmf,mBAAmB6tF,EAAQH,EAAYle,GAGhD5uE,EAAKxnB,QAAU4vB,IACfpD,EAAaowD,EAAYhyD,QAAUgyD,EAAY54D,UAAamI,EAAa,EAAIA,EAC7EzD,EAAK5E,kBAAkB0I,EAAW+nF,EAAQv0G,OAAO,EAAM4T,IAEvD4T,EAAKznB,QAAU6vB,IACfpD,EAAaowD,EAAYpyD,QAAUoyD,EAAYnyD,UAAa0B,EAAa,EAAIA,EAC7EK,GAAcowD,EAAYhyD,QAAUgyD,EAAY54D,UAAa,EAAI,EACjE0E,EAAKrE,gBAAgBmI,EAAW+nF,EAAQx0G,QAAQ,EAAM6T,IAIlE,GAAI/N,EAAM+kB,OACN,IAAK,IAAImiC,EAAK,EAAGC,EAAKrnC,OAAOC,KAAK/f,EAAM+kB,QAASmiC,EAAKC,EAAG9uD,OAAQ6uD,IAAM,CACnE,IAAIxoB,EAAMyoB,EAAGD,GAETx+B,GADApC,EAAavsB,OAAO2kC,GACZ1+B,EAAM+kB,OAAOuB,IACrBxD,OAAO,EACP/E,EAAYg5D,EAAYpyD,QAAUoyD,EAAYnyD,UAAa,EAAI,EAOnE,GANI8D,GAASA,EAAM/D,SACfljB,EAAKs1E,EAAYhyD,OAAOuB,GAAY3B,OAAOljB,GAC3CgtG,EAAaD,EAASzpF,OAAOuB,GAAY3B,OACzC4rE,EAAa7nE,EAAM/D,OACnB/iB,KAAKmf,mBAAmBnf,KAAK4b,UAAU/b,GAAKgtG,EAAYle,IAExD7nE,EAAM7W,OAAQ,CACd,GAAmB,IAAfyU,EACAxD,EAAO4F,EAAM7W,WAEZ,CACD,IAAI6Y,EAAgBqsD,EAAYhyD,OAAOuB,EAAa,IACpDxD,EAAO4F,EAAM7W,OAAS6Y,EAAc7Y,SACxB,IACRiR,EAAO4F,EAAM7W,QAGjBkY,GACAlH,EAAK5E,kBAAkBqI,EAAYxD,GAAM,EAAM/U,GAC/CqQ,GAAoBoC,EAAc5e,KAAMihB,EAAKnD,KAAK3B,GAAU4B,MAAM2G,GAAaA,IAG/EzD,EAAKrE,gBAAgBT,EAAWuI,EAAYxD,GAAM,EAAM/U,KAM5E,QAAwBlS,IAApBmE,EAAMme,WAA2B44D,EAAYhyD,OAAO1sB,OACpD,GAAwB,IAApB2H,EAAMme,WAA0C,IAAvBqwF,EAASrwF,UAClC,GAAIqwF,EAASrwF,UACL4L,GACAlH,EAAK0M,UAAWwnD,EAAYpyD,QAAUoyD,EAAYnyD,UAAa,EAAI,GACnEpE,EAAatmB,OAASsmB,EAAapQ,QAAQlW,OAAS2oB,EAAK3oB,SAGrD68E,EAAYpyD,QAAUoyD,EAAYnyD,YAClC/B,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,SAAW8O,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,SACvD8O,EAAKnD,KAAK,GAAGC,MAAM,GAAGuJ,WAAarG,EAAKnD,KAAK,GAAGC,MAAM,GAAGuJ,WAAa,EACtErG,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,aAE1B8O,EAAKuM,aAAa,QAGrB,CACD,GAAIrF,EAAe,CACf,IAAIE,EAAS,IAAIjD,GACjBiD,EAAO/vB,OAAS8F,EAAMme,UACtB0E,EAAKqH,OAAQ6sD,EAAYpyD,QAAUoyD,EAAYnyD,UAAa,EAAI,EAAGqF,GAAQ,GAC3EzJ,EAAatmB,OAASsmB,EAAapQ,QAAQlW,QAAU8F,EAAMme,cAE1D,CACD,IAAIgM,EAAS,IAAIlD,GACjBkD,EAAOhwB,MAAQ6F,EAAMme,UACrB0E,EAAKuH,UAAU,EAAGD,GAAQ,GACtB4sD,EAAYpyD,QAAUoyD,EAAYnyD,YAClC/B,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,SAAW8O,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,SACvD8O,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,YACtB8O,EAAKnD,KAAK,GAAGC,MAAM,GAAGuJ,WAAa,EACnCrG,EAAKnD,KAAK,GAAGC,MAAM,GAAGc,cAAW5kB,EACjCgnB,EAAKnD,KAAK,GAAGC,MAAM,GAAGuJ,WAAa6tD,EAAYr1D,MAAMrpB,OAAS,GAGtE,IAAK,IAAI+sB,EAAI,EAAGA,EAAI2xD,EAAYhyD,OAAO1sB,OAAQ+sB,IACV,KAA7B2xD,EAAYhyD,OAAOK,GAAG3jB,KACtBs1E,EAAYhyD,OAAOK,GAAG3jB,GAAKua,MAE/B6J,GAAYhD,EAAMjhB,KAAM4e,EAAeu2D,EAAYpyD,QAAUoyD,EAAYnyD,UAAa,EAAI,EAAGmF,EAAe3E,QAKhH2E,EACAlH,EAAKrE,gBAAiBu4D,EAAYpyD,QAAUoyD,EAAYnyD,UAAa,EAAI,EAAG5kB,EAAMme,WAAW,GAG7F0E,EAAK5E,kBAAkB,EAAGje,EAAMme,WAAW,GAIvD,GAAI44D,EAAYpyD,QAAUoyD,EAAYnyD,WAAa4pF,EAAS7pF,OAAQ,CAChE,IAAIkqF,EAAOhsF,EAAKnD,KAAK,GAAGC,MAAM,GAAG5L,SAAS,GAAGtS,GACzCkoB,EAAa/nB,KAAK4b,UAAUqxF,GAChCjtG,KAAKmf,mBAAmB4I,EAAa6kF,EAAe,OAAGxuG,EAAM2kB,QAEjEnE,EAAatmB,OAASsmB,EAAapQ,QAAQlW,OAAS2oB,EAAK3oB,OACzDsmB,EAAarmB,MAAQqmB,EAAapQ,QAAQjW,MAAQ0oB,EAAK1oB,MAE3DiT,GAAS,EAEb,OAAOA,GAIXurB,EAAQqZ,UAAUjxB,mBAAqB,SAAUP,EAAcmf,EAAWx9B,EAAM2sG,EAAUp9C,EAAQ6lC,GAC9F,IAOInqF,EAPA2hG,EAAiBvuF,EAAapQ,QAAQxB,YACtCy3E,EAAsB7lE,EAAapQ,QAAQhN,OAC3C2+B,GAAkB,EAsCtB,QA9BmBlmC,IAAfsG,EAAKhI,QACAqmB,EAAazM,SAKRyM,EAAahG,UAInBgG,EAAapQ,QAAQjW,MAAQgI,EAAKhI,MAHlCyH,KAAKumF,YAAY3nE,EAAcre,EAAKhI,OAAO,IAL3CqmB,EAAapQ,QAAQ2D,SAAS,GAAG5Z,MAAQgI,EAAKhI,MAC9CiT,GAAS,EACT20B,GAAkB,SASNlmC,IAAhBsG,EAAKjI,SACAsmB,EAAazM,SAKRyM,EAAahG,UAInBgG,EAAapQ,QAAQlW,OAASiI,EAAKjI,OAHnC0H,KAAKumF,YAAY3nE,EAAcre,EAAKjI,QAAQ,IAL5CsmB,EAAapQ,QAAQ2D,SAAS,GAAG7Z,OAASiI,EAAKjI,OAC/CkT,GAAS,EACT20B,GAAkB,IAS1B30B,EAASxL,KAAKysG,yBAAyB7tF,EAAcmf,EAAWx9B,EAAMiL,QAC7CvR,IAArBsG,EAAKiT,aAA6BmB,GAAUopB,KAAeppB,GAAUpU,KACrEqe,EAAapQ,QAAQ2D,SAAS,GAAG80B,OAAStyB,GAAUiK,GAAgBA,EAAaqoB,OAAS,WAEzEhtC,IAAjBsG,EAAKxE,QAAuB,CAC5B,GAAkC,SAA9B6iB,EAAapQ,QAAQqlC,MACrB,GAAIj1B,EAAa7iB,UAAY6iB,EAAapQ,QAAQzS,cAAiC9B,IAAtB8jC,EAAUhiC,QAAuB,CAC1F,IAAIqxG,EAAY7sG,EAAKxE,QAAUgiC,EAAUhiC,QACzC6iB,EAAapQ,QAAQzS,QAAU6iB,EAAapQ,QAAQzS,QAAUqxG,EAC9DptG,KAAKqtG,iBAAiBzuF,EAAapQ,QAAS4+F,EAAW,EAAGxuF,EAAapQ,QAAQqlC,YAInFj1B,EAAapQ,QAAQzS,QAAUwE,EAAKxE,QAExCyP,GAAS,EACT20B,GAAkB,EAEtB,QAAqBlmC,IAAjBsG,EAAKvE,QAAuB,CAC5B,GAAkC,SAA9B4iB,EAAapQ,QAAQqlC,MACrB,GAAIj1B,EAAa5iB,UAAY4iB,EAAapQ,QAAQxS,cAAiC/B,IAAtB8jC,EAAU/hC,QAAuB,CAC1F,IAAIsxG,EAAY/sG,EAAKvE,QAAU+hC,EAAU/hC,QACzC4iB,EAAapQ,QAAQxS,QAAU4iB,EAAapQ,QAAQxS,QAAUsxG,EAC9DttG,KAAKqtG,iBAAiBzuF,EAAapQ,QAAS,EAAG8+F,EAAW1uF,EAAapQ,QAAQqlC,YAInFj1B,EAAapQ,QAAQxS,QAAUuE,EAAKvE,QAExCwP,GAAS,EACT20B,GAAkB,EA0BtB,QAxBmBlmC,IAAfsG,EAAKwgC,QACLniB,EAAapQ,QAAQuyB,MAAQxgC,EAAKwgC,MAClCv1B,GAAS,QAESvR,IAAlBsG,EAAKse,WACLD,EAAapQ,QAAQqQ,SAAWte,EAAKse,SACrCrT,GAAS,EACT20B,GAAkB,QAEClmC,IAAnBsG,EAAK8Z,YACLuE,EAAapQ,QAAQ6L,UAAY9Z,EAAK8Z,UACtC7O,GAAS,EACT20B,GAAkB,QAEAlmC,IAAlBsG,EAAK2Y,WACL0F,EAAapQ,QAAQ0K,SAAW3Y,EAAK2Y,SACrC1N,GAAS,EACT20B,GAAkB,QAEClmC,IAAnBsG,EAAKue,YACLF,EAAapQ,QAAQsQ,UAAYve,EAAKue,UACtCtT,GAAS,EACT20B,GAAkB,QAEJlmC,IAAdsG,EAAKszC,KAIL,GAHAj1B,EAAapQ,QAAQqlC,KAAOtzC,EAAKszC,KACjCroC,GAAS,EACT20B,GAAkB,EACdvhB,EAAapQ,QAAQ6lC,eAAiBtB,gBAAcsD,gBAEpD,GADAkX,GAAa3uC,EAAapQ,QAASoQ,EAAa7iB,QAAS6iB,EAAa5iB,QAASgE,KAAMO,EAAKszC,MACtFj1B,GAAgBA,EAAazM,SAC7B,IAAK,IAAItV,EAAK,EAAGohB,EAAKW,EAAazM,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC/D,IAAI0R,EAAQ0P,EAAGphB,GACXgiE,EAAa7+D,KAAK4b,UAAUrN,GAChCswD,EAAWrwD,QAAQqlC,KAAOtzC,EAAKszC,KAC/B7zC,KAAKutG,YAAY1uC,EAAYt+D,EAAKszC,YAK1Cj1B,EAAapQ,QAAQ2D,SAAS,GAAG0hC,KAAOtzC,EAAKszC,KAC7C7zC,KAAKutG,YAAY3uF,EAAcre,EAAKszC,MA2C5C,QAxCyB55C,IAArBsG,EAAK2M,cACD0R,EAAazM,UAAY29C,GACzB9vD,KAAKyd,eAAeooE,cAAcjnE,GAAeA,GAAeA,EAAa1R,YAAc0R,EAAapQ,QAAQtB,aAAelW,EAAG4nB,EAAa7iB,QAAS9E,EAAG2nB,EAAa5iB,UAAW,GAEvL4iB,EAAapQ,QAAQtB,YAAc3M,EAAK2M,YACxC1B,GAAS,EACT20B,GAAkB,QAEOlmC,IAAzBsG,EAAK86B,kBACLzc,EAAapQ,QAAQtO,MAAM6Y,KAAOxY,EAAK86B,sBAEtBphC,IAAjBsG,EAAKq9B,SACL59B,KAAKunD,wBAAwB3oC,EAAapQ,QAASoQ,EAAcA,EAAagf,cAE/D3jC,IAAfsG,EAAKnC,OAAmD,SAA5BwgB,EAAaxgB,MAAMvC,OAC/C2P,GAAS,EACTsyB,GAAYv9B,EAAMqe,EAAcmf,EAAW/9B,MAC3CmgC,GAAkB,GAElB5/B,EAAKoC,SACL6I,GAAS,EACTxL,KAAKwtG,aAAa5uF,EAAcre,GAChC4/B,GAAkB,SAEDlmC,IAAfsG,EAAKnC,YAA2CnE,IAApBsG,EAAKnC,MAAMvC,WAAsC5B,IAAfsG,EAAKhI,YAClD0B,IAAhBsG,EAAKjI,aAAuC2B,IAAfsG,EAAKL,QAAoD,SAA5B0e,EAAaxgB,MAAMvC,MAAmBmE,KAAKgnD,aACxGx7C,GAAS,EACT20B,GAAkB,EAClBngC,KAAKgnD,WAAWymD,WAAWltG,EAAMw9B,EAAWnf,EAAc5e,OAE9B,gBAA5B4e,EAAaxgB,MAAMvC,MAAuD,cAA7B+iB,EAAaxgB,MAAMA,QAChEoN,GAAS,EACT20B,GAAkB,EAClBngC,KAAK0tG,kBAAkBntG,EAAMw9B,EAAWnf,EAAc5e,QAErD4e,EAAaxgB,OAAqC,kBAA5BwgB,EAAaxgB,MAAMvC,MAA8B+iB,EAAa/C,UACrF7b,KAAK4b,UAAUgD,EAAa/C,WAAkE,kBAArD7b,KAAK4b,UAAUgD,EAAa/C,UAAUzd,MAAMvC,QACrF2P,GAAS,EACT20B,GAAkB,QAEHlmC,IAAfsG,EAAKw7B,MACL,IAAK,IAAIZ,EAAK,EAAGC,EAAKld,OAAOC,KAAK5d,EAAKw7B,OAAQZ,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACjE,IAAI2B,EAAM1B,EAAGD,GACTrY,EAAQ3qB,OAAO2kC,GACnBtxB,GAAS,EACT,IAAIywB,EAAgB17B,EAAKw7B,MAAMe,GAC3B6wE,EAAa/uF,EAAamd,MAAMjZ,GACpC9iB,KAAK4tG,WAAW3xE,EAAe0xE,EAAY/uF,EAAapQ,SACxD2xB,GAAkB,EAG1B,QAAwBlmC,IAApBsG,EAAKsjB,iBAAiD5pB,IAArBsG,EAAK6Y,kBAA4Cnf,IAAfsG,EAAKhI,MACxE,IAAK,IAAI+sD,EAAK,EAAGC,EAAKrnC,OAAOC,KAAK5d,EAAK6Y,aAAewF,EAAaxF,aAAcksC,EAAKC,EAAG9uD,OAAQ6uD,IAAM,CAC/FxoB,EAAMyoB,EAAGD,GACTxiC,EAAQ3qB,OAAO2kC,GACnBtxB,GAAS,EACLywB,OAAgB,EAEhBA,EADA17B,EAAKsjB,WACWtjB,EAAKsjB,WAGLtjB,EAAK6Y,YAAc7Y,EAAK6Y,YAAY0jB,GAAOle,EAAaxF,YAE5E,IAAImkB,EAAmB3e,EAAaxF,YAAY0J,GAChD,GAAIya,EAAkB,CAClB,IAAI+kB,IAAa1jC,EAAarmB,MAC9ByH,KAAK8/C,iBAAiB7jB,EAAesB,EAAkB3e,EAAapQ,QAASoQ,EAAc0jC,IAevG,QAXwBroD,IAApBsG,EAAK0nD,iBAAkDhuD,IAAtBsG,EAAK2nD,mBAAkDjuD,IAApBsG,EAAKynD,aACzEhoD,KAAKw/F,WAAW5gF,GAChB5e,KAAKy/F,yBAAyB7gF,QACN3kB,IAApBsG,EAAKynD,YACLhoD,KAAKyd,eAAeqsE,WAAWlrE,EAAc5e,MAEjDwL,GAAS,QAEQvR,IAAjBsG,EAAKjB,SACLU,KAAKM,cAAcse,EAAcre,GAEjCiL,EAAQ,CAOR,QANwBvR,IAApB+F,KAAKgnD,YACLhnD,KAAKgnD,WAAW6mD,yBAAyBjvF,GAAgB7iB,QAAUgiC,EAAUhiC,SAAW6iB,EAAa7iB,QAAUC,QAAU+hC,EAAU/hC,SAAW4iB,EAAa5iB,SAAYgE,MAE3K4e,EAAapQ,QAAQ6Q,QAAQ,IAAIC,GAAKV,EAAapQ,QAAQhN,OAAOjJ,MAAOqmB,EAAapQ,QAAQhN,OAAOlJ,SACrGsmB,EAAapQ,QAAQ+Q,QAAQX,EAAapQ,QAAQgR,aAClDxf,KAAKosG,aAAaxtF,EAAcmf,EAAWx9B,KACX,aAA5Bqe,EAAaxgB,MAAMvC,MAAwBmE,KAAKogB,eAAmBpgB,KAAK0X,eAAiBC,gBAAcC,YAAa,CACpH6E,GAAqBzc,KAAM4e,GAC3B,IAAIqC,EAAOrC,EAAapQ,QAAQ2D,SAAS,GACrC/T,EAAQwgB,EAAaxgB,MACrB4mD,EAAS/jC,EAAKM,oBAAoB9qB,OACtC,GAA0B,eAAtB2H,EAAMiT,YAA8B,CAChCyR,EAAS1kB,EAAM2kB,QAAU3kB,EAAM4kB,UAAa,EAAI,EACpDxG,GAAoBoC,EAAc5e,KAAMihB,EAAKnD,KAAKgF,GAAO/E,MAAMinC,EAAS,GAAIA,EAAS,GAEzFpmC,EAAapQ,QAAQ6Q,QAAQ,IAAIC,GAAKV,EAAapQ,QAAQhN,OAAOjJ,MAAOqmB,EAAapQ,QAAQhN,OAAOlJ,SACrGsmB,EAAapQ,QAAQ+Q,QAAQX,EAAapQ,QAAQgR,aAE/Cxf,KAAK0X,eAAiBC,gBAAcC,cAAiB5X,KAAK0X,eAAiBC,gBAAc+I,WACxF1gB,KAAK8tG,kBAAkBlvF,IACvB5e,KAAK2kE,iBAGRuoC,EAOGtuF,GAAgBA,EAAagf,SAAWhf,EAAagH,UACrD5lB,KAAKsoG,qBAAqB1pF,EAAgD,IAAjCA,EAAagH,SAASnvB,SAPnEuJ,KAAKyd,eAAe+mE,uBAAuB5lE,EAAc6lE,OAA2CxqF,IAArBsG,EAAK2M,aAChFizB,GACAngC,KAAKwtD,qBAAqB5uC,SAQV3kB,IAApB+F,KAAKgnD,YACLhnD,KAAKgnD,WAAWw1C,YAAY59E,EAAc5e,MAE9CA,KAAKwmF,kBAAkB5nE,IACyD,IAA5EuuF,EAAe5pG,OAAO4pG,EAAgBvuF,EAAapQ,QAAQxB,cAC3DhN,KAAK4zF,WAAWh1E,GAEpB,IAAIiW,KAEJ,GAAuB,KADvBA,EAAUA,EAAQhP,OAAO7lB,KAAK0e,cAAc5E,MAAO9Z,KAAK0e,cAAcC,aAC1DloB,QACJmoB,EAAa/C,UAAY7b,KAAK4b,UAAUgD,EAAa/C,UAAW,CAChE,IAAIkyF,EAAW/tG,KAAK4b,UAAUgD,EAAa/C,UAC3CkyF,EAASv/F,QAAQ6Q,QAAQ,IAAIC,GAAKyuF,EAASv/F,QAAQjW,MAAOqmB,EAAapQ,QAAQlW,SAC/Ey1G,EAASv/F,QAAQ+Q,QAAQwuF,EAASv/F,QAAQgR,aAC1CuuF,EAAShyG,QAAUgyG,EAASv/F,QAAQzS,QACpCgyG,EAAS/xG,QAAU+xG,EAASv/F,QAAQxS,QAS5C,IANqF,IAAjFyoF,EAAoBlhF,OAAOkhF,EAAqB7lE,EAAapQ,QAAQhN,UACrExB,KAAKguG,gBAAgBpvF,GACjBA,EAAazM,UACbnS,KAAKwmF,kBAAkB5nE,IAGC,aAA5BA,EAAaxgB,MAAMvC,OAAwBmE,KAAKogB,eAAkBpgB,KAAK0X,eAAiBC,gBAAcwhF,OAAS,CAE/Gr8E,GADiBwI,GAActlB,KAAM4e,EAAapQ,QAAQ2D,SAAS,IAC5BnS,MAEtCA,KAAK4pF,qBACN5pF,KAAKse,oBAAoBM,IACpBsuF,GAAY/sE,GACbngC,KAAKwtD,qBAAqB5uC,IAGN,QAAxBA,EAAa0+B,QAAoBt9C,KAAK0X,iBACtCkH,EAAa0+B,OAAS,UAG9B,IAAKq4C,EAAgB,CACjB,IACI51F,GAASH,QADCgf,EACiBkiE,MAAO9gF,KAAK0X,eAAgBwtD,SAAUnnC,EAAWonC,SAAU5kE,GAC1FP,KAAKulE,aAAalyB,eAAasiD,eAAgB51F,KAGvDg3B,EAAQqZ,UAAUm9D,YAAc,SAAU3uF,EAAci1B,GACpD,GAAIj1B,GAAgBA,EAAamd,MAAMtlC,OAAS,EAC5C,IAAK,IAAIoG,EAAK,EAAGohB,EAAKC,OAAOC,KAAKS,EAAamd,OAAQl/B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACzE,IAAIigC,EAAM7e,EAAGphB,GACTimB,EAAQ3qB,OAAO2kC,GACf6wE,EAAa/uF,EAAamd,MAAMjZ,GAChCmrF,EAAcjuG,KAAKmiD,WAAWvjC,EAAapQ,QAASm/F,EAAW9tG,KACnEouG,EAAcvlD,GAAgBulD,EAAap6D,EAAM85D,IACrCj5E,aAAe,QAC3Bu5E,EAAY5uF,QAAQ,IAAIC,GAAK2uF,EAAY11G,MAAO01G,EAAY31G,SAC5D21G,EAAY1uF,QAAQ0uF,EAAYzuF,eAI5CuX,EAAQqZ,UAAUi9D,iBAAmB,SAAUztG,EAAS8H,EAAOT,EAAO4sC,GAClE,GAAIj0C,EAAQi2C,cACR,IAAK,IAAIh5C,EAAK,EAAGohB,EAAKre,EAAQuS,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC1D,IAAI0R,EAAQ0P,EAAGphB,GACF,eAATg3C,GAAkC,SAATA,IACzBtlC,EAAM6lC,WAAWp9C,EAAIuX,EAAM6lC,WAAWp9C,EAAI0Q,GAEjC,aAATmsC,GAAgC,SAATA,IACvBtlC,EAAM6lC,WAAWn9C,EAAIsX,EAAM6lC,WAAWn9C,EAAIgQ,IAE1CsH,aAAiBoT,IAAUpT,aAAiBi0B,KAC5CxiC,KAAKqtG,iBAAiB9+F,EAAO7G,EAAOT,EAAO4sC,KAK3D9c,EAAQqZ,UAAUs9D,kBAAoB,SAAUjY,EAAa13D,EAAWnf,EAAc1f,GAElF,QADwCjF,IAAtBw7F,EAAYl9F,YAA8C0B,IAAvBw7F,EAAYn9F,OAChD,CACb,IAAIonC,EAAiB9gB,EAAapQ,QAAQ2D,SAAS,GAAGA,SAAS,GAC/DutB,EAAennC,MAAQk9F,EAAYl9F,MACnCmnC,EAAepnC,OAASm9F,EAAYn9F,OACpC,IAAIqnC,EAAiB/gB,EAAapQ,QAAQ2D,SAAS,GAAGA,SAAS,GAC/DwtB,EAAepnC,MAAQk9F,EAAYl9F,MAAQ,IAC3ConC,EAAernC,OAASm9F,EAAYn9F,OAAS,MAGrDy+B,EAAQqZ,UAAUmrD,0BAA4B,SAAUh3F,GACpD,GAAIvE,KAAKgqF,wBAAyB,EAEf,IADHhqF,KAAK80F,wBAAwBx0E,QAAQ/b,IAE7CvE,KAAK80F,wBAAwBh+F,KAAKyN,OAGrC,CACD,IAAIkhB,GACA1kB,YAAawD,EAAUxD,YAAakK,YAAa1G,EAAU0G,YAAaxJ,SAAU8C,EAAU9C,SAC5FwlB,SAAU1iB,EAAU0iB,SAAUgoB,aAAc1qC,EAAU0qC,aAAc2S,aAAcr9C,EAAUq9C,cAEhG5hD,KAAKgnB,wBAAwBziB,KAAekhB,OAAMxrB,GAAW,KAIrE88B,EAAQqZ,UAAUod,qBAAuB,SAAU5uC,GAC/C,GAAIA,EAAa+G,QAAQlvB,OAAS,EAC9B,IAAK,IAAIJ,EAAI,EAAGA,EAAIuoB,EAAa+G,QAAQlvB,OAAQJ,IAC7C2J,KAAKu7F,0BAA0Bv7F,KAAK4b,UAAUgD,EAAa+G,QAAQtvB,KAG3E,GAAIuoB,EAAagH,SAASnvB,OAAS,EAC/B,IAAK,IAAI+sB,EAAI,EAAGA,EAAI5E,EAAagH,SAASnvB,OAAQ+sB,IAC9CxjB,KAAKu7F,0BAA0Bv7F,KAAK4b,UAAUgD,EAAagH,SAASpC,KAGxE5E,EAAa/C,UAAY7b,KAAK4b,UAAUgD,EAAa/C,WACrD7b,KAAKwtD,qBAAqBxtD,KAAK4b,UAAUgD,EAAa/C,YAI9Dkb,EAAQqZ,UAAU89D,6BAA+B,SAAUtvF,EAAcgrC,EAASD,EAASgb,GAUvF,YATqB1qE,IAAjB0vD,EAAQ9tD,MAAsB8tD,EAAQ9tD,OAAS+tD,EAAQ/tD,MACnD+iB,EAAazlB,SAAS1C,OAAS,QAA0BwD,IAArB0vD,EAAQxwD,WAC5CylB,EAAazlB,kBAGEc,IAAlB0vD,EAAQvrD,YAA+CnE,IAAvB2kB,EAAaxgB,OAC9CwgB,EAAaxgB,OAAqC,SAA5BwgB,EAAaxgB,MAAMvC,MAAmBmE,KAAKgnD,YACjEhnD,KAAKgnD,WAAWmnD,oBAAoBvvF,EAAcgrC,EAASD,EAAS3pD,WAEvC/F,IAA7B2kB,EAAapL,aACbxT,KAAKirG,uBAAuBjrG,KAAK0e,cAAcC,WAAY3e,KAAK0e,eACzDimD,GAAiB,GAErBA,GAGX5tC,EAAQqZ,UAAUppB,wBAA0B,SAAUpI,EAAcgrC,EAASD,EAASykD,EAAiBzY,GACnG,IAAIwX,EAAiBvuF,EAAapQ,QAAQhN,OACtCmjE,GAAiB,EACjBhsE,KACJgsE,EAAiB3kE,KAAKkuG,6BAA6BtvF,EAAcgrC,EAASD,EAASgb,GACnF,IAAIc,EACAC,EAIJ,QAHwBzrE,IAApB0vD,EAAQ/rB,SACR59B,KAAKunD,wBAAwB3oC,EAAapQ,QAASoQ,EAAcA,EAAagf,cAEtD3jC,IAAxB0vD,EAAQ5oD,kBAAqD9G,IAAxB0vD,EAAQ1+C,kBACrBhR,IAArB0vD,EAAQloD,eAA+CxH,IAArB0vD,EAAQ1iC,eAAoDhtB,IAA1B0vD,EAAQ/kD,oBACtD3K,IAAzB0vD,EAAQ1a,mBAAuDh1C,IAAzB0vD,EAAQ/H,mBAAwD3nD,IAA1B0vD,EAAQjlD,oBACnEzK,IAAjB0vD,EAAQ9tD,WAA2C5B,IAArB0vD,EAAQxwD,eAA2Cc,IAAjB0vD,EAAQ9V,KAAoB,CAC5F,QAA0B55C,IAArB0vD,EAAQloD,UAA0BkoD,EAAQloD,WAAamoD,EAAQnoD,UAAakoD,EAAQ1a,aAAc,CACnG,IAAI/sC,EAAalC,KAAK4b,UAAUgD,EAAand,UAK7C,GAJAikE,EAAU1lE,KAAK8lG,sBAAsB5jG,GAAY,KAC5CA,GAAeiT,GAAcjT,IAA8C,KAA9B0c,EAAaqwB,cAAuB55B,GAAkBqwD,MACpG9mD,EAAa5d,cAAgBkB,EAAalC,KAAK+lG,kBAAkB7jG,EAAY0c,GAAc,QAAQ3kB,QAE9EA,IAArB0vD,EAAQloD,eAA+CxH,IAArB2vD,EAAQnoD,UAA+C,KAArBmoD,EAAQnoD,SAAiB,CAC7F,IAAI4sG,EAAYruG,KAAK4b,UAAUguC,EAAQnoD,eACrBxH,IAAdo0G,GAA2BA,EAAUzoF,WAA6D,IAAjDyoF,EAAUzoF,SAAStF,QAAQ1B,EAAa/e,KACzFmgC,GAAWquE,EAAUzoF,SAAUhH,EAAa/e,IAGpDG,KAAKq8F,YAAYz9E,GAErB,QAAyB3kB,IAArB0vD,EAAQ1iC,UAA0B0iC,EAAQ1iC,WAAa2iC,EAAQ3iC,SAAU,CACzE,IAAI9kB,EAAanC,KAAK4b,UAAU+tC,EAAQ1iC,UAKxC,GAJAw+C,EAASzlE,KAAK8lG,sBAAsB3jG,GAAY,KAC3CA,GAAe0S,GAAa1S,IAA8C,KAA9Byc,EAAagjC,cAAuB5sC,GAAiBywD,MAClG7mD,EAAald,cAAgBS,EAAanC,KAAK+lG,kBAAkB5jG,EAAYyc,GAAc,QAAS3kB,QAExFA,IAAZ2vD,QAA8C3vD,IAArB2vD,EAAQ3iC,UAA+C,KAArB2iC,EAAQ3iC,SAAiB,CACpF,IAAI2jE,EAAY5qF,KAAK4b,UAAUguC,EAAQ3iC,eACrBhtB,IAAd2wF,GAA2BA,EAAUjlE,UAA2D,IAAhDilE,EAAUjlE,QAAQrF,QAAQ1B,EAAa/e,KACvFmgC,GAAW4qD,EAAUjlE,QAAS/G,EAAa/e,IAGnDG,KAAKq8F,YAAYz9E,GAErB,QAA6B3kB,IAAzB0vD,EAAQ1a,cAA8B0a,EAAQ1a,eAAiB2a,EAAQ3a,aAAc,CACrF,IAAI1sC,OAAS,EACTqc,EAAand,UAAYzB,KAAK4b,UAAUgD,EAAand,YACrDc,EAASvC,KAAK4b,UAAUgD,EAAand,UAAU+M,YAE/CtM,EAAalC,KAAK4b,UAAUgD,EAAand,YACzB0T,GAAcjT,IAA8C,KAA9B0c,EAAaqwB,cAAuB55B,GAAkBqwD,MACpG9mD,EAAazd,kBAAoBoB,EAASvC,KAAKmiD,WAAW5/C,EAAQonD,EAAQ1a,mBAAgBh1C,GAGlG,QAA6BA,IAAzB0vD,EAAQ/H,cAA8B+H,EAAQ/H,eAAiBgI,EAAQhI,aAAc,CACrF,IAAI5+C,OAAS,EACT4b,EAAaqI,UAAYjnB,KAAK4b,UAAUgD,EAAaqI,YACrDjkB,EAAShD,KAAK4b,UAAUgD,EAAaqI,UAAUzY,YAE/CrM,EAAanC,KAAK4b,UAAUgD,EAAaqI,YACzBpS,GAAa1S,IAA8C,KAA9Byc,EAAagjC,cAAuB5sC,GAAiBywD,MAClG7mD,EAAatc,kBAAoBU,EAC7BhD,KAAKmiD,WAAWn/C,EAAQ2mD,EAAQ/H,mBAAgB3nD,QAGvCA,IAAjB0vD,EAAQ9V,OACRj1B,EAAai1B,KAAO8V,EAAQ9V,KAC5BgN,GAAcjiC,IAElBjmB,EAASqH,KAAK6M,UAAU+R,GA2C5B,QAzCsB3kB,IAAlB0vD,EAAQzpD,OACR87B,GAAY2tB,EAAQzpD,MAAO0e,EAAapQ,QAAQ2D,SAAS,KAEzDxZ,EAAOlC,OAAS,QAAiCwD,IAA5B0vD,EAAQv3C,sBAA8DnY,IAA5B0vD,EAAQr3C,kBACT,IAA3D4L,OAAOC,KAAKwrC,EAAQr3C,iBAAiBgO,QAAQ,eACvBrmB,IAAzB0vD,EAAQtxD,gBACR8nC,GAAgBvhB,EAAcjmB,EAAOlC,OAAS,EAAIkC,EAASimB,EAAayT,yBACnDp4B,IAAjB0vD,EAAQ9tD,OACR8oE,GAAiB,GAEjBhsE,EAAOlC,OAAS,IAChBmoB,EAAapQ,QAAQ6Q,QAAQ,IAAIC,GAAKV,EAAapQ,QAAQjW,MAAOqmB,EAAapQ,QAAQlW,SACvFsmB,EAAapQ,QAAQ+Q,QAAQX,EAAapQ,QAAQgR,aAClDxf,KAAK0+F,0BAA0B9/E,GAC/B5e,KAAKosG,aAAaxtF,EAAcgrC,EAASD,MAG5CA,EAAQ5oD,aAAe4oD,EAAQ1+C,aAAe0+C,EAAQxwD,WACpD6G,KAAK0X,iBAAmBC,gBAAcwhF,SACzCx0B,GAAiB,GAEhBypC,GACDpuG,KAAK41F,iBAET51F,KAAKsuG,kBAAkB3kD,EAAS/qC,GAChCA,EAAapQ,QAAQ6Q,QAAQ,IAAIC,GAAKV,EAAapQ,QAAQjW,MAAOqmB,EAAapQ,QAAQlW,SACvFsmB,EAAapQ,QAAQ+Q,QAAQX,EAAapQ,QAAQgR,cACyB,IAAvE2tF,EAAe5pG,OAAO4pG,EAAgBvuF,EAAapQ,QAAQhN,UAC3DxB,KAAK4zF,WAAWh1E,GAChB5e,KAAKguG,gBAAgBpvF,KAEF,IAAnB+lD,IAA2B3kE,KAAK8tG,kBAAkBlvF,IAC5C5e,KAAK0X,eAAiBC,gBAAcC,cAAgB5X,KAAK0X,eAAiBC,gBAAc+I,WAC9F1gB,KAAK2kE,iBAEJ3kE,KAAKgqF,yBACNhqF,KAAKse,oBAAoBM,GAEzB5e,KAAK0X,gBAA0C,QAAxBkH,EAAa0+B,SACpC1+B,EAAa0+B,OAAS,WAErBq4C,EAAgB,CACjB,IACI51F,GAASH,QADCgf,EACiBkiE,MAAO9gF,KAAK0X,eAAgBwtD,SAAUtb,EAASub,SAAUxb,GACxF3pD,KAAKulE,aAAalyB,eAAasiD,eAAgB51F,KAGvDg3B,EAAQqZ,UAAU01D,sBAAwB,SAAUvlG,EAAMguG,GACtD,IAAIprG,KAIJ,OAHI5C,IACA4C,EAAO6+B,GAAqBzhC,EAAMguG,IAE/BprG,GAEX4zB,EAAQqZ,UAAUvjC,UAAY,SAAU+R,EAAcjmB,GAIlD,OAFMimB,EAAa6+B,mBAAmB7+B,EAAa/iB,KAAMlD,EAA6B,4BAArBqH,KAAKo6B,OAAOv+B,MAA2D,qBAArBmE,KAAKo6B,OAAOv+B,KAC3HmE,KAAKo6B,OAAO/oB,iBAAcpX,IAOlC88B,EAAQqZ,UAAUo+D,mBAAqB,SAAU5uG,EAASg+B,EAAStB,GAC/D,QAAgBriC,IAAZ2jC,EACA59B,KAAKunD,wBAAwB3nD,EAASI,KAAK4b,UAAUhc,EAAQC,IAAK+9B,OAEjE,CACDh+B,EAAQM,MAAMo8B,QAAUA,EACxB,IAAK,IAAI5lC,EAAI,EAAGA,EAAIkJ,EAAQuS,SAAS1b,OAAQC,IACrCkJ,EAAQuS,SAASzb,aAAc8rC,IAC/BxiC,KAAKwuG,mBAAmB5uG,EAAQuS,SAASzb,QAAIuD,EAAWqiC,GAE5D18B,EAAQuS,SAASzb,GAAGwJ,MAAMo8B,QAAUA,IAQhDvF,EAAQqZ,UAAU09D,kBAAoB,SAAUlvF,GAC5C,IAAImN,EAAgB/rB,KAAK0e,cACrBmwB,GAAa,EACb4/D,KAOJ,OANAA,EAAWA,EAAS5oF,OAAOkG,EAAcjS,MAAOiS,EAAcpN,aACjDloB,OAAS,GACdmoB,EAAa/e,KAAO4uG,EAASA,EAASh4G,OAAS,GAAGoJ,KAClDgvC,GAAa,GAGdA,GAMX9X,EAAQqZ,UAAUm4D,iCAAmC,SAAU3oG,EAASg+B,GACpE,GAAIh+B,aAAmB4iC,GACnB,IAAK,IAAI9rC,EAAI,EAAGA,EAAIkJ,EAAQuS,SAAS1b,OAAQC,IACzCsJ,KAAKuoG,iCAAiC3oG,EAAQuS,SAASzb,GAAIknC,GAGnEh+B,EAAQg+B,QAAUA,GAMtB7G,EAAQqZ,UAAUmX,wBAA0B,SAAU3nD,EAASrF,EAAKqjC,GAChE,QAAgB3jC,IAAZ2jC,EAAuB,CAEvB,GADAh+B,EAAQg+B,QAAUA,EACdrjC,aAAeua,GAAM,CAErB,GAAKva,EAAI4X,SAQL,IAAK,IAAItV,EAAK,EAAGohB,EAAK1jB,EAAI4X,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtD,IAAI0R,EAAQ0P,EAAGphB,GACfmD,KAAKunD,wBAAwBvnD,KAAK4b,UAAUrN,GAAOC,QAASxO,KAAK4b,UAAUrN,GAAQqvB,QATvFh+B,EAAQuS,SAAS,GAAGyrB,QAAUA,EAC9B59B,KAAKuoG,iCAAiC3oG,EAAQuS,SAAS,GAAIyrB,GACpC,SAAnBrjC,EAAI6D,MAAMvC,MAAmBmE,KAAKgnD,YAClChnD,KAAKgnD,WAAWO,wBAAwBhtD,EAAKqjC,EAAS59B,MAU9D,GAAIzF,EAAIwhC,MACJ,IAAK,IAAIZ,EAAK,EAAGC,EAAK7gC,EAAIwhC,MAAOZ,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACnD,IAAIh4B,EAAOi4B,EAAGD,GACd,GAAIh4B,EAAKw+B,WAAamN,iBAAeE,QAAS,EACtCxgC,EAAUxO,KAAKmiD,WAAWviD,EAASuD,EAAKtD,KACpC+9B,QAAUA,GAI9B,GAAIrjC,EAAI6e,YACJ,IAAK,IAAIksC,EAAK,EAAGC,EAAKhrD,EAAI6e,YAAaksC,EAAKC,EAAG9uD,OAAQ6uD,IAAM,CACzD,IAAIzhC,EAAa0hC,EAAGD,IAChB92C,EAAUxO,KAAKmiD,WAAWviD,EAASikB,EAAWhkB,KAC1C+9B,QAAUA,QAM1B,IAAK,IAAIlnC,EAAI,EAAGA,EAAI,EAAGA,IACnBkJ,EAAQuS,SAASzb,GAAGknC,QAAUA,EAGtC,GAAIrjC,EAAI6e,YAEJ,IAAK,IAAIqsC,EAAK,EAAGC,EAAKnrD,EAAI6e,YAAaqsC,EAAKC,EAAGjvD,OAAQgvD,IAAM,CACrD5hC,EAAa6hC,EAAGD,IAChBj3C,EAAUxO,KAAKmiD,WAAWviD,EAASikB,EAAWhkB,KAC1C+9B,QAAUA,EAG1B,GAAIrjC,EAAI0tD,YAAc1tD,EAAI2tD,aAAc,CACpC,IAAI15C,EACJ,GADIA,EAAUxO,KAAKmiD,WAAWviD,EAAS,gBAC1B,CACT,IAASlJ,EAAI,EAAGA,EAAI8X,EAAQ2D,SAAS1b,OAAQC,IACzC8X,EAAQ2D,SAASzb,GAAGknC,QAAUA,EAElCpvB,EAAQovB,QAAUA,EAElBrjC,GAAOA,EAAIqjC,SAAWrjC,EAAIqrB,UAC1B5lB,KAAKsoG,qBAAqB/tG,EAA8B,IAAxBA,EAAIqrB,SAASnvB,SAGrC,IAAZmnC,GACA59B,KAAKmkE,SAASnkE,KAAK4b,UAAUhc,EAAQC,MAEpCtF,aAAeua,KAAS9U,KAAK4pF,oBAAwBrvF,aAAeoZ,KAAc3T,KAAKgqF,0BAEpFhqF,KAAK0X,gBACL1X,KAAKse,oBAAoBte,KAAK4b,UAAUhc,EAAQC,OAKhEk3B,EAAQqZ,UAAUk+D,kBAAoB,SAAU3kD,EAAS/qC,GACrD,QAA4B3kB,IAAxB0vD,EAAQvwC,YACR,IAAK,IAAIvc,EAAK,EAAGohB,EAAKC,OAAOC,KAAKwrC,EAAQvwC,aAAcvc,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC1E,IAAIigC,EAAM7e,EAAGphB,GACTimB,EAAQ3qB,OAAO2kC,GACfb,EAAgB0tB,EAAQvwC,YAAY0jB,GACpCS,EAAmB3e,EAAaxF,YAAY0J,GAChD9iB,KAAK8/C,iBAAiB7jB,EAAesB,EAAkB3e,EAAapQ,QAASoQ,KAKzFmY,EAAQqZ,UAAU0P,iBAAmB,SAAU7jB,EAAesB,EAAkBzjB,EAAO8E,EAAc8vF,GACjG,IAAI/P,EACA54E,GAAY,EAEhB,QAA0B9rB,KAD1B0kG,EAAoB3+F,KAAKmiD,WAAWroC,EAAOyjB,EAAiB19B,KACvB,CAejC,QAd4B5F,IAAxBgiC,EAAc1jC,YAAgD0B,IAAzBgiC,EAAc3jC,SACnDqmG,EAAkBpmG,MAAQ0jC,EAAc1jC,MACxComG,EAAkBrmG,OAAS2jC,EAAc3jC,OACzCytB,GAAY,QAEkB9rB,IAA9BgiC,EAAc/uB,cACdyxF,EAAkBzxF,YAAc+uB,EAAc/uB,cAE9CwhG,GAAmB/P,aAA6BjgE,IAChDigE,EAAkBl6E,qBAElB8Y,aAA4BhqB,SAAiDtZ,IAA/BgiC,EAAcgkB,eAC5D0+C,EAAkBzxF,YAAcqwB,EAAiBrwB,aAEjDqwB,aAA4BjqB,SACHrZ,IAAzBgiC,EAAchsB,OAAsB,CACpC,IAAIA,EAASgsB,EAAchsB,OAC3B8V,GAAY,EACZ,IAAIhqB,OAAuB9B,IAAbgW,EAAOjZ,EAAkBiZ,EAAOjZ,EAC1CumC,EAAiBttB,OAAOjZ,EACxBgF,OAAuB/B,IAAbgW,EAAOhZ,EAAkBgZ,EAAOhZ,EAC1CsmC,EAAiBttB,OAAOhZ,EAC5B0nG,EAAkBlqD,6BAA6B14C,EAASC,EAAS,YACjE2iG,EAAkBjqE,aAAe,aAE5B6I,aAA4BhqB,UACPtZ,IAAzBgiC,EAAchsB,aACoBhW,IAA/BgiC,EAAcgkB,eAClBrhC,EAAakhC,iBAAiBviB,EAAkB3e,EAAayT,mBAAoBzT,EAAapQ,QAAQhN,OAAQm9F,GA0ClH,GAxCKphE,aAA4BhqB,IAAmB0oB,EAAcmkB,oBACzBnmD,IAAjCgiC,EAAcmkB,aAAappD,QACMiD,IAAjCgiC,EAAcmkB,aAAanpD,IAC3B8uB,GAAY,SAGS9rB,IAAzBgiC,EAAct5B,SACdojB,GAAY,OACwB9rB,IAAhCgiC,EAAct5B,OAAOG,SACrB67F,EAAkBh8F,OAAOG,OAASm5B,EAAct5B,OAAOG,aAE1B7I,IAA7BgiC,EAAct5B,OAAOI,MACrB47F,EAAkBh8F,OAAOI,IAAMk5B,EAAct5B,OAAOI,UAEtB9I,IAA9BgiC,EAAct5B,OAAOC,OACrB+7F,EAAkBh8F,OAAOC,KAAOq5B,EAAct5B,OAAOC,WAEtB3I,IAA/BgiC,EAAct5B,OAAOE,QACrB87F,EAAkBh8F,OAAOE,MAAQo5B,EAAct5B,OAAOE,SAG1DkjB,GAAa2oF,KACb/P,EAAkBpmG,MAASglC,EAAiBhlC,OAASqmB,EAAarmB,MAC9DglC,EAAiBga,WACjBonD,EAAkBpmG,MAASomG,EAAkBpmG,OAASomG,EAAkBpyF,WAAWhU,MACnFomG,EAAkBrmG,OAAUilC,EAAiBjlC,QAAUsmB,EAAatmB,QAChEqmG,EAAkBpyF,WAAWjU,cAGC2B,IAAtCgiC,EAAcriB,sBACd+kF,EAAkB/kF,oBAAsBqiB,EAAcriB,oBACtDmM,GAAY,QAEwB9rB,IAApCgiC,EAActiB,oBACdglF,EAAkBhlF,kBAAoBsiB,EAActiB,kBACpDoM,GAAY,QAEiB9rB,IAA7BgiC,EAAc0F,aACdg9D,EAAkB/gE,WAAW9jB,EAAM8jB,UAAW3B,EAAc0F,kBAE9B1nC,IAA9BgiC,EAAczoB,YAA2B,CACzC,IAAImxD,GAAiB,EAChBg6B,EAAkBnrF,YAAcC,wBAAsBC,UACpDuoB,EAAczoB,YAAcC,wBAAsBC,SACrDm7B,GAAW7uC,KAAM4e,GAAc,EAAO+/E,KACtCh6B,GAAiB,GAErBg6B,EAAkBnrF,YAAcyoB,EAAczoB,YAC1CmxD,GACA3kE,KAAKkd,sBAGejjB,IAAxBgiC,EAAc/7B,OACd87B,GAAYC,EAAc/7B,MAAOy+F,QAEL1kG,IAA5BgiC,EAAcuB,WACdF,GAAgBrB,EAAcuB,UAAWmhE,EAAmBphE,GAEhEv9B,KAAK2uG,wBAAwB1yE,EAAelW,EAAW44E,EAAmB//E,EAAc2e,EAAkBzjB,IACxF,IAAdiM,IACA44E,EAAkBt/E,QAAQ,IAAIC,GAAKq/E,EAAkBpmG,MAAOomG,EAAkBrmG,SAC9EqmG,EAAkBp/E,QAAQo/E,EAAkBn/E,cAE1Cm/E,aAA6BjgE,IAC/BigE,EAAkBl6E,uBAK9BsS,EAAQqZ,UAAUu+D,wBAA0B,SAAU1yE,EAAelW,EAAW44E,EAAmB//E,EAAc2e,EAAkBzjB,QACjG7f,IAA1BgiC,EAAch8B,UACV0+F,KACY,EACqB,gBAA5B//E,EAAaxgB,MAAMvC,MACS,mBAA7B+iB,EAAaxgB,MAAMA,MACnBugG,EAAkB1+F,QAAU,KAAOg8B,EAAch8B,QAAU,KAG3D0+F,EAAkB1+F,QAAUg8B,EAAch8B,SAG9C0+F,aAA6BjgE,IAC7B1+B,KAAK4uG,wBAAwBjQ,EAAmB//E,EAAc2e,EAAkBzjB,SAGzD7f,IAA3BgiC,EAAcsb,WACdonD,EAAkB1+F,QAAUg8B,EAAcsb,SAC1Cv3C,KAAK4uG,wBAAwBjQ,EAAmB//E,EAAc2e,EAAkBzjB,KAGxFid,EAAQqZ,UAAUw+D,wBAA0B,SAAUjQ,EAAmB//E,EAAc2e,EAAkBzjB,GACrG,IAAK,IAAIjd,EAAK,EAAGohB,EAAKje,KAAK07B,MAAO7+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAIghC,EAAY5f,EAAGphB,GACnB8yB,GAAcgvE,EAAkB9+F,GAAK,gBAAiBg+B,GACtDlO,GAAcgvE,EAAkB9+F,GAAK,gBAAiBg+B,GAE1D,GAAIjf,aAAwB9J,GACxB6pF,EACI//E,EAAa2pC,sBAAsBhrB,EAAkBv9B,KAAKJ,QAAQC,SAErE,GAAI+e,aAAwBjL,GAAW,CACxC,IACIrZ,EADSskB,EAAapQ,QACL2D,SAAS,GAC1B3Q,EAAS,IAAI8K,GAAKhS,EAAQyB,QAAUzB,EAAQ/B,MAAQ,EAAG+B,EAAQ0B,QAAU1B,EAAQhC,OAAS,EAAGgC,EAAQ/B,MAAO+B,EAAQhC,QACxHqmG,EACI//E,EAAaw/B,qBAAqBx/B,EAAaxF,YAAYwF,EAAaxF,YAAY3iB,OAAS,GAAImoB,EAAayT,mBAAoB7wB,EAAQxB,KAAK65B,eAAgB75B,KAAKJ,QAAQC,IAEpL,IAAK,IAAInJ,EAAI,EAAGA,EAAIojB,EAAM3H,SAAS1b,OAAQC,IACnCioG,EAAkB9+F,KAAOia,EAAM3H,SAASzb,GAAGmJ,IAC3Cia,EAAM3H,SAAS5L,OAAO7P,EAAG,EAAGioG,IAKxC5nE,EAAQqZ,UAAUw9D,WAAa,SAAU3xE,EAAe0xE,EAAY7zF,GAChE,IAAIm0F,EACAloF,GAAY,EAEhB,QAAoB9rB,KADpBg0G,EAAcjuG,KAAKmiD,WAAWroC,EAAO6zF,EAAW9tG,KACjB,CAC3B,QAA6B5F,IAAzBgiC,EAAchsB,OAAsB,CACpC8V,GAAY,EACZ,IAAIhqB,OAAqC9B,IAA3BgiC,EAAchsB,OAAOjZ,EAAkBilC,EAAchsB,OAAOjZ,EACtE22G,EAAW19F,OAAOjZ,EAClBgF,OAAqC/B,IAA3BgiC,EAAchsB,OAAOhZ,EAAkBglC,EAAchsB,OAAOhZ,EACtE02G,EAAW19F,OAAOhZ,EACtBg3G,EAAYx5D,6BAA6B14C,EAASC,EAAS,YAC3DiyG,EAAYv5E,aAAe,QAqD/B,QAnD4Bz6B,IAAxBgiC,EAAc1jC,QACdwtB,GAAY,EACZkoF,EAAY11G,MAAQ0jC,EAAc1jC,YAET0B,IAAzBgiC,EAAc3jC,SACdytB,GAAY,EACZkoF,EAAY31G,OAAS2jC,EAAc3jC,aAEN2B,IAA7BgiC,EAAc0F,aACdssE,EAAYrwE,WAAW9jB,EAAM8jB,UAAW6D,GAAqBksE,EAAY7+D,iBAAeE,gBAE/D/0C,IAAzBgiC,EAAct5B,SACdojB,GAAY,OACwB9rB,IAAhCgiC,EAAct5B,OAAOG,SACrBmrG,EAAYtrG,OAAOG,OAASm5B,EAAct5B,OAAOG,aAEpB7I,IAA7BgiC,EAAct5B,OAAOI,MACrBkrG,EAAYtrG,OAAOI,IAAMk5B,EAAct5B,OAAOI,UAEf9I,IAA/BgiC,EAAct5B,OAAOE,QACrBorG,EAAYtrG,OAAOE,MAAQo5B,EAAct5B,OAAOE,YAElB5I,IAA9BgiC,EAAct5B,OAAOC,OACrBqrG,EAAYtrG,OAAOC,KAAOq5B,EAAct5B,OAAOC,YAGb3I,IAAtCgiC,EAAcriB,sBACdmM,GAAY,EACZkoF,EAAYr0F,oBAAsBqiB,EAAcriB,0BAEZ3f,IAApCgiC,EAActiB,oBACdoM,GAAY,EACZkoF,EAAYt0F,kBAAoBsiB,EAActiB,wBAEtB1f,IAAxBgiC,EAAc/7B,aACmBjG,IAA7BgiC,EAAc/7B,MAAM6Y,OACpBk1F,EAAY/tG,MAAM6Y,KAAOkjB,EAAc/7B,MAAM6Y,WAEb9e,IAAhCgiC,EAAc/7B,MAAMo8B,UACpB2xE,EAAY/tG,MAAMo8B,QAAUL,EAAc/7B,MAAMo8B,cAEZriC,IAApCgiC,EAAc/7B,MAAM8Y,cACpBi1F,EAAY/tG,MAAM8Y,YAAcijB,EAAc/7B,MAAM8Y,kBAEhB/e,IAApCgiC,EAAc/7B,MAAM+Y,cACpBg1F,EAAY/tG,MAAM+Y,YAAcgjB,EAAc/7B,MAAM+Y,kBAEZhf,IAAxCgiC,EAAc/7B,MAAM6e,kBACpBkvF,EAAY/tG,MAAM6e,gBAAkBkd,EAAc/7B,MAAM6e,uBAGpC9kB,IAAxBgiC,EAAc79B,OACV6vG,EAAa,CACb,IAAIxlD,EAAWlqD,EAAa09B,EAAc79B,OAC1C6vG,EAAY73G,KAAOqyD,OAGIxuD,IAA3BgiC,EAAct9B,WACdsvG,EAAY73G,KAAOy4G,OAAO5yE,EAAct9B,UACxConB,GAAY,IAEE,IAAdA,IACAkoF,EAAY5uF,QAAQ,IAAIC,GAAK2uF,EAAY11G,MAAO01G,EAAY31G,SAC5D21G,EAAY1uF,QAAQ0uF,EAAYzuF,gBAM5CuX,EAAQqZ,UAAUovD,WAAa,SAAU5gF,GACrC,IAAIupC,EAAgBnoD,KAAKmiD,WAAWvjC,EAAapQ,QAAS,gBACtD60B,EAAarjC,KAAK0X,eAAiBC,gBAAcwhF,OAAUn5F,KAAKJ,QAAQC,QAAK5F,EACjF,GAAIkuD,EAAe,CACf,GAAkB,QAAdnoD,KAAK4rB,KAAgB,CACrB,IAAI9sB,EAAOggC,GAAkBlgB,EAAapQ,QAAQ3O,GAAK,gBAAiBwjC,GACxE,GAAIvkC,EAAM,CACN,IAAIgwG,EAAWhwE,GAAkBhgC,EAAKe,GAAK,QAASwjC,GAChD0rE,EAAYjwE,GAAkBhgC,EAAKe,GAAK,SAAUwjC,GAClD9E,EAAgBO,GAAkBiwE,EAAUlvG,GAAK,kBAAmBwjC,GACpE9E,GACAA,EAActf,WAAW8f,YAAYR,GAEzCwwE,EAAU9vF,WAAW8f,YAAYgwE,GACjCD,EAAS7vF,WAAW8f,YAAY+vE,GAChChwG,EAAKmgB,WAAW8f,YAAYjgC,IAGpC,IAAIgkB,EAAQlE,EAAapQ,QAAQ2D,SAASmO,QAAQ6nC,GAClDvpC,EAAapQ,QAAQ2D,SAAS5L,OAAOuc,EAAO,GAEhD,IAAIyjF,EAAgBvmG,KAAK6rG,iBAAiBjtF,GAC1CA,EAAampC,UAAU/nD,KAAK65B,eAAgB75B,KAAKo6B,OAAQmsE,EAAevmG,KAAKJ,QAAQC,KAEzFk3B,EAAQqZ,UAAUy7D,iBAAmB,SAAUjtF,GAC3C,GAAIA,EAAazM,SACb,IAAK,IAAIzb,EAAI,EAAGA,EAAIkoB,EAAapQ,QAAQ2D,SAAS1b,OAAQC,IACtD,GAAIkoB,EAAapQ,QAAQ2D,SAASzb,GAAGmJ,KAAO+e,EAAa/e,GAAK,kBAC1D,OAAO+e,EAAapQ,QAAQ2D,SAASzb,GAIjD,OAAOkoB,EAAapQ,SAExBuoB,EAAQqZ,UAAU9vC,cAAgB,SAAUse,EAAcre,QACzBtG,IAAzBsG,EAAKjB,QAAQW,UACb2e,EAAatf,QAAQW,QAAUM,EAAKjB,QAAQW,cAElBhG,IAA1BsG,EAAKjB,QAAQe,WACbue,EAAatf,QAAQe,SAAWE,EAAKjB,QAAQe,eAErBpG,IAAxBsG,EAAKjB,QAAQhH,SACbsmB,EAAatf,QAAQhH,OAASiI,EAAKjB,QAAQhH,aAEpB2B,IAAvBsG,EAAKjB,QAAQ/G,QACbqmB,EAAatf,QAAQ/G,MAAQgI,EAAKjB,QAAQ/G,YAEV0B,IAAhCsG,EAAKjB,QAAQmB,iBACbme,EAAatf,QAAQmB,eAAiBF,EAAKjB,QAAQmB,iBAI3Ds2B,EAAQqZ,UAAUwjD,WAAa,SAAUr5F,GACtByF,KAAK85E,cAAc8Z,WAAWr5F,EAAIiU,WAChCxO,KAAKwhF,eAClBxhF,KAAK+1F,cAIbh/D,EAAQqZ,UAAUvjB,gBAAkB,SAAUtyB,GAC1C,GAAIA,EAAI4X,SAGJ,IAAK,IAFD5D,OAAQ,EACR4D,EAAW5X,EAAI4X,SACVzb,EAAI,EAAGA,EAAIyb,EAAS1b,OAAQC,KACjC6X,EAAQvO,KAAK4b,UAAUzJ,EAASzb,MAE5BsJ,KAAK6sB,gBAAgBte,GAIjCvO,KAAK85E,cAAcjtD,gBAAgBtyB,EAAIiU,SACxBxO,KAAK85E,cAAchlC,aAAav6C,EAAIiU,WAClCxO,KAAKwhF,eAClBxhF,KAAK+1F,cAIbh/D,EAAQqZ,UAAU49D,gBAAkB,SAAUztG,GAC1C,IAAI89E,EACA99E,EAAKsb,WACLwiE,EAAWr+E,KAAK4b,UAAUrb,EAAKsb,aAEvBwiE,EAASxiE,SACT7b,KAAKguG,gBAAgB3vB,IAGrBA,EAAS7vE,QAAQ6Q,QAAQ,IAAIC,IAC7B++D,EAAS7vE,QAAQ+Q,QAAQ8+D,EAAS7vE,QAAQgR,aAC1Cxf,KAAKwmF,kBAAkBnI,GACvBr+E,KAAKse,oBAAoB+/D,MAKzCtnD,EAAQqZ,UAAU2lD,WAAa,WAC3B,GAAI/1F,KAAK0X,eAAiBC,gBAAcwhF,OAAQ,CAC5Cn5F,KAAKqiB,SAASkrE,sBACdvtF,KAAKqiB,SAASmuD,UAEd,IAAK,IAAI3zE,EAAK,EAAGohB,EAAKje,KAAK07B,MAAO7+B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAI8T,EAAOsN,EAAGphB,GACV04F,EAAOv1F,KAAK07B,MAAM/qB,GAChB4kF,aAAgBx+D,GAClBw+D,EAAKC,WAAWD,MAMhCx+D,EAAQqZ,UAAUz0B,sBAAwB,SAAUqzF,GAChDhvG,KAAKi3F,oBAAsB+X,GAG/Bj4E,EAAQqZ,UAAUs8D,aAAe,SAAUuC,EAAYC,QACvBj1G,IAAxBi1G,EAAc13G,QACdy3G,EAAWz3G,MAAQ03G,EAAc13G,YAETyC,IAAxBi1G,EAAc11F,QACdy1F,EAAWz1F,MAAQ01F,EAAc11F,YAENvf,IAA3Bi1G,EAAcxpG,WACdupG,EAAWvpG,SAAWwpG,EAAcxpG,eAEVzL,IAA1Bi1G,EAAc5yE,UACd2yE,EAAW3yE,QAAU4yE,EAAc5yE,UAI3CvF,EAAQqZ,UAAUo9D,aAAe,SAAUjtG,EAAM4oE,QAClBlvE,IAAvBkvE,EAAQxmE,OAAOI,MACfxC,EAAKoC,OAAOI,IAAMomE,EAAQxmE,OAAOI,UAEP9I,IAA1BkvE,EAAQxmE,OAAOG,SACfvC,EAAKoC,OAAOG,OAASqmE,EAAQxmE,OAAOG,aAEZ7I,IAAxBkvE,EAAQxmE,OAAOC,OACfrC,EAAKoC,OAAOC,KAAOumE,EAAQxmE,OAAOC,WAET3I,IAAzBkvE,EAAQxmE,OAAOE,QACftC,EAAKoC,OAAOE,MAAQsmE,EAAQxmE,OAAOE,QAK3Ck0B,EAAQqZ,UAAUsqD,eAAiB,WAC/B,IAII33E,EACAhD,EALA01B,EAAQz1C,KAERwrB,KACA2jF,KAGJnvG,KAAK42E,UAAY,IAAIw4B,YAAUpvG,KAAKJ,SAGpCI,KAAK42E,UAAUy4B,KAAO,SAAUtvG,GAC5B,GAAK01C,EAAMr1B,cA4LHrgB,EAAKsmD,MAAMxc,SAAW9pC,EAAKsmD,MAAMxc,QAAQpzC,QACzCg/C,EAAM4kC,aAAalY,UAAUpiE,EAAKsmD,MAAOtmD,EAAKsmD,MAAMxc,cA5LxD,GAAI9pC,EAAKuvG,SAAU,CACf,IAAIn2F,OAAS,EACT2U,OAAe,EACnBE,SAASC,eAAewnB,EAAM71C,QAAQC,GAAK,WAAWyrE,QACtD,IAAIjrE,EAAWo1C,EAAM4kC,aAAa1K,iBAAiB5vE,EAAKsmD,OACpDhwB,OAAe,EACfk5E,EAAiBxvG,EAAKuvG,SAASE,OAC/BC,EAAYF,EAAeG,aAAa,aAC5C,GAAID,EAAW,CACX,IAAIh9B,EAAgBzkD,SAASC,eAAewhF,GAAWE,cAAc,GAErEl6D,EAAMmhC,UAAgB,cAAInE,EAC1B,IAAIm9B,EAAkB,kBAEtB,GAAIn9B,EAAe,CACf,IAAIl4E,EAAMk4E,EAAcm9B,GACxBv5E,EAAepZ,GAAYw1D,EAAcm9B,IACzCpkF,EAAainD,EAAwB,WACrC,IAAIjkE,EAAUjU,EAAIiU,QAAQ2D,SAAS,GAAGA,SAAS,GAC/C,GAAIsgE,EAAcm9B,aAA4B96F,GAAM,CAChDuhB,EAAat6B,QAAUsE,EAASrJ,EAAI,GAAKq/B,EAAa99B,OAASiW,EAAQjC,WAAWhU,OAAS,EAC3F89B,EAAar6B,QAAUqE,EAASpJ,GAAKo/B,EAAa/9B,QAAUkW,EAAQjC,WAAWjU,QAAU,EACzF,IAAIknF,EAAU,IAAI1qE,GAAK2gC,EAAO,QAASpf,GAAc,GAKrD,GAJ2B,SAAvBmpD,EAAQphF,MAAMvC,MAAmB2jF,EAAQphF,MAAM+oD,SAASD,WAAWE,WAChEo4B,EAAQphF,MAAM+oD,SAASD,WAAWE,UAAU3wD,SAC/C+oF,EAAQphF,MAAM+oD,SAASD,WAAWE,cAEX,aAAvBo4B,EAAQphF,MAAMvC,KAAqB,CAEnC,GADA45C,EAAM/9B,gBAAkBC,gBAAc8kF,eAClCjd,EAAQphF,MAAMghB,OAAQ,CACtBogE,EAAQrtE,YACR4Q,GACIljB,GAAI,SAAWua,MAEe,eAA9BolE,EAAQphF,MAAMiT,aACd0R,EAAOxqB,MAAQinF,EAAQphF,MAAM0hB,MAAM,GAAGiD,OAAOxqB,MAC7CwqB,EAAOzqB,OAASknF,EAAQphF,MAAM0hB,MAAM,GAAGxnB,SAGvCyqB,EAAOxqB,MAAQinF,EAAQphF,MAAM0hB,MAAM,GAAGvnB,MACtCwqB,EAAOzqB,OAASknF,EAAQphF,MAAM0hB,MAAM,GAAGiD,OAAOzqB,QAElDyqB,EAAO7iB,MAAQs/E,EAAQphF,MAAM0hB,MAAM,GAAGiD,OAAO7iB,MAC7C6iB,EAAOhnB,QAAUsE,EAASrJ,EAAI,EAAI+rB,EAAOxqB,MAAQ,EACjDwqB,EAAO/mB,QAAUqE,EAASpJ,EAAI8rB,EAAOzqB,OAAS,EAC9CyqB,EAAS0yB,EAAM/pB,IAAI3I,GACnBhD,GACIlgB,GAAI,OAASua,MAEiB,eAA9BolE,EAAQphF,MAAMiT,aACd0O,EAAKxnB,MAAQinF,EAAQphF,MAAM0hB,MAAM,GAAGvnB,MAAQwqB,EAAOxqB,MACnDwnB,EAAKznB,OAASknF,EAAQphF,MAAM0hB,MAAM,GAAGxnB,OACrCynB,EAAKhkB,QAAUsE,EAASrJ,EAAI,GAAKwoF,EAAQphF,MAAM0hB,MAAM,GAAGiD,OAAOxqB,MAASwnB,EAAKxnB,MAAQ,GACrFwnB,EAAK/jB,QAAUqE,EAASpJ,EAAI8oB,EAAKznB,OAAS,IAG1CynB,EAAKxnB,MAAQinF,EAAQphF,MAAM0hB,MAAM,GAAGvnB,MACpCwnB,EAAKznB,OAASknF,EAAQphF,MAAM0hB,MAAM,GAAGxnB,OAASyqB,EAAOzqB,OACrDynB,EAAKhkB,QAAUsE,EAASrJ,EAAI,EAAI+oB,EAAKxnB,MAAQ,EAC7CwnB,EAAK/jB,QAAUqE,EAASpJ,GAAKuoF,EAAQphF,MAAM0hB,MAAM,GAAGiD,OAAOzqB,OAAUynB,EAAKznB,OAAS,IAEvFynB,EAAK7f,MAAQs/E,EAAQphF,MAAM0hB,MAAM,GAAG5f,MACpC6f,EAAO01B,EAAM/pB,IAAI3L,GACjB,IAAI42C,GACA92D,GAAI,QAAUua,KACdjI,UAAW4Q,EAAOljB,GAAIkgB,EAAKlgB,KAE/B82D,EAAMv4D,MAAQohF,EAAQphF,MACtBu4D,EAAMp+D,MAAQinF,EAAQphF,MAAM0hB,MAAM,GAAGvnB,MACrCo+D,EAAMr+D,OAASknF,EAAQphF,MAAM0hB,MAAM,GAAGxnB,OACtCknF,EAAU/pC,EAAM/pB,IAAIirC,GAExBlhB,EAAM/9B,iBAAmBC,gBAAc8kF,eAsB3C,GApBIjd,EAAQphF,MAAM+lB,WACd2J,EAA8C,eAA9B0xD,EAAQphF,MAAMiT,cAE1BmuE,EAAQzjF,QAAUsE,EAASrJ,EAAI,GAAKwoF,EAAQjnF,OAASiW,EAAQjC,WAAWhU,OAAS,EACjFinF,EAAQxjF,QAAUqE,EAASpJ,EAC3BuoF,EAAQphF,MAAMhI,KACV,OAAkBopF,EAAQlnF,OAAS,EAAK,MAAQknF,EAAQjnF,MAAQ,IAAM,IACjEinF,EAAQlnF,OAAS,EAAK,IAC/BknF,EAAQlnF,OAAS,IAGjBknF,EAAQzjF,QAAUsE,EAASrJ,EAAI,EAC/BwoF,EAAQxjF,QAAUqE,EAASpJ,GAAKuoF,EAAQlnF,QAAUkW,EAAQjC,WAAWjU,QAAU,EAC/EknF,EAAQphF,MAAMhI,KACV,IAAOopF,EAAQjnF,MAAQ,EAAK,QAAmBinF,EAAQjnF,MAAQ,EAC3D,KAAOinF,EAAQlnF,OAAS,IAAM,IACtCknF,EAAQjnF,MAAQ,IAGxB4gB,EAASqmE,EACLnpD,EAAalkB,SAAU,CACvB,IAAI8M,EAAaoX,EAEjB84E,EAAa15D,EAAMywC,YAAYjnE,KAAuBuM,GACtDkX,GAAazjB,GAAaA,EAAWljB,SAAUkjB,EAAWjjB,QAASmzG,GAAY,EAAM15D,SAGxF,GAAIg9B,EAAcm9B,aAA4Bj8F,GAAW,CAC1DwF,EAAS,IAAIxF,GAAU8hC,EAAO,aAAcpf,GAAc,GAC1D,IAAI70B,EAAS8K,GAAKmmB,UAAUtZ,EAAOpY,YAAaoY,EAAOlO,cACnD62C,EAAKzhD,EAASrJ,EAAIwK,EAAOoB,KACzBm/C,EAAK1hD,EAASpJ,EAAIuK,EAAOuB,IAC7BoW,EAAOpY,YAAY/J,GAAK8qD,EACxB3oC,EAAOpY,YAAY9J,GAAK8qD,EACxB5oC,EAAOlO,YAAYjU,GAAK8qD,EACxB3oC,EAAOlO,YAAYhU,GAAK8qD,EAEvB5oC,EAAO/a,MAAMghB,SACdjG,EAAOtZ,IAAMua,MAEjB,IAAI25C,GACAxxD,OAAQkwE,EAAe7yE,QAASuZ,EAAQisD,QAAQ,EAChDlmE,QAASu2C,GAKb,GAHAA,EAAmB,YAAIt8B,EACvBs8B,EAAkB,WAAI05D,EACtB15D,EAAM8vB,aAAalyB,eAAaw8D,UAAW97C,GACtC56C,aAAkBrE,IAA+B,aAAtBqE,EAAO/a,MAAMvC,MAAuBsd,EAAO/a,MAAMghB,OAAQ,CACrF,IAAI0wF,EAAc/7C,EAAIn0D,QAClBkoB,EAAUgoF,EAAY1xG,MAAM0hB,MAAM,GAClCiwF,OAAS,EACTC,OAAS,EACbliF,EAAkD,eAAlCgiF,EAAY1xG,MAAMiT,YAClC0+F,EAASt6D,EAAM75B,UAAUzC,EAAOhH,SAAS,IACzC69F,EAASv6D,EAAM75B,UAAUzC,EAAOhH,SAAS,IACrC2b,GACA/K,EAAOxqB,MAAQuvB,EAAQ/E,OAAOxqB,MAC9BwqB,EAAOzqB,OAASwvB,EAAQxvB,OACxBynB,EAAKxnB,MAAQuvB,EAAQvvB,MAAQwqB,EAAOxqB,MACpCwnB,EAAKznB,OAASwvB,EAAQxvB,OACtBynB,EAAKhkB,QAAUsE,EAASrJ,EAAI,GAAK8wB,EAAQ/E,OAAOxqB,MAASy3G,EAAOz3G,MAAQ,GACxEwnB,EAAK/jB,QAAUqE,EAASpJ,EAAI+4G,EAAO13G,OAAS,IAG5CyqB,EAAOxqB,MAAQuvB,EAAQvvB,MACvBwqB,EAAOzqB,OAASwvB,EAAQ/E,OAAOzqB,OAC/BynB,EAAKxnB,MAAQuvB,EAAQvvB,MACrBwnB,EAAKznB,OAASwvB,EAAQxvB,OAASyqB,EAAOzqB,OACtCynB,EAAKhkB,QAAUsE,EAASrJ,EAAI,EAAIg5G,EAAOz3G,MAAQ,EAC/CwnB,EAAK/jB,QAAUqE,EAASpJ,GAAK6wB,EAAQ/E,OAAOzqB,OAAU03G,EAAO13G,OAAS,IAE1EyqB,EAAOhnB,QAAUsE,EAASrJ,EAAI,EAAI+4G,EAAOx3G,MAAQ,EACjDwqB,EAAO/mB,QAAUqE,EAASpJ,EAAI84G,EAAOz3G,OAAS,EAC9C6gB,EAAO5gB,MAAQuvB,EAAQvvB,MACvB4gB,EAAO7gB,OAASwvB,EAAQxvB,OAEvB6gB,aAAkBrE,IAASqE,EAAO/a,MAAM+lB,UACrC2J,EACA3U,EAAO7gB,OAAS,EAGhB6gB,EAAO5gB,MAAQ,GAGlBk9C,EAAM2nC,YAAYnF,MAASlkB,EAAIqR,SAChC3vB,EAAM+rC,eAAgB,EAClBroE,EAAOhH,UACPsjC,EAAMw6D,UAAU92F,EAAQg2F,GAE5B15D,EAAM+rC,eAAgB,GACC,IAAnBroE,EAAO0R,SACP1R,EAAO0R,QAAU,GAErB4qB,EAAM57B,WAAWV,OAAQlf,OAAWA,GAAW,GAC/Cw7C,EAAMr1B,cAAgBjH,EACH,QAAfs8B,EAAM7pB,MACN6pB,EAAM5pB,sBAEV4pB,EAAMh4B,eAAeZ,OAAO1D,GAC5Bs8B,EAAM4kC,aAAaxY,UAAU9hE,EAAKsmD,OAClC5Q,EAAM4kC,aAAalY,UAAUpiE,EAAKsmD,MAAOtmD,GACzC01C,EAAM+rC,eAAgB,EACtB/rC,EAAMsgD,aACNwZ,EAAervG,MAAMo8B,QAAU,YAE5BmZ,EAAmB,mBACnBA,EAAkB,WAE7BA,EAAMmhC,UAAUg5B,GAAmBL,KAWnDvvG,KAAK42E,UAAUj0C,KAAO,SAAU5iC,GAC5B,IACI4F,EACJ,GAAI8vC,EAAMr1B,cAAe,CACrB,IACI8I,EADA/E,GAAU,EAEV+wE,OAAc,EAClBA,EAAez/C,EAAMr1B,yBAAyBzM,GAC1C5T,EAAKsmD,MAAMxc,SACX4L,EAAM4kC,aAAajY,QAAQriE,EAAKsmD,OAEpC,IAAIltC,OAAS,EAGT46C,GACAxxD,OAAQkzC,EAAMmhC,UAAgB,cAC9Bh3E,QAAS61C,EAAMr1B,cACfpd,OAAQyyC,EAAM4kC,aAAwB,WAAK5kC,EAAM4kC,aAAmC,sBAAK5kC,EAAO2vB,QAAQ,EACxG/kE,UAAYrJ,EAAGy+C,EAAMr1B,cAAc5R,QAAQzS,QAAS9E,EAAGw+C,EAAMr1B,cAAc5R,QAAQxS,UAEvFy5C,EAAM8vB,aAAalyB,eAAa1Q,KAAMoxB,GACtC,IAAI19B,OAAe,EACfx2B,EAAK,KAoBT,GAnBAw2B,EAAepZ,GAAYw4B,EAAMr1B,eACjCiW,EAAwB,UAAIof,EAAMr1B,cAAyB,UAC3Dq1B,EAAM5oB,gBAAgB4oB,EAAMr1B,eAC5Bq1B,EAAM3oB,uBAAuB2oB,EAAM75B,UAAU65B,EAAMr1B,cAAcvgB,KACjE41C,EAAMl1B,eAAek1B,EAAMr1B,gBACvBq1B,EAAMr1B,cAAchiB,MAAMghB,QAC1Bq2B,EAAMr1B,cAAchiB,MAAM+lB,UAC1BsxB,EAAMy6D,mBAAmBz6D,EAAMr1B,eAE/B2zC,EAAIqR,QACJpvC,GAAiByf,EAAMr1B,cAAeq1B,GAEtCA,EAAMr1B,cAAchiB,MAAM+lB,UAC1BA,GAAU,EACV+E,EAAgBusB,EAAMr1B,cAAchiB,MAAMiT,oBAEvCokC,EAAM75B,UAAU65B,EAAMr1B,cAAcvgB,IAC3C41C,EAAMr1B,cAAgB,KACtBq1B,EAAM95B,uBAAsB,IACvBo4C,EAAIqR,OAAQ,CASb,GARA3vB,EAAMt0B,mBACFkV,IAAiBA,EAAaj4B,MAAMghB,QAAU+E,KAC1CA,IACAkS,EAAaj4B,MAAM+lB,QAAUA,EAC7BkS,EAAaj4B,MAAMiT,YAAc6X,GAErCusB,EAAM4kC,aAAatF,kBAAkB1+C,IAET,SAA5BA,EAAaj4B,MAAMvC,MAAmBw6B,EAAaj4B,MAAMylB,YACtDwS,EAAwB,UAAG,CAC9B,IAAIsN,EAAStN,EAAaj4B,MAAMylB,WAAW8f,OAC3CtN,EAAaj4B,MAAMylB,WAAWhkB,GAAKw2B,EAAax2B,GAChD41C,EAAMknC,kBAAkBtmD,EAAaj4B,MAAMylB,WAAY4xB,EAAM75B,UAAU+nB,IACvEtN,EAAasN,OAAS,GAErBtN,EAAaj4B,MAAMghB,QAAW+E,IAC3BkS,EAAalkB,UACbsjC,EAAM06D,cAAc95E,GAEpB09B,EAAI/wD,QAAW+wD,EAAI/wD,kBAAkB8R,KAAUogF,GAAex5E,GAAuB+5B,EAAOse,EAAI/wD,SAC7FiT,GAAa89C,EAAI/wD,QACpBid,GAAoBw1B,EAAOse,EAAI/wD,OAAQqzB,GAGvC1wB,EAAQ8vC,EAAM/pB,IAAI2K,GAAc,IAE/BA,GAAgB1wB,IAAU2Q,GAAgBm/B,IAC3CA,EAAM54B,QAAQ44B,EAAM75B,UAAUya,EAAax2B,OAIvD41C,EAAM95B,uBAAsB,GAC5BxC,EAASs8B,EAAM75B,UAAUya,EAAax2B,IAClCw2B,EAAwB,YACxBA,EAAasN,OAAStN,EAAwB,UAC9Cof,EAAM/oB,OAAO2J,IAEbof,EAAMuR,YAAc7tC,aAAkBrE,IAAQuhB,EAAaowB,YAC3DttC,EAAOstC,UAAYpwB,EAAaowB,UAChChR,EAAMuR,WAAWukC,cAAc91C,EAAM75B,UAAUzC,EAAOstC,WAAYttC,EAAQs8B,IAE9EA,EAAM93B,iBACa,QAAf83B,EAAM7pB,MACN6pB,EAAM5pB,6BAEH4pB,EAAMmhC,UAAgB,cAE7BlqD,SAAO+oB,EAAMmhC,UAAyB,qBAErC,CACG7iB,GACAxxD,OAAQxC,EAAKqwG,eACbxwG,aAAS3F,EACT+I,OAAQyyC,EAAM4kC,aAAwB,WAAK5kC,EAAM4kC,aAAmC,sBAAK5kC,EAAO2vB,QAAQ,EACxG/kE,cAAUpG,GAEdw7C,EAAM8vB,aAAalyB,eAAa1Q,KAAMoxB,GAClC19B,OAAe,EACfx2B,EAAK,OAGjBG,KAAK42E,UAAUy5B,IAAM,SAAUtwG,GAC3B,GAAI01C,EAAMr1B,gBAAkBq1B,EAAM4kC,aAAa/O,MAAO,CAClD71B,EAAM0uB,SAAS1uB,EAAMr1B,eACrBq1B,EAAM5oB,gBAAgB4oB,EAAMr1B,eACT,QAAfq1B,EAAM7pB,MAAqD,WAAnC6pB,EAAMr1B,cAAchiB,MAAMvC,MAClD45C,EAAMl1B,eAAek1B,EAAMr1B,eAE/Bq1B,EAAM3oB,uBAAuB2oB,EAAM75B,UAAU65B,EAAMr1B,cAAcvgB,YAC1D41C,EAAM75B,UAAU65B,EAAMr1B,cAAcvgB,IAC3C41C,EAAM8vB,aAAalyB,eAAai9D,WAAa1wG,QAAS61C,EAAMr1B,cAAelhB,QAASu2C,IACjE,QAAfA,EAAM7pB,KACN6pB,EAAM5pB,sBAGN4pB,EAAMl1B,eAAek1B,EAAMr1B,eAE/Bq1B,EAAMr1B,cAAgB,KAEtBq1B,EAAMmhC,UAAyB,gBAAE12E,MAAMo8B,QAAU,WAE1CmZ,EAAMmhC,UAAgB,cAC7BnhC,EAAMrzB,gBAAgBnK,gBAClBw9B,EAAMy+B,kBAAkBz+B,EAAMrzB,gBAAgBnK,gBAAiBC,iBAAeC,oBAC9Es9B,EAAMw+B,wBACNx+B,EAAM54B,OAAO44B,EAAMw+B,uBAAwBx+B,EAAMw+B,uBAAuBx9E,OAAS,GAErFg/C,EAAMw+B,uBAAyB,QAI3Cl9C,EAAQqZ,UAAU8/D,mBAAqB,SAAU3vG,GAC7C,GAAIA,EAAM,CACN,GAAIA,EAAK4R,SACL,IAAK,IAAIzb,EAAI,EAAGA,EAAI6J,EAAK4R,SAAS1b,OAAQC,IACtCsJ,KAAKkwG,mBAAmBlwG,KAAK4b,UAAUrb,EAAK4R,SAASzb,KAG7D,IAAIosB,EAAQ9iB,KAAK8Z,MAAMwG,QAAQ/f,IAChB,IAAXuiB,GACA9iB,KAAK8Z,MAAMvT,OAAOuc,EAAO,KAIrCiU,EAAQqZ,UAAU6/D,UAAY,SAAU1vG,EAAMirB,GAG1C,IAAK,IAFDmrC,EACA6oB,EACK9oF,EAAI,EAAGA,EAAI6J,EAAK4R,SAAS1b,OAAQC,KACtCigE,EAAQnrC,EAAWjrB,EAAK4R,SAASzb,OAEzBigE,EAAMxkD,UACNnS,KAAKiwG,UAAUt5C,EAAOnrC,GAE1BmrC,EAAM92D,GAAK82D,EAAM92D,GAAKua,KACtBoR,EAAWmrC,EAAM92D,IAAM82D,EACvBp2D,EAAK4R,SAASzb,GAAKigE,EAAM92D,GACzB2/E,EAAU,IAAI1qE,GAAK9U,KAAM,QAAS22D,GAAO,GACzC32D,KAAK6Z,WAAW2lE,OAASvlF,OAAWA,GAAW,KAK3D88B,EAAQqZ,UAAU81C,YAAc,SAAU3lF,EAAM4uG,EAAY3jF,GAExD,IAAK,IADD7a,EACKja,EAAI,EAAGA,EAAI6J,EAAK4R,SAAS1b,OAAQC,KACtCia,EAAQ6a,EAAWjrB,EAAK4R,SAASzb,OAEzBia,EAAKwB,WACLg9F,EAAanvG,KAAKkmF,YAAYv1E,EAAMw+F,EAAY3jF,IAEpD2jF,EAAWx+F,EAAK9Q,IAAMod,GAAYtM,IAG1C,OAAOw+F,GAEXp4E,EAAQqZ,UAAU+/D,cAAgB,SAAU5vG,GAExC,IAAK,IADDoQ,EACKja,EAAI,EAAGA,EAAI6J,EAAK4R,SAAS1b,OAAQC,KACtCia,EAAQ3Q,KAAK4b,UAAUrb,EAAK4R,SAASzb,OAE7Bia,EAAKwB,UACLnS,KAAKmwG,cAAcx/F,GAEvB3Q,KAAK0rB,IAAI/a,GAAM,KAI3BomB,EAAQqZ,UAAUwsD,SAAW,SAAUr8F,GAKnC,IAAK,IADDo9E,EAHA6nB,EAAexlG,KAAKyd,eAAeu6D,eAAez3E,EAAKV,IACvDijB,EAAQ0iF,EAAa36E,OACrBp0B,EAAS+uG,EAAa3wE,QAAQp+B,OAEzBC,EAAI,EAAGA,EAAIsJ,KAAKk7B,OAAOzkC,OAAQC,IAChCosB,IAAU9iB,KAAKk7B,OAAOxkC,GAAGm0B,SACzB8yD,EAAc39E,KAAKk7B,OAAOxkC,EAAI,IAGtC,GAAID,EAAS,EACTuJ,KAAKyd,eAAeokE,YAAYthF,EAAKV,GAAI2lG,EAAa3wE,QAAQp+B,EAAS,IACvEuJ,KAAKyd,eAAeokE,YAAY2jB,EAAa3wE,QAAQp+B,EAAS,GAAI8J,EAAKV,SAGvE,GAAI89E,EAAa,CACb,IAAIuE,EAAeliF,KAAKyd,eAAe2lD,SAASpjE,KAAKm9E,iBAAiBQ,EAAY9yD,SAASgK,QAAQ,GAC/FqtD,EACAliF,KAAKyd,eAAeokE,YAAYthF,EAAKV,GAAIqiF,GAGzCliF,KAAKuwG,cAAchwG,EAAMilG,QAI7BxlG,KAAKuwG,cAAchwG,EAAMilG,IAIrCzuE,EAAQqZ,UAAUmgE,cAAgB,SAAUhwG,EAAMilG,GAE9C,IAAK,IADD7nB,EACKjnF,EAAIsJ,KAAKk7B,OAAOzkC,OAAS,EAAGC,GAAK,EAAGA,IAEzC,GADAinF,EAAc39E,KAAKk7B,OAAOxkC,GACtB8uG,EAAa3lG,KAAO89E,EAAY99E,GAAI,CACpC,IAAIqiF,EAAeliF,KAAKyd,eAAe2lD,SAASpjE,KAAKm9E,iBAAiBQ,EAAY9yD,SAASgK,QAAQ8oD,EAAY9oD,QAAQp+B,OAAS,GAChI,GAAIyrF,EAAc,CACdliF,KAAKyd,eAAeokE,YAAYthF,EAAKV,GAAIqiF,GACzCliF,KAAKyd,eAAeokE,YAAYK,EAAc3hF,EAAKV,IACnD,SAQhBk3B,EAAQqZ,UAAUogE,WAAa,SAAUjwG,GACrC,OAAOP,KAAKywG,cAAclwG,EAAM,SAAUP,KAAK0wG,kBAAkB,SAKrE35E,EAAQqZ,UAAUugE,WAAa,SAAUpwG,GACrC,OAAOP,KAAKywG,cAAclwG,EAAM,SAAUP,KAAK0wG,kBAAkB,YAKrE35E,EAAQqZ,UAAUwgE,WAAa,SAAUrwG,GACrC,OAAOP,KAAKywG,cAAclwG,EAAM,UAAWP,KAAK6wG,oBAEpD95E,EAAQqZ,UAAUqgE,cAAgB,SAAUlwG,EAAMuwG,EAAMC,GACpD,GAAIxwG,EAAM,CACN,IAAInK,EAAO4J,KAAKgxG,aAAazwG,IAAMA,aAAgBoT,KACnD,GAAIvd,EAAM,CACN,IAAI0uG,EAAMvkG,aAAgBoT,GAAY3T,KAAKy5B,mBAAmBkgE,qBAAqBhB,WAAWmY,GAAQ9wG,KAAKy5B,mBAAmBk/D,WAAWmY,GACzI9wG,KAAKixG,cAAcv6E,KAAKC,UAAUvgC,GAAO0uG,GAE7C,OAAO1uG,EAGP,IAAIu4F,EAAaoiB,EAEjB,OADA/wG,KAAKkxG,sBAAsBviB,EAAY3uF,KAAKy5B,mBAAmBk/D,WAAWmY,GAAO9wG,KAAKy5B,mBAAmBkgE,qBAAqBhB,WAAWmY,IAClIniB,GAGf53D,EAAQqZ,UAAU8gE,sBAAwB,SAAUviB,EAAYwiB,EAAgBC,GAC5E,GAAIziB,EAAW70E,MAAO,CAClB,IAAI1jB,KACAM,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAIi4F,EAAW70E,MAAMrjB,OAAQC,IACrCN,EAAKU,KAAKkJ,KAAKgxG,aAAariB,EAAW70E,MAAMpjB,IAAI,IAEjDN,GAAQA,EAAKK,OAAS,GACtBuJ,KAAKixG,cAAcv6E,KAAKC,UAAUvgC,GAAO+6G,GAEjD,GAAIxiB,EAAWhwE,WAAY,CACnBvoB,KACAM,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAIi4F,EAAWhwE,WAAWloB,OAAQC,IAC1CN,EAAKU,KAAKkJ,KAAKgxG,aAAariB,EAAWhwE,WAAWjoB,IAAI,IAEtDN,GAAQA,EAAKK,OAAS,GACtBuJ,KAAKixG,cAAcv6E,KAAKC,UAAUvgC,GAAOg7G,KAGrDr6E,EAAQqZ,UAAU4gE,aAAe,SAAUjkG,EAAQmmE,GAC/C,IACIx8E,EADA26G,KAEApM,EAAS/xB,EAASlzE,KAAKy5B,mBAAqBz5B,KAAKy5B,mBAAmBkgE,qBAexE,GAdIsL,EAAOplG,KACPwxG,EAAWpM,EAAOplG,IAAMkN,EAAOlN,IAC/BolG,EAAOC,cAAgBD,EAAOE,eAC9BkM,EAAWpM,EAAOC,cAAgBn4F,EAAOhM,YAAY/J,EACrDq6G,EAAWpM,EAAOE,cAAgBp4F,EAAOhM,YAAY9J,GAErDguG,EAAOG,cAAgBH,EAAOI,eAC9BgM,EAAWpM,EAAOG,cAAgBr4F,EAAO9B,YAAYjU,EACrDq6G,EAAWpM,EAAOI,cAAgBt4F,EAAO9B,YAAYhU,GAErDguG,EAAOxjG,WACP4vG,EAAWpM,EAAOxjG,UAAYsL,EAAOtL,UACrCwjG,EAAOh+E,WACPoqF,EAAWpM,EAAOh+E,UAAYla,EAAOka,UACrCg+E,EAAOtM,YAAcsM,EAAOtM,WAAW2M,cAAgBL,EAAOtM,WAAW2M,aAAa7uG,OAAS,EAC/F,IAAKC,EAAI,EAAGA,EAAIuuG,EAAOtM,WAAW2M,aAAa7uG,OAAQC,IACnD26G,EAAWpM,EAAOtM,WAAW2M,aAAa5uG,IAAMqW,EAAOk4F,EAAOtM,WAAW2M,aAAa5uG,IAE9F,OAAO26G,GAEXt6E,EAAQqZ,UAAUsgE,kBAAoB,SAAUpzD,GAC5C,IAAIxjC,KACA6E,KACJ,IAAK,IAAI2yF,KAAUtxG,KAAK4b,UAAW,CAC/B,IAAIrb,EAAOP,KAAK4b,UAAU01F,GACtB/wG,EAAK+8C,QAAUA,IACX/8C,GAAQA,aAAgBoT,IACxBpT,EAAK+8C,OAAS,OACd3+B,EAAW7nB,KAAKyJ,KAGhBA,EAAK+8C,OAAS,OACdxjC,EAAMhjB,KAAKyJ,KAIvB,OAASuZ,MAAOA,EAAO6E,WAAYA,IAEvCoY,EAAQqZ,UAAUygE,gBAAkB,WAChC,IAEIn6G,EAFAojB,KACA6E,KAEJ,IAAKjoB,EAAI,EAAGA,EAAIsJ,KAAK+0F,gBAAgBt+F,OAAQC,IAAK,CAC9C,IAAI6J,EAAOP,KAAK+0F,gBAAgBr+F,GAC5B6J,GAAQA,EAAKpH,SACbwlB,EAAW7nB,KAAKyJ,GACXA,GACLuZ,EAAMhjB,KAAKyJ,GAInB,OADAP,KAAK+0F,oBACIj7E,MAAOA,EAAO6E,WAAYA,IAEvCoY,EAAQqZ,UAAU6gE,cAAgB,SAAUtrG,EAAOm/F,GAC/C,IAAIzL,EAAW,IAAIC,OAAKwL,EAAK,QAAQ,EAAM,oBACvC1uG,EAAOsgC,KAAKC,UAAUD,KAAKiE,MAAMh1B,IACrC0zF,EAASI,KAAKrjG,GAAMsjG,OACpBL,EAASE,UAAY,SAAUnjG,MAGnC06C,IACIoB,WAAS,SACVnb,EAAQqZ,UAAW,aAAS,GAC/BU,IACIoB,WAAS,QACVnb,EAAQqZ,UAAW,YAAQ,GAC9BU,IACIoB,WAAS,SACVnb,EAAQqZ,UAAW,cAAU,GAChCU,IACIyH,aAAY+U,KACbv2B,EAAQqZ,UAAW,2BAAuB,GAC7CU,IACIoB,WAAS97B,qBAAmByC,UAC7Bke,EAAQqZ,UAAW,mBAAe,GACrCU,IACIoB,WAASz7B,eAAaoC,UACvBke,EAAQqZ,UAAW,YAAQ,GAC9BU,IACIoB,WAAS,QACVnb,EAAQqZ,UAAW,uBAAmB,GACzCU,IACIoB,WAAS,gBACVnb,EAAQqZ,UAAW,uBAAmB,GACzCU,IACIyH,aAAYinB,KACbzoC,EAAQqZ,UAAW,oBAAgB,GACtCU,IACIyH,aAAYmnB,KACb3oC,EAAQqZ,UAAW,qBAAiB,GACvCU,IACIyH,aAAY0mB,KACbloC,EAAQqZ,UAAW,oBAAgB,GACtCU,IACIyH,aAAYo8C,KACb59D,EAAQqZ,UAAW,6BAAyB,GAC/CU,IACIuE,gBAAevgC,KAChBiiB,EAAQqZ,UAAW,aAAS,GAC/BU,IACIoB,cACDnb,EAAQqZ,UAAW,qBAAiB,GACvCU,IACIuE,gBAAe1hC,KAChBojB,EAAQqZ,UAAW,kBAAc,GACpCU,IACIoB,gBACDnb,EAAQqZ,UAAW,qBAAiB,GACvCU,IACIyH,aAAYiE,KACbzlB,EAAQqZ,UAAW,eAAW,GACjCU,IACIyH,aAAYsnB,KACb9oC,EAAQqZ,UAAW,0BAAsB,GAC5CU,IACIoB,cACDnb,EAAQqZ,UAAW,eAAW,GACjCU,IACIoB,cACDnb,EAAQqZ,UAAW,sBAAkB,GACxCU,IACIoB,cACDnb,EAAQqZ,UAAW,uBAAmB,GACzCU,IACIoB,cACDnb,EAAQqZ,UAAW,4BAAwB,GAC9CU,IACIoB,cACDnb,EAAQqZ,UAAW,uBAAmB,GACzCU,IACIoB,cACDnb,EAAQqZ,UAAW,sBAAkB,GACxCU,IACIoB,cACDnb,EAAQqZ,UAAW,yBAAqB,GAC3CU,IACIoB,cACDnb,EAAQqZ,UAAW,qBAAiB,GACvCU,IACIoB,cACDnb,EAAQqZ,UAAW,uBAAmB,GACzCU,IACIoB,cACDnb,EAAQqZ,UAAW,uBAAmB,GACzCU,IACIyH,aAAYvkC,KACb+iB,EAAQqZ,UAAW,qBAAiB,GACvCU,IACIyH,aAAY2mB,KACbnoC,EAAQqZ,UAAW,sBAAkB,GACxCU,IACIyH,aAAYunB,KACb/oC,EAAQqZ,UAAW,cAAU,GAChCU,IACIyH,aAAY8U,KACbt2B,EAAQqZ,UAAW,sBAAkB,GACxCU,IACIygE,WACDx6E,EAAQqZ,UAAW,kBAAc,GACpCU,IACIygE,WACDx6E,EAAQqZ,UAAW,iBAAa,GACnCU,IACIygE,WACDx6E,EAAQqZ,UAAW,iBAAa,GACnCU,IACIygE,WACDx6E,EAAQqZ,UAAW,gBAAY,GAClCU,IACIygE,WACDx6E,EAAQqZ,UAAW,aAAS,GAC/BU,IACIygE,WACDx6E,EAAQqZ,UAAW,qBAAiB,GACvCU,IACIygE,WACDx6E,EAAQqZ,UAAW,mBAAe,GACrCU,IACIygE,WACDx6E,EAAQqZ,UAAW,gBAAY,GAClCU,IACIygE,WACDx6E,EAAQqZ,UAAW,oBAAgB,GACtCU,IACIygE,WACDx6E,EAAQqZ,UAAW,uBAAmB,GACzCU,IACIygE,WACDx6E,EAAQqZ,UAAW,kBAAc,GACpCU,IACIygE,WACDx6E,EAAQqZ,UAAW,wBAAoB,GAC1CU,IACIygE,WACDx6E,EAAQqZ,UAAW,yBAAqB,GAC3CU,IACIygE,WACDx6E,EAAQqZ,UAAW,yBAAqB,GAC3CU,IACIygE,WACDx6E,EAAQqZ,UAAW,sBAAkB,GACxCU,IACIygE,WACDx6E,EAAQqZ,UAAW,sBAAkB,GACxCU,IACIygE,WACDx6E,EAAQqZ,UAAW,yBAAqB,GAC3CU,IACIygE,WACDx6E,EAAQqZ,UAAW,oBAAgB,GACtCU,IACIygE,WACDx6E,EAAQqZ,UAAW,wBAAoB,GAC1CU,IACIygE,WACDx6E,EAAQqZ,UAAW,yBAAqB,GAC3CU,IACIygE,WACDx6E,EAAQqZ,UAAW,eAAW,GACjCU,IACIygE,WACDx6E,EAAQqZ,UAAW,kBAAc,GACpCU,IACIygE,WACDx6E,EAAQqZ,UAAW,kBAAc,GACpCU,IACIygE,WACDx6E,EAAQqZ,UAAW,iBAAa,GACnCU,IACIygE,WACDx6E,EAAQqZ,UAAW,uBAAmB,GACzCU,IACIygE,WACDx6E,EAAQqZ,UAAW,mCAA+B,GACrDU,IACIygE,WACDx6E,EAAQqZ,UAAW,wBAAoB,GAC1CU,IACIuE,gBAAemlC,KAChBzjD,EAAQqZ,UAAW,cAAU,GAChCU,IACIygE,WACDx6E,EAAQqZ,UAAW,YAAQ,GACvBrZ,GACTy1B,aC5yMEglD,GAAgC,WAChC,SAASA,EAAetyG,GACpBc,KAAKd,QAAUA,EAixBnB,OA3wBAsyG,EAAephE,UAAUowD,cAAgB,SAAU55D,GAC/C,IAAI6qE,EACAhhB,EACAxwF,EAGA2rB,EADAx1B,EAAO,OAEPs7G,KACA/uG,EAASikC,EAAQjkC,WACjBmuB,EAAS8V,GAAWA,EAAQ9V,OAAS8V,EAAQ9V,OAAS,UAC1DlF,EAAOgb,GAAWA,EAAQhb,KAAOgb,EAAQhb,KAAO,WAChD,IAAIpqB,EAASxB,KAAKugG,iBAAiBzvE,EAAQ8V,GACvCA,EAAQplC,SACRivF,GAAe,EACfjvF,EAAOxK,EAAI4vC,EAAQplC,OAAOxK,EAAI4vC,EAAQplC,OAAOxK,EAAIwK,EAAOxK,EACxDwK,EAAOvK,EAAI2vC,EAAQplC,OAAOvK,EAAI2vC,EAAQplC,OAAOvK,EAAIuK,EAAOvK,EACxDuK,EAAOjJ,MAAQquC,EAAQplC,OAAOjJ,OAASiJ,EAAOjJ,MAC9CiJ,EAAOlJ,OAASsuC,EAAQplC,OAAOlJ,QAAUkJ,EAAOlJ,QAEpDqK,GACII,SAAoB9I,IAAf0I,EAAOI,IAAoBJ,EAAOI,IAAM,GAC7CD,YAA0B7I,IAAlB0I,EAAOG,OAAuBH,EAAOG,OAAS,GACtDD,WAAwB5I,IAAjB0I,EAAOE,MAAsBF,EAAOE,MAAQ,GACnDD,UAAsB3I,IAAhB0I,EAAOC,KAAqBD,EAAOC,KAAO,IAExC5C,KAAKd,QAAQ4a,MACV,iBAAXgX,IACAtvB,EAAOxK,GAAK2L,EAAOC,KACnBpB,EAAOvK,GAAK0L,EAAOI,IACnBvB,EAAOjJ,OAASoK,EAAOC,KAAOD,EAAOE,MACrCrB,EAAOlJ,QAAUqK,EAAOI,IAAMJ,EAAOG,QAEzC,IAAI6uG,EAAW/qE,EAAQ+qE,UAAY,UACnC,GAAuB,QAAnB/qE,EAAQgrE,QAER,GAAa,QADbx7G,EAAO4J,KAAK6xG,UAAUjrE,EAASplC,EAAQmB,EAAQipB,EAAM6kE,EAAc3/D,EAAQ6gF,IAEvE,OAAOv7G,MAGV,CACDq7G,EAAW7qE,EAAQgrE,OACnBhrE,EAAQplC,OAASA,EACjBolC,EAAQjkC,OAASA,EACjB,IAAI4nC,EAAMtqC,EAAUD,KAAK8xG,aAAalrE,EAASjkC,GAC/C,GAAa,SAATipB,EACA,OAAO3rB,EAEX,IAAI8xG,GAAS,IAAIC,eAAgBC,kBAAkB1nE,GACnDmnE,EAAQ56G,KAAKi7G,GAEjB,GAAa,aAATnmF,GAAgC,OAATx1B,EACvB,IAOK,IAAIoa,EAAI,EAAGA,EAAIkhG,EAAQj7G,OAAQ+Z,IAAK,CACrC,IAAI0hG,EAAO,IAAIC,MAAMT,EAAQlhG,KAAO3U,KAAM,6BAC1C,GAA0B,SAAtBwoC,UAAQC,KAAKjrB,KACbsrB,OAAOqsC,UAAUohC,iBAAiBF,EAAMP,EAAW,IAAMF,OAExD,CACD,IAAIY,EAAM/jF,GAAkB,KAAOgkF,SAAYX,EAAW,IAAMF,IAC5D3M,EAAMyN,IAAIC,gBAAgBN,GAC9BG,EAAII,KAAO3N,EACX,IAAIh3F,EAAIkgB,SAAS0kF,YAAY,eAC7B5kG,EAAE6kG,eAAe,SAAS,GAAM,EAAMhuE,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,MAC5F0tE,EAAIO,cAAc9kG,IAI9B,OAAO,MAEX0jG,EAAephE,UAAUyhE,UAAY,SAAUjrE,EAASplC,EAAQmB,EAAQipB,EAAM6kE,EAAc3/D,EAAQ6gF,GAChG,IAAI1xG,EACJ2mC,EAAQplC,OAASA,EACjBolC,EAAQ9V,OAASA,EAKjB9wB,KAAK6yG,uBAAuBjsE,EAASplC,GACrC,IAAIigB,EAASzhB,KAAK8yG,iBACdtxG,OAAQA,EAAQmB,OAAQA,EAAQmuB,OAAQA,EAAQpzB,OAAQkpC,EAAc,OACtEjpC,OAAQipC,EAAc,OAAGmsE,aAAcnsE,EAAoB,aAAGosE,aAAcpsE,EAAoB,cACjG6pD,GACCp+B,EAAQpyD,EAAUwhB,EAAOwxF,YAC7B,MAAa,SAATrnF,EACO3rB,GAEXD,KAAKkzG,mBAAmBtsE,EAASnlB,EAAQ9e,EAAQ0vD,EAAOs/C,GACjD,OAEXH,EAAephE,UAAU8iE,mBAAqB,SAAUtsE,EAASnlB,EAAQ9e,EAAQ0vD,EAAOs/C,GACpF,IAAIl8D,EAAQz1C,KACRmzG,KACA1B,EAAW7qE,EAAQgrE,QAAU,MACjC,GAAIhrE,EAAQ2oD,aAAc,CAMtB,GALA3oD,EAAQwsE,WAAaxsE,EAAQwsE,WAAaxsE,EAAQwsE,WAAapzG,KAAKd,QAAQ67B,aAAaziC,OACzFsuC,EAAQysE,UAAYzsE,EAAQysE,UAAYzsE,EAAQysE,UAAYrzG,KAAKd,QAAQ67B,aAAaxiC,MACtFquC,EAAQwsE,WAAaxsE,EAAQwsE,WAAaxsE,EAAQwsE,WAAa3xF,EAAOlpB,MACtEquC,EAAQysE,UAAYzsE,EAAQysE,UAAYzsE,EAAQysE,UAAY5xF,EAAOnpB,OACnEqK,EAASikC,EAAQjkC,WACbikC,EAAQ0sE,kBACyB,cAA5B1sE,EAAQ0sE,iBAAmC1sE,EAAQwsE,WAAaxsE,EAAQysE,WAC7C,aAA5BzsE,EAAQ0sE,iBAAkC1sE,EAAQysE,UAAYzsE,EAAQwsE,YAAY,CAClF,IAAIziG,EAAOi2B,EAAQysE,UACnBzsE,EAAQysE,UAAYzsE,EAAQwsE,WAC5BxsE,EAAQwsE,WAAaziG,EAG7Bi2B,EAAQjkC,QACJI,IAAMoM,MAAMxM,EAAOI,KAAoB,EAAbJ,EAAOI,IACjCD,OAASqM,MAAMxM,EAAOG,QAA0B,EAAhBH,EAAOG,OACvCF,KAAOuM,MAAMxM,EAAOC,MAAsB,EAAdD,EAAOC,KACnCC,MAAQsM,MAAMxM,EAAOE,OAAwB,EAAfF,EAAOE,OAEzC,IAII0wG,EAAQjlF,GAAkB,OAH1BzuB,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,cAChCgJ,IAAOwpD,IAGXkhD,EAAM3gD,OAAS,WACXugD,EAAS19D,EAAM+9D,iBAAiBD,EAAO3sE,GAAS,GAChD6O,EAAMsqD,YAAYoT,EAAQxB,EAAUF,EAAUp/C,SAIlD8gD,GAAU9gD,GACVryD,KAAK+/F,YAAYoT,EAAQxB,EAAUF,EAAUp/C,IAGrDm/C,EAAephE,UAAU2vD,YAAc,SAAUoT,EAAQxB,EAAUF,EAAUp/C,GAGzE,IAAK,IAFDq/C,KACAj7G,EAAY08G,aAAkBrnE,YAAgC,EAAhBqnE,EAAO18G,OAChD40D,EAAI,EAAGA,EAAI50D,EAAQ40D,IAAK,CAO7B,IAAK,IAJDooD,EAFIN,EAAO9nD,GACD9lB,QAAQ,iBAAkB,IACrBx2B,MAAM,KACrB2kG,EAAaC,KAAKF,EAAO,IACzB1B,EAAS,IAAI6B,YAAYF,EAAWj9G,QACpCo9G,EAAW,IAAIC,WAAW/B,GACrBr7G,EAAI,EAAGA,EAAIg9G,EAAWj9G,OAAQC,IACnCm9G,EAASn9G,GAAKg9G,EAAWK,WAAWr9G,GAExCg7G,EAAQ56G,KAAKi7G,GAwBjB,IAAK,IAtBDiC,EAAU,SAAU39G,GACpB,IAAIma,EAAI,IAAI2hG,MAAMT,EAAQr7G,KAAOwF,KAAM,6BACvC,GAA0B,SAAtBwoC,UAAQC,KAAKjrB,KACbsrB,OAAOqsC,UAAUohC,iBAAiB5hG,EAAGmhG,EAAW,IAAMF,OAErD,CACD,IAAIwC,EAAgB3lF,GAAkB,KAAOgkF,SAAYX,EAAW,IAAMF,IACtEyC,EAAU3B,IAAIC,gBAAgBhiG,GAClCyjG,EAAcxB,KAAOyB,EACrB,IAAIC,EAAenmF,SAAS0kF,YAAY,eACxCyB,EAAaxB,eAAe,SAAS,GAAM,EAAMhuE,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,MACvGkS,WAAW,WACPo9D,EAAcrB,cAAcuB,IAClB,GAAT99G,EAAI,MASRA,EAAI,EAAGA,EAAIq7G,EAAQj7G,OAAQJ,IAChC29G,EAAQ39G,IAIhBm7G,EAAephE,UAAUgkE,gBAAkB,SAAUxtE,GAGjD,IAAK,IADDytE,EACKx3G,EAAK,EAAGi/B,EAFL97B,KAAKd,QAAQ4a,MAESjd,EAAKi/B,EAAQrlC,OAAQoG,IAAM,CACzD,IAAI0D,EAAOu7B,EAAQj/B,GACf0D,EAAKq9B,WACoB,QAAnBgJ,EAAQgrE,QAAsBrxG,aAAgBi+B,IAA2Bj+B,aAAgBm+B,MACpE,QAAnBkI,EAAQgrE,QAAsBrxG,aAAgBm+B,MAK9C21E,EAJCA,EAIYA,EAAWhiG,UAAU9R,EAAKiO,QAAQxB,aAHlCzM,EAAKiO,QAAQxB,cAS1C,IAAK,IAAIiR,EAAK,EAAG+lF,EADAhkG,KAAKd,QAAQyf,WACcV,EAAK+lF,EAAavtG,OAAQwnB,IAAM,CACxE,IAAI1Z,EAAYy/F,EAAa/lF,GACzB1Z,EAAUq5B,UAKNy2E,EAJCA,EAIYA,EAAWhiG,UAAU9N,EAAUiK,QAAQxB,aAHvCzI,EAAUiK,QAAQxB,aAO3C,OAAOqnG,GAAc,IAAI/nG,GAAK,EAAG,EAAG,EAAG,IAG3CklG,EAAephE,UAAUmwD,iBAAmB,SAAU30E,EAAMgb,GACxD,IAAIv6B,EAAOrM,KAAKo0G,gBAAgBxtE,GAC5BhkC,EAAOyJ,EAAKzJ,KACZG,EAAMsJ,EAAKtJ,IACXF,EAAQwJ,EAAKxJ,MAAQwJ,EAAKzJ,KAC1BE,EAASuJ,EAAKvJ,OAASuJ,EAAKtJ,IACnB,YAAT6oB,IACI5rB,KAAKd,QAAQ67B,cAAgB/6B,KAAKd,QAAQ67B,aAAaw0D,cACvD3sF,EAAOyJ,EAAKzJ,KACZG,EAAMsJ,EAAKtJ,IACP/C,KAAKd,QAAQ67B,aAAaxiC,QAC1BqK,EAAOnG,KAAKymC,MAAMtgC,EAAO5C,KAAKd,QAAQ67B,aAAaxiC,OAASyH,KAAKd,QAAQ67B,aAAaxiC,MACtFsK,EAAQpG,KAAK+oC,KAAKn5B,EAAKxJ,MAAQ7C,KAAKd,QAAQ67B,aAAaxiC,OAASyH,KAAKd,QAAQ67B,aAAaxiC,MAAQqK,GAEpG5C,KAAKd,QAAQ67B,aAAaziC,SAC1ByK,EAAMtG,KAAKymC,MAAMngC,EAAM/C,KAAKd,QAAQ67B,aAAaziC,QAAU0H,KAAKd,QAAQ67B,aAAaziC,OACrFwK,EAASrG,KAAK+oC,KAAKn5B,EAAKvJ,OAAS9C,KAAKd,QAAQ67B,aAAaziC,QAAU0H,KAAKd,QAAQ67B,aAAaziC,OAASyK,GAExF,IAAfsJ,EAAK9T,OAAoD,OAApCyH,KAAKd,QAAQ67B,aAAaxiC,QAChDsK,EAAQ7C,KAAKd,QAAQ67B,aAAaxiC,OAEjB,IAAhB8T,EAAK/T,QAAsD,OAArC0H,KAAKd,QAAQ67B,aAAaziC,SACjDwK,EAAS9C,KAAKd,QAAQ67B,aAAaziC,UAInC0H,KAAKd,QAAQ67B,aAAaxiC,QAC1BqK,EAAO,EACPC,EAAQ7C,KAAKd,QAAQ67B,aAAaxiC,OAElCyH,KAAKd,QAAQ67B,aAAaziC,SAC1ByK,EAAM,EACND,EAAS9C,KAAKd,QAAQ67B,aAAaziC,UAI/C,IAAIwsC,EAAY,IAAIx4B,GAKpB,OAJAw4B,EAAU9tC,EAAI4L,EACdkiC,EAAU7tC,EAAI8L,EACd+hC,EAAUvsC,MAAQsK,EAClBiiC,EAAUxsC,OAASwK,EACZgiC,GAEX0sE,EAAephE,UAAUyiE,uBAAyB,SAAUjsE,EAASplC,GAKjEolC,EAAc,OAAI,EAClBA,EAAc,OAAI,EAClBA,EAAoB,aAAI,EACxBA,EAAoB,aAAI,EACxBA,EAAQwsE,WAAaxsE,EAAQwsE,YAAcpzG,KAAKd,QAAQ67B,aAAaziC,OACrEsuC,EAAQysE,UAAYzsE,EAAQysE,WAAarzG,KAAKd,QAAQ67B,aAAaxiC,MACnE,IAAI+6G,EAAkB1sE,EAAQ0sE,iBAAmBtzG,KAAKd,QAAQ67B,aAAa1pB,YAI3E,GAHKiiG,IACDA,EAAkB,YAEE,aAApBA,GACA,GAAI1sE,EAAQysE,UAAYzsE,EAAQwsE,WAAY,CACxC,IAAIziG,EAAOi2B,EAAQwsE,WACnBxsE,EAAQwsE,WAAaxsE,EAAQysE,UAC7BzsE,EAAQysE,UAAY1iG,QAIxB,GAAIi2B,EAAQwsE,WAAaxsE,EAAQysE,UAAW,CACpC1iG,EAAOi2B,EAAQysE,UACnBzsE,EAAQysE,UAAYzsE,EAAQwsE,WAC5BxsE,EAAQwsE,WAAaziG,EAGzBi2B,EAAQysE,WAAazsE,EAAQwsE,aAAexsE,EAAQ2oD,eACpD3oD,EAAQsR,QAAU,QAEtB,IAAI5/C,EAASsuC,EAAQwsE,YAAc5xG,EAAOlJ,OACtCC,EAAQquC,EAAQysE,WAAa7xG,EAAOjJ,MAChB,YAApBquC,EAAQsR,SAA6C,SAApBtR,EAAQsR,SAA0C,UAApBtR,EAAQsR,UACvEtR,EAAc,OAAIruC,EAAQiJ,EAAOjJ,MACjCquC,EAAc,OAAItuC,EAASkJ,EAAOlJ,OACV,SAApBsuC,EAAQsR,SACRtR,EAAc,OAAIA,EAAc,OAAInqC,KAAKyK,IAAI0/B,EAAc,OAAGA,EAAc,QAC5EA,EAAoB,cAAKA,EAAQwsE,WAAa5xG,EAAOlJ,OAASsuC,EAAc,QAAK,EACjFA,EAAoB,cAAKA,EAAQysE,UAAY7xG,EAAOjJ,MAAQquC,EAAc,QAAK,GAEtD,UAApBA,EAAQsR,UACbtR,EAAc,OAAIA,EAAc,OAAInqC,KAAKmJ,IAAIghC,EAAc,OAAGA,EAAc,SAEhFplC,EAAOjJ,MAAQA,EACfiJ,EAAOlJ,OAASA,GAEpBkJ,EAAOxK,GAAK4vC,EAAc,OAC1BplC,EAAOvK,GAAK2vC,EAAc,QAE9B4qE,EAAephE,UAAU0hE,aAAe,SAAUlrE,EAASjkC,GACvD,IAAI4nC,EAAMvqC,KAAKd,QAAQsiG,UAAUxhG,KAAKd,QAAQU,QAAQC,GAAK,eAAgB+mC,EAAQplC,OAAOjJ,MAAOquC,EAAQplC,OAAOlJ,QAChH01B,SAASuY,KAAKvH,YAAYuL,GAC1B,IAAI8gB,EAAIniB,GAAiB,KAAOrpC,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,oBAC5DixB,EAAS8V,GAAWA,EAAQ9V,OAAS8V,EAAQ9V,OAAS,UACtDtvB,EAASxB,KAAKugG,iBAAiBzvE,EAAQ8V,GACvChkC,EAAOpB,EAAOxK,EACd+L,EAAMvB,EAAOvK,EACbsB,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OACpBiyC,EAAIvL,YAAYqsB,GAChB,IAAIL,GACAh0D,EAAK63G,OAAOjsG,GACZ3L,EAAK43G,OAAO9rG,GAAMxK,MAASs2G,OAAOt2G,GAAQD,OAAUu2G,OAAOv2G,IAE/D8wC,GAAgBiiB,EAAGL,GACnBhrD,KAAKspG,aAAaj+C,EAAGzkB,EAAQplC,OAAQmB,GACrC,IAAI06B,EAAWrP,SAASC,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,oBAC7Dw9B,GACAkN,EAAIvL,YAAY3B,GAEpB2tB,GACIh0D,EAAK,EACLC,EAAK,EAAGsB,MAASs2G,OAAOt2G,EAAQoK,EAAOC,KAAOD,EAAOE,OAAQvK,OAAUu2G,OAAOv2G,EAASqK,EAAOI,IAAMJ,EAAOG,SAE/G,IAAIwxG,EAAYtmF,SAASC,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,yBAAyByqC,WAAU,GACrGlB,GAAgBkrE,EAAWtpD,GAC3BzgB,EAAIvL,YAAYs1E,GAChBt0G,KAAKspG,aAAagL,EAAW9yG,EAAQmB,GACrC,IAAI4xG,EAAWvmF,SAASC,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,wBAAwByqC,WAAU,GAInG,GAHAlB,GAAgBmrE,EAAUvpD,GAC1BzgB,EAAIvL,YAAYu1E,GAChBv0G,KAAKspG,aAAaiL,EAAU/yG,EAAQmB,GACV,QAAtB3C,KAAKd,QAAQ0sB,KAAgB,CAC7B,IAAIhsB,OAAU,EACVlJ,OAAI,EACJ89G,EAAkB7sE,GAAmB3nC,KAAKd,QAAQU,QAAQC,IAE9D,IADA0qC,EAAIvL,YAAYw1E,EAAgBvmF,eAAejuB,KAAKd,QAAQyjF,aAAa9iF,IAAIyqC,WAAU,IAClF5zC,EAAI,EAAGA,EAAI6zC,EAAIhG,WAAW9tC,OAAQC,KACnCkJ,EAAU2qC,EAAIhG,WAAW7tC,IACbmJ,KAAOG,KAAKd,QAAQU,QAAQC,GAAK,iBACzCG,KAAKspG,aAAa1pG,EAAS4B,EAAQmB,OAI1C,CACD0oD,EAAIniB,GAAiB,KAAOrpC,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,kBAC5D0qC,EAAIvL,YAAYqsB,GAChBrrD,KAAKspG,aAAaj+C,EAAGzkB,EAAQplC,OAAQmB,GAErC,IAAI+0D,EAAW,IAAIH,GAAgB,GAAI,MAAM,GACzCvlC,EAAYqW,GAAaroC,KAAKd,QAAQU,QAAQC,IAClDG,KAAKd,QAAQqqG,sBAAsBh/D,EAAKmtB,EAAU1lC,GAAW,GAGjE,OADAhE,SAASuY,KAAKxH,YAAYwL,GACnBA,GAEXinE,EAAephE,UAAUk5D,aAAe,SAAU1pG,EAAS4B,EAAQmB,GAC/D/C,EAAQglC,aAAa,YAAa,eAAiBpjC,EAAOxK,EAAI2L,EAAOC,MAAQ,OACvEpB,EAAOvK,EAAI0L,EAAOI,KAAO,MAEnCyuG,EAAephE,UAAU0iE,gBAAkB,SAAUlsE,EAAS6pD,GAC1D,IAMI3/D,EAAS8V,EAAQplC,OACjBmB,EAASikC,EAAQjkC,OACjBipB,EAAOgb,GAAWA,EAAQ9V,OAAS8V,EAAQ9V,OAAS,UACpD08D,EAAaxtF,KAAKugG,iBAAiB30E,EAAMgb,GACzC6tE,EAAUz0G,KAAKd,QAAQ67B,aAAawjC,WAAW/kD,MAC/CiI,EAASssC,GAAeyB,aAAaxvD,KAAKd,QAAQU,QAAQC,GAAK,WAAY+mC,EAAQplC,OAAOjJ,MAAOquC,EAAQplC,OAAOlJ,QAEhHo8G,EAAUjzF,EAAOusC,WAAW,MAChC0mD,EAAQ9pD,WAAW95B,EAAO95B,GAAI85B,EAAO75B,GACrCy9G,EAAQ7lD,OACR6lD,EAAQ/lD,UAAY3uD,KAAKd,QAAQ67B,aAAawjC,WAAW/kD,MACzDsX,EAAkB,YAATlF,EAAqB4hE,EAAa18D,EAC3C4jF,EAAQrlD,SAASv+B,EAAO95B,EAAG85B,EAAO75B,EAAG65B,EAAOv4B,MAAOu4B,EAAOx4B,QAC1D,IAAIq8G,EAAQ30G,KAAKd,QAAQ67B,aAAawjC,WACtC,GAAIo2C,GAASA,EAAMpyG,OAAQ,CACvBirF,EAAaxtF,KAAKugG,iBAAiB30E,EAAMgb,GACzC,IAAIyrB,EAAQ,IAAIl7B,MAChBk7B,EAAMxpD,IAAM8rG,EAAMpyG,OAClB,IAAIqyG,EAAcpnB,EAAWj1F,MAAQ85D,EAAM95D,MACvCs8G,EAAcrnB,EAAWl1F,OAAS+5D,EAAM/5D,OACxCtB,EAAIw2F,EAAWx2F,EACfC,EAAIu2F,EAAWv2F,EACfsB,EAAQi1F,EAAWj1F,MACnBD,EAASk1F,EAAWl1F,OACpBw8G,EAAa90G,KAAK+0G,kBAAkBJ,GACxC,GAAoB,SAAhBA,EAAMh4F,OAAoC,SAAhBg4F,EAAMv2E,MAAkB,CAClD,IAAI42E,EAA6B,SAAhBL,EAAMh4F,MAAmBlgB,KAAKyK,IAAI0tG,EAAaC,GAAep4G,KAAKmJ,IAAIgvG,EAAaC,GACrGt8G,EAAQy8G,EAAa3iD,EAAM95D,MAC3BD,EAAS08G,EAAa3iD,EAAM/5D,OACxBq8G,EAAMv2E,MAAM9d,QAAQ,SAAW,EAC/BtpB,IAAMw2F,EAAWj1F,MAAQA,GAAS,EAE7Bo8G,EAAMv2E,MAAM9d,QAAQ,SAAW,IACpCtpB,EAAIA,EAAIw2F,EAAWj1F,MAAQA,GAE3Bo8G,EAAMv2E,MAAM9d,QAAQ,SAAW,EAC/BrpB,IAAMu2F,EAAWl1F,OAASA,GAAU,EAE/Bq8G,EAAMv2E,MAAM9d,QAAQ,SAAW,IACpCrpB,EAAIA,EAAIu2F,EAAWl1F,OAASA,GAEmB,SAA/C0H,KAAKd,QAAQ67B,aAAawjC,WAAW/kD,OAAmE,gBAA/CxZ,KAAKd,QAAQ67B,aAAawjC,WAAW/kD,QAC9Fk7F,EAAQ/lD,UAAY,QACpB+lD,EAAQrlD,SAASm+B,EAAWx2F,EAAI4vC,EAAc,OAAG4mD,EAAWv2F,EAAI2vC,EAAc,OAAG4mD,EAAWj1F,MAAQquC,EAAc,OAAG4mD,EAAWl1F,OAASsuC,EAAc,SAEvJkuE,GACAJ,EAAQpiD,UAAUD,EAAOr7D,EAAGC,EAAG+9G,EAAa3iD,EAAM95D,MAAOy8G,EAAa3iD,EAAM/5D,aAG3Ew8G,GACLJ,EAAQpiD,UAAUD,EAAOr7D,EAAGC,EAAGu2F,EAAWj1F,MAAOi1F,EAAWl1F,aAIhEo8G,EAAQ/lD,UAAwB,gBAAZ8lD,EAA4B,QAAUA,EAC1DC,EAAQrlD,SAAUm+B,EAAWx2F,EAAI4vC,EAAc,OAAKjkC,EAAOC,KAAO4qF,EAAWv2F,EAAI2vC,EAAc,OAAKjkC,EAAOI,IAAMyqF,EAAWj1F,MAAQquC,EAAc,OAAKjkC,EAAOC,KAAOD,EAAOE,MAAQ+jC,EAAc,OAAI4mD,EAAWl1F,OAAUqK,EAAOI,IAAMJ,EAAOG,QAEnP,IAAImyG,EAAUj1G,KAAKd,QAAQ67B,aAAawjC,WAAW/kD,MAC/C07F,EAAUl1G,KAAKd,QAAQ67B,aAAaxiC,MACpC28G,IACAR,EAAQ3lD,YAA0B,SAAZkmD,EAAqB,cAAgBA,EAC3DP,EAAQ/kD,UAAYulD,EACpBR,EAAQS,WAAW3nB,EAAWx2F,EAAI4vC,EAAc,OAAG4mD,EAAWv2F,EAAI2vC,EAAc,OAAG4mD,EAAWj1F,MAAQquC,EAAc,OAAG4mD,EAAWl1F,OAASsuC,EAAc,SAE7J8tE,EAAQnlD,UACR,IAAIv9B,EAAYqW,GAAaroC,KAAKd,QAAQU,QAAQC,IAC9C63D,EAAW,IAAIH,GAAgB,GAAI,MAAM,GAI7C,OAHAv3D,KAAKo1G,kBAAkBxuE,EAAc,OAAGA,EAAoB,aAAGA,EAAoB,cAAG,GACtF5mC,KAAKd,QAAQqqG,sBAAsB9nF,EAAQi2C,EAAU1lC,GAAW,GAAO,GACvEhyB,KAAKo1G,kBAAkBxuE,EAAc,OAAGA,EAAoB,aAAGA,EAAoB,cAAG,GAC/EnlB,GAEX+vF,EAAephE,UAAUilE,cAAgB,SAAU5zF,EAAQ9b,EAAOotG,EAAcC,EAAct/D,GAC1F,GAAIjyB,GAAUA,EAAOhrB,OAAS,EAC1B,IAAK,IAAIJ,EAAI,EAAGA,EAAIorB,EAAOhrB,OAAQJ,IAC3BorB,EAAOprB,GAAG8b,UACVnS,KAAKq1G,cAAc5zF,EAAOprB,GAAG8b,SAAUxM,EAAOotG,EAAcC,EAAct/D,GAE9EjyB,EAAOprB,GAAGs9C,iBAAiB38C,EAAI2O,EAC/B8b,EAAOprB,GAAGs9C,iBAAiB18C,EAAI0O,EAC/B8b,EAAOprB,GAAGu9C,kBAAkB58C,EAAI+7G,EAChCtxF,EAAOprB,GAAGu9C,kBAAkB38C,EAAI+7G,EAChCvxF,EAAOprB,GAAGq9C,SAAWA,GAIjC89D,EAAephE,UAAUglE,kBAAoB,SAAUzvG,EAAOotG,EAAcC,EAAct/D,GAEtF,IAAK,IADDllC,EACK9X,EAAI,EAAGA,EAAIsJ,KAAKd,QAAQ4a,MAAMrjB,OAAQC,IAC3C8X,EAAUxO,KAAKd,QAAQ4a,MAAMpjB,GAAG8X,QAChCxO,KAAKq1G,cAAc7mG,EAAQ2D,SAAUxM,EAAOotG,EAAcC,EAAct/D,GACxEllC,EAAQmlC,iBAAiB38C,EAAI2O,EAC7B6I,EAAQmlC,iBAAiB18C,EAAI0O,EAC7B6I,EAAQolC,kBAAkB58C,EAAI+7G,EAC9BvkG,EAAQolC,kBAAkB38C,EAAI+7G,EAC9BxkG,EAAQklC,SAAWA,EAEvB,IAAK,IAAIr9C,EAAI,EAAGA,EAAI2J,KAAKd,QAAQyf,WAAWloB,OAAQJ,IAAK,CACrDmY,EAAUxO,KAAKd,QAAQyf,WAAWtoB,GAAGmY,QACrC,IAAK,IAAIgV,EAAI,EAAGA,EAAIhV,EAAQ2D,SAAS1b,OAAQ+sB,IACzChV,EAAQ2D,SAASqR,GAAGkwB,SAAWA,EAC3BA,IACAllC,EAAQ2D,SAASqR,GAAGmwB,iBAAiB38C,EAAI2O,EACzC6I,EAAQ2D,SAASqR,GAAGmwB,iBAAiB18C,EAAI0O,EACzC6I,EAAQ2D,SAASqR,GAAGowB,kBAAkB58C,EAAI+7G,EAC1CvkG,EAAQ2D,SAASqR,GAAGowB,kBAAkB38C,EAAI+7G,KAK1DxB,EAAephE,UAAU2kE,kBAAoB,SAAUtT,GACnD,IAEIhgF,EAFAiU,GAAQ,EAGZ,GAAI+rE,EAAgBl/F,OAChB,IAEI,IAAI4rD,GADJ1sC,EAASssC,GAAeyB,aAAaxvD,KAAKd,QAAQU,QAAQC,GAAK,cAAe,IAAK,MAClEmuD,WAAW,MAC5BG,EAAIU,OACJ,IAAIwD,EAAQ,IAAIl7B,MAChBk7B,EAAMxpD,IAAM44F,EAAgBl/F,OAC5B4rD,EAAImE,UAAUD,EAAO,EAAG,EAAG,IAAK,KAChClE,EAAIoB,UACM9tC,EAAOwxF,YAErB,MAAOnlG,GACH4nB,GAAQ,EAGhB,OAAOA,GAEX87E,EAAephE,UAAUklE,oBAAsB,SAAUC,EAAK3uE,GAC1D,IAAIruC,EAAQ,EACRD,EAAS,EACT4oB,EAAO,IAAI5B,GAOf,GANA/mB,EAAQg9G,EAAIh9G,MACZD,EAASi9G,EAAIj9G,QACTsuC,EAAQwsE,YAAcxsE,EAAQysE,aAC9B/6G,EAASsuC,EAAQwsE,WAAaxsE,EAAQwsE,WAAa96G,EACnDC,EAAQquC,EAAQysE,UAAYzsE,EAAQysE,UAAY96G,GAEhDquC,EAAQ0sE,kBACyB,cAA5B1sE,EAAQ0sE,iBAAmCh7G,EAASC,GAAsC,aAA5BquC,EAAQ0sE,iBAAkC/6G,EAAQD,GAAQ,CACzH,IAAIqY,EAAOpY,EACXA,EAAQD,EACRA,EAASqY,EAKjB,OAFAuQ,EAAK5oB,OAASA,EACd4oB,EAAK3oB,MAAQA,EACN2oB,GAEXswF,EAAephE,UAAUojE,iBAAmB,SAAU+B,EAAK3uE,EAAS8M,GAChE,IAGI2/D,EACAD,EAJAoC,KACAznF,EAAMO,GAAkB,UACxBmnF,EAAWz1G,KAAKs1G,oBAAoBC,EAAK3uE,GAGzCjkC,EAASikC,EAAQjkC,OACjB+yG,EAAQ/yG,EAAOC,KACf+yG,EAAOhzG,EAAOI,IACd6yG,EAASjzG,EAAOE,MAChBgzG,EAAUlzG,EAAOG,OACjB9L,EAAI,EAERq8G,EAAYoC,EAASl9G,MAAQvB,EAC7Bo8G,EAAaqC,EAASn9G,OAFd,EAGR,IAAIw9G,EAAS,EACTC,EAAS,EACb,GAAInvE,GAAWA,EAAQ2oD,cAAqC,YAAnB3oD,EAAQ9V,OAAuB,CACpE/C,EAAI7tB,MAAM5H,OAAS,OACnBy1B,EAAI7tB,MAAM3H,MAAQ,OAClB,IAAIy9G,EAAYT,EAAIj9G,OAChB29G,EAAWV,EAAIh9G,MAEf7B,EAAI,EACJL,EAAI,EACJyuG,OAAM,EACNluC,EAAY,EACZC,EAAa,EACb1I,OAAM,EACN1sC,OAAS,EACb,EAAG,CACC,GACIm1C,EAAY6+C,EAASl9G,MACrBs+D,EAAa4+C,EAASn9G,OACjBw9G,EAASL,EAASl9G,OAAU09G,IAC7Br/C,EAAaq/C,EAAWH,GAEvBC,EAASN,EAASn9G,QAAW09G,IAC9Bn/C,EAAcm/C,EAAYD,IAG9B5nD,GADA1sC,EAASssC,GAAeyB,aAAaxvD,KAAKd,QAAQU,QAAQC,GAAK,iBAAkB41G,EAASl9G,MAAOk9G,EAASn9G,SAC7F01D,WAAW,OACpBsE,UAAUijD,EAAKv+G,EAAI8+G,EAASJ,EA9BpC,EA8B+CK,EAASJ,EAAM/+C,EAAYg/C,EAASF,EAAO7+C,EAAag/C,EAAUF,EAAM,EAAID,EAAO,EAAIC,EAAM/+C,EAAYg/C,EAASF,EAAO7+C,EAAag/C,EAAUF,GACtLG,EAASL,EAASl9G,OAAU09G,IAC7BH,GAAWA,EAASG,GAExBnR,EAAMrjF,EAAOwxF,YACb9kD,EAAIoB,UACJumD,GAAUzC,EACN3/D,EACA8hE,EAAW1+G,KAAKguG,GAGhB9kG,KAAKigG,WAAWlyE,EAAK+2E,EAAKpuG,EAAI,GAAKL,EAAGg9G,EAAY,MAAOD,EAAa,OAE1E18G,UACKo/G,EAASG,GAClB5/G,IACAK,EAAIM,EAAI8+G,EAAS,EACZC,EAASN,EAASn9G,QAAW09G,IAC9BD,GAAWA,EAASC,GAExBD,GAAU3C,QACL2C,EAASC,OAGjB,CACD,IAGIE,EACAC,EAFAC,EAAap2G,KAAKs1G,oBAAoBC,EAAK3uE,GAG/CsvE,EAAcE,EAAW79G,MACzB49G,EAAeC,EAAW99G,OACtB61D,OAAM,EACN1sC,OAAS,EACTqjF,OAAM,GAEV32C,GADA1sC,EAASssC,GAAeyB,aAAaxvD,KAAKd,QAAQU,QAAQC,GAAK,WAAYq2G,EAAaC,IAC3EnoD,WAAW,OACpBsE,UAAUijD,EAZJ,EAYeG,EAXf,EAW4BC,EAAMJ,EAAIh9G,OAASq9G,EAASF,GAAQH,EAAIj9G,QAAUq9G,EAAOE,GAAU,EAAIH,EAAO,EAAIC,EAAMO,GAAeN,EAASF,GAAQS,GAAgBR,EAAOE,IACrL/Q,EAAMrjF,EAAOwxF,YACb9kD,EAAIoB,UACA7b,EACA8hE,EAAW1+G,KAAKguG,GAGhB9kG,KAAKigG,WAAWlyE,EAAK+2E,EAAK,GAGlC,OAAIpxD,EACO8hE,EAGAznF,GAGfyjF,EAAephE,UAAU6vD,WAAa,SAAUlyE,EAAK+2E,EAAKpuG,EAAG28G,EAAWD,GACpE,IAAIpoD,GAASvyC,MAAS,uBAAwBvY,MAAS,SAAWmzG,EAAY,UAAYD,GACtFmC,EAAMjnF,GAAkB,MAAO08B,GAC/BqrD,EAAW/nF,GAAkB,MAAO08B,GAExC/hB,GAAiBssE,EADjBvqD,GAASnrD,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,qBAAuBnJ,EAAGwJ,MAAS,aAAc2I,IAAOi8F,IAEjGuR,EAASr3E,YAAYu2E,GACrBxnF,EAAIiR,YAAYq3E,IAMpB7E,EAAephE,UAAUqwD,MAAQ,SAAU75D,GACvCA,EAAQhb,KAAO,OACf,IAAIk5E,EAAM9kG,KAAKwgG,cAAc55D,GAC7B5mC,KAAKs2G,YAAYxR,EAAKl+D,IAE1B4qE,EAAephE,UAAUkmE,YAAc,SAAUxR,EAAKl+D,GAClD,IAAI6O,EAAQz1C,KACRgrD,GACAnrD,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,cAChCgJ,IAAOi8F,GAEXl+D,EAAQjkC,QAAWI,IAAK,EAAGD,OAAQ,EAAGD,MAAO,EAAGD,KAAM,GACtD,IAAI2yG,EAAMjnF,GAAkB,MAAO08B,GACnCuqD,EAAI3iD,OAAS,WACT,IAAI7kC,EAAM0nB,EAAM+9D,iBAAiB+B,EAAK3uE,GAElC2vE,EAAY5xE,OAAO0mC,KAAK,IACX,MAAbkrC,GACKxoF,aAAe+d,cAChByqE,EAAUvoF,SAASwoF,MAAM,mMAGzBD,EAAUvoF,SAASwoF,MAAM,gEACzBD,EAAUvoF,SAASwoF,MAAM,WAAazoF,EAAI8nC,UAAY,aACtD0gD,EAAUvoF,SAASluB,WAMnC0xG,EAAephE,UAAUwvD,kBAAoB,SAAUC,GACnD,IAAIjnF,EAAYoV,SAASC,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,WAC9D42G,EAAY79F,EAAUm3D,WACtB2mC,EAAY99F,EAAUo3D,UACtB2mC,EAAU32G,KAAKd,QAAQ+7B,eAAe9K,YACtCymF,EAAsB52G,KAAKd,QAAQmjB,SAASgN,iBAC5CwnF,EAAoB72G,KAAKd,QAAQmjB,SAASkN,eAC1Cw/D,EAAW52F,OAAO02G,OAAO7uG,KAAKd,QAAQ3G,OAAOwW,MAAM,MAAM,IACzDkgF,EAAY92F,OAAO02G,OAAO7uG,KAAKd,QAAQ5G,QAAQyW,MAAM,MAAM,IAC3DvN,EAASxB,KAAKugG,iBAAiB,OACnCvgG,KAAKd,QAAQmjB,SAAS4nD,KAAM,EAAI0sC,GAChC,IAAI1qB,EAAU,EACVC,EAAU,EACdD,EAAUzqF,EAAOxK,EACjBk1F,EAAU1qF,EAAOvK,EACjB+I,KAAKd,QAAQmjB,SAASxc,WAClBi8C,IAAKmqC,EACLlqC,IAAKmqC,EACLvvE,MAAO3c,KAAKd,QAAQmjB,SAAS8N,aAEjCnwB,KAAKd,QAAQmjB,SAASgN,kBAAoB48D,EAC1CjsF,KAAKd,QAAQmjB,SAASkN,gBAAkB28D,EACxClsF,KAAKd,QAAQmjB,SAASmuD,UACtBxwE,KAAKd,QAAQsxE,QAAQhvE,EAAOjJ,MAAOiJ,EAAOlJ,QAC1C,IAAIw+G,EAAkB92G,KAAKd,QAAQq8B,aAAa/nB,YAChDxT,KAAKd,QAAQq8B,aAAa/nB,YAAexT,KAAKd,QAAQq8B,aAAa/nB,aAAes/B,kBAAgBikE,UAClG/2G,KAAKd,QAAQoxB,WACbtwB,KAAKd,QAAQge,iBACb2iF,EAAcA,GAAe7xE,SAAS6xE,YAEtC,IAAK,IADDmX,EAAgB,GACXtgH,EAAI,EAAGA,EAAImpG,EAAYppG,OAAQC,KAChCmpG,EAAYnpG,GAAG+7G,MAAkC,iBAAnB5S,EAAYnpG,MAC1CsgH,GAAiB,gBAAmBnX,EAAYnpG,GAAG+7G,MAAQ5S,EAAYnpG,IAAM,yBAGrF,IAAIugH,EAAWjpF,SAASC,eAAejuB,KAAKd,QAAQU,QAAQC,GAAK,WAAWg2D,UAuB5E,OApBAohD,EAAWD,EAAgB,6HACDC,EAAW,gBACrCA,EAAWA,EAAS1xE,QAAQ,iBAAkB,yBAC9CvlC,KAAKd,QAAQsxE,QAAQue,EAAUE,GAC/BjvF,KAAKd,QAAQmjB,SAAS4nD,KAAK0sC,EAAU32G,KAAKd,QAAQ+7B,eAAe9K,aACjEnwB,KAAKd,QAAQq8B,aAAa/nB,YAAcsjG,EACxC92G,KAAKd,QAAQoxB,WACTmmF,GAAaC,EACb12G,KAAKd,QAAQwuF,UAAU+oB,EAAWC,IAGlC12G,KAAKd,QAAQmjB,SAASxc,WAClBi8C,GAAI,EAAwB9hD,KAAKd,QAAQmjB,SAAS8N,YAClD4xB,GAAI,EAAsB/hD,KAAKd,QAAQmjB,SAAS8N,YAChDxT,MAAO3c,KAAKd,QAAQmjB,SAAS8N,aAEjCnwB,KAAKd,QAAQmjB,SAASgN,iBAAmBunF,EACzC52G,KAAKd,QAAQmjB,SAASkN,eAAiBsnF,GAE3C72G,KAAKd,QAAQ21E,gBAAe,GACrBoiC,GAGXzF,EAAephE,UAAU4vD,aAAe,SAAU3tC,EAAOzrB,GACrD,IAAI6O,EAAQz1C,KACR8wB,EAAS8V,GAAWA,EAAQ9V,OAAS8V,EAAQ9V,OAAS,UACtDnuB,EAASikC,EAAQjkC,WACrBA,GACII,IAAMoM,MAAMxM,EAAOI,KAAoB,EAAbJ,EAAOI,IACjCD,OAASqM,MAAMxM,EAAOG,QAA0B,EAAhBH,EAAOG,OACvCF,KAAOuM,MAAMxM,EAAOC,MAAsB,EAAdD,EAAOC,KACnCC,MAAQsM,MAAMxM,EAAOE,OAAwB,EAAfF,EAAOE,OAEzC,IAAIrB,EAASxB,KAAKugG,iBAAiBzvE,MAC/B8V,EAAQplC,SACRA,EAAOxK,EAAMmY,MAAMy3B,EAAQplC,OAAOxK,GAAwBwK,EAAOxK,EAA1B4vC,EAAQplC,OAAOxK,EACtDwK,EAAOvK,EAAMkY,MAAMy3B,EAAQplC,OAAOvK,GAAwBuK,EAAOvK,EAA1B2vC,EAAQplC,OAAOvK,EACtDuK,EAAOjJ,MAASquC,EAAQplC,OAAOjJ,OAASiJ,EAAOjJ,MAC/CiJ,EAAOlJ,OAAUsuC,EAAQplC,OAAOlJ,QAAUkJ,EAAOlJ,QAErD,IAAIi9G,EAAMvnF,SAASgb,cAAc,OAIjCC,GAAiBssE,GAFb1sG,IAAOwpD,IAGX,IAAIqiD,EAAU10G,KACdu1G,EAAI3iD,OAAS,WACT,IAAInxC,EAASssC,GAAeyB,aAAaklD,EAAQx1G,QAAQU,QAAQC,GAAK,aAAc2B,EAAOjJ,OAASoK,EAAOC,KAAOD,EAAOE,OAAQrB,EAAOlJ,QAAUqK,EAAOI,IAAMJ,EAAOG,SAClKqrD,EAAM1sC,EAAOusC,WAAW,MAI5B,GAHAG,EAAIkB,SAAS,EAAG,EAAG7tD,EAAOjJ,OAASoK,EAAOC,KAAOD,EAAOE,OAAQrB,EAAOlJ,QAAUqK,EAAOI,IAAMJ,EAAOG,SACrGqrD,EAAImE,UAAUijD,EAAK/zG,EAAOxK,EAAGwK,EAAOvK,EAAGuK,EAAOjJ,MAAOiJ,EAAOlJ,OAAQqK,EAAOC,KAAMD,EAAOI,IAAKvB,EAAOjJ,MAAOiJ,EAAOlJ,QAClH+5D,EAAQ5wC,EAAOwxF,YACXrsE,EAAQs5D,aACRwU,EAAQ4B,YAAYjkD,EAAOzrB,OAD/B,CAIAunB,EAAIoB,UACJ,IAAIoiD,EAAW/qE,EAAQ+qE,UAAY,UACnCl8D,EAAMy9D,mBAAmBtsE,EAASnlB,EAAQ9e,EAAQ0vD,EAAOs/C,MAQjEH,EAAephE,UAAUkZ,QAAU,aAQnCkoD,EAAephE,UAAUiZ,cAAgB,WAIrC,MAAO,kBAEJmoD,KC1xBP0F,GAA6B,WAK7B,SAASA,IAELl3G,KAAKm3G,aAiOT,OAzNAD,EAAY9mE,UAAUkZ,QAAU,aAQhC4tD,EAAY9mE,UAAUiZ,cAAgB,WAIlC,MAAO,eAQX6tD,EAAY9mE,UAAU+yD,SAAW,SAAU/sG,EAAM8I,GAC7C,IAAI2lG,EAGArL,EAAcpjG,EAAKojG,iBACvBqL,EAAazuG,EAAKA,MAAQojG,EAAoB,MAAKA,EAAoB,OAClEA,EAAYqL,WAAarL,EAAYqL,WAAWuS,UAAOn9G,KAC1C4qG,EAAWpuG,QACzBuJ,KAAKq3G,gBAAgBjhH,EAAMyuG,EAAY3lG,IAS/Cg4G,EAAY9mE,UAAU20D,WAAa,SAAU3uG,EAAM8I,GAC/C,IAEI/B,EAFAs4C,EAAQz1C,KAGRs3G,EAASlhH,EACb,GAHiBA,EAGFojG,uBAAuB+d,cAAa,CAC/C,IAAIC,EAAQF,EAAO9d,YAAYie,aAC/BrhH,EAAKojG,YAAYke,aAAaF,GAAO9d,KAAK,SAAU5rF,GAEhD3Q,EAAS2Q,EAAM,OACV5O,EAAQkqG,cACT3zD,EAAM4hE,gBAAgBjhH,EAAM+G,EAAQ+B,GACpCA,EAAQspG,iBACRtpG,EAAQonD,QAAQ,cAAgBpnD,QAASA,SAKzDg4G,EAAY9mE,UAAUinE,gBAAkB,SAAUC,EAAQlhH,EAAM8I,GAC5Dc,KAAKm3G,aACL,IAAI58G,EACAo9G,EAGAz3E,EACA03E,EAHAC,KACA1oE,KAGJ,QAAal1C,IAAT7D,EAAoB,CACpB,IAAK,IAAI2X,EAAI,EAAGA,EAAI3X,EAAKK,OAAQsX,SAEA9T,KAD7BM,EAAMnE,EAAK2X,IACHupG,EAAOz7F,WAAoD,OAAzBthB,EAAI+8G,EAAOz7F,WACjB,iBAAzBthB,EAAI+8G,EAAOz7F,eACsB5hB,IAApC49G,EAAUt9G,EAAI+8G,EAAOz7F,WACrBg8F,EAAUt9G,EAAI+8G,EAAOz7F,WAAW46E,MAAM3/F,KAAKyD,GAG3Cs9G,EAAUt9G,EAAI+8G,EAAOz7F,YAAe46E,OAAQl8F,IAIhDs9G,EAAY73G,KAAK83G,wBAAwBv9G,EAAKs9G,EAAWP,EAAQlhH,GAEjEkhH,EAAOrY,OAAS1kG,EAAI+8G,EAAOz3G,MAC3B83G,GAAclhB,OAAQl8F,KAG9B,GAAIo9G,EACAxoE,EAAWr4C,KAAK6gH,QAGhB,IAAK,IAAI96G,EAAK,EAAGohB,EAAKC,OAAOC,KAAK05F,GAAYh7G,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAChE,IAAIqkD,EAAIjjC,EAAGphB,GACNqkD,GAAW,cAANA,GAA2B,OAANA,GAAsB,SAANA,GAC3C/R,EAAWr4C,KAAK+gH,EAAU32D,IAItC,IAAK,IAAIxqD,EAAI,EAAGA,EAAIy4C,EAAW14C,OAAQC,IACnC,IAAK,IAAIL,EAAI,EAAGA,EAAI84C,EAAWz4C,GAAG+/F,MAAMhgG,OAAQJ,IAAK,CACjD6pC,EAAOiP,EAAWz4C,GAAG+/F,MAAMpgG,GAC3B,IAAIkK,EAAOP,KAAK+3G,kBAAkBT,EAAQp3E,EAAMhhC,GAChDA,EAAQ4a,MAAMhjB,KAAKyJ,GACnBP,KAAKm3G,UAAUj3E,EAAKo3E,EAAOz3G,KAAOU,OAEhBtG,KADlB29G,EAAYC,EAAUt3G,EAAKnK,KAAKkhH,EAAOz3G,OAEnCG,KAAKg4G,iBAAiBV,EAAQM,EAAWr3G,EAAKV,GAAIg4G,EAAW34G,IAK7Ec,KAAKm3G,UAAY,MASrBD,EAAY9mE,UAAU0nE,wBAA0B,SAAUv9G,EAAKs9G,EAAWP,EAAQlhH,GAG9E,IAAK,IADD8pB,EADA+3F,EAAU19G,EAAI+8G,EAAOz7F,UAEhBnlB,EAAI,EAAGA,EAAIuhH,EAAQxhH,OAAQC,IAE5BmhH,EADJ33F,EAAS+3F,EAAQvhH,IAEbmhH,EAAU33F,GAAQu2E,MAAM3/F,KAAKyD,GAG7Bs9G,EAAU33F,IAAYu2E,OAAQl8F,IAGtC,OAAOs9G,GAQXX,EAAY9mE,UAAU2nE,kBAAoB,SAAUT,EAAQp3E,EAAMhhC,GAC9D,IAEIg5G,GAAcr4G,GADTua,KACiBhkB,KAAM8pC,GAC5BxG,EAAYrJ,GAAYinF,EAAO59E,WAC/BA,GACAA,EAAUw+E,EAAWh4E,EAAMhhC,GAE/B,IAAI3E,EAAM,IAAIua,GAAK5V,EAAS,QAASg5G,GAAW,GAChD,OAAKl4G,KAAKkwC,mBAAmB31C,EAAK2E,EAASo4G,EAAOz3G,GAAIy3G,EAAOz7F,UAIlD7b,KAAKm3G,UAAUj3E,EAAKo3E,EAAOz3G,KAH3BtF,GAMf28G,EAAY9mE,UAAU4nE,iBAAmB,SAAUV,EAAQp3F,EAAQva,EAAOwyG,EAASj5G,GAI/E,IAAK,IAHDqP,EACAqpG,EACAr3G,EACKlK,EAAI,EAAGA,EAAI6pB,EAAOu2E,MAAMhgG,OAAQJ,IAAK,CAC1CkY,EAAQ2R,EAAOu2E,MAAMpgG,GACrBkK,EAAOP,KAAK+3G,kBAAkBT,EAAQ/oG,EAAOrP,GAC7C,IAAIk5G,GAAW,EACVp4G,KAAKkwC,mBAAmB3vC,EAAMrB,EAASo4G,EAAOz3G,GAAIy3G,EAAOz7F,UAK1Du8F,GAAW,GAJXp4G,KAAKm3G,UAAU5oG,EAAM+oG,EAAOz3G,KAAOU,EACnCrB,EAAQ4a,MAAMhjB,KAAKyJ,IAKlBP,KAAKq4G,kBAAkBn5G,EAASyG,EAAOpF,EAAKV,KAC7CX,EAAQyf,WAAW7nB,KAAKkJ,KAAKs4G,uBAAuB3yG,EAAOpF,EAAKV,GAAIX,IAEnEk5G,QAEiBn+G,KADlB29G,EAAYO,EAAQ53G,EAAKnK,KAAKkhH,EAAOz3G,OAEjCG,KAAKg4G,iBAAiBV,EAAQM,EAAWr3G,EAAKV,GAAIs4G,EAASj5G,KAK3Eg4G,EAAY9mE,UAAUioE,kBAAoB,SAAUn5G,EAASgD,EAAYC,GACrE,GAAmB,KAAfD,GAAoC,KAAfC,EACrB,IAAK,IAAIzL,EAAI,EAAGA,EAAIwI,EAAQyf,WAAWloB,OAAQC,IAAK,CAChD,IAAI6N,EAAYrF,EAAQyf,WAAWjoB,GACnC,QAAkBuD,IAAdsK,GAA4BA,EAAU9C,WAAaS,GAAcqC,EAAU0iB,WAAa9kB,EACxF,OAAO,EAInB,OAAO,GASX+0G,EAAY9mE,UAAUF,mBAAqB,SAAU3vC,EAAMrB,EAASW,EAAIgc,GACpE,IAAIthB,EAAMyF,KAAKm3G,UAAU52G,EAAKnK,KAAKyJ,IACnC,YAAY5F,IAARM,GAAqBA,EAAInE,KAAKyJ,KAAQU,EAAKnK,KAAKyJ,IAAOtF,EAAInE,KAAKylB,KAActb,EAAKnK,KAAKylB,IAahGq7F,EAAY9mE,UAAUkoE,uBAAyB,SAAUC,EAAOC,EAAOt5G,GACnE,IAAIu5G,GACA54G,GAAIua,KAAY3Y,SAAU82G,EAAOtxF,SAAUuxF,GAG/C,OADU,IAAI7kG,GAAUzU,EAAS,aAAcu5G,GAAW,IAGvDvB,KCxOAwB,IACPz4G,QAAS,oBACTk+E,KAAM,SACND,MAAO,UACP2d,KAAM,SACNC,KAAM,SACNhf,IAAK,QACL6d,UAAW,cACXge,SAAU,aACVhiD,MAAO,UACPioB,QAAS,YACT6D,aAAc,eACdH,WAAY,aACZ4Y,YAAa,iBACb5X,aAAc,iBACds1B,MAAO,WAMPC,GAAoC,WACpC,SAASA,EAAmB34F,EAAQ44F,GAChC94G,KAAK+4G,gBAIL/4G,KAAKg5G,gBAILh5G,KAAKi5G,eACLj5G,KAAKk5G,WAAal5G,KAAKm5G,eACvBn5G,KAAKkgB,OAASA,EACdlgB,KAAKk3F,eAAiB4hB,EACtB94G,KAAKo5G,mBA2UT,OArUAP,EAAmBzoE,UAAUgpE,iBAAmB,WACxCp5G,KAAKkgB,OAAOkpF,aAGhBppG,KAAKkgB,OAAOm5F,GAAG,eAAgBr5G,KAAKmpD,OAAQnpD,OAMhD64G,EAAmBzoE,UAAUkpE,oBAAsB,WAC3Ct5G,KAAKkgB,OAAOkpF,aAGhBppG,KAAKkgB,OAAOq5F,IAAI,eAAgBv5G,KAAKmpD,SAEzC0vD,EAAmBzoE,UAAU+Y,OAAS,WAClCnpD,KAAKw5G,KAAOx5G,KAAKk3F,eAAe53B,WAAW,gBAC3Ct/D,KAAKJ,QAAU0uB,GAAkB,MAAQzuB,GAAIG,KAAKkgB,OAAOtgB,QAAQC,GAAK,iBACtEG,KAAKkgB,OAAOtgB,QAAQo/B,YAAYh/B,KAAKJ,SACrC,IAAIoD,EAAS,IAAMhD,KAAKkgB,OAAOtgB,QAAQC,GACvCG,KAAKy5G,YAAc,IAAIC,eACnBjjB,MAAOz2F,KAAK25G,eACZC,UAAW55G,KAAKkgB,OAAO05F,UACvBC,kBAAmB75G,KAAKkgB,OAAO25F,kBAC/BphB,OAAQz4F,KAAKkgB,OAAOu4E,OACpBz1F,OAAQA,EACR6Z,OAAQ7c,KAAK85G,qBAAqBnT,KAAK3mG,MACvCR,WAAYQ,KAAK+5G,sBAAsBpT,KAAK3mG,MAC5Cg6G,OAAQh6G,KAAKuzC,gBAAgBozD,KAAK3mG,MAClCi6G,iBAAkBj6G,KAAKk6G,iBAAiBvT,KAAK3mG,MAC7Cm6G,QAASn6G,KAAKo6G,mBAAmBzT,KAAK3mG,MACtCP,SAAU,mBAEdO,KAAKy5G,YAAY95G,SAASK,KAAKJ,UAEnCi5G,EAAmBzoE,UAAUupE,aAAe,WACxC,IAAIU,KACAC,KACAC,KACJ,IAAKv6G,KAAKkgB,OAAO2a,oBAAoB07D,mBAAoB,CACrD,IAAK,IAAI15F,EAAK,EAAGohB,EAAKje,KAAKw6G,kBAAmB39G,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAChE,IAAIqjC,EAAOjiB,EAAGphB,IACqC,IAA/CqjC,EAAKo+D,oBAAoBh+E,QAAQ,SACA,aAA7B4f,EAAKo+D,qBACLic,EAAWzjH,KAAKkJ,KAAKy6G,kBAAkBv6E,KAGS,IAA/CA,EAAKo+D,oBAAoBh+E,QAAQ,SACL,UAA7B4f,EAAKo+D,qBACLgc,EAAWxjH,KAAKkJ,KAAKy6G,kBAAkBv6E,IAI3Cm6E,EAAUvjH,KAAKkJ,KAAKy6G,kBAAkBv6E,IAG9C,GAAIq6E,EAAW9jH,OAAS,EAAG,EACnBikH,EAAa16G,KAAKy6G,kBAAkB,aAC7BhkB,MAAQ8jB,EACnBF,EAAUvjH,KAAK4jH,GAEnB,GAAIJ,EAAW7jH,OAAS,EAAG,CACvB,IAAIikH,GAAAA,EAAa16G,KAAKy6G,kBAAkB,UAC7BhkB,MAAQ6jB,EACnBD,EAAUvjH,KAAK4jH,IAGvB,GAAI16G,KAAKkgB,OAAO2a,oBAAoB47D,MAChC,IAAK,IAAIt7D,EAAK,EAAGC,EAAKp7B,KAAKkgB,OAAO2a,oBAAoB47D,MAAOt7D,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CAC/E,IAAIw/E,EAAav/E,EAAGD,GACpBk/E,EAAUvjH,KAAK6jH,GAGvB,OAAON,GAEXxB,EAAmBzoE,UAAUmD,gBAAkB,WAC3CvzC,KAAK46G,QAAS,GAElB/B,EAAmBzoE,UAAU8pE,iBAAmB,SAAUn6G,GACtDC,KAAKkgB,OAAOomC,QAAQ9S,GAA6BzzC,IAErD84G,EAAmBzoE,UAAU0pE,qBAAuB,SAAU/5G,GAC1DiuB,SAASC,eAAejuB,KAAKkgB,OAAOtgB,QAAQC,GAAK,WAAWyrE,QAC5DtrE,KAAKkgB,OAAOomC,QAAQhT,GAAkBvzC,GACtC,IAAImgC,EAAOlgC,KAAK66G,aAAa96G,EAAKmgC,KAAKrgC,IACvC,IAAKE,EAAKqlE,OACN,OAAQllC,GACJ,IAAK,MACDlgC,KAAKkgB,OAAO48D,MACZ,MACJ,IAAK,OACD98E,KAAKkgB,OAAOi+D,OACZ,MACJ,IAAK,OACDn+E,KAAKkgB,OAAO27E,OACZ,MACJ,IAAK,OACD77F,KAAKkgB,OAAO47E,OACZ,MACJ,IAAK,QACD97F,KAAKkgB,OAAOg+D,QACZ,MACJ,IAAK,YACDl+E,KAAKkgB,OAAOy6E,YACZ,MACJ,IAAK,QACD36F,KAAKkgB,OAAOy2C,QACZ,MACJ,IAAK,UACD32D,KAAKkgB,OAAO0+D,UACZ,MACJ,IAAK,oBACD5+E,KAAKkgB,OAAOuiE,eACZ,MACJ,IAAK,mBACDziF,KAAKkgB,OAAOg7E,cACZ,MACJ,IAAK,kBACDl7F,KAAKkgB,OAAOoiE,aACZ,MACJ,IAAK,oBACDtiF,KAAKkgB,OAAOojE,iBAK5Bu1B,EAAmBzoE,UAAUgqE,mBAAqB,SAAUr6G,GAEpDA,EAAK02F,MAAMhgG,OAAS,GAAKsJ,EAAK02F,MAAM,GAAS,qBAAaijB,eAC1D15G,KAAK86G,oBAGbjC,EAAmBzoE,UAAU2qE,cAAgB,SAAU76E,GACnD,OAAOlgC,KAAKw5G,KAAKwB,YAAYh7G,KAAKk5G,WAAWh5E,KAEjD24E,EAAmBzoE,UAAU0qE,iBAAmB,WAC5C96G,KAAKy5G,YAAYwB,UAAUj7G,KAAKi5G,aAAa,GAC7Cj5G,KAAKy5G,YAAYyB,YAAYl7G,KAAKg5G,cAAc,GAAO,GACvDh5G,KAAKi5G,eACLj5G,KAAKg5G,gBACLh5G,KAAK46G,QAAS,GAElB/B,EAAmBzoE,UAAU+qE,YAAc,SAAUj7E,EAAMmmB,GACvD,IAAIvpB,EAAM98B,KAAK66G,aAAa36E,EAAKrgC,IACrBG,KAAK+4G,aAAaj8E,IACe,IAAzC98B,KAAKw6G,kBAAkBl6F,QAAQwc,IAC3BoD,EAAKl9B,QAAUqjD,IACdrmD,KAAKo7G,aAAal7E,IACnBlgC,KAAKi5G,YAAYniH,KAAKopC,EAAKrgC,KAIvCg5G,EAAmBzoE,UAAU2pE,sBAAwB,SAAUh6G,GAC3D,IAAIs7G,EAAct7G,EAClBs7G,EAAYpC,eACZ,IAAK,IAAIp8G,EAAK,EAAGohB,EAAKle,EAAK02F,MAAO55F,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpD,IAAIqjC,EAAOjiB,EAAGphB,GAEd,GADAmD,KAAKm7G,YAAYj7E,EAAMngC,EAAKsmD,OACxBnmB,EAAKu2D,MAAMhgG,OACX,IAAK,IAAI0kC,EAAK,EAAGC,EAAK8E,EAAKu2D,MAAOt7D,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACpD,IAAImgF,EAAUlgF,EAAGD,GACjBn7B,KAAKm7G,YAAYG,EAASv7G,EAAKsmD,QAI3CrmD,KAAKuvE,UAAYxvE,EAAKsmD,MACtBrmD,KAAKkgB,OAAOomC,QAAQ/S,GAAiB8nE,GACrC,IAAIE,GAAS,EACbv7G,KAAKi5G,YAAcj5G,KAAKi5G,YAAYpzF,OAAOw1F,EAAYpC,aACvDj5G,KAAKy5G,YAAYyB,YAAYl7G,KAAKg5G,cAAc,GAAO,GACvD,IAAIwC,EAAex7G,KACnBD,EAAK02F,MAAMglB,QAAQ,SAAUv7E,GACrBs7E,EAAavC,YAAY34F,QAAQ4f,EAAKrgC,KAAO,GAC7C27G,EAAa/B,YAAYiC,WAAWx7E,EAAKrgC,KAAK,KAGtD27G,EAAa/B,YAAYhjB,MAAMglB,QAAQ,SAAUv7E,IACM,IAA/Cs7E,EAAavC,YAAY34F,QAAQ4f,EAAKrgC,MACtC07G,GAAS,KAGbA,IACAF,EAAYj2C,OAASm2C,EACrBv7G,KAAKi5G,iBAGbJ,EAAmBzoE,UAAUgrE,aAAe,SAAUl7E,GAClD,IAAIy7E,EAAiB37G,KAAKkgB,OAAOxB,cAAc5E,MAAMrjB,OACjDuJ,KAAKkgB,OAAOxB,cAAcC,WAAWloB,OAErCuM,GAAS,EACb,OAFehD,KAAK66G,aAAa36E,EAAKrgC,KAGlC,IAAK,OACDmD,KAAShD,KAAKkgB,OAAOqJ,iBAAkBvpB,KAAKkgB,OAAOqJ,eAAeqyF,SAClE,MACJ,IAAK,OACD54G,KAAShD,KAAKkgB,OAAOqJ,iBAAkBvpB,KAAKkgB,OAAOqJ,eAAesyF,SAClE,MACJ,IAAK,QACD74G,IAAShD,KAAKkgB,OAAOzC,eAAewN,cAAc+xD,WAClD,MACJ,IAAK,YACDh6E,KAAShD,KAAKkgB,OAAOpG,MAAMrjB,OAASuJ,KAAKkgB,OAAOvB,WAAWloB,QAC3D,MACJ,IAAK,WACDuM,KAAW24G,EAAiB,GAAO37G,KAAKkgB,OAAOxB,cAAc5E,MAAM,IAAM9Z,KAAKkgB,OAAOxB,cAAc5E,MAAM,GAAG3H,UACrGnS,KAAKkgB,OAAOxB,cAAc5E,MAAM,GAAG3H,SAAS1b,OAAS,GAC5D,MACJ,IAAK,QACDuM,EAAS24G,EAAiB,EAC1B,MACJ,IAAK,UACD34G,KAAWhD,KAAKkgB,OAAOxB,cAAc5E,MAAM,IAAM9Z,KAAKkgB,OAAOxB,cAAc5E,MAAM,GAAG3H,UAC7EnS,KAAKkgB,OAAOxB,cAAc5E,MAAM,GAAG3H,SAAS1b,OAAS,GAC5D,MACJ,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,oBACL,IAAK,mBACL,IAAK,kBACL,IAAK,oBACDuM,IAAS24G,EAGjB,OAAO34G,GAQX61G,EAAmBzoE,UAAUkZ,QAAU,WACnCtpD,KAAKy5G,YAAYnwD,UACjB58B,SAAO1sB,KAAKJ,SACZI,KAAKs5G,uBAETT,EAAmBzoE,UAAUiZ,cAAgB,WACzC,MAAO,eAEXwvD,EAAmBzoE,UAAU0rE,WAAa,SAAU57E,GAChD,OAAOlgC,KAAKkgB,OAAOtgB,QAAQC,GAAK,gBAAkBqgC,GAEtD24E,EAAmBzoE,UAAUyqE,aAAe,SAAUh7G,GAClD,OAAOA,EAAG0lC,QAAQvlC,KAAKkgB,OAAOtgB,QAAQC,GAAK,gBAAiB,KAEhEg5G,EAAmBzoE,UAAUqqE,kBAAoB,SAAUv6E,GACvD,IAAI67E,EACJ,OAAQ77E,GACJ,IAAK,OACD67E,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAUv6B,MAC3D,MACJ,IAAK,MACD49B,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAU57B,KAC3D,MACJ,IAAK,QACDi/B,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAUx6B,OAC3D,MACJ,IAAK,OACD69B,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAU7c,MAC3D,MACJ,IAAK,OACDkgB,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAU5c,MAC3D,MACJ,IAAK,WACDigB,GAAa/4G,OAAQ01G,GAAUz4G,SAC/B,MACJ,IAAK,QACD87G,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAU/hD,OAC3D,MACJ,IAAK,UACDolD,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAU95B,SAC3D,MACJ,IAAK,QACDm9B,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAUE,OAC3D,MACJ,IAAK,oBACDmD,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAUj2B,cAC3D,MACJ,IAAK,mBACDs5B,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAUxd,aAC3D,MACJ,IAAK,kBACD6gB,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAUp2B,YAC3D,MACJ,IAAK,oBACDy5B,GAAa/4G,OAAQ01G,GAAUz4G,QAAS+7G,QAAStD,GAAUp1B,cAC3D,MACJ,IAAK,YACDy4B,GAAa/4G,OAAQ01G,GAAUz4G,SAOvC,OAJAD,KAAK+4G,aAAa74E,IACdzlB,KAAMza,KAAK+6G,cAAc76E,GAAOrgC,GAAIG,KAAK87G,WAAW57E,GACpDl9B,OAAQ+4G,EAAS/4G,OAAQg5G,QAASD,EAASC,QAAU,WAAaD,EAASC,QAAU,IAElFh8G,KAAK+4G,aAAa74E,IAE7B24E,EAAmBzoE,UAAUoqE,gBAAkB,WAC3C,OACI,OACA,MAAO,QAAS,OAAQ,OAAQ,YAAa,WAAY,QAAS,UAAW,QAC7E,oBAAqB,mBAAoB,kBAAmB,sBAGpE3B,EAAmBzoE,UAAU+oE,aAAe,WACxC,OACIh7B,KAAQ,OACRrB,IAAO,MACPoB,MAAS,QACT2d,KAAQ,OACRC,KAAQ,OACRnB,UAAa,YACbge,SAAY,WACZhiD,MAAS,QACTioB,QAAW,UACXg6B,MAAS,QACTqD,kBAAqB,eACrBC,iBAAoB,cACpBC,gBAAmB,aACnBC,kBAAqB,iBAGtBvD,K9CjWPwD,GAA8B,WAM9B,SAASA,IAILr8G,KAAKs8G,qBA0xET,OAvxEAp+F,OAAOozB,eAAe+qE,EAAajsE,UAAW,4BAE1CgC,IAAK,WAED,IAAK,IADDzzB,KACK9hB,EAAK,EAAGohB,EAAKC,OAAOC,KAAKne,KAAKs8G,mBAAoBz/G,EAAKohB,EAAGxnB,OAAQoG,IAGvE,IAAK,IAFDigC,EAAM7e,EAAGphB,GACTugB,EAAQpd,KAAKs8G,kBAAkBx/E,GAC1B3B,EAAK,EAAGC,EAAKld,OAAOC,KAAKf,GAAQ+d,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CAC5D,IAAItX,EAAauX,EAAGD,GAEpBxc,EAAW7nB,KAAKsmB,EAAMyG,GAAiB,WAG/C,OAAOlF,GAEX0zB,YAAY,EACZC,cAAc,IAGlB+pE,EAAajsE,UAAUksD,sBAAwB,SAAU/hG,GACrD,IAAIokB,KACJ,GAAuB,SAAnBpkB,EAAI6D,MAAMvC,MAAoD,IAAjCtB,EAAI6D,MAAMgb,YAAY3iB,OAEnD,IAAK,IADD2mB,EAAQpd,KAAKs8G,kBAAkB/hH,EAAIsF,IAC9BhD,EAAK,EAAGohB,EAAKC,OAAOC,KAAKf,GAAQvgB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC5D,IAAIgnB,EAAa5F,EAAGphB,GAEpB8hB,EAAW7nB,KAAKsmB,EAAMyG,GAAe,WAG7C,OAAOlF,GAGX09F,EAAajsE,UAAUmsE,QAAU,SAAUh8G,EAAMN,GAC7C,IAAIihB,EAAO,IAAI5B,GAAK/e,EAAKhI,MAAOgI,EAAKjI,QACrC,QAAmB2B,IAAfinB,EAAK3oB,YAAuC0B,IAAhBinB,EAAK5oB,OAAsB,CAKvD,GAJM2H,aAAmB6O,KACrBoS,EAAK3oB,MAAQ2oB,EAAK3oB,OAAS,GAC3B2oB,EAAK5oB,OAAS4oB,EAAK5oB,QAAU,IAE7B2H,EAAQsM,WAAWhU,OAAS0H,EAAQsM,WAAWjU,OAC/C,OAAO2H,EAAQsM,WAGftM,EAAQof,QAAQ,IAAIC,IACpB4B,EAAK3oB,MAAQ2oB,EAAK3oB,OAAS0H,EAAQuf,YAAYjnB,MAC/C2oB,EAAK5oB,OAAS4oB,EAAK5oB,QAAU2H,EAAQuf,YAAYlnB,YAE/B2B,IAAlBsG,EAAK2Y,WACLgI,EAAK3oB,MAAQkE,KAAKyK,IAAIga,EAAK3oB,MAAOgI,EAAK2Y,gBAEpBjf,IAAnBsG,EAAKue,YACLoC,EAAK5oB,OAASmE,KAAKyK,IAAIga,EAAK5oB,OAAQiI,EAAKue,iBAEvB7kB,IAAlBsG,EAAKse,WACLqC,EAAK3oB,MAAQkE,KAAKmJ,IAAIsb,EAAK3oB,MAAOgI,EAAKse,gBAEpB5kB,IAAnBsG,EAAK8Z,YACL6G,EAAK5oB,OAASmE,KAAKmJ,IAAIsb,EAAK5oB,OAAQiI,EAAK8Z,YAGjD,OAAO6G,GAGXm7F,EAAajsE,UAAU6W,gBAAkB,SAAUhnD,EAASM,EAAMrB,GAC9D,IAAId,EAAQmC,EAAKnC,MAyBjB,GAxBoB,UAAhBA,EAAMA,QACN6B,EAAUD,KAAKw8G,kBAAkBj8G,EAAMnC,EAAMioD,QAE7B,YAAhBjoD,EAAMA,QACN6B,EAAUD,KAAKy8G,oBAAoBl8G,IAEnB,eAAhBnC,EAAMA,QACN6B,EAAUD,KAAK08G,uBAAuBn8G,IAEtB,YAAhBnC,EAAMA,OAAuC,eAAhBA,EAAMA,QACnC6B,EAAUD,KAAK28G,cAAcp8G,IAQb,aAAhBnC,EAAMA,QACN6B,EAAUD,KAAK48G,qBAAqBr8G,IAEpB,mBAAhBnC,EAAMA,QACN6B,EAAUD,KAAK68G,yBAAyB39G,EAASqB,EAAMN,IAGvD7B,EAAMgb,YAAY3iB,OAAS,EAAG,CAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAI0H,EAAMgb,YAAY3iB,QAAU2H,EAAMgb,YAAY1iB,GAAG+jB,KAAM/jB,IACvEuJ,EAAQkS,SAASrb,KAAKkJ,KAAK88G,sBAAsBv8G,EAAMrB,EAASd,EAAMgb,YAAY1iB,GAAIuJ,IAE1FA,EAAQC,MAAM6e,gBAAkB,UAEpC,OAAO9e,GAGXo8G,EAAajsE,UAAUusE,cAAgB,SAAUp8G,GAC7C,IAAIw8G,EAAY,IAAIjuG,GAEpB9O,KAAK0vD,SAASqtD,EAAWx8G,GAC2B,IAA/CA,EAAKiT,YAAcK,kBAAgBe,UACpCmoG,EAAU91E,OAAS1mC,EAAK0mC,QAE5B,IAAI+1E,EAAgBztE,GAAqBhvC,EAAKnC,MAAMA,OAOpD,OANA2+G,EAAU3mH,KAAO4mH,EACjBD,EAAUl9G,GAAKU,EAAKV,GAAK,IAAMU,EAAKnC,MAAMA,WACvBnE,IAAfsG,EAAKhI,YAAuC0B,IAAhBsG,EAAKjI,SACjCykH,EAAUxkH,MAAQgI,EAAKhI,MACvBwkH,EAAUzkH,OAASiI,EAAKjI,QAErBykH,GAkBXV,EAAajsE,UAAUqsE,oBAAsB,SAAUl8G,GACnD,IAAI08G,EAAe,IAAIt7F,GAEnBu7F,EAAc,IAAIpuG,GACtBouG,EAAYr9G,GAAKU,EAAKV,GAAK,aAC3Bq9G,EAAYnhH,QAAUwE,EAAKxE,QAC3BmhH,EAAYlhH,QAAUuE,EAAKvE,QAC3BkhH,EAAY9mH,KAAO,0CACnB4J,KAAK0vD,SAASwtD,EAAa38G,GAE3B,IAAI48G,EAAkB,IAAIruG,GAC1BquG,EAAgBt9G,GAAKU,EAAKV,GAAK,iBAE/Bs9G,EAAgBj9G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAC3C6gF,EAAgBvjG,oBAAsB,SACtCujG,EAAgBxjG,kBAAoB,SACpCwjG,EAAgBzoF,aAAe,SAC/B,IACI0oF,EADAC,EAAY98G,EAAKnC,MAAMk/G,QAE3BF,EAA2BztE,GAA4B0tE,EAAUxhH,MAC1C,eAAnBwhH,EAAUxhH,MAA4C,wBAAnBwhH,EAAUxhH,MAAqD,uBAAnBwhH,EAAUxhH,KACzFshH,EAAgBj9G,MAAM6Y,KAAO,QAG7BokG,EAAgBj9G,MAAM6Y,KAAO,QAEjCokG,EAAgB/mH,KAAOgnH,EAEvBH,EAAa/8G,MAAM6Y,KAAO,cAC1BkkG,EAAa/8G,MAAM8Y,YAAc,cACjCikG,EAAa/8G,MAAM+Y,YAAc,EACjCgkG,EAAa9qG,UAAY+qG,EAAaC,GACtC,IAAIj8F,EAAOlhB,KAAKu8G,QAAQh8G,EAAM28G,GAE9B,OADAl9G,KAAKu9G,sBAAsBh9G,EAAKnC,MAAMk/G,QAASL,EAAc/7F,EAAK3oB,MAAO2oB,EAAK5oB,QACvE2kH,GAGXZ,EAAajsE,UAAUssE,uBAAyB,SAAUn8G,GACtD,IAAIi9G,EAAkB,IAAI77F,GACtBvjB,EAAQmC,EAAKnC,MAAMq/G,WAEnBC,EAAc,IAAI5uG,GACtB4uG,EAAY79G,GAAKU,EAAKV,GAAK,aAC3B69G,EAAYtnH,KAAO,iGACnB,IAAI8qB,EAAOlhB,KAAKu8G,QAAQh8G,EAAMm9G,GAC9BA,EAAYnlH,MAAQ2oB,EAAK3oB,MACzBmlH,EAAYplH,OAAS4oB,EAAK5oB,OAC1B0H,KAAK0vD,SAASguD,EAAan9G,GAE3B,IAAIo9G,EAAkB,IAAI7uG,GAC1B6uG,EAAgB99G,GAAKU,EAAKV,GAAK,UAC/B89G,EAAgBplH,MAAQ,GACxBolH,EAAgBrlH,OAAS,GACzBqlH,EAAgBh7G,OAAOC,KAAO,EAC9B+6G,EAAgBh7G,OAAOI,IAAM,EAC7B46G,EAAgBvnH,KAAO,uDAEvBunH,EAAgBz9G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAE3C,IAAIshF,EAAwB,IAAI9uG,GAYhC,OAXA8uG,EAAsB/9G,GAAKU,EAAKV,GAAK,gBACrC+9G,EAAsBrlH,MAAQ,IAC9BqlH,EAAsBtlH,OAAS,GAC/BslH,EAAsB19G,MAAM6Y,KAAO,QACnC6kG,EAAsBhgF,SAAU,EAChCggF,EAAsBhkG,oBAAsB,SAC5CgkG,EAAsBjkG,kBAAoB,SAC1CikG,EAAsBlpF,aAAe,SAErCkpF,EAAsB19G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QACjDshF,EAAsBxnH,KAAO,+FACrBgI,EAAMvC,MACV,IAAK,OACD8hH,EAAgB//E,SAAU,EAC1B,MACJ,IAAK,QACD+/E,EAAgBz9G,MAAM6Y,KAAO,QAC7B,MACJ,IAAK,SACD4kG,EAAgBz9G,MAAM6Y,KAAO,QAWrC,OARyB,IAArB3a,EAAM9H,aACNsnH,EAAsBhgF,SAAU,GAGpC4/E,EAAgBt9G,MAAM6Y,KAAO,cAC7BykG,EAAgBt9G,MAAM8Y,YAAc,cACpCwkG,EAAgBt9G,MAAM+Y,YAAc,EACpCukG,EAAgBrrG,UAAYurG,EAAaC,EAAiBC,GACnDJ,GAGXnB,EAAajsE,UAAUytE,iBAAmB,SAAUt9G,GAChD,IACIu9G,EADQv9G,EAAKnC,MAAM+oD,SACN22D,KACbC,EAAa,IAAIp8F,GAEjBq8F,EAAW,IAAI55F,GACnB45F,EAAS3lH,aAAe,GACxB,IAAI6oB,EAAOlhB,KAAKu8G,QAAQh8G,EAAMy9G,GAC9BA,EAASn+G,GAAKU,EAAKV,GAAK,UACxBm+G,EAASzlH,MAAQ2oB,EAAK3oB,MACtBylH,EAAS1lH,OAAS4oB,EAAK5oB,OACvB0H,KAAK0vD,SAASsuD,EAAUz9G,QAELtG,IAAd6jH,EAAKrnE,OAAqC,IAAdqnE,EAAKrnE,OAClCunE,EAAS99G,MAAM+Y,YAAc,GAEjC8kG,EAAWxlH,MAAQ2oB,EAAK3oB,MACxBwlH,EAAWzlH,OAAS4oB,EAAK5oB,OACzB,IACItB,EADAinH,EAAaj+G,KAAKk+G,kBAAkB39G,GAEpC49G,EAA0B,GAAbF,EACbG,EAAOl9F,EAAK3oB,MAAQ,EAAI4lH,EAExBnnH,EADe,IAAfinH,EACIG,EAAO,EAGPA,EAA0B,GAAlBH,EAAa,GAG7B,IACII,EADAC,EAAe,IAAIxvG,GAuBvB,GArBkB,YAAdgvG,EAAKjiH,MAAoC,SAAdiiH,EAAKjiH,MAChCyiH,EAAa/lH,MAAQ,GACrB+lH,EAAahmH,OAAS,KAGtBgmH,EAAa/lH,MAAQ,GACrB+lH,EAAahmH,OAAS,IAE1BgmH,EAAaz+G,GAAKU,EAAKV,GAAK,eAC5By+G,EAAa37G,OAAOC,KAAO,EAC3B07G,EAAa37G,OAAOI,IAAM,EAC1Bs7G,EAAmBxuE,GAAyBiuE,EAAKjiH,MACjDyiH,EAAaloH,KAAOioH,EACpBC,EAAap+G,MAAM6Y,KAAO,cAC1BulG,EAAap+G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAExCyhF,EAAW79G,MAAM6Y,KAAO,cACxBglG,EAAW79G,MAAM8Y,YAAc,cAC/B+kG,EAAW79G,MAAM+Y,YAAc,EAC/B8kG,EAAW5rG,UAAY6rG,EAAUM,GAEf,YAAdR,EAAKjiH,KAAoB,CACzB,IAAI0iH,EAAsB,IAAIzvG,GAC9ByvG,EAAoB1+G,GAAKU,EAAKV,GAAK,qBACnC0+G,EAAoBnoH,KAAOioH,EAC3BE,EAAoB57G,OAAOC,KAAO07G,EAAa37G,OAAOC,KAAO,EAC7D27G,EAAoB57G,OAAOI,IAAMu7G,EAAa37G,OAAOI,IAAM,EAC3Dw7G,EAAoBr+G,MAAM6Y,KAAO,QACjCwlG,EAAoBr+G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAC/CyhF,EAAW5rG,SAASrb,KAAKynH,GAG7B,IAEIC,EAFAC,EAAWX,EAAKY,KAChBC,EAAe,IAAI7vG,GAEvB0vG,EAAiBzuE,GAAyB0uE,GAC1CE,EAAavoH,KAAOooH,EACpBG,EAAaz+G,MAAM6Y,KAAO,QAEtB4lG,EAAa/gF,QADA,SAAb6gF,EAMe,IAAfR,IACAjnH,EAAIonH,EAAO,GAEfO,EAAah8G,OAAOC,KAAO5L,GACE,IAAzB2nH,EAAa/gF,UACb5mC,GAAK,IAET2nH,EAAapmH,MAAQ,GACrBomH,EAAarmH,OAAS,GACtBqmH,EAAah8G,OAAOG,OAAS,EAC7B67G,EAAa9+G,GAAKU,EAAKV,GAAK,UAC5B8+G,EAAa/kG,oBAAsB,OACnC+kG,EAAahlG,kBAAoB,SACjCglG,EAAalqE,6BAA6B,EAAG,EAAG,YAChDkqE,EAAajqF,aAAe,QAC5BiqF,EAAaz+G,MAAM6Y,KAAO,cAC1BulG,EAAap+G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QACxCyhF,EAAW5rG,SAASrb,KAAK6nH,GAEzB,IAAIC,EAAe,IAAI9vG,GAcvB,OAbA8vG,EAAe5+G,KAAK6+G,yBAAyBt+G,EAAMq+G,IACzB,IAAtBd,EAAKgB,aACLF,EAAahhF,SAAU,EAGvBghF,EAAahhF,SAAU,EAER,IAAfqgF,IACAjnH,EAAIonH,EAAO,GAEfQ,EAAaj8G,OAAOC,KAAO5L,EAAI,EAC/BA,GAAK,GACL+mH,EAAW5rG,SAASrb,KAAK8nH,GAClBb,GAGX1B,EAAajsE,UAAUosE,kBAAoB,SAAUj8G,EAAMw+G,EAAUC,EAAKn/G,GACtE,IACIwmD,EACAC,EACA/tD,EACAD,EAJA2mH,EAAa,IAAIt9F,GAKrB9hB,EAAKA,GAAMU,EAAKV,GAChB,IAAI4oD,EAAW,qVAGXy2D,EAAa3+G,EAAKnC,MAAMioD,MAO5B,GANyB,UAArB9lD,EAAKnC,MAAMA,QACXioD,EAAQ64D,EAAW74D,MACnBC,EAAU44D,EAAW54D,SAEzB/tD,EAAQwmH,EAASxmH,MACjBD,EAASymH,EAASzmH,OACd0mH,EACAzmH,EAAQA,GAAS,GACjBD,EAASA,GAAU,QAElB,QAAuB2B,IAAnB8kH,EAASxmH,YAA2C0B,IAApB8kH,EAASzmH,OAAsB,CACpE,IAAIo1D,EAAc,IAAI5+C,GACtB4+C,EAAYt3D,KAAOqyD,EACnB,IAAIvnC,EAAOlhB,KAAKu8G,QAAQh8G,EAAMmtD,GAC9Bn1D,EAAQ2oB,EAAK3oB,MACbD,EAAS4oB,EAAK5oB,OAElB,IAAI6mH,EAAgB5+G,EAAKnC,MAAM+oD,SAC/B,GAAyB,aAArB5mD,EAAKnC,MAAMA,MAAsB,CAChB+gH,EAAcj4D,WAC/Bb,EAAQ04D,EAAS14D,MACjBC,EAAUy4D,EAASz4D,QAGvB,IAAI84D,EAAe,IAAItwG,GACvBswG,EAAahpH,KAAOqyD,EACpB22D,EAAav/G,GAAKA,EAAK,WACvBu/G,EAAa7mH,MAAQA,EACrB6mH,EAAa9mH,OAASA,EACtB8mH,EAAaxlG,oBAAsB,SACnCwlG,EAAazlG,kBAAoB,SACjCylG,EAAa1qF,aAAe,SAC5B10B,KAAK0vD,SAAS0vD,EAAc7+G,GAE5B,IAAI8+G,EAAe,IAAIvwG,GACvBuwG,EAAajpH,KAAOqyD,EACpB42D,EAAax/G,GAAKA,EAAK,WACvBw/G,EAAan/G,MAAMm9B,SAAW98B,EAAKL,MAAMm9B,SACzCgiF,EAAazlG,oBAAsB,SACnCylG,EAAa1lG,kBAAoB,SACjC0lG,EAAa3qF,aAAe,SAE5B2qF,EAAan/G,MAAM8Y,YAAczY,EAAKL,MAAM8Y,YAC5CqmG,EAAan/G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAExC,IAAIgjF,EAAc,IAAIxwG,GAClBywG,EAAkB9vE,GAA4B6W,GASlD,OARAg5D,EAAYlpH,KAAOmpH,EACnBD,EAAYz/G,GAAKA,EAAK,aACtBy/G,EAAY1lG,oBAAsB,SAClC0lG,EAAY3lG,kBAAoB,SAChC2lG,EAAY5qF,aAAe,SAE3B4qF,EAAYp/G,MAAM8Y,YAAczY,EAAKL,MAAM8Y,YAC3CsmG,EAAYp/G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAC/B+pB,GACJ,IAAK,QACDg5D,EAAazhF,SAAU,EACvB,MACJ,IAAK,uBACDwhF,EAAal/G,MAAM6e,gBAAkB,MACrCsgG,EAAazhF,SAAU,EACvB,MACJ,IAAK,eACDwhF,EAAal/G,MAAM6Y,KAAO,QAC1BqmG,EAAal/G,MAAMm9B,SAAW,KAC9B,MACJ,IAAK,8BACD+hF,EAAal/G,MAAM6Y,KAAO,QAC1BqmG,EAAal/G,MAAMm9B,SAAW,KAC9B+hF,EAAal/G,MAAM6e,gBAAkB,MACrCsgG,EAAan/G,MAAM6e,gBAAkB,MACrC,MACJ,IAAK,uBACL,IAAK,MACDqgG,EAAal/G,MAAM6Y,KAAiB,QAAVstC,EAAkB,QAAU,QACtD+4D,EAAal/G,MAAMm9B,SAAW,KAC9BiiF,EAAYp/G,MAAM6Y,KAAO,QACzBumG,EAAYp/G,MAAM8Y,YAAczY,EAAKL,MAAM6Y,KASnD,OALAkmG,EAAW/+G,MAAM6Y,KAAO,cACxBkmG,EAAW/+G,MAAM8Y,YAAc,cAC/BimG,EAAW/+G,MAAM+Y,YAAc,EAC/BgmG,EAAW9sG,UAAYitG,EAAcC,EAAcC,GACnDt/G,KAAKw/G,qBAAqBN,EAAYD,EAAY1mH,EAAOD,GAClD2mH,GAEX5C,EAAajsE,UAAUqvE,mBAAqB,SAAUl/G,EAAMkhB,GACxD,IAAI4kC,EAAQ9lD,EAAKnC,MAAMioD,MAAMA,MACzB+4D,EAAe39F,EAAO,GACtB49F,EAAe59F,EAAO,GACRA,EAAO,GACzB,OAAQ4kC,GACJ,IAAK,QACDg5D,EAAazhF,SAAU,EACvB,MACJ,IAAK,uBACDwhF,EAAal/G,MAAM6e,gBAAkB,MACrCsgG,EAAazhF,SAAU,IAInCy+E,EAAajsE,UAAUsvE,wBAA0B,SAAUn/G,GACvD,IAAI2mD,EAAa3mD,EAAKnC,MAAM+oD,SAASD,WACjCy4D,EAAcz4D,EAAW04D,OAAOnpH,OAChCqsB,EAAiD,gBAAxCviB,EAAKnC,MAAM+oD,SAASD,WAAWrrD,KAA0B,EAAI,EACtEgkH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GAOvD,IANyB,IAArB+0C,EAAW44D,QACXD,EAAe1tG,SAAS,EAAI2Q,EAAQ68F,GAAa/hF,SAAU,IAE/B,IAA5BspB,EAAW43D,eACXe,EAAe1tG,SAAS,EAAI2Q,EAAQ68F,GAAa/hF,SAAU,GAE3D+hF,EAAc,EACd,IAAK,IAAIjpH,EAAI,EAAGA,EAAIipH,EAAajpH,IAC7BsJ,KAAKy/G,mBAAmBl/G,EAAMs/G,EAAe1tG,SAAS,EAAIzb,GAAGyb,WAKzEkqG,EAAajsE,UAAU2vE,uBAAyB,SAAUx/G,GACtD,IAEIq/G,EACAv5D,EAOArvD,EAVAgpH,EAAmB,IAAIr+F,GAIvBs+F,EAAkB,IAAInxG,GAEtBoxG,GADyB,IAAIv+F,GACN,IAAI7S,IAC3B1Q,EAAQmC,EAAKnC,MAAM+oD,SACnBD,EAAa9oD,EAAM8oD,WACnBi5D,EAAgBngH,KAAKogH,wBAAwB7/G,GAE7C8/G,EAAiB,IAAIj8F,GACzBi8F,EAAexgH,GAAKU,EAAKV,GAAK,gBAC9BwgH,EAAengH,MAAM6Y,KAAO,cAC5BsnG,EAAehoH,aAAe,GAC9B,IAAI6oB,EAAOlhB,KAAKu8G,QAAQh8G,EAAM8/G,GAC9BA,EAAe9nH,MAAQ2oB,EAAK3oB,MAC5B8nH,EAAe/nH,OAAS4oB,EAAK5oB,OAC7B0nH,EAAiB7tG,UAAYkuG,GACC,gBAA1BjiH,EAAM8oD,WAAWrrD,MACjBmE,KAAKsgH,6BAA6B//G,EAAMA,EAAKnC,MAAO4hH,GAExD,IAEI7B,EADgB,GACHgC,EACb/B,EAAOl9F,EAAK3oB,MAAQ,EAEpBvB,EADkB,IAAlBmpH,EACI/B,IAGAA,EAAQD,EAAa,EARb,GAQoBgC,EAAgB,GAAkB,EAGtEngH,KAAK0vD,SAAS2wD,EAAgB9/G,GACsB,IAA/CA,EAAKiT,YAAcK,kBAAgBe,UACpCorG,EAAiB/4E,OAAS1mC,EAAK0mC,QAEnC,IAAIs5E,EAAiB,IAAIzxG,GAsBzB,GArBAyxG,EAAe1gH,GAAKU,EAAKV,GAAK,eAC9B0gH,EAAehoH,MAAQ,GACvBgoH,EAAejoH,OAAS,GACxBioH,EAAergH,MAAM6Y,KAAO,QAC5BwnG,EAAe59G,OAAOG,OAAS,EAC/By9G,EAAe3mG,oBAAsB,OACrC2mG,EAAe5mG,kBAAoB,SACnC4mG,EAAe9rE,6BAA6B,EAAG,EAAG,YAClD8rE,EAAe7rF,aAAe,QAC9B6rF,EAAenqH,KAAOm5C,GAAqB,kBAC3CgxE,EAAe59G,OAAOC,KAAO5L,GACA,IAAzBkwD,EAAWI,WAAuBJ,EAAWE,UAI7Cm5D,EAAe3iF,SAAU,EAHzB2iF,EAAe3iF,SAAU,GAKE,IAA3B2iF,EAAe3iF,UACf5mC,GAAK,IAETgpH,EAAiB7tG,SAASrb,KAAKypH,GACP,UAApBr5D,EAAWrrD,KAAkB,CAC7BwkH,EAAengH,MAAM+Y,YAAc,EACnConG,EAAengH,MAAM6e,gBAAkB,MACvC6gG,EAAS14D,EAAW04D,OACpB,IAAK,IAAIlpH,EAAI,EAAGA,EAAIkpH,EAAOnpH,OAAQC,IAC/B2vD,EAAQu5D,EAAOlpH,GACfsJ,KAAKwgH,gBAAgBn6D,EAAO9lD,EAAMy/G,GAI1CE,EAAuBlgH,KAAKygH,2BAA2BlgH,GACjC,IAAlB4/G,IACAnpH,EAAIonH,EAAO,GAEf8B,EAAqBv9G,OAAOC,KAAO5L,GACE,IAAjCkpH,EAAqBtiF,UACrB5mC,GAAK0pH,IAETV,EAAiB7tG,SAASrb,KAAKopH,GAE/BG,EAAexgH,GAAKU,EAAKV,GAAK,YACF,YAAxBqnD,EAAWy5D,WACXN,EAAengH,MAAM+Y,YAAc,EACnConG,EAAengH,MAAM6e,gBAAkB,OAEf,SAAxBmoC,EAAWy5D,WACXN,EAAengH,MAAM+Y,YAAc,EACnConG,EAAengH,MAAM6e,gBAAkB,OAEf,UAAxBmoC,EAAWy5D,WACXN,EAAengH,MAAM+Y,YAAc,EACnConG,EAAengH,MAAM6e,gBAAkB,OAG3CkhG,EAAkBjgH,KAAK4gH,kBAAkBrgH,EAAM0/G,EAAiB/4D,GAC1C,IAAlBi5D,IACAnpH,EAAIonH,EAAO,GAEf6B,EAAgBt9G,OAAOC,KAAO5L,GACE,IAA5BipH,EAAgBriF,UAChB5mC,GAAK0pH,IAETV,EAAiB7tG,SAASrb,KAAKmpH,GAE/B,IAAIY,EAAiB,IAAI/xG,GAoBzB,OAnBgC,IAA5Bo4C,EAAW43D,aACX+B,EAAejjF,SAAU,EAGzBijF,EAAejjF,SAAU,EAE7BijF,EAAiB7gH,KAAK6+G,yBAAyBt+G,EAAMsgH,GAC/B,IAAlBV,IACAnpH,EAAIonH,EAAO,GAEfyC,EAAel+G,OAAOC,KAAO5L,GACE,IAA3B6pH,EAAejjF,UACf5mC,GAAK0pH,IAETV,EAAiB7tG,SAASrb,KAAK+pH,GAE/Bb,EAAiB9/G,MAAM8Y,YAAc,cACrCgnG,EAAiB9/G,MAAM+Y,YAAc,EACrC+mG,EAAiB9/G,MAAM6Y,KAAO,cACvBinG,GAEX3D,EAAajsE,UAAUowE,gBAAkB,SAAUn6D,EAAO9lD,EAAMqY,EAAW/Y,GACvE+Y,EAAUzG,SAAWyG,EAAUzG,aAC/B,IAAI2uG,EACJA,EAAiB9gH,KAAKw8G,kBAAkBj8G,EAAM8lD,GAAO,EAAMxmD,GAC3DG,KAAK+gH,uBAAuBxgH,EAAMugH,EAAgBz6D,GAClDy6D,EAAejhH,GAAKA,GAAOU,EAAKV,GAAK,oBACrCihH,EAAevoH,MAAQ8tD,EAAM9tD,OAAS,GACtCuoH,EAAexoH,OAAS+tD,EAAM/tD,QAAU,GAExCwoH,EAAersE,6BAA6B4R,EAAMp2C,OAAOjZ,EAAGqvD,EAAMp2C,OAAOhZ,EAAG,YAC5E6pH,EAAepsF,aAAe,QAE9BosF,EAAen+G,OAAS0jD,EAAM1jD,OAE9Bm+G,EAAelnG,oBAAsBysC,EAAMzsC,oBAC3CknG,EAAennG,kBAAoB0sC,EAAM1sC,kBAEzCmnG,EAAe5gH,MAAM6Y,KAAO,cAC5B+nG,EAAe5gH,MAAM8Y,YAAc,cACnC8nG,EAAe5gH,MAAM+Y,YAAc,EACnCL,EAAUzG,SAASrb,KAAKgqH,IAE5BzE,EAAajsE,UAAUkwE,6BAA+B,SAAU//G,EAAMnC,EAAOwa,GACzE,IAAIooG,EAAapoG,EAAUzG,SAAS,GAAG5Z,MACnC0oH,EAAcroG,EAAUzG,SAAS,GAAG7Z,OACpC4oH,EAAY,IAAI98F,GACpB88F,EAAUv+G,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GACxDo+G,EAAUrhH,GAAKU,EAAKV,GAAK,2BACzBqhH,EAAU7oH,aAAe,GACzB6oH,EAAU3oH,MAAQyoH,EAAa,EAC/BE,EAAU5oH,OAAS2oH,EAAc,EACjCroG,EAAUzG,SAASrb,KAAKoqH,GACxB,IAAIC,EAAoB,IAAIx/F,GAC5Bw/F,EAAkBthH,GAAKU,EAAKV,GAAK,sBACjCshH,EAAkBjhH,MAAMm9B,SAAW98B,EAAKL,MAAMm9B,SAC9C,IAAI6+C,EAAc99E,EAAM+oD,SAASD,WAAWg1B,YAC5Cl8E,KAAKwgH,gBAAgBtkC,EAAYC,QAAS57E,EAAM4gH,EAAmB5gH,EAAKV,GAAK,YAC7EG,KAAKwgH,gBAAgBtkC,EAAY9W,OAAQ7kE,EAAM4gH,EAAmB5gH,EAAKV,GAAK,WAC5EG,KAAKwgH,gBAAgBtkC,EAAYE,QAAS77E,EAAM4gH,EAAmB5gH,EAAKV,GAAK,YAC7EG,KAAKuoG,iCAAiC4Y,EAAkBhvG,SAAS,GAAI+pE,EAAYC,QAAQv+C,SACzF59B,KAAKuoG,iCAAiC4Y,EAAkBhvG,SAAS,GAAI+pE,EAAY9W,OAAOxnC,SACxF59B,KAAKuoG,iCAAiC4Y,EAAkBhvG,SAAS,GAAI+pE,EAAYE,QAAQx+C,SACzFujF,EAAkB5sE,OAAQ,EAC1B4sE,EAAkB5oH,MAAQyoH,EAC1BG,EAAkB7oH,OAAS2oH,EAC3BE,EAAkBjhH,MAAM6Y,KAAOooG,EAAkBjhH,MAAM8Y,YAAc,cACrEJ,EAAUzG,SAASrb,KAAKqqH,IAG5B9E,EAAajsE,UAAUqwE,2BAA6B,SAAUlgH,GAC1D,IACIk+G,EAEA2C,EAHAhjH,EAAQmC,EAAKnC,MAAM+oD,SAEnBk6D,EAAiB,IAAIvyG,GAsBzB,OAnBA2vG,EADiBrgH,EAAM8oD,WACDw3D,KACtB0C,EAAqBrxE,GAAyB0uE,GAE1C4C,EAAezjF,QADF,SAAb6gF,EAMJ4C,EAAexhH,GAAKU,EAAKV,GAAK,QAC9BwhH,EAAejrH,KAAOgrH,EACtBC,EAAenhH,MAAM6Y,KAAO,QAC5BsoG,EAAe9oH,MAAQ,GACvB8oH,EAAe/oH,OAAS,GACxB+oH,EAAeznG,oBAAsB,OACrCynG,EAAe1nG,kBAAoB,SACnC0nG,EAAe5sE,6BAA6B,EAAG,EAAG,YAClD4sE,EAAe3sF,aAAe,QAC9B2sF,EAAe1+G,OAAOG,OAAS,EAC/Bu+G,EAAenhH,MAAM6Y,KAAO,cACrBsoG,GAGXhF,EAAajsE,UAAU1zB,KAAO,SAAUniB,EAAKunD,EAAIC,EAAI7iD,GACjD,IAAIqB,EAAOrB,EAAQ0c,UAAU,EAAM6qC,WAC/BlsD,EAAIoI,OAAOI,IAAMg/C,GAAM,GACvB7iD,EAAQigB,mBAAmB5kB,MAAWoI,QAAUI,IAAKxI,EAAIoI,OAAOI,IAAMg/C,KAEtExnD,EAAIoI,OAAOC,KAAOk/C,GAAM,GACxB5iD,EAAQigB,mBAAmB5kB,MAAWoI,QAAUC,KAAMrI,EAAIoI,OAAOC,KAAOk/C,KAE5E,IAEIntB,EAAQ30B,KAAKgmF,iBAAiBzlF,EAAMhG,EAAIsF,GAAIX,GAChDc,KAAKimF,oBAAoBtxD,EAAOp6B,EAAK2E,GACrCqB,EAAKiO,QAAQ6Q,QAAQ,IAAIC,QAAKrlB,OAAWA,IACzCsG,EAAKiO,QAAQ+Q,QAAQhf,EAAKiO,QAAQgR,aAClCtgB,EAAQw9E,sBACRx9E,EAAQylE,iBACR3kE,KAAKw8F,YAAYjiG,EAAK2E,IAG1Bm9G,EAAajsE,UAAUm7C,cAAgB,SAAUvoF,EAAQT,EAAQrD,GAC7D,GAAIqD,GAAgC,SAAtBA,EAAOnE,MAAMvC,MAAyC,SAAtBmH,EAAO5E,MAAMvC,MAC7B,mBAAvB0G,EAAOnE,MAAMA,MAA4B,CAC5C,IAAI8oD,EAAahoD,EAAQ0c,UAAU5Y,EAAOnD,IAAIzB,MAAM+oD,SAASD,WAC7D,GAAIhoD,EAAQkhB,eAAuC,SAAtBpd,EAAO5E,MAAMvC,OAAoBqrD,EAAWI,UAErE,YADA/kD,EAAOkkD,UAAYzjD,EAAOnD,IAI9B,GADAqnD,EAAWE,UAAYF,EAAWE,cAC9BF,EAAWE,YAA0D,IAA7CF,EAAWE,UAAU9mC,QAAQ/d,EAAO1C,MAAeqnD,EAAWI,UAAW,CACjGJ,EAAWE,UAAUtwD,KAAKyL,EAAO1C,IACjC,IAAIyhH,EAAcrkG,GAAY1a,GAC1Bg/G,EAAUriH,EAAQ0c,UAAUrZ,EAAO1C,IAAI2O,QACvC9M,EAAgBxC,EAAQ0c,UAAU5Y,EAAOnD,IAAI2O,QACjD+yG,EAAQ5+G,OAAOI,IAAOw+G,EAAQvlH,QAAWulH,EAAQh1G,WAAWjU,OAAS,GAC9D0K,EAAOhH,QAAWgH,EAAOuJ,WAAWjU,OAAS,GACpDipH,EAAQ5+G,OAAOC,KAAQ2+G,EAAQxlH,QAAWwlH,EAAQh1G,WAAWhU,MAAQ,GAC9DyK,EAAOjH,QAAWiH,EAAOuJ,WAAWhU,MAAQ,GACnDgpH,EAAQ5+G,OAAOI,IAAOw+G,EAAQ5+G,OAAOI,IAAM,EAAK,EAAIw+G,EAAQ5+G,OAAOI,IACnEw+G,EAAQ5+G,OAAOC,KAAQ2+G,EAAQ5+G,OAAOC,KAAO,EAAK,EAAI2+G,EAAQ5+G,OAAOC,KACrE1D,EAAQ0c,UAAUrZ,EAAO1C,IAAI4mD,UAAYzjD,EAAOnD,GAChD6B,EAAcyQ,SAASrb,KAAKoI,EAAQ0c,UAAUrZ,EAAO1C,IAAI2O,SACzD,IAAImmB,EAAQ30B,KAAKgmF,iBAAiBhjF,EAAQT,EAAO1C,GAAIX,GACrDc,KAAKimF,oBAAoBtxD,EAAOpyB,EAAQrD,GACxCwC,EAAc2d,QAAQ,IAAIC,QAAKrlB,OAAWA,IAC1CyH,EAAc6d,QAAQ7d,EAAc8d,aACpCtgB,EAAQw9E,sBACRx9E,EAAQylE,iBAGR,IAAK,IAFDn/C,KAEK9uB,GADT8uB,EAAQA,EAAMK,OAAOtjB,EAAOqjB,SAAUrjB,EAAOojB,UAC1BlvB,OAAS,EAAGC,GAAK,EAAGA,KACuD,IAAtFwI,EAAQ8nD,WAAW6xB,yBAAyBv4D,QAAQphB,EAAQ0c,UAAU4J,EAAM9uB,MAC5EwI,EAAQwtB,OAAOxtB,EAAQ0c,UAAU4J,EAAM9uB,KAG/C,IACI0mB,GACAvhB,KAAM,kBAAmByhB,YAAcxD,OAAQwnG,IAC/C/jG,YAAczD,OAHRmD,GAAY1a,KAGY8a,SAAU,YAE5Cne,EAAQse,gBAAgBJ,GACH,QAAjBle,EAAQ0sB,MACJrpB,EAAOsoB,OAAS7nB,EAAO6nB,QACvB3rB,EAAQy9F,gBAAgBp6F,GAGhCvC,KAAKw8F,YAAYj6F,EAAQrD,MAKrCm9G,EAAajsE,UAAUosD,YAAc,SAAUjiG,EAAK2E,GAChD,GAAuB,SAAnB3E,EAAI6D,MAAMvC,MAAmBtB,EAAI6D,MAAM+oD,SAASD,WAAWE,YAC1D7sD,EAAI6D,MAAM+oD,SAASD,WAAWI,UAE/B,IAAK,IAAIzqD,EAAK,EAAG2kH,EADEjnH,EAAI6D,MAAM+oD,SAASD,WAAWE,UACDvqD,EAAK2kH,EAAe/qH,OAAQoG,IAAM,CAC9E,IAAInG,EAAI8qH,EAAe3kH,GACnB+hB,EAAe1f,EAAQ0c,UAAUllB,GACjCkoB,IACA1f,EAAQsuD,qBAAqB5uC,GAC7BA,EAAapQ,QAAQ6Q,QAAQ,IAAIC,GAAKV,EAAapQ,QAAQjW,MAAOqmB,EAAapQ,QAAQlW,SACvFsmB,EAAapQ,QAAQ+Q,QAAQX,EAAapQ,QAAQgR,aAC9CZ,EAAaxgB,MAAM+oD,SAASD,WAAWE,WACpCxoC,EAAaxgB,MAAM+oD,SAASD,WAAWE,UAAU3wD,QACpDuJ,KAAKw8F,YAAY59E,EAAc1f,MAOnDm9G,EAAajsE,UAAUqtD,oBAAsB,SAAUpxE,EAAYntB,GAC/D,IAAIU,EAAUV,EAAQ0c,UAAUyQ,EAAWo6B,WAC3C,GAA8B,SAA1Bp6B,EAAWjuB,MAAMvC,MAAmBwwB,EAAWjuB,MAAM+oD,SAASD,WAAWE,WACzE/6B,EAAWjuB,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAAS,EAExD,IAAK,IAAIJ,GADL+wD,EAAY/6B,EAAWjuB,MAAM+oD,SAASD,WAAWE,WAC9B3wD,OAAS,EAAGJ,GAAK,EAAGA,IACvC6I,EAAQwtB,OAAOxtB,EAAQ0c,UAAUwrC,EAAU/wD,KAGnD,GAAIuJ,EAAS,CACTV,EAAQutB,yBAAyBJ,GACjC,IAAI+6B,EAAYxnD,EAAQxB,MAAM+oD,SAASD,WAAWE,UAClDpnD,KAAK8qF,oBAAoBlrF,EAAQ4O,QAAS6d,EAAWxsB,IACrD,IAAI4hH,EAAer6D,EAAU9mC,QAAQ+L,EAAWxsB,IAChDunD,EAAU7gD,OAAOk7G,EAAc,KAIvCpF,EAAajsE,UAAU06C,oBAAsB,SAAUt8E,EAAS6K,GAC5D,IAAK,IAAIxc,EAAK,EAAGohB,EAAKzP,EAAQ2D,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC1D,IAAInG,EAAIunB,EAAGphB,GACPnG,EAAEmJ,KAAOwZ,EACT7K,EAAQ2D,SAAS5L,OAAOiI,EAAQ2D,SAASmO,QAAQ5pB,GAAI,GAEhDA,EAAEyb,UACPnS,KAAK8qF,oBAAoBp0F,EAAG2iB,KAKxCgjG,EAAajsE,UAAU2qD,cAAgB,SAAUl7F,EAAIX,GACjD,IAAIqB,EAAOrB,EAAQ0c,UAAU/b,GAC7B,GAAIU,EAAM,CACN,IAAIwb,EAAW7c,EAAQ0c,UAAUrb,EAAKkmD,WACtC,GAAI1qC,GAAoC,SAAxBA,EAAS3d,MAAMvC,KAAiB,CAC5C,IAAIurD,EAAYrrC,EAAS3d,MAAM+oD,SAASD,WAAWE,UACnDloD,EAAQutB,yBAAyBlsB,GACjCP,KAAK8qF,oBAAoB/uE,EAASvN,QAAS3O,GAC3C,IAAI4hH,EAAer6D,EAAU9mC,QAAQzgB,GACrCunD,EAAU7gD,OAAOk7G,EAAc,GAC/BlhH,EAAKkmD,UAAY,GACjBvnD,EAAQ2sB,sBACR3sB,EAAQylE,oBAKpB03C,EAAajsE,UAAUkwC,WAAa,SAAUN,EAASnkE,EAAU3c,GAC7D,IAAIW,EACJmgF,EAAQngF,GAAKmgF,EAAQngF,IAAMua,KAC3Bva,EAAKmgF,EAAQngF,GACb,IAAIU,EAAOrB,EAAQ0c,UAAU/b,GACxBU,GACDrB,EAAQwsB,IAAIs0D,GAEhBA,EAAQv5B,UAAY5qC,EACpB,IAAIoD,EAAa/f,EAAQ0c,UAAUC,GAC/BqrC,EAAajoC,EAAW7gB,MAAM+oD,SAASD,WAC3C,GAAI3mD,GAAQ0e,GAAwC,SAA1BA,EAAW7gB,MAAMvC,MAAuC,SAApB0E,EAAKnC,MAAMvC,MACrEqrD,EAAWE,UAAW,CACtB7mD,EAAKkmD,UAAY5qC,EACjB,IAAIurC,EAAYnoC,EAAW7gB,MAAM+oD,SAASD,WAAWE,UASrD,GARIA,EAAU9mC,QAAQzgB,GAAM,GACxBunD,EAAUtwD,KAAK+I,GAEnBof,EAAWzQ,QAAQ2D,SAASrb,KAAKyJ,EAAKiO,SACtCyQ,EAAWzQ,QAAQ6Q,QAAQ,IAAIC,IAC/BL,EAAWzQ,QAAQ+Q,QAAQN,EAAWzQ,QAAQgR,aAC9CtgB,EAAQ8nD,WAAWw1C,YAAYv9E,EAAY/f,GAC3CA,EAAQ2sB,sBACa,QAAjB3sB,EAAQ0sB,MAAmBrrB,EAAKnC,OAASmC,EAAKnC,MAAM+oD,WAChD5mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAAY,CACnCtoB,GAAkBjjB,EAAW,iBACnCmjB,YAAYF,GAAkBkhD,EAAQngF,GAAK,qBAK7Dw8G,EAAajsE,UAAU41C,iBAAmB,SAAUzlF,EAAMmhH,EAAcxiH,GACpE,IACIy1B,EADAyyB,EAAY7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAE/C,GAAIA,GAAaA,EAAU3wD,OACvB,IAAK,IAAIoG,EAAK,EAAG4hF,EAAcr3B,EAAWvqD,EAAK4hF,EAAYhoF,OAAQoG,IAAM,CACrE,IAAInG,EAAI+nF,EAAY5hF,GAChB6kH,IAAiBhrH,IAKbi+B,EAJCA,EAIOz1B,EAAQ0c,UAAUllB,GAAG8X,QAAQhN,OAAO6Q,UAAUsiB,GAH9Cz1B,EAAQ0c,UAAUllB,GAAG8X,QAAQhN,QAQrD,OAAOmzB,GAASz1B,EAAQ0c,UAAU8lG,GAAclzG,QAAQhN,QAG5D66G,EAAajsE,UAAU61C,oBAAsB,SAAUtxD,EAAOp6B,EAAK2E,GAC/D,IAAIwI,EACAT,EAEApE,EACAC,EAFAvC,EAAOrB,EAAQ0c,UAAUrhB,EAAIksD,WAG7B1lB,GAAU/pC,EAAG,GAAKC,EAAG,IACpBsJ,EAAKiO,QAAQhN,OAAOoB,KAAOrI,EAAIoI,OAAOC,KAAOrI,EAAIhC,MAAUgI,EAAKiO,QAAQhN,OAAY,QACrFqB,GAAQ,GAEPtC,EAAKiO,QAAQhN,OAAOuB,IAAMxI,EAAIoI,OAAOI,IAAMxI,EAAIjC,OAAWiI,EAAKiO,QAAQhN,OAAa,SACrFsB,GAAS,GAETD,IACAk+B,EAAM/pC,EAAI,GAEV8L,IACAi+B,EAAM9pC,EAAI,GAEd,IAAIsV,EAAahM,EAAKiO,QAAQjC,WAC1B1J,IACA6E,GAASnN,EAAIiU,QAAQ7L,OAAOC,KAAOrI,EAAIiU,QAAQhN,OAAOjJ,OAASgU,EAAWhU,OAE1EuK,IACAmE,GAAS1M,EAAIiU,QAAQ7L,OAAOI,IAAMxI,EAAIiU,QAAQhN,OAAOlJ,QAAUiU,EAAWjU,SAE1EoP,EAAQ,GAAKT,EAAQ,IACrB/H,EAAQue,eAAed,MAAMzd,EAAQ0c,UAAUrhB,EAAIksD,WAAY/+C,GAAS,EAAGT,GAAS,EAAG85B,IAI/Fs7E,EAAajsE,UAAUyuE,yBAA2B,SAAUt+G,EAAMohH,GAe9D,OAdAA,EAAiB9hH,GAAKU,EAAKV,GAAK,kBAChC8hH,EAAiBppH,MAAQ,GACzBopH,EAAiBrpH,OAAS,GAC1BqpH,EAAiBh/G,OAAOG,OAAS,EACjC6+G,EAAiBzhH,MAAM6Y,KAAO,cAC9B4oG,EAAiB/nG,oBAAsB,OACvC+nG,EAAiBhoG,kBAAoB,SACrCgoG,EAAiBjtF,aAAe,SAChCitF,EAAiBvrH,KAAO,8iBAMjBurH,GAGXtF,EAAajsE,UAAUwsE,qBAAuB,SAAUr8G,GACpD,IACIN,EADAg/G,EAAa,IAAIt9F,GAEjBvjB,EAAQmC,EAAKnC,MAAM+oD,SACnB22D,EAAO1/G,EAAM+oD,SACbD,EAAa9oD,EAAM8oD,WACJ9oD,EAAM+oD,SAWzB,MAVa,SAAT22D,IACA79G,EAAUD,KAAK69G,iBAAiBt9G,IAEvB,eAATu9G,GAAyB52D,IACzBjnD,EAAUD,KAAK+/G,uBAAuBx/G,IAE1C0+G,EAAW9sG,UAAYlS,GACvBg/G,EAAW/+G,MAAM6Y,KAAO,cACxBkmG,EAAW/+G,MAAM8Y,YAAc,cAC/BimG,EAAW/+G,MAAM+Y,YAAc,EACxBgmG,GAGX5C,EAAajsE,UAAU2wE,uBAAyB,SAAUxgH,EAAMqhH,EAAwBhC,GACpF,IAAIxmG,EACA2iB,EACJ,GAAkC,IAA9B6jF,EAAOxmG,YAAY3iB,OACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIkpH,EAAOxmG,YAAY3iB,OAAQC,IAAK,CAChD,IAAImrH,EAAQjC,EAAOxmG,YAAY1iB,IAC/B0iB,EAAc7Y,EAAKgoD,sBAAsBs5D,IAC7BtpH,MAAQqnH,EAAOrnH,MAC3B6gB,EAAY9gB,OAASsnH,EAAOtnH,OAC5BspH,EAAuBzvG,SAASrb,KAAKsiB,GAG7C,GAA4B,IAAxBwmG,EAAO7jF,MAAMtlC,OACb,IAASC,EAAI,EAAGA,EAAIkpH,EAAO7jF,MAAMtlC,OAAQC,IAAK,CAC1C,IAAIyM,EAAOy8G,EAAO7jF,MAAMrlC,GACxBqlC,EAAQx7B,EAAKonD,gBAAgBxkD,GAC7By+G,EAAuBzvG,SAASrb,KAAKilC,KAKjDsgF,EAAajsE,UAAUwwE,kBAAoB,SAAUrgH,EAAMuhH,EAAW56D,GAkBlE,OAjBA46D,EAAUjiH,GAAKU,EAAKV,GAAK,WACzBiiH,EAAUvpH,MAAQ,GAClBupH,EAAUxpH,OAAS,EACnBwpH,EAAU5hH,MAAM6Y,KAAO,QACvB+oG,EAAUn/G,OAAOG,OAAS,EAC1Bg/G,EAAUloG,oBAAsB,OAChCkoG,EAAUnoG,kBAAoB,SAC9BmoG,EAAUptF,aAAe,SACzBotF,EAAU1rH,KAAO,mUAGb8wD,IAAmC,IAArBA,EAAW44D,MACzBgC,EAAUlkF,SAAU,EAGpBkkF,EAAUlkF,SAAU,EAEjBkkF,GAGXzF,EAAajsE,UAAU0sE,sBAAwB,SAAUv8G,EAAMrB,EAAS2kB,EAAY5jB,GAChF4jB,EAAWhkB,GAAKgkB,EAAWhkB,IAAMua,KACjCyJ,EAAW8f,OAASpjC,EAAKV,GACzB,IAAIkiH,EAAsB,IAAIpgG,GAC1BqgG,EAAiB,IAAIlzG,GACrBotB,EAAc,IAAI5X,GAEtB09F,EAAeniH,GAAKU,EAAKV,GAAK,IAAMgkB,EAAWhkB,GAAK,QACpDmiH,EAAezpH,MAAQsrB,EAAWtrB,MAClCypH,EAAe1pH,OAASurB,EAAWvrB,OACnC0pH,EAAettF,aAAe,SAC9BwH,EAAYr8B,GAAKU,EAAKV,GAAK,IAAMgkB,EAAWhkB,GAAK,QACjDq8B,EAAYj8B,QAAU4jB,EAAWpJ,KACjC,IAAIva,EAAQK,EAAKL,MACjBg8B,EAAYh8B,OACRqZ,SAAUrZ,EAAMqZ,SAAUijB,OAAQt8B,EAAMs8B,OAAQa,SAAU,KAAMf,QAASp8B,EAAMo8B,QAC/EhjB,KAAMpZ,EAAMoZ,KAAMG,aAAcvZ,EAAMuZ,aAAcD,MAAOtZ,EAAMsZ,MAAOT,KAAM,QAC9EwjB,WAAYr8B,EAAMq8B,WAAYG,WAAYx8B,EAAMw8B,WAAYL,aAAc,OAC1ErjB,YAAa,OAAQC,YAAa,EAClC8F,gBAAiB7e,EAAM6e,gBAAiB0d,UAAWv8B,EAAMu8B,UAAWE,eAAgBz8B,EAAMy8B,gBAE9FT,EAAYtiB,oBAAsB,SAClCsiB,EAAYviB,kBAAoB,SAChCuiB,EAAYxH,aAAe,SAC3BwH,EAAYv5B,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAC1Di/G,EAAoBhmH,QAAUwE,EAAKxE,QAAU8nB,EAAWptB,OACpDgG,KAAKY,IAAIwmB,EAAWrsB,OAASiF,KAAK2R,GAAK,MAC3C2zG,EAAoB/lH,QAAUuE,EAAKvE,QAAU6nB,EAAWptB,OACpDgG,KAAKW,IAAIymB,EAAWrsB,OAASiF,KAAK2R,GAAK,MAC3C2zG,EAAoBxtE,OAAQ,EAC5BwtE,EAAoBl8G,UAAYmtC,YAAUc,KAC1CiuE,EAAoBliH,GAAKU,EAAKV,GAAK,mBAAqBgkB,EAAWhkB,GACnEkiH,EAAoB7hH,MAAM8Y,YAAc,cACxC+oG,EAAoBp/G,QAAWC,KA3BlB,GA2BgCC,MA3BhC,GA2B+CE,IA3B/C,GA2B4DD,OA3B5D,IA4Bbi/G,EAAoBrtF,aAAe,SACnCqtF,EAAoB70G,YAAc,EAClC60G,EAAoB5vG,UAAY6vG,EAAgB9lF,GAChD,IAAIqgD,EAAiB,IAAIznE,GAAKvU,EAAKnC,MAAO,eAAiByB,GAAIkiH,EAAoBliH,GAAIzB,OAASvC,KAAM,OAAQuC,MAAO,oBAAsB,GAC3Im+E,EAAexgD,QAEPl8B,GAAImiH,EAAeniH,GAAK,QAASzB,MAAO,SACxC6R,QAAUjZ,EAAG,EAAGC,EAAG,MAG3BslF,EAAexgF,QAAUgmH,EAAoBhmH,QAC7CwgF,EAAevgF,QAAU+lH,EAAoB/lH,QAC7CugF,EAAe9hE,KAAOoJ,EAAWpJ,KACjC8hE,EAAe/kF,MAAQqsB,EAAWrsB,MAClC+kF,EAAe9lF,OAASotB,EAAWptB,OACnC8lF,EAAehkF,MAAQsrB,EAAWtrB,MAClCgkF,EAAejkF,OAASurB,EAAWvrB,OACnCikF,EAAe/tE,QAAUuzG,EACzBA,EAAoB5vG,SAASrb,KAAKylF,EAAe50B,gBAAgB40B,EAAexgD,MAAM,KACtF,IAAIv6B,EAAS,IAAI8K,GAAK,EAAG,EAAG,EAAG,GAC3B/T,EAAQgI,EAAKhI,OAASgI,EAAKse,UAAY,EACvCvmB,EAASiI,EAAKjI,QAAUiI,EAAK8Z,WAAa,OAChCpgB,IAAV1B,QAAkC0B,IAAX3B,IACvBkJ,EAAS,IAAI8K,GAAK/L,EAAKxE,QAAUxD,EAAQ,EAAGgI,EAAKvE,QAAU1D,EAAS,EAAGC,EAAOD,IAElF0H,KAAKiiH,kBAAkBzgH,EAAQugH,GAAuB/qH,EAAGulF,EAAexgF,QAAS9E,EAAGslF,EAAevgF,SAAWugF,EAAgB14D,EAAWptB,OAAQotB,EAAWrsB,OAC5J,IAAI+M,GACA1E,GAAIU,EAAKV,GAAK,IAAMgkB,EAAWhkB,GAAK,aACpC2T,YAAaI,uBAAqBiF,UAAYjF,uBAAqBU,cAAgBV,uBAAqBG,MACxGtS,SAAUlB,EAAKV,GAAIonB,SAAU86F,EAAoBliH,GACjDyS,iBAAmBlU,MAAO,SAE1B8jH,EAAsB,IAAIvuG,GAAUpT,EAAKnC,MAAO,cAAemG,GAAW,GAC9E29G,EAAoBtgE,aAAe26B,EAAexgD,MAAM,GAAGl8B,GAC3DqiH,EAAoBr/E,KAAK3jC,GACzBgjH,EAAoB1zG,QAAQ+lC,OAAQ,EACpC2tE,EAAoB1zG,QAAQ3I,UAAYmtC,YAAUc,KAClD7zC,EAAQkS,SAASrb,KAAKorH,EAAoB1zG,SAC1C0zG,EAAoBr3F,OAAS,IAC7B,IAAIzN,EAAQpd,KAAKs8G,kBAAkB/7G,EAAKV,IACnCud,IACDA,MAECA,EAAMyG,EAAWhkB,MAClBud,EAAMyG,EAAWhkB,QASrB,OALAud,EAAMyG,EAAWhkB,IAAW,KAAI08E,EAChCn/D,EAAMyG,EAAWhkB,IAAW,UAAIqiH,EAChCliH,KAAKs8G,kBAAkB/7G,EAAKV,IAAMud,EAClCle,EAAQ2a,WAAW0iE,OAAgBtiF,GAAW,GAC9CsiF,EAAe1xD,OAAS,IACjBk3F,GAGX1F,EAAajsE,UAAUysE,yBAA2B,SAAU39G,EAAS2kB,EAAY5jB,GAC7E4jB,EAAWhkB,GAAKgkB,EAAWhkB,IAAMua,KACjC,IAAI+nG,EAAuB,IAAIxgG,GAC3BqgG,EAAiB,IAAIlzG,GACrBszG,EAAa,IAAI99F,GAErB09F,EAAeniH,GAAK,IAAMgkB,EAAWhkB,GAAK,QAC1CmiH,EAAezpH,MAAQsrB,EAAWtrB,MAClCypH,EAAe1pH,OAASurB,EAAWvrB,OACnC0pH,EAAettF,aAAe,SAC9B0tF,EAAWviH,GAAKgkB,EAAWhkB,GAAK,QAChCuiH,EAAWniH,QAAU4jB,EAAWzlB,MAAMylB,WAAWpJ,KACjD,IAAImsC,EAAY/iC,EAAW3jB,MAC3BkiH,EAAWliH,OACPqZ,SAAUqtC,EAAUrtC,SAAUijB,OAAQoqB,EAAUpqB,OAAQa,SAAU,KAAMf,QAASsqB,EAAUtqB,QAC3FhjB,KAAMstC,EAAUttC,KAAMG,aAAcmtC,EAAUntC,aAAcD,MAAOotC,EAAUptC,MAAOT,KAAM,QAC1FwjB,WAAYqqB,EAAUrqB,WAAYG,WAAYkqB,EAAUlqB,WAAYL,aAAc,OAClFrjB,YAAa,OAAQC,YAAa,EAClC8F,gBAAiB6nC,EAAU7nC,gBAAiB0d,UAAWmqB,EAAUnqB,UAAWE,eAAgBiqB,EAAUjqB,gBAE1GylF,EAAWxoG,oBAAsB,OACjCwoG,EAAWzoG,kBAAoB,SAC/ByoG,EAAW1tF,aAAe,SAC1B0tF,EAAWz/G,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GACzDq/G,EAAqBpmH,QAAU8nB,EAAW9nB,QAAU8nB,EAAWzlB,MAAMylB,WAAWptB,OAC5EgG,KAAKY,IAAIwmB,EAAWzlB,MAAMylB,WAAWrsB,OAASiF,KAAK2R,GAAK,MAC5D+zG,EAAqBnmH,QAAU6nB,EAAW7nB,QAAU6nB,EAAWzlB,MAAMylB,WAAWptB,OAC5EgG,KAAKW,IAAIymB,EAAWzlB,MAAMylB,WAAWrsB,OAASiF,KAAK2R,GAAK,MAC5D+zG,EAAqB5tE,OAAQ,EAE7B4tE,EAAqBtiH,GAAKgkB,EAAWhkB,GAAK,mBAAqBgkB,EAAWhkB,GAC1EsiH,EAAqBjiH,MAAM8Y,YAAc,cACzCmpG,EAAqBx/G,QAAWC,KA3BnB,GA2BiCC,MA3BjC,GA2BgDE,IA3BhD,GA2B6DD,OA3B7D,IA4Bbq/G,EAAqBztF,aAAe,SACpCytF,EAAqBj1G,YAAc,EACnCi1G,EAAqBhwG,UAAY6vG,EAAgBI,GACjD,IAAIC,EAAmB,IAAIvtG,GAAK+O,EAAWzlB,MAAO,eAAiByB,GAAIsiH,EAAqBtiH,GAAIzB,OAASvC,KAAM,OAAQuC,MAAO,oBAAsB,GACpJikH,EAAiBtmF,QAETl8B,GAAImiH,EAAeniH,GAAK,QAASzB,MAAO,SACxC6R,QAAUjZ,EAAG,EAAGC,EAAG,MAG3BorH,EAAiBtmH,QAAUomH,EAAqBpmH,QAChDsmH,EAAiBrmH,QAAUmmH,EAAqBnmH,QAC5CqmH,EAAiBjkH,OAASikH,EAAiBjkH,MAAMylB,aACjDw+F,EAAiB5nG,KAAOoJ,EAAWzlB,MAAMylB,WAAWpJ,KACpD4nG,EAAiB7qH,MAAQqsB,EAAWzlB,MAAMylB,WAAWrsB,MACrD6qH,EAAiB5rH,OAASotB,EAAWzlB,MAAMylB,WAAWptB,QAE1D4rH,EAAiB9pH,MAAQsrB,EAAWtrB,MACpC8pH,EAAiB/pH,OAASurB,EAAWvrB,OACrC+pH,EAAiB7zG,QAAU2zG,EAC3BA,EAAqBhwG,SAASrb,KAAKurH,EAAiB16D,gBAAgB06D,EAAiBtmF,MAAM,KAC3F,IAAIv6B,EAAS,IAAI8K,GAAK,EAAG,EAAG,EAAG,GAC3B/T,EAAQsrB,EAAWtrB,OAAS,EAC5BD,EAASurB,EAAWvrB,QAAU,EAKlC,YAJc2B,IAAV1B,QAAkC0B,IAAX3B,IACvBkJ,EAAS,IAAI8K,GAAKuX,EAAW9nB,QAAUxD,EAAQ,EAAGsrB,EAAW7nB,QAAU1D,EAAS,EAAGC,EAAOD,IAE9F0H,KAAKiiH,kBAAkBzgH,EAAQ2gH,GAAwBnrH,EAAGqrH,EAAiBtmH,QAAS9E,EAAGorH,EAAiBrmH,SAAWqmH,EAAkBx+F,EAAWptB,OAAQotB,EAAWrsB,OAC5J2qH,GAGX9F,EAAajsE,UAAU6tD,yBAA2B,SAAU19F,EAAMV,GAC9D,GAAIU,GAA4B,SAApBA,EAAKnC,MAAMvC,KAAiB,CAEpC,GAAoB,mBADR0E,EAAKnC,MACPA,MACN,OAAOmC,EAAKiO,QAAQ2D,SAAS,GAE5B,GAAInS,KAAKs8G,kBAAkB/7G,EAAKV,KAAOG,KAAKs8G,kBAAkB/7G,EAAKV,IAAIA,GAAK,CAC7E,IAAI08E,EAAiBv8E,KAAKs8G,kBAAkB/7G,EAAKV,IAAIA,GAAIU,KACzD,OAAOP,KAAKi+F,yBAAyB1hB,EAAgB18E,IAG7D,OAAO,MAGXw8G,EAAajsE,UAAU0sD,cAAgB,SAAUv8F,EAAMsjB,EAAY3kB,GAC/D,IAAIojH,EAAmB/hH,EAAKiO,QAAQ2D,SAAS,GACzC/T,EAAQmC,EAAKnC,MACjBylB,EAAW8f,OAASpjC,EAAKV,GACzB,IAAI28E,EAAgB,IAAItkD,GAAe95B,EAAO,cAAeylB,GAAY,GAKzE,OAJAzlB,EAAMgb,YAAYtiB,KAAK0lF,GACvB8lC,EAAiBnwG,SAASrb,KAAKkJ,KAAK88G,sBAAsBv8G,EAAMrB,EAAS2kB,EAAYy+F,IACrF/hH,EAAKiO,QAAQ6Q,QAAQ,IAAIC,IACzB/e,EAAKiO,QAAQ+Q,QAAQhf,EAAKiO,QAAQgR,aAC3Bxf,KAAKs8G,kBAAkB/7G,EAAKV,IAAIgkB,EAAWhkB,IAAI0E,WAE1D83G,EAAajsE,UAAUmyE,iBAAmB,SAAUhoH,EAAK2E,GACrD,IAAI69G,EAAYxiH,EAAI6D,MACpB,GAAI2+G,EAAU3jG,YAAY3iB,OACtB,IAAK,IAAIC,EAAIqmH,EAAU3jG,YAAY3iB,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACxD,IAAImtB,EAAak5F,EAAU3jG,YAAY1iB,GACvCsJ,KAAKwiH,wBAAwBjoH,EAAKspB,EAAY3kB,UAG/Cc,KAAKs8G,kBAAkB/hH,EAAIsF,KAGtCw8G,EAAajsE,UAAUqsC,0BAA4B,SAAUl8E,EAAMrB,GAI/D,GAAwB,SAApBqB,EAAKnC,MAAMvC,KACX,GAAyB,mBAArB0E,EAAKnC,MAAMA,MAMX,IAAK,IALDyB,EAAKU,EAAKV,GAAGkP,MAAM,KACnB8yB,EAAehiC,EAAGA,EAAGpJ,OAAS,GAC9BktC,EAAS9jC,EAAGA,EAAGpJ,OAAS,IAAMoJ,EAAG,GACjCof,EAAa/f,EAAQ0c,UAAU+nB,GAC/Bo5E,EAAY99F,EAAW7gB,MAClBvB,EAAK,EAAGohB,EAAK8+F,EAAU3jG,YAAavc,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC/D,IAAIgnB,EAAa5F,EAAGphB,GACpB,GAAIgnB,EAAWhkB,KAAOgiC,EAAc,CAEhC,IAAe,IADHk7E,EAAU3jG,YAAYkH,QAAQuD,GAItC,OAFA3kB,EAAQutB,yBAAyBlsB,GACjCP,KAAKwiH,wBAAwBvjG,EAAY4E,EAAY3kB,IAC9C,QAKdqB,EAAKnC,MAAMgb,aAAe7Y,EAAKnC,MAAMgb,YAAY3iB,QACtDuJ,KAAKuiH,iBAAiBhiH,EAAMrB,GAGpC,OAAO,GAEXm9G,EAAajsE,UAAUoyE,wBAA0B,SAAUvjG,EAAY4E,EAAY3kB,GAC/E,IAAI69G,EAAY99F,EAAW7gB,MACvB0kB,EAAQi6F,EAAU3jG,YAAYkH,QAAQuD,GAC1C,IAAe,IAAXf,EAAc,CACd,KAAM5jB,EAAQwY,eAAiBC,gBAAc+I,UAAexhB,EAAQwY,eAAiBC,gBAAcgnE,OAAQ,CACvG,IAAI1X,GACAprE,KAAM,oBAAqB4sB,WAAY,SAAUnL,WAAYL,GAAY4G,GACzEtG,WAAYN,GAAY4G,GAAaxG,SAAU,YAEnDne,EAAQse,gBAAgBypD,GAE5B81C,EAAU3jG,YAAY7S,OAAOuc,EAAO,GACpC,IAAI1F,EAAQpd,KAAKs8G,kBAAkBr9F,EAAWpf,IAC9C,GAAIud,GAASA,EAAMyG,EAAWhkB,IAAK,CAC/B,IAAI08E,EAAiBn/D,EAAMyG,EAAWhkB,IAAIU,KACtC2hH,EAAsB9kG,EAAMyG,EAAWhkB,IAAI0E,UAC/CrF,EAAQqhB,eAAeg8D,GACvBr9E,EAAQqhB,eAAe2hG,GACvB,IAAIO,EAAcxjG,EAAWzQ,QAAQ2D,SAAS,GAC9C2Q,EAAQ2/F,EAAYtwG,SAASmO,QAAQi8D,EAAe/tE,SACpDi0G,EAAYtwG,SAAS5L,OAAOuc,EAAO,GACnCA,EAAQ2/F,EAAYtwG,SAASmO,QAAQ4hG,EAAoB1zG,SACzDi0G,EAAYtwG,SAAS5L,OAAOuc,EAAO,GACnC5jB,EAAQ2tB,gBAAgB0vD,GACxBr9E,EAAQ2tB,gBAAgBq1F,UACjBhjH,EAAQ0c,UAAU2gE,EAAe18E,WACjCX,EAAQ0c,UAAUsmG,EAAoBriH,WACtCud,EAAMyG,EAAWhkB,OAIpCw8G,EAAajsE,UAAU6xE,kBAAoB,SAAUS,EAAcl0G,EAASnO,EAAUE,EAAM9J,EAAQe,GAChG,IAAI0V,EAAclN,KAAK2iH,uBAAuBtiH,EAAUqiH,GACpDtsH,EAAO,GACPs3D,EAAcl/C,EAAQ2D,SAAS,GAC/BgoE,EAAc3rE,EAAQ2D,SAAS,GAC/B+pB,EAAc1tB,EAAQ2D,SAAS,GACnCu7C,EAAY9zC,oBAAsB,UAClC8zC,EAAY/zC,kBAAoB,UAChCuiB,EAAYv5B,OAAOC,KAAOs5B,EAAYv5B,OAAOE,MAAQ,EACrDq5B,EAAYv5B,OAAOI,IAAMm5B,EAAYv5B,OAAOG,OAAS,EACrD,IAAInH,EACArB,EACgB,IAAhB4S,GACA9W,EAAO,0BACPs3D,EAAYn1D,MAAQ,GACpBm1D,EAAY9zC,oBAAsB,OAClCugE,EAAY1lC,6BAA6B,EAAG,GAAK,YACjDvY,EAAYv5B,OAAOI,IAAMm5B,EAAYv5B,OAAOG,OAAS,GACrDnH,EAAQ+mH,EAAa/6G,YACrBrN,GACIpD,GAAIwrH,EAAa7/G,MAAO1L,GAAIurH,EAAa3/G,IACzC3L,GAAIsrH,EAAa7/G,MAAOxL,GAAIqrH,EAAa5/G,SAGxB,MAAhBoK,GACL9W,EAAO,0BACPs3D,EAAYn1D,MAAQ,GACpBm1D,EAAY9zC,oBAAsB,QAClCugE,EAAY1lC,6BAA6B,EAAG,GAAK,YACjDvY,EAAYv5B,OAAOI,IAAMm5B,EAAYv5B,OAAOG,OAAS,GACrDnH,EAAQ+mH,EAAap6G,WACrBhO,GACIpD,GAAIwrH,EAAa9/G,KAAMzL,GAAIurH,EAAa3/G,IACxC3L,GAAIsrH,EAAa9/G,KAAMvL,GAAIqrH,EAAa5/G,SAGvB,KAAhBoK,GACL9W,EAAO,0BACPs3D,EAAYp1D,OAAS,GACrBo1D,EAAY/zC,kBAAoB,MAChCwgE,EAAY1lC,6BAA6B,GAAK,EAAG,YACjDvY,EAAYv5B,OAAOC,KAAOs5B,EAAYv5B,OAAOE,MAAQ,GACrDlH,EAAQ+mH,EAAa16G,aACrB1N,GACIpD,GAAIwrH,EAAa7/G,MAAO1L,GAAIurH,EAAa5/G,OACzC1L,GAAIsrH,EAAa9/G,KAAMvL,GAAIqrH,EAAa5/G,UAI5C1M,EAAO,0BACPs3D,EAAYp1D,OAAS,GACrBo1D,EAAY/zC,kBAAoB,SAChCwgE,EAAY1lC,6BAA6B,GAAK,EAAG,YACjDvY,EAAYv5B,OAAOC,KAAOs5B,EAAYv5B,OAAOE,MAAQ,GACrDlH,EAAQ+mH,EAAaj/G,UACrBnJ,GACIpD,GAAIwrH,EAAa7/G,MAAO1L,GAAIurH,EAAa3/G,IACzC3L,GAAIsrH,EAAa9/G,KAAMvL,GAAIqrH,EAAa3/G,MAGhD,IAAI9B,EAASyhH,EAAazhH,OAE1BtF,EAAQiR,GAAsBtS,GAAU2G,EADzBsE,GAAMM,UAAUxF,EAAU7I,EAAOiF,KAAKmJ,IAAI88G,EAAanqH,MAAOmqH,EAAapqH,UAC/B,EAAO2I,GAClEysD,EAAYt3D,KAAOA,OACJ6D,IAAXxD,QAAkCwD,IAAVzC,IACxBmE,EAAQ4J,GAAMM,UAAUlK,EAAOnE,EAAOf,GACtC+X,EAAQzS,QAAUwE,EAAKxE,QAAUJ,EAAM3E,EACvCwX,EAAQxS,QAAUuE,EAAKvE,QAAUL,EAAM1E,IAI/ColH,EAAajsE,UAAU27D,qBAAuB,SAAUj2B,EAAa52E,GACjE,GAAIc,KAAKs8G,kBAAmB,CACxB,IAAIsG,EAAe9sC,EAAYj6D,SAC3BgmB,EAAei0C,EAAYj2E,GAC3Bof,EAAa/f,EAAQ0c,UAAUgnG,GACnC,OAAI3jG,GAAwC,SAA1BA,EAAW7gB,MAAMvC,MAAmBmE,KAAKs8G,kBAAkBsG,IACzE5iH,KAAKs8G,kBAAkBsG,GAAc/gF,GAC9B5iB,EAEJ,KAEX,OAAO,MAGXo9F,EAAajsE,UAAU67D,4BAA8B,SAAUhtF,EAAY62D,EAAar7D,EAAMvb,GAC1F,IAAI0jH,EAAe9sC,EAAYj6D,SAC3BgmB,EAAei0C,EAAYj2E,GAC/B,GAAIG,KAAKs8G,kBAAkBsG,IAAiB5iH,KAAKs8G,kBAAkBsG,GAAc/gF,GAC7E,IAAK,IAAIhlC,EAAK,EAAGohB,EAAKgB,EAAW7gB,MAAMgb,YAAavc,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACtE,IAAIgnB,EAAa5F,EAAGphB,GACpB,GAAIgnB,EAAWhkB,KAAOgiC,EAAc,CAChChe,EAAWpJ,KAAOA,EAClB,IAAIjM,EAAUxO,KAAKs8G,kBAAkBsG,GAAc/gF,GAActhC,KAAKiO,QAAQ2D,SAAS,GACvF3D,EAAQvO,QAAUwa,EAClBjM,EAAQovB,SAAU,EAClB3e,EAAWzQ,QAAQ6Q,QAAQ,IAAIC,IAC/BL,EAAWzQ,QAAQ+Q,QAAQN,EAAWzQ,QAAQgR,gBAM9D68F,EAAajsE,UAAUwjD,WAAa,SAAUh1E,EAAc1f,GACxD,IACIq9E,EADA14D,EAAajF,EAAaxgB,MAAMgb,YAEpC,GAAIyK,GAAcA,EAAWptB,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAImtB,EAAWptB,OAAQC,IACnC6lF,EAAiBv8E,KAAKs8G,kBAAkB19F,EAAa/e,IAAIgkB,EAAWntB,GAAGmJ,IAAIU,KAC3ErB,EAAQ00F,WAAWrX,IAK/B8/B,EAAajsE,UAAUy9D,yBAA2B,SAAUjvF,EAAcmf,EAAW7+B,GACjF,GAAgC,SAA5B0f,EAAaxgB,MAAMvC,KAAiB,CACpC,IAAIgoB,EAAajF,EAAaxgB,MAAMgb,YACpC,GAAIyK,GAAcA,EAAWptB,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIkoB,EAAapQ,QAAQ2D,SAAS,GAAGA,SAAS1b,OAAQC,IAClE,IAAK,IAAIL,EAAI,EAAGA,EAAIwtB,EAAWptB,OAAQJ,IAAK,CACxC,IAAIwrC,EAAejjB,EAAapQ,QAAQ2D,SAAS,GAAGA,SAASzb,GAAGmJ,GAAGkP,MAAM,KAEzE,GADS8yB,EAAaA,EAAaprC,OAAS,KACjCotB,EAAWxtB,GAAGwJ,GAAI,CACzB,IAAI08E,EAAiBv8E,KAAKs8G,kBAAkB19F,EAAa/e,IAAIgkB,EAAWxtB,GAAGwJ,IAAIU,KAC3EgE,EAAYvE,KAAKs8G,kBAAkB19F,EAAa/e,IAAIgkB,EAAWxtB,GAAGwJ,IAAI0E,UAEtElE,GADYiB,GAAiBiD,EAAU0G,YAAa2T,EAAapQ,QAAQhN,OAAQod,EAAapQ,QAAQhN,QAC3F+C,EAAUxD,aACzBV,GACIrJ,EAAGuN,EAAUxD,YAAY/J,EAAI4nB,EAAa7iB,QAAWgiC,EAAiB,QACtE9mC,EAAGsN,EAAUxD,YAAY9J,EAAI2nB,EAAa5iB,QAAW+hC,EAAiB,SAE1E19B,EAAWkF,GAAMM,UAAUxF,EAAUwjB,EAAWxtB,GAAGmB,MAAOqsB,EAAWxtB,GAAGI,QACxEmoB,EAAapQ,QAAQ2D,SAAS,GAAGA,SAASzb,GAAGqF,QACzCwgF,EAAexgF,QAAUsE,EAASrJ,EACtC4nB,EAAapQ,QAAQ2D,SAAS,GAAGA,SAASzb,GAAGsF,QACzCugF,EAAevgF,QAAUqE,EAASpJ,EACtCiI,EAAQ00F,WAAWrX,OAkB3C8/B,EAAajsE,UAAUgwE,wBAA0B,SAAU7/G,GACvD,IAEIk+G,EAFAx2F,EAAQ,EAGRi/B,EAFQ3mD,EAAKnC,MAAM+oD,SAEAD,WAiBvB,YAfiBjtD,KADjBwkH,EAAWv3D,EAAWw3D,OACqB,SAAbD,GAC1Bx2F,SAE6BhuB,IAA5BitD,EAAW43D,eACgB,IAA5B53D,EAAW43D,cACX72F,SAE0BhuB,IAAzBitD,EAAWI,YACa,IAAzBJ,EAAWI,WACXr/B,SAEsBhuB,IAArBitD,EAAW44D,QACS,IAArB54D,EAAW44D,OACX73F,IAEGA,GAGXo0F,EAAajsE,UAAU8tE,kBAAoB,SAAU39G,GACjD,IAAI0nB,EAAQ,EAER61F,EADQv9G,EAAKnC,MAAM+oD,SACN22D,KAUjB,YAR2B7jH,IAAtB6jH,EAAKgB,eACgB,IAAtBhB,EAAKgB,cACL72F,SAEehuB,IAAd6jH,EAAKY,MACQ,SAAdZ,EAAKY,MACLz2F,IAEGA,GAGXo0F,EAAajsE,UAAUsf,SAAW,SAAUnhD,EAAOhO,GAE/CgO,EAAMrO,MAAM6Y,KAAOxY,EAAKL,MAAM6Y,KAC9BxK,EAAMrO,MAAM8Y,YAAczY,EAAKL,MAAM8Y,YACrCzK,EAAMrO,MAAM+Y,YAAc1Y,EAAKL,MAAM+Y,YACrC1K,EAAMrO,MAAM6e,gBAAkBxe,EAAKL,MAAM6e,gBACzCxQ,EAAMrO,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QACjC/tB,EAAMrO,MAAMm9B,SAAW98B,EAAKL,MAAMm9B,SACkB,IAA/C98B,EAAKiT,YAAcK,kBAAgBe,UACpCrG,EAAM04B,OAAS1mC,EAAK0mC,SAO5Bo1E,EAAajsE,UAAUq9D,WAAa,SAAUhY,EAAa13D,EAAWnf,EAAc1f,GAChF,IAAI2jH,EAAWptB,EAAYr3F,UACvByhH,EAAiBjhG,EAAapQ,QAAQ2D,SAAS,GAC/CgjE,EAAcv2D,EAAaxgB,MAAMA,MACjC0kH,OAAoC7oH,IAAtBw7F,EAAYl9F,YAA8C0B,IAAvBw7F,EAAYn9F,OACjE,GAAuB,YAAnBuqH,EAASzkH,OAAuBykH,EAASvF,QACzC1+F,EAAapQ,QAAQ2D,SAAS,GAAKnS,KAAKy8G,oBAAoB79F,QAE3D,GAAuB,eAAnBikG,EAASzkH,OAA0BykH,EAASpF,WACjD7+F,EAAapQ,QAAQ2D,SAAS,GAAKnS,KAAK08G,uBAAuB99F,QAE9D,GAAuB,aAAnBikG,EAASzkH,OAAwBykH,EAAS17D,SAC/CvoC,EAAapQ,QAAQ2D,SAAS,GAAKnS,KAAK48G,qBAAqBh+F,QAE5D,GAAuB,UAAnBikG,EAASzkH,OAAqBykH,EAASx8D,MAAO,CACnD,IAAI64D,EAAa2D,EAASx8D,MAC1BznC,EAAapQ,QAAQ2D,SAAS,GAAKnS,KAAKw8G,kBAAkB59F,EAAcsgG,OAEhD,YAAnB2D,EAASzkH,OAA0C,eAAnBykH,EAASzkH,MAC9CwgB,EAAapQ,QAAQ2D,SAAS,GAAKnS,KAAK28G,cAAc/9F,QAK5B3kB,IAArB4oH,EAASvF,SAA0C,YAAhBnoC,GAA6B2tC,EACrE9iH,KAAK+iH,kBAAkBnkG,EAAc62E,QAERx7F,IAAxB4oH,EAASpF,YAA6C,eAAhBtoC,GAAgC2tC,EAC3E9iH,KAAKgjH,qBAAqBpkG,EAAc62E,EAAa13D,QAE1B9jC,IAAtB4oH,EAAS17D,UAA2C,aAAhBguB,GAA8B2tC,EACvE9iH,KAAKijH,mBAAmBrkG,EAAc62E,EAAa13D,EAAW7+B,SAEtCjF,IAAnB4oH,EAASx8D,OAAwC,UAAhB8uB,GAA2B2tC,IACjE9iH,KAAKkjH,gBAAgBtkG,EAAc62E,EAAa13D,GAEhD03D,EAAYv1F,OACZ87B,GAAYy5D,EAAYv1F,MAAO2/G,aAA0Br9E,GAA0C,aAA7B5jB,EAAaxgB,MAAMA,MACrFyhH,EAAe1tG,SAAS,GAAGA,SAAS,GACpC0tG,EAAe1tG,SAAS,GAAK0tG,IAIzCxD,EAAajsE,UAAU2yE,kBAAoB,SAAUxiH,EAAMk1F,GACvD,IAAIsnB,EAAYx8G,EAAKnC,MACjByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAC3C,GAAI4qG,EAAW,CACX/gF,GAAYz7B,EAAKL,MAAO2/G,EAAe1tG,SAAS,IAChD,IAAIgxG,EAAuBxzE,GAA4BotE,EAAUO,QAAQzhH,MACzEgkH,EAAe1tG,SAAS,GAAG/b,KAAO+sH,OAEZlpH,IAAtBw7F,EAAYl9F,YAA8C0B,IAAvBw7F,EAAYn9F,QAC/C0H,KAAKu9G,sBAAsBh9G,EAAKnC,MAAMk/G,QAASuC,EAAgBpqB,EAAYl9F,OAASgI,EAAKhI,MAAOk9F,EAAYn9F,QAAUiI,EAAKjI,SAInI+jH,EAAajsE,UAAU4yE,qBAAuB,SAAUziH,EAAM+qC,EAAWvN,GACrE,IAAIg/E,EAAYzxE,EAAUltC,MACtByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAC3C,GAAI4qG,EAAW,CACX,IAAIqG,EAAuBvD,EAAe1tG,SAAS,GAC/CkxG,EAAuBxD,EAAe1tG,SAAS,GAMnD,QALwBlY,IAApBqxC,EAAUprC,QACV87B,GAAYsP,EAAUprC,MAAO2/G,EAAe1tG,SAAS,IACrDixG,EAAqBljH,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAChD+mF,EAAqBnjH,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,SAEhDygF,EAAUU,WAAY,CACtB,OAAQV,EAAUU,WAAW5hH,MACzB,IAAK,OACDunH,EAAqBxlF,SAAU,EAC/B,MACJ,IAAK,QACDwlF,EAAqBljH,MAAM6Y,KAAO,QAClC,MACJ,IAAK,SACDqqG,EAAqBljH,MAAM6Y,KAAO,QAGF,SAApCglB,EAAU3/B,MAAMq/G,WAAW5hH,OAC3BunH,EAAqBxlF,SAAU,QAEW3jC,IAA1CqxC,EAAUltC,MAAMq/G,WAAWnnH,aAC3B+sH,EAAqBzlF,QAAUm/E,EAAUU,WAAWnnH,kBAIxC2D,IAApBqxC,EAAU/yC,YAA4C0B,IAArBqxC,EAAUhzC,QAC3C0H,KAAKsjH,0BAA0B/iH,EAAKnC,MAAMq/G,WAAYoC,EAAgBv0E,EAAU/yC,OAASgI,EAAKhI,MAAO+yC,EAAUhzC,QAAUiI,EAAKjI,SAItI+jH,EAAajsE,UAAUmzE,SAAW,SAAUhjH,EAAMw9B,EAAWsoB,EAAOm9D,EAAQzT,EAAQC,GAChF,OAAQ3pD,GACJ,IAAK,QACD0pD,EAAOnyE,SAAU,EACjB4lF,EAAOtjH,MAAM6e,gBAAkB,GAC/BixF,EAAO9vG,MAAM6Y,KAAO,QACpBi3F,EAAO9vG,MAAM8Y,YAAc,QAC3BwqG,EAAOtjH,MAAM6Y,KAAO,QACpB,MACJ,IAAK,uBACDyqG,EAAOtjH,MAAM6e,gBAAkB,MAC/BixF,EAAO9vG,MAAM6Y,KAAO,QACpByqG,EAAOtjH,MAAM6Y,KAAO,QACpBi3F,EAAO9vG,MAAM8Y,YAAc,QAC3B+2F,EAAOnyE,SAAU,EACjB,MACJ,IAAK,eACD4lF,EAAOtjH,MAAM6e,gBAAkB,GAC/BykG,EAAOtjH,MAAM6Y,KAAO,QACpBg3F,EAAO7vG,MAAM6e,gBAAkB,GAC/BykG,EAAOtjH,MAAMm9B,SAAW,KACxB2yE,EAAO9vG,MAAM6Y,KAAO,QACpBi3F,EAAO9vG,MAAM8Y,YAAc,QAC3BhZ,KAAKyjH,sBAAsB1lF,EAAWgyE,GACtC,MACJ,IAAK,8BACDyT,EAAOtjH,MAAM6Y,KAAO,QACpByqG,EAAOtjH,MAAMm9B,SAAW,KACxB2yE,EAAO9vG,MAAM6Y,KAAO,QACpBi3F,EAAO9vG,MAAM8Y,YAAc,QAC3BwqG,EAAOtjH,MAAM6e,gBAAkB,MAC/BgxF,EAAO7vG,MAAM6e,gBAAkB,MAC/B/e,KAAKyjH,sBAAsB1lF,EAAWgyE,GACtC,MACJ,IAAK,uBACL,IAAK,MACDyT,EAAOtjH,MAAM6Y,KAAiB,QAAVstC,EAAkB,QAAU,QAChDm9D,EAAOtjH,MAAM6e,gBAAkB,GAC/BgxF,EAAO7vG,MAAM6e,gBAAkB,GAC/BykG,EAAOtjH,MAAMm9B,SAAW,KACxB2yE,EAAO9vG,MAAM6Y,KAAO,QACpB/Y,KAAKyjH,sBAAsB1lF,EAAWgyE,GACtCC,EAAO9vG,MAAM8Y,YAAczY,EAAKL,MAAM6Y,OAKlDsjG,EAAajsE,UAAUqzE,sBAAwB,SAAU1lF,EAAWgyE,GAC5DhyE,EAAU3/B,MAAM+oD,UAAYppB,EAAU3/B,MAAM+oD,SAASD,YACrDnpB,EAAU3/B,MAAM+oD,SAASD,WAAW04D,aACc3lH,IAAlD8jC,EAAU3/B,MAAM+oD,SAASD,WAAW04D,OAAO,SACa3lH,IAAxD8jC,EAAU3/B,MAAM+oD,SAASD,WAAW04D,OAAO,GAAGv5D,MACc,yBAAxDtoB,EAAU3/B,MAAM+oD,SAASD,WAAW04D,OAAO,GAAGv5D,OACU,UAAxDtoB,EAAU3/B,MAAM+oD,SAASD,WAAW04D,OAAO,GAAGv5D,QAC9C0pD,EAAOnyE,SAAU,QAGU3jC,IAA1B8jC,EAAU3/B,MAAMioD,QACe,yBAAhCtoB,EAAU3/B,MAAMioD,MAAMA,OACU,UAAhCtoB,EAAU3/B,MAAMioD,MAAMA,QACtB0pD,EAAOnyE,SAAU,KAK7By+E,EAAajsE,UAAU8yE,gBAAkB,SAAU3iH,EAAM+qC,EAAWvN,GAChE,IAEIuoB,EAFAy2D,EAAYzxE,EAAUltC,MACtByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAE3C,GAAI4qG,EAAW,CACX,IAGI2G,EAHAC,EAAuB9D,EAAe1tG,SAAS,GAC/CixG,EAAuBvD,EAAe1tG,SAAS,GAC/CkxG,EAAuBxD,EAAe1tG,SAAS,QAE3BlY,IAApBqxC,EAAUprC,QACV87B,GAAYz7B,EAAKL,MAAO2/G,EAAe1tG,SAAS,SAChBlY,IAA5BqxC,EAAUprC,MAAMo8B,cAAyDriC,IAAhCqxC,EAAUprC,MAAM8Y,cACzDoqG,EAAqBljH,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAChD8mF,EAAqBljH,MAAM8Y,YAAczY,EAAKL,MAAM8Y,cAG5D0qG,EAAU3G,EAAU12D,MAAMA,MAC1BC,EAAUy2D,EAAU12D,MAAMC,aACVrsD,IAAZypH,GACA1jH,KAAKujH,SAAShjH,EAAMw9B,EAAW2lF,EAASC,EAAsBP,EAAsBC,QAExEppH,IAAZqsD,GACAtmD,KAAK4jH,uBAAuBrjH,EAAM+qC,QAGlBrxC,IAApBqxC,EAAU/yC,YAA4C0B,IAArBqxC,EAAUhzC,aAAoC2B,IAAZqsD,GACnEtmD,KAAKw/G,qBAAqBj/G,EAAKnC,MAAMioD,MAAOw5D,EAAgBv0E,EAAU/yC,OAASgI,EAAKhI,MAAO+yC,EAAUhzC,QAAUiI,EAAKjI,SAI5H+jH,EAAajsE,UAAUwzE,uBAAyB,SAAUrjH,EAAM+qC,GAC5D,IAAIyxE,EAAYx8G,EAAKnC,MACjByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GACvD0tG,EAAevgF,gBAAiB,GAC5BgM,EAAUprC,YACuBjG,IAAhCqxC,EAAUprC,MAAM8Y,kBAAyD/e,IAA5BqxC,EAAUprC,MAAMo8B,SAC9DN,GAAYz7B,EAAKL,MAAO2/G,GAE5B,IAAIgE,EAAuBp0E,GAA4BstE,EAAU12D,MAAMC,SACvEu5D,EAAezpH,KAAOytH,GAG1BxH,EAAajsE,UAAU6yE,mBAAqB,SAAU1iH,EAAM+qC,EAAWvN,EAAW7+B,GAC9E,IAAI69G,EAAYzxE,EAAUltC,MACtByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GACvC+O,EAAOlhB,KAAKu8G,QAAQh8G,EAAMs/G,EAAe1tG,SAAS,GAAGA,SAAS,IAClE,GAAI4qG,EAAW,CACX,IAAInzD,EAAU7rB,EAAU3/B,MAAM+oD,SAASA,SACnC28D,EAAmBvjH,EAAKnC,MAAM+oD,SAASA,SAC3C,GAAiB,eAAZyC,GAAwC,SAAZA,GAA6C,eAArBk6D,GAA0D,SAArBA,EAIzF,CACD,GAAyB,SAArBA,QAA2D7pH,IAA5B8iH,EAAU51D,SAAS22D,KAAoB,CACtE99G,KAAK+jH,uBAAuBxjH,EAAM+qC,GAClC,IAAI60E,EAAgBngH,KAAKk+G,kBAAkB39G,GACvCvJ,OAAI,EACJmnH,EAA6B,GAAhBgC,EACb/B,EAAOl9F,EAAK3oB,MAAQ,EAAI4lH,EAExBnnH,EADkB,IAAlBmpH,EACI/B,EAAO,EAGPA,EAA6B,GAArB+B,EAAgB,QAEKlmH,IAAjC8iH,EAAU51D,SAAS22D,KAAKY,MACxB1+G,KAAKgkH,2BAA2BzjH,EAAM+qC,EAAWt0C,EAAGmpH,EAAe/B,EAAM,GAGxD,eAArB0F,QAAuE7pH,IAAlC8iH,EAAU51D,SAASD,YACxDlnD,KAAKikH,6BAA6B1jH,EAAM+qC,EAAWvN,EAAW7+B,QArBlEA,EAAQqhB,eAAehgB,GACvBA,EAAKiO,QAAQ2D,SAAS,GAAKnS,KAAK48G,qBAAqBr8G,GAuBzDP,KAAKkkH,uBAAuB3jH,EAAKnC,MAAM+oD,SAAU04D,EAAgBv0E,EAAU/yC,OAAS2oB,EAAK3oB,MAAO+yC,EAAUhzC,QAAU4oB,EAAK5oB,OAAQiI,QAE7GtG,IAApBqxC,EAAU/yC,YAA4C0B,IAArBqxC,EAAUhzC,QAC3C0H,KAAKkkH,uBAAuB3jH,EAAKnC,MAAM+oD,SAAU04D,EAAgBv0E,EAAU/yC,OAAS2oB,EAAK3oB,MAAO+yC,EAAUhzC,QAAU4oB,EAAK5oB,OAAQiI,IAIzI87G,EAAajsE,UAAU2zE,uBAAyB,SAAUxjH,EAAM+qC,GAI5D,IAAK,IAHDyxE,EAAYzxE,EAAUltC,MACtByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GACnD2rG,EAAOf,EAAU51D,SAAS22D,KACrBpnH,EAAI,EAAGA,EAAImpH,EAAe1tG,SAAS1b,OAAQC,IAChD,GAAImpH,EAAe1tG,SAASzb,GAAGmJ,KAAOU,EAAKV,GAAK,qBAAsB,CAClEggH,EAAe1tG,SAAS5L,OAAO7P,EAAG,IAC9BkJ,EAAUouB,SAASC,eAAe1tB,EAAKV,GAAK,uBACxCof,WAAW8f,YAAYn/B,GASvC,GANkB,YAAdk+G,EAAKjiH,MAAoC,SAAdiiH,EAAKjiH,KAChCgkH,EAAe1tG,SAAS,GAAG7Z,OAAS,GAGpCunH,EAAe1tG,SAAS,GAAG7Z,OAAS,QAEtB2B,IAAd6jH,EAAKjiH,KAAoB,CACzB,IAAIsoH,EAAoBt0E,GAAyBiuE,EAAKjiH,MAEtD,GADAgkH,EAAe1tG,SAAS,GAAG/b,KAAO+tH,EAChB,YAAdrG,EAAKjiH,KAAoB,CACzB,IAASnF,EAAI,EAAGA,EAAImpH,EAAe1tG,SAAS1b,OAAQC,IAChD,GAAImpH,EAAe1tG,SAASzb,GAAGmJ,KAAOU,EAAKV,GAAK,eAAgB,CAC5DggH,EAAe1tG,SAAS5L,OAAO7P,EAAG,GAClC,IAAIkJ,GAAAA,EAAUouB,SAASC,eAAe1tB,EAAKV,GAAK,iBACxCof,WAAW8f,YAAYn/B,GAGvC,IAAI0+G,EAAe,IAAIxvG,GACvBwvG,EAAaz+G,GAAKU,EAAKV,GAAK,eAC5By+G,EAAa37G,OAAOC,KAAO,EAC3B07G,EAAa37G,OAAOI,IAAM,EAC1Bu7G,EAAaloH,KAAO+tH,EACpB7F,EAAap+G,MAAM6Y,KAAO,cAC1BulG,EAAap+G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QACxCgiF,EAAa/lH,MAAQ,GACrB+lH,EAAahmH,OAAS,GACtBunH,EAAe1tG,SAAS5L,OAAO,EAAG,EAAG+3G,GACrC,IAAIC,EAAsB,IAAIzvG,GAC9ByvG,EAAoB1+G,GAAKU,EAAKV,GAAK,qBACnC0+G,EAAoBnoH,KAAO+tH,EAC3B5F,EAAoB57G,OAAOC,KAAOi9G,EAAe1tG,SAAS,GAAGxP,OAAOC,KAAO,EAC3E27G,EAAoB57G,OAAOI,IAAM88G,EAAe1tG,SAAS,GAAGxP,OAAOI,IAAM,EACzEw7G,EAAoBr+G,MAAM6Y,KAAO,QACjCwlG,EAAoBr+G,MAAMo8B,QAAU/7B,EAAKL,MAAMo8B,QAC/CujF,EAAe1tG,SAAS5L,OAAO,EAAG,EAAGg4G,SAGRtkH,IAAjC8iH,EAAU51D,SAAS22D,KAAKrnE,QACa,IAAjCsmE,EAAU51D,SAAS22D,KAAKrnE,KACxBopE,EAAe1tG,SAAS,GAAGjS,MAAM+Y,YAAc,EAG/C4mG,EAAe1tG,SAAS,GAAGjS,MAAM+Y,YAAc,QAGVhf,IAAzC8iH,EAAU51D,SAAS22D,KAAKgB,gBACqB,IAAzC/B,EAAU51D,SAAS22D,KAAKgB,aACxBe,EAAe1tG,SAAS,GAAGyrB,SAAU,EAGrCiiF,EAAe1tG,SAAS,GAAGyrB,SAAU,IAKjDy+E,EAAajsE,UAAU4zE,2BAA6B,SAAUzjH,EAAM+qC,EAAWt0C,EAAGmpH,EAAe/B,EAAM3sF,GACnG,IAGIitF,EAEA0F,EALArH,EAAYzxE,EAAUltC,MACtByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GACnDg1C,EAAW41D,EAAU51D,SAErBrkC,EAAQ,EAEZ,QAA4B7oB,IAAxBktD,EAASD,WAA0B,CACnC,IAAIA,EAAaC,EAASD,WAC1BpkC,EAAsC,gBAA7BqkC,EAASD,WAAWrrD,KAA0B,EAAI,EAE3DuoH,EAAoBr0E,GADpB2uE,EAAOx3D,EAAWw3D,MAElBmB,EAAe1tG,SAAS,EAAI2Q,GAAO1sB,KAAOguH,EAC1CvE,EAAe1tG,SAAS,EAAI2Q,GAAO8a,QAAoB,SAAT8gF,YAEvBzkH,IAAlBktD,EAAS22D,WAA6C7jH,IAAvBktD,EAAS22D,KAAKY,OAClD0F,EAAoBr0E,GAAyBoX,EAAS22D,KAAKY,MAC3DmB,EAAe1tG,SAAS,GAAG/b,KAAOguH,EAClCvE,EAAe1tG,SAAS,GAAGyrB,QAAkC,SAAvBupB,EAAS22D,KAAKY,MAExD1+G,KAAKqkH,kBAAkBxE,EAAgBM,EAAe/B,EAAMpnH,EAAGy6B,EAAQ3O,IAG3Eu5F,EAAajsE,UAAUi0E,kBAAoB,SAAUxE,EAAgBM,EAAe/B,EAAMpnH,EAAGy6B,GACzF,GAAsB,IAAlB0uF,EACA,IAAK,IAAIzpH,EAAI+6B,EAAO/6B,EAAImpH,EAAe1tG,SAAS1b,OAAQC,IAC1C,IAANA,IAAkD,IAAvCmpH,EAAe1tG,SAASzb,GAAGknC,UACtCiiF,EAAe1tG,SAASzb,GAAGiM,OAAOC,KAAO5L,EACzCA,EAAIonH,EAAO,OAIlB,CACDpnH,EAAIonH,EAA6B,GAArB+B,EAAgB,GAC5B,IAASzpH,EAAI+6B,EAAO/6B,EAAImpH,EAAe1tG,SAAS1b,OAAQC,IAC1C,IAANA,IAAkD,IAAvCmpH,EAAe1tG,SAASzb,GAAGknC,UACtCiiF,EAAe1tG,SAASzb,GAAGiM,OAAOC,KAAO5L,EACzCA,GAAK,MAMrBqlH,EAAajsE,UAAU6zE,6BAA+B,SAAU1jH,EAAM+qC,EAAWvN,EAAW7+B,GACxF,IAKIlI,EALA+lH,EAAYzxE,EAAUltC,MACtByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GACvC+O,EAAOlhB,KAAKu8G,QAAQh8G,EAAMs/G,EAAe1tG,SAAS,GAAGA,SAAS,IAC9D+0C,EAAa61D,EAAU51D,SAASD,WAChCi5D,EAAgBngH,KAAKogH,wBAAwB7/G,GAE7C49G,EAA6B,GAAhBgC,EACb/B,EAAOl9F,EAAK3oB,MAAQ,EAAI4lH,EAExBnnH,EADkB,IAAlBmpH,EACI/B,EAAO,EAGPA,EAA6B,GAArB+B,EAAgB,GAEhCnkF,GAAYz7B,EAAKL,MAAO2/G,EAAe1tG,SAAS,GAAGA,SAAS,SAClClY,IAAtBitD,EAAW04D,QACX5/G,KAAKskH,0BAA0B/jH,EAAM+qC,EAAWvN,EAAW7+B,QAEtCjF,IAArBitD,EAAW44D,OACX9/G,KAAKukH,0BAA0BhkH,EAAMw9B,EAAWmpB,EAAYlwD,EAAGmpH,EAAe/B,QAEtDnkH,IAAxBitD,EAAWy5D,UACX3gH,KAAKwkH,6BAA6BjkH,EAAM2mD,QAEfjtD,IAAzBitD,EAAWI,WACXtnD,KAAKykH,8BAA8BlkH,EAAMw9B,EAAWmpB,EAAYlwD,EAAGmpH,EAAe/B,EAAMl/G,QAE5DjF,IAA5BitD,EAAW43D,cACX9+G,KAAK0kH,iCAAiCnkH,EAAMw9B,EAAWmpB,EAAYlwD,EAAGmpH,EAAe/B,QAEjEnkH,IAApBitD,EAAWw3D,MACX1+G,KAAK2kH,yBAAyBpkH,EAAMw9B,EAAWmpB,EAAYlwD,EAAGmpH,EAAe/B,QAElDnkH,IAA3BitD,EAAWg1B,aACXl8E,KAAK4kH,gCAAgCrkH,EAAM+qC,EAAWvN,EAAW7+B,IAIzEm9G,EAAajsE,UAAUk0E,0BAA4B,SAAU/jH,EAAM+qC,EAAWvN,EAAW7+B,GAUrF,IAAK,IATD69G,EAAYzxE,EAAUltC,MACtByhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GACvCswG,EAAc5C,EAAe1tG,SAAS,GAItC+0C,GADyB24D,EAAe1tG,SAAS,GAAGA,SAAS1b,OAChDsmH,EAAU51D,SAASD,YAG3BrqD,EAAK,EAAGohB,EAAKC,OAAOC,KAAK+oC,EAAW04D,QAAS/iH,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACxE,IAAIigC,EAAM7e,EAAGphB,GACTgoH,EAAa1sH,OAAO2kC,GACpBgoF,EAAerC,EAAYtwG,SAAS0yG,EAJhC,GAKJE,EAAcxkH,EAAKnC,MAAM+oD,SAASD,WAAW04D,OAAOiF,GACxD7kH,KAAKglH,mBAAmBzkH,EAAM2mD,EAAW04D,OAAOiF,GAAaE,EAAaD,EAAcx5E,EAAWvN,EAAW7+B,KAGtHm9G,EAAajsE,UAAU40E,mBAAqB,SAAUzkH,EAAM0kH,EAAUF,EAAaD,EAAcx5E,EAAWvN,EAAW7+B,GACnH,IAKIgmH,EACA5+D,EANAu5D,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GACvC4qG,EAAYzxE,EAAUltC,MACtBolH,EAASsB,EAAa3yG,SAAS,GAC/B49F,EAAS+U,EAAa3yG,SAAS,GAC/B69F,EAAS8U,EAAa3yG,SAAS,GAgBnC,GAbIm5B,EAAUprC,aAC0BjG,IAAhCqxC,EAAUprC,MAAM8Y,kBAAyD/e,IAA5BqxC,EAAUprC,MAAMo8B,UAC7DujF,EAAe1tG,SAAS,GAAGA,SAAS,GAAGjS,MAAM8Y,YAAcsyB,EAAUprC,MAAM8Y,YAC3E6mG,EAAe1tG,SAAS,GAAGA,SAAS,GAAGjS,MAAMo8B,QAAUgP,EAAUprC,MAAMo8B,eAGzCriC,IAAlC8iH,EAAU51D,SAASD,aACnBg+D,EAAYD,EAAS5+D,MACrBC,EAAU2+D,EAAS3+D,cAELrsD,IAAdirH,GACAllH,KAAKujH,SAASj4E,EAAWvN,EAAWmnF,EAAW1B,EAAQzT,EAAQC,QAEnD/1G,IAAZqsD,EAAuB,CACnBhb,EAAUprC,OACV87B,GAAYsP,EAAUprC,MAAO2/G,EAAe1tG,SAAS,IAEzD,IAAI0xG,EAAuBp0E,GAA4B6W,GACvDw+D,EAAa3yG,SAAS,GAAG/b,KAAOytH,EAqBpC,QAnBwB5pH,IAApBgrH,EAAS3sH,aAA2C2B,IAAnBgrH,EAAS1sH,OAC1CyH,KAAKmlH,aAAaF,EAAUH,QAEZ7qH,IAAhBgrH,EAASplH,KACTilH,EAAajlH,GAAKolH,EAASplH,SAEP5F,IAApBgrH,EAAStiH,SACTmiH,EAAaniH,OAASsiH,EAAStiH,aAEE1I,IAAjCgrH,EAASrrG,sBACTkrG,EAAalrG,oBAAsBqrG,EAASrrG,0BAEb3f,IAA/BgrH,EAAStrG,oBACTmrG,EAAanrG,kBAAoBsrG,EAAStrG,wBAEtB1f,IAApBgrH,EAASh1G,SACT60G,EAAarwE,6BAA6BswE,EAAY90G,OAAOjZ,EAAG+tH,EAAY90G,OAAOhZ,EAAG,YACtF6tH,EAAapwF,aAAe,cAEHz6B,IAAzBgrH,EAAS7rG,YAA2B,CACpC,IAAIA,OAAc,EACdyK,EAAag8F,EAAe1tG,SAAS,GAAGA,SAAS,GACjD2yG,EAAa3yG,SAAS,IAAM2yG,EAAa3yG,SAAS1b,OAAS,IAC3D2iB,EAAc0rG,EAAa3yG,SAAS,GACpCjT,EAAQ4gD,iBAAiBmlE,EAAS7rG,YAAY,GAAIA,EAAayK,IAGvE,QAAuB5pB,IAAnBgrH,EAASlpF,MAAqB,CAC9B,IAAIA,OAAQ,EACR54B,EAAO08G,EAAe1tG,SAAS,GAAGA,SAAS,GAC3C2yG,EAAa3yG,SAAS,IAAM2yG,EAAa3yG,SAAS1b,OAAS,IAC3DslC,EAAQ+oF,EAAa3yG,SAAS,GAC9BjT,EAAQ0uG,WAAWqX,EAASlpF,MAAM,GAAIA,EAAO54B,SAG5BlJ,IAArBgrH,EAASrnF,SACT59B,KAAKuoG,iCAAiCuc,EAAcG,EAASrnF,UAGrEy+E,EAAajsE,UAAUw0E,gCAAkC,SAAUrkH,EAAM+qC,EAAWvN,EAAW7+B,GAC3F,IAEI6lH,EAFA7oC,EAAc5wC,EAAUltC,MAAM+oD,SAASD,WAAWg1B,YAClD4kC,EAAiBvgH,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GAAGA,SAAS,QAEvClY,IAAxBiiF,EAAYC,UACZ4oC,EAAcxkH,EAAKnC,MAAM+oD,SAASD,WAAWg1B,YAAYC,QACzDn8E,KAAKglH,mBAAmBzkH,EAAM27E,EAAYC,QAAS4oC,EAAajE,EAAe3uG,SAAS,GAAIm5B,EAAWvN,EAAW7+B,SAE3FjF,IAAvBiiF,EAAY9W,SACZ2/C,EAAcxkH,EAAKnC,MAAM+oD,SAASD,WAAWg1B,YAAY9W,OACzDplE,KAAKglH,mBAAmBzkH,EAAM27E,EAAY9W,OAAQ2/C,EAAajE,EAAe3uG,SAAS,GAAIm5B,EAAWvN,EAAW7+B,SAEzFjF,IAAxBiiF,EAAYE,UACZ2oC,EAAcxkH,EAAKnC,MAAM+oD,SAASD,WAAWg1B,YAAYE,QACzDp8E,KAAKglH,mBAAmBzkH,EAAM27E,EAAYE,QAAS2oC,EAAajE,EAAe3uG,SAAS,GAAIm5B,EAAWvN,EAAW7+B,IAEtH,IAAK,IAAIrC,EAAK,EAAGohB,EAAK1d,EAAKqlB,SAAU/oB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAI6iF,EAAOzhE,EAAGphB,GACV0H,EAAYrF,EAAQ0c,UAAU8jE,GAClC,OAAQn7E,EAAU0qC,cACd,IAAK,UACGitC,EAAYC,cAA2CliF,IAAhCiiF,EAAYC,QAAQv+C,SAC3C1+B,EAAQ8nB,wBAAwBziB,MAAiB0qC,aAAc,YAEnE,MACJ,IAAK,SACGitC,EAAY9W,aAAyCnrE,IAA/BiiF,EAAY9W,OAAOxnC,SACzC1+B,EAAQ8nB,wBAAwBziB,MAAiB0qC,aAAc,WAEnE,MACJ,IAAK,UACGitC,EAAYE,cAA2CniF,IAAhCiiF,EAAYE,QAAQx+C,SAC3C1+B,EAAQ8nB,wBAAwBziB,MAAiB0qC,aAAc,eAOnFotE,EAAajsE,UAAU+0E,aAAe,SAAUvF,EAAQwF,QAC9BnrH,IAAlB2lH,EAAOtnH,SACP8sH,EAAa9sH,OAASsnH,EAAOtnH,OAC7B8sH,EAAajzG,SAAS,GAAG7Z,OAASsnH,EAAOtnH,OACzC8sH,EAAajzG,SAAS,GAAG7Z,OAAyB,IAAhBsnH,EAAOtnH,OACzC8sH,EAAajzG,SAAS,GAAG7Z,OAAyB,IAAhBsnH,EAAOtnH,aAExB2B,IAAjB2lH,EAAOrnH,QACP6sH,EAAa7sH,MAAQqnH,EAAOrnH,MAC5B6sH,EAAajzG,SAAS,GAAG5Z,MAAQqnH,EAAOrnH,MACxC6sH,EAAajzG,SAAS,GAAG5Z,MAAuB,IAAfqnH,EAAOrnH,MACxC6sH,EAAajzG,SAAS,GAAG5Z,MAAuB,IAAfqnH,EAAOrnH,QAIhD8jH,EAAajsE,UAAUm0E,0BAA4B,SAAUhkH,EAAMw9B,EAAWmpB,EAAYlwD,EAAGmpH,EAAe/B,GAC5F79G,EAAKnC,MAAjB,IACIyhH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GACnD2Q,EAAiD,gBAAxCviB,EAAKnC,MAAM+oD,SAASD,WAAWrrD,KAA0B,EAAI,GACjD,IAArBqrD,EAAW44D,MACXD,EAAe1tG,SAAS,EAAI2Q,GAAO8a,SAAU,EAG7CiiF,EAAe1tG,SAAS,EAAI2Q,GAAO8a,SAAU,EAEjD59B,KAAKqkH,kBAAkBxE,EAAgBM,EAAe/B,EAAMpnH,EAAG,EAAI8rB,IAGvEu5F,EAAajsE,UAAUo0E,6BAA+B,SAAUjkH,EAAM2mD,GACtD3mD,EAAKnC,MAAjB,IACIyhH,EAAkBt/G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GACxC,YAAxB+0C,EAAWy5D,WACXd,EAAe3/G,MAAM+Y,YAAc,EACnC4mG,EAAe3/G,MAAM6e,gBAAkB,OAEf,SAAxBmoC,EAAWy5D,WACXd,EAAe3/G,MAAM+Y,YAAc,EACnC4mG,EAAe3/G,MAAM6e,gBAAkB,OAEf,UAAxBmoC,EAAWy5D,WACXd,EAAe3/G,MAAM+Y,YAAc,EACnC4mG,EAAe3/G,MAAM6e,gBAAkB,QAI/Cs9F,EAAajsE,UAAUmX,wBAA0B,SAAUhnD,EAAMq9B,EAAS1+B,GACtE,GAAIqB,EAAKnC,MAAM+oD,SAASD,WAAWE,WAC5B7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UAAU3wD,OAAS,EAErD,IAAK,IADD2wD,EAAY7mD,EAAKnC,MAAM+oD,SAASD,WAAWE,UACtC/wD,EAAI+wD,EAAU3wD,OAAS,EAAGJ,GAAK,EAAGA,IAAK,CAC5C,IAAIgvH,EAAcnmH,EAAQ0c,UAAUwrC,EAAU/wD,IAC9CgvH,EAAYznF,QAAUA,EACtB1+B,EAAQqoD,wBAAwB89D,EAAY72G,QAAS62G,EAAaznF,GAC9DA,IACgC,UAA5BynF,EAAYjnH,MAAMA,OAClB4B,KAAKy/G,mBAAmB4F,EAAaA,EAAY72G,QAAQ2D,SAAS,GAAGA,UAE7B,eAAxCkzG,EAAYjnH,MAAM+oD,SAASA,UAC3BnnD,KAAK0/G,wBAAwB2F,IAIrC,IAAK,IADD1mG,EAAa0mG,EAAY1/F,QAAQE,OAAOw/F,EAAYz/F,UAC/ClvB,EAAIioB,EAAWloB,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC7C,IAAI6N,EAAYrF,EAAQ0c,UAAU+C,EAAWjoB,IAC7C6N,EAAUq5B,QAAUA,EACpB1+B,EAAQqoD,wBAAwBhjD,EAAUiK,QAASjK,EAAWq5B,IAItEA,IACyB,UAArBr9B,EAAKnC,MAAMA,OACX4B,KAAKy/G,mBAAmBl/G,EAAMA,EAAKiO,QAAQ2D,SAAS,GAAGA,UAEtB,eAAjC5R,EAAKnC,MAAM+oD,SAASA,UACpBnnD,KAAK0/G,wBAAwBn/G,GAEI,SAAjCA,EAAKnC,MAAM+oD,SAASA,UACC,aAArB5mD,EAAKnC,MAAMA,OAAgE,SAAxCmC,EAAKnC,MAAM+oD,SAASD,WAAWw3D,OAClEn+G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGyrB,SAAU,KAKvEy+E,EAAajsE,UAAUq0E,8BAAgC,SAAUlkH,EAAMw9B,EAAWmpB,EAAYlwD,EAAGmpH,EAAe/B,EAAMl/G,GAClH,IAAIygH,EAAcp/G,EAAKnC,MAAM+oD,SAASD,WAAW04D,OAAOnpH,OACpDopH,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GACnD2Q,EAAiD,gBAAxCviB,EAAKnC,MAAM+oD,SAASD,WAAWrrD,KAA0B,EAAI,GAC7C,IAAzBqrD,EAAWI,WACXtnD,KAAKunD,wBAAwBhnD,GAAM,EAAMrB,GACzC2gH,EAAe1tG,SAAS2Q,EAAQ68F,GAAa/hF,SAAU,IAGvD59B,KAAKunD,wBAAwBhnD,GAAM,EAAOrB,GAC1C2gH,EAAe1tG,SAAS2Q,EAAQ68F,GAAa/hF,SAAU,GAE3D59B,KAAKqkH,kBAAkBxE,EAAgBM,EAAe/B,EAAMpnH,EAAG,EAAI2oH,IAGvEtD,EAAajsE,UAAUs0E,iCAAmC,SAAUnkH,EAAMw9B,EAAWmpB,EAAYlwD,EAAGmpH,EAAe/B,GAC/G,IAAIyB,EAAiBt/G,EAAKiO,QAAQ2D,SAAS,GAAGA,SAAS,GACnD2Q,EAAiD,gBAAxCviB,EAAKnC,MAAM+oD,SAASD,WAAWrrD,KAA0B,EAAI,GAC1C,IAA5BqrD,EAAW43D,aACXe,EAAe1tG,SAAS,EAAI2Q,GAAO8a,SAAU,EAG7CiiF,EAAe1tG,SAAS,EAAI2Q,GAAO8a,SAAU,EAEjD59B,KAAKqkH,kBAAkBxE,EAAgBM,EAAe/B,EAAMpnH,EAAG,EAAI8rB,IAGvEu5F,EAAajsE,UAAUu0E,yBAA2B,SAAUpkH,EAAMw9B,EAAWmpB,EAAYlwD,EAAGmpH,EAAe/B,GACvGp+G,KAAKgkH,2BAA2BzjH,EAAMA,EAAMvJ,EAAGmpH,EAAe/B,EAAM,IAGxE/B,EAAajsE,UAAU+9D,oBAAsB,SAAUvvF,EAAcmf,EAAWk+C,EAAY/8E,GACxF,IAAIomH,EAAWrpC,EAAW79E,MAU1B,YAT0BnE,IAAtBqrH,EAASvgC,WACTnmE,EAAe5e,KAAKulH,YAAY3mG,EAAcmf,EAAWk+C,EAAY/8E,SAE5CjF,IAAzBqrH,EAASE,cACT5mG,EAAe5e,KAAKylH,eAAe7mG,EAAcmf,EAAWk+C,EAAY/8E,SAEnDjF,IAArBqrH,EAASI,UACT9mG,EAAe5e,KAAK2lH,WAAW/mG,EAAcmf,EAAWk+C,EAAY/8E,IAEjE0f,GAGXy9F,EAAajsE,UAAUm1E,YAAc,SAAU3mG,EAAcmf,EAAWk+C,EAAY/8E,GAQhF,GAPoC,WAA/B+8E,EAAW79E,MAAc,WAC1Bc,EAAQ8nB,wBAAwBpI,EAAcmf,GAC1CliC,KAAM,WACNyW,iBAAmBlU,MAAO,QAAS8B,OAAS6Y,KAAM,YAEtD6F,EAAapQ,QAAQ2D,SAAS,GAAGyrB,SAAU,GAEX,YAA/Bq+C,EAAW79E,MAAc,SAAiB,CAC3Cc,EAAQ8nB,wBAAwBpI,EAAcmf,GAC1CliC,KAAM,WACNyW,iBAAmBlU,MAAO,QAAS8B,OAAS6Y,KAAM,UAClD3G,iBAAmBhU,MAAO,UAE9B,IAAI9D,EAAU,IAAIwU,GAEd2+C,GADU,IAAI3+C,QACA,GAClBxU,EAAUskB,EAAa4+B,kBAAkB5+B,EAActkB,GAEvD,IAAK,IADD2jD,EAAcr/B,EAAayT,mBACtBh8B,EAAI,EAAGA,EAAI4nD,EAAYxnD,OAAS,EAAGJ,IACxCI,QAAkBmoB,EAAalZ,SAASu4C,EAAY5nD,GAAI4nD,EAAY5nD,EAAI,IACxEo3D,EAAc7uC,EAAa8gC,SAASzB,EAAY5nD,GAAI4nD,EAAY5nD,EAAI,IAExEuoB,EAAapQ,QAAQ2D,SAAS,GAAG/b,KAAOq3D,EAAY,GACpD7uC,EAAapQ,QAAQ2D,SAAS,GAAGtS,GAAK+e,EAAa/e,GAAK,IAAOo8E,EAAW79E,MAAc,SACxFwgB,EAAapQ,QAAQ2D,SAAS,GAAGpW,QAAU0xD,EAAY,GAAGz2D,EAC1D4nB,EAAapQ,QAAQ2D,SAAS,GAAGnW,QAAUyxD,EAAY,GAAGx2D,EAC1D2nB,EAAapQ,QAAQ2D,SAAS,GAAGjF,YAAc,GAC/C0R,EAAapQ,QAAQ2D,SAAS,GAAGtM,UAAYmtC,YAAUc,KAU3D,MARoC,gBAA/BmoC,EAAW79E,MAAc,WAC1Bc,EAAQ8nB,wBAAwBpI,EAAcmf,GAC1CliC,KAAM,WACNyW,iBAAmBlU,MAAO,QAAS8B,OAAS6Y,KAAM,UAClD3G,iBAAmBhU,MAAO,UAAW7F,MAAO,GAAID,OAAQ,GAAI4H,OAAS6Y,KAAM,YAE/E6F,EAAapQ,QAAQ2D,SAAS,GAAGyrB,SAAU,GAExChf,GAGXy9F,EAAajsE,UAAUq1E,eAAiB,SAAU7mG,EAAcmf,EAAWk+C,EAAY/8E,GAsBnF,MArBuC,YAAlC+8E,EAAW79E,MAAiB,aAC7Bc,EAAQ8nB,wBAAwBpI,EAAcmf,GAC1CliC,KAAM,WAAYqE,OAAS6e,gBAAiB,QAC5CzM,iBAAmBlU,MAAO,QAAS8B,OAAS6Y,KAAM,UAClD3G,iBAAmBhU,MAAO,UAGK,gBAAlC69E,EAAW79E,MAAiB,aAC7Bc,EAAQ8nB,wBAAwBpI,EAAcmf,GAC1CliC,KAAM,WAAYqE,OAAS6e,gBAAiB,OAC5CzM,iBAAmBlU,MAAO,QAAS8B,OAAS6Y,KAAM,UAClD3G,iBAAmBhU,MAAO,UAGK,kBAAlC69E,EAAW79E,MAAiB,aAC7Bc,EAAQ8nB,wBAAwBpI,EAAcmf,GAC1CliC,KAAM,WAAYqE,OAAS6e,gBAAiB,OAC5CzM,iBAAmBlU,MAAO,QAAS8B,OAAS6Y,KAAM,UAClD3G,iBAAmBhU,MAAO,QAAS7F,MAAO,EAAGD,OAAQ,GAAI4H,OAAS6Y,KAAM,YAGzE6F,GAGXy9F,EAAajsE,UAAUu1E,WAAa,SAAU/mG,EAAcmf,EAAWk+C,EAAY/8E,GAC/E,IACI1H,EACAoE,EACJ,GAAkC,YAA7BmiC,EAAU3/B,MAAa,SACxB,QAAmCnE,IAA9BgiF,EAAW79E,MAAa,QAAiB,CAC1C,GAAoC,sBAA9B69E,EAAW79E,MAAa,SACM,yBAA9B69E,EAAW79E,MAAa,QAA+B,CACzD,IAAI9D,EAAU,IAAIwU,GAClBxU,EAAUskB,EAAa4+B,kBAAkB5+B,EAActkB,GAEvD,IAAK,IADD2jD,EAAcr/B,EAAayT,mBACtBh8B,EAAI,EAAGA,EAAI4nD,EAAYxnD,OAAS,EAAGJ,IAAK,CAC7CI,QAAkBmoB,EAAalZ,SAASu4C,EAAY5nD,GAAI4nD,EAAY5nD,EAAI,IACxE,IAAIuvH,EAZA,GAYYnvH,OACZA,QAAUmvH,IACVpuH,EAAQqW,GAAUowC,EAAY5nD,GAAI4nD,EAAY5nD,EAAI,IAClDuF,EAAK2J,GAAMM,UAAUo4C,EAAY5nD,GAAImB,EAAOouH,KAIxDhnG,EAAapQ,QAAQ2D,SAAS,GAAGtS,GAAK+e,EAAa/e,GAAK,IAAOo8E,EAAW79E,MAAa,QACvFwgB,EAAapQ,QAAQ2D,SAAS,GAAG5Z,MAAQ,GACzCqmB,EAAapQ,QAAQ2D,SAAS,GAAG7Z,OAAS,GAC1CsmB,EAAapQ,QAAQ2D,SAAS,GAAG/b,KAAO,yDACxCwoB,EAAapQ,QAAQ2D,SAAS,GAAGyH,oBAAsB,SACvDgF,EAAapQ,QAAQ2D,SAAS,GAAGwH,kBAAoB,SACrDiF,EAAapQ,QAAQ2D,SAAS,GAAGtM,UAAYmtC,YAAUc,KACvDl1B,EAAapQ,QAAQ2D,SAAS,GAAGjS,MAAM6Y,KAAsC,yBAA9BkjE,EAAW79E,MAAa,QACnE,YAAc,QAClBwgB,EAAapQ,QAAQ2D,SAAS,GAAGpW,QAAUH,EAAG5E,EAC9C4nB,EAAapQ,QAAQ2D,SAAS,GAAGnW,QAAUJ,EAAG3E,OAGf,yBAA7B8mC,EAAU3/B,MAAa,SACC,sBAA7B2/B,EAAU3/B,MAAa,UACW,YAA9B69E,EAAW79E,MAAa,QACzBwgB,EAAapQ,QAAQ2D,SAAS,GAAGjS,MAAM6Y,KAAsC,yBAA9BkjE,EAAW79E,MAAa,QACnE,YAAc,QAGlBwgB,EAAapQ,QAAQ2D,SAAS,GAAGyrB,SAAU,GAGnD,OAAOhf,GAIXy9F,EAAajsE,UAAUovE,qBAAuB,SAAUn5D,EAAO73C,EAASjW,EAAOD,GAC3EkW,EAAQ2D,SAAS,GAAG5Z,MAAQA,EAC5BiW,EAAQ2D,SAAS,GAAG7Z,OAASA,EAE7B,IAAIutH,EAAYr3G,EAAQ2D,SAAS,GACjC0zG,EAAUttH,MAAgB,IAARA,EAClBstH,EAAUvtH,OAAkB,IAATA,EACnB,IAAIgnH,EAAc9wG,EAAQ2D,SAAS,GACb,YAAlBk0C,EAAMC,SACNg5D,EAAY/mH,MAAgB,IAARA,EACpB+mH,EAAYhnH,OAAkB,GAATA,IAGrBgnH,EAAY/mH,MAAgB,GAARA,EACpB+mH,EAAYhnH,OAAkB,GAATA,IAI7B+jH,EAAajsE,UAAUkrD,qBAAuB,SAAU/6F,EAAMrB,EAAS4iD,EAAIC,GACvE,IAAIk+B,EAAkB1/E,EAAKV,GAAGkP,MAAM,KACpC,GAA2B,mBAAvBkxE,EAAgB,GAEhB,IAAK,IADDhhE,OAAa,EACR5oB,EAAI,EAAGA,EAAIkK,EAAKolB,QAAQlvB,OAAQJ,IAAK,CAC1C,IAAIkO,EAAYrF,EAAQ0c,UAAUrb,EAAKolB,QAAQtvB,IAC3CkO,IACA0a,EAAa/f,EAAQ0c,UAAUrX,EAAU9C,WAE7C,IAAIgwB,GAAUz6B,EAAGuJ,EAAKxE,QAAU+lD,EAAI7qD,EAAGsJ,EAAKvE,QAAU+lD,GAClDrwB,EAAMntB,EAAUxD,YAChBsK,EAAW9F,GAAM0I,WAAWwjB,EAAOC,GACnCl6B,EAAQ+N,GAAMsI,UAAU6jB,EAAKD,GACjC,GAAIxS,EAAW7gB,MAAMgb,YACjB,IAAK,IAAIpiB,EAAI,EAAGA,EAAKioB,EAAW7gB,MAAiB,YAAE3H,OAAQO,IACvD,GAAKioB,EAAW7gB,MAAiB,YAAEpH,GAAG6I,KAAOogF,EAAgBA,EAAgBxpF,OAAS,GAIlF,OAHCwoB,EAAW7gB,MAAMgb,YAAYpiB,GAAIP,OAAS4U,EAC1C4T,EAAW7gB,MAAMgb,YAAYpiB,GAAIQ,MAAQA,EAC1CwI,KAAKiiH,kBAAkBhjG,EAAWzQ,QAAQhN,OAAQjB,EAAKiO,QAASijB,EAAOlxB,IAChE,EAM3B,QAAIA,EAAKkmD,YACLzmD,KAAK0c,KAAKnc,EAAMuhD,EAAIC,EAAI7iD,IACjB,IAIfm9G,EAAajsE,UAAUuyE,uBAAyB,SAAUhnH,EAAO6F,GAC7D,IACI0L,EAAc,EAClB,OAFgB5L,GAAiB3F,EAAO6F,EAAQA,IAG5C,IAAK,QACD0L,EAAc,EACd,MACJ,IAAK,OACDA,EAAc,IACd,MACJ,IAAK,SACDA,EAAc,GACd,MACJ,IAAK,MACDA,EAAc,IAGtB,OAAOA,GAEXmvG,EAAajsE,UAAUmtE,sBAAwB,SAAUl3D,EAAO73C,EAASjW,EAAOD,GAC5EkW,EAAQ2D,SAAS,GAAG5Z,MAAQA,EAC5BiW,EAAQ2D,SAAS,GAAG7Z,OAASA,EAC7BkW,EAAQ2D,SAAS,GAAG5Z,MAAgB,IAARA,EAC5BiW,EAAQ2D,SAAS,GAAG7Z,OAAkB,IAATA,GAEjC+jH,EAAajsE,UAAUkzE,0BAA4B,SAAUj9D,EAAO73C,EAASjW,EAAOD,GAChFkW,EAAQ2D,SAAS,GAAG5Z,MAAQA,EAC5BiW,EAAQ2D,SAAS,GAAG7Z,OAASA,GAEjC+jH,EAAajsE,UAAU8zE,uBAAyB,SAAU/8D,EAAU34C,EAASjW,EAAOD,EAAQiI,GAExFiO,EAAQ2D,SAAS,GAAG5Z,MAAQA,EAC5BiW,EAAQ2D,SAAS,GAAG7Z,OAASA,EAC7BkW,EAAQ2D,SAAS,GAAGA,SAAS,GAAG5Z,MAAQA,EACxCiW,EAAQ2D,SAAS,GAAGA,SAAS,GAAG7Z,OAASA,EACR,gBAA7B6uD,EAASD,WAAWrrD,OACpB2S,EAAQ2D,SAAS,GAAGA,SAAS,GAAG5Z,MAAQkE,KAAKmJ,IAAIrN,EAAQ,EAAG,GAC5DiW,EAAQ2D,SAAS,GAAGA,SAAS,GAAG7Z,OAASmE,KAAKmJ,IAAItN,EAAS,EAAG,GAC9DkW,EAAQ2D,SAAS,GAAGA,SAAS,GAAG5Z,MAAQA,EACxCiW,EAAQ2D,SAAS,GAAGA,SAAS,GAAG7Z,OAASA,GAE7C,IACItB,EAEAinH,EAHAD,EAAW,IAAI55F,GAEflD,EAAOlhB,KAAKu8G,QAAQh8G,EAAMy9G,GAS1BG,EAA0B,IAL1BF,EADsB,SAAtB92D,EAASA,SACInnD,KAAKk+G,kBAAkB39G,GAGvBP,KAAKogH,wBAAwB7/G,IAG1C69G,GAAQ7lH,GAAS2oB,EAAK3oB,OAAS,EAE/BvB,EADe,IAAfinH,EACIG,EAAO,EAGPA,EAAQD,EAAa,EAbb,GAaoBF,EAAa,GAAkB,EAEnE,IAAK,IAAIvnH,EAAI,EAAGA,EAAI8X,EAAQ2D,SAAS,GAAGA,SAAS1b,OAAQC,IACjD8X,EAAQ2D,SAAS,GAAGA,SAASzb,GAAGknC,UAC/BpvB,EAAQ2D,SAAS,GAAGA,SAASzb,GAAGmJ,GAAGygB,QAAQ,UAAY,GACpD9R,EAAQ2D,SAAS,GAAGA,SAASzb,GAAGmJ,GAAGygB,QAAQ,oBAAsB,GACjE9R,EAAQ2D,SAAS,GAAGA,SAASzb,GAAGmJ,GAAGygB,QAAQ,aAAe,GAC1D9R,EAAQ2D,SAAS,GAAGA,SAASzb,GAAGmJ,GAAGygB,QAAQ,iBAAmB,KAClE9R,EAAQ2D,SAAS,GAAGA,SAASzb,GAAGiM,OAAOC,KAAO5L,EAC9CA,GAAKwX,EAAQ2D,SAAS,GAAGA,SAASzb,GAAG6V,WAAWhU,MAtBxC,IA0BpB8jH,EAAajsE,UAAUm4D,iCAAmC,SAAU3oG,EAASg+B,GACzE,GAAIh+B,aAAmB4iC,GACnB,IAAK,IAAI9rC,EAAI,EAAGA,EAAIkJ,EAAQuS,SAAS1b,OAAQC,IACzCsJ,KAAKuoG,iCAAiC3oG,EAAQuS,SAASzb,GAAIknC,GAGnEh+B,EAAQg+B,QAAUA,GAOtBy+E,EAAajsE,UAAUkZ,QAAU,aAQjC+yD,EAAajsE,UAAUiZ,cAAgB,WAInC,MAAO,QAEJgzD,KAkBP7sE,IACA+hE,MAAS,sKAETuU,QAAW,+CACXjmD,WAAc,sVAIdkmD,WAAc,mHAEdxF,eAAkB,4OAIlB7wE,IAEAo2E,QAAW,yDACXE,MAAS,4qBAOTC,MAAS,iHACTC,WAAc,oFACdC,OAAU,0HACVC,aAAgB,iFAChBC,YAAe,qGACfC,KAAQ,yFACRC,OAAU,oCACVC,UAAa,4GACbC,SAAY,2FACZC,SAAY,8IAGZ92E,IACA16B,KAAQ,GAERyxG,UAAa,2KAGbC,UAAa,sSAIbF,SAAY,wHAEZnuE,QAAW,iVAIXsuE,WAAc,qZAKdC,oBAAuB,6HAGvBC,mBAAsB,mMAGtBj3E,IACA56B,KAAQ,GACR8xG,QAAW,yvBAOXC,QAAW,gLAEXC,KAAQ,gJAERC,qBAAwB,6eAKxBC,OAAU,g5FA2BVC,aAAgB,+XAIhBC,KAAQ,osDAeRC,OAAU,0zBAQVv3E,IACA96B,KAAQ,GACRsyG,SAAY,2fAKZC,sBAAyB,iJAEzBC,sBAAyB,0O+Cl9EzBC,GAAmC,WAKnC,SAASA,KA8YT,OA1YAA,EAAkBv3E,UAAUwlD,eAAiB,SAAUnwE,EAAMvmB,GACzD,IACIsC,EADAomH,KAGJ,GADAniG,EAAK43B,WzDiDb,SAA0B94C,EAAWrF,GAWjC,OATIqF,EAAUiP,YAAcI,uBAAqBi0G,SACrCtjH,EAAUiP,YAAcI,uBAAqBi0G,SAEhDtjH,EAAUiP,YAAcI,uBAAqBk0G,gBAC1C5oH,EAAQsU,YAAc4C,qBAAmByxG,SAGzC,EyDzDJE,CAAUtiG,EAAMvmB,GAAU,CAE1B,IAAI8oH,EAAUhoH,KAAK6M,UAAU4Y,GAC7BjkB,EAAS8K,GAAKmmB,SAASu1F,GAKvB,IAAK,IAJDC,EAAgBxiG,EAAKyiG,YACrBC,EAASjpH,EAAQ47B,gBACjB7S,GAAS,EACTwpE,EAAQvyF,EAAQyf,WACXypG,EAAI,EAAGA,EAAI32B,EAAMh7F,OAAQ2xH,IAAK,CACnC,IAAIC,EAAa52B,EAAM22B,GACvB,GAAI3iG,GAAQ4iG,GAAc5iG,EAAK5lB,KAAOwoH,EAAWxoH,GAAI,CACjD,IAAIyoH,EAAUtoH,KAAK6M,UAAUw7G,GACzBljF,EAAU74B,GAAKmmB,SAAS61F,GAC5B,GAAItoH,KAAKuoH,eAAe/mH,EAAQ2jC,GAAU,CACtC,IAAIqjF,EAAexoH,KAAKoP,UAAU44G,EAASM,GAAS,EAAOH,GAAQ,GACnE,GAAIK,EAAa/xH,OAAS,EACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI8xH,EAAa/xH,OAAQC,IAAK,CAC1C,IACI2U,EAAW,EACXihE,EAAe,EACfrrB,EAAa,EACb1mD,EAAMyF,KAAKyoH,yBAAyBhjG,EAAM+iG,EAAa9xH,IAC3D,IAAwB,IAApB6D,EAAI0mD,WAAmB,CACvB51C,EAAW9Q,EAAImuH,oBACFnuH,EAAIouH,WACjBr8C,EAAe/xE,EAAI+xE,aACnBrrB,EAAa1mD,EAAI0mD,WACjB,IAAI2nE,EAAW5oH,KAAKm3C,iBAAkB9rC,EAAY48G,EAAgB,EAAKD,GACnEa,EAAW7oH,KAAKm3C,iBAAkB9rC,EAAY48G,EAAgB,EAAKD,GAGnEhoH,KAAKwF,aAAaqjH,KAClBA,EAAWD,GAEf,IAAIn3F,OAAQ,EACRC,OAAM,EACVD,EAAQhM,EAAK1kB,YAET2wB,EADc,aAAdjM,EAAK5pB,KACC4pB,EAAKxa,YAGLwa,EAAK4M,mBAAmB4uB,GAElC,IAAIzpD,EAAQwI,KAAK8oH,iBAAiBr3F,EAAOC,GACzC,GAAIk2F,EAAWnxH,OAAQ,CACnB,IAAIyT,OAAa,EACjBA,EAAaub,EAAK1kB,YAClB,IAAIgoH,EAAMtsH,KAAK6G,IAAItD,KAAKgpH,kBAAkB9+G,EAAY2+G,IAClDI,EAAO,EACPC,GAAY,EAChBjhG,GAAS,EACT,IAAK,IAAIzE,EAAI,EAAGA,EAAIokG,EAAWt7C,GAAcjvB,QAAQ5mD,OAAQ+sB,IAAK,CAC9DyE,IACA,IAAIkhG,EAASvB,EAAWt7C,GAAcjvB,QAAQ75B,GAE9C,GADAylG,EAAOxsH,KAAK6G,IAAItD,KAAKgpH,kBAAkB9+G,EAAYi/G,EAAOx9G,WACtDo9G,EAAME,EAAM,CACZC,EAAWjhG,EACX,OAGR,GAAIihG,GAAY,EAAG,CACf,IAAIE,OAAQ,GACZA,EAAQppH,KAAKqpH,cAAcT,EAAUC,EAAUrxH,EAAO2wH,EAAQlnE,EAAYx7B,EAAMvmB,IAC1E8D,OAASqlH,EAAWxoH,GAC1B+nH,EAAWt7C,GAAcjvB,QAAQ92C,OAAO2iH,EAAU,EAAGE,GACrDxB,EAAWt7C,GAAcjvB,QAAQisE,OACjC1B,EAAWt7C,GAAci9C,iBAAiBhjH,OAAO2iH,EAAU,EAAGN,GAC9DhB,EAAWt7C,GAAci9C,iBAAiBD,OAC1C1B,EAAWt7C,GAAcA,aAAeA,MAEvC,CACG88C,OAAQ,GACZA,EAAQppH,KAAKqpH,cAAcT,EAAUC,EAAUrxH,EAAO2wH,EAAQlnE,EAAYx7B,EAAMvmB,IAC1E8D,OAASqlH,EAAWxoH,GAC1B+nH,EAAWt7C,GAAcjvB,QAAQvmD,KAAKsyH,GACtCxB,EAAWt7C,GAAci9C,iBAAiBzyH,KAAK8xH,GAC/ChB,EAAWt7C,GAAcA,aAAeA,QAI5C,IAAKn9D,MAAMy5G,EAAS5xH,KAAOmY,MAAMy5G,EAAS3xH,KAAO+I,KAAKwF,aAAaqjH,GAAW,CAC1E,IAAIW,OAAO,EAIPC,GACApsE,WAAeksE,oBAAyBj9C,aAAcA,IAF1Dk9C,EAAOxpH,KAAKqpH,cAAcT,EAAUC,EAAUrxH,EAAO2wH,EAAQlnE,EAAYx7B,EAAMvmB,IAI1E8D,OAASqlH,EAAWxoH,GACzB,IAAI6pH,KAEJA,EAAS5yH,KAAK8xH,MACL9xH,KAAK+xH,GACdjB,EAAWt7C,GAAgBm9C,EAC3B7B,EAAWt7C,GAAcjvB,QAAQvmD,KAAK0yH,GACtC5B,EAAWt7C,GAAci9C,iBAAmBG,EAC5C9B,EAAWt7C,GAAcA,aAAeA,OAS9C,IAAtBs7C,EAAWnxH,QACXuJ,KAAK2pH,YAAY/B,EAAYniG,EAAMwiG,KAK/CN,EAAkBv3E,UAAUu5E,YAAc,SAAUC,EAAYrlH,EAAW0jH,GACvE,IAAK,IAAIvxH,EAAI,EAAGA,EAAIkzH,EAAWnzH,OAAQC,IAAK,CAExC,IAAK,IADDyqD,EAASyoE,EAAWlzH,GACf8sB,EAAI,EAAGA,EAAI29B,EAAO9D,QAAQ5mD,OAAQ+sB,IACvC,GAAIje,GAAM0I,WAAWkzC,EAAO9D,QAAQ75B,GAAG7X,SAAUw1C,EAAO9D,QAAQ75B,EAAI,GAAG7X,UAAYs8G,EAAe,CAC9F9mE,EAAO9D,QAAQ75B,EAAI,GAAG7X,SAAWw1C,EAAO9D,QAAQ75B,GAAG7X,SACnD,IAAIk+G,EAAY1oE,EAAO9D,QAAQ75B,EAAI,GAC/BiuC,EAAMzxD,KAAK8pH,oBAAoBD,EAAUj3G,WAAYi3G,EAAUl+G,SAAUk+G,EAAUryH,MAAOywH,EAAe4B,EAAUnyH,OACvHypD,EAAO9D,QAAQ75B,EAAI,GAAG9qB,KAAO+4D,EAC7BtQ,EAAO9D,QAAQ92C,OAAOid,EAAG,GACzB29B,EAAOooE,iBAAiBhjH,OAAOid,EAAG,GAClCA,IAGEjf,EAAUxD,YACpB,IAAK,IAAI1K,EAAI,EAAGA,EAAI8qD,EAAO9D,QAAQ5mD,OAAQJ,IAAK,EACxCwzH,EAAY1oE,EAAO9D,QAAQhnD,IAEfsV,SAChBpH,EAAU84C,QAAQvmD,KAAK+yH,MAKnClC,EAAkBv3E,UAAUi5E,cAAgB,SAAU7nE,EAAI9vB,EAAKl6B,EAAOiL,EAAWqgB,EAAO2C,EAAMvmB,GAC1F,IAAIuyD,EACA/5D,EACAgB,GACAlB,MAAO,EAAGmU,UAAY3U,EAAG,EAAGC,EAAG,GAAK+L,OAAQ,GAAItK,KAAM,GACtD2oD,mBAAoB,EAAGzuC,YAAc5b,EAAG,EAAGC,EAAG,GAAKS,MAAO,EAAG0pD,UAAU,GAU3E,OARA1pD,EAAQsI,KAAK+pH,eAAevyH,EAAOiL,EAAWgjB,EAAMvmB,GACpDuyD,EAAMzxD,KAAK8pH,oBAAoBtoE,EAAI9vB,EAAKl6B,EAAOiuB,EAAKyiG,YAAaxwH,GACjEgB,EAAKA,KAAO+4D,EACZ/4D,EAAKka,WAAa4uC,EAClB9oD,EAAKiT,SAAW+lB,EAChBh5B,EAAKlB,MAAQA,EACbkB,EAAK2oD,kBAAoBv+B,EACzBpqB,EAAKhB,MAAQA,EACNgB,GAGXivH,EAAkBv3E,UAAU05E,oBAAsB,SAAUE,EAASC,EAAOzyH,EAAO0wH,EAAaxwH,GAE5F,MADW,KAAOwwH,EAAc,EAAI,IAAMA,EAAc,EAAI,IAAM1wH,EAAQ,QAAUE,EAAQ,IAAMuyH,EAAMjzH,EAAI,IAAMizH,EAAMhzH,GAI5H0wH,EAAkBv3E,UAAU25E,eAAiB,SAAUvyH,EAAOsjC,EAAiBv2B,EAAWrF,GACtF,IACIxH,EADAwyH,EAASztH,KAAK6G,IAAI9L,GAEtB,OAAQsjC,GACJ,IAAK,MACL,IAAK,SACDpjC,EAAQ,EACJwyH,GAAU,GAAKA,GAAU,KACzBxyH,EAAQ,GAEZ,MACJ,IAAK,OACL,IAAK,QACDA,EAAQ,EACJF,EAAQ,GAAKA,IAAU,MACvBE,EAAQ,GAYpB,MARwB,UAApBojC,GAAmD,WAApBA,IAE3BpjC,EADU,IAAVA,EACQ,EAGA,GAGTA,GAGXiwH,EAAkBv3E,UAAU+G,iBAAmB,SAAU1gD,EAAQuQ,GAI7D,IAAK,IAFD2hF,EADAx+B,EAAM,EAENy+B,GAAU5xF,EAAG,EAAGC,EAAG,GACdP,EAAI,EAAGA,EAAIsQ,EAAIvQ,OAAQC,IAAK,CACjC,IAAIkF,EAAKoL,EAAItQ,GACb,GAAKiyF,EAAL,CAKI,IAAIvtF,EAAI4E,KAAKgpH,kBAAkBrgC,EAAK/sF,GACpC,GAAIuuD,EAAM/uD,EAAI3E,EAAQ,CAClB,IAAIsX,EAAItX,EAAS0zD,EACb0+B,EAAMtjF,GAAMsI,UAAU86E,EAAK/sF,GAC3B5E,EAAI+W,EAAItR,KAAKY,IAAIwrF,EAAMpsF,KAAK2R,GAAK,KACjCnX,EAAI8W,EAAItR,KAAKW,IAAIyrF,EAAMpsF,KAAK2R,GAAK,KACrCw6E,GAAU5xF,EAAG2xF,EAAI3xF,EAAIA,EAAGC,EAAG0xF,EAAI1xF,EAAIA,GACnC,MAGAkzD,GAAO/uD,EAGfutF,EAAM/sF,OAjBF+sF,EAAM/sF,EAmBd,OAAOgtF,GAGX++B,EAAkBv3E,UAAUvjC,UAAY,SAAUtI,GAC9C,IAAI5L,KACJ,GAAI4L,EAAU8tB,qBAA0C,aAAnB9tB,EAAU1I,MAA0C,eAAnB0I,EAAU1I,MAC5E,IAAK,IAAIxF,EAAI,EAAGA,EAAIkO,EAAU8tB,mBAAmB57B,OAAQJ,IACrDsC,EAAO7B,KAAKyN,EAAU8tB,mBAAmBh8B,IAGjD,OAAOsC,GAEXgvH,EAAkBv3E,UAAUm4E,eAAiB,SAAUh2E,EAAOC,GAC1D,OAAWA,EAAMx7C,EAAKu7C,EAAMv7C,EAAIu7C,EAAMh6C,OAAYg6C,EAAMv7C,EAAKw7C,EAAMx7C,EAAIw7C,EAAMj6C,OACrEi6C,EAAMv7C,EAAKs7C,EAAMt7C,EAAIs7C,EAAMj6C,QAAci6C,EAAMt7C,EAAKu7C,EAAMv7C,EAAIu7C,EAAMl6C,QAGhFqvH,EAAkBv3E,UAAUhhC,UAAY,SAAU44G,EAASM,EAAS9/B,EAAM1tD,EAAiBqvF,GACnF3hC,GAAQ8/B,EAAQ7xH,QAAU,IAC1B6xH,EAAQ/hH,OAAO,EAAG,GAClB+hH,EAAQ/hH,OAAO,EAAG,IAGtB,IAAK,IADD5N,KACKjC,EAAI,EAAGA,EAAIsxH,EAAQvxH,OAAS,EAAGC,IAAK,CACzC,IAAIkF,EAAKoE,KAAKoqH,OAAOpC,EAAQtxH,GAAIsxH,EAAQtxH,EAAI,GAAI4xH,EAAS6B,EAAQrvF,GAClE,GAAIl/B,EAAGnF,OAAS,EACZ,IAAK,IAAI+sB,EAAI,EAAGA,EAAI5nB,EAAGnF,OAAQ+sB,IAC3B7qB,EAAO7B,KAAK8E,EAAG4nB,IAGnBglE,GAAQ8/B,EAAQ7xH,QAAU,GAC1B6xH,EAAQ/hH,OAAO,EAAG,GAG1B,OAAO5N,GAGXgvH,EAAkBv3E,UAAUg6E,OAAS,SAAUJ,EAASC,EAAOjjH,EAAKmjH,EAAQrvF,GAExE,IAAK,IADDktF,KACKtxH,EAAI,EAAGA,EAAIsQ,EAAIvQ,OAAS,EAAGC,IAAK,CACrC,IAAIiF,EAAQ83B,GAAWu2F,EAASC,EAAOjjH,EAAItQ,GAAIsQ,EAAItQ,EAAI,IACvD,IAAKsJ,KAAKwF,aAAa7J,GAAQ,CAC3B,IAAInE,EAAQwI,KAAK8oH,iBAAiBkB,EAASC,GACvCC,EAASlqH,KAAK8oH,iBAAiB9hH,EAAItQ,GAAIsQ,EAAItQ,EAAI,IAGnD,OAFAc,EAAQwI,KAAKqqH,uBAAuB7yH,GACpC0yH,EAASlqH,KAAKqqH,uBAAuBH,GAC7BpvF,GACJ,IAAK,OACL,IAAK,QACGtjC,EAAQ0yH,GACRlC,EAAQlxH,KAAK6E,GAEjB,MACJ,IAAK,MACL,IAAK,SACGnE,EAAQ0yH,GACRlC,EAAQlxH,KAAK6E,GAIrBnE,IAAU0yH,GAAUC,GACpBnC,EAAQlxH,KAAK6E,IAIzB,OAAOqsH,GAEXL,EAAkBv3E,UAAUi6E,uBAAyB,SAAU7yH,GAC3D,IACI8yH,EAAe7tH,KAAK6G,IAAI9L,GAO5B,OANI8yH,EAAe,GACR,IAAMA,EAGNA,GAIf3C,EAAkBv3E,UAAU5qC,aAAe,SAAU7J,GACjD,OAAmB,IAAZA,EAAM3E,GAAuB,IAAZ2E,EAAM1E,GAElC0wH,EAAkBv3E,UAAUq4E,yBAA2B,SAAUlkH,EAAWgmH,GAWxE,IAAK,IATDC,EAAU,IACVvpE,GAAc,EACd0nE,EAAa,EACbr8C,GAAgB,EAChBrkD,EAAQ,EACRwiG,EAAqB,EACrB74E,EAAMrtC,EAAUxD,YAChB2pH,EAAc94E,EACdj5C,KACKjC,EAAI,EAAGA,EAAI6N,EAAU8tB,mBAAmB57B,OAAQC,IAAK,CAC1D,IAAI8B,EAAS+L,EAAU8tB,mBAAmB37B,GAC1CiC,EAAO7B,KAAK0B,GAEhB,IAAK,IAAInC,EAAI,EAAGA,EAAIsC,EAAOlC,OAAQJ,IAAK,CACpC,IAAIw7C,EAAMl5C,EAAOtC,GACbs0H,EAAU3qH,KAAK4qH,SAAS/4E,EAAKD,EAAK24E,EAAShmH,GAC3ComH,EAAUH,IACVA,EAAUG,EACVF,EAAqB9B,EAAa3oH,KAAKgpH,kBAAkBuB,EAASG,GAClEp+C,EAAerkD,EACfg5B,EAAa5qD,GAEjBsyH,GAAcpjH,GAAM0I,WAAW4jC,EAAKD,GACpCA,EAAMC,EACN64E,EAAc74E,EAOlB,OALA5pB,KAEIygG,oBAAqB+B,EAAoB9B,WAAYA,EACrDr8C,aAAcA,EAAcrrB,WAAYA,IAIhD0mE,EAAkBv3E,UAAUw6E,SAAW,SAAUZ,EAASC,EAAOtuH,EAAO4I,GACpE,IACIsmH,EAAOpuH,KAAK6G,IAAI0mH,EAAQhzH,EAAIizH,EAAMjzH,GAClC8zH,EAAOruH,KAAK6G,IAAI0mH,EAAQ/yH,EAAIgzH,EAAMhzH,GAClC8zH,GAAQpvH,EAAM1E,EAAI+yH,EAAQ/yH,IAAMgzH,EAAMhzH,EAAI+yH,EAAQ/yH,GAClD+zH,GAAQrvH,EAAM3E,EAAIgzH,EAAQhzH,IAAMizH,EAAMjzH,EAAIgzH,EAAQhzH,GACtD,IAAKi0H,SAASF,KAASE,SAASD,IAAQ77G,MAAM47G,IAAQ57G,MAAM67G,IACxD,GAAIhB,EAAQhzH,IAAMizH,EAAMjzH,EAAG,CACvB,GAAIgzH,EAAQ/yH,IAAMgzH,EAAMhzH,EACpB,OAAO,IAEN,GAAM+yH,EAAQ/yH,EAAI0E,EAAM1E,GAAO0E,EAAM1E,EAAIgzH,EAAMhzH,GAAS+yH,EAAQ/yH,EAAI0E,EAAM1E,GAAO0E,EAAM1E,EAAIgzH,EAAMhzH,EAClG,OAAOwF,KAAK6G,IAAI0mH,EAAQhzH,EAAI2E,EAAM3E,QAGrC,GAAIgzH,EAAQ/yH,IAAMgzH,EAAMhzH,IACnB+yH,EAAQhzH,EAAI2E,EAAM3E,GAAO2E,EAAM3E,EAAIizH,EAAMjzH,GAASgzH,EAAQhzH,EAAI2E,EAAM3E,GAAO2E,EAAM3E,EAAIizH,EAAMjzH,GAC7F,OAAOyF,KAAK6G,IAAI0mH,EAAQ/yH,EAAI0E,EAAM1E,QAK1C,IAAK+yH,EAAQhzH,GAAK2E,EAAM3E,GAAK2E,EAAM3E,GAAKizH,EAAMjzH,GAAOgzH,EAAQhzH,GAAK2E,EAAM3E,GAAK2E,EAAM3E,GAAKizH,EAAMjzH,GAAM6zH,EArB5F,KAsBCb,EAAQ/yH,GAAK0E,EAAM1E,GAAK0E,EAAM1E,GAAKgzH,EAAMhzH,GAAO+yH,EAAQ/yH,GAAK0E,EAAM1E,GAAK0E,EAAM1E,GAAKgzH,EAAMhzH,GAAM6zH,EAtBhG,GAuBA,OAAOruH,KAAK6G,IAAIynH,EAAMC,GAIlC,OAAO,KAGXrD,EAAkBv3E,UAAU04E,iBAAmB,SAAUkB,EAASC,GAC9D,IAAIiB,EAAQlB,EAAQhzH,EAAIizH,EAAMjzH,EAC1Bm0H,EAAQnB,EAAQ/yH,EAAIgzH,EAAMhzH,EAC9B,OAAOwF,KAAKk1C,MAAMw5E,EAAOD,IAAU,IAAMzuH,KAAK2R,KAElDu5G,EAAkBv3E,UAAU44E,kBAAoB,SAAUgB,EAASC,GAG/D,OADUxtH,KAAKg1C,MAAOu4E,EAAQhzH,EAAIizH,EAAMjzH,IAAMgzH,EAAQhzH,EAAIizH,EAAMjzH,IAAQgzH,EAAQ/yH,EAAIgzH,EAAMhzH,IAAM+yH,EAAQ/yH,EAAIgzH,EAAMhzH,KAQtH0wH,EAAkBv3E,UAAUkZ,QAAU,aAQtCq+D,EAAkBv3E,UAAUiZ,cAAgB,WAIxC,MAAO,YAEJs+D,KC9YPyD,GAA0B,WAC1B,SAASA,EAASlsH,GACdc,KAAKg0B,QACLh0B,KAAKd,QAAUA,EA+vCnB,OA5vCAksH,EAASh7E,UAAU8yB,QAAU,WACzB,OACwE,IADhEljE,KAAKd,QAAQq8B,aAAa/nB,aAC3Bs/B,kBAAgBu4C,aAAev4C,kBAAgBszC,eAM1DglC,EAASh7E,UAAU82B,UAAY,SAAUhoE,EAASsf,EAAgB2sE,EAAaC,EAAYigC,EAAOz4G,EAAYjH,GAC1G,IAAI4vB,EAAev7B,KAAKd,QAAQq8B,aAE5BtrB,GAAWjZ,EAAG,EAAGC,EAAG,GACpBuK,EAASuzB,GAAUvW,EAAehQ,SAClC88G,GAAwB1oD,SAAS,EAAO3yD,OAAQ,GAChDs7G,GAAsB3oD,SAAS,EAAO3yD,OAAQ,GAClD,GAAIjQ,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBu4C,aAAc,CACtE,IAAIloB,OAAW,GACfA,EAAWn1C,SAASmb,gBAAgB,6BAA8B,MACzDvE,aAAa,KAAM,kBAC5Bu+B,EAASv+B,aAAa,iBAAkB,cACxC5kC,KAAKmiB,qBAAqB6c,YAAYmkC,GACtCnjE,KAAKwrH,WAAWtsH,EAASsf,EAAgB2kD,EAAUmoD,EAAqBC,EAAmBF,EAAOz4G,IAAejH,GAGrH,IAAI/I,EAAOpB,EAAOxK,EAAIq0H,EAAMr0H,EACxB+L,EAAMvB,EAAOvK,EAAIo0H,EAAMp0H,EACvB4L,EAAQrB,EAAOxK,EAAIwK,EAAOjJ,MAAQ8yH,EAAMr0H,EACxC8L,EAAStB,EAAOvK,EAAIuK,EAAOlJ,OAAS+yH,EAAMp0H,EAC1C+kE,EAAkBzgC,EAAa0gC,kBAAkBD,gBAEjDyvD,EAAezrH,KAAKtD,MAAMmG,EAAOm5D,EApBpB,GAqBb0vD,EAAc1rH,KAAKtD,MAAMkG,EAAMo5D,EArBlB,GAsBjBA,EAAkBzgC,EAAawgC,oBAAoBC,gBACnD,IAAI2vD,EAAa3rH,KAAKtD,MAAMqG,EAAKi5D,EAvBhB,GAwBb4vD,EAAgB5rH,KAAKtD,MAAMoG,EAAQk5D,EAxBtB,GA0Bb6vD,EAAerqH,EAAOxK,EAAIwK,EAAOjJ,MACjCuzH,EAAgBtqH,EAAOvK,EAAIuK,EAAOlJ,OA8DtC,OA7DKgzH,EAAoB1oD,QA0BjB5iE,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBu4C,aACxDp7E,EAAOjZ,EAAIs0H,EAAoBr7G,OAG/BA,EAAOjZ,EAAI2U,EAAS3U,EAAI4b,EAAW5b,EA7BnCgJ,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBi5E,oBACpDtvH,KAAK6G,IAAI+nH,EAAMr0H,IAAM,IACjBm0F,EACI1uF,KAAK6G,IAAImoH,EAAeI,GAAgBpvH,KAAK6G,IAAIooH,EAAclqH,EAAOxK,GACtEiZ,EAAOjZ,GAAK00H,EAAclqH,EAAOxK,EAGjCiZ,EAAOjZ,GAAKy0H,EAAeI,EAI3BpvH,KAAK6G,IAAImoH,EAAeI,GAAgBpvH,KAAK6G,IAAIooH,EAAclqH,EAAOxK,GACtEiZ,EAAOjZ,GAAKy0H,EAAeI,EAG3B57G,EAAOjZ,GAAK00H,EAAclqH,EAAOxK,GAM7CiZ,EAAOjZ,EAAI2U,EAAS3U,EAAI4b,EAAW5b,EAWtCu0H,EAAkB3oD,QA0BnB3yD,EAAOhZ,EAAIs0H,EAAkBt7G,OAzBzBjQ,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBk5E,sBACpDvvH,KAAK6G,IAAI+nH,EAAMp0H,IAAM,IACjBm0F,EACI3uF,KAAK6G,IAAIsoH,EAAgBE,GAAiBrvH,KAAK6G,IAAIqoH,EAAanqH,EAAOvK,GACvEgZ,EAAOhZ,GAAK00H,EAAanqH,EAAOvK,EAGhCgZ,EAAOhZ,GAAK20H,EAAgBE,EAI5BrvH,KAAK6G,IAAIsoH,EAAgBE,GAAiBrvH,KAAK6G,IAAIqoH,EAAanqH,EAAOvK,GACvEgZ,EAAOhZ,GAAK20H,EAAgBE,EAG5B77G,EAAOhZ,GAAK00H,EAAanqH,EAAOvK,GAM5CgZ,EAAOhZ,EAAI0U,EAAS1U,EAAI2b,EAAW3b,EAMpCgZ,GAKXm7G,EAASh7E,UAAU1zC,MAAQ,SAAUiJ,EAAOs3D,EAAetgD,GAEnDA,EADAA,EAAQ,EACAlgB,KAAKi1C,IAAI,EAAGj1C,KAAKymC,MAAMzmC,KAAKovD,IAAIlvC,GAASlgB,KAAKovD,IAAI,KAGlDpvD,KAAKi1C,IAAI,EAAGj1C,KAAK+oC,KAAK/oC,KAAKovD,IAAIlvC,GAASlgB,KAAKovD,IAAI,KAE7D,IAAIogE,EAAS,EACTv1H,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAIumE,EAAcxmE,OAAQC,IAClCu1H,GAAUhvD,EAAcvmE,GAG5B,IACIw1H,EAAMvmH,GAFVsmH,GAAUtvG,GAGNvjB,EAFWqD,KAAKymC,MAAMzmC,KAAK6G,IAAIqC,GAASsmH,GAEtBA,EACtB,GAAI7yH,IAASuM,EACT,GAAIA,GAAS,EACT,IAAKjP,EAAI,EAAGA,EAAIumE,EAAcxmE,OAAQC,IAAK,CACvC,GAAIw1H,GAAOjvD,EAAcvmE,GAAKimB,EAC1B,OAAOvjB,GAAQ8yH,EAAOjvD,EAAcvmE,IAAM,EAAIimB,GAAU,EAAIsgD,EAAcvmE,GAAKimB,GAG/EvjB,GAAQ6jE,EAAcvmE,GAAKimB,EAC3BuvG,GAAOjvD,EAAcvmE,GAAKimB,OAMlC,IADAvjB,IAAe,EACV1C,EAAIumE,EAAcxmE,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC5C,GAAI+F,KAAK6G,IAAI4oH,IAAQjvD,EAAcvmE,GAAKimB,EACpC,OAAOvjB,GAAQqD,KAAK6G,IAAI4oH,GAAQjvD,EAAcvmE,IAAM,EAAIimB,GAAU,EAAIsgD,EAAcvmE,GAAKimB,GAGzFvjB,GAAQ6jE,EAAcvmE,GAAKimB,EAC3BuvG,GAAOjvD,EAAcvmE,GAAKimB,EAK1C,OAAOhX,GAKXylH,EAASh7E,UAAUo7E,WAAa,SAAUtsH,EAASsf,EAAgB6sC,EAAG8gE,EAAgBC,EAAcf,EAAOgB,GACvG,IACIC,EACAC,EACAC,EAHAC,EAAU,KAIVpqG,EAAWriB,KAAKd,QAAQmjB,SACxBkZ,EAAev7B,KAAKd,QAAQq8B,aAC5BmxF,KACAC,KACAC,KACAC,KACArrH,EAASuzB,GAAUvW,EAAehQ,SAClCmO,EAAQzd,EAAQmjB,SAAS8N,YACzBygE,GAAWvuE,EAASgN,iBACpBwhE,GAAWxuE,EAASkN,eACpBu9F,EAAkBvxF,EAAawxF,mBAAqBpwG,EACpDkiF,EAAW,IAAIvyF,GAAK,EAAG,EAAG+V,EAASyN,cAAezN,EAASwN,gBAC3Dm9F,EAAiB,IAAI1gH,GAAKskF,EAAUj0E,EAAQnb,EAAOvK,EAAI61H,EAAkB,EAAIjuB,EAAStmG,MAAQokB,EAAQnb,EAAOlJ,OAAS,EAAIw0H,EAAkB,IAC5IG,EAAiB,IAAI3gH,GAAM9K,EAAOxK,EAAI81H,EAAkB,EAAIj8B,EAAUl0E,EAAQnb,EAAOjJ,MAAQ,EAAIu0H,EAAkB,GAAKjuB,EAASvmG,OAASqkB,GAC9IkiF,EAAW,IAAIvyF,GAAKskF,EAAUj0E,EAAOk0E,EAAUl0E,EAAOkiF,EAAStmG,MAAQokB,EAAOkiF,EAASvmG,OAASqkB,GAChG,IACIjmB,EACAsM,EACAkqH,EAHApzG,EAAQ9Z,KAAKmtH,UAAUjuH,EAAQ46E,cAAet7D,EAAgByuG,EAAgBpuB,GAI9EjjF,EAAY1c,EAAQ0c,UACxB,IAAKllB,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAC1BsM,EAAS8W,EAAMpjB,GACXsJ,KAAKotH,YAAYluH,EAAS8D,KACpBhD,KAAKd,QAAQ0c,UAAU5Y,EAAOnD,cAAe8T,KAAc3T,KAAKqtH,YAAYzxG,EAAW4C,EAAgBxb,MACzGkqH,EAAelqH,EAAOxB,QACLlJ,OAAS40H,EAAaj2H,EAAIo0H,EAAMp0H,EAAIuK,EAAOvK,EACxD21H,EAAa91H,MACTyD,IAAKyI,EAAQ0C,SAAUjJ,KAAK6G,IAAI9B,EAAOvK,EAAIo0H,EAAMp0H,EAAIi2H,EAAaj2H,EAAIi2H,EAAa50H,UAGlF40H,EAAaj2H,EAAIuK,EAAOvK,EAAIo0H,EAAMp0H,EAAIuK,EAAOlJ,QAClDu0H,EAAgB/1H,MAAOyD,IAAKyI,EAAQ0C,SAAUjJ,KAAK6G,IAAI9B,EAAOvK,EAAIo0H,EAAMp0H,EAAIuK,EAAOlJ,OAAS40H,EAAaj2H,MAE9F,MAAXw1H,GAAmBA,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,EAAIo0H,EAAMp0H,MACpEwF,KAAK6G,IAAI4pH,EAAal2H,EAAIk2H,EAAa30H,MAAQ,GAAKiJ,EAAOxK,EAAIwK,EAAOjJ,MAAQ,EAAI8yH,EAAMr0H,KACxF81H,GACAP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,WACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAI4pH,EAAal2H,EAAIk2H,EAAa30H,OAASiJ,EAAOxK,EAAIwK,EAAOjJ,MAAQ8yH,EAAMr0H,KAAO81H,GAC5FP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,SACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAI4pH,EAAal2H,GAAKwK,EAAOxK,EAAIq0H,EAAMr0H,KAAO81H,GACxDP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,QACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAI4pH,EAAal2H,GAAKwK,EAAOxK,EAAIwK,EAAOjJ,MAAQ8yH,EAAMr0H,KAAO81H,GACvEP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,aACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAI4pH,EAAal2H,EAAIk2H,EAAa30H,OAASiJ,EAAOxK,EAAIq0H,EAAMr0H,KAAO81H,IAC7EP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,aACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,OAM/D6iB,EAAQ9Z,KAAKmtH,UAAUjuH,EAAQ46E,cAAet7D,EAAgBwuG,EAAgBnuB,GAC9E,IAAK,IAAIxoG,EAAI,EAAGA,EAAIyjB,EAAMrjB,OAAQJ,IAC9B2M,EAAS8W,EAAMzjB,GACX2J,KAAKotH,YAAYluH,EAAS8D,KACpBhD,KAAKd,QAAQ0c,UAAU5Y,EAAOnD,cAAe8T,KAAc3T,KAAKqtH,YAAYzxG,EAAW4C,EAAgBxb,MACzGkqH,EAAelqH,EAAOxB,QACLxK,EAAIk2H,EAAa30H,MAAQiJ,EAAOxK,EAAIq0H,EAAMr0H,IACvD01H,EAAcA,EAAcj2H,SACxB8D,IAAKyI,EAAQ0C,SAAUjJ,KAAK6G,IAAK9B,EAAOxK,EAAIq0H,EAAMr0H,EAAKk2H,EAAal2H,EAAIk2H,EAAa30H,SAGzF20H,EAAal2H,EAAIwK,EAAOxK,EAAIq0H,EAAMr0H,EAAIwK,EAAOjJ,QAC7Co0H,EAAeA,EAAel2H,SAC1B8D,IAAKyI,EAAQ0C,SAAUjJ,KAAK6G,IAAI9B,EAAOxK,EAAIq0H,EAAMr0H,EAAIwK,EAAOjJ,MAAQ20H,EAAal2H,MAG1E,MAAXs1H,GAAmBA,EAAU7vH,KAAK6G,IAAI4pH,EAAal2H,EAAIwK,EAAOxK,EAAIq0H,EAAMr0H,MACpEyF,KAAK6G,IAAI4pH,EAAaj2H,EAAIi2H,EAAa50H,OAAS,GAAKkJ,EAAOvK,EAAIuK,EAAOlJ,OAAS,EAAI+yH,EAAMp0H,KACvF61H,GACHN,EAAUxsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,WACtD8qH,EAAU7vH,KAAK6G,IAAI4pH,EAAal2H,EAAIwK,EAAOxK,IAEtCyF,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,EAAIo0H,EAAMp0H,IAAM61H,GACtDN,EAAUxsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,OACtD8qH,EAAU7vH,KAAK6G,IAAI4pH,EAAal2H,EAAIwK,EAAOxK,IAEtCyF,KAAK6G,IAAI4pH,EAAaj2H,EAAIi2H,EAAa50H,QAAUkJ,EAAOvK,EAAIuK,EAAOlJ,OAAS+yH,EAAMp0H,KACvF61H,GACAN,EAAUxsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,UACtD8qH,EAAU7vH,KAAK6G,IAAI4pH,EAAal2H,EAAIwK,EAAOxK,IAEtCyF,KAAK6G,IAAI4pH,EAAaj2H,EAAIi2H,EAAa50H,OAASkJ,EAAOvK,EAAIo0H,EAAMp0H,IAAM61H,GAC5EN,EAAUxsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,aACtD8qH,EAAU7vH,KAAK6G,IAAI4pH,EAAal2H,EAAIwK,EAAOxK,IAEtCyF,KAAK6G,IAAI4pH,EAAaj2H,GAAKuK,EAAOvK,EAAIuK,EAAOlJ,OAAS+yH,EAAMp0H,KAAO61H,IACxEN,EAAUxsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,aACtD8qH,EAAU7vH,KAAK6G,IAAI4pH,EAAal2H,EAAIwK,EAAOxK,OAM/DgJ,KAAKutH,iBAAiBruH,EAASqtH,EAASC,EAASnhE,EAAG8gE,EAAgBC,EAAcC,GAC7EF,EAAevpD,SAChB5iE,KAAKwtH,oBAAoBtuH,EAASmsD,EAAG7sC,EAAgBkuG,EAAeC,EAAgBR,EAAgBC,EAAcC,EAAOhB,EAAOyB,GAE/HV,EAAaxpD,SACd5iE,KAAKytH,oBAAoBvuH,EAASmsD,EAAG7sC,EAAgBouG,EAAcC,EAAiBV,EAAgBC,EAAcC,EAAOhB,EAAOyB,IAMxI1B,EAASh7E,UAAUu1B,iBAAmB,SAAUhqE,GAC5C,IAAI4/B,EAAev7B,KAAKd,QAAQq8B,aAMhC,OAJIA,EAAa/nB,YAAcs/B,kBAAgBszC,cAC3CzqF,EAAM3E,EAAIgJ,KAAKtD,MAAMf,EAAM3E,EAAGukC,EAAa0gC,kBAAkBD,gBAFhD,GAGbrgE,EAAM1E,EAAI+I,KAAKtD,MAAMf,EAAM1E,EAAGskC,EAAawgC,oBAAoBC,gBAHlD,IAKVrgE,GAEXyvH,EAASh7E,UAAUg9E,YAAc,SAAUluH,EAASqB,GAEhD,OADAA,EAAOP,KAAKd,QAAQ0c,UAAUrb,EAAKV,KAC1BgvC,GAAW7uC,KAAKd,QAASqB,GAAM,IAE5C6qH,EAASh7E,UAAUs9E,SAAW,SAAUxuH,EAASitH,EAAgBC,EAAcjpD,EAAU2sB,EAAQC,EAAQvxE,EAAgB6tG,GACrH,IAAII,EACAH,EAGAC,EACAC,EAHAjxF,EAAev7B,KAAKd,QAAQq8B,aAC5BlZ,EAAWriB,KAAKd,QAAQmjB,SAGxB7gB,EAASuzB,GAAUvW,EAAehQ,SAClCoN,EAAY1c,EAAQ0c,UACpB+xG,KACAC,KACAjxG,EAAQzd,EAAQmjB,SAAS8N,YACzBygE,GAAWvuE,EAASgN,iBACpBwhE,GAAWxuE,EAASkN,eACpBu9F,EAAkBvxF,EAAawxF,mBAAqBpwG,EACpDkiF,EAAW,IAAIvyF,GAAK,EAAG,EAAG+V,EAASyN,cAAezN,EAASwN,gBAC3Dg+F,EAAmB,IAAIvhH,GAAKskF,EAAUj0E,GAAQnb,EAAOvK,EAAI,GAAK0lB,EAAOkiF,EAAStmG,MAAQokB,GAAQnb,EAAOlJ,OAAS,IAAMqkB,GACpHmxG,EAAmB,IAAIxhH,IAAM9K,EAAOxK,EAAI,GAAK2lB,EAAOk0E,EAAUl0E,GAAQnb,EAAOjJ,MAAQ,IAAMokB,EAAOkiF,EAASvmG,OAASqkB,GACxHkiF,EAAW,IAAIvyF,GAAKskF,EAAUj0E,EAAOk0E,EAAUl0E,EAAOkiF,EAAStmG,MAAQokB,EAAOkiF,EAASvmG,OAASqkB,GAChG,IAEIjmB,EACAsM,EACAkqH,EAJAa,KACAj0G,EAAQ9Z,KAAKmtH,UAAUjuH,EAAQ46E,cAAet7D,EAAgBsvG,EAAkBjvB,EAAUkvB,GAI9F,IAAKr3H,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAC1BsM,EAAS8W,EAAMpjB,IACXsJ,KAAKqtH,YAAYzxG,EAAW4C,EAAgBxb,IAAahD,KAAKd,QAAQ0c,UAAU5Y,EAAOnD,cAAe8T,KACtGu5G,EAAelqH,EAAOxB,QACP,MAAXirH,GAAmBA,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,MAC1Dk1H,EAAevpH,KACXnG,KAAK6G,IAAI9B,EAAOxK,EAAI84F,EAASo9B,EAAal2H,IAAM81H,GAChDP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,QACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAI9B,EAAOxK,EAAI84F,EAASo9B,EAAal2H,EAAIk2H,EAAa30H,QAAUu0H,IAC1EP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,aACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,IAG1Ck1H,EAAetpH,QAChBpG,KAAK6G,IAAI9B,EAAOxK,EAAI84F,EAAStuF,EAAOjJ,MAAQ20H,EAAal2H,EAAIk2H,EAAa30H,QAAUu0H,GACpFP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,SACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAI9B,EAAOxK,EAAI84F,EAAStuF,EAAOjJ,MAAQ20H,EAAal2H,IAAM81H,IACpEP,EAAUvsH,KAAKstH,iBAAiBJ,EAAc1rH,EAAQ,aACtDirH,EAAUhwH,KAAK6G,IAAI4pH,EAAaj2H,EAAIuK,EAAOvK,OAM/D6iB,EAAQ9Z,KAAKmtH,UAAUjuH,EAAQ46E,cAAet7D,EAAgBqvG,EAAkBhvB,GAChF,IAAK,IAAIn5E,EAAM,EAAGA,EAAM5L,EAAMrjB,OAAQivB,IAAO,CACzC,IAAInb,EAAWuP,EAAM4L,GACrB,GAAI1lB,KAAKqtH,YAAYzxG,EAAW4C,EAAgBjU,MAAevK,KAAKd,QAAQ0c,UAAUrR,EAAS1K,cAAe8T,IAAY,CACtH,IAAIq6G,EAAiBzjH,EAAS/I,QACf,MAAX8qH,GAAmBA,EAAU7vH,KAAK6G,IAAI0qH,EAAeh3H,EAAIwK,EAAOxK,MAC5Do1H,EAAarpH,IACTtG,KAAK6G,IAAI9B,EAAOvK,EAAI84F,EAASi+B,EAAe/2H,IAAM61H,GAClDN,EAAUxsH,KAAKstH,iBAAiBU,EAAgBxsH,EAAQ,OACxD8qH,EAAU7vH,KAAK6G,IAAI0qH,EAAeh3H,EAAIwK,EAAOxK,IAExCyF,KAAK6G,IAAI9B,EAAOvK,EAAI84F,EAASi+B,EAAe/2H,EAAI+2H,EAAe11H,SAAWw0H,IAC/EN,EAAUxsH,KAAKstH,iBAAiBU,EAAgBxsH,EAAQ,aACxD8qH,EAAU7vH,KAAK6G,IAAI0qH,EAAeh3H,EAAIwK,EAAOxK,IAG5Co1H,EAAatpH,SACdrG,KAAK6G,IAAI9B,EAAOvK,EAAIuK,EAAOlJ,OAASy3F,EAASi+B,EAAe/2H,EAAI+2H,EAAe11H,SAAWw0H,GAC1FN,EAAUxsH,KAAKstH,iBAAiBU,EAAgBxsH,EAAQ,UACxD8qH,EAAU7vH,KAAK6G,IAAI0qH,EAAeh3H,EAAIwK,EAAOxK,IAExCyF,KAAK6G,IAAI9B,EAAOvK,EAAIuK,EAAOlJ,OAASy3F,EAASi+B,EAAe/2H,IAAM61H,IACvEN,EAAUxsH,KAAKstH,iBAAiBU,EAAgBxsH,EAAQ,aACxD8qH,EAAU7vH,KAAK6G,IAAI0qH,EAAeh3H,EAAIwK,EAAOxK,OAMjE,IAAKN,EAAI,EAAGA,EAAIq3H,EAAYt3H,OAAQC,IAEhC,GADAsM,EAAS+qH,EAAYr3H,GACjBsJ,KAAKqtH,YAAYzxG,EAAW4C,EAAgBxb,GAAS,CACrD,IAAIirH,EAAiBjrH,EAAOxB,OACxB6pH,EAAQc,EAAevpH,MAAQktF,EAASA,EACxCo+B,EAAazxH,KAAK6G,IAAI9B,EAAOjJ,MAAQ8yH,EAAQ4C,EAAe11H,OAC5D41H,OAAa,EACbD,GAAcpB,IACdqB,EAAahC,EAAevpH,MAAQqrH,EAAe11H,MAAQiJ,EAAOjJ,MAAQ01H,EAAe11H,MAAQiJ,EAAOjJ,MACxGo1H,EAAUA,EAAUl3H,SAAY8L,OAAQS,EAAQkrH,WAAYA,EAAYj+G,OAAQk+G,IAEpF9C,EAAQe,EAAarpH,KAAOgtF,EAASA,EACrC,IAAIhtB,EAAOtmE,KAAK6G,IAAI9B,EAAOlJ,OAAS+yH,EAAQ4C,EAAe31H,QACvDyqE,GAAQ+pD,IACRqB,EAAa/B,EAAarpH,KAAOkrH,EAAe31H,OAASkJ,EAAOlJ,OAAS21H,EAAe31H,OAASkJ,EAAOlJ,OACxGs1H,EAAWA,EAAWn3H,SAAY8L,OAAQS,EAAQkrH,WAAYnrD,EAAM9yD,OAAQk+G,IAIxF,IACKjvH,EAAQ0zE,QACC5yE,KAAKutH,iBAAiBruH,EAASqtH,EAASC,EAASrpD,EAAUgpD,EAAgBC,EAAcC,IAElGF,EAAevpD,SAAW+qD,EAAUl3H,OAAS,IAAM01H,EAAevpH,MAAQupH,EAAetpH,QAC1F7C,KAAKouH,kBAAkBlvH,EAASikE,EAAUwqD,EAAWxB,EAAgBE,EAAO7tG,IAE3E4tG,EAAaxpD,SAAWgrD,EAAWn3H,OAAS,IAAM21H,EAAarpH,KAAOqpH,EAAatpH,SACpF9C,KAAKquH,mBAAmBnvH,EAASikE,EAAUyqD,EAAYxB,EAAcC,EAAO7tG,IAOpF4sG,EAASh7E,UAAUqzB,QAAU,SAAU0oD,EAAgBC,EAAcjpD,EAAU2sB,EAAQC,EAAQ3xF,EAAOiuH,EAAOiC,GACzG,IAAIvrD,EAAOgtB,EACXq8B,EAAarpH,KAAM,EACnB,IAAI9L,EACJk1H,EAAevpH,KAAOupH,EAAetpH,OAAQ,EAQ7C,GALI7C,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBu4C,eAAiBjtF,EAAM8O,cAE/EjW,EAAIq3H,EAAer3H,EAAIq3H,EAAeh2H,OAAS8F,EAAM2iC,MAAM9pC,EAAI84F,GAAU3xF,EAAMpC,QAAUoC,EAAM9F,OAAS8F,EAAM2iC,MAAM9pC,GACpH+I,KAAK0tH,SAAS1tH,KAAKd,QAASitH,EAAgBC,EAAcjpD,EAAU2sB,EAAQ74F,EAAG+I,KAAKd,QAAQwf,cAAe2tG,IAE1GD,EAAaxpD,QASdG,EAAQgtB,EAAS94F,EAAKm1H,EAAan8G,YARnC,GAAIjQ,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBk5E,sBAAuB,CAC/E,IAAIt+G,EAAQ4gH,EAAer3H,EAAIq3H,EAAeh2H,OAAS8F,EAAM2iC,MAAM9pC,EAC/Ds3H,EAAY7gH,EAAQqiF,EAExBhtB,EADiB/iE,KAAKtD,MAAM6xH,EAAWvuH,KAAKd,QAAQq8B,aAAawgC,oBAAoBC,gBAX5E,GAYWtuD,EAM5B,OAAOq1D,GAMXqoD,EAASh7E,UAAUozB,UAAY,SAAU2oD,EAAgBC,EAAcjpD,EAAU2sB,EAAQC,EAAQ3xF,EAAOiuH,EAAOmC,GAC3G,IACIx3H,EADA8rE,EAAOgtB,EAEXq8B,EAAetpH,OAAQ,EACvBupH,EAAarpH,IAAMqpH,EAAatpH,QAAS,EAQzC,GALI9C,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBu4C,eAAiBjtF,EAAM8O,cAE/ElW,EAAIw3H,EAAax3H,EAAIw3H,EAAaj2H,OAAS,EAAI6F,EAAM2iC,MAAM/pC,GAAK84F,GAAU1xF,EAAMrC,QAAUqC,EAAM7F,OAAS,EAAI6F,EAAM2iC,MAAM/pC,IACzHgJ,KAAK0tH,SAAS1tH,KAAKd,QAASitH,EAAgBC,EAAcjpD,EAAUnsE,EAAG+4F,EAAQ/vF,KAAKd,QAAQwf,cAAe2tG,IAE1GF,EAAevpD,QAShBE,EAAQgtB,EAAS94F,EAAKm1H,EAAel8G,YARrC,GAAIjQ,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBi5E,oBAAqB,CAC7E,IAAIlpH,EAAQ2rH,EAAax3H,EAAIw3H,EAAaj2H,OAAS,EAAI6F,EAAM2iC,MAAM/pC,GAC/D+2F,EAAclrF,EAAQitF,EAE1BhtB,EADmB9iE,KAAKtD,MAAMqxF,EAAa/tF,KAAKd,QAAQq8B,aAAa0gC,kBAAkBD,gBAX9E,GAYan5D,EAM9B,OAAOigE,GAMXsoD,EAASh7E,UAAUmzB,SAAW,SAAU4oD,EAAgBC,EAAcjpD,EAAU2sB,EAAQC,EAAQ3xF,EAAOiuH,EAAOoC,GAC1G,IAAI3rD,EAAOgtB,EACP94F,EAAI,EACRm1H,EAAevpH,MAAO,EACtBwpH,EAAarpH,IAAMqpH,EAAatpH,QAAS,EAQzC,GALI9C,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBu4C,eAAiBjtF,EAAM8O,cAE/ElW,EAAIy3H,EAAez3H,EAAIy3H,EAAel2H,MAAQ6F,EAAM2iC,MAAM/pC,EAAI84F,GAAU1xF,EAAMrC,QAAUqC,EAAM7F,MAAQ6F,EAAM2iC,MAAM/pC,GAClHgJ,KAAK0tH,SAAS1tH,KAAKd,QAASitH,EAAgBC,EAAcjpD,EAAUnsE,EAAG+4F,EAAQ/vF,KAAKd,QAAQwf,cAAe2tG,IAE1GF,EAAevpD,QAShBE,EAAQgtB,EAAS94F,EAAKm1H,EAAel8G,YARrC,GAAIjQ,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBi5E,oBAAqB,CAC7E,IAAInpH,EAAO6rH,EAAez3H,EAAIy3H,EAAel2H,MAAQ6F,EAAM2iC,MAAM/pC,EAC7D03H,EAAa9rH,EAAOktF,EAExBhtB,EADkB9iE,KAAKtD,MAAMgyH,EAAY1uH,KAAKd,QAAQq8B,aAAawgC,oBAAoBC,gBAX9E,GAYYp5D,EAM7B,OAAOkgE,GAMXsoD,EAASh7E,UAAUszB,WAAa,SAAUyoD,EAAgBC,EAAcjpD,EAAU2sB,EAAQC,EAAQ3xF,EAAOiuH,EAAOsC,GAC5G,IAAI5rD,EAAOgtB,EACXq8B,EAAatpH,QAAS,EACtBqpH,EAAevpH,KAAOupH,EAAetpH,OAAQ,EAC7C,IACI5L,EAAI,EAEJ+I,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBu4C,eAAiBjtF,EAAM8O,cAE/EjW,EAAI03H,EAAY13H,EAAI03H,EAAYr2H,QAAU,EAAI8F,EAAM2iC,MAAM9pC,GAAK84F,GAAU3xF,EAAMpC,QAAUoC,EAAM9F,QAAU,EAAI8F,EAAM2iC,MAAM9pC,IACzH+I,KAAK0tH,SAAS1tH,KAAKd,QAASitH,EAAgBC,EAAcjpD,EAAU2sB,EAAQ74F,EAAG+I,KAAKd,QAAQwf,cAAe2tG,IAK/G,GAFqFt3F,GAA1E32B,aAAiBkmB,IAAiBlmB,aAAiBsgC,GAAiCtgC,EACjFA,EAAMoQ,SACf49G,EAAaxpD,QASdG,EAAQgtB,EAAS94F,EAAKm1H,EAAan8G,YARnC,GAAIjQ,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBk5E,sBAAuB,CAC/E,IAAIlpH,EAAS6rH,EAAY13H,EAAI03H,EAAYr2H,QAAU,EAAI8F,EAAM2iC,MAAM9pC,GAC/Di3F,EAAeprF,EAASitF,EAE5BhtB,EADoB/iE,KAAKtD,MAAMwxF,EAAcluF,KAAKd,QAAQq8B,aAAawgC,oBAAoBC,gBAflF,GAgBcl5D,EAM/B,OAAOigE,GAKXqoD,EAASh7E,UAAUm9E,iBAAmB,SAAUruH,EAASqtH,EAASC,EAASrpD,EAAUgpD,EAAgBC,EAAcC,GAyB/G,OAxBIE,IACAJ,EAAel8G,OAASs8G,EAAQxwH,QAChCowH,EAAevpD,SAAU,EACpBypD,IACGE,EAAQ1wH,KACRmE,KAAK4uH,qBAAqBrC,EAAQ96F,MAAO86F,EAAQ76F,IAAKyxC,EAAUjkE,EAAQmjB,SAASxc,aAOzF2mH,IACAJ,EAAan8G,OAASu8G,EAAQxwH,QAC9BowH,EAAaxpD,SAAU,EAClBypD,IACGG,EAAQ3wH,KACRmE,KAAK4uH,qBAAqBpC,EAAQ/6F,MAAO+6F,EAAQ96F,IAAKyxC,EAAUjkE,EAAQmjB,SAASxc,aAOtFs9D,GAKXioD,EAASh7E,UAAUw+E,qBAAuB,SAAUn9F,EAAOC,EAAK6Y,EAAK1kC,GACjE4rB,GACIz6B,GAAIy6B,EAAMz6B,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MACxC1lB,GAAIw6B,EAAMx6B,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,OAE5C+U,GACI16B,GAAI06B,EAAI16B,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MACtC1lB,GAAIy6B,EAAIz6B,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,OAE1C,IAAIwrE,GACAthD,OAAQ,UAAW5tB,YAAa,EAAGrG,YAAc5b,EAAGy6B,EAAMz6B,EAAGC,EAAGw6B,EAAMx6B,GACtE0U,UAAY3U,EAAG06B,EAAI16B,EAAGC,EAAGy6B,EAAIz6B,GAAK8hB,KAAM,UAAWiuB,UAAW,GAAIzuC,MAAO,EACzEvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAGsvC,OAAQ,EACzCC,OAAQ,EAAGnJ,SAAS,EAAMtB,QAAS,EAAGz8B,GAAIua,MAE1C1jB,EAAI,EAER,IADAsJ,KAAKg0B,KAAKl9B,KAAKqxF,GACVzxF,EAAI,EAAGA,EAAIsJ,KAAKg0B,KAAKv9B,OAAQC,IAC9BsJ,KAAKd,QAAQkjB,gBAAgB+yC,SAAS5qB,EAAKvqC,KAAKg0B,KAAKi6C,QAM7Dm9C,EAASh7E,UAAUo9E,oBAAsB,SAAUtuH,EAASmsD,EAAGjtD,EAAOsuH,EAAeC,EAAgBR,EAAgBC,EAAcC,EAAOhB,EAAOyB,GAC7I,IAAI/pH,EAAM,EACV/C,KAAK6uH,eAAenC,EAAe,YAAY,GAC/C1sH,KAAK6uH,eAAelC,EAAgB,YAAY,GAChD,IAEImC,EACAC,EACA7B,EACA8B,EALAC,KACAztH,EAASuzB,GAAU32B,EAAMoQ,SA0B7B,GArBIk+G,EAAcj2H,OAAS,IACvBw4H,EAAcA,EAAcx4H,QAAUi2H,EAAc,GAEpD3pH,GADA+rH,EAAgBpC,EAAc,GAAM,IAAQ,QAC1Bz1H,EACdy1H,EAAcj2H,OAAS,GACvBy2H,EAAiBR,EAAc,GAAM,IAAQ,OAC7CsC,EAAgBF,EAAY93H,EAAIk2H,EAAal2H,EAAIk2H,EAAa30H,MAC1DkE,KAAK6G,IAAI0rH,EAAgBtC,EAAc,GAAGhnH,WAAaonH,EACvD/pH,EAAM/C,KAAKkvH,6BAA6BxC,EAAesC,EAAejsH,EAAKksH,GAG3ED,EAAgBtC,EAAc,GAAGhnH,UAIrCspH,EAAgBtC,EAAc,GAAGhnH,UAGzC1F,KAAK6uH,eAAeI,EAAe,YACnCA,EAAcA,EAAcx4H,SAAY8D,IAAK6D,EAAOsH,SAAU,GAC9D3C,EAAMvB,EAAOvK,EAAI8L,IAAQA,EAAMvB,EAAOvK,EAAI8L,EACtC4pH,EAAel2H,OAAS,EAAG,CAC3B,IAAI4Y,OAAO,EAOX,GANA0/G,EAAiBpC,EAAe,GAAM,IAAQ,OAC9C5pH,EAAMgsH,EAAa93H,EAAI8L,EAAMgsH,EAAa93H,EAAI8L,EAC1C4pH,EAAel2H,OAAS,IAExB4Y,GADA69G,EAAiBP,EAAe,GAAM,IAAQ,QAC1B31H,EAAI+3H,EAAa/3H,EAAI+3H,EAAax2H,OAEtDm0H,EAAcj2H,OAAS,EACvB,GAAIgG,KAAK6G,IAAIqpH,EAAe,GAAGjnH,SAAWgnH,EAAc,GAAGhnH,WAAaonH,EAAiB,CACrF,IAAIqC,EAAkB1yH,KAAK6G,IAAIqpH,EAAe,GAAGjnH,SAAWgnH,EAAc,GAAGhnH,UAAY,EACxFinH,EAAe,GAAGjnH,SAAWgnH,EAAc,GAAGhnH,SAC3CspH,GAAiBG,EAAkBH,GAAiBG,EACxDF,EAAcA,EAAcx4H,QAAUk2H,EAAe,QAEvB,IAAzBD,EAAcj2H,SACnBq4H,OAAc70H,EACdg1H,EAAc1oH,OAAO,EAAG,GACxB0oH,EAAcA,EAAcx4H,QAAUk2H,EAAe,GACrDqC,EAAgB3/G,QAIpB2/G,EAAgB3/G,EAChB4/G,EAAcA,EAAcx4H,QAAUk2H,EAAe,GAErDA,EAAel2H,OAAS,GAAKs4H,EAAa/3H,EAAI+3H,EAAax2H,MAAQ20H,EAAal2H,IAChF+L,EAAM/C,KAAKovH,8BAA8BzC,EAAgBt9G,EAAMtM,EAAKksH,EAAenC,IAG3F,GAAImC,EAAcx4H,OAAS,EAAG,CAC1BuJ,KAAKqvH,iBAAiBnwH,EAASmsD,EAAG4jE,EAAe5C,EAAOtpH,GACxD,IAAIusH,EAAkB,EAClBjD,IACAiD,EAAkBjE,EAAMr0H,GAExB83H,EACA3C,EAAel8G,OAAS++G,EAAgBvyH,KAAK6G,IAAI9B,EAAOxK,EAAIs4H,EAAkBR,EAAY93H,EAAI83H,EAAYv2H,OACpG+2H,EAEDP,IACL5C,EAAel8G,OAASxT,KAAK6G,IAAI9B,EAAOxK,EAAIwK,EAAOjJ,MAAQ+2H,EAAkBP,EAAa/3H,GACpFg4H,EAAgBM,GAE1BnD,EAAevpD,SAAU,IAMjCwoD,EAASh7E,UAAUq9E,oBAAsB,SAAUvuH,EAASmsD,EAAGjtD,EAAOwuH,EAAcC,EAAiBV,EAAgBC,EAAcC,EAAOhB,EAAOyB,GAC7I,IAAIjqH,EAAQ,EACZ7C,KAAK6uH,eAAejC,EAAc,YAAY,GAC9C5sH,KAAK6uH,eAAehC,EAAiB,YAAY,GACjD,IAEI0C,EACAC,EACAtC,EACA8B,EALAC,KACAztH,EAASuzB,GAAU32B,EAAMoQ,SAKzBo+G,EAAan2H,OAAS,IACtBw4H,EAAcA,EAAcx4H,QAAUm2H,EAAa,GAEnD/pH,GADA0sH,EAAe3C,EAAa,GAAM,IAAQ,QACvB51H,EAAIu4H,EAAWh3H,MAC9Bq0H,EAAan2H,OAAS,GACtBy2H,EAAiBN,EAAa,GAAM,IAAQ,OAC5CoC,EAAgBO,EAAWt4H,EAAIi2H,EAAaj2H,EAAIi2H,EAAa50H,OACzDmE,KAAK6G,IAAI0rH,EAAgBpC,EAAa,GAAGlnH,WAAaonH,EACtDjqH,EAAQ7C,KAAKyvH,4BAA4B7C,EAAcoC,EAAensH,EAAOosH,GAG7ED,EAAgBpC,EAAa,GAAGlnH,UAIpCspH,EAAgBpC,EAAa,GAAGlnH,UAGxC1F,KAAK6uH,eAAeI,EAAe,YACnCA,EAAcA,EAAcx4H,SAAY8D,IAAK6D,EAAOsH,SAAU,GAC9D7C,EAAQrB,EAAOxK,EAAIwK,EAAOjJ,MAAQsK,IAAUA,EAAQrB,EAAOxK,EAAIwK,EAAOjJ,MAAQsK,EAC9E,IAAIwM,EACJ,GAAIw9G,EAAgBp2H,OAAS,EAAG,CAO5B,GANA+4H,EAAkB3C,EAAgB,GAAM,IAAQ,OAChDhqH,EAAQ2sH,EAAcx4H,EAAIw4H,EAAcj3H,MAAQsK,EAAQ2sH,EAAcx4H,EAAIw4H,EAAcj3H,MAAQsK,EAC5FgqH,EAAgBp2H,OAAS,IAEzB4Y,GADA69G,EAAiBL,EAAgB,GAAM,IAAQ,QAC3B51H,EAAIu4H,EAAcv4H,EAAIu4H,EAAcl3H,QAExDs0H,EAAan2H,OAAS,EACtB,GAAIgG,KAAK6G,IAAIupH,EAAgB,GAAGnnH,SAAWknH,EAAa,GAAGlnH,WAAaonH,EAAiB,CACrF,IAAIqC,EAAkB1yH,KAAK6G,IAAIupH,EAAgB,GAAGnnH,SAAWknH,EAAa,GAAGlnH,UAAY,EACxFmnH,EAAgB,GAAGnnH,SAAWknH,EAAa,GAAGlnH,SAC3CspH,GAAiBG,EAAkBH,GAAiBG,EACxDF,EAAcA,EAAcx4H,QAAUo2H,EAAgB,QAEzB,IAAxBD,EAAan2H,SAClB84H,OAAat1H,EACbg1H,EAAc1oH,OAAO,EAAG,GACxB0oH,EAAcA,EAAcx4H,QAAUo2H,EAAgB,GACtDmC,EAAgB3/G,QAIpB2/G,EAAgB3/G,EAChB4/G,EAAcA,EAAcx4H,QAAUo2H,EAAgB,GAEtDA,EAAgBp2H,OAAS,GAAKy2H,EAAaj2H,EAAIu4H,EAAcv4H,EAAIu4H,EAAcl3H,SAC/EuK,EAAQ7C,KAAK0vH,+BAA+B7C,EAAiBx9G,EAAMxM,EAAOosH,EAAenC,IAGjG,GAAImC,EAAcx4H,OAAS,EAAG,CAC1BuJ,KAAK2vH,iBAAiBzwH,EAASmsD,EAAG4jE,EAAe5C,EAAOxpH,GACxD,IAAI+sH,EAAgB,EAChBvD,IACAuD,EAAgBvE,EAAMp0H,GAEtBs4H,EACAnD,EAAan8G,OAAS++G,EAAgBvyH,KAAK6G,IAAI9B,EAAOvK,EAAI24H,EAAgBL,EAAWt4H,EAAIs4H,EAAWj3H,QAAUs3H,EAEzGJ,IACLpD,EAAan8G,OAASxT,KAAK6G,IAAI9B,EAAOvK,EAAIuK,EAAOlJ,OAASs3H,EAAgBJ,EAAcv4H,GAAK+3H,EAAgBY,GAEjHxD,EAAaxpD,SAAU,IAM/BwoD,EAASh7E,UAAUi/E,iBAAmB,SAAUnwH,EAASmsD,EAAG4jE,EAAe5C,EAAOtpH,GAC9E,IAAIrM,EACA+6B,EACAC,EACJ,IAAK26F,EACD,IAAK31H,EAAI,EAAGA,EAAIu4H,EAAcx4H,OAAS,EAAGC,IAAK,CAC3C,IAAIm5H,EAAOZ,EAAcv4H,GAAG6D,eAAeyZ,GACvC+gB,GAAWk6F,EAAcv4H,GAAM,IAAE8X,SAAaygH,EAAcv4H,GAAM,IAAQ,OAC1E+B,EAAOw2H,EAAcv4H,EAAI,GAAG6D,eAAeyZ,GAC3C+gB,GAAWk6F,EAAcv4H,EAAI,GAAM,IAAE8X,SAAaygH,EAAcv4H,EAAI,GAAM,IAAQ,OACtF+6B,GAAUz6B,EAAG64H,EAAK74H,EAAI64H,EAAKt3H,MAAOtB,EAAG8L,EAAM,IAC3C2uB,GAAQ16B,EAAGyB,EAAKzB,EAAGC,EAAG8L,EAAM,IAC5B/C,KAAK8vH,mBAAmBr+F,EAAOC,EAAK25B,EAAGrrD,KAAKmiB,qBAAsBjjB,EAAQmjB,SAASxc,aAO/FulH,EAASh7E,UAAUu/E,iBAAmB,SAAUzwH,EAASmsD,EAAG0kE,EAAsB1D,EAAOxpH,GACrF,IAAI4uB,EACAC,EACJ,IAAK26F,EACD,IAAK,IAAI31H,EAAI,EAAGA,EAAIq5H,EAAqBt5H,OAAS,EAAGC,IAAK,CACtD,IAAIm5H,EAAOE,EAAqBr5H,GAAG6D,eAAeyZ,GAC9C+gB,GAAWg7F,EAAqBr5H,GAAM,IAAE8X,SAAauhH,EAAqBr5H,GAAM,IAAQ,OACxF+B,EAAOs3H,EAAqBr5H,EAAI,GAAG6D,eAAeyZ,GAClD+gB,GAAWg7F,EAAqBr5H,EAAI,GAAM,IAAE8X,SAC1CuhH,EAAqBr5H,EAAI,GAAM,IAAQ,OAC7C+6B,GAAUz6B,EAAG6L,EAAQ,GAAI5L,EAAG44H,EAAK54H,EAAI44H,EAAKv3H,QAC1Co5B,GAAQ16B,EAAG6L,EAAQ,GAAI5L,EAAGwB,EAAKxB,GAC/B+I,KAAK8vH,mBAAmBr+F,EAAOC,EAAK25B,EAAGrrD,KAAKmiB,qBAAsBjjB,EAAQmjB,SAASxc,aAO/FulH,EAASh7E,UAAUg+E,kBAAoB,SAAUlvH,EAASikE,EAAU6sD,EAAY7D,EAAgBE,EAAOjuH,GACnG4B,KAAK6uH,eAAemB,EAAY,UAChC,IAEIhG,EACAC,EAHAzoH,EAASuzB,GAAU32B,EAAMoQ,SACzBxL,EAASgtH,EAAW,GAGpB9C,EAAgBlqH,EAAa,OAAExB,OAC/ByuH,KACJA,EAAUn5H,KAAKk5H,EAAW,IAC1B,IAAIt5H,EAEJ,IAAKA,EAAI,EAAGA,EAAIs5H,EAAWv5H,OAAQC,IACjBs5H,EAAWt5H,GAAS,OAAE8K,OACrBjJ,QAAU20H,EAAa30H,OAClC03H,EAAUn5H,KAAKk5H,EAAWt5H,IAGlC,IAAK21H,EAID,IAHArC,GAAYhzH,EAAGwK,EAAOxK,EAAIgM,EAAOiN,OAAQhZ,EAAGuK,EAAOvK,EAAI,IACvDgzH,GAAUjzH,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAQyK,EAAOiN,OAAQhZ,EAAGuK,EAAOvK,EAAI,IACpE+I,KAAK8vH,mBAAmB9F,EAASC,EAAO9mD,EAAUnjE,KAAKmiB,qBAAsBjjB,EAAQmjB,SAASxc,WACzFnP,EAAI,EAAGA,EAAIu5H,EAAUx5H,OAAQC,IAE9BszH,GAAYhzH,GADZwK,EAAUyuH,EAAUv5H,GAAS,OAAE8K,QACTxK,EAAGC,EAAGuK,EAAOvK,EAAI,IACvCgzH,GAAUjzH,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAOtB,EAAGuK,EAAOvK,EAAI,IACpD+I,KAAK8vH,mBAAmB9F,EAASC,EAAO9mD,EAAUnjE,KAAKmiB,qBAAsBjjB,EAAQmjB,SAASxc,WAGtGsmH,EAAel8G,OAASjN,EAAOiN,OAC/Bk8G,EAAevpD,SAAU,GAK7BwoD,EAASh7E,UAAUi+E,mBAAqB,SAAUnvH,EAASikE,EAAU+sD,EAAa9D,EAAcC,EAAOjuH,GACnG4B,KAAK6uH,eAAeqB,EAAa,UACjC,IAGIz+F,EACAC,EAJAlwB,EAASuzB,GAAU32B,EAAMoQ,SACzBxL,EAASktH,EAAY,GACrBhD,EAAgBlqH,EAAa,OAAExB,OAG/ByuH,KACJA,EAAUn5H,KAAKo5H,EAAY,IAC3B,IAAIx5H,EAEJ,IAAKA,EAAI,EAAGA,EAAIw5H,EAAYz5H,OAAQC,IAClBw5H,EAAYx5H,GAAS,OAAE8K,OACtBlJ,SAAW40H,EAAa50H,QACnC23H,EAAUn5H,KAAKo5H,EAAYx5H,IAGnC,IAAK21H,EAID,IAHA56F,GAAUz6B,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAQ,GAAItB,EAAGuK,EAAOvK,EAAI+L,EAAOiN,QAChEyhB,GAAQ16B,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAQ,GAAItB,EAAGuK,EAAOvK,EAAI+L,EAAOiN,OAASzO,EAAOlJ,QAC9E0H,KAAK8vH,mBAAmBr+F,EAAOC,EAAKyxC,EAAUnjE,KAAKmiB,qBAAsBjjB,EAAQmjB,SAASxc,WACrFnP,EAAI,EAAGA,EAAIu5H,EAAUx5H,OAAQC,IAE9B+6B,GAAUz6B,GADVwK,EAAUyuH,EAAUv5H,GAAS,OAAE8K,QACXxK,EAAIwK,EAAOjJ,MAAQ,GAAItB,EAAGuK,EAAOvK,GACrDy6B,GAAQ16B,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAQ,GAAItB,EAAGuK,EAAOvK,EAAIuK,EAAOlJ,QAC9D0H,KAAK8vH,mBAAmBr+F,EAAOC,EAAKyxC,EAAUnjE,KAAKmiB,qBAAsBjjB,EAAQmjB,SAASxc,WAGlGumH,EAAan8G,OAASjN,EAAOiN,OAC7Bm8G,EAAaxpD,SAAU,GAK3BwoD,EAASh7E,UAAU0/E,mBAAqB,SAAUr+F,EAAOC,EAAKyxC,EAAU54B,EAAK1kC,GACzE,IAAIutB,EAEA+0D,EACAvoF,EAAU,IAAIkP,GACd83B,KACJnV,GACIz6B,GAAIy6B,EAAMz6B,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MACxC1lB,GAAIw6B,EAAMx6B,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,OAE5C+U,GACI16B,GAAI06B,EAAI16B,EAAI6O,EAAUi8C,IAAMj8C,EAAU8W,MACtC1lB,GAAIy6B,EAAIz6B,EAAI4O,EAAUk8C,IAAMl8C,EAAU8W,OAEtC8U,EAAMz6B,IAAM06B,EAAI16B,GAChBo8B,EAAI,KAAO3B,EAAMz6B,EAAI,GAAK,KAAOy6B,EAAMx6B,EAAI,GAAK,IAAMw6B,EAAMz6B,EAAI,IAAMy6B,EAAMx6B,EACxE,KAAOw6B,EAAMz6B,EAAI,GAAK,KAAOy6B,EAAMx6B,EAAI,GAAK,MAAay6B,EAAI16B,EAAI,GAAK,KACrE06B,EAAIz6B,EAAI,GAAK,KAAOy6B,EAAI16B,EAAI,IAAM06B,EAAIz6B,EAAI,MAC1Cy6B,EAAI16B,EAAI,GAAK,KAAO06B,EAAIz6B,EAAI,GAAK,IACtCkxF,GACIv1E,YAAc5b,EAAGy6B,EAAMz6B,EAAI,EAAGC,EAAGw6B,EAAMx6B,EAAI,GAC3C0U,UAAY3U,EAAGy6B,EAAMz6B,EAAI,EAAGC,EAAGw6B,EAAMx6B,EAAI,GACzC4vC,OAAQ,UACR5tB,YAAa,EAAGF,KAAM,UAAWiuB,UAAW,GAAIzuC,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAGsvC,OAAQ,EACnGC,OAAQ,EAAGnJ,SAAS,EAAMtB,QAAS,EAAGz8B,GAAIua,MAE9Cxa,EAAQxJ,KAAOg9B,EACfwT,EAAQxwC,KAAOwJ,EAAQxJ,KACvBwwC,EAAQpvC,MAAQ,EAChBovC,EAAQE,OAAS,EACjBF,EAAQG,OAAS,EACjBH,EAAQ5vC,EAAI,EACZ4vC,EAAQ3vC,EAAI,EACZ2vC,EAAQtuC,OAAS,EACjBsuC,EAAQruC,MAAQ,EAChBquC,EAAQ/mC,GAAKua,KACbpa,KAAKd,QAAQkjB,gBAAgBiuC,SAAS8S,EAAUv8B,GAChD5mC,KAAKg0B,KAAKl9B,KAAKqxF,GACfnoF,KAAKd,QAAQkjB,gBAAgB+yC,SAASgO,EAAUnjE,KAAKg0B,KAAKi6C,OAC1Dka,GACIv1E,YAAc5b,EAAG06B,EAAI16B,EAAI,EAAGC,EAAGy6B,EAAIz6B,EAAI,GACvC0U,UAAY3U,EAAG06B,EAAI16B,EAAI,EAAGC,EAAGy6B,EAAIz6B,EAAI,GACrC4vC,OAAQ,UACR5tB,YAAa,EAAGF,KAAM,UAAWiuB,UAAW,GAAIzuC,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAGsvC,OAAQ,EACnGC,OAAQ,EAAGnJ,SAAS,EAAMtB,QAAS,EAAGz8B,GAAIG,KAAKmiB,qBAAqBtiB,GAAK,WAE7EG,KAAKg0B,KAAKl9B,KAAKqxF,GACfnoF,KAAKd,QAAQkjB,gBAAgB+yC,SAASgO,EAAUnjE,KAAKg0B,KAAKi6C,SAG1D76C,EAAI,KAAO3B,EAAMz6B,EAAI,GAAK,KAAOy6B,EAAMx6B,EAAI,GAAK,KAAOw6B,EAAMz6B,EAAI,IAAMy6B,EAAMx6B,EACzE,MAAQw6B,EAAMz6B,EAAI,GAAK,KAAOy6B,EAAMx6B,EAAI,GAAK,MAAay6B,EAAI16B,EAAI,GAAK,KACtE06B,EAAIz6B,EAAI,GAAK,KAAOy6B,EAAI16B,EAAI,IAAM06B,EAAIz6B,EACvC,MAAQy6B,EAAI16B,EAAI,GAAK,KAAO06B,EAAIz6B,EAAI,GAAK,IAC7C2I,EAAQxJ,KAAOg9B,EACfwT,EAAQxwC,KAAOg9B,EACfwT,EAAQpvC,MAAQ,EAChBovC,EAAQE,OAAS,EACjBF,EAAQG,OAAS,EACjBH,EAAQ5vC,EAAI,EACZ4vC,EAAQ3vC,EAAI,EACZ2vC,EAAQtuC,OAAS,EACjBsuC,EAAQruC,MAAQ,EAChBquC,EAAQ/mC,GAAKua,KACbpa,KAAKd,QAAQkjB,gBAAgBiuC,SAAS8S,EAAUv8B,GAChDuhD,GACIvqD,SAAS,EAAMtB,QAAS,EAAGz8B,GAAIua,KAC/BxH,YAAc5b,EAAGy6B,EAAMz6B,EAAI,EAAGC,EAAGw6B,EAAMx6B,EAAI,GAC3C0U,UAAY3U,EAAGy6B,EAAMz6B,EAAI,EAAGC,EAAGw6B,EAAMx6B,EAAI,GACzC4vC,OAAQ,UACR5tB,YAAa,EAAGF,KAAM,UAAWiuB,UAAW,IAAKzuC,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAGsvC,OAAQ,EACpGC,OAAQ,GAEZ/mC,KAAKg0B,KAAKl9B,KAAKqxF,GACfnoF,KAAKd,QAAQkjB,gBAAgB+yC,SAASgO,EAAUnjE,KAAKg0B,KAAKi6C,OAC1Dka,GACI5vF,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAGsvC,OAAQ,EACnDC,OAAQ,EAAGnJ,SAAS,EAAMtB,QAAS,EAAGz8B,GAAIua,KAC1CxH,YAAc5b,EAAG06B,EAAI16B,EAAI,EAAGC,EAAGy6B,EAAIz6B,EAAI,GACvC0U,UAAY3U,EAAG06B,EAAI16B,EAAI,EAAGC,EAAGy6B,EAAIz6B,EAAI,GACrC4vC,OAAQ,UACR5tB,YAAa,EAAGF,KAAM,UAAWiuB,UAAW,KAEhDhnC,KAAKg0B,KAAKl9B,KAAKqxF,GACfnoF,KAAKd,QAAQkjB,gBAAgB+yC,SAASgO,EAAUnjE,KAAKg0B,KAAKi6C,QAE9Dka,GACIv1E,YAAc5b,EAAGy6B,EAAMz6B,EAAGC,EAAGw6B,EAAMx6B,GACnC0U,UAAY3U,EAAG06B,EAAI16B,EAAGC,EAAGy6B,EAAIz6B,GAAK4vC,OAAQ,UAAW5tB,YAAa,EAAGF,KAAM,UAC3EiuB,UAAW,IAAKzuC,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAGsvC,OAAQ,EACnEC,OAAQ,EAAGnJ,SAAS,EAAMtB,QAAS,EAAGz8B,GAAIua,MAE9Cpa,KAAKg0B,KAAKl9B,KAAKqxF,GACfnoF,KAAKd,QAAQkjB,gBAAgB+yC,SAASgO,EAAUnjE,KAAKg0B,KAAKi6C,QAM9Dm9C,EAASh7E,UAAUk9E,iBAAmB,SAAUJ,EAAc1rH,EAAQ2uH,GAClE,IAAI3E,EACJ,OAAQ2E,GACJ,IAAK,OACD3E,GACI/5F,OAASz6B,EAAIk2H,EAAc,EAAGj2H,EAAGwF,KAAKyK,IAAIgmH,EAAaj2H,EAAGuK,EAAOvK,IACjEy6B,KAAO16B,EAAIk2H,EAAc,EAAGj2H,EAAGwF,KAAKmJ,IAAIsnH,EAAaj2H,EAAIi2H,EAAa50H,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,SAChGyD,QAASmxH,EAAal2H,EAAIwK,EAAOxK,EAAGgF,QAAS,EAAGH,KAAM,aAE1D,MACJ,IAAK,QACD2vH,GACI3vH,KAAM,YACN41B,OAASz6B,EAAIk2H,EAAal2H,EAAIk2H,EAAa30H,MAAQtB,EAAGwF,KAAKyK,IAAIgmH,EAAaj2H,EAAGuK,EAAOvK,IACtF8E,QAASmxH,EAAal2H,EAAIk2H,EAAa30H,MAAQiJ,EAAOxK,EAAIwK,EAAOjJ,MACjEyD,QAAS,EACT01B,KACI16B,EAAIk2H,EAAal2H,EAAIk2H,EAAa30H,MAClCtB,EAAGwF,KAAKmJ,IAAIsnH,EAAaj2H,EAAIi2H,EAAa50H,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,UAG5E,MACJ,IAAK,MACDkzH,GACIxvH,QAASkxH,EAAaj2H,EAAIuK,EAAOvK,EAAG8E,QAAS,EAAGF,KAAM,YACtD41B,OAASz6B,EAAIyF,KAAKyK,IAAIgmH,EAAal2H,EAAGwK,EAAOxK,GAAKC,EAAGi2H,EAAaj2H,GAClEy6B,KAAO16B,EAAIyF,KAAKmJ,IAAIsnH,EAAal2H,EAAIk2H,EAAa30H,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OAAStB,EAAGi2H,EAAaj2H,IAExG,MACJ,IAAK,SACDu0H,GACI3vH,KAAM,YAAaG,QAASkxH,EAAaj2H,EAAIi2H,EAAa50H,OAASkJ,EAAOvK,EAAIuK,EAAOlJ,OAAQyD,QAAS,EACtG21B,KACI16B,EAAIyF,KAAKmJ,IAAIsnH,EAAal2H,EAAIk2H,EAAa30H,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OACpEtB,EAAGi2H,EAAaj2H,EAAIi2H,EAAa50H,QAErCm5B,OAASz6B,EAAIyF,KAAKyK,IAAIgmH,EAAal2H,EAAGwK,EAAOxK,GAAKC,EAAGi2H,EAAaj2H,EAAIi2H,EAAa50H,SAEvF,MACJ,IAAK,YACDkzH,GACI/5F,OAASz6B,EAAIyF,KAAKyK,IAAIgmH,EAAal2H,EAAGwK,EAAOxK,GAAKC,EAAGi2H,EAAaj2H,EAAIi2H,EAAa50H,QACnFo5B,KACI16B,EAAIyF,KAAKmJ,IAAIsnH,EAAal2H,EAAIk2H,EAAa30H,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OACpEtB,EAAGi2H,EAAaj2H,EAAIi2H,EAAa50H,QAErC0D,QAASkxH,EAAaj2H,EAAIi2H,EAAa50H,OAASkJ,EAAOvK,EAAG8E,QAAS,EAAGF,KAAM,aAEhF,MACJ,IAAK,YACD2vH,GACI/5F,OAASz6B,EAAIyF,KAAKyK,IAAIgmH,EAAal2H,EAAGwK,EAAOxK,GAAKC,EAAGi2H,EAAaj2H,GAClEy6B,KAAO16B,EAAIyF,KAAKmJ,IAAIsnH,EAAal2H,EAAIk2H,EAAa30H,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OAAStB,EAAGi2H,EAAaj2H,GACpG+E,QAASkxH,EAAaj2H,EAAIuK,EAAOvK,EAAIuK,EAAOlJ,OAAQyD,QAAS,EAAGF,KAAM,aAE1E,MACJ,IAAK,YACD2vH,GACI/5F,OAASz6B,EAAIk2H,EAAal2H,EAAIk2H,EAAa30H,MAAQtB,EAAGwF,KAAKyK,IAAIgmH,EAAaj2H,EAAGuK,EAAOvK,IACtFy6B,KACI16B,EAAIk2H,EAAal2H,EAAIk2H,EAAa30H,MAClCtB,EAAGwF,KAAKmJ,IAAIsnH,EAAaj2H,EAAIi2H,EAAa50H,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,SAExEyD,QAASmxH,EAAal2H,EAAIk2H,EAAa30H,MAAQiJ,EAAOxK,EAAGgF,QAAS,EAAGH,KAAM,aAE/E,MACJ,IAAK,YACD2vH,GACI/5F,OAASz6B,EAAIk2H,EAAc,EAAGj2H,EAAIwF,KAAKyK,IAAIgmH,EAAaj2H,EAAGuK,EAAOvK,IAClEy6B,KAAO16B,EAAIk2H,EAAc,EAAGj2H,EAAGwF,KAAKmJ,IAAIsnH,EAAaj2H,EAAIi2H,EAAa50H,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,SAChGyD,QAASmxH,EAAal2H,EAAIwK,EAAOxK,EAAIwK,EAAOjJ,MAAOyD,QAAS,EAAGH,KAAM,aAEzE,MACJ,IAAK,UACD2vH,GACI/5F,OAASz6B,EAAIk2H,EAAal2H,EAAIk2H,EAAa30H,MAAQ,EAAItB,EAAIwF,KAAKyK,IAAIgmH,EAAaj2H,EAAGuK,EAAOvK,IAC3Fy6B,KACI16B,EAAIk2H,EAAal2H,EAAIk2H,EAAa30H,MAAQ,EAC1CtB,EAAGwF,KAAKmJ,IAAIsnH,EAAaj2H,EAAIi2H,EAAa50H,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,SAExEyD,QAASmxH,EAAal2H,EAAIk2H,EAAa30H,MAAQ,GAAKiJ,EAAOxK,EAAIwK,EAAOjJ,MAAQ,GAAIyD,QAAS,EAAGH,KAAM,eAExG,MACJ,IAAK,UACD2vH,GACI/5F,OAASz6B,EAAIyF,KAAKyK,IAAIgmH,EAAal2H,EAAGwK,EAAOxK,GAAKC,EAAGi2H,EAAaj2H,EAAIi2H,EAAa50H,OAAS,GAC5Fo5B,KACI16B,EAAIyF,KAAKmJ,IAAIsnH,EAAal2H,EAAIk2H,EAAa30H,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OACpEtB,EAAGi2H,EAAaj2H,EAAIi2H,EAAa50H,OAAS,GAE9C0D,QAASkxH,EAAaj2H,EAAIi2H,EAAa50H,OAAS,GAAKkJ,EAAOvK,EAAIuK,EAAOlJ,OAAS,GAAIyD,QAAS,EAAGF,KAAM,eAIlH,OAAO2vH,GAMXJ,EAASh7E,UAAUu4B,UAAY,SAAUzpE,EAAS1H,GAC9C,IACImxE,EADe3oE,KAAKd,QAAQq8B,aACHotC,UACzBpwE,EAAQf,GAASmxE,GAAa,GAClC,OAAIpwE,GAAUowE,EAAY,EACfnxE,EAAQmxE,EAAYpwE,EAGpBf,EAAQe,GAMvB6yH,EAASh7E,UAAUi9E,YAAc,SAAUzxG,EAAW4C,EAAgBxb,GAClE,OACIhD,KAAKd,QAAQwf,cAAc5E,MAAMrjB,QAAUuJ,KAAKd,QAAQwf,cAAc5E,MAAM,GAAGja,KAAOmD,EAAOnD,IAUrGurH,EAASh7E,UAAU+8E,UAAY,SAAUrzC,EAAev5E,EAAMgO,EAAOswF,EAAUkvB,GAK3E,IAAK,IAHDqC,EACA5uH,EAFAsY,KAGA23E,EAAQ3X,EAAcyX,UAAUw8B,EAAclvB,EAAWtwF,GACpD7X,EAAI,EAAGA,EAAI+6F,EAAMh7F,OAAQC,IAAK,CACnC,IAAIm8F,EAAOpB,EAAM/6F,GACjB,GAAIm8F,EAAKh+D,QAAQp+B,OAAS,EACtB,IAAK,IAAIJ,EAAI,EAAGA,EAAIw8F,EAAKh+D,QAAQp+B,OAAQJ,IACrC+5H,EAAKv9B,EAAKh+D,QAAQx+B,GACZ2J,KAAKd,QAAQ0c,UAAUw0G,EAAGvwH,cAAe8T,KAAcy8G,EAAGxyF,SACV,aAA7C59B,KAAKd,QAAQ0c,UAAUw0G,EAAGvwH,IAAIzB,MAAMvC,MAA0BmE,KAAKd,QAAQ0c,UAAUw0G,EAAGvwH,IAAU,QACrGG,KAAKd,QAAQ0c,UAAUw0G,EAAGvwH,IAAW,SAAOG,KAAKd,QAAQ0c,UAAUw0G,EAAGvwH,IAAY,WACpF2B,EAASuzB,GAAUq7F,IACQ,IAAvBt2G,EAAMwG,QAAQ8vG,IAAcpwH,KAAKuoH,eAAeh6G,EAAO/M,IACvDsY,EAAMhjB,KAAKs5H,GAEXrC,GAAeA,EAAYztG,QAAQ8vG,IAAOpwH,KAAKuoH,eAAe1pB,EAAUr9F,IACxEusH,EAAYj3H,KAAKs5H,IAMrC,OAAOt2G,GAEXsxG,EAASh7E,UAAUm4E,eAAiB,SAAUh6G,EAAO/M,GACjD,OAAWA,EAAOxK,EAAKuX,EAAMvX,EAAIuX,EAAMhW,OAAYgW,EAAMvX,EAAKwK,EAAOxK,EAAIwK,EAAOjJ,OACxEiJ,EAAOvK,EAAKsX,EAAMtX,EAAIsX,EAAMjW,QAAciW,EAAMtX,EAAKuK,EAAOvK,EAAIuK,EAAOlJ,QAEnF8yH,EAASh7E,UAAUjuB,mBAAqB,WACpC,OAAOniB,KAAKd,QAAQkjB,gBAAgB21C,iBAMxCqzD,EAASh7E,UAAUk7C,iBAAmB,SAAUpsF,GAC5C,IAAI0sG,EAAgB5rG,KAAKmiB,qBAAqB8L,eAAe,kBACzD+F,EAAOh0B,KAAKmiB,qBAAqB8L,eAAe,aAChD29E,GACAA,EAAc3sF,WAAW8f,YAAY6sE,GAErC53E,GACAA,EAAK/U,WAAW8f,YAAY/K,IAMpCo3F,EAASh7E,UAAUy+E,eAAiB,SAAUt0H,EAAKoL,EAAO0qH,GACtD,IAAI35H,EACAL,EACAsa,EACJ,GAAI0/G,EACA,IAAK35H,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IACxB,IAAKL,EAAIK,EAAI,EAAGL,EAAIkE,EAAI9D,OAAQJ,IACxBkE,EAAI7D,GAAGiP,GAASpL,EAAIlE,GAAGsP,KACvBgL,EAAOpW,EAAI7D,GACX6D,EAAI7D,GAAK6D,EAAIlE,GACbkE,EAAIlE,GAAKsa,QAMrB,IAAKja,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IACxB,IAAKL,EAAIK,EAAI,EAAGL,EAAIkE,EAAI9D,OAAQJ,IACxBkE,EAAI7D,GAAGiP,GAASpL,EAAIlE,GAAGsP,KACvBgL,EAAOpW,EAAI7D,GACX6D,EAAI7D,GAAK6D,EAAIlE,GACbkE,EAAIlE,GAAKsa,IAS7By6G,EAASh7E,UAAU8+E,6BAA+B,SAAUxC,EAAe4D,EAAevtH,EAAKksH,GAC3F,IAAIsB,EACArD,EACA79G,EACA3Y,EACJ,IAAKA,EAAI,EAAGA,EAAIg2H,EAAcj2H,SAC1B85H,EAAe7D,EAAch2H,EAAI,GAAM,IAAQ,OAC/Cw2H,EAAiBR,EAAch2H,GAAM,IAAQ,OAC7C2Y,EAAOkhH,EAAWv5H,EAAIk2H,EAAal2H,EAAIk2H,EAAa30H,MAChDkE,KAAK6G,IAAI+L,EAAOihH,IAAkB,GAJJ55H,IAK9Bu4H,EAAcA,EAAcx4H,QAAUi2H,EAAch2H,GAChDw2H,EAAaj2H,EAAI8L,IACjBA,EAAMmqH,EAAaj2H,GAO/B,OAAO8L,GAKXqoH,EAASh7E,UAAUg/E,8BAAgC,SAAUzC,EAAgB2D,EAAevtH,EAAKksH,EAAenC,GAC5G,IACI9pH,EACAkqH,EACAqD,EACAlhH,EAJAmhH,EAAiB7D,EAAe,GAAGjnH,SAKvC,GAAIjJ,KAAK6G,IAAIgtH,EAAgBE,IAAmB1D,EAC5C,IAAK,IAAIp2H,EAAI,EAAGA,EAAIi2H,EAAel2H,OAAS,IACxCuM,EAAS2pH,EAAej2H,GAAG6D,IAC3B2yH,EAAiBP,EAAej2H,EAAI,GAAM,IAAQ,OAClD65H,EAAcvtH,EAAa,OAC3BqM,EAAO69G,EAAal2H,EAAIu5H,EAAWv5H,EAAIu5H,EAAWh4H,MAC9CkE,KAAK6G,IAAI+L,EAAOihH,IAAkB,GALK55H,IAMvCu4H,EAAcA,EAAcx4H,QAAUk2H,EAAej2H,EAAI,GACrD65H,EAAWt5H,EAAI8L,IACfA,EAAMwtH,EAAWt5H,GAQjC,OAAO8L,GAEXqoH,EAASh7E,UAAUq/E,4BAA8B,SAAU7C,EAAc0D,EAAeztH,EAAOosH,GAI3F,IAAK,IAHDsB,EACArD,EACA79G,EACK3Y,EAAI,EAAGA,EAAIk2H,EAAan2H,SAC7B85H,EAAe3D,EAAal2H,EAAI,GAAM,IAAQ,OAC9Cw2H,EAAiBN,EAAal2H,GAAM,IAAQ,OAC5C2Y,EAAOkhH,EAAWt5H,EAAIi2H,EAAaj2H,EAAIi2H,EAAa50H,OAChDmE,KAAK6G,IAAI+L,EAAOihH,IAAkB,GAJD55H,IAKjCu4H,EAAcA,EAAcx4H,QAAUm2H,EAAal2H,GAC/Cw2H,EAAal2H,EAAIk2H,EAAa30H,MAAQsK,IACtCA,EAAQqqH,EAAal2H,EAAIk2H,EAAa30H,OAOlD,OAAOsK,GAKXuoH,EAASh7E,UAAUs/E,+BAAiC,SAAU7C,EAAiByD,EAAeztH,EAAOosH,EAAenC,GAChH,IACI9pH,EACAkqH,EACAqD,EACAlhH,EAJAmhH,EAAiB3D,EAAgB,GAAGnnH,SAKxC,GAAIjJ,KAAK6G,IAAIgtH,EAAgBE,IAAmB1D,EAC5C,IAAK,IAAIp2H,EAAI,EAAGA,EAAIm2H,EAAgBp2H,OAAS,IACzCuM,EAAS6pH,EAAgBn2H,GAAG6D,IAC5B2yH,EAAiBL,EAAgBn2H,EAAI,GAAM,IAAQ,OACnD65H,EAAcvtH,EAAa,OAC3BqM,EAAO69G,EAAaj2H,EAAIs5H,EAAWt5H,EAAIs5H,EAAWj4H,OAC9CmE,KAAK6G,IAAI+L,EAAOihH,IAAkB,GALM55H,IAMxCu4H,EAAcA,EAAcx4H,QAAUo2H,EAAgBn2H,EAAI,GACtD65H,EAAWv5H,EAAIu5H,EAAWh4H,MAAQsK,IAClCA,EAAQ0tH,EAAWv5H,EAAIu5H,EAAWh4H,OAQlD,OAAOsK,GAMXuoH,EAASh7E,UAAUgzB,SAAW,WAC1B,IAAID,EAOJ,OANInjE,KAAKd,QAAQq8B,aAAa/nB,YAAcs/B,kBAAgBu4C,gBACxDloB,EAAWn1C,SAASmb,gBAAgB,6BAA8B,MACzDvE,aAAa,KAAM,kBAC5Bu+B,EAASv+B,aAAa,iBAAkB,cACxC5kC,KAAKmiB,qBAAqB6c,YAAYmkC,IAEnCA,GAcXioD,EAASh7E,UAAUkZ,QAAU,aAQ7B8hE,EAASh7E,UAAUiZ,cAAgB,WAI/B,MAAO,YAEJ+hE,KCrwCP1qG,GAA0B,WAK1B,SAASA,IACL1gB,KAAKywH,WAAY,EACjBzwH,KAAKwrB,cACLxrB,KAAK0wH,aAAe,EACpB1wH,KAAKq5E,UAAW,EAChBr5E,KAAK2wH,WAAa,EA0+BtB,OAt+BAjwG,EAAS0vB,UAAU0oD,YAAc,SAAU55F,GACvCA,EAAQqqB,gBACJsyF,SAAS,EAAOD,SAAS,EAAOpyF,aAAc,KAC9C1yB,KAAMoI,EAAQse,gBAAgBmpF,KAAKznG,GAAU28F,KAAM+0B,SAAU90B,KAAM80B,SACnEzvG,iBAAkBjiB,EAAQiiB,iBAAiBwlF,KAAKznG,GAAUye,eAAgBze,EAAQye,eAAegpF,KAAKznG,GACtG2xH,OAAQ,KAAMC,aAAeC,aAAe3wB,WAAYlhG,EAAQqqB,eAAiBrqB,EAAQqqB,eAAe62E,gBAAanmG,IAI7HymB,EAAS0vB,UAAU5yB,gBAAkB,SAAUJ,EAAOle,GAClD,IAAIktE,EAAc,KAElB,GAAIltE,EAAQqqB,eAAesnG,OAAQ,CAE/B,IAAsB,IADT3xH,EAAQqqB,eAAesnG,OAAOzzG,GAChCgoD,OACP,OAmBR,GAhBIlmE,EAAQqqB,gBAAkBrqB,EAAQqqB,eAAeqyF,SAAW18G,EAAQqqB,eAAeC,gBACnF4iD,EAAcltE,EAAQqqB,eAAeC,cACrB/wB,KACR2zE,EAAYa,WACAb,EAAY3zE,KACdw0E,SAAW,KACrBb,EAAY3zE,KAAO2kB,EACnBA,EAAM6vD,SAAWb,IAIrBA,EAAY3zE,KAAO2kB,EACnBA,EAAM6vD,SAAWb,IAGzBltE,EAAQqqB,eAAeC,aAAepM,EAClCle,EAAQqqB,eAAe62E,WAAY,CACnC,GAAmB,eAAfhjF,EAAMvhB,MAAwC,aAAfuhB,EAAMvhB,KAAqB,CAC1D,IAAI8J,EAAuB,aAAfyX,EAAMvhB,KAClBmE,KAAKgxH,cAAcrrH,GAElB3F,KAAKq5E,UAAgC,IAApBr5E,KAAK2wH,aACnB3wH,KAAK0wH,aAAexxH,EAAQqqB,eAAe62E,WAC3CpgG,KAAK0wH,eAGL1wH,KAAKqgG,WAAWnhG,EAAQqqB,eAAeC,aAActqB,EAAQqqB,eAAe62E,WAAYlhG,IAIpGc,KAAKixH,eAAe/xH,GACpBA,EAAQqqB,eAAeqyF,SAAU,EACjC18G,EAAQqqB,eAAesyF,SAAU,GAGrCn7F,EAAS0vB,UAAUiwD,WAAa,SAAU1vB,EAAMyvB,EAAYlhG,EAASgyH,GACjE,GAAIvgD,GAAQA,EAAK1D,SAAU,CACvB,GAAkB,eAAd0D,EAAK90E,MAAuC,aAAd80E,EAAK90E,KAAqB,CACxD,IAAI8J,EAAsB,eAAdgrE,EAAK90E,KACjBmE,KAAKgxH,cAAcrrH,GAElB3F,KAAKq5E,UAAgC,IAApBr5E,KAAK2wH,YACvBvwB,IAEe,IAAfA,GACI8wB,GACAlxH,KAAKmxH,kBAAkBxgD,EAAK1D,SAAU/tE,GAEtCA,EAAQqqB,eAAe62E,WAAapgG,KAAK0wH,eACzC1wH,KAAK0wH,aAAexxH,EAAQqqB,eAAe62E,mBAExCzvB,EAAK1D,UAEP0D,EAAK1D,UACVjtE,KAAKqgG,WAAW1vB,EAAK1D,SAAUmzB,EAAYlhG,EAASgyH,GAG5DlxH,KAAK2wH,WAAa,GAGtBjwG,EAAS0vB,UAAUkwD,aAAe,SAAUphG,GACxC,IAAIkyH,EAAQlyH,EAAQqqB,eACpB6nG,EAAM5nG,kBAAevvB,EACrBm3H,EAAMxV,SAAU,EAChBwV,EAAMvV,SAAU,EAChB77G,KAAK0wH,aAAe,EACpB1wH,KAAK2wH,WAAa,EAClBzxH,EAAQqqB,eAAeunG,aACvB5xH,EAAQqqB,eAAewnG,cAE3BrwG,EAAS0vB,UAAU4gF,cAAgB,SAAUrrH,GACzCA,EAAQ3F,KAAK2wH,aAAe3wH,KAAK2wH,aACzB3wH,KAAKq5E,SAAb1zE,GAAyBA,EAAwBA,GAErD+a,EAAS0vB,UAAU+gF,kBAAoB,SAAUxgD,EAAMzxE,GACjC,eAAdyxE,EAAK90E,MAAuC,aAAd80E,EAAK90E,OACnCmE,KAAKqxH,gBAAgBnyH,EAAQqqB,eAAeunG,UAAWngD,GACvD3wE,KAAKqxH,gBAAgBnyH,EAAQqqB,eAAewnG,UAAWpgD,IAEvDA,EAAK1D,UACLjtE,KAAKmxH,kBAAkBxgD,EAAK1D,SAAU/tE,IAG9CwhB,EAAS0vB,UAAUihF,gBAAkB,SAAUC,EAAU3gD,GACrD,GAAI2gD,EAAS76H,OACT,IAAK,IAAIC,EAAI,EAAGA,GAAK46H,EAAS76H,OAAQC,IAClC,GAAI46H,EAAS56H,GAAG4mB,aAAeqzD,EAAKrzD,YAAcg0G,EAAS56H,GAAG6mB,aAAeozD,EAAKpzD,WAAY,CAC1F+zG,EAAS/qH,OAAO7P,EAAG,GACnB,QAMhBgqB,EAAS0vB,UAAUyrD,KAAO,SAAU38F,GAChC,IAAIke,EAAQpd,KAAKuxH,aAAaryH,GAC1BsyH,EAAsB,EACtBp0G,IACuB,aAAnBA,EAAMC,UACa,aAAfD,EAAMvhB,MACN21H,IACAxxH,KAAKywH,WAAY,GAGjBzwH,KAAKyxH,UAAUr0G,EAAOle,GAEtBc,KAAKywH,YACLzwH,KAAK0xH,gBAAgBt0G,EAAOle,EAASsyH,GACrCxxH,KAAKywH,WAAY,IAIrBvxH,EAAQqqB,eAAesyE,KAAKz+E,KAIxCsD,EAAS0vB,UAAU6gF,eAAiB,SAAU/xH,GAC1C,IAGI8d,EACAkL,EAJA4oG,KACAC,KACAY,EAAYzyH,EAAQqqB,eAAeC,aAUvC,IAPAmoG,EAAYzyH,EAAQqqB,eAAeC,aAC/BtqB,EAAQqqB,eAAeqyF,SAAuD,IAA5C18G,EAAQqqB,eAAeunG,UAAUr6H,OACnEuJ,KAAK4xH,iBAAiBd,EAAWa,GAGjC3xH,KAAK4xH,iBAAiBb,EAAWY,GAE9BA,GAAaA,EAAU1kD,UAC1BjwD,EAAU20G,EAAU1kD,SACpBjtE,KAAK4xH,iBAAiBd,EAAW9zG,GACjC20G,EAAYA,EAAU1kD,SAG1B,IADA0kD,EAAYzyH,EAAQqqB,eAAeC,aAC5BmoG,GAAaA,EAAUl5H,MAC1ByvB,EAAUypG,EAAUl5H,KACpBuH,KAAK4xH,iBAAiBb,EAAW7oG,GACjCypG,EAAYA,EAAUl5H,KAE1ByG,EAAQqqB,eAAeunG,UAAYA,EACnC5xH,EAAQqqB,eAAewnG,UAAYA,GAEvCrwG,EAAS0vB,UAAUwhF,iBAAmB,SAAUjhD,EAAMp2E,GAC9CA,GAAoB,eAAbA,EAAIsB,MAAsC,aAAbtB,EAAIsB,MACxC80E,EAAK75E,MACDymB,WAAYhjB,EAAIgjB,WAAahjB,EAAIgjB,WAAa,KAC9CD,WAAY/iB,EAAI+iB,WAAa/iB,EAAI+iB,WAAa,KAC9CzhB,KAAMtB,EAAIsB,KAAOtB,EAAIsB,KAAO,KAC5BwhB,SAAU9iB,EAAI8iB,SAAW9iB,EAAI8iB,SAAW,QAIpDqD,EAAS0vB,UAAUshF,gBAAkB,SAAUt0G,EAAOle,EAASsyH,GAC3D,KAA+B,IAAxBA,GACHxxH,KAAKyxH,UAAUr0G,EAAOle,GAEH,gBADnBke,EAAQpd,KAAKuxH,aAAaryH,IAChBrD,KACN21H,IAEoB,aAAfp0G,EAAMvhB,MACX21H,IAGRA,EAAsB,GAE1B9wG,EAAS0vB,UAAUqhF,UAAY,SAAUr0G,EAAOle,GAC5C,IAAI3E,EACAs3H,EAKJ,GAJmB,oBAAfz0G,EAAMvhB,MAA6C,sBAAfuhB,EAAMvhB,MAA+C,2BAAfuhB,EAAMvhB,OAChFtB,EAAO6iB,EAAgB,WACvBy0G,EAAcz0G,EAAgB,YAEf,eAAfA,EAAMvhB,MAAwC,aAAfuhB,EAAMvhB,MACjCqD,EAAQqqB,eAAeunG,UAAUr6H,OAAS,EAAG,CAC7C,IAAIstB,EAAY7kB,EAAQqqB,eAAeunG,UAAUvqH,OAAO,EAAG,GAC3DrH,EAAQqqB,eAAewnG,UAAUxqH,OAAO,EAAG,EAAGwd,EAAU,IACxD8tG,EAAcz0G,EAAgB,WAKtC,OAFAle,EAAQyc,uBAAsB,GAC9Bzc,EAAQwY,gBAAkBC,gBAAc+I,SAChCtD,EAAMvhB,MACV,IAAK,kBACL,IAAK,QACL,IAAK,aACDmE,KAAK8xH,sBAAsBv3H,EAAK2E,GAChC,MACJ,IAAK,cACL,IAAK,SACDc,KAAK+xH,kBAAkBx3H,EAAK2E,EAASke,GACrC,MACJ,IAAK,kBACDpd,KAAKgyH,sBAAsBz3H,EAAK2E,EAASke,GACzC,MACJ,IAAK,oBACDpd,KAAKiyH,wBAAwB13H,EAAK2E,GAClC,MACJ,IAAK,kBACDc,KAAKkyH,sBAAsB90G,EAAOle,GAAS,GAC3C,MACJ,IAAK,oBACDke,EAAM+C,QAAS,EACfngB,KAAKmyH,wBAAwB/0G,EAAOle,GACpCke,EAAM+C,QAAS,EACf,MACJ,IAAK,yBACD/C,EAAM+C,QAAS,EACfngB,KAAKoyH,6BAA6Bh1G,EAAOle,GACzCke,EAAM+C,QAAS,EACf,MACJ,IAAK,wBACD/C,EAAM+C,QAAS,EACfngB,KAAKqyH,4BAA4Bj1G,EAAOle,GACxCke,EAAM+C,QAAS,EACf,MACJ,IAAK,QACDngB,KAAK4+E,QAAQxhE,EAAOle,GACpB,MACJ,IAAK,UACDc,KAAK22D,MAAMv5C,EAAOle,GAClB,MACJ,IAAK,iBACDc,KAAKsyH,qBAAqB/3H,EAAK2E,GAC/B,MACJ,IAAK,sBACDc,KAAKuyH,kBAAkBn1G,EAAOle,GAAS,GACvC,MACJ,IAAK,4BACDc,KAAKwyH,wBAAwBp1G,EAAOle,GAAS,GAC7C,MACJ,IAAK,yBACDc,KAAKyyH,6BAA6Br1G,EAAOle,GAAS,GAClD,MACJ,IAAK,4BACDc,KAAK0yH,2BAA2Bt1G,EAAOle,GAAS,GAChD,MACJ,IAAK,mBACDc,KAAK2yH,sBAAsBv1G,EAAOle,GAAS,GAAO,GAClD,MACJ,IAAK,qBACDc,KAAK2yH,sBAAsBv1G,EAAOle,GAAS,GAAO,GAClD,MACJ,IAAK,sBACDc,KAAK4yH,0BAA0Bx1G,EAAOle,GAAS,GAC/C,MACJ,IAAK,wBACL,IAAK,yBACDke,EAAM+C,QAAS,EACfngB,KAAK6yH,mCAAmCz1G,EAAOle,GAAS,GACxDke,EAAM+C,QAAS,EAMvB,GAHAjhB,EAAQwY,iBAAmBC,gBAAc+I,SACzCxhB,EAAQyc,uBAAsB,GAC9Bzc,EAAQy8F,qBAAqBv+E,GACzBy0G,EAAY,CACZ,IAAI9kH,EAAS/M,KAAK8yH,gBAAgBjB,EAAY3yH,GAC9C,GAAI6N,EAAQ,CACR,IAAIgmH,EAAkB1iG,GAAYnxB,EAAQ8zH,iBACtCD,GACAA,EAAgBhmH,EAAQ7N,MAKxCwhB,EAAS0vB,UAAU0iF,gBAAkB,SAAUntH,EAAOzG,GAClD,IAAI6N,EACJ,GAAKpH,EAAM9F,GAuBPkN,EAAS7N,EAAQ0c,UAAUjW,EAAM9F,SAtBjC,GAAK8F,EAAMmU,OAASnU,EAAMmU,MAAMrjB,OAAS,GACpCkP,EAAMgZ,YAAchZ,EAAMgZ,WAAWloB,OAAS,EAG/C,IAAK,IAAIoG,EAAK,EAAGo2H,EAFFttH,EAAMmU,MAAMrjB,OAAS,EAChCkP,EAAMmU,MAAQnU,EAAMgZ,WACgB9hB,EAAKo2H,EAAWx8H,OAAQoG,IAC5DkQ,EAASkmH,EAAWp2H,GACpBkQ,EAAS7N,EAAQ0c,UAAU7O,EAAOlN,QAGrC,CACD,IAAIqzH,EAAYvtH,EAAMmU,MAClBnU,EAAMmU,MAAQnU,EAAMgZ,WACxB,GAAIu0G,EACA,IAAK,IAAIj1G,EAAK,EAAGkd,EAAKjd,OAAOC,KAAK+0G,GAAYj1G,EAAKkd,EAAG1kC,OAAQwnB,IAAM,CAChE,IAAI6e,EAAM3B,EAAGld,GACT6E,EAAQ3qB,OAAO2kC,GACnB/vB,EAASpH,EAAMmU,MAAQ5a,EAAQ4a,MAAMgJ,GAAS5jB,EAAQyf,WAAWmE,IAQjF,OAAO/V,GAEX2T,EAAS0vB,UAAUumB,MAAQ,SAAUw8D,EAAcj0H,GAC/CA,EAAQwsB,IAAIynG,EAAa71G,aAE7BoD,EAAS0vB,UAAUwuC,QAAU,SAAUxhE,EAAOle,GAC1Cke,EACMG,WAAaN,GAAYG,EAAME,YACrC,IAAI/c,EAAO6c,EAAME,WACjBpe,EAAQue,eAAemhE,QAAQr+E,IAEnCmgB,EAAS0vB,UAAUgjF,eAAiB,SAAUt2F,GAC1C,MAAY,WAARA,GAA4B,YAARA,GAK5Bpc,EAAS0vB,UAAUijF,YAAc,SAAU/8H,EAAY2iC,GACnD,IAAK,IAAIp8B,EAAK,EAAGohB,EAAKC,OAAOC,KAAK8a,GAAWp8B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC/D,IAAIigC,EAAM7e,EAAGphB,GACRmD,KAAKozH,eAAet2F,KACjB7D,EAAS6D,aAAgB5e,OACzBle,KAAKqzH,YAAY/8H,EAAWwmC,GAAM7D,EAAS6D,IAG3CxmC,EAAWwmC,GAAO7D,EAAS6D,MAK3Cpc,EAAS0vB,UAAUyiF,mCAAqC,SAAUz1G,EAAOle,EAASo0H,GAC9E,IAAI/yH,EAAO6c,EAAMG,WACbhjB,EAAM6iB,EAAME,WAahB,GAAmB,YAXfF,EAAM+C,OACmB,WAArB/C,EAAMqL,WACO,SAGA,SAIJrL,EAAMqL,YAGnBvpB,EAAQwtB,OAAOnsB,QAGf,GAAIA,EAAK4jB,QAAS,CACd,IAAIzE,EAAWxgB,EAAQ0c,UAAUrb,EAAKsb,UACtC3c,EAAQm2E,UAAU31D,GAAWnlB,QAE5B,CACD,IACIwqB,EAAY8C,GADZnI,EAAWxgB,EAAQ0c,UAAUrb,EAAKsb,UACEtb,GACxCrB,EAAQo2E,SAAS51D,GAAWnlB,GAAMwqB,GAG1C7lB,EAAQge,kBAEZwD,EAAS0vB,UAAUoiF,wBAA0B,SAAUp1G,EAAOle,EAASo0H,GACnE,IAAIlnD,EAAe,EAAWhvD,EAAMG,WAAaH,EAAME,WACnDi2G,EAAa3xF,GAAewqC,EAAahvD,EAAMqqD,UAC/C+rD,EAAct0H,EAAQue,eAAeypE,qBAAqBhoF,EAAQ0c,UAAUwwD,EAAYvsE,IAAK0zH,GAC7FlwC,EAAgBnkF,EAAQ0c,UAAUwwD,EAAYvsE,IAC9C0hE,EAAiB3/B,GAAeyhD,EAAejmE,EAAMqqD,UACzDlG,EAAetxD,OAASsjH,EAAWtjH,OACnCsxD,EAAe5+D,OAAS4wH,EAAW5wH,OACnC4+D,EAAehpE,MAAQg7H,EAAWh7H,MAClCgpE,EAAejpE,OAASi7H,EAAWj7H,OACnCipE,EAAer0D,YAAcqmH,EAAWrmH,YACxCq0D,EAAe5+D,OAAS4wH,EAAW5wH,OAC/B0gF,aAAyBvuE,GACzB5V,EAAQigB,mBAAmBkkE,KAAmBmwC,GAG9Ct0H,EAAQ8nB,wBAAwBq8D,KAAmBmwC,IAG3D9yG,EAAS0vB,UAAUqiF,6BAA+B,SAAUr1G,EAAOle,EAASo0H,GACxE,IAAIlnD,EAAe,EAAWhvD,EAAMG,WAAaH,EAAME,WACnD2B,EAAa/f,EAAQ0c,UAAUwwD,EAAYvwD,UAC3C+C,EAAe1f,EAAQ0c,UAAUwwD,EAAYvsE,IAC7Cof,EACAgB,GAAoB/gB,EAAS+f,EAAYL,GAAe00G,IAGpD10G,EAAa/C,YACboD,EAAa/f,EAAQ0c,UAAUgD,EAAa/C,WACjC1J,SAAS5L,OAAO0Y,EAAW9M,SAASmO,QAAQ1B,EAAa/e,IAAK,GACzEof,EAAWzQ,QAAQ2D,SAAS5L,OAAO0Y,EAAWzQ,QAAQ2D,SAASmO,QAAQ1B,EAAapQ,SAAU,IAErE,KAAzB49D,EAAYvwD,YACZoD,EAAa/f,EAAQ0c,UAAUwwD,EAAYvwD,WAChC1J,SAASrb,KAAKs1E,EAAYvsE,IACrCof,EAAWzQ,QAAQ2D,SAASrb,KAAK8nB,EAAapQ,UAElDoQ,EAAa/C,SAAWuwD,EAAYvwD,SACpC3c,EAAQqhB,eAAe3B,GACvB1f,EAAQof,oBAAoBM,KAGpC8B,EAAS0vB,UAAUsiF,2BAA6B,SAAUt1G,EAAOle,EAASo0H,GACtE,IAAIlnD,EAAe,EAAWhvD,EAAMG,WAAaH,EAAME,WACvD,GAAI8uD,EAAY7pE,OAAQ,CACpB,IAAIwZ,EAAW7c,EAAQ0c,UAAUwwD,EAAY7pE,OAAOsZ,UAChDE,IACIqwD,EAAYppE,QACZ+Y,EAASvN,QAAQ2D,SAAS5L,OAAO6lE,EAAY3pD,YAAa,GAC1D1G,EAASvN,QAAQ2D,SAAS5L,OAAO6lE,EAAY1pD,YAAa,EAAG0pD,EAAY7pE,OAAOiM,eAGhDvU,IAA5BmyE,EAAY1pD,aACPxjB,EAAQ0c,UAAUwwD,EAAY7pE,OAAO1C,KACtCX,EAAQwsB,IAAI0gD,EAAY7pE,QAE5BwZ,EAASvN,QAAQ2D,SAAS5L,OAAO6lE,EAAY1pD,YAAa,EAAGxjB,EAAQ0c,UAAUwwD,EAAY7pE,OAAO1C,IAAI2O,SACtGtP,EAAQ0c,UAAUwwD,EAAY7pE,OAAO1C,IAAIgc,SAAWE,EAASlc,KAG7Dkc,EAASvN,QAAQ2D,SAAS5L,OAAOwV,EAASvN,QAAQ2D,SAASmO,QAAQphB,EAAQ0c,UAAUwwD,EAAY7pE,OAAO1C,IAAI2O,SAAU,GACtHtP,EAAQ0c,UAAUwwD,EAAY7pE,OAAO1C,IAAIgc,SAAW,IAGxDy3G,GAAkC,kBAAxBv3G,EAAS3d,MAAMvC,MACzBqD,EAAQwtB,OAAO0/C,EAAY7pE,QAE/BwZ,EAASvN,QAAQ6Q,QAAQ,IAAIC,IAC7BvD,EAASvN,QAAQ+Q,QAAQxD,EAASvN,QAAQgR,aAC1CtgB,EAAQof,oBAAoBvC,GAC5B7c,EAAQylE,oBAIpBjkD,EAAS0vB,UAAUuiF,sBAAwB,SAAUv1G,EAAOle,EAASo0H,EAAQG,GACzE,IAAIl5H,EAAM,EAAW6iB,EAAMG,WAAaH,EAAME,WAC1C/c,EAAS+yH,EAA6Bl2G,EAAME,WAAzBF,EAAMG,WAC7B,GAAIhjB,EAAIshB,SAAU,CACd,IAAI6D,EAAWxgB,EAAQ0c,UAAUrhB,EAAIshB,UACjC+C,EAAe1f,EAAQ0c,UAAUrhB,EAAIsF,IACrC7I,EAAI0oB,EAASlR,QAAQhN,OAAOxK,EAC5BC,EAAIyoB,EAASlR,QAAQhN,OAAOvK,EAChC,GAA4B,aAAxByoB,EAASthB,MAAMvC,KAAqB,CACpC,IAAIolB,EAAOvB,EAASlR,QAAQ2D,SAAS,GACjChG,EAAUuT,EAASthB,MAAM+N,QAC7Bqb,GAAqBtoB,EAASqB,EAAMmf,EAAUnlB,GAC1Ck5H,GACAxyG,EAAKrE,gBAAgBriB,EAAI4hB,SAAU5hB,EAAIiU,QAAQjC,WAAWjU,QAAQ,EAAM6T,GACxEuT,EAASpnB,OAASonB,EAASlR,QAAQlW,OAAS2oB,EAAK3oB,SAGjD2oB,EAAK5E,kBAAkB9hB,EAAI+hB,YAAa/hB,EAAIiU,QAAQjC,WAAWhU,OAAO,EAAM4T,GAC5EuT,EAASnnB,MAAQmnB,EAASlR,QAAQjW,MAAQ0oB,EAAK1oB,MAC3CgC,EAAI4pB,UACJvF,EAAa1F,SAAW0F,EAAapQ,QAAQ0K,SAAW3e,EAAIiU,QAAQjC,WAAWhU,QAGvF6oB,GAA0B1B,GAC1B,IAAIoiC,EAAK9qD,EAAI0oB,EAASlR,QAAQhN,OAAOxK,EACjC+qD,EAAK9qD,EAAIyoB,EAASlR,QAAQhN,OAAOvK,EACrCiI,EAAQwd,KAAKgD,EAAUoiC,EAAIC,GAC3B7iD,EAAQge,iBACRhe,EAAQof,oBAAoBoB,MAIxCgB,EAAS0vB,UAAUwiF,0BAA4B,SAAUx1G,EAAOle,EAASo0H,GACrE,IAAIlnD,EAAe,EAAWhvD,EAAMG,WAAaH,EAAME,WACvD,GAAI8uD,EAAY7pE,OAAQ,CACpB,IAAI0Z,EAAW/c,EAAQ0c,UAAUwwD,EAAY7pE,OAAOsZ,UAChDI,GAAoC,aAAxBA,EAAS7d,MAAMvC,OAC3BqrB,GAAiBhoB,EAASktE,EAAYppE,OAAQopE,EAAY7pE,QAC1DrD,EAAQge,oBAIpBwD,EAAS0vB,UAAUmiF,kBAAoB,SAAUn1G,EAAOle,EAASo0H,GAC7D,IAAIlnD,EAAe,EAAWhvD,EAAMG,WAAWzD,MAAM,GACjDsD,EAAME,WAAWxD,MAAM,GACvBy5G,EAAazxF,GAASsqC,EAAahvD,EAAMqqD,UACzC+rD,EAAct0H,EAAQue,eAAewpE,eAAe/nF,EAAQ0c,UAAUwwD,EAAYvsE,IAAK0zH,GACvFlwC,EAAgBnkF,EAAQ0c,UAAUwwD,EAAYvsE,IAC7BiiC,GAASuhD,EAAejmE,EAAMqqD,UACpCx3D,OAASsjH,EAAWtjH,OACnC/Q,EAAQigB,mBAAmBkkE,KAAmBmwC,GAC1CnwC,EAAcxnE,UACd3c,EAAQsuD,qBAAqBtuD,EAAQ0c,UAAUynE,EAAcxnE,YAGrE6E,EAAS0vB,UAAU8hF,sBAAwB,SAAU90G,EAAOle,EAASo0H,GACjE,IAAI/1G,EAAaH,EAAMG,WACnBD,EAAaF,EAAME,WACvBtd,KAAKqzH,YAAYn0H,EAAUo0H,EAAS/1G,EAAaD,GACjDg2G,EAASp0H,EAAQwqD,kBAAkBnsC,EAAYD,GAAcpe,EAAQwqD,kBAAkBpsC,EAAYC,GACnGre,EAAQwY,eAAiBxY,EAAQwY,eAAiBC,gBAAc+I,UAEpEA,EAAS0vB,UAAUkiF,qBAAuB,SAAU/3H,EAAK2E,GACrD,IAEIqF,EAFA7N,EAAI,EAGR,GAAI6D,EAAIokB,YAAcpkB,EAAIokB,WAAWloB,OAAS,EAC1C,IAAKC,EAAI,EAAGA,EAAI6D,EAAIokB,WAAWloB,OAAQC,IACnC6N,EAAYhK,EAAIokB,WAAWjoB,GAC3BsJ,KAAK0zH,eAAenvH,EAAWrF,IAI3CwhB,EAAS0vB,UAAUsjF,eAAiB,SAAUnvH,EAAWrF,GACrD,IAAIumB,EAAOvmB,EAAQ0c,UAAUrX,EAAU1E,IACvC4lB,EAAKtsB,SAAWoL,EAAUpL,SAC1B+F,EAAQue,eAAeqvD,eAAernD,IAE1C/E,EAAS0vB,UAAU0hF,sBAAwB,SAAUv3H,EAAK2E,GACtD,IACIqB,EACAgE,EAFA7N,EAAI,EAGR,GAAI6D,EAAIuf,OAASvf,EAAIuf,MAAMrjB,OAAS,EAChC,IAAKC,EAAI,EAAGA,EAAI6D,EAAIuf,MAAMrjB,OAAQC,IAC9B6J,EAAOhG,EAAIuf,MAAMpjB,GACjBsJ,KAAK2zH,gBAAgBpzH,EAAMrB,GAGnC,GAAI3E,EAAIokB,YAAcpkB,EAAIokB,WAAWloB,OAAS,EAC1C,IAAKC,EAAI,EAAGA,EAAI6D,EAAIokB,WAAWloB,OAAQC,IACnC6N,EAAYhK,EAAIokB,WAAWjoB,GAC3BsJ,KAAK4zH,kBAAkBrvH,EAAWrF,IAI9CwhB,EAAS0vB,UAAUujF,gBAAkB,SAAUp5H,EAAK2E,GAChD,IAAIqB,EAAOrB,EAAQ0c,UAAUrhB,EAAIsF,IAOjC,GANItF,EAAIksD,YAAclmD,EAAKkmD,WACvBvnD,EAAQohF,WAAW/lF,EAAKA,EAAIksD,YAE3BlsD,EAAIksD,WAAalmD,EAAKkmD,WACvBvnD,EAAQ67F,cAAcxgG,EAAIsF,IAE1BU,EAAKkmD,UAAW,CAChB,IAAI3E,EAAKvnD,EAAIoI,OAAOC,KAAOrC,EAAKoC,OAAOC,KACnCm/C,EAAKxnD,EAAIoI,OAAOI,IAAMxC,EAAKoC,OAAOI,IACtC7D,EAAQwd,KAAKnc,EAAMuhD,EAAIC,OAEtB,CACD,GAAIxhD,EAAKsb,SAAU,CACf,IAAIirE,EAAW5nF,EAAQ0c,UAAUrb,EAAKsb,UAClCirE,EAAS1nE,SACT7kB,EAAIiU,QAAQzS,QAAWxB,EAAIhC,MAAQ,GAAMuuF,EAASt4E,QAAQhN,OAAOxK,EAAIuD,EAAIoI,OAAOC,MAChFrI,EAAIiU,QAAQxS,QAAWzB,EAAIjC,OAAS,GAAMwuF,EAASt4E,QAAQhN,OAAOvK,EAAIsD,EAAIoI,OAAOI,MAGrF++C,EAAKvnD,EAAIiU,QAAQzS,QAAUwE,EAAKxE,QAChCgmD,EAAKxnD,EAAIiU,QAAQxS,QAAUuE,EAAKvE,QACpCkD,EAAQwd,KAAKnc,EAAMuhD,EAAIC,GAEvB7iD,EAAQ8nD,YACR9nD,EAAQ8nD,WAAWw1C,YAAYj8F,EAAMrB,IAG7CwhB,EAAS0vB,UAAU2hF,kBAAoB,SAAUx3H,EAAK2E,EAASke,GAC3D,IACI7Y,EACAhE,EAFA7J,EAAI,EAGR,GAAI6D,GAAOA,EAAIuf,OAASvf,EAAIuf,MAAMrjB,OAAS,EACvC,IAAKC,EAAI,EAAGA,EAAI6D,EAAIuf,MAAMrjB,OAAQC,IAE9B,IADA6J,EAAOhG,EAAIuf,MAAMpjB,IACRyb,WAAa5R,EAAKqY,UAGvB,IAAK,IADDkB,EAAQ5a,EAAQue,eAAe6qD,kBAAkB/nE,MAC5CmlB,EAAM,EAAGA,EAAM5L,EAAMrjB,OAAQivB,IAAO,CACzC,IAAI24D,EAAWjhE,EAAMoO,WAAW1R,EAAM4L,GAAK7lB,IACtCwe,GAAcggE,KAAcvpE,IAC7B9U,KAAK8iH,YAAYzkC,EAAUn/E,EAASke,GACpCpd,KAAK2zH,gBAAgBt1C,EAAUn/E,IAG/Bc,KAAK4zH,kBAAkBv1C,EAAUn/E,EAASke,QAKlDpd,KAAK8iH,YAAYviH,EAAMrB,GACvBc,KAAK2zH,gBAAgBpzH,EAAMrB,GAIvC,GAAI3E,GAAOA,EAAIokB,YAAcpkB,EAAIokB,WAAWloB,OAAS,EAAG,CACpD,IAAIkoB,EAAapkB,EAAIokB,WACrB,IAAKjoB,EAAI,EAAGA,EAAIioB,EAAWloB,OAAQC,IAC/B6N,EAAYoa,EAAWjoB,GACvBsJ,KAAK4zH,kBAAkBrvH,EAAWrF,KAI9CwhB,EAAS0vB,UAAU0yE,YAAc,SAAUvoH,EAAK2E,EAASke,GACrD,IAAI7c,EAAOrB,EAAQ0c,UAAUrhB,EAAIsF,IAC7Bg0H,EAAat5H,EAAIiU,QAAQjC,WAAWhU,MAAQgI,EAAKiO,QAAQjC,WAAWhU,MACpEu7H,EAAcv5H,EAAIiU,QAAQjC,WAAWjU,OAASiI,EAAKiO,QAAQjC,WAAWjU,OACtE8kB,GAASA,EAAMoO,aACfpO,EAAMoO,WAAWjxB,EAAIsF,IAAMod,GAAY1c,IAE3CrB,EAAQyd,MAAMpc,EAAMszH,EAAYC,GAC5B98H,EAAGuD,EAAIiU,QAAQzS,QAAUwE,EAAKiO,QAAQzS,QACtC9E,EAAGsD,EAAIiU,QAAQxS,QAAUuE,EAAKiO,QAAQxS,WAG9C0kB,EAAS0vB,UAAU4hF,sBAAwB,SAAUz3H,EAAK2E,EAASke,GAC/D,IACI7c,EACAgE,EAFA7N,EAAI,EAGJq9H,EAAc70H,EAAQwf,cAK1B,GAJAq1G,EAAY7mH,YAAc3S,EAAI2S,YAC1B6mH,GAAeA,EAAYvlH,UAC3BulH,EAAYvlH,QAAQtB,YAAc3S,EAAI2S,aAEtC3S,GAAOA,EAAIuf,OAASvf,EAAIuf,MAAMrjB,OAAS,EACvC,IAAKC,EAAI,EAAGA,EAAI6D,EAAIuf,MAAMrjB,OAAQC,IAC9B6J,EAAOhG,EAAIuf,MAAMpjB,GACjBsJ,KAAKg0H,gBAAgBzzH,EAAMrB,GAC3Bc,KAAK2zH,gBAAgBpzH,EAAMrB,GAGnC,GAAI3E,GAAOA,EAAIokB,YAAcpkB,EAAIokB,WAAWloB,OAAS,EACjD,IAAKC,EAAI,EAAGA,EAAI6D,EAAIokB,WAAWloB,OAAQC,IACnC6N,EAAYhK,EAAIokB,WAAWjoB,GAC3BsJ,KAAK4zH,kBAAkBrvH,EAAWrF,IAI9CwhB,EAAS0vB,UAAU4jF,gBAAkB,SAAUz5H,EAAK2E,GAChD,IAAIqB,EAAOrB,EAAQ0c,UAAUrhB,EAAIsF,IACjCX,EAAQ4wD,OAAOvvD,EAAMhG,EAAI2S,YAAc3M,EAAK2M,cAEhDwT,EAAS0vB,UAAU6hF,wBAA0B,SAAU13H,EAAK2E,GACxD,IAAIqF,EAAYhK,EAAIokB,WAAW,GAC/B3e,KAAK4zH,kBAAkBrvH,EAAWrF,IAEtCwhB,EAAS0vB,UAAUwjF,kBAAoB,SAAUr5H,EAAK2E,EAASke,GAC3D,IAAI7Y,EAAYrF,EAAQ0c,UAAUrhB,EAAIsF,IAElCtF,EAAI00C,eAAiB1qC,EAAU0qC,eAC/B1qC,EAAU0qC,aAAe10C,EAAI00C,aAC7B/vC,EAAQ8nB,wBAAwBziB,MAAiB0qC,aAAc10C,EAAI00C,gBAEnE10C,EAAIqnD,eAAiBr9C,EAAUq9C,eAC/Br9C,EAAUq9C,aAAernD,EAAIqnD,aAC7B1iD,EAAQ8nB,wBAAwBziB,MAAiBq9C,aAAcrnD,EAAIqnD,gBAEnErnD,EAAIkH,WAAa8C,EAAU9C,WACN,KAAjBlH,EAAIkH,SAEJu+B,GADO9gC,EAAQ0c,UAAUrX,EAAU9C,UACnBmkB,SAAUrrB,EAAIsF,IAGvBX,EAAQ0c,UAAUrhB,EAAIkH,UACxBmkB,SAAS9uB,KAAKyD,EAAIsF,IAE3B0E,EAAU9C,SAAWlH,EAAIkH,SACzBvC,EAAQ8nB,wBAAwBziB,MAAiB9C,SAAUlH,EAAIkH,YAE/DlH,EAAI0sB,WAAa1iB,EAAU0iB,WACN,KAAjB1sB,EAAI0sB,SAEJ+Y,GADO9gC,EAAQ0c,UAAUrX,EAAU0iB,UACnBtB,QAASprB,EAAIsF,IAGtBX,EAAQ0c,UAAUrhB,EAAI0sB,UACxBtB,QAAQ7uB,KAAKyD,EAAIsF,IAE1B0E,EAAU0iB,SAAW1sB,EAAI0sB,SACzB/nB,EAAQ8nB,wBAAwBziB,MAAiB0iB,SAAU1sB,EAAI0sB,YAE/D7J,GAASA,EAAMoO,aACfpO,EAAMoO,WAAWjxB,EAAIsF,IAAMod,GAAY1Y,IAE3C,IAAIgtD,EAAKh3D,EAAIwG,YAAY/J,EAAIuN,EAAUxD,YAAY/J,EAC/Cw6D,EAAKj3D,EAAIwG,YAAY9J,EAAIsN,EAAUxD,YAAY9J,EACxC,IAAPs6D,GAAmB,IAAPC,GACZtyD,EAAQ6kF,cAAcx/E,EAAWgtD,EAAIC,GAEzC,IAAI1P,EAAKvnD,EAAI0Q,YAAYjU,EAAIuN,EAAU0G,YAAYjU,EAC/C+qD,EAAKxnD,EAAI0Q,YAAYhU,EAAIsN,EAAU0G,YAAYhU,EACxC,IAAP6qD,GAAmB,IAAPC,GACZ7iD,EAAQ8kF,cAAcz/E,EAAWu9C,EAAIC,GAEzC7iD,EAAQylE,iBACa,QAAjBzlE,EAAQ0sB,MACR1sB,EAAQ2sB,uBAGhBnL,EAAS0vB,UAAU+hF,wBAA0B,SAAU/0G,EAAOle,GAC1D,IAAI3E,EAAM6iB,EAAME,WAChB,GAAIF,GAASA,EAAMqL,WAAY,CAa3B,GAAmB,YAXfrL,EAAM+C,OACmB,WAArB/C,EAAMqL,WACO,SAGA,SAIJrL,EAAMqL,YAGfluB,EAAIopC,OACJzkC,EAAQwtB,OAAOxtB,EAAQ0c,UAAUrhB,EAAIopC,OAAS,mBAAqBppC,EAAIsF,MAGvEX,EAAQwtB,OAAOnyB,GACf2E,EAAQk2E,0BAGX,CAED,GADAl2E,EAAQk2E,qBACJ76E,EAAIshB,SAAU,CACd,IAAIoD,EAAa/f,EAAQ0c,UAAUrhB,EAAIshB,UACnCoD,EACA/f,EAAQshB,SAASvB,EAAY1kB,GAG7B2E,EAAQwsB,IAAInxB,QAGXA,EAAIopC,OACTzkC,EAAQy9E,kBAAkBpiF,EAAK2E,EAAQ0c,UAAUrhB,EAAIopC,SAGhDzkC,EAAQ0c,UAAUrhB,EAAIsF,MACnBtF,GAAOA,EAAI6D,OAA4B,aAAnB7D,EAAI6D,MAAMvC,MAAuBuhB,EAAM+C,QAC3D6K,GAAczwB,OAAKN,OAAWA,OAAWA,OAAWA,GAAW,GAEnEiF,EAAQwsB,IAAInxB,IAGhBA,EAAIksD,WAAavnD,EAAQ0c,UAAUrhB,EAAIksD,YACvCvnD,EAAQohF,WAAW/lF,EAAKA,EAAIksD,WAGf,QAAjBvnD,EAAQ0sB,MACR1sB,EAAQ2sB,wBAIpBnL,EAAS0vB,UAAUgiF,6BAA+B,SAAUh1G,EAAOle,GAC/D,IAAI0pD,EAAQxrC,EAAME,WACd/iB,EAAM6iB,EAAMG,WACZhd,EAAOrB,EAAQ0c,UAAUrhB,EAAIsF,IACjC,GAAIud,GAASA,EAAMqL,WAAY,CAQR,YANfrL,EAAM+C,OAC6B,WAArB/C,EAAMqL,WAA2B,SAAW,SAG7CrL,EAAMqL,aAGnBvpB,EAAQ4/E,aAAav+E,GAAOqoD,IAC5B1pD,EAAQk2E,uBAGRl2E,EAAQk2E,qBACRl2E,EAAQg/F,UAAU39F,GAAOqoD,KAER,QAAjB1pD,EAAQ0sB,MACR1sB,EAAQ2sB,wBAIpBnL,EAAS0vB,UAAUiiF,4BAA8B,SAAUj1G,EAAOle,GAC9D,IAAIiE,EAAOia,EAAME,WACb/iB,EAAM6iB,EAAMG,WACZhd,EAAOrB,EAAQ0c,UAAUrhB,EAAIsF,IACjC,GAAIud,GAASA,EAAMqL,WAAY,CAQR,YANfrL,EAAM+C,OAC6B,WAArB/C,EAAMqL,WAA2B,SAAW,SAG7CrL,EAAMqL,aAGnBvpB,EAAQ2/E,YAAYt+E,GAAO4C,IAC3BjE,EAAQk2E,uBAGRl2E,EAAQk2E,qBACRl2E,EAAQwhG,SAASngG,GAAO4C,KAEP,QAAjBjE,EAAQ0sB,MACR1sB,EAAQ2sB,wBAKpBnL,EAAS0vB,UAAU0rD,KAAO,SAAU58F,GAChC,IAAIke,EAAQpd,KAAKi0H,aAAa/0H,GAC1Bg1H,EAAwB,EACxB92G,IACuB,aAAnBA,EAAMC,UACa,eAAfD,EAAMvhB,MACNq4H,IACAl0H,KAAKywH,WAAY,GAGjBzwH,KAAKmsE,UAAU/uD,EAAOle,GAEtBc,KAAKywH,YACLzwH,KAAKm0H,gBAAgB/2G,EAAOle,EAASg1H,GACrCl0H,KAAKywH,WAAY,IAIrBvxH,EAAQqqB,eAAeuyE,KAAK1+E,KAIxCsD,EAAS0vB,UAAU+jF,gBAAkB,SAAU/2G,EAAOle,EAASg1H,GAC3D,KAAiC,IAA1BA,GACHl0H,KAAKmsE,UAAU/uD,EAAOle,GAEH,cADnBke,EAAQpd,KAAKi0H,aAAa/0H,IAChBrD,KACNq4H,IAEoB,eAAf92G,EAAMvhB,MACXq4H,IAGRA,EAAwB,GAE5BxzG,EAAS0vB,UAAU+7B,UAAY,SAAUgnD,EAAcj0H,GACnD,IAAIqe,EACA62G,EAMJ,GAL0B,oBAAtBjB,EAAat3H,MAAoD,sBAAtBs3H,EAAat3H,OACxD0hB,EAAc41G,EAAuB,WACrCiB,EAAajB,EAAuB,YAExCj0H,EAAQwY,gBAAkBC,gBAAc+I,SACd,eAAtByyG,EAAat3H,MAA+C,aAAtBs3H,EAAat3H,MAC/CqD,EAAQqqB,eAAewnG,UAAUt6H,OAAS,EAAG,CAC7C,IAAIstB,EAAY7kB,EAAQqqB,eAAewnG,UAAUxqH,OAAO,EAAG,GAC3DrH,EAAQqqB,eAAeunG,UAAUvqH,OAAO,EAAG,EAAGwd,EAAU,IACxDqwG,EAAajB,EAAuB,WAI5C,OADAj0H,EAAQyc,uBAAsB,GACtBw3G,EAAat3H,MACjB,IAAK,kBACL,IAAK,QACL,IAAK,aACDmE,KAAK8xH,sBAAsBv0G,EAAYre,GACvC,MACJ,IAAK,cACL,IAAK,SACDc,KAAK+xH,kBAAkBx0G,EAAYre,EAASi0H,GAC5C,MACJ,IAAK,kBACDnzH,KAAKgyH,sBAAsBz0G,EAAYre,EAASi0H,GAChD,MACJ,IAAK,oBACDnzH,KAAKiyH,wBAAwB10G,EAAYre,GACzC,MACJ,IAAK,kBACDc,KAAKkyH,sBAAsBiB,EAAcj0H,GAAS,GAClD,MACJ,IAAK,oBACDc,KAAKmyH,wBAAwBgB,EAAcj0H,GAC3C,MACJ,IAAK,yBACDc,KAAKoyH,6BAA6Be,EAAcj0H,GAChD,MACJ,IAAK,wBACDc,KAAKqyH,4BAA4Bc,EAAcj0H,GAC/C,MACJ,IAAK,QACDc,KAAK22D,MAAMw8D,EAAcj0H,GACzB,MACJ,IAAK,UACDc,KAAK4+E,QAAQu0C,EAAcj0H,GAC3B,MACJ,IAAK,iBACDc,KAAKsyH,qBAAqB/0G,EAAYre,GACtC,MACJ,IAAK,sBACDc,KAAKuyH,kBAAkBY,EAAcj0H,GAAS,GAC9C,MACJ,IAAK,4BACDc,KAAKwyH,wBAAwBW,EAAcj0H,GAAS,GACpD,MACJ,IAAK,yBACDc,KAAKyyH,6BAA6BU,EAAcj0H,GAAS,GACzD,MACJ,IAAK,4BACDc,KAAK0yH,2BAA2BS,EAAcj0H,GAAS,GACvD,MACJ,IAAK,mBACDc,KAAK2yH,sBAAsBQ,EAAcj0H,GAAS,GAAM,GACxD,MACJ,IAAK,qBACDc,KAAK2yH,sBAAsBQ,EAAcj0H,GAAS,GAAM,GACxD,MACJ,IAAK,sBACDc,KAAK4yH,0BAA0BO,EAAcj0H,GAAS,GACtD,MACJ,IAAK,wBACL,IAAK,yBACDc,KAAK6yH,mCAAmCM,EAAcj0H,GAAS,GAMvE,GAHAA,EAAQyc,uBAAsB,GAC9Bzc,EAAQwY,iBAAmBC,gBAAc+I,SACzCxhB,EAAQy8F,qBAAqBw3B,GACzBiB,EAAW,CACX,IAAIzuH,EAAQ3F,KAAK8yH,gBAAgBsB,EAAWl1H,GAC5C,GAAIyG,EAAO,CACP,IAAIotH,EAAkB1iG,GAAYnxB,EAAQ8zH,iBACtCD,GACAA,EAAgBptH,EAAOzG,MAKvCwhB,EAAS0vB,UAAUmhF,aAAe,SAAUryH,GACxC,IACImkF,EADAouC,EAAY,KAEZL,EAAQlyH,EAAQqqB,eAepB,OAdI6nG,EAAMxV,UACN6V,EAAYL,EAAM5nG,cAClB65D,EAAgB+tC,EAAM5nG,aAAayjD,WAE/BmkD,EAAM5nG,aAAe65D,EAChB+tC,EAAMvV,UACPuV,EAAMvV,SAAU,KAIpBuV,EAAMvV,SAAU,EAChBuV,EAAMxV,SAAU,IAGjB6V,GAEX/wG,EAAS0vB,UAAU6jF,aAAe,SAAU/0H,GACxC,IACIm1H,EADAloD,EAAY,KAEZilD,EAAQlyH,EAAQqqB,eAoBpB,OAnBI6nG,EAAMvV,WAKFwY,EAJCjD,EAAM5nG,aAAayjD,UAAamkD,EAAMxV,QAIxBwV,EAAM5nG,aAAa/wB,KAHnB24H,EAAM5nG,gBAMrB4nG,EAAM5nG,aAAe6qG,EAChBjD,EAAMxV,UACPwV,EAAMxV,SAAU,GAEfyY,EAAa57H,OACd24H,EAAMvV,SAAU,EAChBuV,EAAMxV,SAAU,IAGxBzvC,EAAYilD,EAAM5nG,cAEf2iD,GAOXzrD,EAAS0vB,UAAUkZ,QAAU,aAQ7B5oC,EAAS0vB,UAAUiZ,cAAgB,WAI/B,MAAO,YAEJ3oC,KCx/BP4zG,GAAiC,WACjC,SAASA,IACLt0H,KAAKohE,eAAgB,EA8FzB,OAzFAkzD,EAAgBlkF,UAAU25C,OAAS,SAAUrpF,EAAWm0B,EAASt0B,EAAMrB,GACnE,IAAIu2C,EAAQz1C,KACRu0H,KAEAl+H,EAAI,EAKR,GAJAk+H,EAFQ,GAEe3iD,YAAY,WAE/B,OADAv7E,IACOo/C,EAAM++E,gBAAgB3/F,EAAS0/F,EAAyB,IAANl+H,EAAS6I,EAASqB,IAC5E,IACCA,EAAKynD,WAAY,CACjB,IAAIysE,EAAY,GAEhBz0H,KAAKohE,cAAgBliE,EAAe,oBACpCA,EAAQyc,uBAAsB,GAE9B,IAAI+4G,KAEAh0H,IACAV,KAAK20H,cAAcp0H,EAAMk0H,EAAWv1H,GACpCw1H,EAHI,GAIsB9iD,YAAY,WAClC6iD,GAAa,EAAIh/E,EAAMk/E,cAAcp0H,EAAMk0H,EAAWv1H,GAAW20E,cAAc6gD,EAAqB,IACpGD,GAAa,IACd,OAQfH,EAAgBlkF,UAAUokF,gBAAkB,SAAUI,EAAUC,EAAaC,EAAM51H,EAASqB,GACxF,IAAKu0H,EACD,IAAK,IAAItxG,EAAI,EAAGA,EAAIoxG,EAAS//F,QAAQp+B,OAAQ+sB,IAAK,CAC9C,IAAIwpF,EAAS9tG,EAAQ0c,UAAUg5G,EAAS//F,QAAQrR,GAAG3jB,IACnDmtG,EAAOjxG,SAAW64H,EAAS//F,QAAQrR,GAAGuxG,YAAc,EACpD/nB,EAAOhxG,SAAW44H,EAAS//F,QAAQrR,GAAGwxG,YAAc,EAG5D,GAAIF,EAAM,CACNjhD,cAAcghD,EAAY,IAC1B31H,EAAQyc,uBAAsB,GAC9Bzc,EAAQqmE,aAAalyB,eAAa4hF,uBAAmBh7H,GACrDiF,EAAQkrF,0BAA0BC,aAAc,EAChDnrF,EAAQk7B,OAAO8vD,UAAY,GAC3BhrF,EAAQyc,sBAAsB3b,KAAKohE,eACnC,IAAIrN,GACAn0D,QAAS0wC,GAAM/vC,GAAOm1B,QAAQn1B,EAAe,YAEjDrB,EAAQqmE,aAAalyB,eAAak3C,kBAAmBx2B,KAM7DugE,EAAgBlkF,UAAUukF,cAAgB,SAAUpyH,EAAQoD,EAAOzG,GAC/D,IAAK,IAAIxI,EAAI,EAAGA,EAAI6L,EAAOqjB,SAASnvB,OAAQC,IAAK,CAC7C,IAAI6N,EAAYrF,EAAQ0c,UAAUrZ,EAAOqjB,SAASlvB,IAC9CsM,EAAS9D,EAAQ0c,UAAUrX,EAAU0iB,UACzC1iB,EAAUrE,MAAMo8B,QAAU32B,EAC1B,IAAK,IAAItP,EAAI,EAAGA,EAAIkO,EAAUiK,QAAQ2D,SAAS1b,OAAQJ,IACnDkO,EAAUiK,QAAQ2D,SAAS9b,GAAG6J,MAAMo8B,QAAU32B,EAC9C3C,EAAO9C,MAAMo8B,QAAU32B,EACnB3C,EAAOwL,mBAAmBg0B,IAC1BtjC,EAAQsvG,mBAAmBxrG,EAAOwL,aAASvU,EAAW0L,GAG9D3F,KAAK20H,cAAc3xH,EAAQ2C,EAAOzG,KAQ1Co1H,EAAgBlkF,UAAUkZ,QAAU,aAQpCgrE,EAAgBlkF,UAAUiZ,cAAgB,WAItC,MAAO,iBAEJirE,KC9FPY,GAAkC,WAKlC,SAASA,IAKLl1H,KAAKqqF,aAAc,EAkmDvB,OA1lDA6qC,EAAiB9kF,UAAUkZ,QAAU,aAQrC4rE,EAAiB9kF,UAAUiZ,cAAgB,WAIvC,MAAO,uBAGX6rE,EAAiB9kF,UAAU0uD,aAAe,SAAUhlF,EAAO8B,EAAWu5G,EAAYC,EAAUC,EAAU9yG,GAClG,IAAI6X,GACAv+B,KAAMs5H,EAAWt5H,KACjB+f,UAAWA,EAAW05G,QAAS,EAAGC,QAAS,EAC3CC,mBAAqBC,WAAY,KAAMC,UAAYC,SAAU,EAAGC,cAChEvkH,YAAa8jH,EAAW9jH,YACxBwkH,kBAAmBV,EAAWU,kBAAmBC,gBAAiBX,EAAWW,gBAC7En8G,kBAAmBw7G,EAAWx7G,kBAAmBC,oBAAqBu7G,EAAWv7G,oBACjFswE,UAAWirC,EAAWjrC,UAAW/vD,cAAe9J,GAAY8kG,EAAWh7F,eAAgBx3B,OAAQwyH,EAAWxyH,OAC1GnB,OAAQ2zH,EAAW3zH,OAAQqzB,WAAaoqE,KAAMk2B,EAAWl2B,MAG7D,OADAj/F,KAAKsqF,SAASlwD,EAAQtgB,EAAOs7G,EAAUC,EAAU9yG,GAC1C6X,GAEX86F,EAAiB9kF,UAAUk6C,SAAW,SAAUlwD,EAAQtgB,EAAOs7G,EAAUC,EAAU9yG,GAC/E,IAAIhiB,EACA7J,EAGAmhH,KAIJ,IAHIz9E,EAAOxe,UAAUwe,EAAO6kE,OACxB7kE,EAAOo7F,gBAAgB1+H,KAAKsjC,EAAOxe,UAAUwe,EAAO6kE,OAEnDvoG,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,KAC1B6J,EAAOuZ,EAAMpjB,IACHg/F,qBACOt7D,EAAOw7F,WAAWr1H,EAAKV,IAAMG,KAAK+1H,gBAAgB37F,EAAQ75B,IAC5Dy1H,KAAKC,YAAa,EACxB77F,EAAOxe,UAAUwe,EAAO6kE,OACpB1+F,EAAKolB,SAAYplB,EAAKolB,QAAQlvB,SAC/BohH,EAAU/gH,KAAKyJ,GACXA,EAAKnK,MAAQy4G,OAAOtuG,EAAKnK,KAAKi/H,MAAej7F,EAAO6kE,MACpD7kE,EAAOo7F,gBAAgB1+H,KAAKyJ,KAUhD,IAJsC,IAAlC65B,EAAOo7F,gBAAgB/+H,SACvB2jC,EAAOo7F,gBAAkB3d,GAGxBnhH,EAAI,EAAGA,EAAI0jC,EAAOo7F,gBAAgB/+H,OAAQC,IAC3C6J,EAAO65B,EAAOo7F,gBAAgB9+H,GAC9BsJ,KAAKq8F,YAAYjiE,EAAQ75B,EAAM,EAAGgiB,GAEtC,GAAI6X,EAAOo7F,gBAAgB/+H,OAAS,EAAG,CACnC2jC,EAAO2kE,SAAW3kE,EAAOo7F,gBAAgB,GACzC,IAAIx+H,EAAI,EACJC,EAAI,EACJ81C,OAAO,EACPG,OAAO,EACPD,OAAO,EACPD,OAAO,EAEPxrC,OAAS,EACb,IAAK9K,EAAI,EAAGA,EAAI0jC,EAAOo7F,gBAAgB/+H,OAAQC,IAAK,CAChD8K,EAASxB,KAAKk2H,WAAW97F,EAAQpjC,EAAGC,EAAGmjC,EAAOo7F,gBAAgB9+H,GAAI,EAAG0jC,EAAOo7F,gBAAgB9+H,EAAI,IAChG,IAAIy/H,EAAW/7F,EAAOw7F,WAAWx7F,EAAOo7F,gBAAgB9+H,GAAGmJ,IAC3D2B,EAAOvK,EAAIwF,KAAKyK,IAAI1F,EAAOvK,EAAGk/H,EAASl/H,GACvCuK,EAAOxK,EAAIyF,KAAKyK,IAAI1F,EAAOxK,EAAGm/H,EAASn/H,IACK,IAAxCojC,EAAO/oB,YAAYiP,QAAQ,QAC3BrpB,EAAIuK,EAAOqB,MAAQu3B,EAAOy7F,kBAG1B7+H,EAAIwK,EAAOqB,MAAQu3B,EAAOy7F,kBAEpB,IAANn/H,GACAq2C,EAAOvrC,EAAOxK,EACdg2C,EAAOxrC,EAAOvK,EACdg2C,EAAOzrC,EAAOqB,MACdqqC,EAAO1rC,EAAOsB,SAGdiqC,EAAOtwC,KAAKyK,IAAI6lC,EAAMvrC,EAAOxK,GAC7Bg2C,EAAOvwC,KAAKyK,IAAI8lC,EAAMxrC,EAAOvK,GAC7Bg2C,EAAOxwC,KAAKmJ,IAAIqnC,EAAMzrC,EAAOqB,OAC7BqqC,EAAOzwC,KAAKmJ,IAAIsnC,EAAM1rC,EAAOsB,SAIrC,IADA9C,KAAKo2H,aAAah8F,GAAUpjC,EAAG+1C,EAAM91C,EAAG+1C,EAAMnqC,MAAOoqC,EAAMnqC,OAAQoqC,GAAQkoF,GACtE1+H,EAAI,EAAGA,EAAI0jC,EAAOo7F,gBAAgB/+H,OAAQC,IAC3CsJ,KAAKq2H,YAAYj8F,EAAQA,EAAOo7F,gBAAgB9+H,GAAI,GAExD,IAAKA,EAAI,EAAGA,EAAI0jC,EAAOo7F,gBAAgB/+H,OAAQC,IAC3CsJ,KAAKs2H,iBAAiBl8F,EAAQA,EAAOo7F,gBAAgB9+H,GAAI,KAIrEw+H,EAAiB9kF,UAAUrb,UAAY,SAAUx0B,GAC7C,IAAIvJ,EAAIuJ,EAAKxE,QAAUwE,EAAKgM,WAAWhU,MAAQgI,EAAKwgC,MAAM/pC,EACtDC,EAAIsJ,EAAKvE,QAAUuE,EAAKgM,WAAWjU,OAASiI,EAAKwgC,MAAM9pC,EAC3D,OAAO,IAAIqV,GAAKtV,EAAGC,EAAGsJ,EAAKgM,WAAWhU,MAAOgI,EAAKgM,WAAWjU,SAEjE48H,EAAiB9kF,UAAU8lF,WAAa,SAAU97F,EAAQpjC,EAAGC,EAAGmH,EAAOm4H,EAAOn9H,EAAMo9H,GAChF,IAAIC,EAEAC,EACAn8H,EACAo8H,EAHAryF,KAWJ,GAPAmyF,EAAaz2H,KAAK42H,cAAcx8F,EAAQh8B,EAAOpH,EAAGC,EAAGs/H,GACrDjyF,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAC/Bu6B,EAEOu7F,SAAWl5H,KAAKmJ,IAAIw0B,EAAOu7F,SAAUY,GAC5CG,EAAMH,GACNI,EAAW32H,KAAK22H,SAASv8F,EAAQh8B,KACfkmC,EAAK0xF,KAAKa,WAAWpgI,OAKlC,CACD,IAAIqgI,OAAa,EAEbC,OAAc,EACd3jG,OAAI,EACJ4jG,OAAa,EACbx6D,OAAQ,EACR15D,OAAS,EACbA,EAAS2zH,EAAWx/H,EAAIw/H,EAAWn+H,OAAS8hC,EAAO07F,gBAC/CxxF,EAAK0xF,KAAKa,WAAWpgI,SAGrBigI,GADAn8H,EAAMyF,KAAKi3H,0BAA0B78F,EAAQh8B,EAAO0E,EAAQ2zH,EAAWn+H,OAAQi+H,EAAOn8F,EAAO07F,kBACnFS,MACVzzH,EAASvI,EAAIuI,QAEZwhC,EAAK0xF,KAAKa,WAAWpgI,QAAoC,eAA1B6tC,EAAK0xF,KAAK3kH,cAC1CvO,EAAS2zH,EAAWx/H,EAAIw/H,EAAWn+H,OAAS8hC,EAAO07F,gBAAkB,GAErExxF,EAAK0xF,KAAK7jH,SAAS1b,SAKfqgI,EAJ0B,eAA1BxyF,EAAK0xF,KAAK3kH,aAAoD,aAAnBizB,EAAK0xF,KAAKn6H,MAAqD,IAA9ByoC,EAAK0xF,KAAK7jH,SAAS1b,OAGvE,aAAnB6tC,EAAK0xF,KAAKn6H,KACFmE,KAAKk3H,qCAAqC98F,EAAQh8B,EAAOhF,EAAMq9H,EAAWz/H,EAAG8L,EAAQ4zH,GAGrF12H,KAAKm3H,mBAAmB/8F,EAAQh8B,EAAOq4H,EAAWz/H,EAAG8L,EAAQ4zH,EAAKF,GANlEx2H,KAAKo3H,qBAAqBh9F,EAAQh8B,EAAOhF,EAAMq9H,EAAWz/H,EAAG8L,EAAQ4zH,IASpFpyF,EAAKrtC,GAAKqtC,EAAKrtC,EAAIw/H,EAAWx/H,IAChCqtC,EAAKrtC,EAAIw/H,EAAWx/H,GAElBD,GAAKA,EAAIstC,EAAKrB,MAChBjsC,EAAIstC,EAAKrB,KAETqB,EAAK0xF,KAAKa,WAAWpgI,SAErB+lE,OAAcviE,IAANjD,EAAkBA,EAAIy/H,EAAWz/H,EACzCggI,EAAah3H,KAAKq3H,6BAA6Bj9F,EAAQh8B,EAAOq4H,EAAYj6D,EAAO15D,EAAQyzH,GACpFI,IAED3/H,IADA+/H,EAAcD,EAAaE,GACVhgI,EAAI+/H,EAAYl0H,OAAS,EAAI4zH,EAAWl+H,MAAQ,EACjEu+H,EAAaC,GAEjB3jG,EAAI4jG,EAAaA,EAAWM,eAAYr9H,GAE5CqqC,EAAKttC,EAAIA,EACJstC,EAAKsmB,YACNtmB,EAAKizF,UAAYT,EAAWj0H,MAAQi0H,EAAW9/H,GAKnD,IAAIwgI,GACAp9F,OAAQA,EAAQh8B,MAAOA,EAAOq5H,aAHdzgI,EAAGA,EAAGC,EAAGw/H,EAAWx/H,EAAG4L,MAAO7L,EAAIy/H,EAAWl+H,MAAOuK,OAAQ2zH,EAAWx/H,EAAIw/H,EAAWn+H,QAG9Cw+H,WAAYA,EACpEY,IAAKjB,EAAYF,MAAOA,GAO5B,OALAv2H,KAAK23H,iBAAiBH,EAAepkG,OAAYn5B,IAATb,EAAoBo9H,GACxDlyF,EAAK9V,YAAyC,iBAApB8V,EAAK9V,aAC/B8V,EAAK9V,WAAWx3B,GAAKstC,EAAKszF,oBAE9Bx5H,EAAM04H,WAAaA,EACZA,EAhEP,OADA14H,EAAM04H,WAAa92H,KAAK63H,eAAez9F,EAAQh8B,EAAOhF,EAAMq9H,EAAYF,EAAOC,GACxEp4H,EAAM04H,YAmErB5B,EAAiB9kF,UAAUynF,eAAiB,SAAUz9F,EAAQh8B,EAAOhF,EAAMq9H,EAAYF,EAAOC,GAC1F,IAAIh1H,EACA8iC,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IACnCykC,EAAKttC,EAAIy/H,EAAWz/H,EACdstC,EAAKrtC,GAAKqtC,EAAKrtC,EAAIw/H,EAAWx/H,IAChCqtC,EAAKrtC,EAAIw/H,EAAWx/H,EACpBqtC,EAAKqxF,SAAWl5H,KAAKmJ,IAAI2wH,EAAOjyF,EAAKqxF,UAAY,IAErDn0H,GAAWxK,EAAGy/H,EAAWz/H,EAAGC,EAAGw/H,EAAWx/H,EAAG4L,MAAO4zH,EAAWz/H,EAAIy/H,EAAWl+H,MAAOuK,OAAQ2zH,EAAWx/H,EAAIw/H,EAAWn+H,QACvHgsC,EAAKqxF,SAAWl5H,KAAKmJ,IAAI0+B,EAAKqxF,UAAY,EAAGY,GAC7C,IAAIiB,GACAp9F,OAAQA,EAAQh8B,MAAOA,EAAOq5H,YAAaj2H,EAAQs1H,WAAYt1H,EAC/Dk2H,IAAKjB,EAAYF,MAAOA,GAG5B,OADAv2H,KAAK23H,iBAAiBH,OAAev9H,OAAoBA,IAATb,EAAoBo9H,IAC3Dx/H,EAAGstC,EAAKttC,EAAGC,EAAGqtC,EAAKrtC,EAAG4L,MAAOyhC,EAAKttC,EAAIy/H,EAAWl+H,MAAOuK,OAAQwhC,EAAKrtC,EAAIw/H,EAAWn+H,SAEjG48H,EAAiB9kF,UAAU2lF,gBAAkB,SAAU37F,EAAQ8F,GAC3D,IAAIoE,KAYJ,OAXAA,EAAKszF,mBAAqB,EACN,wBAAhBx9F,EAAOv+B,KACPyoC,EAAK0xF,MAAS3kH,YAAa,WAAYxV,KAAM,YAAaoU,OAAQ,GAAI6nH,eAAe,GAGrFxzF,EAAK0xF,MAAS3kH,YAAa,aAAcxV,KAAM,SAAUi8H,eAAe,GAE5ExzF,EAAK0xF,KAAK7jH,YACVmyB,EAAK0xF,KAAKa,cACVvyF,EAAK0xF,KAAKO,MAAQ,EAClBjyF,EAAKsmB,WAAY,EACVtmB,GAEX4wF,EAAiB9kF,UAAUunF,iBAAmB,SAAUH,EAAeO,EAASntE,EAAW4rE,GACvF,IAAIp8F,EAASo9F,EAAcp9F,OACvBh8B,EAAQo5H,EAAcp5H,MACtBq5H,EAAcD,EAAcC,YAC5BX,EAAaU,EAAcV,WAC3BP,EAAQiB,EAAcjB,MACtBmB,EAAMF,EAAcE,IACpBpzF,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAC/B2uB,EAAa4L,EAAOxe,UAAU0oB,EAAK9V,WAAa8V,EAAK9V,WAAWjgB,MAAQ+1B,EAAK0xF,KAAK7jH,SAAS,IAC3F6lH,EAAiBxpG,EAAa4L,EAAOw7F,WAAWpnG,EAAW3uB,IAAM,KACjE82H,EAAW32H,KAAK22H,SAASv8F,EAAQh8B,GACjCgR,EAAYpP,KAAKi4H,uBAAuB79F,EAAQq9F,EAAalB,EAAOjyF,EAAK4zF,aACzEC,EAAgBn4H,KAAKi4H,uBAAuB79F,EAAQ08F,EAAYP,EAAOjyF,EAAK4zF,aAC5EnB,KAEA3nH,EAAU3Y,QAAU6tC,EAAKsmB,WACzBtmB,EAAKl1B,UAAYA,EACjBpP,KAAKo4H,yBAAyBh+F,EAAQh8B,EAAOq5H,GAC7CnzF,EAAKgzF,UAAYhzF,EAAK4nB,UACNjyD,IAAZ89H,IACAzzF,EAAKgzF,UAAY76H,KAAKyK,IAAI6wH,EAASzzF,EAAKgzF,YAExC9oG,QAA2Cv0B,IAA7B+9H,EAAeV,YACzBU,EAAeV,WAAahzF,EAAKgzF,YACjChzF,EAAK+zF,YAAa,GAEtB/zF,EAAKgzF,UAAY76H,KAAKyK,IAAIo9B,EAAKgzF,UAAWU,EAAeV,YAEzD1sE,IACAtmB,EAAKttC,GAAKstC,EAAKgzF,UACfhzF,EAAKszF,oBAAsBtzF,EAAKgzF,UAC5BX,IACA32H,KAAKs4H,kBAAkBl+F,EAAQ+9F,EAAe7zF,EAAKgzF,WACnDR,EAAW9/H,EAAIyF,KAAKyK,IAAI4vH,EAAW9/H,EAAGstC,EAAKttC,GAC3C8/H,EAAWj0H,MAAQpG,KAAKmJ,IAAIkxH,EAAWj0H,MAAOyhC,EAAKttC,EAAI0gI,EAAIn/H,OAC3Du+H,EAAWh0H,OAASrG,KAAKmJ,IAAIkxH,EAAWh0H,OAAQwhC,EAAKrtC,EAAIygI,EAAIp/H,QAC7Dw+H,EAAW9/H,GAAKstC,EAAKgzF,UACrBR,EAAWj0H,OAASyhC,EAAKgzF,WAEzB9oG,GAAcwpG,EAAeV,UAAYhzF,EAAKgzF,UAC9ChzF,EAAKgzF,UAAYU,EAAeV,UAAYhzF,EAAKgzF,UAE5C9oG,QAAiCv0B,IAAnBqqC,EAAKgzF,YACxBhzF,EAAKgzF,UAAY,MAKrBX,IACAG,EAAW9/H,EAAIyF,KAAKyK,IAAI4vH,EAAW9/H,EAAGygI,EAAYzgI,GAClD8/H,EAAWj0H,MAAQpG,KAAKmJ,IAAIkxH,EAAWj0H,MAAO40H,EAAYzgI,EAAI0gI,EAAIn/H,OAClEu+H,EAAWh0H,OAASrG,KAAKmJ,IAAIkxH,EAAWh0H,OAAQwhC,EAAKrtC,EAAIygI,EAAIp/H,SAE5DgsC,EAAKsmB,YACNtmB,EAAKgzF,UAAY,EACjBhzF,EAAKszF,mBAAqB,IAG7BpB,IACDiB,GAAgBzgI,EAAGstC,EAAKttC,EAAGC,EAAGygI,EAAIzgI,EAAG4L,MAAOyhC,EAAKttC,EAAI0gI,EAAIn/H,MAAOuK,OAAQ40H,EAAIzgI,EAAIygI,EAAIp/H,QACpFy+H,EAAYjgI,MAAOyhI,QAASd,IAC5Bz3H,KAAKw4H,iBAAiBp+F,EAAQh8B,EAAO24H,EAAaR,KAG1DrB,EAAiB9kF,UAAUooF,iBAAmB,SAAUp+F,EAAQh8B,EAAO24H,EAAaR,EAAOnnH,GACvF,IAAIqpH,EACA31G,EAEApsB,EAEAy4C,EACAupF,EACA51H,EALA61H,GAAa,EAEbr0F,KAWJ,GAPIlmC,IAEAgR,GADAk1B,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,KACduP,UACjBupH,GAAcr0F,EAAK0xF,KAAK7jH,SAAS1b,SAAW6tC,EAAK0xF,KAAKa,WAAWpgI,QAErE04C,EAAa4nF,EAAY,GAAGwB,QAC5BG,EAAY3B,EAAYA,EAAYtgI,OAAS,GAAG8hI,QAC5CnpH,GAAaA,EAAU3Y,OAAQ,CAkB/B,IAhBAqM,GADA21H,EAAOr+F,EAAOs7F,OAAOtmH,EAAU,IAAImpH,SACrBz1H,OACV21H,EAAKxhI,EAAIk4C,EAAWl4C,IACpBwhI,EAAK31H,OAASqsC,EAAWl4C,EACzB8/H,EAAYxwH,OAAO,EAAG,GAAKgyH,QAASE,KAEpC31H,EAAS41H,EAAU51H,OACnBi0H,EAAYjgI,MAAOyhI,SAAWvhI,EAAGyhI,EAAKzhI,EAAG6L,MAAO41H,EAAK51H,MAAO5L,EAAGk4C,EAAWrsC,OAAQA,OAAQA,MAG1F21H,EAAOr+F,EAAOs7F,OAAOtmH,EAAUA,EAAU3Y,OAAS,IAAI8hI,QAClDI,GAAcF,EAAK31H,OAAS41H,EAAU51H,SACtC21H,EAAKxhI,EAAIyhI,EAAU51H,OACnBi0H,EAAYjgI,MAAOyhI,QAASE,MAGpC31G,EAAQ1T,EAAU,GACb1Y,EAAIqgI,EAAYtgI,OAAS,EAAGC,GAAK,EAAGA,IACrC0jC,EAAOs7F,OAAOnvH,OAAOuc,EAAO,EAAGi0G,EAAYrgI,IAE/CosB,GAASi0G,EAAYtgI,OACrB2jC,EAAOs7F,OAAOnvH,OAAOuc,EAAO1T,EAAU3Y,aAItC,IADAqsB,EAAQ9iB,KAAK44H,UAAUx+F,EAAQ28F,EAAYA,EAAYtgI,OAAS,GAAG8hI,QAAShC,GACvE7/H,EAAIqgI,EAAYtgI,OAAS,EAAGC,GAAK,EAAGA,IACrC0jC,EAAOs7F,OAAOnvH,OAAOuc,EAAO,EAAGi0G,EAAYrgI,KAIvDw+H,EAAiB9kF,UAAUkoF,kBAAoB,SAAUl+F,EAAQhrB,EAAW88C,GACxE,IAAIx1D,EAEJ,GAAa,IAATw1D,EACA,IAAKx1D,EAAI,EAAGA,EAAI0Y,EAAU3Y,OAAQC,IAC1B0jC,EAAOs7F,OAAOtmH,EAAU1Y,IAAI6hI,UAC5Bn+F,EAAOs7F,OAAOtmH,EAAU1Y,IAAI6hI,QAAQvhI,GAAKk1D,EACzC9xB,EAAOs7F,OAAOtmH,EAAU1Y,IAAI6hI,QAAQ11H,OAASqpD,IAK7DgpE,EAAiB9kF,UAAU6mF,0BAA4B,SAAU78F,EAAQh8B,EAAO0E,EAAQxK,EAAQo+H,EAAKmC,GACjG,IAEIC,EACApiI,EACAqiI,EACAnzH,EALA0+B,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAC/Bm5H,KAOJ,IAFApzH,EAAM9C,EAEDpM,EAAI,EAAGA,EAAI4tC,EAAK0xF,KAAKa,WAAWpgI,OAAQC,KACzCsiI,EAAO5+F,EAAOw7F,WAAWtxF,EAAK0xF,KAAKa,WAAWngI,OAE1CsiI,EAAKhD,KAAK7jH,SAAW6mH,EAAKhD,KAAKa,cAC/BmC,EAAK/hI,EAAI6L,EAETg2H,GADAC,EAAc3+F,EAAOxe,UAAU0oB,EAAK0xF,KAAKa,WAAWngI,KAC3B6V,WAAWjU,QACQ,IAAxC8hC,EAAO/oB,YAAYiP,QAAQ,UAC3Bw4G,EAAaC,EAAYxsH,WAAWhU,OAExCqN,EAAM9C,EAASg2H,EAAaD,EAAS,EACrCz+F,EAAOu7F,SAAWe,EAAM,EACpBhgI,EAAI,GAAM,GAAKA,IAAM4tC,EAAK0xF,KAAKa,WAAWpgI,OAAS,IACnDqM,EAAS8C,EACT8wH,MAIZ,OAASH,MAAOn8F,EAAOu7F,SAAU7yH,OAAQA,EAASg2H,EAAaD,IAEnE3D,EAAiB9kF,UAAUinF,6BAA+B,SAAUj9F,EAAQh8B,EAAOs5H,EAAKl7D,EAAO15D,EAAQyzH,GACnG,IACI0C,EAEAz3H,EACAu3H,EACAriI,EAIAkM,EACAspD,EACA98C,EACA2nH,EAZAiC,KAMA10F,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAE/B62H,EAAMH,EAKV,IAAK7/H,EAAI,EAAGA,EAAI4tC,EAAK0xF,KAAKa,WAAWpgI,OAAQC,KACzCsiI,EAAO5+F,EAAOw7F,WAAWtxF,EAAK0xF,KAAKa,WAAWngI,OAM1CuiI,GADAF,EAAc3+F,EAAOxe,UAAU0oB,EAAK0xF,KAAKa,WAAWngI,KAC5B6V,WAAWhU,OACS,IAAxC6hC,EAAO/oB,YAAYiP,QAAQ,UAC3B24G,EAAYF,EAAYxsH,WAAWjU,QAGnCsK,EADAlM,EAAI,GAAM,EACH8lE,EAAQk7D,EAAIn/H,MAAQ,EAAI,GAAK0gI,EAG7Bz8D,EAAQk7D,EAAIn/H,MAAQ,EAAI,GAGnCiJ,EAASxB,KAAKk2H,WAAW97F,EAAQx3B,EAAMo2H,EAAK/hI,EAAGmjC,EAAOxe,UAAU0oB,EAAK0xF,KAAKa,WAAWngI,IAAKggI,EAAM,GAC3F12H,KAAK22H,SAASv8F,EAAQh8B,KACb,IAAN1H,EACAqgI,EAAcv1H,EAGdxB,KAAKk5H,WAAWnC,EAAav1H,IAGjC9K,EAAI,GAAM,GAAKsiI,EAAKzI,aAEhBrkE,OADSjyD,IAATiyD,EACO8sE,EAAK1B,UAGL76H,KAAKyK,IAAIglD,EAAM8sE,EAAK1B,YAG/B5gI,EAAI,GAAM,GAAKA,IAAM4tC,EAAK0xF,KAAKa,WAAWpgI,OAAS,IACnD2Y,EAAYpP,KAAKi4H,uBAAuB79F,EAAQ54B,EAAQk1H,EAAM,GAE9D12H,KAAKw4H,iBAAiBp+F,EAAQ,OAASm+F,QAAS/2H,IAAWk1H,EAAM,EAAGtnH,GACpEsnH,MAOZ,OAHIK,IACAA,EAAYO,UAAYprE,GAErB6qE,GAEX7B,EAAiB9kF,UAAUwmF,cAAgB,SAAUx8F,EAAQh8B,EAAOpH,EAAGC,EAAGs/H,GACtE,IAAIh+H,EACJA,EAAQ6F,EAAMmO,WAAWhU,MACzB,IAAID,EAEJ,GADAA,EAAS8F,EAAMmO,WAAWjU,QACkB,IAAxC8hC,EAAO/oB,YAAYiP,QAAQ,QAAgB,CAC3C,IAAKi2G,EAAO,CACR,IAAI5lH,OAAO,EACXA,EAAO3Z,EACPA,EAAIC,EACJA,EAAI0Z,EAERrY,EAAS8F,EAAMmO,WAAWhU,MAC1BA,EAAQ6F,EAAMmO,WAAWjU,OAE7B,OAAStB,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOA,EAAOD,OAAQA,IAE/C48H,EAAiB9kF,UAAUumF,SAAW,SAAUv8F,EAAQh8B,GAEpD,IAAI+6H,EAAS/+F,EAAOw7F,WAAWx3H,EAAMyB,IACrC,OAAOs5H,EAAOnD,KAAK7jH,UAAYgnH,EAAOnD,KAAK7jH,SAAS1b,QAExDy+H,EAAiB9kF,UAAUgnF,qBAAuB,SAAUh9F,EAAQh8B,EAAOhF,EAAMpC,EAAGC,EAAGs/H,GAEnF,IAAIE,EACJA,EAAaz2H,KAAK42H,cAAcx8F,EAAQh8B,EAAOpH,EAAGC,EAAGs/H,GACrD,IAGIG,EAHApyF,KAEAtD,GADJsD,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,KACfm2H,KAAKn6H,KAErB66H,EAAMH,EACN,IAAI1zH,EAAQ,EACZA,EAAQ7L,EACR,IAAI8L,EACJA,EAAS7L,EACT,IAAIsB,EACAD,EACAiW,EACAunC,EACAsjF,EACAC,EAEA73H,EACA83H,EACA3D,EAEA2B,EACAiC,EACA7iI,EACA8iI,EAEAxB,EAEJ,GADmB59F,EAAOs7F,OAAO91G,MAAM,EAAGwa,EAAOs7F,OAAOj/H,QACpDuJ,KAAK22H,SAASv8F,EAAQh8B,GAAQ,CAC9B,IAAI6lC,OAAI,EAER,IADAA,GAA4C,IAAxC7J,EAAO/oB,YAAYiP,QAAQ,QAC1B5pB,EAAI,EAAGA,EAAI4tC,EAAK0xF,KAAK7jH,SAAS1b,OAAQC,IAAK,CAqC5C,GApCA6X,EAAQ6rB,EAAOxe,UAAU0oB,EAAK0xF,KAAK7jH,SAASzb,IAC5C6B,EAAQgW,EAAMhC,WAAWhU,MACzBD,EAASiW,EAAMhC,WAAWjU,OAC1B8gI,EAAan1F,EAAI3rC,EAASC,EAC1B8gI,EAAcp1F,EAAI1rC,EAAQD,EACb8hC,EAAOs7F,OAAOgB,EAAM,GAAKt8F,EAAOs7F,OAAOgB,EAAM,GAAG6B,QAAU,KAEvEziF,EAAc91C,KAAKk2H,WAAW97F,EAAQv3B,EAAOC,EAAQyL,EAAOmoH,EAAM,EAAGt8F,EAAOxe,UAAU0oB,EAAK0xF,KAAK7jH,SAASzb,EAAI,KAC7G8iI,EAAYp/F,EAAOw7F,WAAWrnH,EAAM1O,IACpCykC,EAAKqxF,SAAWl5H,KAAKmJ,IAAI0+B,EAAKqxF,UAAY,EAAG6D,EAAU7D,UAAY,GACnE2D,GAActiI,EAAGwiI,EAAUxiI,EAAGC,EAAGuiI,EAAUviI,EAAG4L,MAAO22H,EAAUxiI,EAAIoiI,EAAYt2H,OAAQ02H,EAAUviI,EAAIoiI,GAC3F,IAAN3iI,IAEA8K,GACIxK,EAAGyF,KAAKyK,IAAIsyH,EAAUxiI,EAAG8+C,EAAY9+C,GAAIC,EAAGwF,KAAKyK,IAAIsyH,EAAUviI,EAAG6+C,EAAY7+C,GAC9E4L,MAAOizC,EAAYjzC,MAAOC,OAAQgzC,EAAYhzC,QAElDk1H,EAAiBwB,GAEhBD,GAIDA,EAAaviI,EAAIsiI,EAAUtiI,EAC3BuiI,EAAatiI,EAAIqiI,EAAUriI,EACvBqiI,EAAUz2H,MAAQ02H,EAAa12H,QAC/B02H,EAAa12H,MAAQy2H,EAAUz2H,OAEnC02H,EAAaz2H,OAASw2H,EAAUx2H,QARhCy2H,EAAeD,EAaT,IAAN5iI,IACA4tC,EAAK9V,YAAex3B,EAAGwiI,EAAUxiI,EAAGsgI,UAAWkC,EAAUlC,UAAW/oH,MAAOA,EAAM1O,KAEjFG,KAAK22H,SAASv8F,EAAQ7rB,GACtB,IAAK+1B,EAAK9V,YAAc8V,EAAK9V,WAAWx3B,GAAKwiI,EAAUhrG,WAAWx3B,EAAG,CAC7DwiI,EAAUhrG,YAAc8V,EAAK9V,WAAW8oG,UAAYkC,EAAUlC,YAC9DhzF,EAAK9V,WAAW8oG,UAAYA,EAC5BkC,EAAUlC,UAAYA,EACtBA,EAAYhzF,EAAK9V,WAAW8oG,UAC5Bl9F,EAAOw7F,WAAWtxF,EAAK9V,WAAWjgB,OAAO+oH,UAAYA,GAEzD,IAAImC,OAA6Bx/H,IAAdq9H,EAA0BA,EAAYkC,EAAUlC,UACnEhzF,EAAK9V,YAAex3B,EAAGwiI,EAAUhrG,WAAWx3B,EAAGsgI,UAAWmC,EAAclrH,MAAOA,EAAM1O,SAEhF25H,EAAUhrG,YAAcgrG,EAAUnB,YAAc/zF,EAAK9V,WAAW8oG,UAAYkC,EAAUlC,YAC3FhzF,EAAK9V,WAAW8oG,UAAYl9F,EAAOw7F,WAAWtxF,EAAK9V,WAAWjgB,OAAO+oH,UAAYkC,EAAUlC,WAGnG3B,EAAWA,EAAWl5H,KAAKmJ,IAAI4zH,EAAU7D,SAAUA,GAAY6D,EAAU7D,SACzE31H,KAAKk5H,WAAW13H,EAAQs0C,GAEpBjzC,EADM,IAANnM,IAAYsJ,KAAK22H,SAASv8F,EAAQ7rB,IAAUirH,EAAU5B,mBAAqB,EACnE9hF,EAAYjzC,MAAQ22H,EAAU5B,mBAAqBx9F,EAAOy7F,kBAG1D//E,EAAYjzC,MAAQu3B,EAAOy7F,kBAGtC1mH,WAxELuqH,KAyEI1B,EAAeV,eAzEnBoC,GA2EAp1F,EAAKrB,KAAO+0F,EAAehhI,EAAIuiI,EAAa12H,OAAS,EAAI4zH,EAAWl+H,MAAQ,EAE/D,SAATyoC,EACAsD,EAAKrB,IAAMq2F,EAAUz2H,MAAQ4zH,EAAWl+H,MAE1B,UAATyoC,IACLsD,EAAKrB,IAAMjsC,GAGnB,OAAOwK,GAEX0zH,EAAiB9kF,UAAU8mF,qCAAuC,SAAU98F,EAAQh8B,EAAOhF,EAAMpC,EAAGC,EAAGs/H,GAEnG,IAAIhoH,EACAirH,EACA1jF,EACAsjF,EAIA53H,EAEAjJ,EACAD,EAKAjC,EACAK,EAGAijI,EACAC,EAEAnD,EAAaz2H,KAAK42H,cAAcx8F,EAAQh8B,EAAOpH,EAAGC,EAAGs/H,GACrDjyF,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAE/B62H,GADOpyF,EAAK0xF,KAAKn6H,KACX06H,GACN1zH,EAAQ7L,EACR8L,EAAS7L,EAET4iI,GADmBz/F,EAAOs7F,OAAO91G,MAAM,EAAGwa,EAAOs7F,OAAOj/H,QACvC,GACrB,GAAIuJ,KAAK22H,SAASv8F,EAAQh8B,GAAQ,CAC9B,IAAI6lC,GAA4C,IAAxC7J,EAAO/oB,YAAYiP,QAAQ,QAC/B8d,OAAQ,EACRtgB,EAAO9d,KAAK85H,oBAAoB1/F,EAAQh8B,GACxC27H,EAAuC,IAA9Bz1F,EAAK0xF,KAAK7jH,SAAS1b,QAAmC,IAAnBqnB,EAAK,GAAGrnB,OACpDujI,KACAC,KACCF,EAIDE,EAAYn8G,EAHZ9d,KAAKk6H,UAAUp8G,EAAMk8G,EAAUC,GAKnC,IAAIE,GAAaH,SAAUA,EAAUl8G,KAAMA,EAAMm8G,UAAWA,EAAWxD,WAAYA,GAC/E2D,EAAYp6H,KAAKq6H,eAAejgG,EAAQ+/F,EAAU/7H,EAAOpH,EAAG8L,EAAQ4zH,GACxEl1H,EAAS24H,EAAS34H,OAClB,IAAI84H,OAAS,EACTr5H,GAAUm5H,GAAa,SAAoBngI,IAAdmgI,EAA2BhgG,EAAOy7F,kBAAoB,EAAK,QAC1E57H,IAAdmgI,IACA91F,EAAKrB,IAAMhiC,EAASw1H,EAAWl+H,MAAQ,EACvC+hI,EAASF,EAAYhgG,EAAOy7F,mBAEhC/yH,EAAS7L,EACT,IAAIsjI,OAAc,EAElB,IADAA,KACK7jI,EAAI,EAAGA,EAAIujI,EAAUxjI,OAAQC,IAU9B,IARImM,EADAib,EAAKpnB,GAAGD,OAAS,GAAM,GAAKC,IAAMujI,EAAUxjI,OAAS,GAAKsjI,EAClD/iI,EAGAsjI,GAAUtjI,EAEZ,IAANN,IACAoM,EAASy3H,EAAY7jI,EAAI,GAAGoM,OAASs3B,EAAO07F,iBAE3Cz/H,EAAI,EAAGA,EAAI4jI,EAAUvjI,GAAGD,OAAQJ,IAEjCkC,GADAgW,EAAQ6rB,EAAOxe,UAAUq+G,EAAUvjI,GAAGL,KACxBkW,WAAWhU,MACzBD,EAASiW,EAAMhC,WAAWjU,OAC1B8gI,EAAan1F,EAAI3rC,EAASC,GAC1BihI,EAEYp/F,EAAOw7F,WAAWrnH,EAAM1O,KAC1Bq4H,YAAcxB,EAAM,EAAIhgI,EACxB,IAANL,GAAW2jI,EAAStjI,IAAMsjI,EAAStjI,GAAGD,SACtC+iI,EAAU5uE,WAAY,GAEtBmvE,GAAgB,IAANrjI,IACA,IAANL,GAAWsjI,EAAaP,EAAah/F,EAAOy7F,mBAAqB+D,IACjEx7F,GAAQ,EACRv7B,EAAQ82H,EAAaP,EAAa,GAElCh7F,GAAe,IAAN/nC,IACTwM,EAAQ+2H,EAAcR,EAAa,IAG3CtjF,EAAc91C,KAAKk2H,WAAW97F,EAAQv3B,EAAOC,EAAQyL,EAAOmoH,EAAM,EAAGt8F,EAAOxe,UAAUq+G,EAAUvjI,GAAGL,EAAI,KACnG0jI,GAAU1jI,GAAK,GAAW,IAANK,GACV,IAANL,IACAsjI,EAAa7jF,EAAY9+C,EAAIojC,EAAOy7F,kBAAoB,EACxD+D,EAAc9jF,EAAY9+C,EAAIoiI,EAAah/F,EAAOy7F,kBAAoB,GAGpE,IAANx/H,EACAkkI,EAAY7jI,IAAOM,EAAG8+C,EAAY9+C,EAAGC,EAAG6+C,EAAY7+C,EAAG4L,MAAOizC,EAAYjzC,MAAOC,OAAQgzC,EAAYhzC,QAGrG9C,KAAKk5H,WAAWqB,EAAY7jI,GAAIo/C,GAE/Bt0C,IACDA,GACIxK,EAAGujI,EAAY7jI,GAAGM,EAAGC,EAAGsjI,EAAY7jI,GAAGO,EAAG4L,MAAO03H,EAAY7jI,GAAGmM,MAChEC,OAAQy3H,EAAY7jI,GAAGoM,SAG/B9C,KAAKk5H,WAAW13H,EAAQ+4H,EAAY7jI,IACpCmM,EAAQizC,EAAYjzC,MAAQu3B,EAAOy7F,oBAC9BvxF,EAAK9V,aAAgB93B,IAAMujI,EAAUxjI,OAAS,GAAKqnB,EAAKpnB,GAAGD,OAAS,GAAM,GAAMsjI,IACxE,IAAN1jI,QAAmC4D,IAAxBu/H,EAAUlC,WAA2BuC,EAAiBL,EAAUlC,aAC9EuC,EAAiBp9H,KAAKyK,IAAI2yH,EAAgBL,EAAUlC,WAAa,GACjEhzF,EAAK9V,YAAex3B,EAAGwiI,EAAUxiI,EAAGuX,MAAOA,EAAM1O,GAAIy3H,UAAWkC,EAAUlC,YAE9E6C,EAASR,WAAaA,EACtBQ,EAASP,YAAcA,EACvBO,EAAS/7F,MAAQA,EACjB+7F,EAAS5D,MAAQG,EACjByD,EAASI,YAAcA,EACvBv6H,KAAKw6H,kBAAkBpgG,EAAQ1jC,EAAG0H,EAAO+7H,EAAUG,GAI/D,OAAO94H,GAEX0zH,EAAiB9kF,UAAUiqF,eAAiB,SAAUjgG,EAAQ+/F,EAAU/7H,EAAOpH,EAAG8L,EAAQ4zH,GAWtF,IAAK,IARD7zH,EAEAg3H,EACAO,EACAtkF,EACAt0C,EAPAw4H,EAAWG,EAASH,SACpB11F,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAE/B46H,KAKAx2F,GAA4C,IAAxC7J,EAAO/oB,YAAYiP,QAAQ,QAE1B5pB,EAAI,EAAGA,EAAIsjI,EAASvjI,QAAUujI,EAAStjI,GAAGD,OAAQC,IAAK,CAC5DmM,EAAQ7L,EACJyjI,EAAW/jI,EAAI,KACfoM,EAAS23H,EAAW/jI,EAAI,GAAGoM,OAASs3B,EAAO07F,iBAE/C,IAAK,IAAIz/H,EAAI,EAAGA,EAAI2jI,EAAStjI,GAAGD,OAAQJ,IAAK,CACzC,IAAIkY,EAAQ6rB,EAAOxe,UAAUo+G,EAAStjI,GAAGL,IAIrCmjI,GAHav1F,EAAI11B,EAAMhC,WAAWjU,OAASiW,EAAMhC,WAAWhU,MAC9C0rC,EAAI11B,EAAMhC,WAAWhU,MAAQgW,EAAMhC,WAAWjU,OAEhD8hC,EAAOw7F,WAAWrnH,EAAM1O,KACxC25H,EAAUtB,YAAcxB,EAAM,EAAIhgI,EAClCo/C,EAAc91C,KAAKk2H,WAAW97F,EAAQv3B,EAAOC,EAAQyL,EAAOmoH,EAAM,EAAGt8F,EAAOxe,UAAUo+G,EAAStjI,GAAGL,EAAI,KAC5F,IAANA,EACAokI,EAAW/jI,IAAOM,EAAG8+C,EAAY9+C,EAAGC,EAAG6+C,EAAY7+C,EAAG4L,MAAOizC,EAAYjzC,MAAOC,OAAQgzC,EAAYhzC,QAGpG9C,KAAKk5H,WAAWuB,EAAW/jI,GAAIo/C,GAEzB,IAANp/C,GAAiB,IAANL,GACXwjI,EAAiBL,EAAUlC,UAC3BhzF,EAAK9V,YAAex3B,EAAGwiI,EAAUxiI,EAAGuX,MAAOA,EAAM1O,GAAIy3H,UAAWkC,EAAUlC,YAE/D,IAANjhI,QAAmC4D,IAAxBu/H,EAAUlC,WAA2BuC,EAAiBL,EAAUlC,YAChFuC,EAAiBp9H,KAAKyK,IAAI2yH,EAAgBL,EAAUlC,WAAa,GACjEhzF,EAAK9V,YAAex3B,EAAGwiI,EAAUxiI,EAAGuX,MAAOA,EAAM1O,GAAIy3H,UAAWkC,EAAUlC,YAE9Ez0H,EAAQizC,EAAYjzC,MAAQu3B,EAAOy7F,kBAGnCuE,EADM,IAAN1jI,EACY+jI,EAAW/jI,GAAGmM,MAGdpG,KAAKmJ,IAAIw0H,EAAWK,EAAW/jI,GAAGmM,OAItD,IAASnM,EAAI,EAAGA,EAAIsjI,EAASvjI,QAAUujI,EAAStjI,GAAGD,OAAQC,IAAK,CAC5D,GAAI0jI,IAAcK,EAAW/jI,GAAGmM,MAEvB,CAAA,IADDqpD,EAAOkuE,EAAYK,EAAW/jI,GAAGmM,MACrC,IAASxM,EAAI,EAAGA,EAAI2jI,EAAStjI,GAAGD,OAAQJ,IAAK,CAC3B+jC,EAAOxe,UAAUo+G,EAAStjI,GAAGL,IACzB+jC,EAAOw7F,WAAWoE,EAAStjI,GAAGL,IACpCW,GAAKk1D,GAKf,IAANx1D,EACA8K,GAAWxK,EAAGyjI,EAAW,GAAGzjI,EAAGC,EAAGwjI,EAAW,GAAGxjI,EAAG4L,MAAO43H,EAAW,GAAG53H,MAAOC,OAAQ23H,EAAW,GAAG33H,QAGrG9C,KAAKk5H,WAAW13H,EAAQi5H,EAAW/jI,IAI3C,OADAyjI,EAAS34H,OAASA,EACX44H,GAEXlF,EAAiB9kF,UAAUoqF,kBAAoB,SAAUpgG,EAAQ1jC,EAAG0H,EAAO+7H,EAAUG,GACjF,IAAI10H,EACA80H,EACAxuE,EACA5nB,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAC/Bie,EAAOq8G,EAASr8G,KAChBm8G,EAAYE,EAASF,UACrBN,EAAaQ,EAASR,WACtBC,EAAcO,EAASP,YACvBx7F,EAAQ+7F,EAAS/7F,MACjBm8F,EAAcJ,EAASI,YACvB9D,EAAa0D,EAAS1D,WACtBC,EAAMyD,EAAS5D,MACfwD,EAAuC,IAA9Bz1F,EAAK0xF,KAAK7jH,SAAS1b,QAAmC,IAAnBqnB,EAAK,GAAGrnB,OAIxD,GAHIsjI,GAAgB,IAANrjI,IACVkP,EAAO20H,EAAY,GAAG13H,MAAQ03H,EAAY,GAAGvjI,GAAOujI,EAAY,GAAG13H,MAAQ03H,EAAY,GAAGvjI,EAAK,EAAI,GAEnGN,IAAMonB,EAAKrnB,OAAS,IAChBqnB,EAAKpnB,GAAGD,OAAS,GAAM,GAAKsjI,GAAgB,IAANrjI,GAAS,CAC/CgkI,EAAWT,EAAUvjI,GAAG+F,KAAKymC,MAAM+2F,EAAUvjI,GAAGD,OAAS,IACzD,IAAIkkI,OAAc,EAClBA,EAAcvgG,EAAOxe,UAAU8+G,GAC/B,IAAIE,OAAiB,EACjBC,EAAYzgG,EAAOw7F,WAAW8E,GAAU1jI,EACxC8jI,EAAY1gG,EAAOw7F,WAAW8E,GAAUzjI,EAC5C2jI,EAAiB56H,KAAK42H,cAAcx8F,EAAQugG,EAAaE,EAAWC,EAAWpE,EAAM,GACrFxqE,OAAOjyD,GACFmkC,GAAS27F,GACE,IAARn0H,IACAlP,EAAI,GAERw1D,GAAQquE,EAAY30H,GAAK5O,EAAIujI,EAAY30H,GAAK/C,OAAS,GAAK03H,EAAY7jI,GAAGM,EAAIujI,EAAY7jI,GAAGmM,OAAS,EAC7F,IAANnM,IACA4tC,EAAKrB,KAAOipB,IAGV6tE,QAAqB9/H,IAAXqgI,IAChBpuE,EAAOouE,EAASlgG,EAAOy7F,kBAAoB,GAAKgF,EAAYD,EAAeriI,MAAQ,SAE1E0B,IAATiyD,GACAlsD,KAAK+6H,uBAAuB3gG,EAAQ6/F,EAAUvjI,GAAIw1D,EAAMuqE,GAExDsD,IACAz1F,EAAKrB,KAAO22F,EAAcD,GAAc,GAAW,IAANjjI,EAAUw1D,EAAO,GAAKuqE,EAAWl+H,MAAQ,QAEzE0B,IAAbqqC,EAAKrB,KAAqB7I,EAAOw7F,WAAW8E,KAC5Cp2F,EAAKrB,IAAM43F,GAEfz8F,GAAQ,EACR1nC,MAIZw+H,EAAiB9kF,UAAU2qF,uBAAyB,SAAU3gG,EAAQ6/F,EAAW/tE,EAAMuqE,GACnF,IAAK,IAAIpgI,EAAI,EAAGA,EAAI4jI,EAAUxjI,OAAQJ,IAAK,CACvC,IAAImjI,EAAYp/F,EAAOw7F,WAAWqE,EAAU5jI,IAChC+jC,EAAOxe,UAAUq+G,EAAU5jI,IAGvC,GAFAmjI,EAAUxiI,GAAKk1D,EACfstE,EAAUlC,WAAaprE,EACnB71D,IAAM4jI,EAAUxjI,OAAS,EAAG,CAE5B,IAAIukI,GACAhkI,EAAGwiI,EAAUxiI,EAAGC,EAAGuiI,EAAUviI,EAAG4L,MAAO22H,EAAUxiI,EAC7Cy/H,EAAWl+H,MAAOuK,OAAQ02H,EAAUviI,EAAIw/H,EAAWn+H,QAEvD8W,EAAYpP,KAAKi4H,uBAAuB79F,EAAQ4gG,EAAWxB,EAAUtB,aACzEl4H,KAAKw4H,iBAAiBp+F,EAAQ,OAASm+F,QAASyC,IAAcxB,EAAUtB,YAAa9oH,MAIjG8lH,EAAiB9kF,UAAU8pF,UAAY,SAAUp8G,EAAMk8G,EAAUC,GAC7D,IAAK,IAAIvjI,EAAI,EAAGA,EAAIonB,EAAKrnB,OAAQC,IAAK,CAClCsjI,EAAStjI,MACTujI,EAAUvjI,MACV,IAAIukI,OAAO,EAEX,GADAA,EAAOn9G,EAAKpnB,GAAGD,OACXqnB,EAAKpnB,GAAGD,OAAS,GAAM,EAAG,CAC1BwkI,EAAOx+H,KAAK+oC,KAAK1nB,EAAKpnB,GAAGD,OAAS,GAClC,IAAK,IAAI+sB,EAAI,EAAGA,EAAIy3G,EAAMz3G,IACtBw2G,EAAStjI,GAAGI,KAAKgnB,EAAKpnB,GAAG8sB,IAGjC,IAAK,IAAIntB,EAAI2jI,EAAStjI,GAAGD,OAAQJ,EAAIynB,EAAKpnB,GAAGD,OAAQJ,IACjD4jI,EAAUvjI,GAAGI,KAAKgnB,EAAKpnB,GAAGL,MAItC6+H,EAAiB9kF,UAAU+mF,mBAAqB,SAAU/8F,EAAQh8B,EAAOpH,EAAGC,EAAGs/H,EAAO2E,GAYjEl7H,KAAK42H,cAAcx8F,EAAQh8B,EAAOpH,EAAGC,EAAGs/H,GAVzD,IAAIhoH,EACAirH,EACA1jF,EACAsjF,EACAC,EACA9I,EACA/uH,EACA83H,EACA6B,EACAC,EAQA1E,EANApyF,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAC/B2uB,EAAa4L,EAAOxe,UAAU0oB,EAAK0xF,KAAK7jH,SAAS,IACjD8xB,GAA4C,IAAxC7J,EAAO/oB,YAAYiP,QAAQ,QAC/BuvE,EAA4B,SAAnBvrD,EAAK0xF,KAAKn6H,MAAmB,EAAI,EAC1CgH,EAAQ7L,EACR8L,EAAS7L,EAEby/H,EAAMH,EACN,IAAI7/H,EACA0Y,EACAvT,EAGAy7H,EAFA5B,KACA2F,KAEJ,IACK3kI,EAAI,EAAGA,EAAI4tC,EAAK0xF,KAAK7jH,SAAS1b,OAAQC,IAAK,CA+D5C,GA9DuB,cAAnB4tC,EAAK0xF,KAAKn6H,OAEVA,EAAQnF,EAAI,GAAM,GAAK4tC,EAAK0xF,KAAK7jH,SAAS1b,OAAS,EAAK,OAAS,QACjEo5F,EAAUn5F,EAAI,GAAM,GAAK4tC,EAAK0xF,KAAK7jH,SAAS1b,OAAS,GAAM,EAAI,GAEnEoM,EAAQ7L,EAAIgJ,KAAKs7H,WAAWlhG,EAAQh8B,EAAOkmC,EAAMzoC,GACjD0S,EAAQ6rB,EAAOxe,UAAU0oB,EAAK0xF,KAAK7jH,SAASzb,IAC5C0iI,EAAan1F,EAAI11B,EAAMhC,WAAWjU,OAASiW,EAAMhC,WAAWhU,MAC5D8gI,EAAcp1F,EAAI11B,EAAMhC,WAAWhU,MAAQgW,EAAMhC,WAAWjU,OAE5Dw9C,EAAc91C,KAAKk2H,WAAW97F,EAAQv3B,EAAQgtF,EAASupC,EAAYt2H,EAAQyL,EAAOgoH,EAAQ,OAAGt8H,GAAW,GACxGu/H,EAAYp/F,EAAOw7F,WAAWrnH,EAAM1O,IACpCy5H,GAActiI,EAAGwiI,EAAUxiI,EAAGC,EAAGuiI,EAAUviI,EAAG4L,MAAO22H,EAAUxiI,EAAIoiI,EAAYt2H,OAAQ02H,EAAUviI,EAAIoiI,GAC3F,IAAN3iI,GACAsJ,KAAKk5H,WAAWpjF,EAAawjF,GAC7B93H,EAASs0C,GAGT91C,KAAKk5H,WAAW13H,EAAQs0C,IAGxB0jF,EAAUjJ,YAAmC,cAAnBjsF,EAAK0xF,KAAKn6H,MAAwBnF,EAAI,GAAM,GAAK4tC,EAAK0xF,KAAK7jH,SAAS1b,OAAS,IACvG6gI,OAA0Br9H,IAAdq9H,EAA0B76H,KAAKyK,IAAIsyH,EAAUlC,UAAWA,GAAakC,EAAUlC,WAG/FhzF,EAAKqxF,SAAWl5H,KAAKmJ,IAAI0+B,EAAKqxF,UAAY,EAAG6D,EAAU7D,UAAY,GAC1C,cAAnBrxF,EAAK0xF,KAAKn6H,MAAwByoC,EAAK0xF,KAAK7jH,SAAS1b,OAAS,GAAKC,EAAI,GAAM,GAyBrE,IAANA,IACAoM,EAASytH,EAAWztH,OAASs3B,EAAO07F,gBAAkB,GAE1DuF,EAAUvkI,MAAOyhI,QAASe,IACtBE,EAAUzC,cACVsE,EAAYA,EAAUx1G,OAAO2zG,EAAUzC,gBA3BvCj0H,EAFmB,cAAnBwhC,EAAK0xF,KAAKn6H,MAAwByoC,EAAK0xF,KAAK7jH,SAAS1b,OAAS,EAErDgG,KAAKmJ,IAAIkwC,EAAYhzC,OAAQytH,EAAWztH,QAAUs3B,EAAO07F,gBAAkB,EAI3EhgF,EAAYhzC,OAASs3B,EAAO07F,gBAAkB,EAE3DS,EAAQjyF,EAAKqxF,SACbD,EAAO5+H,MAAOyhI,QAASe,IAClB8B,EAODp7H,KAAKk5H,WAAWkC,EAAY9B,GAN5B8B,GACIpkI,EAAGwiI,EAAUxiI,EAAGC,EAAGuiI,EAAUviI,EAAG4L,MAAO22H,EAAUxiI,EAAIoiI,EACrDt2H,OAAQ02H,EAAUviI,EAAIoiI,GAM1BG,EAAUzC,cACVrB,EAASA,EAAO7vG,OAAO2zG,EAAUzC,eAY/B,IAANrgI,IACA4tC,EAAK9V,YAAex3B,EAAGwiI,EAAUxiI,EAAGsgI,UAAWkC,EAAUlC,UAAW/oH,MAAOA,EAAM1O,KAEjFG,KAAK22H,SAASv8F,EAAQ7rB,GACtB,IAAK+1B,EAAK9V,YAAc8V,EAAK9V,WAAWx3B,GAAKwiI,EAAUhrG,WAAWx3B,EAAG,CACjE,GAAIwiI,EAAUhrG,YAAc8V,EAAK9V,WAAW8oG,UAAYkC,EAAUlC,UAAW,CACzE,IAAIiE,EAAcj3F,EAAK9V,WAAW8oG,UAClCkC,EAAUlC,UAAYiE,EACtBnhG,EAAOw7F,WAAWtxF,EAAK9V,WAAWjgB,OAAO+oH,UAAYiE,EACrDj3F,EAAK9V,WAAW8oG,UAAYiE,EAEhCj3F,EAAK9V,YACDx3B,EAAGwiI,EAAUhrG,WAAWx3B,EAAGsgI,eAAyBr9H,IAAdq9H,EAA0BA,EAAYkC,EAAUlC,UACtF/oH,MAAOA,EAAM1O,SAGZ25H,EAAUhrG,YAAcgrG,EAAUnB,YAAc/zF,EAAK9V,WAAW8oG,UAAYkC,EAAUlC,YAC3FhzF,EAAK9V,WAAW8oG,UAAYl9F,EAAOw7F,WAAWtxF,EAAK9V,WAAWjgB,OAAO+oH,UAAYkC,EAAUlC,WAGnG/G,EAAa+I,EAuBjB,OApBK4B,EAaD52F,EAAKyyF,YAAcrB,GAZI,cAAnBpxF,EAAK0xF,KAAKn6H,MAAwByoC,EAAK0xF,KAAK7jH,SAAS1b,OAAS,IAC9D0kI,GACInkI,EAAGqkI,EAAU,GAAG9C,QAAQvhI,EAAGC,EAAGokI,EAAU,GAAG9C,QAAQthI,EACnD4L,MAAOw4H,EAAUA,EAAU5kI,OAAS,GAAG8hI,QAAQ11H,MAAOC,OAAQu4H,EAAUA,EAAU5kI,OAAS,GAAG8hI,QAAQz1H,QAE1GsM,EAAYpP,KAAKi4H,uBAAuB79F,EAAQ+gG,EAAWzE,EAAM,GACjE12H,KAAKw4H,iBAAiBp+F,EAAQ,KAAMihG,EAAW3E,EAAM,EAAGtnH,IAE5DA,EAAYpP,KAAKi4H,uBAAuB79F,EAAQghG,GAAc55H,EAAQk1H,EAAM,GAC5E12H,KAAKw4H,iBAAiBp+F,EAAQ,KAAMghG,EAAa1F,IAAY6C,QAAS/2H,IAAWk1H,EAAM,EAAGtnH,IAKzFD,MAAMmoH,KACPl9F,EAAOw7F,WAAWpnG,EAAW3uB,IAAIy3H,UAAYA,GAEjDhzF,EAAKwR,YAAct0C,EACnB8iC,EAAKrB,IAAMjsC,EACJwK,GAEX0zH,EAAiB9kF,UAAU0pF,oBAAsB,SAAU1/F,EAAQh8B,GAC/D,IAAIkmC,EAEA0gB,EACJA,EAAS,EACT,IACIzgB,EADAzmB,KAEJymB,GALAD,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,KAKbm2H,KAAK7jH,SAAS1b,OAChC,IAAI0b,EAAWnS,KAAKw7H,OAAOl3F,EAAK0xF,KAAK7jH,UACrC,GAAImyB,EAAK0xF,KAAKl4G,KAAM,CAChB,IAAImK,OAAQ,EACZA,EAAQqc,EAAK0xF,KAAK7jH,SAAS1b,OAC3B,IAAI2lB,OAAU,EAGV4oC,GAFJ5oC,EAAU3f,KAAK+oC,KAAKvd,EAAQqc,EAAK0xF,KAAKl4G,OACxB,GAAM,EACP1B,EAGAA,EAAU,OAGY,IAA9BkoB,EAAK0xF,KAAK7jH,SAAS1b,QAA8C,IAA9B6tC,EAAK0xF,KAAK7jH,SAAS1b,OAC3DuuD,EAAS,EAE0B,IAA9B1gB,EAAK0xF,KAAK7jH,SAAS1b,SACxBuuD,EAAS,GAEb,KAAOzgB,EAAa,GAChBzmB,EAAKA,EAAKrnB,QAAU0b,EAAS5L,OAAO,EAAGy+C,IACvCzgB,GAAcygB,GACGA,IACbA,EAASzgB,GAGjB,OAAOzmB,GAEXo3G,EAAiB9kF,UAAUorF,OAAS,SAAU7qH,GAC1C,IAAIja,EACA+kI,KACJ,IAAK/kI,EAAI,EAAGA,EAAIia,EAAKla,OAAQC,IACzB+kI,EAAM/kI,GAAKia,EAAKja,GAEpB,OAAO+kI,GAEXvG,EAAiB9kF,UAAUkrF,WAAa,SAAUlhG,EAAQh8B,EAAOkmC,EAAMzoC,GACnE,IAAIoU,EAAS,EACTusD,GAAiD,IAAxCpiC,EAAO/oB,YAAYiP,QAAQ,QAAkBliB,EAAMmO,WAAWjU,OACvE8F,EAAMmO,WAAWhU,MACjBmjI,EAAW7/H,GAAcyoC,EAAK0xF,KAAKn6H,KAOvC,OANAoU,EAASq0B,EAAK0xF,KAAK/lH,QAAU,GACN,cAAnBq0B,EAAK0xF,KAAKn6H,MACNoU,GAAUmqB,EAAOy7F,oBACjB5lH,EAASmqB,EAAOy7F,kBAAoB,GAGpC6F,GACJ,IAAK,OACDzrH,EAASusD,EAAQ,EAAIvsD,EACrB,MACJ,IAAK,QACDA,GAAkBusD,EAAQ,EAGlC,OAAOvsD,GAEXilH,EAAiB9kF,UAAU8oF,WAAa,SAAU3mF,EAAOC,GAErDD,EAAMv7C,EAAIyF,KAAKyK,IAAIqrC,EAAMv7C,EAAGw7C,EAAMx7C,GAClCu7C,EAAM1vC,MAAQpG,KAAKmJ,IAAI2sC,EAAM1vC,MAAO2vC,EAAM3vC,OAC1C0vC,EAAMzvC,OAASrG,KAAKmJ,IAAI2sC,EAAMzvC,OAAQ0vC,EAAM1vC,SAEhDoyH,EAAiB9kF,UAAUgoF,yBAA2B,SAAUh+F,EAAQh8B,EAAOoD,GAC3E,IAAI8iC,EACJA,EAAOlK,EAAOw7F,WAAWx3H,EAAMyB,IAC/B,IAAI87H,EACApL,EAEA/sG,EACAg5C,EAGJ,IAFAA,EAAQpiC,EAAOy7F,kBAEVryG,EAAI,EAAGA,EAAI8gB,EAAKl1B,UAAU3Y,OAAQ+sB,IACnC+sG,EAAan2F,EAAOs7F,OAAOpxF,EAAKl1B,UAAUoU,IAAI+0G,QAC9CoD,EAAMn6H,EAAOxK,GAAKu5H,EAAW1tH,MAAQ25D,SACnBviE,IAAdqqC,EAAK4nB,MAAsByvE,EAAMr3F,EAAK4nB,QACtC5nB,EAAK4nB,KAAOyvE,EACZr3F,EAAKisF,WAAan2F,EAAOs7F,OAAOpxF,EAAKl1B,UAAUoU,IAAI+0G,UAI/DrD,EAAiB9kF,UAAU6nF,uBAAyB,SAAU79F,EAAQ54B,EAAQ+0H,EAAO2B,GAEjF,IAAIO,GACJA,GAASzhI,EAAGwK,EAAOxK,EAAGC,EAAGuK,EAAOvK,EAAG4L,MAAOrB,EAAOqB,MAAOC,OAAQtB,EAAOsB,SAClE7L,GAAKmjC,EAAO07F,gBAAkB,EACnC2C,EAAK31H,QAAUs3B,EAAO07F,gBAAkB,EACxC,IAAI8F,EACJA,KACA,IAAIrD,EACAn9H,EACJA,OAAoBnB,IAAhBi+H,EAA4BA,EAAc3B,EAC9CgC,EAAUn+F,EAAOs7F,OAAOt6H,GAAKg/B,EAAOs7F,OAAOt6H,GAAGm9H,QAAU,KAExD,EAAG,CACC,GAAIA,IAAaE,EAAKxhI,EAAIshI,EAAQthI,GAAKwhI,EAAK31H,OAASy1H,EAAQthI,GACrDwhI,EAAKxhI,EAAIshI,EAAQz1H,QAAUy1H,EAAQz1H,OAAS21H,EAAK31H,QACrD21H,EAAKxhI,GAAKshI,EAAQthI,GACdwhI,EAAK31H,QAAUy1H,EAAQz1H,QAAU21H,EAAKxhI,EAAIshI,EAAQthI,GAAKwhI,EAAK31H,OAASy1H,EAAQz1H,QAAS,CAE1F84H,EAAmBr1H,OADP,EACqB,EAAGnL,QAEnC,GAAIm9H,GAAWA,EAAQz1H,OAAS21H,EAAKxhI,EACtC,MAEJmE,IACAm9H,EAAUn+F,EAAOs7F,OAAOt6H,GAAKg/B,EAAOs7F,OAAOt6H,GAAGm9H,QAAU,WACnDn9H,GAAK,GACdA,QAAqBnB,IAAhBi+H,EAA4BA,EAAc3B,GAAS,EACxDgC,EAAUn+F,EAAOs7F,OAAOt6H,GAAKg/B,EAAOs7F,OAAOt6H,GAAGm9H,QAAU,KACxD,EAAG,CACC,GAAIA,IAAaE,EAAKxhI,EAAIshI,EAAQthI,GAAKwhI,EAAK31H,OAASy1H,EAAQthI,GACxDwhI,EAAKxhI,EAAIshI,EAAQz1H,QAAUy1H,EAAQz1H,OAAS21H,EAAK31H,QAClD21H,EAAKxhI,GAAKshI,EAAQthI,GAAKwhI,EAAK31H,QAAUy1H,EAAQz1H,QAAU21H,EAAKxhI,EAAIshI,EAAQthI,GAAKwhI,EAAK31H,OAASy1H,EAAQz1H,QACpG84H,EAAmB9kI,KAAKsE,QAEvB,GAAIm9H,GAAWA,EAAQthI,EAAIwhI,EAAK31H,OACjC,MAEJ1H,IACAm9H,EAAUn+F,EAAOs7F,OAAOt6H,GAAKg/B,EAAOs7F,OAAOt6H,GAAGm9H,QAAU,WACnDn9H,GAAKg/B,EAAOs7F,OAAOj/H,QAC5B,OAAOmlI,GAEX1G,EAAiB9kF,UAAUwoF,UAAY,SAAUx+F,EAAQ54B,EAAQ+0H,GAC7D,IAAIkC,EACJA,EAAOj3H,EACP,IAAIpG,EACJA,EAAI,EACJ,IAAIm9H,EAEJ,IADAA,EAAUn+F,EAAOs7F,OAAOt6H,GAAKg/B,EAAOs7F,OAAOt6H,GAAGm9H,QAAU,KACjDn9H,EAAIg/B,EAAOs7F,OAAOj/H,QAAQ,CAC7B,GAAI8hI,GAAWE,EAAK31H,OAASy1H,EAAQthI,EACjC,OAAOmE,EAGPA,IAEJm9H,EAAUn+F,EAAOs7F,OAAOt6H,GAAKg/B,EAAOs7F,OAAOt6H,GAAGm9H,QAAU,KAE5D,OAAOn9H,GAEX85H,EAAiB9kF,UAAUyrF,cAAgB,SAAUzhG,EAAQ75B,GAEzD,OAAO65B,EAAOxe,UAAUwe,EAAOxe,UAAUrb,EAAKolB,QAAQ,IAAIlkB,WAE9DyzH,EAAiB9kF,UAAUisD,YAAc,SAAUjiE,EAAQ75B,EAAMu7H,EAAOv5G,GACpE,IAAIw5G,EACJA,EAAa3hG,EAAOw7F,WAAWr1H,EAAKV,IACpC,IAAIxJ,EACJ,GAAIkK,EAAKqlB,UAAYrlB,EAAKqlB,SAASnvB,SAAW8J,EAAKynD,YAAezlC,IAAW5K,gBAAcwhF,QACvF,IAAK9iG,EAAI,EAAGA,EAAIkK,EAAKqlB,SAASnvB,OAAQJ,IAAK,CACvC,IAAIqpF,OAAO,GACXA,EAAOtlD,EAAOxe,UAAUwe,EAAOxe,UAAUrb,EAAKqlB,SAASvvB,IAAI4wB,WACjDyuE,qBAC6C,IAA/CqmC,EAAW/F,KAAK7jH,SAASmO,QAAQo/D,EAAK7/E,KACtCk8H,EAAW/F,KAAK7jH,SAASrb,KAAK4oF,EAAK7/E,IAEnC6/E,EAAK95D,UAAY85D,EAAK95D,SAASnvB,QAAUipF,EAAK13B,aAC9C+zE,EAAW/F,KAAKC,YAAa,GAEjCj2H,KAAKq8F,YAAYjiE,EAAQslD,EAAMo8C,EAAQ,EAAGv5G,IAKtDw5G,EAAW/F,KAAKO,MAAQuF,EAEpBC,EAAW/F,KAAKC,aAChB8F,EAAW/F,KAAK3kH,YAAc,aAC9B0qH,EAAW/F,KAAKn6H,KAAO,UAIvBu+B,EAAOD,eAAiC,wBAAhBC,EAAOv+B,OAC/Bu+B,EAAOD,cAAc55B,EAAMw7H,EAAW/F,MACT,aAAzB+F,EAAW/F,KAAKn6H,MAAuBkgI,EAAW/F,KAAKC,aACvD8F,EAAW/F,KAAKn6H,KAAO,SACvBkgI,EAAW/F,KAAK3kH,YAAc,eAGlC+oB,EAAOm8F,OAAkC,cAAzBwF,EAAW/F,KAAKn6H,MAAwBigI,GAAS1hG,EAAOm8F,QACxEwF,EAAW/F,KAAKC,YAAa,IAGrCf,EAAiB9kF,UAAUgmF,aAAe,SAAUh8F,EAAQ54B,EAAQq9F,GAChE,IAAIt+F,EACA2pF,EAKA8xC,EAJAzjI,EAAQ,EACRD,EAAS,EACT2jI,EAAM,EACNC,EAAiB,IAAI5vH,GAAK,EAAG,EAAGuyF,EAAS7nG,EAAG6nG,EAAS5nG,GAEzD+kI,EAAe5hG,EAAO54B,OAAS44B,EAAO54B,OAAS06H,EAC/C,IAAI7qH,EAAc+oB,EAAO/oB,YAEzB,GAAI+oB,EAAO8vD,UAAW,CAElB3xF,GADA2xF,EAAY9vD,EAAOxe,UAAUwe,EAAO8vD,YAClB39E,WAAWhU,MAC7BD,EAAS4xF,EAAU39E,WAAWjU,OAC9B8hC,EAAOk7F,QAAUprC,EAAUnuF,QAC3Bq+B,EAAOm7F,QAAUrrC,EAAUluF,QAC3B,IAAI+kC,EAAQmpD,EAAUnpD,MAKtB,IAJA3G,EAAOk7F,SAAkC,gBAAvBl7F,EAAO/oB,YAAgC9Y,EAAQwoC,EAAM/pC,GAAKuB,EAAQwoC,EAAM/pC,EAC1FojC,EAAOm7F,SAAkC,gBAAvBn7F,EAAO/oB,YAAgC/Y,EAASyoC,EAAM9pC,GAAKqB,EAASyoC,EAAM9pC,EAC5FsJ,EAAO2pF,EACP+xC,EAAM,EACC17H,EAAKolB,QAAQlvB,QAChB8J,EAAOP,KAAK67H,cAAczhG,EAAQ75B,GAClC07H,GAAO7hG,EAAOw7F,WAAWr1H,EAAKV,IAAI+3H,oBAAsB,GAEhB,IAAxCx9F,EAAO/oB,YAAYiP,QAAQ,SAC3B8Z,EAAOk7F,SAAWl7F,EAAOw7F,WAAW1rC,EAAUrqF,IAAI5I,EAClDmjC,EAAOm7F,SAAWn7F,EAAOw7F,WAAW1rC,EAAUrqF,IAAI7I,EAAIilI,IAGtD7hG,EAAOk7F,SAAWl7F,EAAOw7F,WAAW1rC,EAAUrqF,IAAI7I,EAAIilI,EACtD7hG,EAAOm7F,SAAWn7F,EAAOw7F,WAAW1rC,EAAUrqF,IAAI5I,QAItD,GAAoB,gBAAhBoa,GAAiD,gBAAhBA,EAA+B,CAChE,OAAQ+oB,EAAOxgB,qBACX,IAAK,OACDwgB,EAAOk7F,QAAW0G,EAAahlI,EAAIwK,EAAOxK,EAAKojC,EAAOz3B,OAAOC,KAC7D,MACJ,IAAK,QACDw3B,EAAOk7F,QAAU0G,EAAahlI,EAAIglI,EAAazjI,MAAQ6hC,EAAOz3B,OAAOE,MAAQrB,EAAOqB,MACpF,MACJ,IAAK,OACL,IAAK,SACDu3B,EAAOk7F,QAAU0G,EAAahlI,EAAIglI,EAAazjI,MAAQ,GAAKiJ,EAAOxK,EAAIwK,EAAOqB,OAAS,EAG/F,OAAQu3B,EAAOzgB,mBACX,IAAK,OACL,IAAK,MACD,IAAIjM,EACJA,EAAQsuH,EAAa/kI,EAAImjC,EAAOz3B,OAAOI,IACvCq3B,EAAOm7F,QAA0B,gBAAhBlkH,EAAgC3D,EAAQlM,EAAOsB,OAAS4K,EACzE,MACJ,IAAK,SACD,IAAI5K,OAAS,EACbA,EAASk5H,EAAa/kI,EAAI+kI,EAAa1jI,OAAS8hC,EAAOz3B,OAAOG,OAC9Ds3B,EAAOm7F,QAA0B,gBAAhBlkH,EAAgCvO,EAAStB,EAAOsB,OAASA,EAC1E,MACJ,IAAK,SACD,IAAI7B,OAAS,EACbA,EAAS+6H,EAAa/kI,EAAI+kI,EAAa1jI,OAAS,EAChD8hC,EAAOm7F,QAAiC,gBAAvBn7F,EAAO/oB,YACpBpQ,GAAUO,EAAOvK,EAAIuK,EAAOsB,QAAU,EAAI7B,GAAUO,EAAOvK,EAAIuK,EAAOsB,QAAU,OAI3F,CACD,OAAQs3B,EAAOxgB,qBACX,IAAK,OACL,IAAK,OACD,IAAIhX,OAAO,EACXA,EAAOo5H,EAAahlI,EAAIojC,EAAOz3B,OAAOC,KACtCw3B,EAAOk7F,QAA0B,gBAAhBjkH,EAAgCzO,EAAOpB,EAAOsB,OAASF,EACxE,MACJ,IAAK,QACD,IAAIC,OAAQ,EACZA,EAAQm5H,EAAahlI,EAAIglI,EAAazjI,MAAQ6hC,EAAOz3B,OAAOE,MAC5Du3B,EAAOk7F,QAA0B,gBAAhBjkH,EAAgCxO,EAAQrB,EAAOsB,OAASD,EACzE,MACJ,IAAK,SACG5B,OAAS,EACbA,EAAS+6H,EAAazjI,MAAQ,EAAIyjI,EAAahlI,EAC/CojC,EAAOk7F,QAAiC,gBAAvBl7F,EAAO/oB,YACpBpQ,GAAUO,EAAOvK,EAAIuK,EAAOsB,QAAU,EAAI7B,GAAUO,EAAOvK,EAAIuK,EAAOsB,QAAU,EAG5F,OAAQs3B,EAAOzgB,mBACX,IAAK,MACDygB,EAAOm7F,QAAUyG,EAAa/kI,EAAImjC,EAAOz3B,OAAOI,IAAMvB,EAAOxK,EAC7D,MACJ,IAAK,OACL,IAAK,SACDojC,EAAOm7F,QAAUyG,EAAa/kI,EAAI+kI,EAAa1jI,OAAS,GAAKkJ,EAAOqB,MAAQrB,EAAOxK,GAAK,EACxF,MACJ,IAAK,SACDojC,EAAOm7F,QAAUyG,EAAa/kI,EAAI+kI,EAAa1jI,OAAS8hC,EAAOz3B,OAAOG,OAAStB,EAAOqB,SAM1GqyH,EAAiB9kF,UAAUkmF,iBAAmB,SAAUl8F,EAAQ75B,EAAMg2H,GAClE,IAAI7/H,EACA4tC,EASAthC,EACAyiB,EAMJ,GALA6e,EAIOlK,EAAOw7F,WAAWr1H,EAAKV,IAE1BU,EAAKqlB,SAASnvB,OACd,IAAKC,EAAI,EAAGA,EAAI6J,EAAKqlB,SAASnvB,OAAQC,KAClC+uB,EAAO2U,EAAOxe,UAAUrb,EAAKqlB,SAASlvB,KACjCiC,UACLqK,EAASo3B,EAAOxe,UAAU6J,EAAKwB,UAC3BxB,EAAKmY,UACLnY,EAAK02G,SAAU,EACX/hG,EAAOgiG,qBACIhiG,EAAOgiG,qBAAqB32G,GAGnC6e,IAAuD,IAA/CA,EAAK0xF,KAAK7jH,SAASmO,QAAQmF,EAAKwB,YACxCxB,EAAKtsB,YACe,wBAAhBihC,EAAOv+B,MAAgD,eAAd4pB,EAAK5pB,MAC9CmE,KAAKkqD,eAAe9vB,EAAQ3U,EAAMllB,EAAMyC,EAAQtM,IAIxDsM,IAAWA,EAAOglD,YAAchoD,KAAK22H,SAASv8F,EAAQp3B,KACtDhD,KAAKs2H,iBAAiBl8F,EAAQp3B,EAAQuzH,EAAQ,IAK9D,GAAIjyF,GAAQA,EAAK0xF,KAAKa,WAAWpgI,OAE7B,IAAKC,EAAI,EAAGA,EAAI4tC,EAAK0xF,KAAKa,WAAWpgI,OAAQC,IACzCsM,EAASo3B,EAAOxe,UAAU0oB,EAAK0xF,KAAKa,WAAWngI,IAC/C+uB,EAAO2U,EAAOxe,UAAU5Y,EAAO2iB,QAAQ,IACvC3lB,KAAKq8H,WAAWjiG,EAAQ75B,EAAMyC,EAAQyiB,IAClCziB,EAAOglD,YAAchoD,KAAK22H,SAASv8F,EAAQp3B,KAC3ChD,KAAKs2H,iBAAiBl8F,EAAQp3B,EAAQuzH,EAAQ,IAK9DrB,EAAiB9kF,UAAU8Z,eAAiB,SAAU9vB,EAAQ3U,EAAMllB,EAAMyC,EAAQtM,GAC9E,IAAI4tC,EAAOlK,EAAOw7F,WAAWr1H,EAAKV,IAE9BykC,EAAK0xF,KAAKa,WAAWpgI,OAErBuJ,KAAKs8H,uCAAuCliG,EAAQ75B,EAAMyC,EAAQyiB,GAIpC,eAA1B6e,EAAK0xF,KAAK3kH,aAAmD,aAAnBizB,EAAK0xF,KAAKn6H,KACpDmE,KAAKu8H,8BAA8BniG,EAAQ3U,EAAMllB,EAAMyC,EAAQtM,GAGjC,eAA1B4tC,EAAK0xF,KAAK3kH,YACVrR,KAAKs8H,uCAAuCliG,EAAQ75B,EAAMyC,EAAQyiB,GAG9D6e,EAAK0xF,KAAK/lH,OAAS,EACnBjQ,KAAKw8H,WAAWpiG,EAAQ75B,EAAMyC,EAAQyiB,GAGtCzlB,KAAKq8H,WAAWjiG,EAAQ75B,EAAMyC,EAAQyiB,IAM1DyvG,EAAiB9kF,UAAUmsF,8BAAgC,SAAUniG,EAAQ71B,EAAWhE,EAAMyC,EAAQtM,GAClG,IAEI+lI,EAFAn4F,EAAOlK,EAAOw7F,WAAWr1H,EAAKV,IAGlC,GAAkC,IAA9BykC,EAAK0xF,KAAK7jH,SAAS1b,QAAgBC,EAAI,EAAG,CAC1C+lI,EAAWn4F,EAAK0xF,KAAK7jH,SAAS,GAC1BhD,MAAMirB,EAAOw7F,WAAW6G,GAAUlF,aAClCn9F,EAAOw7F,WAAW6G,GAAUlF,UAAYn9F,EAAOxe,UAAU6gH,GAAUlwH,WAAWhU,OAElF,IAAIs3F,EAAe,IAANn5F,EAAU,GAAK,GACgB,IAAxC0jC,EAAO/oB,YAAYiP,QAAQ,QAClB8Z,EAAOxe,UAAU6gH,GAAUzgI,QAAUo+B,EAAOw7F,WAAW6G,GAAUlF,UAAY,EACjFn9F,EAAO07F,gBAAkBjmC,EAAS,EAG9Bz1D,EAAOxe,UAAU6gH,GAAU1gI,QAChCq+B,EAAOw7F,WAAW6G,GAAUlF,UAAY,EAAKn9F,EAAOy7F,kBAAoBhmC,EAAU,EAE1F7vF,KAAK08H,2BAA2BtiG,EAAQ75B,EAAMyC,EAAQuB,QAGlD+/B,EAAK0xF,KAAK7jH,SAAS1b,OAAS,EACxBC,EAAI,EACJsJ,KAAK08H,2BAA2BtiG,EAAQ75B,EAAMyC,EAAQuB,GAGtDvE,KAAKs8H,uCAAuCliG,EAAQ75B,EAAMyC,EAAQuB,GAGnC,IAA9B+/B,EAAK0xF,KAAK7jH,SAAS1b,OACpBC,EAAI,EACJsJ,KAAK08H,2BAA2BtiG,EAAQ75B,EAAMyC,EAAQuB,GAGtDvE,KAAKs8H,uCAAuCliG,EAAQ75B,EAAMyC,EAAQuB,GAItEvE,KAAK08H,2BAA2BtiG,EAAQ75B,EAAMyC,EAAQuB,IAIlE2wH,EAAiB9kF,UAAUisF,WAAa,SAAUjiG,EAAQ75B,EAAMyC,EAAQuB,GACpE,IAAI5L,KACAqoB,EAAahhB,KAAK+0B,UAAUx0B,GAC5B2sH,EAAeltH,KAAK+0B,UAAU/xB,GAClC,IAA2C,IAAvCo3B,EAAO/oB,YAAYiP,QAAQ,OAAe,CAC1C,IAAIq8G,EAAsD,IAAtCviG,EAAO/oB,YAAYiP,QAAQ,OAAeU,EAAWhZ,aACrEgZ,EAAWvd,UACXkI,EAAWpL,EAAKxE,QAAUiH,EAAOjH,QAAUmxH,EAAavlH,YAAculH,EAAa5kH,WACvF3P,EAAO7B,KAAK6lI,GAAiB3lI,EAAGgqB,EAAWhZ,aAAahR,EAAGC,EAAG0U,EAAS1U,GAAK0U,OAE3E,CACGgxH,EAAuD,IAAvCviG,EAAO/oB,YAAYiP,QAAQ,QAAgBU,EAAWrZ,YACtEqZ,EAAW1Y,WACXqD,EAAWpL,EAAKvE,QAAUgH,EAAOhH,QAAUkxH,EAAallH,aAAeklH,EAAazpH,UACxF9K,EAAO7B,KAAK6lI,GAAiB3lI,EAAGk2H,EAAallH,aAAahR,EAAGC,EAAG+pB,EAAWrZ,YAAY1Q,GAAK0U,GAEhG3L,KAAK48H,sBAAsBjkI,EAAQ4L,IAEvC2wH,EAAiB9kF,UAAUosF,WAAa,SAAUpiG,EAAQ75B,EAAMyC,EAAQuB,GACpE,IAKIo4H,EACAhxH,EACAkqH,EACAC,EARAn9H,KAEAqoB,EAAahhB,KAAK+0B,UAAUx0B,GAC5B2sH,EAAeltH,KAAK+0B,UAAU/xB,GACvBo3B,EAAOw7F,WAAWr1H,EAAKV,KAKS,IAAvCu6B,EAAO/oB,YAAYiP,QAAQ,QAC3Bq8G,EAAiBp8H,EAAKvE,QAAUgH,EAAOhH,QAAWglB,EAAWhZ,aAAegZ,EAAWvd,UACvFqyH,EAAkB17F,EAAO07F,gBAAkB,GAAMv1H,EAAKvE,QAAUgH,EAAOhH,QAAW,GAAK,GACvF65H,EAAoBz7F,EAAOy7F,kBAAoB,GAAMt1H,EAAKxE,QAAUiH,EAAOjH,QAAW,GAAK,GAC3F4P,EAAYpL,EAAKxE,QAAUiH,EAAOjH,QAAWmxH,EAAavlH,YAAculH,EAAa5kH,WACrF3P,EAAO7B,KAAK6lI,GAAiB3lI,EAAG2lI,EAAc3lI,EAAGC,EAAG0lI,EAAc1lI,EAAI6+H,IAAqB9+H,EAAG2U,EAAS3U,EAAI6+H,EAAmB5+H,EAAG0lI,EAAc1lI,EAAI6+H,IAAqB9+H,EAAG2U,EAAS3U,EAAI6+H,EAAmB5+H,EAAG0U,EAAS1U,GAAK0U,KAG5NgxH,EAAiBp8H,EAAKxE,QAAUiH,EAAOjH,QAAWilB,EAAW1Y,WAAa0Y,EAAWrZ,YACrFgE,EAAWpL,EAAKvE,QAAUgH,EAAOhH,QAAUkxH,EAAallH,aAAeklH,EAAazpH,UACpFoyH,EAAoBz7F,EAAOy7F,kBAAoB,GAAMt1H,EAAKxE,QAAUiH,EAAOjH,QAAW,GAAK,GAC3F+5H,EAAkB17F,EAAO07F,gBAAkB,GAAMv1H,EAAKvE,QAAUgH,EAAOhH,QAAW,GAAK,GACvFrD,EAAO7B,KAAK6lI,GAAiB3lI,EAAG2lI,EAAc3lI,EAAI6+H,EAAmB5+H,EAAG0lI,EAAc1lI,IAAOD,EAAG2lI,EAAc3lI,EAAI6+H,EAAmB5+H,EAAG0lI,EAAc1lI,EAAI6+H,IAAqB9+H,EAAG2U,EAAS3U,EAAGC,EAAG0lI,EAAc1lI,EAAI6+H,GAAmBnqH,IAE1O3L,KAAK48H,sBAAsBjkI,EAAQ4L,IAEvC2wH,EAAiB9kF,UAAUwsF,sBAAwB,SAAUjkI,EAAQ4L,GAGjE,IAAK,IADDjK,EADAnB,KAEKzC,EAAI,EAAGA,EAAIiC,EAAOlC,OAAS,EAAGC,KACnC4D,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAU9J,EAAOjC,GAAIiC,EAAOjC,EAAI,IAC1D4D,EAAQ7D,OAAS8O,GAAM2G,eAAevT,EAAOjC,GAAIiC,EAAOjC,EAAI,IAC5DyC,EAASrC,KAAKwD,GAElBiK,EAAUpL,SAAWA,GAEzB+7H,EAAiB9kF,UAAUssF,2BAA6B,SAAUtiG,EAAQ75B,EAAMyC,EAAQuB,GACpF,IAEI5I,EACArB,EAFAnB,KAGA+zH,EAAeltH,KAAK+0B,UAAU/xB,GAC9Bge,EAAahhB,KAAK+0B,UAAUx0B,GAChC,OAAQ65B,EAAO/oB,aACX,IAAK,cACD1V,GAAU3E,EAAGgqB,EAAWhZ,aAAahR,EAAGC,EAAI+pB,EAAWhZ,aAAa/Q,EAAImjC,EAAO07F,gBAAkB,IACjGx7H,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAUue,EAAWhZ,aAAcrM,GAC7DrB,EAAQ7D,OAAS8O,GAAM2G,eAAe8U,EAAWhZ,aAAcrM,GAC/DxC,EAASrC,KAAKwD,GACd,MACJ,IAAK,cACDqB,GAAU3E,EAAGgqB,EAAWhZ,aAAahR,EAAGC,EAAI+pB,EAAWvd,UAAUxM,EAAImjC,EAAO07F,gBAAkB,IAC9Fx7H,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAUue,EAAWvd,UAAW9H,GAC1DrB,EAAQ7D,OAAS8O,GAAM2G,eAAe8U,EAAWvd,UAAW9H,GAC5DxC,EAASrC,KAAKwD,GACd,MACJ,IAAK,cAMD,GALAqB,GAAU3E,EAAIgqB,EAAWrZ,YAAY3Q,EAAIojC,EAAO07F,gBAAkB,EAAI7+H,EAAG+pB,EAAWrZ,YAAY1Q,GAChGqD,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,GAC/EvB,EAAQmI,UAAY8C,GAAM9C,UAAUue,EAAWrZ,YAAahM,GAC5DrB,EAAQ7D,OAAS8O,GAAM2G,eAAe8U,EAAWrZ,YAAahM,GAC9DxC,EAASrC,KAAKwD,GACV4yH,EAAajsH,OAAOhK,IAAM+pB,EAAW/f,OAAOhK,EAAG,CAC/C,IAAIqa,GAAWta,EAAIgqB,EAAWrZ,YAAY3Q,EAAIojC,EAAO07F,gBAAkB,EAAI7+H,EAAGi2H,EAAa5kH,WAAWrR,IACtGqD,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAU9G,EAAO2V,GAC3ChX,EAAQ7D,OAAS8O,GAAM2G,eAAevQ,EAAO2V,GAC7CnY,EAASrC,KAAKwD,GAElB,MACJ,IAAK,cAMD,GALAqB,GAAU3E,EAAIgqB,EAAW1Y,WAAWtR,EAAIojC,EAAO07F,gBAAkB,EAAI7+H,EAAG+pB,EAAWrZ,YAAY1Q,GAC/FqD,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,GAC/EvB,EAAQmI,UAAY8C,GAAM9C,UAAUue,EAAW1Y,WAAY3M,GAC3DrB,EAAQ7D,OAAS8O,GAAM2G,eAAe8U,EAAW1Y,WAAY3M,GAC7DxC,EAASrC,KAAKwD,GACV4yH,EAAajsH,OAAOhK,IAAM+pB,EAAW/f,OAAOhK,EAAG,CAC/C,IAAI4lI,GAAY7lI,EAAIgqB,EAAW1Y,WAAWtR,EAAIojC,EAAO07F,gBAAkB,EAAI7+H,EAAGi2H,EAAa5kH,WAAWrR,IACtGqD,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAUo6H,EAASA,GAC7CviI,EAAQ7D,OAAS8O,GAAM2G,eAAe2wH,EAASA,GAC/C1jI,EAASrC,KAAKwD,IAI1BiK,EAAUpL,SAAWA,GAEzB+7H,EAAiB9kF,UAAUksF,uCAAyC,SAAUliG,EAAQ75B,EAAMyC,EAAQuB,GAChG,IACI/L,EACA8B,EACAnB,KACA6nB,EAAahhB,KAAK+0B,UAAUx0B,GAC5B2sH,EAAeltH,KAAK+0B,UAAU/xB,GAClC,OAAQo3B,EAAO/oB,aACX,IAAK,cACD7Y,GAAWxB,EAAGgqB,EAAWhZ,aAAahR,EAAGC,EAAIi2H,EAAazpH,UAAUxM,EAAImjC,EAAO07F,gBAAkB,IACjGx7H,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAUue,EAAWhZ,aAAcxP,GAC7D8B,EAAQ7D,OAAS8O,GAAM2G,eAAe8U,EAAWhZ,aAAcxP,GAC/DW,EAASrC,KAAKwD,GACd,MACJ,IAAK,cACD9B,GAAWxB,EAAGgqB,EAAWvd,UAAUzM,EAAGC,EAAIi2H,EAAallH,aAAa/Q,EAAImjC,EAAO07F,gBAAkB,IACjGx7H,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAUue,EAAWvd,UAAWjL,GAC1D8B,EAAQ7D,OAAS8O,GAAM2G,eAAe8U,EAAWvd,UAAWjL,GAC5DW,EAASrC,KAAKwD,GACd,MACJ,IAAK,cAMD,GALA9B,GAAWxB,EAAIk2H,EAAa5kH,WAAWtR,EAAIojC,EAAO07F,gBAAkB,EAAI7+H,EAAG+pB,EAAWrZ,YAAY1Q,GAClGqD,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,GAC/EvB,EAAQmI,UAAY8C,GAAM9C,UAAUue,EAAWrZ,YAAanP,GAC5D8B,EAAQ7D,OAAS8O,GAAM2G,eAAe8U,EAAWrZ,YAAanP,GAC9DW,EAASrC,KAAKwD,GACV4yH,EAAajsH,OAAOhK,IAAM+pB,EAAW/f,OAAOhK,EAAG,CAC/C,IAAIqa,GAAWta,EAAIk2H,EAAa5kH,WAAWtR,EAAIojC,EAAO07F,gBAAkB,EAAI7+H,EAAGi2H,EAAa5kH,WAAWrR,IACvGqD,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAUjK,EAAQ8Y,GAC5ChX,EAAQ7D,OAAS8O,GAAM2G,eAAe1T,EAAQ8Y,GAC9CnY,EAASrC,KAAKwD,GAElB,MACJ,IAAK,cAMD,GALA9B,GAAWxB,EAAIk2H,EAAavlH,YAAY3Q,EAAIojC,EAAO07F,gBAAkB,EAAI7+H,EAAG+pB,EAAWrZ,YAAY1Q,GACnGqD,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,GAC/EvB,EAAQmI,UAAY8C,GAAM9C,UAAUue,EAAW1Y,WAAY9P,GAC3D8B,EAAQ7D,OAAS8O,GAAM2G,eAAe8U,EAAW1Y,WAAY9P,GAC7DW,EAASrC,KAAKwD,GACV4yH,EAAajsH,OAAOhK,IAAM+pB,EAAW/f,OAAOhK,EAAG,CAC/C,IAAI0E,GAAU3E,EAAIk2H,EAAavlH,YAAY3Q,EAAIojC,EAAO07F,gBAAkB,EAAI7+H,EAAGi2H,EAAa5kH,WAAWrR,IACvGqD,EAAU,IAAIqM,GAAkBpC,EAAW,YAAc1I,KAAM,eAAgB,IACvE4G,UAAY8C,GAAM9C,UAAUjK,EAAQmD,GAC5CrB,EAAQ7D,OAAS8O,GAAM2G,eAAe1T,EAAQmD,GAC9CxC,EAASrC,KAAKwD,IAK1B,OADAiK,EAAUpL,SAAWA,MAGzB+7H,EAAiB9kF,UAAUimF,YAAc,SAAUj8F,EAAQ75B,EAAM07H,EAAKzwH,EAAQsxH,EAAIx3F,GAC9E,IAAI5uC,EACA6X,EACAhW,EACAD,EACAyD,EACAC,EAGJ,GAFAzD,EAAQgI,EAAKgM,WAAWhU,MACxBD,EAASiI,EAAKgM,WAAWjU,QACpBiI,EAAKm1F,kBAAmB,CACzB35F,EAAUq+B,EAAOk7F,QACjBt5H,EAAUo+B,EAAOm7F,QAGU,gBAAvBn7F,EAAO/oB,aACPtV,GAAWq+B,EAAOw7F,WAAWr1H,EAAKV,IAAI5I,EAAIsB,EAAQ,EAClDyD,GAAWo+B,EAAOw7F,WAAWr1H,EAAKV,IAAI7I,EAAIilI,EAAM3jI,EAAS,GAE7B,gBAAvB8hC,EAAO/oB,aACZtV,GAAWq+B,EAAOw7F,WAAWr1H,EAAKV,IAAI5I,EAAIsB,EAAQ,EAClDyD,GAAWo+B,EAAOw7F,WAAWr1H,EAAKV,IAAI7I,EAAIilI,EAAM3jI,EAAS,GAE7B,gBAAvB8hC,EAAO/oB,aACZtV,GAAWq+B,EAAOw7F,WAAWr1H,EAAKV,IAAI7I,EAAIilI,EAAM1jI,EAAQ,EACxDyD,GAAWo+B,EAAOw7F,WAAWr1H,EAAKV,IAAI5I,EAAIqB,EAAS,IAGnDyD,GAAWq+B,EAAOw7F,WAAWr1H,EAAKV,IAAI7I,EAAIilI,EAAM1jI,EAAQ,EACxDyD,GAAWo+B,EAAOw7F,WAAWr1H,EAAKV,IAAI5I,EAAIqB,EAAS,GAEnD8hC,EAAOw7F,aAGP75H,GAFA+gI,EAAKA,GAAU,EAGf9gI,GAFAspC,EAAKA,GAAU,EAGVtlC,KAAKqqF,cACN9pF,EAAKxE,QAAUA,EACfwE,EAAKvE,QAAUA,IAGvB,IAAI64B,GAAYh1B,GAAIU,EAAKV,GAAIk1H,YAAah5H,EAAUwE,EAAKxE,QAASi5H,YAAah5H,EAAUuE,EAAKvE,SAC9Fo+B,EAAOvF,QAAQ/9B,KAAK+9B,GACpB,IAAI87C,OAAO,EAEX,GADAA,KACI3wE,KAAK22H,SAASv8F,EAAQ75B,GACtB,IAAK7J,EAAI,EAAGA,EAAI0jC,EAAOw7F,WAAWr1H,EAAKV,IAAIm2H,KAAK7jH,SAAS1b,OAAQC,IAC7D6X,EAAQ6rB,EAAOxe,UAAUwe,EAAOw7F,WAAWr1H,EAAKV,IAAIm2H,KAAK7jH,SAASzb,IAClEsJ,KAAKq2H,YAAYj8F,EAAQ7rB,EAAO0tH,GAAO7hG,EAAOw7F,WAAWr1H,EAAKV,IAAI+3H,oBAAsB,GAAIpsH,EAAQsxH,EAAIx3F,GACxGqrC,EAAK75E,KAAKyX,GAGlB,GAAI6rB,EAAOw7F,WAAWr1H,EAAKV,IAAIm2H,KAAKa,WAAWpgI,OAC3C,IAAKC,EAAI,EAAGA,EAAI0jC,EAAOw7F,WAAWr1H,EAAKV,IAAIm2H,KAAKa,WAAWpgI,OAAQC,IAC/D6X,EAAQ6rB,EAAOxe,UAAUwe,EAAOw7F,WAAWr1H,EAAKV,IAAIm2H,KAAKa,WAAWngI,IACpEsJ,KAAKq2H,YAAYj8F,EAAQ7rB,EAAO0tH,GAAO7hG,EAAOw7F,WAAWr1H,EAAKV,IAAI+3H,oBAAsB,GAAI,KAAMkF,EAAIx3F,KAK/G4vF,KC9mDP6H,GAAyB,WAKzB,SAASA,IAKL/8H,KAAKqqF,aAAc,EAwHvB,OAhHA0yC,EAAQ3sF,UAAUkZ,QAAU,aAQ5ByzE,EAAQ3sF,UAAUiZ,cAAgB,WAI9B,MAAO,gBAGX0zE,EAAQ3sF,UAAU0uD,aAAe,SAAUhlF,EAAO8B,EAAWu5G,EAAYt2B,EAAUw2B,EAAUp2B,GACzF,IAAI+9B,EAEJ,GADAA,EAASh9H,KAAKi9H,UAAUnjH,EAAOq7G,EAAYE,EAAUp2B,EAAMrjF,GAEvDu5G,EAAWjrC,UAAY8yC,OAGvB,IAAK,IAAIngI,EAAK,EAAGi/B,EAAUhiB,EAAOjd,EAAKi/B,EAAQrlC,OAAQoG,IAAM,CAEzD,MADI0D,EAAOu7B,EAAQj/B,IACT64F,mBACDn1F,EAAKolB,SAAYplB,EAAKolB,QAAQlvB,QAAQ,CACvC0+H,EAAWjrC,UAAY3pF,EAAKV,GAC5B,OAKhB,IAAIk/F,EAAWnjF,EAAUu5G,EAAWjrC,WAChCgzC,EAAiBl9H,KAAKm9H,oBAAoBp+B,EAAUo2B,EAAYv5G,GAChEwhH,KACAC,KACAC,EAAmBjtG,GAAY8kG,EAAW96F,WAC9CijG,EAAmBA,GAAoBjtG,GAAYrwB,KAAKq6B,WACxD,IAAK,IAAIpc,EAAK,EAAGs/G,EAAmBL,EAAgBj/G,EAAKs/G,EAAiB9mI,OAAQwnB,IAAM,CACpF,IAAI1d,EAEO,SADC+8H,EADR/8H,EAAOg9H,EAAiBt/G,GACOi/G,GACdE,EAAUtmI,KAAKyJ,GAAQ88H,EAAWvmI,KAAKyJ,GAEhE,IAAI27H,EAAiB,IAAI5vH,GAAK,EAAG,EAAGuyF,EAAS7nG,EAAG6nG,EAAS5nG,GACzD2kB,EAAUu5G,EAAWjrC,WAAWnuF,QAAUmgI,EAAellI,EAAIklI,EAAe3jI,MAAQ,EACpFqjB,EAAUu5G,EAAWjrC,WAAWluF,QAAUkgI,EAAejlI,EAAIilI,EAAe5jI,OAAS,EACjF8kI,EAAU3mI,QACVuJ,KAAKw9H,oBAAoB1jH,EAAOujH,EAAYzhH,EAAWu5G,EAAYt2B,EAAUw2B,EAAU,QAEvFgI,EAAW5mI,QACXuJ,KAAKw9H,oBAAoB1jH,EAAOsjH,EAAWxhH,EAAWu5G,EAAYt2B,EAAUw2B,EAAU,UAG9F0H,EAAQ3sF,UAAU6sF,UAAY,SAAUnjH,EAAOq7G,EAAYE,EAAUp2B,EAAMrjF,GACvE,IAAK,IAAI/e,EAAK,EAAG4gI,EAAU3jH,EAAOjd,EAAK4gI,EAAQhnI,OAAQoG,IAAM,CACzD,IAAI0D,EAAOk9H,EAAQ5gI,GACnB,IAAK0D,EAAKm1F,kBAAmB,CACzB,GAAIn1F,EAAKnK,OAASmK,EAAKnK,KAAKi/H,GAAU/2H,aAAe2gG,GAAQ1+F,EAAKnK,KAAKi/H,GAAU/2H,aACzE62H,EAAWl2B,MACf,OAAO1+F,EAAKV,GAEX,IAAKU,EAAKnK,MAAQmK,EAAKV,KAAOs1H,EAAWl2B,KAC1C,OAAO1+F,EAAKV,IAIxB,MAAO,IAEXk9H,EAAQ3sF,UAAUotF,oBAAsB,SAAU1jH,EAAO4jH,EAAc9hH,EAAWu5G,EAAYt2B,EAAUw2B,EAAUr0F,GAC9G,IAAI5G,GACJA,GACIv+B,KAAM,mBACNg6H,kBAAmBV,EAAWW,gBAAiBA,gBAAiBX,EAAWU,kBAC3El8G,kBAAmBw7G,EAAWx7G,kBAAmBC,oBAAqBu7G,EAAWv7G,oBACjFswE,UAAWirC,EAAWjrC,UAAW/vD,cAAe9J,GAAY8kG,EAAWh7F,eAAgBx3B,OAAQwyH,EAAWxyH,OAC1Gs8F,KAAMk2B,EAAWjrC,YAEd74E,YAAwB,SAAT2vB,EAAmB,cAAgB,cACzDhhC,KAAK01F,kBAAkBgoC,EAAc9hH,GAAW,IAChC,IAAIs5G,IACVp2B,aAAahlF,EAAO8B,EAAWwe,EAAQykE,EAAUw2B,GAC3Dr1H,KAAK01F,kBAAkBgoC,EAAc9hH,GAAW,IAEpDmhH,EAAQ3sF,UAAU/V,UAAY,SAAU9/B,EAAKi7H,GASzC,OAPQA,EAAgBl1G,QAAQ/lB,GACxB,GAAM,EACH,OAGA,SAIfwiI,EAAQ3sF,UAAUslD,kBAAoB,SAAUioC,EAAe/hH,EAAWgiH,GACtE,IAAK,IAAI/gI,EAAK,EAAGghI,EAAkBF,EAAe9gI,EAAKghI,EAAgBpnI,OAAQoG,IAAM,CAEtE+e,EADEiiH,EAAgBhhI,GACDgD,IACvB61F,kBAAoBkoC,IAGjCb,EAAQ3sF,UAAU+sF,oBAAsB,SAAU58H,EAAM65B,EAAQxe,GAC5D,IACIshH,KACJ,GAAI38H,GAAQA,EAAKqlB,SAASnvB,OACtB,IAAK,IAAIoG,EAAK,EAAGohB,EAAK1d,EAAKqlB,SAAU/oB,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACvD,IAAIihI,EAAU7/G,EAAGphB,GACjBqgI,EAAepmI,KAAK8kB,EAAUA,EAAUkiH,GAAS72G,WAGzD,OAAOi2G,GAEJH,KCrIPgB,GAA4B,WAK5B,SAASA,KA4NT,OApNAA,EAAW3tF,UAAUkZ,QAAU,aAQ/By0E,EAAW3tF,UAAUiZ,cAAgB,WAIjC,MAAO,cAGX00E,EAAW3tF,UAAU0uD,aAAe,SAAUhlF,EAAO8B,EAAWu5G,EAAYC,GACxE,IAAIh7F,GACAv+B,KAAMs5H,EAAWt5H,KACjB+f,UAAWA,EAAW05G,QAAS,EAAGC,QAAS,EAC3CC,mBAAqBC,WAAY,KAAMC,UAAYC,SAAU,EAAGC,cAAgBoI,eAChF3sH,YAAa8jH,EAAW9jH,YACxBwkH,kBAAmBV,EAAWU,kBAAmBC,gBAAiBX,EAAWW,gBAC7En8G,kBAAmBw7G,EAAWx7G,kBAAmBC,oBAAqBu7G,EAAWv7G,oBACjFswE,UAAWirC,EAAWjrC,UAAWvnF,OAAQwyH,EAAWxyH,OACpDnB,OAAQ2zH,EAAW3zH,OAAQqzB,WAAaoqE,KAAMk2B,EAAWl2B,MAE7Dj/F,KAAKsqF,SAASlwD,EAAQtgB,EAAO8B,EAAWw5G,IAE5C2I,EAAW3tF,UAAUk6C,SAAW,SAAUlwD,EAAQtgB,EAAO8B,EAAWw5G,GAEhE,IAAK,IADD70H,EACK7J,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,KAC9B6J,EAAOuZ,EAAMpjB,IACHg/F,oBACNt7D,EAAOw7F,WAAWr1H,EAAKV,IAAMG,KAAK+1H,gBAAgB37F,EAAQ75B,GACrDA,EAAKolB,SAAYplB,EAAKolB,QAAQlvB,QAC/B2jC,EAAOo7F,gBAAgB1+H,KAAKyJ,IAIpC65B,EAAO6kE,MAAQrjF,EAAUwe,EAAO6kE,MAChC7kE,EAAOq7F,WAAa75G,EAAUwe,EAAO6kE,MAEhC7kE,EAAOo7F,gBAAgB/+H,SAC5B2jC,EAAOq7F,WAAar7F,EAAOo7F,gBAAgB,GAC3Cp7F,EAAO6kE,KAAO7kE,EAAOq7F,WAAW51H,IAEhCu6B,EAAOq7F,aACPz1H,KAAKq8F,YAAYjiE,EAAQA,EAAOq7F,WAAY,EAAG75G,GAC/C5b,KAAKi+H,qBAAqB7jG,EAAQA,EAAOq7F,WAAY,EAAG,GACxDz1H,KAAKk+H,eAAe9jG,GACpBp6B,KAAKm+H,wBAAwB/jG,GAC7Bp6B,KAAKo2H,aAAah8F,EAAQg7F,GAC1Bp1H,KAAKq2H,YAAYj8F,EAAQA,EAAOq7F,WAAY75G,KAGpDmiH,EAAW3tF,UAAUisD,YAAc,SAAUjiE,EAAQ75B,EAAMu7H,EAAOlgH,GAC9D,IAAIwiH,EAAWhkG,EAAOw7F,WAAWr1H,EAAKV,IACtCu6B,EAAO4jG,YAAYlnI,KAAKsnI,GACxBA,EAAS7H,MAAQuF,EACjBsC,EAASjC,SAAU,EACnB/hG,EAAOu7F,SAAWl5H,KAAKmJ,IAAIw0B,EAAOu7F,SAAUmG,GAC5C,IAAK,IAAIzlI,EAAI,EAAGA,EAAIkK,EAAKqlB,SAASnvB,OAAQJ,IAAK,CAC3C,IAAIqpF,EAAO9jE,EAAUA,EAAUrb,EAAKqlB,SAASvvB,IAAI4wB,UAC5Cy4D,EAAKgW,mBAAsBhW,EAAKy8C,UACjCiC,EAASjsH,SAASrb,KAAK4oF,GACvB1/E,KAAKq8F,YAAYjiE,EAAQslD,EAAMo8C,EAAQ,EAAGlgH,MAItDmiH,EAAW3tF,UAAU6tF,qBAAuB,SAAU7jG,EAAQ75B,EAAMvJ,EAAGC,GACnE,IAAIkuE,EACAi5D,EAAWhkG,EAAOw7F,WAAWr1H,EAAKV,IACtC,GAAIu+H,EAASjsH,SAAS1b,OAAQ,CAC1BQ,GAAK,IACL,IAAK,IAAIP,EAAI,EAAGA,EAAI0nI,EAASjsH,SAAS1b,OAAQC,IAE1CM,GADAmuE,EAAWnlE,KAAKi+H,qBAAqB7jG,EAAQgkG,EAASjsH,SAASzb,GAAIM,EAAGC,IACzDD,EACbC,EAAIkuE,EAASluE,EAEjBmnI,EAASjsH,SAAWisH,EAASjsH,SAASyiB,KAAK,SAAUypG,EAAMC,GACvD,OAAOlkG,EAAOw7F,WAAWyI,EAAKx+H,IAAI7I,EAAIojC,EAAOw7F,WAAW0I,EAAKz+H,IAAI7I,IAErE,IAAIkQ,EAAMkzB,EAAOw7F,WAAWwI,EAASjsH,SAAS,GAAGtS,IAAIqH,IACjDtB,EAAMw0B,EAAOw7F,WAAWwI,EAASjsH,SAASisH,EAASjsH,SAAS1b,OAAS,GAAGoJ,IAAI+F,IAQhF,GAPAw4H,EAASpnI,EAAIkQ,GAAOtB,EAAMsB,GAAO,EACjClQ,EAAI4O,EAAMw0B,EAAOy7F,kBACjBuI,EAASG,cAAgB34H,EAAMw0B,EAAOy7F,kBACtCuI,EAASpnI,GAAKonI,EAAS7lI,MAAQ,EAC/B6lI,EAASnnI,GAAKmnI,EAAS9lI,OAAS,EAChC8lI,EAASl3H,IAAMA,EACfk3H,EAASx4H,IAAMA,EACXw4H,EAASpnI,EAAIkQ,GAAOk3H,EAASjC,QAAS,CACtCiC,EAASpnI,EAAIkQ,EACblQ,EAAIonI,EAASpnI,EAAIonI,EAAS7lI,MAAQ,GAAKqN,EAAMsB,GAAO,EACpDk3H,EAASjC,SAAU,EACnB,IAASzlI,EAAI,EAAGA,EAAI0nI,EAASjsH,SAAS1b,OAAQC,IAC1CyuE,EAAWnlE,KAAKi+H,qBAAqB7jG,EAAQgkG,EAASjsH,SAASzb,GAAIM,EAAGC,GAE1EmnI,EAASjC,SAAU,EACnBnlI,EAAIonI,EAASpnI,EAAIonI,EAAS7lI,MAAQ6hC,EAAOy7F,kBAG7C7+H,EAAIA,GADJ4O,EAAMw0B,EAAOw7F,WAAWwI,EAASjsH,SAASisH,EAASjsH,SAAS1b,OAAS,GAAGoJ,IAAI0+H,eAC9D34H,EAAM5O,EACpBC,GAAK,IACLmnI,EAASnnI,EAAIA,OAGbmnI,EAASpnI,EAAIA,EACbonI,EAASnnI,EAAIA,EACbmnI,EAASl3H,IAAMlQ,EACfonI,EAASx4H,IAAM5O,EAAIonI,EAAS7lI,MAC5BvB,GAAKonI,EAAS7lI,MAAQ6hC,EAAOy7F,kBAEjC,OAAS7+H,EAAGA,EAAGC,EAAGA,IAEtB8mI,EAAW3tF,UAAU8tF,eAAiB,SAAU9jG,GAC5C,IAAIokG,KACAt3H,EAAMzK,KAAKyK,IAAIsqC,MAAM/0C,KAAM29B,EAAO4jG,YAAYxkG,IAAI,SAAU4kG,GAAY,OAAOA,EAASpnI,KAIxFynI,EAHMhiI,KAAKmJ,IAAI4rC,MAAM/0C,KAAM29B,EAAO4jG,YAAYxkG,IAAI,SAAU4kG,GAC5D,OAAOA,EAASpnI,EAAIonI,EAAS7lI,MAAQ6hC,EAAOy7F,qBAE/B3uH,EACjBkzB,EAAOs7F,UA0CP,IAAK,IAzCD1hB,EAAU,SAAUt9G,GASpB,IAAIgoI,KACJF,GATAA,EAASpkG,EAAO4jG,YAAYW,OAAO,SAAUP,GACzC,OAAIA,EAAS7H,QAAU7/H,EACZ0nI,EAGA,QAICxpG,KAAK,SAAUgqG,EAAWC,GAAa,OAAOD,EAAU5nI,EAAI6nI,EAAU7nI,IACtF0nI,EAASx3H,IAAMs3H,EAAO,GAAGxnI,EACzB0nI,EAAS94H,IAAM44H,EAAOA,EAAO/nI,OAAS,GAAGO,EAAIwnI,EAAOA,EAAO/nI,OAAS,GAAG8B,MAAQ6hC,EAAOy7F,kBACtF6I,EAASI,oBAAsB,EAC/BJ,EAASpmI,OAAS,EAClB,IAAK,IAAIkrB,EAAI,EAAGA,EAAIg7G,EAAO/nI,OAAQ+sB,IAC3Bg7G,EAAOh7G,GAAGlrB,OAASomI,EAASpmI,SAC5BomI,EAASpmI,OAASkmI,EAAOh7G,GAAGlrB,QAEhComI,EAASI,qBAAuBriI,KAAKmJ,IAAI44H,EAAOh7G,GAAGjrB,MAAOimI,EAAOh7G,GAAGlrB,QAChEkrB,IAAMg7G,EAAO/nI,OAAS,IACtBioI,EAASI,qBAAuB1kG,EAAOy7F,mBAG/C6I,EAASK,cAAgBL,EAAS94H,IAAM84H,EAASx3H,IAC7Cw3H,EAASI,oBAAsBJ,EAASK,gBACxCL,EAASK,eAAiBL,EAASK,cAAgBL,EAASI,qBAAuB,GAEvFJ,EAASlpE,OAASkpE,EAASK,eAAiB,EAAItiI,KAAK2R,IAAMswH,EAASpmI,OACpEomI,EAAS5kH,SACLpjB,EAAI,GACA0jC,EAAOs7F,OAAOh/H,EAAI,GAAG8+D,OAASp7B,EAAOs7F,OAAOh/H,EAAI,GAAG4B,QAAUomI,EAASlpE,SACtEkpE,EAASlpE,OAASp7B,EAAOs7F,OAAOh/H,EAAI,GAAG8+D,OAASp7B,EAAOs7F,OAAOh/H,EAAI,GAAG4B,QAG7E,IAAK,IAAIjC,EAAI,EAAGA,EAAImoI,EAAO/nI,OAAQJ,IAC/BmoI,EAAOnoI,GAAGunE,MAAQnhE,KAAK6G,IAAIk7H,EAAOnoI,GAAGW,EAAIwnI,EAAOnoI,GAAGkC,MAAQ,EAAI2O,GAAOu3H,EACtEC,EAAS5kH,MAAMhjB,KAAK0nI,EAAOnoI,IAE/B+jC,EAAOs7F,OAAO5+H,KAAK4nI,IAEdhoI,EAAI,EAAGA,GAAK0jC,EAAOu7F,SAAUj/H,IAClCs9G,EAAQt9G,IAGhBqnI,EAAW3tF,UAAU+tF,wBAA0B,SAAU/jG,GACrD,IAAI6kE,EAAO7kE,EAAOw7F,WAAWx7F,EAAOq7F,WAAW51H,IAC/Co/F,EAAKjoG,EAAI,EACTioG,EAAKhoG,EAAI,EACT,IAAK,IAAIP,EAAI,EAAGA,EAAI0jC,EAAOs7F,OAAOj/H,OAAQC,IACtC,IAAK,IAAIL,EAAI,EAAGA,EAAI+jC,EAAOs7F,OAAOh/H,GAAGojB,MAAMrjB,OAAQJ,IAAK,CACpD,IAAI+nI,EAAWhkG,EAAOs7F,OAAOh/H,GAAGojB,MAAMzjB,GACtC+nI,EAASpnI,EAAIyF,KAAKY,IAAqB,IAAjB+gI,EAASxgE,MAAcnhE,KAAK2R,GAAK,MAAQgsB,EAAOs7F,OAAOh/H,GAAG8+D,OAASp7B,EAAO07F,gBAAkBp/H,GAClH0nI,EAASnnI,EAAIwF,KAAKW,IAAqB,IAAjBghI,EAASxgE,MAAcnhE,KAAK2R,GAAK,MAAQgsB,EAAOs7F,OAAOh/H,GAAG8+D,OAASp7B,EAAO07F,gBAAkBp/H,GAClH0jC,EAAOk7F,QAAU74H,KAAKyK,IAAIkzB,EAAOk7F,QAAS8I,EAASpnI,GACnDojC,EAAOm7F,QAAU94H,KAAKyK,IAAIkzB,EAAOm7F,QAAS6I,EAASnnI,KAI/D8mI,EAAW3tF,UAAUgmF,aAAe,SAAUh8F,EAAQykE,GAClDzkE,EAAOk7F,QAAUl7F,EAAOq7F,WAAW15H,SAAW8iG,EAAS7nG,EAAI,EAC3DojC,EAAOm7F,QAAUn7F,EAAOq7F,WAAWz5H,SAAW6iG,EAAS5nG,EAAI,GAE/D8mI,EAAW3tF,UAAUimF,YAAc,SAAUj8F,EAAQ75B,EAAMqb,GACvD,IAAIwiH,EAAWhkG,EAAOw7F,WAAWr1H,EAAKV,IAClC9D,EAAUqiI,EAASpnI,EAAIojC,EAAOk7F,QAC9Bt5H,EAAUoiI,EAASnnI,EAAImjC,EAAOm7F,QAClCh1H,EAAKxE,SAAWA,EAChBwE,EAAKvE,SAAWA,EAChB,IAAK,IAAItF,EAAI,EAAGA,EAAI0nI,EAASjsH,SAAS1b,OAAQC,IAAK,CAC/C,IAAI8iI,EAAY4E,EAASjsH,SAASzb,GAClCsJ,KAAKq2H,YAAYj8F,EAAQxe,EAAU49G,EAAU35H,IAAK+b,KAG1DmiH,EAAW3tF,UAAU2lF,gBAAkB,SAAU37F,EAAQ8F,GACrD,IAAIoE,KAYJ,OAXAA,EAAKjrB,KAAO6mB,EAAKrgC,GACjBykC,EAAKttC,EAAI,EACTstC,EAAKrtC,EAAI,EACTqtC,EAAKp9B,IAAM,EACXo9B,EAAK1+B,IAAM,EACX0+B,EAAK/rC,MAAQ2nC,EAAK3zB,WAAWhU,MAC7B+rC,EAAKhsC,OAAS4nC,EAAK3zB,WAAWjU,OAC9BgsC,EAAKnyB,YACLmyB,EAAKiyF,MAAQ,EACbjyF,EAAKs5B,MAAQ,EACbt5B,EAAK63F,SAAU,EACR73F,GAEJy5F,KpDlOPiB,GAAgC,WAChC,SAASA,EAAeC,GAIpBj/H,KAAKk/H,UAAY,EAIjBl/H,KAAKm/H,UAAY,EAIjBn/H,KAAK8Z,SACL9Z,KAAKo/H,UAAYH,EACjB,IACIz9H,EAASyuC,GADDjwC,KAAKo/H,WAEjBp/H,KAAKq/H,SAAW79H,EAAOP,OACvBjB,KAAK8Z,SACAmlH,EAAO9E,SAASliB,UACjBgnB,EAAO9E,SAASliB,YAEfgnB,EAAO9E,SAAShoH,WACjB8sH,EAAO9E,SAAShoH,aAEpBnS,KAAK8Z,MAASmlH,EAAO9E,SAAgB,QAAEt0G,OAAOo5G,EAAO9E,SAAShoH,UAQlE,OAHA6sH,EAAe5uF,UAAUkvF,aAAe,WACpCt/H,KAAKo/H,UAAUjF,SAASl5H,OAASjB,KAAKq/H,UAEnCL,KAMPO,GAAiC,WACjC,SAASA,IACLv/H,KAAKw/H,OAAS,KACdx/H,KAAKy/H,cAAgB,GACrBz/H,KAAK0/H,gBAAkB,IACvB1/H,KAAK2/H,eAAiB,IACtB3/H,KAAK4/H,qBAAwBrnI,MAAOyH,KAAKy/H,cAAennI,OAAQ0H,KAAKy/H,eAIrEz/H,KAAKq/F,aAAe,EAIpBr/F,KAAKs/F,aAAet/F,KAAKw/H,OAIzBx/H,KAAKo/F,aAAep/F,KAAK0/H,gBACzB1/H,KAAKq/F,aAAer/F,KAAK2/H,eAmO7B,OA9NAJ,EAAgBnvF,UAAUkZ,QAAU,aAKpCi2E,EAAgBnvF,UAAUiZ,cAAgB,WACtC,MAAO,qBAEXk2E,EAAgBnvF,UAAUyvF,cAAgB,SAAUC,GAChD,IAAIC,EAAQ//H,KAAKg1E,aACjB+qD,EAAM5F,SAAS6F,OAASF,EAAmBG,eAAeH,EAAmBhmH,OAC7E,IAAIomH,EAAgBH,EAAM5F,SAASgG,WAC/BC,EAAWpgI,KAAKqgI,kBAAkBH,GAClCj4G,EAAQm4G,EAAS3pI,OACrBwxB,EAAQxrB,KAAKyK,IAAIlH,KAAKo/F,aAAcn3E,EAAQA,EAAQA,GACpDjoB,KAAKsgI,eAAeF,EAAUL,EAAM5F,SAAS6F,QAC7C,IAAK,IAAItpI,EAAI,EAAG6pI,EAAUt4G,EAAOvxB,EAAI6pI,EAAS7pI,IAC1CsJ,KAAKwgI,oBAAoBJ,GACzBpgI,KAAKygI,aAAaL,GAEtBpgI,KAAK0gI,mBAAmBN,EAAUL,IAEtCR,EAAgBnvF,UAAUkwF,eAAiB,SAAUF,EAAUO,GAK3D,IAAK,IAJDC,EAAWnkI,KAAKmJ,IAAI+6H,EAAWA,EAASpoI,MAAQ,GAAIooI,EAAWA,EAASroI,OAAS,IACjFuoI,EAAgBD,EAAW,EAA3BC,EAAiCD,EAAW,EAC5CE,EAAe,EAAIrkI,KAAK2R,GAAKgyH,EAAS3pI,OACtCsqI,EAASD,EACJpqI,EAAI,EAAGA,EAAI0pI,EAAS3pI,OAAQC,IAAK,CACtC,IAAIuoI,EAASmB,EAAS1pI,GACNsJ,KAAKghI,aAAa/B,GACxBI,UACNroI,EAAG6pI,EAAaD,EAAWzoI,OAAQsE,KAAKY,IAAI0jI,GAAS5mI,QAAQ,IAC7DlD,EAAG4pI,EAAaD,EAAWzoI,OAAOsE,KAAKW,IAAI2jI,GAAQ5mI,QAAQ,KAE/D4mI,GAAUD,IAMlBvB,EAAgBnvF,UAAUk6C,SAAW,SAAUw1C,GAC3C9/H,KAAKg1E,aAAe8qD,EAAmB9qD,aACvCh1E,KAAK6/H,cAAcC,IAEvBP,EAAgBnvF,UAAUowF,oBAAsB,SAAUJ,GAGtD,IAAK,IAFDa,EACAjrF,EACKxyB,EAAI,EAAGA,EAAI48G,EAAS3pI,OAAQ+sB,IAAK,CAItC,IAAK,IAHDy7G,EAASmB,EAAS58G,GAElB1J,GADJmnH,EAAYjhI,KAAKghI,aAAa/B,IACRnlH,MACb1e,EAAI,EAAGA,EAAI0e,EAAMrjB,OAAQ2E,IAAK,CAE/B80C,IADAgxF,EAAUpnH,EAAM1e,IACWyE,GAAIugI,IAC/BpgI,KAAKmhI,eAAeF,EAAWjhI,KAAKghI,aAAaE,IAGzD,IAAK,IAAIxqI,EAAI,EAAG2U,EAAWyO,EAAMrjB,OAAQC,EAAI2U,KACrCA,EAAW,GADoC3U,IAAK,CAIxD,IAAI0qI,EAAOphI,KAAKghI,aAAalnH,EAAMpjB,IAC/B2qI,EAAQ3qI,EAAI,GAAK2U,EAAYrL,KAAKghI,aAAalnH,EAAM,IAAM9Z,KAAKghI,aAAclnH,EAAMpjB,EAAI,IACxFc,EAAS,IAAMsiB,EAAMrjB,OAAS,EAAKgG,KAAK2R,GAAK,IAC7CkzH,EAAiB,EAAIthI,KAAKq/F,aAAe5iG,KAAKW,IAAI5F,GACtDwI,KAAKuhI,iBAAiBH,EAAMC,EAAMC,GAEtC,IAAK,IAAI1nI,EAAI,EAAGA,EAAIwmI,EAAS3pI,OAAQmD,IAAK,CACtC,IAAIsnI,EACChxF,IADDgxF,EAAUd,EAASxmI,IACSiG,GAAIia,IAAUonH,EAAQrhI,KAAOo/H,EAAOp/H,KAChEm2C,EAAQh2C,KAAKghI,aAAaE,GAC1BlhI,KAAKwhI,eAAeP,EAAWjrF,OAK/CupF,EAAgBnvF,UAAUqwF,aAAe,SAAUL,GAE/C,IAAK,IADDqB,EAAU,KACLj+G,EAAI,EAAGA,EAAI48G,EAAS3pI,OAAQ+sB,IAAK,CACtC,IAAIy7G,EAASmB,EAAS58G,GAElBk+G,GADJD,EAAUzhI,KAAKghI,aAAa/B,IACNI,SACtBqC,EAAQ1qI,GAAKyF,KAAKyK,IAAIu6H,EAAQvC,UAAWl/H,KAAK4/H,oBAAoBrnI,OAClEmpI,EAAQzqI,GAAKwF,KAAKyK,IAAIu6H,EAAQtC,UAAWn/H,KAAK4/H,oBAAoBtnI,QAClEmpI,EAAQvC,UAAY,EACpBuC,EAAQtC,UAAY,EACpBsC,EAAQpC,SAAWqC,IAG3BnC,EAAgBnvF,UAAUswF,mBAAqB,SAAUN,EAAUL,GAI/D,IAAK,IADDd,EAFA0C,GAAUppI,MAAOJ,OAAOyV,UAAWtV,OAAQH,OAAOyV,WAClD6zH,EAAU,KAELj+G,EAAI,EAAGA,EAAI48G,EAAS3pI,OAAQ+sB,IAAK,CACtCy7G,EAASmB,EAAS58G,GAElB,IAAIo+G,GACA5qI,GAFJyqI,EAAUzhI,KAAKghI,aAAa/B,IAEbI,SAASroI,EAAIioI,EAAO1yH,WAAWhU,MAAQ,EAClDtB,EAAGwqI,EAAQpC,SAASpoI,EAAIgoI,EAAO1yH,WAAWjU,OAAS,GAEvDqpI,EAAMppI,MAAQkE,KAAKyK,IAAIy6H,EAAMppI,MAAOqpI,EAAW5qI,GAC/C2qI,EAAMrpI,OAASmE,KAAKyK,IAAIy6H,EAAMrpI,OAAQspI,EAAW3qI,GAErD,IAASusB,EAAI,EAAGA,EAAI48G,EAAS3pI,OAAQ+sB,IAAK,CACtCy7G,EAASmB,EAAS58G,IAEdo+G,GADJH,EAAUzhI,KAAKghI,aAAa/B,IACHI,UACdroI,GAAK2qI,EAAMppI,OAASwnI,EAAM5F,SAASkF,SAAWU,EAAM5F,SAASkF,SAASroI,EAAI,GACrF4qI,EAAW3qI,GAAK0qI,EAAMrpI,QAAUynI,EAAM5F,SAASkF,SAAWU,EAAM5F,SAASkF,SAASpoI,EAAI,GACtFwqI,EAAQpC,SAAWuC,EACnBH,EAAQnC,iBAGhBC,EAAgBnvF,UAAUiwF,kBAAoB,SAAUD,GAGpD,IAAK,IAFDyB,KAEKhlI,EAAK,EAAGilI,EADN5jH,OAAOC,KAAKiiH,GACSvjI,EAAKilI,EAAOrrI,OAAQoG,IAAM,CACtD,IAAI2mB,EAAIs+G,EAAOjlI,GACf,GAAIujI,EAAS58G,GAAI,CACb,IAAIy7G,EAASmB,EAAS58G,GAClBy9G,EAAY,IAAIjC,GAAeC,GACnCA,EAAO9E,SAAS4H,IAAMd,EACtBY,EAAY/qI,KAAKmoI,IAGzB,OAAO4C,GAKXtC,EAAgBnvF,UAAU4wF,aAAe,SAAU/B,GAC/C,OAAOA,EAAO9E,SAAS4H,KAE3BxC,EAAgBnvF,UAAUoxF,eAAiB,SAAUQ,EAAUC,GAC3D,GAAgB,MAAZA,GAAgC,MAAZD,EAAxB,CAGA,IAAIt8H,EAAW1F,KAAKkiI,cAAcF,EAAS3C,SAAU4C,EAAS5C,UAC1D7nI,EAAQwI,KAAKmiI,UAAUH,EAAS3C,SAAU4C,EAAS5C,UACnDiC,EAAsC,GAApBthI,KAAKq/F,aACvB35F,EAAW47H,GACXthI,KAAKoiI,UAAU18H,EAAU47H,EAAgB9pI,EAAOyqI,KAGxD1C,EAAgBnvF,UAAU+xF,UAAY,SAAUvwF,EAAKC,GACjD,IAAIwwF,EAAU,EACVC,EAAKzwF,EAAI76C,EAAI46C,EAAI56C,EACjBurI,EAAK1wF,EAAI56C,EAAI26C,EAAI36C,EA6BrB,OA5BW,IAAPqrI,EAEID,EADAE,GAAM,EACK,EAAM9lI,KAAK2R,GAAM,EAGlB3R,KAAK2R,GAAK,EAGZ,IAAPm0H,EAEDF,EADAC,EAAK,EACK7lI,KAAK2R,GAGL,GAIdi0H,EAAU5lI,KAAK+lI,KAAKD,EAAKD,GACrBA,EAAK,GAAKC,EAAK,EACfF,EAAU5lI,KAAK2R,GAAKi0H,EAEfC,EAAK,GAAKC,EAAK,EACpBF,EAAU5lI,KAAK2R,GAAKi0H,EAEfC,EAAK,GAAKC,EAAK,IACpBF,EAAU,EAAM5lI,KAAK2R,GAAKi0H,IAG3BA,GAEX9C,EAAgBnvF,UAAU8xF,cAAgB,SAAUtwF,EAAKC,GACrD,IAAIze,EAAI,EACJ0pG,EAAKjrF,EAAI76C,EAAI46C,EAAI56C,EACjBsuC,EAAKuM,EAAI56C,EAAI26C,EAAI36C,EACjBkc,EAAK2pH,EAAKA,EAAOx3F,EAAKA,EAI1B,OAHInyB,EAAI,IACJigB,EAAI32B,KAAKg1C,KAAKt+B,IAEXigB,GAEXmsG,EAAgBnvF,UAAUmxF,iBAAmB,SAAUS,EAAUC,EAAUX,GACvE,IAAI57H,EAAW1F,KAAKkiI,cAAcF,EAAS3C,SAAU4C,EAAS5C,UAC1D7nI,EAAQwI,KAAKmiI,UAAUH,EAAS3C,SAAU4C,EAAS5C,UACnD35H,EAAW47H,GACXthI,KAAKoiI,UAAU18H,EAAU47H,EAAgB9pI,EAAOyqI,IAMxD1C,EAAgBnvF,UAAU0uD,aAAe,SAAUjU,EAAgBlsE,EAAY8jH,EAAiB7mH,EAAWwe,EAAQykE,IAC3F,IAAI6jC,IACV5jC,aAAajU,EAAgBlsE,EAAY8jH,EAAiB7mH,EAAWwe,EAAQykE,IAE/F0gC,EAAgBnvF,UAAU+wF,eAAiB,SAAUa,EAAUC,GAC3D,IAAIv8H,EAAW1F,KAAKkiI,cAAcF,EAAS3C,SAAU4C,EAAS5C,UAC1D7nI,EAAQwI,KAAKmiI,UAAUH,EAAS3C,SAAU4C,EAAS5C,WACnD35H,EAAW1F,KAAKq/F,cAAgB35F,EAAW1F,KAAKq/F,eAChDr/F,KAAKoiI,UAAU18H,EAAU1F,KAAKq/F,aAAc7nG,EAAOyqI,IAG3D1C,EAAgBnvF,UAAUgyF,UAAY,SAAU18H,EAAUi9H,EAASnrI,EAAOyqI,GACtE,IAAIh6G,EAAQg6G,EAASnoH,MAAMrjB,OACvBA,EAASiP,EAAWi9H,EACpB9yC,EAAS7vF,KAAKs/F,cAAgBr3E,EAAQA,GAASxrB,KAAKg1C,KAAKxpB,GAC7D,GAAe,IAAXxxB,EAAc,CACd,IACImsI,EADYnsI,EAASo5F,EAErB9zF,EAAUU,KAAKY,IAAI7F,GAASorI,EAC5B5mI,EAAUS,KAAKW,IAAI5F,GAASorI,EAChCX,EAAS/C,WAAanjI,EACtBkmI,EAAS9C,WAAanjI,IAGvBujI,KAGPmD,GAAoC,WACpC,SAASA,IACL1iI,KAAK6iI,gBACL7iI,KAAK8iI,wBACL9iI,KAAK+iI,gBACL/iI,KAAKgjI,eA4aT,OAvaAN,EAAmBtyF,UAAU0uD,aAAe,SAAUjU,EAAgBlsE,EAAY8jH,EAAiB7mH,EAAWwe,EAAQykE,GAClH7+F,KAAK4b,UAAYA,EACjB5b,KAAK8Z,MAAQ+wE,EACb7qF,KAAK2e,WAAaA,EAClB,IAAIskH,EAAgBp4C,EAChBo4C,EAAcxsI,OAAS,IACvBuJ,KAAKkjI,oBAAsBjmH,GAAYgmH,EAAc,KAEzD,IAAK,IAAIpmI,EAAK,EAAGsmI,EAAmBt4C,EAAgBhuF,EAAKsmI,EAAiB1sI,OAAQoG,IAAM,CACpF,IACIumI,OAAkB,GACtBA,EAFI7iI,EAAO4iI,EAAiBtmI,IAGZs9H,YAChBiJ,EAAgBjJ,SAASkJ,UAAY,OACrCrjI,KAAK+iI,aAAajsI,KAAKssI,GAE3B,IAAK,IAAInlH,EAAK,EAAG+lF,EAAerlF,EAAYV,EAAK+lF,EAAavtG,OAAQwnB,IAAM,CACxE,IACIqlH,OAAuB,GAC3BA,EAFgBt/B,EAAa/lF,IAGRk8G,YACrBmJ,EAAqBnJ,SAASkJ,UAAY,YAC1CrjI,KAAK+iI,aAAajsI,KAAKwsI,GAE3BtjI,KAAKujI,cAAcvjI,KAAK+iI,aAAcN,GAEtC,IAAK,IADDe,EAAcxjI,KAAKigI,eAAegD,GAC7BvsI,EAAI,EAAGA,EAAIusI,EAAcxsI,OAAQC,IAAK,CAC3C,IAAI6J,EAAO0iI,EAAcvsI,GACrB+sI,GAAS5kC,EAAS7nG,EAAIwsI,EAAYjrI,OAAS,EAC3CoK,EAASy3B,EAAOz3B,WACpBA,EAEOC,KAAOD,EAAOC,MAAQ,EAC7BD,EAAOE,MAAQF,EAAOE,OAAS,EAC/BF,EAAOI,IAAMJ,EAAOI,KAAO,EAC3BJ,EAAOG,OAASH,EAAOG,QAAU,EAC7Bs3B,EAAOz3B,OAAOC,OACdD,EAAOC,KAAOw3B,EAAOz3B,OAAOC,MAE5Bw3B,EAAOz3B,OAAOI,MACdJ,EAAOI,IAAMq3B,EAAOz3B,OAAOI,KAE/B,IAAI+5H,EAAMv8H,EAAK45H,SAAS4H,IAAI1C,SAASroI,GAAKuJ,EAAKxE,QAAWwE,EAAKgM,WAAWhU,MAAQ,GAC9EirI,EAAYxsI,EAAIysI,EAAQ9gI,EAAOC,KAC/B0iC,EAAM/kC,EAAK45H,SAAS4H,IAAI1C,SAASpoI,GAAKsJ,EAAKvE,QAAWuE,EAAKgM,WAAWjU,OAAS,GAAMkrI,EAAYvsI,EAAI0L,EAAOI,IAChHxC,EAAKxE,SAAW+gI,EAChBv8H,EAAKvE,SAAWspC,SACT/kC,EAAK45H,SAEhB,OAAO,GAKXuI,EAAmBtyF,UAAU6vF,eAAiB,SAAUyD,GACpDA,EAASA,EAAO9jH,QAIhB,IAAK,IADDrf,EAFA8L,EAAO,KACPkmC,EAAQ,KAEH77C,EAAI,EAAGA,EAAIgtI,EAAOjtI,OAAQC,IAAK,CAEpC,IAAI8K,EAASyuC,GADb1vC,EAAOmjI,EAAOhtI,IAEd2V,EAAO,IAAIC,GAAK/L,EAAK45H,SAAS4H,IAAMxhI,EAAK45H,SAAS4H,IAAI1C,SAASroI,EAAIwK,EAAOxK,EAAGuJ,EAAK45H,SAAS4H,IAAMxhI,EAAK45H,SAAS4H,IAAI1C,SAASpoI,EAAIuK,EAAOvK,EAAGsJ,EAAKgM,WAAWhU,MAAOgI,EAAKgM,WAAWjU,QAE7Ki6C,EADAA,EACQA,EAAMlgC,UAAUhG,GAGhBA,EAGhB,OAAOkmC,GAEXmwF,EAAmBtyF,UAAUmzF,cAAgB,SAAUI,EAAelB,GAClEziI,KAAK4jI,oBAAoBD,GACzB,IAAIE,EAAaF,EAAcltI,OAC/B,GAAIotI,EAAa,EAAG,CAIhB,IAAK,IAHDC,KACAhqH,KACAiqH,KACKnqI,EAAI,EAAGA,EAAI+pI,EAAcltI,OAAQmD,IAAK,CAC3C,IAAIw2H,EAAKuT,EAAc/pI,QACSK,IAA5Bm2H,EAAG+J,SAAS6J,cACZ5T,EAAG+J,SAAS6J,aAAc,GAEA,cAA1B5T,EAAG+J,SAASkJ,WAA8BjT,EAAG+J,SAAS6J,YAGvB,cAA1B5T,EAAG+J,SAASkJ,UACjBS,EAAehtI,KAAKs5H,GAGpB2T,EAAYjtI,KAAKs5H,GANjBt2G,EAAMhjB,KAAKs5H,GAWnB,IAFAt2G,EAAQA,EAAM+L,OAAOk+G,GACrBjqH,EAAQgqH,EAAej+G,OAAO/L,GACvB+pH,EAAa7jI,KAAKikI,iBAAiBjkI,KAAKgjI,cAE3C,GADAhjI,KAAKkkI,mBAAmBpqH,GACC,MAArB9Z,KAAKg1E,aAAT,CAGAytD,EAAgBn4C,SAAStqF,MACzBA,KAAKg1E,aAAe,KACpBh1E,KAAK6iI,gBACL,IAAK,IAAIhmI,EAAK,EAAGohB,EAAKje,KAAK8iI,qBAAsBjmI,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACnDohB,EAAGphB,GACTs9H,SAAS6J,aAAc,GAGzChkI,KAAKgjI,YAAc,KACnBhjI,KAAKg1E,aAAe,KAExB,OAAO,GAEX0tD,EAAmBtyF,UAAU8zF,mBAAqB,SAAUpqH,GACxD,IAAK,IAAIpjB,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAAK,CACnC,IAAI6J,EAAOuZ,EAAMpjB,GACjB,IAAKw5C,GAAmB3vC,EAAKV,GAAIG,KAAKgjI,aAAc,CAC5CziI,GACAP,KAAKmkI,YAAY5jI,GAErB,SAIZmiI,EAAmBtyF,UAAU+zF,YAAc,SAAU5jI,GACjD,IAAI6jI,EAAY7jI,EACgB,cAA5BA,EAAK45H,SAASkJ,UACdrjI,KAAKqkI,iBAAiB9jI,GAEJ,MAAb6jI,GACDpkI,KAAKskI,QAAQ/jI,EAAM,YACnBP,KAAKskI,QAAQ/jI,EAAM,YACfP,KAAKukI,yBAAyBH,IAC9BpkI,KAAKg1E,cAAiBmlD,aACtBn6H,KAAKg1E,aAAamlD,SAASqK,WAAa,GACxCxkI,KAAKg1E,aAAamlD,SAASsK,UAAY,GACvCzkI,KAAK0kI,qBAAqBN,IAG1BpkI,KAAKg1E,aAAez0E,IAKpCmiI,EAAmBtyF,UAAUs0F,qBAAuB,SAAUN,GAC1D,IAAIrE,EAAQ//H,KAAKg1E,aACZ+qD,EAAM5F,SAASgG,aAChBJ,EAAM5F,SAASgG,eAEnB,IAAI5/H,EAAO6jI,EACX,GAAY,MAAR7jI,GAAgBP,KAAKskI,QAAQ/jI,EAAM,UAAW,CAC9C,IAAIokI,EAAWpkI,EAAKV,GACpB,GAAKG,KAAK4kI,mBAAmB7E,EAAM5F,SAASgG,WAAY5/H,GAKnD,CACD,IAAI6+H,EAAYW,EAAM5F,SAASgG,WAAWwE,GACtCvF,EAAUjF,SAAS0K,QACnBzF,EAAUjF,SAAS0K,OAAQ,EAC3B7kI,KAAK8kI,sBAAsB1F,GAC3Bp/H,KAAK+kI,iBAAiBX,QAViC,CAC3D,IAAInF,EAASj/H,KAAKglI,aAAazkI,GAC/BP,KAAK8kI,sBAAsB7F,GAC3Bj/H,KAAK+kI,iBAAiBX,MAYlC1B,EAAmBtyF,UAAU20F,iBAAmB,SAAUX,GACtDpkI,KAAKilI,kBAAkBb,EAAW,WAClCpkI,KAAKilI,kBAAkBb,EAAW,aAEtC1B,EAAmBtyF,UAAU60F,kBAAoB,SAAUb,EAAWc,GAClE,IAAI1/G,KACuB,YAAvB0/G,EACA1/G,EAAQ4+G,EAAUz+G,QAEU,aAAvBu/G,IACL1/G,EAAQ4+G,EAAUx+G,UAEtB,IAAK,IAAIlvB,EAAI,EAAGA,EAAI8uB,EAAM/uB,OAAQC,IAAK,CACnC,IAAIgpF,EAAO1/E,KAAK4b,UAAU4J,EAAM9uB,IAChC,GAAIsJ,KAAKskI,QAAQ5kD,EAAM,UAAW,CAC9B,IAAIylD,EAAWnlI,KAAK4b,UAAU8jE,EAAKj+E,UAC/B2jI,EAASplI,KAAK4b,UAAU8jE,EAAKz4D,UACN,YAAvBi+G,GAAgD,MAAZC,GACpCj1F,GAAmBi1F,EAAStlI,GAAIG,KAAK8Z,OACrC9Z,KAAK0kI,qBAAqB1kI,KAAK4b,UAAU8jE,EAAKj+E,WAElB,aAAvByjI,GAA+C,MAAVE,GAC1Cl1F,GAAmBk1F,EAAOvlI,GAAIG,KAAK8Z,QACnC9Z,KAAK0kI,qBAAqB1kI,KAAK4b,UAAU8jE,EAAKz4D,cAK9Dy7G,EAAmBtyF,UAAU00F,sBAAwB,SAAU1F,GAC3Dp/H,KAAKqlI,oBAAoBjG,GACzBp/H,KAAKslI,qBAAqBlG,IAE9BsD,EAAmBtyF,UAAUw0F,mBAAqB,SAAUrqI,EAAKgrI,GAE7D,IAAK,IADDpnH,EAAOD,OAAOC,KAAK5jB,GACd7D,EAAI,EAAGA,EAAIynB,EAAK1nB,OAAQC,IAC7B,GAAIynB,EAAKznB,KAAO6uI,EAAO1lI,GACnB,OAAO,EAGf,OAAO,GAEX6iI,EAAmBtyF,UAAU6zF,iBAAmB,SAAU1pI,GAEtD,OADW2jB,OAAOC,KAAK5jB,GACX9D,QAEhBisI,EAAmBtyF,UAAUk1F,qBAAuB,SAAUlG,GAG1D,IAAK,IAFDW,EAAQ//H,KAAKg1E,aACbovD,EAAYhF,EACPxlI,EAAI,EAAGA,EAAIwqI,EAAUx+G,SAASnvB,OAAQmD,IAAK,CAChD,IAAI8lF,EAAO1/E,KAAK4b,UAAUwoH,EAAUx+G,SAAShsB,IAC7C,IAAK8lF,EAAKy6C,SAAS6J,YAAa,CAC5B,IAAIzjI,EAAOP,KAAK4b,UAAU8jE,EAAKz4D,UAC/B,GAAIipB,GAAmB3vC,EAAKV,GAAIG,KAAK8Z,QAAkB,MAARvZ,GAAgBA,EAAKq9B,QAAS,CACzE,IAAI4nG,OAAiB,EAChBxlI,KAAK4kI,mBAAmB7E,EAAM5F,SAASgG,WAAY5/H,GAKpDilI,EAAiBzF,EAAM5F,SAASgG,WAAW5/H,EAAKV,KAJhD2lI,EAAiBxlI,KAAKglI,aAAazkI,IACpB45H,SAAS0K,OAAQ,EAK/BzF,EAAUjF,SAAShoH,WACpBitH,EAAUjF,SAAShoH,aAElBqzH,EAAerL,SAASliB,UACzButB,EAAerL,SAASliB,YAE5Bj4G,KAAKylI,QAAQD,EAAerL,SAASliB,QAASmnB,GAC1Cp/H,KAAK0lI,SAAStG,EAAUjF,SAAShoH,SAAUqzH,EAAe3lI,IAAM,GAChEu/H,EAAUjF,SAAShoH,SAASrb,KAAK0uI,OAMrD9C,EAAmBtyF,UAAUi1F,oBAAsB,SAAUjG,GAGzD,IAAK,IAFDW,EAAQ//H,KAAKg1E,aACbovD,EAAYhF,EACPxlI,EAAI,EAAGA,EAAIwqI,EAAUz+G,QAAQlvB,OAAQmD,IAAK,CAC/C,IAAI8lF,EAAO1/E,KAAK4b,UAAUwoH,EAAUz+G,QAAQ/rB,IAC5C,IAAK8lF,EAAKy6C,SAAS6J,YAAa,CAC5B,IAAIzjI,EAAOP,KAAK4b,UAAU8jE,EAAKj+E,UAC/B,GAAIyuC,GAAmB3vC,EAAKV,GAAIG,KAAK8Z,QAAkB,MAARvZ,GAAgBA,EAAKq9B,QAAS,CACzE,IAAIqhG,OAAS,EACRj/H,KAAK4kI,mBAAmB7E,EAAM5F,SAASgG,WAAY5/H,GAKpD0+H,EAASc,EAAM5F,SAASgG,WAAW5/H,EAAKV,KAJxCo/H,EAASj/H,KAAKglI,aAAazkI,IACpB45H,SAAS0K,OAAQ,EAKvBzF,EAAUjF,SAASliB,UACpBmnB,EAAUjF,SAASliB,YAElBgnB,EAAO9E,SAAShoH,WACjB8sH,EAAO9E,SAAShoH,aAEpBnS,KAAKylI,QAAQxG,EAAO9E,SAAShoH,SAAUitH,GACnCp/H,KAAK0lI,SAAStG,EAAUjF,SAASliB,QAASgnB,EAAOp/H,IAAM,GACvDu/H,EAAUjF,SAASliB,QAAQnhH,KAAKmoI,OAMpDyD,EAAmBtyF,UAAUq1F,QAAU,SAAU90D,EAAMpwE,GACnD,IAAIolI,EAAS3lI,KAAK0lI,SAAS/0D,EAAMpwE,EAAKV,IAClC8lI,GAAU,GAAKA,EAASh1D,EAAKl6E,OAC7Bk6E,EAAKg1D,GAAUplI,EAGfowE,EAAK75E,KAAKyJ,IAGlBmiI,EAAmBtyF,UAAUs1F,SAAW,SAAU/0D,EAAMi1D,GACpD,IAAID,GAAU,EACd,GAAY,MAARh1D,GAA6B,KAAbi1D,EAChB,IAAK,IAAIlvI,EAAI,EAAGmvI,EAAUl1D,EAAKl6E,OAAQC,EAAImvI,EAASnvI,IAAK,CACrD,IAAIuoI,EAAStuD,EAAKj6E,GAClB,GAAwB,oBAAYuoI,IAAW2G,EAAU,CACrDD,EAASjvI,EACT,MAEC,GAAc,MAAVuoI,GAAkBA,EAAOp/H,KAAO+lI,EAAU,CAC/CD,EAASjvI,EACT,OAIZ,OAAOivI,GAEXjD,EAAmBtyF,UAAU40F,aAAe,SAAUzkI,GAClD,IAAIw/H,EAAQ//H,KAAKg1E,aACZ+qD,EAAM5F,SAASgG,aAChBJ,EAAM5F,SAASgG,eAEnB,IAAIlB,EAAS1+H,EACb,GAAa,MAATw/H,EAAe,CACfA,EAAM5F,SAASgG,WAAWlB,EAAOp/H,IAAMo/H,EACvC,IAAI6G,EAAa9lI,KAAKkjI,oBACJ,MAAd4C,GAAsBvlI,EAAKV,KAAOimI,EAAWjmI,KAC7CG,KAAKkjI,oBAAsBjE,GAGnC,OAAOA,GAEXyD,EAAmBtyF,UAAUm0F,yBAA2B,SAAUtF,GAC9D,IAAI8G,GAAsB,EAU1B,OATa9G,EAAc,QAAEp5G,OAAOo5G,EAAOr5G,UACjCnvB,OAAS,IACQ,MAAlBwoI,EAAOt5G,SAAqBs5G,EAAOt5G,QAAQlvB,OAAS,IACrDsvI,EAAsB/lI,KAAKgmI,qBAAqB/G,EAAOt5G,QAAS,cAE9DogH,GAA4C,MAAnB9G,EAAOr5G,UAAsBq5G,EAAOr5G,SAASnvB,OAAS,IACjFsvI,EAAsB/lI,KAAKgmI,qBAAqB/G,EAAOr5G,SAAU,YAGlEmgH,GAEXrD,EAAmBtyF,UAAU41F,qBAAuB,SAAUC,EAAsBC,GAEhF,IAAK,IADDH,GAAsB,EACjBrvI,EAAI,EAAGA,EAAIuvI,EAAqBxvI,OAAS,EAAGC,IAAK,CACtD,IAAIgpF,EAAO1/E,KAAK4b,UAAUqqH,EAAqBvvI,IAC/C,GAAKsJ,KAAKskI,QAAQ5kD,EAAM,aAGnBA,EAAKy6C,SAAS6J,cAAyC,aAAxBkC,GAAuE,MAAjClmI,KAAK4b,UAAU8jE,EAAKj+E,WAC9D,WAAxBykI,GAAqE,MAAjClmI,KAAK4b,UAAU8jE,EAAKz4D,YAAqB,CACjF8+G,GAAsB,EACtB,OAGR,OAAOA,GAEXrD,EAAmBtyF,UAAUi0F,iBAAmB,SAAU9jI,GACtD,IAAI4lI,EAAW5lI,EACf,GAAgB,MAAZ4lI,IAAqBA,EAAShM,SAAS6J,aAAehkI,KAAKskI,QAAQ/jI,EAAM,UAAW,CACpFP,KAAKskI,QAAQ/jI,EAAM,YACnB,IAAI4kI,EAAWnlI,KAAK4b,UAAUuqH,EAAS1kI,UACnC2jI,EAASplI,KAAK4b,UAAUuqH,EAASl/G,UACrB,MAAZk+G,EACAnlI,KAAKmkI,YAAYgB,GAEF,MAAVC,EACLplI,KAAKmkI,YAAYiB,GAGjBplI,KAAKg1E,aAAez0E,IAIhCmiI,EAAmBtyF,UAAUk0F,QAAU,SAAU8B,EAAWC,GACxD,IACI9lI,EAAO6lI,EAMX,MALwB,WAApBC,GAAiC9lI,EAAKq9B,SACjC59B,KAAK4kI,mBAAmB5kI,KAAKgjI,YAAaziI,KAC3CP,KAAKgjI,YAAYziI,EAAKV,IAAMU,KAG/BA,EAAKq9B,SAKd8kG,EAAmBtyF,UAAUwzF,oBAAsB,SAAU9pH,GAGzD,IAAK,IAFDwsH,KACAC,KACK/iH,EAAI,EAAGA,EAAI1J,EAAMrjB,OAAQ+sB,IACQ,cAAhC1J,EAAM0J,GAAG22G,SAASkJ,WACpBiD,EAAOxvI,KAAKgjB,EAAM0J,IAG1B,GAAI8iH,EAAO7vI,OAAS,EAGhB,IAFA8vI,EAAazvI,KAAKwvI,EAAO,IACzBtmI,KAAK6iI,aAAa/rI,KAAKwvI,EAAO,IACvBC,EAAa9vI,OAAS,GAAG,CAC5B,IAAIiX,EAAQ64H,EAAaA,EAAa9vI,OAAS,GAC3C8tC,EAAavkC,KAAKwmI,uBAAuB94H,GAC7C,GAAI62B,EAAW9tC,OAAS,EAAG,CACvB,IAAI8X,EAAQg2B,EAAW,GACnBkiG,EAAcliG,EAAWA,EAAW9tC,OAAS,GAC7Cy5C,GAAmB3hC,EAAM1O,GAAIG,KAAK6iI,eAClC4D,EAAYtM,SAAS6J,aAAc,EACnChkI,KAAK8iI,qBAAqBhsI,KAAK2vI,KAG/BF,EAAazvI,KAAKyX,GAClBvO,KAAK6iI,aAAat8H,OAAO,EAAG,EAAGgI,SAInCg4H,EAAat4D,QAK7By0D,EAAmBtyF,UAAUo2F,uBAAyB,SAAUzjI,GAC5D,IAAIwhC,KACJ,GAAIxhC,EAAI6iB,SAASnvB,OAAS,EAAG,CACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIqM,EAAI6iB,SAASnvB,OAAQC,IAAK,CAC1C,IAAIgwI,EAAM1mI,KAAK4b,UAAU7Y,EAAI6iB,SAASlvB,IACtC,IAAKw5C,GAAmBw2F,EAAI7mI,GAAIG,KAAK6iI,cAAe,CAChD,IAAIuC,EAASplI,KAAK4b,UAAU8qH,EAAIz/G,UAMhC,OALc,MAAVm+G,GACA7gG,EAAWztC,KAAKsuI,GAEpB7gG,EAAWztC,KAAK4vI,GAChB1mI,KAAK6iI,aAAat8H,OAAO,EAAG,EAAGmgI,GACxBniG,GAGf,OAAOA,EAEX,OAAOA,GAEJm+F,KqDhtBPiE,GAAyC,WAKzC,SAASA,KA0BT,OAlBAA,EAAwBv2F,UAAUkZ,QAAU,aAQ5Cq9E,EAAwBv2F,UAAUiZ,cAAgB,WAI9C,MAAO,2BAGXs9E,EAAwBv2F,UAAUk6C,SAAW,SAAUxwE,EAAO8B,EAAWwe,EAAQykE,IAC7E,IAAI+nC,IAAyBt8C,SAASxwE,EAAO8B,EAAWwe,EAAQykE,IAE7D8nC,KAMPC,GAAwC,WACxC,SAASA,IACL5mI,KAAK4b,aACL5b,KAAK6mI,eAAiB,IAAIC,GAo1B9B,OA/0BAF,EAAuBx2F,UAAU22F,aAAe,SAAUxmI,EAAMoF,EAAO3O,EAAGC,EAAGsB,EAAOD,GAMhF,OAHIqN,MAAOA,EAAOqhI,UAFDhwI,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOA,EAAOD,OAAQA,GAEb+gB,KAAM1T,EAAO2gI,QAAQ,EACvD3gH,QAASplB,EAAKolB,QAAQ/F,QAASgG,SAAUrlB,EAAKqlB,SAAShG,UAQ/DgnH,EAAuBx2F,UAAU62F,SAAW,SAAU1mI,GAClD,IAAIilB,KACJ,GAAIjlB,EAAM,CACN,IAAK,IAAI7J,EAAI,EAAG6J,EAAKolB,QAAQlvB,OAAS,GAAKC,EAAI6J,EAAKolB,QAAQlvB,OAAQC,IAChE8uB,EAAM1uB,KAAKkJ,KAAK4b,UAAUrb,EAAKolB,QAAQjvB,KAE3C,IAASA,EAAI,EAAG6J,EAAKqlB,SAASnvB,OAAS,GAAKC,EAAI6J,EAAKqlB,SAASnvB,OAAQC,IAClE8uB,EAAM1uB,KAAKkJ,KAAK4b,UAAUrb,EAAKqlB,SAASlvB,KAGhD,OAAO8uB,GAKXohH,EAAuBx2F,UAAU82F,UAAY,SAAUC,GAInD,IAAK,IAHDC,KACAC,EAAO,KACPC,GAAW,IACNzqI,EAAK,EAAGohB,EAAKC,OAAOC,KAAKgpH,GAAWtqI,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAM/D,IAAK,IAJDspB,EAAOghH,EADHlpH,EAAGphB,IAEP0qI,EAAQvnI,KAAKinI,SAAS9gH,GACtBP,EAAW,EACXD,EAAU,EACLnC,EAAI,EAAGA,EAAI+jH,EAAM9wI,OAAQ+sB,IAAK,CACzBxjB,KAAKwnI,mBAAmBD,EAAM/jH,IAAI,GACpCnK,OAAS8M,EAAK9M,KAClBuM,IAGAD,IAGQ,IAAZA,GAAiBC,EAAW,GAC5BwhH,EAAMtwI,KAAKqvB,GAEf,IAAI+lC,EAAOtmC,EAAWD,EAClBumC,EAAOo7E,IACPA,EAAUp7E,EACVm7E,EAAOlhH,GAMf,OAHqB,IAAjBihH,EAAM3wI,QAAwB,MAAR4wI,GACtBD,EAAMtwI,KAAKuwI,GAERD,GAMXR,EAAuBx2F,UAAUo3F,mBAAqB,SAAU9nD,EAAMn9E,GAClE,IAAIklI,EAAgBznI,KAAK4b,UAAU8jE,EAAKz4D,UACpC1kB,IACAklI,EAAgBznI,KAAK4b,UAAU8jE,EAAKj+E,WAExC,IAAK,IAAI/K,EAAI,EAAGA,EAAIsJ,KAAKmnI,SAAS1wI,OAAQC,IACtC,GAAIsJ,KAAKmnI,SAASzwI,GAAG2iB,OAASouH,EAAc5nI,GACxC,OAAOG,KAAKmnI,SAASzwI,GAG7B,OAAO,MAMXkwI,EAAuBx2F,UAAUs3F,SAAW,SAAUpB,EAAQqB,EAAUjoD,EAAMkoD,EAAaC,EAAmBC,GAC1G,GAAc,MAAVxB,EAAgB,CAChB,IAAIyB,EAAWzB,EAAOjtH,KACtB,GAAuB,MAAlByuH,GAA4D,MAA5BA,EAAeC,GAAoB,CACvC,MAAzBH,EAAYG,KACZH,EAAYG,GAAYzB,GAEN,MAAlBwB,UACOA,EAAeC,GAI1B,IAAK,IAFDviH,EAAQxlB,KAAKinI,SAASX,GACtB0B,KACKtxI,EAAI,EAAGA,EAAI8uB,EAAM/uB,OAAQC,IAC9BsxI,EAAatxI,GAAKsJ,KAAKwnI,mBAAmBhiH,EAAM9uB,IAAI,KAAU4vI,EAElE,IAAS5vI,EAAI,EAAGA,EAAI8uB,EAAM/uB,OAAQC,IAC9B,IAAKixI,GAAYK,EAAatxI,GAAI,CAG9B,IAAK,IAFD+B,EAAOuH,KAAKwnI,mBAAmBhiH,EAAM9uB,IAAKsxI,EAAatxI,IACvDuxI,EAAW,EACN5xI,EAAI,EAAGA,EAAImvB,EAAM/uB,OAAQJ,IAC9B,GAAIA,IAAMK,EAAV,CAII,IAAIwxI,EAAYF,EAAa3xI,GACb2J,KAAKwnI,mBAAmBhiH,EAAMnvB,IAAK6xI,KACjCzvI,IACVyvI,EACAD,IAGAA,KAKZA,GAAY,IACZL,EAAc5nI,KAAK0nI,SAASjvI,EAAMkvI,EAAUniH,EAAM9uB,GAAIkxI,EAAaC,EAAmBC,UAMlG,GAA6B,MAAzBF,EAAYG,GAEZ,IAASrxI,EAAI,EAAGA,EAAImxI,EAAkBpxI,OAAQC,IAAK,CAC/C,IAAIyxI,EAAON,EAAkBnxI,GAC7B,GAAsB,MAAlByxI,EAAKJ,GAAmB,CACxB,IAAK,IAAIlrI,EAAK,EAAGohB,EAAKC,OAAOC,KAAKgqH,GAAOtrI,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC3D,IAAIigC,EAAM7e,EAAGphB,GACb+qI,EAAY9qG,GAAOqrG,EAAKrrG,GAI5B,OADA+qG,EAAkBthI,OAAO7P,EAAG,GACrBkxI,IAM3B,OAAOA,GAKXhB,EAAuBx2F,UAAU6vF,eAAiB,SAAUnmH,GACxDA,EAAQA,EAAM8F,QAGd,IAAK,IAFDvT,EAAO,KACPkmC,EAAQ,KACH77C,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAE9B,GADA2V,EAAOyN,EAAMpjB,GAAGswI,SACZz0F,EAAO,CACP,IAAI1vC,EAAQpG,KAAKmJ,IAAI2sC,EAAMv7C,EAAIu7C,EAAMh6C,MAAO8T,EAAKrV,EAAIqV,EAAK9T,OACtDuK,EAASrG,KAAKmJ,IAAI2sC,EAAMt7C,EAAIs7C,EAAMj6C,OAAQ+T,EAAKpV,EAAIoV,EAAK/T,QAC5Di6C,EAAMv7C,EAAIyF,KAAKyK,IAAIqrC,EAAMv7C,EAAGqV,EAAKrV,GACjCu7C,EAAMt7C,EAAIwF,KAAKyK,IAAIqrC,EAAMt7C,EAAGoV,EAAKpV,GACjCs7C,EAAMh6C,MAAQsK,EAAQ0vC,EAAMv7C,EAC5Bu7C,EAAMj6C,OAASwK,EAASyvC,EAAMt7C,OAG9Bs7C,GAAUv7C,EAAGqV,EAAKrV,EAAGC,EAAGoV,EAAKpV,EAAGsB,MAAO8T,EAAK9T,MAAOD,OAAQ+T,EAAK/T,QAGxE,OAAOi6C,GAMXq0F,EAAuBx2F,UAAUk6C,SAAW,SAAUxwE,EAAO8B,EAAWu5G,EAAYt2B,GAChF7+F,KAAK4b,UAAYA,EACjB,IAAIwe,GACAy7F,kBAAmBV,EAAWU,kBAAmBC,gBAAiBX,EAAWW,gBAC7EzkH,YAAa8jH,EAAW9jH,YAAa+2H,QAASjT,EAAWxyH,OAAOC,KAAMylI,QAASlT,EAAWxyH,OAAOI,KAE1E,gBAAvBq3B,EAAO/oB,YACP+oB,EAAOiuG,SAAWlT,EAAWxyH,OAAOI,IAER,gBAAvBq3B,EAAO/oB,cACZ+oB,EAAOguG,SAAWjT,EAAWxyH,OAAOC,MAExC5C,KAAKmnI,YAEL,IAAK,IADDmB,KACK5xI,EAAI,EAAGA,EAAIojB,EAAMrjB,OAAQC,IAAK,CACnC,IAAI6J,EAAOP,KAAK+mI,aAAajtH,EAAMpjB,GAAIojB,EAAMpjB,GAAGmJ,GAAI,EAAG,EAAGia,EAAMpjB,GAAG6V,WAAWhU,MAAOuhB,EAAMpjB,GAAG6V,WAAWjU,QACzG0H,KAAKmnI,SAASrwI,KAAKyJ,GACnB+nI,EAAgB/nI,EAAK8Y,MAAQ9Y,EAEjC,IACIgoI,EADAV,KAEJU,EAAiBvoI,KAAKknI,UAAUoB,GAChC,IAAS5xI,EAAI,EAAGA,EAAI6xI,EAAe9xI,OAAQC,IAAK,CAC5C,IAAI8xI,KACJX,EAAkB/wI,KAAK0xI,GACvBxoI,KAAK0nI,SAASa,EAAe7xI,IAAI,EAAM,KAAM8xI,EAAWX,EAAmBS,GAG1E,IADDG,GAAUL,QAAS,EAAGC,QAAS,GACnC,IAAS3xI,EAAI,EAAGA,EAAImxI,EAAkBpxI,OAAQC,IAAK,CAC3C8xI,EAAYX,EAAkBnxI,GAElC,IAAK,IADDgyI,KACK7rI,EAAK,EAAGohB,EAAKC,OAAOC,KAAKqqH,GAAY3rI,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAChE,IAAIigC,EAAM7e,EAAGphB,GACb6rI,EAAI5xI,KAAK0xI,EAAU1rG,IAEvB,IAAIvmB,EAAQ,IAAIoyH,GAAiB3oI,KAAM0oI,EAAKH,EAAgBnuG,GAC5Dp6B,KAAK4oI,WAAWryH,GAChBvW,KAAK6oI,cAActyH,GACnBvW,KAAK8oI,cAAcvyH,GACnBkyH,EAAQzoI,KAAK+oI,eAAexyH,EAAOkyH,EAAML,QAASK,EAAMJ,SAIvD,IAFD7E,EAAcxjI,KAAKigI,eAAejgI,KAAKmnI,UACvC1D,GAAS5kC,EAAS7nG,EAAIwsI,EAAYjrI,OAAS,EAC/C,IAAS7B,EAAI,EAAGA,EAAIsJ,KAAKmnI,SAAS1wI,OAAQC,IAAK,CAC3C,IAAIsyI,EAAShpI,KAAKmnI,SAASzwI,GAC3B,GAAIsyI,EAAQ,CACR,IAAIC,EAAQjpI,KAAK4b,UAAUotH,EAAO3vH,MAClC4vH,EAAMltI,QAAU,EAChBktI,EAAMjtI,QAAU,EAEhB,IAAI8gI,EAAMkM,EAAOhC,SAAShwI,GAAKiyI,EAAMltI,QAAWktI,EAAM18H,WAAWhU,MAAQ,GAAO6hC,EAAOguG,QACnF9iG,EAAM0jG,EAAOhC,SAAS/vI,GAAKgyI,EAAMjtI,QAAWitI,EAAM18H,WAAWjU,OAAS,GAAO8hC,EAAOiuG,QACpFrxI,EAAI8lI,EACJ7lI,EAAIquC,EACmB,gBAAvBlL,EAAO/oB,YACPpa,EAAIusI,EAAYlrI,OAASgtC,EAEG,gBAAvBlL,EAAO/oB,cACZra,EAAIwsI,EAAYjrI,MAAQukI,GAE5B9lI,GAAKysI,EACLwF,EAAMltI,SAAW/E,EAAIiyI,EAAMltI,QAC3BktI,EAAMjtI,SAAW/E,EAAIgyI,EAAMjtI,WAOvC4qI,EAAuBx2F,UAAU24F,eAAiB,SAAUxyH,EAAO6xH,EAASC,GACxE,IAAIU,EAAiB/oI,KAAKkpI,qBAAqBd,EAASC,EAASnoH,OAAQ3J,GAIzE,OAHAwyH,EAAexyH,MAAQA,EACvBwyH,EAAeI,gBAAkB,KACjCnpI,KAAKopI,sBAAsBL,IAEvBX,QAASW,EAAeX,QAAU7xH,EAAM6jB,OAAOy7F,kBAC/CwS,QAASU,EAAeV,QAAU9xH,EAAM6jB,OAAO07F,kBAMvD8Q,EAAuBx2F,UAAU84F,qBAAuB,SAAUd,EAASC,EAASnoH,EAAQ3J,GACxF,IAAI8yH,KAaJ,MAZiC,gBAA7B9yH,EAAM6jB,OAAO/oB,aAA8D,gBAA7BkF,EAAM6jB,OAAO/oB,aAC3Dg4H,EAAgBxT,kBAAoBt/G,EAAM6jB,OAAOy7F,kBACjDwT,EAAgBvT,gBAAkBv/G,EAAM6jB,OAAO07F,kBAG/CuT,EAAgBxT,kBAAoBt/G,EAAM6jB,OAAO07F,gBACjDuT,EAAgBvT,gBAAkBv/G,EAAM6jB,OAAOy7F,mBAEnDwT,EAAgBh4H,YAAc,QAE9Bg4H,EAAgBjB,QAAUiB,EAAgBjB,QAAUA,EACpDiB,EAAgBhB,QAAUgB,EAAgBhB,QAAUA,EAC7CgB,GAKXzC,EAAuBx2F,UAAUk5F,oBAAsB,SAAUD,EAAiBtJ,EAAOxpH,GACrF,IAAIuX,GAAe,EAC8B,gBAA7Cu7G,EAAgB9yH,MAAM6jB,OAAO/oB,aAA8E,gBAA7Cg4H,EAAgB9yH,MAAM6jB,OAAO/oB,cAC3Fyc,GAAe,GAEnB,IAAI7d,GAAUo5H,EAAgBvT,gBAC1ByT,EAAsB,EAC1BF,EAAgBG,aAChBH,EAAgBI,cAChB,IAAK,IAAIC,EAAYnzH,EAAMozH,QAASD,GAAa,EAAGA,IAAa,CAI7D,IAAK,IAHDE,EAAc,EACdC,EAAOtzH,EAAMuzH,MAAMJ,GACnBK,EAAcj8G,EAAeu7G,EAAgBhB,QAAUgB,EAAgBjB,QAClE1xI,EAAI,EAAGA,EAAImzI,EAAKpzI,OAAQC,IAAK,CAClC,IAAI6J,EAAOspI,EAAKnzI,GAChB,GAAIsJ,KAAK6mI,eAAemD,SAASzpI,GAAO,CACpC,IAAI+lI,EAAS/lI,EACb,GAAI+lI,EAAOngH,OAASmgH,EAAOngH,KAAKR,SAAW2gH,EAAOngH,KAAKP,UAAW,CAC9D,IAAIrrB,EAAMyF,KAAK4b,UAAU0qH,EAAOngH,KAAK9M,MACrCitH,EAAO/tI,MAAQgC,EAAIgS,WAAWhU,MAC9B+tI,EAAOhuI,OAASiC,EAAIgS,WAAWjU,OAC/BsxI,EAAcntI,KAAKmJ,IAAIgkI,EAAc97G,EAAew4G,EAAO/tI,MAAQ+tI,EAAOhuI,cAI9E,GAAIiI,EAAM,CACN,IAAIm/E,EAAOn/E,EACP0pI,EAAW,EACG,MAAdvqD,EAAKl6D,QACLykH,EAAWvqD,EAAKl6D,MAAM/uB,QAE1B8J,EAAKhI,MAAyB,IAAhB0xI,EAAW,GAG7Bn8G,IACKvtB,EAAKjI,SACNiI,EAAKjI,OAAS,IAItByxI,IAAgBj8G,EAAevtB,EAAKjI,OAASiI,EAAKhI,OAAS,EAC3DyH,KAAKkqI,MAAM3pI,EAAMmpI,EAAWK,IAAaj8G,GACzC9tB,KAAKmqI,gBAAgB5pI,EAAMmpI,EAAWK,IACtCA,IAAiBj8G,EAAevtB,EAAKjI,OAASiI,EAAKhI,OAAS,EAAO8wI,EAAgBxT,mBACjEwT,EAAgBF,kBAC9BE,EAAgBF,gBAAkBY,EAClCV,EAAgBe,WAAaV,GAEjCL,EAAgBG,UAAUE,GAAaK,EAE3CV,EAAgBI,WAAWC,GAAaz5H,EACxC,IAAIo6H,EAAqBT,EAAc,EAAML,EAAsB,EAAMF,EAAgBvT,gBACzFyT,EAAsBK,EACc,UAAhCP,EAAgBh4H,aAA2D,SAAhCg4H,EAAgBh4H,YAC3DpB,GAAUo6H,EAGVp6H,GAAUo6H,EAEd,IAAS3zI,EAAI,EAAGA,EAAImzI,EAAKpzI,OAAQC,IAAK,CAClC,IAAIyvB,EAAO0jH,EAAKnzI,GAChBsJ,KAAKkqI,MAAM/jH,EAAMujH,EAAWz5H,GAAQ6d,MAQhD84G,EAAuBx2F,UAAU+5F,gBAAkB,SAAU5pI,EAAM2nC,EAAOviC,GAClE3F,KAAK6mI,eAAemD,SAASzpI,GAC7BA,EAAKoQ,KAAK,GAAKhL,EAGfpF,EAAKoQ,KAAKu3B,EAAQ3nC,EAAK+pI,QAAU,GAAK3kI,GAO9CihI,EAAuBx2F,UAAU85F,MAAQ,SAAU3pI,EAAM2nC,EAAOviC,EAAO4kI,GAC/DhqI,GAAQA,EAAK4lB,OACT5lB,EAAK4lB,KAAKR,SAAWplB,EAAK4lB,KAAKP,SAC3B2kH,EACAhqI,EAAKtJ,EAAE,GAAK0O,EAGZpF,EAAKvJ,EAAE,GAAK2O,EAIZ4kI,EACAhqI,EAAKtJ,EAAEixC,EAAQ3nC,EAAK+pI,QAAU,GAAK3kI,EAGnCpF,EAAKvJ,EAAEkxC,EAAQ3nC,EAAK+pI,QAAU,GAAK3kI,IAQnDihI,EAAuBx2F,UAAUo6F,gBAAkB,SAAUC,EAAOf,EAAW3J,EAAOxpH,GAClF,IAAIuX,GAAe,EACoB,gBAAnC28G,EAAMl0H,MAAM6jB,OAAO/oB,aAAoE,gBAAnCo5H,EAAMl0H,MAAM6jB,OAAO/oB,cACvEyc,GAAe,GAKnB,IAAK,IAHD+7G,EAAOtzH,EAAMuzH,MAAMJ,GACnBgB,EAAY,EACZX,GAAej8G,EAAe28G,EAAMpC,QAAUoC,EAAMrC,UAAYqC,EAAMtB,gBAAkBsB,EAAMjB,UAAUE,IAAc,EACjHhzI,EAAI,EAAGA,EAAImzI,EAAKpzI,OAAQC,IAAK,CAClC,IAAI6J,EAAOspI,EAAKnzI,GAChB,GAAIsJ,KAAK6mI,eAAemD,SAASzpI,GAAO,CACpC,IAAIhG,EAAMyF,KAAK4b,UAAUrb,EAAK4lB,KAAK9M,MACnC9Y,EAAKhI,MAAQgC,EAAIgS,WAAWhU,MAC5BgI,EAAKjI,OAASiC,EAAIgS,WAAWjU,OAC7BoyI,EAAYjuI,KAAKmJ,IAAI8kI,EAAWnqI,EAAKjI,YAEpC,CACD,IAAIonF,EAAOn/E,EACP0pI,EAAW,EACG,MAAdvqD,EAAKl6D,QACLykH,EAAWvqD,EAAKl6D,MAAM/uB,QAEtBq3B,EACAvtB,EAAKjI,OAA0B,IAAhB2xI,EAAW,GAG1B1pI,EAAKhI,MAAyB,IAAhB0xI,EAAW,GAGjC,IAAI/oH,GAAQ4M,EAAevtB,EAAKjI,OAASiI,EAAKhI,OAAS,EACvDwxI,GAAe7oH,EACflhB,KAAKkqI,MAAM3pI,EAAMmpI,EAAWK,IAAaj8G,GACzC9tB,KAAKmqI,gBAAgB5pI,EAAMmpI,EAAWK,GACtCA,GAAgB7oH,EAAOupH,EAAM5U,oBAMrC+Q,EAAuBx2F,UAAUu6F,cAAgB,SAAUtB,EAAiBuB,EAAQr0H,GAChFvW,KAAKspI,oBAAoBD,EAAiBuB,EAAQr0H,GAElD,IAAK,IAAI7f,EAAI2yI,EAAgBe,WAAY1zI,GAAK,EAAGA,IACzCA,EAAI6f,EAAMozH,SACV3pI,KAAKwqI,gBAAgBnB,EAAiB3yI,EAAGk0I,EAAQr0H,GAGzD,IAAS7f,EAAI2yI,EAAgBe,WAAa,EAAG1zI,GAAK6f,EAAMozH,QAASjzI,IACzDA,EAAI,GACJsJ,KAAKwqI,gBAAgBnB,EAAiB3yI,EAAGk0I,EAAQr0H,IAQ7DqwH,EAAuBx2F,UAAUy6F,WAAa,SAAUtqI,EAAMuqI,GAE1D,GAAiB,MAAbA,GAAsC,MAAjBvqI,EAAKwqI,UAA0C,MAAtBD,EAAUC,UACrDxqI,EAAKwqI,SAASt0I,OAASq0I,EAAUC,SAASt0I,OAAQ,CACrD,GAAI8J,EAAKwqI,WAAaD,EAAUC,SAC5B,OAAO,EAEX,GAAqB,MAAjBxqI,EAAKwqI,UAAqC,MAAjBxqI,EAAKwqI,SAC9B,OAAO,EAEX,IAAK,IAAIr0I,EAAI,EAAGA,EAAI6J,EAAKwqI,SAASt0I,OAAQC,IACtC,GAAI6J,EAAKwqI,SAASr0I,KAAOo0I,EAAUC,SAASr0I,GACxC,OAAO,EAGf,OAAO,EAEX,OAAO,GAKXkwI,EAAuBx2F,UAAU46F,mBAAqB,SAAU7kH,EAAM8kH,GAClE,IAAID,KAKJ,OAJAA,EAAmB7kH,KAAOA,GAAc,KACxC6kH,EAAmBC,cAAgBA,GAAgC,EACnED,EAAmB7O,SAAU,EAC7B6O,EAAmBE,UAAY,KACxBF,GAKXpE,EAAuBx2F,UAAU+6F,QAAU,SAAU9B,EAAiB9yH,GAIlE,IAAK,IAHD60H,KACA5xG,GAAQA,QACRqwG,KACKnzI,EAAI,EAAGA,GAAK6f,EAAMozH,QAASjzI,IAAK,CACrCmzI,EAAKnzI,GAAK6f,EAAMuzH,MAAMpzI,GACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIwzI,EAAKnzI,GAAGD,OAAQJ,IAAK,CACrC,IAAIkK,EAAOspI,EAAKnzI,GAAGL,GACfg1I,EAAcrrI,KAAKgrI,mBAAmBzqI,EAAM7J,GAChD20I,EAAYH,UAAY70I,EACxBg1I,EAAYlP,SAAU,EACtBiP,EAASt0I,KAAKu0I,GACd90H,EAAM+0H,uBAAuB9xG,EAAKj5B,EAAM8qI,GAAa,IAM7D,IAHA,IAAIE,EAA6B,GAAlBH,EAAS30I,OACpBwxB,EAAQ,EAELmjH,EAAS30I,OAAS,GAAKwxB,GAASsjH,GAAU,CAC7C,IAAIC,EAAcJ,EAASK,QACvBtlH,EAAOqlH,EAAYrlH,KACnBujH,EAAY8B,EAAYP,cACxBC,EAAYM,EAAYN,UACxBQ,EAA0B1rI,KAAK6mI,eAAe8E,yBAAyBxlH,EAAMujH,GAC7EkC,EAA8B5rI,KAAK6mI,eAAe8E,yBAAyBxlH,EAAMujH,GAAW,GAC5FmC,EAAqBH,EAAwBj1I,OAC7Cq1I,EAAqBF,EAA4Bn1I,OACjDs1I,EAAkB/rI,KAAKgsI,aAAa3C,EAAiBqC,EAAyBhC,EAAY,GAC1FuC,EAAsBjsI,KAAKgsI,aAAa3C,EAAiBuC,EAA6BlC,EAAY,GAClGwC,EAAyBL,EAAqBC,EAC9C/pE,EAAkB/hE,KAAK6mI,eAAesF,gBAAgBhmH,EAAMujH,GAC5D0C,EAAarqE,EACbmqE,EAAyB,IACzBE,GAAcL,EAAkBF,EAAqBI,EAAsBH,GAAsBI,GAErG,IAAIvY,GAAkB,EAClB0Y,OAAYpyI,EAChB,GAAImyI,EAAarqE,EApBL,EAqBR,GAAkB,IAAdmpE,EACAmB,EAAYD,EACZzY,GAAkB,MAEjB,CACD,IAAI2Y,EAAWzC,EAAKH,GAAWwB,EAAY,GACvCqB,EAAYvsI,KAAK6mI,eAAesF,gBAAgBG,EAAU5C,IAC9D6C,EAAYA,EAAYD,EAAS/zI,MAAQ,EAAI8wI,EAAgBmD,iBAAmBrmH,EAAK5tB,MAAQ,GAC7E6zI,GACZC,EAAYD,EACZzY,GAAkB,GAEb4Y,EAAYvsI,KAAK6mI,eAAesF,gBAAgBhmH,EAAMujH,GAjC3D,IAkCA2C,EAAYE,EACZ5Y,GAAkB,QAIzB,GAAIyY,EAAarqE,EAvCV,EAuCuC,CAE/C,GAAImpE,IADWrB,EAAKH,GAAWjzI,OACF,EACzB41I,EAAYD,EACZzY,GAAkB,MAEjB,CACD,IAAI8Y,EAAY5C,EAAKH,GAAWwB,EAAY,GACxCwB,EAAa1sI,KAAK6mI,eAAesF,gBAAgBM,EAAW/C,IAChEgD,EAAaA,EAAaD,EAAUl0I,MAAQ,EAAI8wI,EAAgBmD,iBAAmBrmH,EAAK5tB,MAAQ,GAC/E6zI,GACbC,EAAYD,EACZzY,GAAkB,GAEb+Y,EAAa1sI,KAAK6mI,eAAesF,gBAAgBhmH,EAAMujH,GArD5D,IAsDA2C,EAAYK,EACZ/Y,GAAkB,IAI1BA,IACA3zH,KAAKmqI,gBAAgBhkH,EAAMujH,EAAW2C,GAEtCrsI,KAAK2sI,eAAevB,EAAU5xG,EAAKkyG,EAAyBn1H,GAC5DvW,KAAK2sI,eAAevB,EAAU5xG,EAAKoyG,EAA6Br1H,IAEhEvW,KAAK6mI,eAAemD,SAASwB,EAAYrlH,QACzCqlH,EAAYrP,SAAU,GAE1Bl0G,MAMR2+G,EAAuBx2F,UAAUu8F,eAAiB,SAAUvB,EAAU5xG,EAAKljC,EAAYigB,GACnF,IAAK,IAAI7f,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IAAK,CACxC,IAAIk2I,EAAgBt2I,EAAWI,GAC3Bm2I,EAAuBt2H,EAAMu2H,uBAAuBtzG,EAAKozG,GACjC,MAAxBC,IACqC,IAAjCA,EAAqB1Q,UACrB0Q,EAAqB1Q,SAAU,EAC/BiP,EAASt0I,KAAK+1I,MAQ9BjG,EAAuBx2F,UAAU47F,aAAe,SAAU3C,EAAiB0D,EAAgBrD,GACvF,GAA8B,IAA1BqD,EAAet2I,OACf,OAAO,EAGX,IAAK,IADDu2I,KACKt2I,EAAI,EAAGA,EAAIq2I,EAAet2I,OAAQC,IACvCs2I,EAAat2I,GAAKsJ,KAAK6mI,eAAesF,gBAAgBY,EAAer2I,GAAIgzI,GAK7E,GAHAsD,EAAap4G,KAAK,SAAUrkB,EAAGC,GAC3B,OAAOD,EAAIC,IAEXu8H,EAAet2I,OAAS,GAAM,EAC9B,OAAOu2I,EAAavwI,KAAKymC,MAAM6pG,EAAet2I,OAAS,IAGvD,IAAIw2I,EAAcF,EAAet2I,OAAS,EAG1C,OAFiBu2I,EAAaC,EAAc,GAC1BD,EAAaC,IACM,GAM7CrG,EAAuBx2F,UAAUg5F,sBAAwB,SAAUC,GAC/D,IAAIv7G,GAAe,EAC8B,gBAA7Cu7G,EAAgB9yH,MAAM6jB,OAAO/oB,aAA8E,gBAA7Cg4H,EAAgB9yH,MAAM6jB,OAAO/oB,cAC3Fyc,GAAe,GAEnBu7G,EAAgB6D,kBAChB,IAAI32H,EAAQ8yH,EAAgB9yH,MAC5BuX,EAAeu7G,EAAgB8D,cAAgB,EAAM9D,EAAgB+D,cAAgB,EACrFptI,KAAK2qI,cAActB,GAAmB9yH,MAAOA,GAASA,GACtDvW,KAAKmrI,QAAQ9B,EAAiB9yH,GAC9B,IAAI82H,EAAkB,IACjBhE,EAAgBiE,gBACjBjE,EAAgBiE,cAAgB,GAEpC,IAAK,IAAI52I,EAAI,EAAGA,EAAI2yI,EAAgBiE,cAAe52I,IAAK,CAGpD,IAAKo3B,EAAeu7G,EAAgB8D,cAAgB9D,EAAgB+D,eAAiBC,EAAiB,CAClG,IAAK,IAAIh3I,EAAI,EAAGA,EAAIkgB,EAAMuzH,MAAMrzI,OAAQJ,IAEpC,IAAK,IADDwzI,EAAOtzH,EAAMuzH,MAAMzzI,GACdmtB,EAAI,EAAGA,EAAIqmH,EAAKpzI,OAAQ+sB,IAAK,CAClC,IAAI2C,EAAO0jH,EAAKrmH,GAChBxjB,KAAKkqI,MAAM/jH,EAAM9vB,EAAG2J,KAAK6mI,eAAesF,gBAAgBhmH,EAAM9vB,KAAIy3B,GAG1Eu/G,EAAkBv/G,EAAeu7G,EAAgB8D,cAAgB9D,EAAgB+D,cAErFt/G,EAAeu7G,EAAgB8D,cAAgB,EAAI9D,EAAgB+D,cAAgB,EAEvFptI,KAAKutI,iBAAiBlE,EAAiB9yH,IAK3CqwH,EAAuBx2F,UAAUm9F,iBAAmB,SAAUlE,EAAiB9yH,GAE3E,IAAK,IADD4wH,EAAWnnI,KAAKwtI,UAAUj3H,EAAMk3H,cAC3B/2I,EAAI,EAAGA,EAAIywI,EAAS1wI,OAAQC,IACjCsJ,KAAK0tI,kBAAkBrE,EAAiBlC,EAASzwI,KAMzDkwI,EAAuBx2F,UAAUu9F,4BAA8B,SAAUtE,EAAiBljH,EAAMnvB,EAAGC,GACnFoyI,EAAgB9yH,MAA5B,IACIywH,EAAW7gH,EAAK6gH,SAChB7pI,EAAS,KAOb,OANgB,MAAZ6pI,IACA7pI,GAAWnG,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOyuI,EAASzuI,MAAOD,OAAQ0uI,EAAS1uI,QAC3D0uI,EAAShwI,IAAMA,GAAKgwI,EAAS/vI,IAAMA,IACnCkvB,EAAK6gH,SAAW7pI,IAGjBA,GAKXypI,EAAuBx2F,UAAUs9F,kBAAoB,SAAUrE,EAAiBljH,GAC5E,IAAI2H,GAAe,EAC8B,gBAA7Cu7G,EAAgB9yH,MAAM6jB,OAAO/oB,aAA8E,gBAA7Cg4H,EAAgB9yH,MAAM6jB,OAAO/oB,cAC3Fyc,GAAe,GAEnB,IAAI8/G,EAAWznH,EAAKA,KAChB0nH,EAAY1nH,EAAKnvB,EAAE,GAAKmvB,EAAK5tB,MAAQ,EACrCu1I,EAAY3nH,EAAKlvB,EAAE,GAAKkvB,EAAK7tB,OAAS,EAC1C0H,KAAK2tI,4BAA4BtE,EAAiBuE,EAAUC,EAAWC,GACnEhgH,GACKu7G,EAAgBhB,UACjBgB,EAAgBhB,QAAU,GAE9BgB,EAAgBhB,QAAU5rI,KAAKmJ,IAAIyjI,EAAgBhB,QAASyF,EAAY3nH,EAAK7tB,UAGxE+wI,EAAgBjB,UACjBiB,EAAgBjB,QAAU,GAE9BiB,EAAgBjB,QAAU3rI,KAAKmJ,IAAIyjI,EAAgBjB,QAASyF,EAAY1nH,EAAK5tB,SAMrFquI,EAAuBx2F,UAAUo9F,UAAY,SAAUl2B,GACnD,IAAI3mC,KACJ,GAAI2mC,EAAO99E,IACP,IAAK,IAAI38B,EAAK,EAAGohB,EAAKC,OAAOC,KAAKm5F,EAAO99E,KAAM38B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACjE,IAAIigC,EAAM7e,EAAGphB,GACb8zE,EAAK75E,KAAKwgH,EAAO99E,IAAIsD,IAG7B,OAAO6zC,GAKXi2D,EAAuBx2F,UAAU04F,cAAgB,SAAUvyH,GACvDvW,KAAK6mI,eAAe9sG,QAAQxjB,IAKhCqwH,EAAuBx2F,UAAUy4F,cAAgB,SAAUtyH,GACvDvW,KAAK+tI,YAAYx3H,GACjBvW,KAAKguI,SAASz3H,IAKlBqwH,EAAuBx2F,UAAU29F,YAAc,SAAUx3H,GAIrD,IAHA,IAAI03H,EAAa13H,EAAM03H,WACnBC,EAAgB33H,EAAM43H,oBAAoB53H,EAAMk3H,cAChDW,EAAiBH,EAAWruH,QACzBquH,EAAWx3I,OAAS,GAAG,CAM1B,IAAK,IAJD43I,GADAC,EAAeL,EAAW,IACWM,iBACrCC,EAAkBF,EAAaG,iBAC/BC,GAAkB,EAClBC,EAAe,IACVj4I,EAAI,EAAGA,EAAI23I,EAAsB53I,OAAQC,IAAK,CAEnD,GAA6B,WADzBk4I,EAAeP,EAAsB33I,IACxBia,KAAK,GAKjB,CACD+9H,GAAkB,EAClB,MALA,IAAI5D,EAAY8D,EAAarsI,OAC7BosI,EAAelyI,KAAKyK,IAAIynI,EAAc7D,EAAUn6H,KAAK,GAAK,GAQlE,GAAI+9H,EAAiB,CAMjB,GALAJ,EAAa39H,KAAK,GAAKg+H,EAClBp4H,EAAMozH,UACPpzH,EAAMozH,QAAU,KAEpBpzH,EAAMozH,QAAUltI,KAAKyK,IAAIqP,EAAMozH,QAASgF,GACjB,MAAnBH,EACA,IAAS93I,EAAI,EAAGA,EAAI83I,EAAgB/3I,OAAQC,IAAK,EACzCk4I,EAAeJ,EAAgB93I,IACtBia,KAAK,GAAK,SAII,KAFvBm6H,EAAY8D,EAAa5rI,QAEf2N,KAAK,KACfs9H,EAAWn3I,KAAKg0I,GAGhBA,EAAUn6H,KAAK,IAAM,GAIjCs9H,EAAWxC,YAEV,CAED,IAAIoD,EAAcZ,EAAWxC,QAE7B,GADAwC,EAAWn3I,KAAKw3I,GACZO,IAAgBP,GAAsC,IAAtBL,EAAWx3I,OAG3C,OAIZ,IAASC,EAAI,EAAGA,EAAIw3I,EAAcz3I,OAAQC,IACtCw3I,EAAcx3I,GAAGia,KAAK,IAAM4F,EAAMozH,QAEtC,IAASjzI,EAAI,EAAGA,EAAI03I,EAAe33I,OAAQC,IAIvC,IAAK,IAHD43I,EACAQ,EAAkB,EAEbz4I,GADLg4I,GAFAC,EAAeF,EAAe13I,IAEO+3I,iBAC5B,GAAGp4I,EAAIg4I,EAAsB53I,OAAQJ,IAAK,CACnD,IAAIu4I,EACA9D,GADA8D,EAAeP,EAAsBh4I,IACZ2M,OAC7BsrI,EAAa39H,KAAK,GAAKlU,KAAKmJ,IAAIkpI,EAAiBhE,EAAUn6H,KAAK,GAAK,GACrEm+H,EAAkBR,EAAa39H,KAAK,GAG5C4F,EAAMozH,QAAU,IAAYpzH,EAAMozH,SAKtC/C,EAAuBx2F,UAAU49F,SAAW,SAAUz3H,GAClDA,EAAMy3H,YAKVpH,EAAuBx2F,UAAUw4F,WAAa,SAAUryH,GACpD,IAAIw4H,KACJx4H,EAAM03H,cAGN,IAAK,IAFDe,EAAmBz4H,EAAM43H,oBAAoB53H,EAAMk3H,cACnDwB,KACKv4I,EAAI,EAAGA,EAAIs4I,EAAiBv4I,OAAQC,IACzCs4I,EAAiBt4I,GAAGia,KAAK,IAAM,EAC/Bs+H,EAAYD,EAAiBt4I,GAAGmJ,IAAMmvI,EAAiBt4I,GAE3D,IAAIw4I,EAAa,KACjB,GAAmB,MAAf34H,EAAM6wH,MAAe,CACrB,IAAI+H,EAAa54H,EAAM6wH,MACvB8H,KACA,IAASx4I,EAAI,EAAGA,EAAIy4I,EAAW14I,OAAQC,IACnCw4I,EAAWx4I,GAAK6f,EAAM64H,cAAc74H,EAAMk3H,aAAc0B,EAAWz4I,IAC9C,MAAjBw4I,EAAWx4I,IACX6f,EAAM03H,WAAWn3I,KAAKo4I,EAAWx4I,IAI7C6f,EAAM84H,MAAM,yBAA0BH,GAAY,EAAM,MAAQH,UAAWA,EAAWE,YAAaA,IACnG,IAAIK,EAAgB/4H,EAAM+5B,MAAMy+F,EAAW,MAAM,GACjDx4H,EAAM84H,MAAM,uBAAwBJ,GAAa,EAAMK,GAAiBP,UAAWA,EAAWE,YAAaA,KAM/GrI,EAAuBx2F,UAAU1jB,OAAS,SAAUnyB,EAAK0lC,GACrD,IAAInd,EAAQmd,EAAM3f,QAAQ/lB,GAI1B,OAHe,IAAXuoB,GACAmd,EAAM15B,OAAOuc,EAAO,GAEjBvoB,GAMXqsI,EAAuBx2F,UAAUm/F,OAAS,SAAUC,EAAgBtnG,GAChE,IAAIv3B,EAAO6+H,EAAejtI,OAC1BitI,EAAejtI,OAASitI,EAAexsI,OACvCwsI,EAAexsI,OAAS2N,EACxB6+H,EAAeC,YAAcD,EAAeC,YAMhD7I,EAAuBx2F,UAAUs/F,gBAAkB,SAAUntI,EAAQS,EAAQ2kI,GACzEA,EAAwB,MAAZA,GAAoBA,EAGhC,IAAK,IAFDniH,EAAQxlB,KAAKinI,SAAS1kI,GACtBpF,KACKzG,EAAI,EAAGA,EAAI8uB,EAAM/uB,OAAQC,IAAK,CACnC,IAAImS,EAAM7I,KAAKwnI,mBAAmBhiH,EAAM9uB,IAAI,GACxCi5I,EAAM3vI,KAAKwnI,mBAAmBhiH,EAAM9uB,IAAI,IACvCmS,IAAQtG,GAAUotI,IAAQ3sI,IAAa2kI,GAAY9+H,IAAQ7F,GAAU2sI,IAAQptI,IAC9EpF,EAAOrG,KAAK0uB,EAAM9uB,IAG1B,OAAOyG,GAEJypI,KAKP+B,GAAkC,WAClC,SAASA,EAAiBvuG,EAAQ+sG,EAAUC,EAAOwI,GAC/C5vI,KAAK6vI,2BAA6B,EAElC7vI,KAAK8vI,SAAW,EAChB9vI,KAAK+vI,iBAAmB,IAAInJ,GAC5B5mI,KAAKonI,MAAQA,EACbpnI,KAAKytI,cAAiBj0G,QACtB,IAAIw2G,KACJhwI,KAAKo6B,OAASw1G,EACd5vI,KAAK2pI,QAAU,IACf3pI,KAAKiwI,mBAAqB71G,EAC1Bp6B,KAAKkwI,oBAAoB91G,EAAQ+sG,EAAU6I,GAC3C,IAAK,IAAIt5I,EAAI,EAAGA,EAAIywI,EAAS1wI,OAAQC,IAAK,CAEtC,IAAK,IADD8uB,EAAQwqH,EAAiBt5I,GAAG+3I,iBACvBp4I,EAAI,EAAGA,EAAImvB,EAAM/uB,OAAQJ,IAAK,CACnC,IAAIu4I,EAAeppH,EAAMnvB,GACrB85I,EAAYvB,EAAappH,MAC7B,GAAiB,MAAb2qH,GAAqBA,EAAU15I,OAAS,EAAG,CAC3C,IAAI25I,EAAWD,EAAU,GACrBE,EAAaj2G,EAAOotG,mBAAmB4I,GAAU,GACjDE,EAAqBtwI,KAAKovI,cAAcpvI,KAAKytI,aAAc4C,GAC3DL,EAAiBt5I,KAAO45I,IACxBD,EAAaj2G,EAAOotG,mBAAmB4I,GAAU,GACjDE,EAAqBtwI,KAAKovI,cAAcpvI,KAAKytI,aAAc4C,IAErC,MAAtBC,GAA8BN,EAAiBt5I,KAAO45I,IACtD1B,EAAa5rI,OAASstI,EAC6B,IAA/CA,EAAmB/B,iBAAiB93I,SACpC65I,EAAmB/B,qBAEnB+B,EAAmB/B,iBAAiBjuH,QAAQsuH,GAAgB,GAC5D0B,EAAmB/B,iBAAiBz3I,KAAK83I,KAKzDoB,EAAiBt5I,GAAGia,KAAK,GAAK,GAsVtC,OAhVAg4H,EAAiBv4F,UAAU8/F,oBAAsB,SAAU91G,EAAQ+sG,EAAU6I,GACzE,IAAK,IAAIt5I,EAAI,EAAGA,EAAIywI,EAAS1wI,OAAQC,IAAK,CACtCs5I,EAAiBt5I,IACbM,KAAOC,KAAO0Z,QAAUwV,KAAMghH,EAASzwI,GACvCmJ,GAAIsnI,EAASzwI,GAAG2iB,KAAMk1H,oBAAsBE,qBAEhDzuI,KAAKuwI,cAAcvwI,KAAKytI,aAActG,EAASzwI,GAAIs5I,EAAiBt5I,IACpE,IAAI6wI,EAAQntG,EAAO6sG,SAASE,EAASzwI,IACrCs5I,EAAiBt5I,GAAG+3I,oBACpB,IAAK,IAAIp4I,EAAI,EAAGA,EAAIkxI,EAAM9wI,OAAQJ,IAAK,CACnC,IAAI8vB,EAAOiU,EAAOotG,mBAAmBD,EAAMlxI,IAAI,GAC/C,GAAI8vB,IAASghH,EAASzwI,GAAI,CACtB,IAAI85I,EAAkBp2G,EAAOs1G,gBAAgBvI,EAASzwI,GAAIyvB,GAAM,GAC5DsqH,EAAgBr2G,EAAOs1G,gBAAgBvI,EAASzwI,GAAIyvB,GAAM,GAC9D,GAAuB,MAAnBqqH,GAA2BA,EAAgB/5I,OAAS,GAA4B,EAAvBg6I,EAAch6I,QAAc+5I,EAAgB/5I,OAAQ,CAE7G,IAAK,IADDm4I,GAAiB53I,KAAOC,KAAO0Z,QAAU6U,MAAOgrH,EAAiBE,QAC5DjvF,EAAI,EAAGA,EAAI+uF,EAAgB/5I,OAAQgrD,IACxCmtF,EAAa8B,IAAI55I,KAAK05I,EAAgB/uF,GAAG5hD,IAE7C+uI,EAAarsI,OAASytI,EAAiBt5I,GAClCs5I,EAAiBt5I,GAAG+3I,mBACrBuB,EAAiBt5I,GAAG+3I,qBAEpBuB,EAAiBt5I,GAAG+3I,iBAAiBnuH,QAAQsuH,GAAgB,GAC7DoB,EAAiBt5I,GAAG+3I,iBAAiB33I,KAAK83I,KAK1DoB,EAAiBt5I,GAAGia,KAAK,GAAK,IAOtCg4H,EAAiBv4F,UAAU49F,SAAW,WAClC,IAAI2C,KACJ3wI,KAAK8pI,SACL,IAAK,IAAIpzI,EAAI,EAAGA,EAAIsJ,KAAK2pI,QAAU,EAAGjzI,IAClCi6I,EAASj6I,MACTsJ,KAAK8pI,MAAMpzI,GAAKi6I,EAASj6I,GAE7B,IAAIw4I,EAAa,KACjB,GAAkB,MAAdlvI,KAAKonI,MAAe,CACpB,IAAIwJ,EAAgB5wI,KAAKonI,MACzB8H,KACA,IAASx4I,EAAI,EAAGA,EAAIk6I,EAAcn6I,OAAQC,IAAK,CAC3C,IAAIyvB,EAAOyqH,EAAcl6I,GACrB43I,EAAetuI,KAAKovI,cAAcpvI,KAAKytI,aAActnH,GACzD+oH,EAAWx4I,GAAK43I,GAGxBtuI,KAAKqvI,MAAM,mBAAoBH,GAAY,EAAO,MAAQH,UAAW,KAAME,YAAa,KAAM0B,SAAUA,KAK5GhI,EAAiBv4F,UAAUygG,iBAAmB,SAAU3oG,EAAO4oG,EAAM16I,GACjDA,EAAK24I,UACH34I,EAAK64I,YADvB,IAEI/uH,EAAS9pB,EAAK8pB,OACd3f,EAAOnK,EAAK6oG,KACZvf,EAAOtpF,EAAKspF,KACZixD,EAAWv6I,EAAKu6I,SAapB,GAZKpwI,EAAKopI,SAA4B,IAAjBppI,EAAKopI,UACtBppI,EAAKopI,SAAW,GAEfppI,EAAK+pI,SAA4B,IAAjB/pI,EAAK+pI,UACtB/pI,EAAK+pI,SAAW,GAEP,IAATwG,GAAcvwI,EAAKopI,QAAU,GAAKppI,EAAK+pI,QAAU,IACjDqG,EAASpwI,EAAKoQ,KAAK,IAAI7Z,KAAKyJ,GAC5BA,EAAKopI,QAAUppI,EAAKoQ,KAAK,GACzBpQ,EAAK+pI,QAAU/pI,EAAKoQ,KAAK,GACzBpQ,EAAKoQ,KAAK,GAAKggI,EAASpwI,EAAKopI,SAASlzI,OAAS,GAErC,MAAVypB,GAA0B,MAARw/D,EAAc,CAEhC,GADiCx/D,EAAOypH,QAAUppI,EAAKopI,QACtB,EAAG,CAChCjqD,EAAKiqD,QAAUzpH,EAAOypH,QACtBjqD,EAAK4qD,QAAU/pI,EAAKopI,QACpBjqD,EAAK/uE,QACL+uE,EAAK1oF,KACL0oF,EAAKzoF,KACL,IAAK,IAAIP,EAAIgpF,EAAK4qD,QAAU,EAAG5zI,EAAIgpF,EAAKiqD,QAASjzI,IAC7Ci6I,EAASj6I,GAAGI,KAAK4oF,GACjB1/E,KAAK+vI,iBAAiB5F,gBAAgBzqD,EAAMhpF,EAAGi6I,EAASj6I,GAAGD,OAAS,MAQpFkyI,EAAiBv4F,UAAUmgG,cAAgB,SAAUQ,EAAKj0G,EAAKn3B,GAC3D,IAAI9F,EAAKi9B,EAAIzjB,KAIT4zD,EAAW8jE,EAAIv3G,IAAI35B,GAEvB,OADAkxI,EAAIv3G,IAAI35B,GAAM8F,EACPsnE,GAMX07D,EAAiBv4F,UAAUk7F,uBAAyB,SAAUyF,EAAKj0G,EAAKn3B,EAAOqrI,GAC3E,IAAInxI,EAAKi9B,EAAIj9B,GAITotE,EAAW8jE,EAAIv3G,IAAI35B,GAEvB,OADAkxI,EAAIv3G,IAAI35B,GAAM8F,EACPsnE,GAMX07D,EAAiBv4F,UAAUg/F,cAAgB,SAAU2B,EAAKj0G,GACjD98B,KAAK6vI,4BAAkE,IAApC7vI,KAAK6vI,6BACzC7vI,KAAK6vI,2BAA6B,GAEtC,IAAIhwI,EAAKi9B,EAAIzjB,KACb,OAAKxZ,EASEkxI,EAAIv3G,IAAI35B,GARNi9B,EAAIm0G,eAKEF,EAAIv3G,IAAIsD,EAAIm0G,iBAJnBn0G,EAAIm0G,eAAiB,sBAAwBjxI,KAAK6vI,6BAC3C/yG,EAAIm0G,iBAYvBtI,EAAiBv4F,UAAU08F,uBAAyB,SAAUiE,EAAKj0G,GAC1D98B,KAAK6vI,4BAAkE,IAApC7vI,KAAK6vI,6BACzC7vI,KAAK6vI,2BAA6B,GAEtC,IAAIhwI,EAAKi9B,EAAIj9B,GACb,OAAKA,EASEkxI,EAAIv3G,IAAI35B,GARNi9B,EAAIm0G,eAKEF,EAAIv3G,IAAIsD,EAAIm0G,iBAJnBn0G,EAAIm0G,eAAiB,sBAAwBjxI,KAAK6vI,6BAC3C/yG,EAAIm0G,iBAYvBtI,EAAiBv4F,UAAU+9F,oBAAsB,SAAU4C,GAEvD,IAAK,IADD5zI,KACKN,EAAK,EAAGohB,EAAKC,OAAOC,KAAK4yH,EAAIv3G,KAAM38B,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC9D,IAAIigC,EAAM7e,EAAGphB,GACbM,EAAOrG,KAAKi6I,EAAIv3G,IAAIsD,IAExB,OAAO3/B,GAMXwrI,EAAiBv4F,UAAUi/F,MAAQ,SAAU6B,EAASC,EAAUC,EAAgBrC,EAAW34I,GACtEA,EAAK24I,UACH34I,EAAK64I,YACT74I,EAAKu6I,SAEpB,GAAgB,MAAZQ,EAAkB,CAClB,IAAK,IAAIz6I,EAAI,EAAGA,EAAIy6I,EAAS16I,OAAQC,IAAK,CACtC,IAAI43I,EAAe6C,EAASz6I,GACR,MAAhB43I,IACiB,MAAbS,IACAA,EAAY,IAAI7wH,QAEpB9nB,EAAK8pB,OAAS,KACd9pB,EAAK6oG,KAAOqvC,EACZl4I,EAAKspF,KAAO,KACR0xD,GAEA9C,EAAavD,YACbuD,EAAavD,SAAS,GAAK/qI,KAAK8vI,SAChCxB,EAAavD,SAAS,GAAKr0I,EAC3BsJ,KAAKqxI,YAAYH,EAASnC,EAAWr4I,EAAG,EAAGN,IAG3C4J,KAAKsxI,iBAAiBJ,EAASnC,EAAW,EAAG34I,IAIzD4J,KAAK8vI,aAMbnH,EAAiBv4F,UAAUkhG,iBAAmB,SAAUJ,EAASJ,EAAM5oG,EAAO9xC,GACzDA,EAAK24I,UACH34I,EAAK64I,YACT74I,EAAKu6I,SACPv6I,EAAK8pB,OAHlB,IAII++E,EAAO7oG,EAAK6oG,KACL7oG,EAAKspF,KAChB,GAAY,MAARuf,EAAc,CACd,IAAIsyC,EAAStyC,EAAKp/F,GAClB,GAAoB,MAAhBixI,EAAKS,GAAiB,CACtBT,EAAKS,GAAUtyC,EACfj/F,KAAKwxI,qBAAqBN,EAAShpG,EAAO,EAAG9xC,GAG7C,IAAK,IADDq7I,EAAgBxyC,EAAKwvC,iBAAiB7uH,QACjClpB,EAAI,EAAGA,EAAI+6I,EAAch7I,OAAQC,IAAK,CAC3C,IAAIk4I,EAAe6C,EAAc/6I,GAC7ByL,EAAaysI,EAAa5rI,OAE9B5M,EAAK8pB,OAAS++E,EACd7oG,EAAK6oG,KAAO98F,EACZ/L,EAAKspF,KAAOkvD,EACZ5uI,KAAKsxI,iBAAiBJ,EAASJ,EAAM5oG,EAAQ,EAAG9xC,SAIpD4J,KAAKwxI,qBAAqBN,EAAShpG,EAAO,EAAG9xC,KAOzDuyI,EAAiBv4F,UAAUohG,qBAAuB,SAAUN,EAAShpG,EAAO4oG,EAAMY,GAC9E,IAAIxxH,EAASwxH,EAAcxxH,OACvB++E,EAAOyyC,EAAczyC,KACrBvf,EAAOgyD,EAAchyD,KACzB,GAAgB,2BAAZwxD,GAAoD,yBAAZA,EAAoC,CAC5E,IAAIxkH,EAAqB,yBAAZwkH,EACblxI,KAAK2xI,qBAAqBzxH,EAAQ++E,EAAMvf,EAAMx3C,EAAOwpG,EAAehlH,GAExD,qBAAZwkH,GACAlxI,KAAK6wI,iBAAiB3oG,EAAO4oG,EAAMY,IAM3C/I,EAAiBv4F,UAAUuhG,qBAAuB,SAAUzxH,EAAQ3f,EAAMm/E,EAAMx3C,EAAO9xC,EAAMs2B,GACzF,IAAIqiH,EAAY34I,EAAK24I,UACjBE,EAAc74I,EAAK64I,YACR74I,EAAKu6I,SAChB3wI,KAAK+vI,iBAAiBlF,WAAWtqI,EAAM2f,KACvClgB,KAAK+vI,iBAAiBR,OAAO7vD,EAAM,GACnC1/E,KAAK+vI,iBAAiBrjH,OAAOgzD,EAAMx/D,EAAOuuH,kBACtC/hH,GACAnsB,EAAKkuI,iBAAiB33I,KAAK4oF,GAC3Bx/D,EAAOquH,iBAAiBz3I,KAAK4oF,GAC7B1/E,KAAK+vI,iBAAiBrjH,OAAOgzD,EAAMn/E,EAAKguI,oBAGxCruH,EAAOquH,iBAAiBz3I,KAAK4oF,GAC7B1/E,KAAK+vI,iBAAiBrjH,OAAOgzD,EAAMn/E,EAAKguI,kBACxChuI,EAAKkuI,iBAAiB33I,KAAK4oF,KAGnCqvD,EAAUxuI,EAAKV,IAAMU,SACd0uI,EAAY1uI,EAAKV,KAK5B8oI,EAAiBv4F,UAAUihG,YAAc,SAAUH,EAASJ,EAAMc,EAAO1pG,EAAO9xC,GAC5DA,EAAK24I,UACH34I,EAAK64I,YACR74I,EAAKu6I,SAFpB,IAGIzwH,EAAS9pB,EAAK8pB,OACd++E,EAAO7oG,EAAK6oG,KACL7oG,EAAKspF,KAChB,GAAY,MAARuf,EAAc,CACd,GAAc,MAAV/+E,IACqB,MAAjB++E,EAAK8rC,UACL9rC,EAAK8rC,SAAS,KAAO7qH,EAAO6qH,SAAS,IAAI,CACzC,IAAI8G,EAAiB3xH,EAAO6qH,SAASt0I,OAAS,EAC9CwoG,EAAK8rC,SAAW7qH,EAAO6qH,SAASnrH,QAChCq/E,EAAK8rC,SAAS8G,EAAiB,GAAKD,EAG5C,IAAIL,EAAStyC,EAAKp/F,GAClB,GAAoB,MAAhBixI,EAAKS,GAAiB,CACtBT,EAAKS,GAAUtyC,EACfj/F,KAAKwxI,qBAAqBN,EAAShpG,EAAO,EAAG9xC,GAE7C,IAAK,IADDq7I,EAAgBxyC,EAAKwvC,iBAAiB7uH,QACjClpB,EAAI,EAAGA,EAAI+6I,EAAch7I,OAAQC,IAAK,CAC3C,IAAIk4I,EAAe6C,EAAc/6I,GAC7ByL,EAAaysI,EAAa5rI,OAC9B5M,EAAK8pB,OAAS++E,EACd7oG,EAAK6oG,KAAO98F,EACZ/L,EAAKspF,KAAOkvD,EACZ5uI,KAAKqxI,YAAYH,EAASJ,EAAMp6I,EAAGwxC,EAAQ,EAAG9xC,SAIlD4J,KAAKwxI,qBAAqBN,EAAShpG,EAAO,EAAG9xC,KAQzDuyI,EAAiBv4F,UAAUE,MAAQ,SAAU/1C,EAAKu3I,EAAYC,GAE1D,GADAA,EAAsB,MAAXA,GAAmBA,EACnB,MAAPx3I,GAA4C,mBAArBA,EAAe,YAAkB,CAExD,IAAK,IADD+kF,EAAY/kF,EAAIu8B,cACXj6B,EAAK,EAAGohB,EAAKC,OAAOC,KAAK5jB,GAAMsC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC1D,IAAInG,EAAIunB,EAAGphB,GACD,mBAANnG,IAAyC,MAAdo7I,GAAsBA,EAAWxxH,QAAQ5pB,GAAK,KACpEq7I,GAA+B,iBAAZx3I,EAAI7D,MAKxB4oF,EAAU5oF,GAAK6D,EAAI7D,IAI/B,OAAO4oF,EAEX,OAAO,MAEJqpD,KAKP7B,GAAgC,WAChC,SAASA,KA2TT,OArTAA,EAAe12F,UAAU4hG,mBAAqB,SAAUz7H,GAGpD,IAAK,IAFD07H,EAAW17H,EAAMuzH,MAAMrzI,OACvBy7I,EAAiB,EACZx7I,EAAI,EAAGA,EAAIu7I,EAAUv7I,IAC1Bw7I,GAAkBlyI,KAAKmyI,sBAAsBz7I,EAAG6f,GAEpD,OAAO27H,GAMXpL,EAAe12F,UAAU+7F,gBAAkB,SAAU5rI,EAAM2nC,GACvD,OAAI3nC,EACIP,KAAKgqI,SAASzpI,GACPA,EAAKoQ,KAAK,GAGVpQ,EAAKoQ,KAAKu3B,EAAQ3nC,EAAK+pI,QAAU,GAGzC,GAKXxD,EAAe12F,UAAU+hG,sBAAwB,SAAUz7I,EAAG6f,GAM1D,IAAK,IALD27H,EAAiB,EACjBrI,EAAOtzH,EAAMuzH,MAAMpzI,GACnB07I,EAAe77H,EAAMuzH,MAAMpzI,EAAI,GAC/B27I,KAEKh8I,EAAI,EAAGA,EAAIwzI,EAAKpzI,OAAQJ,IAAK,CAMlC,IAAK,IALDkK,EAAOspI,EAAKxzI,GACZi8I,EAAetyI,KAAKmsI,gBAAgB5rI,EAAM7J,GAC1Cq2I,EAAiB/sI,KAAK2rI,yBAAyBprI,EAAM7J,GAAG,GAExD67I,KACK/uH,EAAI,EAAGA,EAAIupH,EAAet2I,OAAQ+sB,IAAK,CAC5C,IAAIgvH,EAAgBzF,EAAevpH,GAC/BivH,EAAwBzyI,KAAKmsI,gBAAgBqG,EAAe97I,EAAI,GACpE67I,EAAYz7I,KAAK27I,GAErBF,EAAY39G,KAAK,SAAU59B,EAAGC,GAAK,OAAOD,EAAIC,IAC9Co7I,EAAWC,GAAgBC,EAG1B,IADDG,KACJ,IAASr8I,EAAI,EAAGA,EAAIg8I,EAAW57I,OAAQJ,IACnCq8I,EAAUA,EAAQ7sH,OAAOwsH,EAAWh8I,IAGxC,IADA,IAAIs8I,EAAa,EACVA,EAAaP,EAAa37I,QAC7Bk8I,IAAe,EAEnB,IAAIC,EAAW,EAAID,EAAa,EAChCA,GAAc,EAET,IADD3c,KACJ,IAAS3/H,EAAI,EAAGA,EAAIu8I,IAAYv8I,EAC5B2/H,EAAK3/H,GAAK,EAEd,IAASA,EAAI,EAAGA,EAAIq8I,EAAQj8I,OAAQJ,IAAK,CACrC,IACIw8I,EADQH,EAAQr8I,GACIs8I,EAExB,MADE3c,EAAK6c,GACAA,EAAY,GACXA,EAAY,IACZX,GAAkBlc,EAAK6c,EAAY,MAGrC7c,EADF6c,EAAaA,EAAY,GAAM,GAIvC,OAAOX,GAMXpL,EAAe12F,UAAUrW,QAAU,SAAUxjB,GAEzCvW,KAAK8yI,mBACL,IAAK,IAAIp8I,EAAI,EAAGA,EAAI6f,EAAMuzH,MAAMrzI,OAAQC,IACpCsJ,KAAK8yI,gBAAgBp8I,GAAK6f,EAAMuzH,MAAMpzI,GAAGkpB,QAIxC,IAFDmzH,EAA+B,EAC/BC,EAAuBhzI,KAAKgyI,mBAAmBz7H,GACnD,IAAS7f,EAAI,EAAGA,EAAI,IAAMq8I,EAA+B,EAAGr8I,IAAK,CAC7DsJ,KAAKizI,eAAev8I,EAAG6f,GACvB,IAAI28H,EAAqBlzI,KAAKgyI,mBAAmBz7H,GACjD,GAAI28H,EAAqBF,EAAsB,CAC3CA,EAAuBE,EACvBH,EAA+B,EAC/B,IAAK,IAAI18I,EAAI,EAAGA,EAAI2J,KAAK8yI,gBAAgBr8I,OAAQJ,IAE7C,IAAK,IADDwzI,EAAOtzH,EAAMuzH,MAAMzzI,GACdmtB,EAAI,EAAGA,EAAIqmH,EAAKpzI,OAAQ+sB,IAAK,CAClC,IAAI2C,EAAO0jH,EAAKrmH,GACZjpB,EAAMyF,KAAK8yI,gBAAgBz8I,GAAG8vB,EAAKxV,KAAK,IACxCwiI,GAAQ,EACRhtH,EAAKX,OAASjrB,IAAQA,EAAIirB,QAC1B2tH,GAAQ,GAER54I,GAAO44I,IACPnzI,KAAK8yI,gBAAgBz8I,GAAG8vB,EAAKxV,KAAK,IAAMwV,QAKnD,CAED4sH,IAEA,IAAS18I,EAAI,EAAGA,EAAI2J,KAAK8yI,gBAAgBr8I,OAAQJ,IAE7C,IADIwzI,EAAOtzH,EAAMuzH,MAAMzzI,GACdmtB,EAAI,EAAGA,EAAIqmH,EAAKpzI,OAAQ+sB,IAAK,CAC9B2C,EAAO0jH,EAAKrmH,GAChBxjB,KAAKmqI,gBAAgBhkH,EAAM9vB,EAAGmtB,IAI1C,GAA6B,IAAzBwvH,EACA,MAMH,IAFDlJ,KACA6G,KACJ,IAASj6I,EAAI,EAAGA,EAAI6f,EAAMozH,QAAU,EAAGjzI,IACnCi6I,EAASj6I,MACTozI,EAAMpzI,GAAKi6I,EAASj6I,GAExB,IAASA,EAAI,EAAGA,EAAIsJ,KAAK8yI,gBAAgBr8I,OAAQC,IAC7C,IAASL,EAAI,EAAGA,EAAI2J,KAAK8yI,gBAAgBp8I,GAAGD,OAAQJ,IAChDs6I,EAASj6I,GAAGI,KAAKkJ,KAAK8yI,gBAAgBp8I,GAAGL,IAGjDkgB,EAAMuzH,MAAQA,GAMlBhD,EAAe12F,UAAU45F,SAAW,SAAUzpI,GAC1C,SAAIA,IAAQA,EAAK4lB,OAAS5lB,EAAK4lB,KAAKR,UAAWplB,EAAK4lB,KAAKP,WAQ7DkhH,EAAe12F,UAAU6iG,eAAiB,SAAUG,EAAW78H,GAE3D,IAAI88H,EAAiBD,EAAY,GAAM,EACvC,GAAIC,EACA,IAAK,IAAIh9I,EAAIkgB,EAAMozH,QAAU,EAAGtzI,GAAK,EAAGA,IACpC2J,KAAKszI,WAAWj9I,EAAGg9I,QAIvB,IAASh9I,EAAI,EAAGA,EAAIkgB,EAAMozH,QAAStzI,IAC/B2J,KAAKszI,WAAWj9I,EAAGg9I,IAQ/BvM,EAAe12F,UAAUu7F,yBAA2B,SAAUxlH,EAAM+hB,EAAOqrG,QACpD,IAAfA,IAAyBA,GAAa,GAC1C,IAAIC,EAAiB,0BACjBC,EAAc,mBAKlB,GAJIF,IACAC,EAAiB,8BACjBC,EAAc,oBAEdttH,EAAM,CACN,GAAInmB,KAAKgqI,SAAS7jH,GAAO,CACrB,GAA4B,MAAxBA,EAAKqtH,GAAyB,CAC9BrtH,EAAKqtH,MACLrtH,EAAKqtH,GAAgB,MACrB,IAAK,IAAI98I,EAAI,EAAGA,EAAIyvB,EAAKstH,GAAah9I,OAAQC,IAAK,CAC/C,IAAIgpF,EAAOv5D,EAAKstH,GAAa/8I,QACRuD,IAAjBylF,EAAKiqD,UACLjqD,EAAKiqD,SAAW,IAEE,IAAlBjqD,EAAKiqD,UAAmB4J,EAAc7zD,EAAK4qD,UAAYpiG,EAAQ,EAAMw3C,EAAKiqD,UAAYzhG,EAAQ,GAE9F/hB,EAAKqtH,GAAgB,GAAG18I,KAAKy8I,EAAa7zD,EAAK18E,OAAS08E,EAAKn9E,QAI7D4jB,EAAKqtH,GAAgB,GAAG18I,KAAK4oF,IAIzC,OAAOv5D,EAAKqtH,GAAgB,GAG5B,GAA4B,MAAxBrtH,EAAKqtH,GAAyB,CAC9BrtH,EAAKqtH,MACL,IAAS98I,EAAI,EAAGA,EAAIyvB,EAAKxV,KAAKla,OAAQC,IAClCyvB,EAAKqtH,GAAgB98I,MACjBA,KAAO68I,EAAa,EAAKptH,EAAKxV,KAAKla,OAAS,GAC5C0vB,EAAKqtH,GAAgB98I,GAAGI,KAAKy8I,EAAaptH,EAAKnjB,OAASmjB,EAAK5jB,QAG7D4jB,EAAKqtH,GAAgB98I,GAAGI,KAAKqvB,GAIzC,OAAOA,EAAKqtH,GAAgBtrG,EAAQ/hB,EAAKmkH,QAAU,GAG3D,OAAO,MAMXxD,EAAe12F,UAAUsjG,YAAc,SAAU3G,EAAgBrD,GAG7D,IAAK,IAFDsD,KACA2G,EAAa,EACRj9I,EAAI,EAAGA,EAAIq2I,EAAet2I,OAAQC,IAAK,CAC5C,IAAIyvB,EAAO4mH,EAAer2I,GAC1Bs2I,EAAa2G,KAAgB3zI,KAAKmsI,gBAAgBhmH,EAAMujH,GAI5D,GADAsD,EAAap4G,KAAK,SAAUrkB,EAAGC,GAAK,OAAOD,EAAIC,IAC3CmjI,EAAa,GAAM,EAEnB,OAAO3G,EAAavwI,KAAKymC,MAAMywG,EAAa,IAE3C,GAAmB,IAAfA,EACL,OAAS3G,EAAa,GAAKA,EAAa,IAAM,EAG9C,IAAIC,EAAc0G,EAAa,EAC3BC,EAAa5G,EAAaC,EAAc,GAAKD,EAAa,GAC1D6G,EAAc7G,EAAa2G,EAAa,GACtC3G,EAAaC,GACnB,OAAQD,EAAaC,EAAc,GAAK4G,EAAc7G,EAAaC,GAAe2G,IAAeA,EAAaC,IAOtH/M,EAAe12F,UAAU+5F,gBAAkB,SAAUhkH,EAAM+hB,EAAOviC,GAC1DwgB,IACAA,EAAKxV,KAAK,GAAKhL,IAMvBmhI,EAAe12F,UAAUkjG,WAAa,SAAU5J,EAAW2J,GAIvD,IAAK,IAHDS,EAAkB9zI,KAAK8yI,gBAAgBpJ,GAAWjzI,OAClDu2I,KACA+G,KACKr9I,EAAI,EAAGA,EAAIo9I,EAAiBp9I,IAAK,CACtC,IAAIyvB,EAAOnmB,KAAK8yI,gBAAgBpJ,GAAWhzI,GACvCs9I,GAAgBN,YAAa,GACjCM,EAAY7tH,KAAOA,EAGnB,IAAI8tH,OAA0B,EAE1BA,EADAZ,EAC0BrzI,KAAK2rI,yBAAyBxlH,EAAMujH,GAGpC1pI,KAAK2rI,yBAAyBxlH,EAAMujH,GAAW,GAE7E,IAAIwK,OAAgB,EACJA,EAAhBb,EAAgC3J,EAAY,EAAoBA,EAAY,EAC7C,MAA3BuK,GAAsE,IAAnCA,EAAwBx9I,QAC3Du9I,EAAYN,YAAc1zI,KAAK0zI,YAAYO,EAAyBC,GACpElH,EAAal2I,KAAKk9I,IAKlBD,EAAkB/zI,KAAKmsI,gBAAgBhmH,EAAMujH,KAAc,EAGnEsD,EAAap4G,KAAK50B,KAAKm0I,SAEvB,IAASz9I,EAAI,EAAGA,EAAIo9I,EAAiBp9I,IACjC,GAA4B,MAAxBq9I,EAAkBr9I,IAAcs2I,EAAav2I,OAAS,EAAG,CACrD0vB,EAAO6mH,EAAavB,QAAQtlH,KAChCnmB,KAAKmqI,gBAAgBhkH,EAAMujH,EAAWhzI,KAQlDowI,EAAe12F,UAAU+jG,QAAU,SAAU5jI,EAAGC,GAC5C,GAAS,MAALD,GAAkB,MAALC,EAAW,CACxB,GAAIA,EAAEkjI,YAAcnjI,EAAEmjI,YAClB,OAAQ,EAEP,GAAIljI,EAAEkjI,YAAcnjI,EAAEmjI,YACvB,OAAO,EAGf,OAAO,GAEJ5M,KChkDPv2F,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GAgB5DsQ,GAAgB,SAAU9jB,GAC1B,IAAIkrB,EAAOlrB,EACX,OAAIkrB,EAAK1kB,aAAe0kB,EAAKxa,aAAewa,EAAKhkB,UAAYgkB,EAAKwB,UAC3DxB,EAAKwpB,cAAgBxpB,EAAKm8B,cAAgBn8B,EAAKrT,iBAAmBqT,EAAKnT,gBACnEqB,IAEPpZ,EAAI6D,QAAU7D,EAAI6D,iBAAiB8nD,IAAS3rD,EAAI6D,MAAMvC,MAC/CiZ,KAOXs/H,GAAyB,SAAU7iG,GAEnC,SAAS6iG,IACL,OAAkB,OAAX7iG,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAoB/D,OAtBAuwC,GAAU6jG,EAAS7iG,GAInBT,IACIoB,WAAS,KACVkiG,EAAQhkG,UAAW,UAAM,GAC5BU,IACIoB,cACDkiG,EAAQhkG,UAAW,cAAU,GAChCU,IACIoB,YAAS,IACVkiG,EAAQhkG,UAAW,gBAAY,GAClCU,IACIoB,WAAS,KACVkiG,EAAQhkG,UAAW,eAAW,GACjCU,IACIoB,WAAS,KACVkiG,EAAQhkG,UAAW,aAAS,GAC/BU,IACIoR,oBAAkB7jC,KACnB+1H,EAAQhkG,UAAW,eAAW,GAC1BgkG,GACTjiG,iBAKEkiG,GAA+B,SAAU9iG,GAEzC,SAAS8iG,IACL,OAAkB,OAAX9iG,GAAmBA,EAAOC,MAAMxxC,KAAMkxC,YAAclxC,KAW/D,OAbAuwC,GAAU8jG,EAAe9iG,GAIzBT,IACIoB,cACDmiG,EAAcjkG,UAAW,aAAS,GACrCU,IACIoB,cACDmiG,EAAcjkG,UAAW,cAAU,GACtCU,IACIyH,aAAYhzC,KACb8uI,EAAcjkG,UAAW,cAAU,GAC/BikG,GACTliG,iBAgBEmiG,GAA+B,SAAU/iG,GAOzC,SAAS+iG,EAAc1tG,EAAShnC,GAC5B,IAAI61C,EAAQlE,EAAOkF,KAAKz2C,KAAM4mC,EAAShnC,IAAYI,KAEnDy1C,EAAM8+F,eAEN9+F,EAAMjqB,cACNiqB,EAAMnR,KAAO,OACbmR,EAAM++F,aAMN/+F,EAAM+5D,OAAS,SAAU1hG,GACrB,IAAI2mI,EACA50I,EAAKiO,EAAE4mI,OAAO1xI,OAAOnD,GAAGkP,MAAM,cAAc,GAC5C4lI,EAASl/F,EAAM8+F,YAAY10I,GAC/B,GAAI80I,GAAUl/F,EAAM85D,eAAgB,CAChC95D,EAAMm6D,gBAAkBn6D,EAAM85D,eAAe1vG,KAAO80I,EAAO90I,GAAK80I,EAASl/F,EAAM85D,eAChE95D,EAAMk6B,iBAAiB7hE,EAAE4mI,SACxCD,EAAgBh/F,EAAMm/F,iBAAiBn/F,EAAMm6D,gBAAiB9hG,EAAE4mI,OAAQj/F,EAAM71C,UAChEglC,aAAa,YAAa6Q,EAAM71C,QAAQC,IAE1D,OAAO40I,GAIX,IAAK,IAFDlmI,EACAhO,EACK7J,EAAI,EAAG++C,GAASA,EAAMjS,UAAY9sC,EAAI++C,EAAMjS,SAAS/sC,OAAQC,IAClE,IAAK,IAAIL,EAAI,EAAGA,EAAIo/C,EAAMjS,SAAS9sC,GAAG+sC,QAAQhtC,OAAQJ,IAClDkY,EAAQknC,EAAMjS,SAAS9sC,GAAG+sC,QAAQptC,GAClCkK,EAAOqmC,EAAQpD,SAAS9sC,GAAG+sC,QAAQptC,GAC/BkY,GAA8B,gBAArBA,EAAMnQ,MAAMvC,MACrBw1B,GAAuB9wB,EAAMgO,GAIzC,OAAOknC,EAwrCX,OAluCAlF,GAAU+jG,EAAe/iG,GAiDzB+iG,EAAclkG,UAAUsZ,kBAAoB,SAAUC,EAASC,GAE3D,IAAK,IADDjuB,GAAU,EACL9+B,EAAK,EAAGohB,EAAKC,OAAOC,KAAKwrC,GAAU9sD,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAE9D,OADWohB,EAAGphB,IAEV,IAAK,QACDmD,KAAKJ,QAAQM,MAAM3H,MAAQyH,KAAKzH,MAAM+F,WACtC,MACJ,IAAK,SACD0B,KAAKJ,QAAQM,MAAM5H,OAAS0H,KAAK1H,OAAOgG,WACxC,MACJ,IAAK,gBACD,MACJ,IAAK,cACL,IAAK,eACL,IAAK,gBACDq9B,GAAU,EACV,MACJ,IAAK,eACD,GAAIguB,EAAQkrF,aACR70I,KAAK80I,oBAEJ,CACD,IAAIpqG,EAAa1c,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,WACvD6qC,GACAA,EAAWzrB,WAAW8f,YAAY2L,GAG1C,MACJ,IAAK,WACD,IAAK,IAAIvP,EAAK,EAAGC,EAAKld,OAAOC,KAAKwrC,EAAQnmB,UAAWrI,EAAKC,EAAG3kC,OAAQ0kC,IAAM,CACvE,IAAIzkC,EAAI0kC,EAAGD,GACPrY,EAAQ3qB,OAAOzB,GACdsJ,KAAK+0I,iBAAiBt+C,MAAM3zE,KAC7B9iB,KAAK+0I,iBAAiBt+C,MAAM3zE,IACxBC,OAAQ4mC,EAAQnmB,SAAS1gB,GAAOkyH,OAAS,GACzCC,SAAUtrF,EAAQnmB,SAAS1gB,GAAOmyH,SAClCj5B,QAASryD,EAAQnmB,SAAS1gB,GAAOk5F,SAAW,UAGZ/hH,IAApC0vD,EAAQnmB,SAAS1gB,GAAOk5F,UACxBh8G,KAAK+0I,iBAAiBt+C,MAAM3zE,GAAOk5F,QAAUryD,EAAQnmB,SAAS1gB,GAAOk5F,SAAW,GAChFrgF,GAAU,QAE2B1hC,IAArC0vD,EAAQnmB,SAAS1gB,GAAOmyH,WACnBj1I,KAAKwjC,SAAS1gB,GAAOoyH,cAKtBl1I,KAAKwjC,SAAS1gB,GAAOoyH,eAAgB,GAJrCl1I,KAAK+0I,iBAAiBt+C,MAAM3zE,GAAOmyH,SAAWtrF,EAAQnmB,SAAS1gB,GAAOmyH,SACtEt5G,GAAU,IAOtB,MACJ,IAAK,kBACI37B,KAAKmqF,gBAINnqF,KAAK+0I,iBAAiBr0I,WAAcqpF,QAAU5O,SAAU,KAAOg6D,UAAYh6D,SAAU,MAHrFn7E,KAAK+0I,iBAAiBr0I,WAAcqpF,QAAU5O,SAAU,GAAKg6D,UAAYh6D,SAAU,IAKvF,MACJ,IAAK,aACDn7E,KAAK+0I,iBAAiBK,WAAap1I,KAAKo1I,WACxCz5G,GAAU,EACV,MACJ,IAAK,YACD37B,KAAKq1I,UAAY1rF,EAAQ0rF,UACpBr1I,KAAKq1I,UAMNr1I,KAAK62E,UAAU24B,OAASxvG,KAAKwvG,OAL7BxvG,KAAK62E,UAAU24B,OAAS,WACpB,OAAO,OASvB7zE,GACA37B,KAAKs1I,mBAObhB,EAAclkG,UAAUoZ,eAAiB,WAErC,OAAOxpD,KAAKypD,cADK,YAMrB6qF,EAAclkG,UAAU4Y,UAAY,WAChC,IAAIvT,EAAQz1C,KACZA,KAAKJ,QAAQM,MAAMivF,SAAW,OAC9BnvF,KAAKJ,QAAQM,MAAM5H,OAAS0H,KAAK1H,OAAOgG,WACxC0B,KAAKJ,QAAQM,MAAM3H,MAAQyH,KAAKzH,MAAM+F,WAClC0B,KAAK60I,cACL70I,KAAK80I,gBAGT,IAAIS,EAAejnH,GAAkB,OAASzuB,GAAIG,KAAKJ,QAAQC,GAAK,eACpEG,KAAK+0I,iBAAmB,IAAIS,aACxBJ,WAAYp1I,KAAKo1I,aAEhBp1I,KAAKmqF,kBACNnqF,KAAK+0I,iBAAiBr0I,WAAcqpF,QAAU5O,SAAU,GAAKg6D,UAAYh6D,SAAU,KAEvFn7E,KAAK+0I,iBAAiBE,SAAW,SAAUl1I,GACvC,IAAI+iB,EAAQ2yB,EAAMs/F,iBAAiBt+C,MAAMn2E,QAAQvgB,EAAKmgC,MACtDuV,EAAMjS,SAAS1gB,GAAOmyH,SAAWl1I,EAAKioD,WACtCvS,EAAMjS,SAAS1gB,GAAOoyH,eAAgB,GAE1Cl1I,KAAKJ,QAAQo/B,YAAYu2G,GAErB5wG,OAAqB,iBACrBA,OAAqB,eAAI,MAE7B6F,KACAxqC,KAAKipD,eACLjpD,KAAKkpD,cAKTorF,EAAclkG,UAAU+Y,OAAS,WAC7BnpD,KAAKoiB,gBAAkB,IAAIm1C,GAAgBv3D,KAAKJ,QAAQC,GAAI,IAAI00D,IAAe,GAC/Ev0D,KAAK23D,YAAc,IAAIJ,GAAgBv3D,KAAKJ,QAAQC,GAAI,IAAI00D,IAAe,GAC3Ev0D,KAAKy1I,iBACLz1I,KAAK+0I,iBAAiBp1I,SAAS,IAAMK,KAAKJ,QAAQC,GAAK,eAM3Dy0I,EAAclkG,UAAUiZ,cAAgB,WACpC,MAAO,iBAOXirF,EAAclkG,UAAUwpD,gBAAkB,WACtC,IAAIC,KAKJ,OAJAA,EAAQ/iG,MACJijB,OAAQ,OACRha,UAEG85F,GAMXy6C,EAAclkG,UAAUkZ,QAAU,WAC9B,GAAItpD,KAAKq1I,UAAW,CAChBr1I,KAAK62E,UAAUvtB,UACftpD,KAAKipD,eACLjpD,KAAKupD,OAAO,cACZhY,EAAOnB,UAAUkZ,QAAQ7S,KAAKz2C,MAC9B,IAAIC,EAAU+tB,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,cACxD,GAAII,EAAS,CACTD,KAAKJ,QAAQm/B,YAAY9+B,GACzB,IAAIy1I,EAAgB,iBAChB/wG,OAAO+wG,KACP/wG,OAAO+wG,GAAejrG,YAAc,EACK,IAArC9F,OAAO+wG,GAAejrG,aACtB9F,OAAO+wG,GAAez2H,WAAW8f,YAAY4F,OAAO+wG,IACpD/wG,OAAO+wG,GAAiB,QAIpCz1I,EAAU+tB,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,aAEhDI,EAAQgf,WAAW8f,YAAY9+B,GAEnCD,KAAKJ,QAAQg8B,UAAUlP,OAAO,qBAQtC4nH,EAAclkG,UAAUulG,YAAc,SAAUC,GAI5C,IAAK,IAHDj/E,KACAk/E,EAAa,EACb5wG,EAAY,EACPpoC,EAAK,EAAGohB,EAAK23H,EAAYnyG,QAAS5mC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAE7D,GAA0B,cADtB83I,EAAS12H,EAAGphB,IACLuB,MAAMvC,KAAqB,CAClC,IAAIi0G,EAAc6kC,EACdmB,EAAgBnB,EAAOv2I,MACvB0vB,EAA8C,eAA9BgoH,EAAczkI,YAClC,GAAIykI,EAAc12H,OAAQ,CACtBy2H,EAAa/nH,EAAe9tB,KAAK+1I,aAAe/1I,KAAK+1I,aAAe,EAAI/1I,KAAK+1I,aAAe/1I,KAAK+1I,aAAe,EAChH9wG,EAAYnX,EAAe9tB,KAAKg2I,YAAch2I,KAAKg2I,YAAc,EAAIh2I,KAAKg2I,YAAch2I,KAAKg2I,YAAc,EAC3Gh2I,KAAKw0I,UAAUG,EAAO90I,KAAQvH,OAAQu9I,EAAYt9I,MAAO0sC,GACzD,IAAIliB,EAAS+yH,EAAch2H,MAAM,GAAGiD,OAChCkzH,EAAYH,EAAch2H,MAAM,GAAG5f,MACnCg2I,EAAcnzH,EAAO7iB,MACrBi2I,GACAt2I,GAAI,SAAWua,KAAYhc,OAASvC,KAAM,QAASuC,MAAO,aAC1D7F,MAAOu1B,EAAe/K,EAAOxqB,MAAQu3G,EAAYv3G,MACjDD,OAAQw1B,EAAegiF,EAAYx3G,OAASyqB,EAAOzqB,OACnD4H,MAAOg2I,EACP98H,cAAgBnZ,QAAS8iB,EAAOc,WAAW5jB,WAE/Ck2I,EAAUp6I,QAAUo6I,EAAU59I,MAAQ,EACtC49I,EAAUn6I,QAAUm6I,EAAU79I,OAAS,EACvC0H,KAAKo2I,eAAeR,EAAY/1I,GAAIs2I,GACpC,IAAIruH,GACAjoB,GAAI,OAASua,KAAYhc,OAASvC,KAAM,QAASuC,MAAO,aACxD7F,MAAOu1B,EAAgBgiF,EAAYv3G,MAAQwqB,EAAOxqB,MAASu3G,EAAYv3G,MACvED,OAAQw1B,EAAegiF,EAAYx3G,OAAUw3G,EAAYx3G,OAASyqB,EAAOzqB,OACzE4H,MAAO+1I,GAEXnuH,EAAQ/rB,QAAU+xB,EAAgBqoH,EAAU59I,MAASuvB,EAAQvvB,MAAQ,EAAMuvB,EAAQvvB,MAAQ,EAC3FuvB,EAAQ9rB,QAAU8xB,EAAehG,EAAQxvB,OAAS,EAAK69I,EAAU79I,OAAUwvB,EAAQxvB,OAAS,EAC5F0H,KAAKo2I,eAAeR,EAAY/1I,GAAIioB,GACpCgoF,EAAY39F,UAAYgkI,EAAUt2I,GAAIioB,EAAQjoB,SAEzCi2I,EAAc3xH,UACnB0xH,EAAa/lC,EAAYx3G,OAASw3G,EAAYx3G,OAAS0H,KAAK+1I,aAC5D9wG,EAAY6qE,EAAYv3G,MAAQu3G,EAAYv3G,MAAQyH,KAAKg2I,YACzDrB,EAAOv2I,MAAMvC,KAAO,OAEhB84I,EAAOv2I,MAAMhI,KADb03B,EACoB,SAAWmX,EAAY,KAGvB,WAAaA,GAI7C,GAAI0vG,aAAkB7/H,GAAM,CACxB,IAAIylB,EAAkBlK,GAAYrwB,KAAKu6B,iBACnCA,GACAA,EAAgBo6G,EAAQ30I,WAG3B,GAAI20I,aAAkBhhI,GAAW,CAClC,IAAI8mB,EAAuBpK,GAAYrwB,KAAKy6B,sBACxCA,GACAA,EAAqBk6G,EAAQ30I,MAGrCA,KAAKu0I,YAAYI,EAAO90I,IAAM80I,EAC1BA,aAAkB7/H,IAAQ6/H,EAAOxiI,UACjCwkD,EAAM7/D,KAAK69I,GAGnB,IAAK,IAAIj+I,EAAI,EAAGA,EAAIigE,EAAMlgE,OAAQC,IAE9B,IAAK,IADD6J,OAAO,EACFlK,EAAI,EAAGA,EAAIsgE,EAAMjgE,GAAGyb,SAAS1b,OAAQJ,KAC1CkK,EAAQP,KAAKu0I,YAAY59E,EAAMjgE,GAAGyb,SAAS9b,OAEvC2J,KAAKwrB,WAAWjrB,EAAKV,IAAMU,EAC3BA,EAAKsb,SAAW86C,EAAMjgE,GAAGmJ,IAIrC,IAAK,IAAIs7B,EAAK,EAAGC,EAAKw6G,EAAYnyG,QAAStI,EAAKC,EAAG3kC,OAAQ0kC,IAAM,EACzDw5G,EAASv5G,EAAGD,cACQrmB,IAAQ6/H,EAAOxiI,UACnCnS,KAAKq2I,cAAc1B,GAG3B,IAAK,IAAIrvF,EAAK,EAAGgxF,EAAU3/E,EAAOrR,EAAKgxF,EAAQ7/I,OAAQ6uD,IAAM,CACzD,IAAIqvF,EAAS2B,EAAQhxF,GACrBtlD,KAAKq2I,cAAc1B,KAM3BL,EAAclkG,UAAUmmG,cAAgB,SAAUX,GAC9C,IAAI11I,EAAQ,8BACR01I,EAAYt9I,SACZ4H,GAAS,UAAY01I,EAAYt9I,OAAS,MAE9C,IAAIk+I,EAAaloH,GAAkB,OAASzuB,GAAM+1I,EAAY/1I,GAAIK,MAAOA,IACzEF,KAAKJ,QAAQo/B,YAAYw3G,GACzB,IAAIt2G,GACAnd,OAAQ6yH,EAAYZ,MAAOC,SAAUW,EAAYX,SACjDh1I,QAAS,IAAM21I,EAAY/1I,GAAIm8G,QAAS45B,EAAY55B,SAExDh8G,KAAK+0I,iBAAiBt+C,MAAM3/F,KAAKopC,GACjClgC,KAAKy2I,cAAcb,EAAaY,IAKpClC,EAAclkG,UAAUgmG,eAAiB,SAAUM,EAAaC,GAC5D,IACK,IAAIjgJ,EAAI,EAAGA,EAAIsJ,KAAKwjC,SAAS/sC,OAAQC,IAAK,CAC3C,IAAIkgJ,EAAqB52I,KAAKwjC,SAAS9sC,GACvC,IAAoD,IAAhDkgJ,EAAmB/2I,GAAGygB,QAAQo2H,GAAqB,CAKnD,IAAK,IAHDG,QAAS58I,EAAW28I,EAAoB,cAAe,GAEvDr8I,EAAM,IAAKq2H,SAASxgF,UAAUu2D,KAAKn1D,MAAMnzB,GAAcs4H,GAAgBE,IAClEnxH,EAAM,EAAGA,EAAMxH,OAAOC,KAAKw4H,GAAelgJ,OAAQivB,IACvDnrB,EAAI2jB,OAAOC,KAAKw4H,GAAejxH,IAAQixH,EAAcz4H,OAAOC,KAAKw4H,GAAejxH,IAEpFkxH,EAAmBnzG,QAAQ3sC,KAAKyD,GAC3BA,EAAI4X,UACLnS,KAAKq2I,cAAc97I,GAEvByF,KAAKu0I,YAAYh6I,EAAIsF,IAAMtF,EAC3B,IAAIi8I,EAAaxoH,SAASC,eAAe2oH,EAAmB/2I,IACxD22I,GACAA,EAAWx3G,YAAYh/B,KAAK82I,mBAAmBv8I,EAAKi8I,IAExD,SAOZlC,EAAclkG,UAAU2mG,kBAAoB,SAAUL,EAAaM,GAE/D,IAAK,IADDr7G,EACKjlC,EAAI,EAAGA,EAAIsJ,KAAKwjC,SAAS/sC,OAAQC,IAAK,CAC3C,IAAIkgJ,EAAqB52I,KAAKwjC,SAAS9sC,GACvC,IAAoD,IAAhDkgJ,EAAmB/2I,GAAGygB,QAAQo2H,GAC9B,IAAK,IAAI75I,EAAK,EAAGohB,EAAK24H,EAAmBnzG,QAAS5mC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CACpE,IAAI83I,EAAS12H,EAAGphB,GAChB,IAAqC,IAAjC83I,EAAO90I,GAAGygB,QAAQ02H,GAAkB,CACpC,IAAIl0H,EAAQ8zH,EAAmBnzG,QAAQnjB,QAAQq0H,GAE/C,GADAiC,EAAmBnzG,QAAQl9B,OAAOuc,EAAO,GACrC6xH,EAAOxiI,SAEP,IAAK,IADD8M,EAAa01H,EAAOxiI,SACf+X,EAAM,EAAGA,EAAMjL,EAAWxoB,OAAQyzB,WAChClqB,KAAKu0I,YAAat1H,EAAWiL,WAGrClqB,KAAKu0I,YAAYI,EAAO90I,IAC/B,IAAID,EAAUouB,SAASC,eAAe0mH,EAAO90I,GAAK,cAClDD,EAAQqf,WAAW8f,YAAYn/B,GAC/B+7B,GAAU,EACV,OAIZ,GAAIA,EACA,QAOZ24G,EAAclkG,UAAUimG,cAAgB,SAAU1B,GAC9C,IAAIp8I,EACA8pC,EACA/pC,EACAgqC,EAGAriC,EAFAyrG,EAAa,IAAIrpD,GACjB9nD,EAAMo6I,EAENsC,EAAkB,IAAIt1H,GACtB/I,EAAa+7H,aAAkB7/H,GAAQ6/H,EAAO/xG,gBAAkB,KAChEhqB,IAAcA,EAAUzG,WACxByG,EAAUzG,aAGd,IAAI+kI,EAAoB7mH,GAAYrwB,KAAKk3I,mBAezC,GAdIA,IACAj3I,EAAUi3I,EAAkBvC,IAE3B10I,IACG1F,EAAI4X,SACJlS,EAAUD,KAAKm3I,aAAa58I,EAAKqe,IAGjC3Y,EAAU00I,EAAO9xG,KAAK7iC,MAClB20I,aAAkB7/H,IAAQ6/H,EAAO94H,UACjCjD,EAAUzG,SAASrb,KAAKmJ,MAI/B00I,EAAO94H,SAAU,CAClB,IAAIu7H,GAAe7+I,MAAOyH,KAAKg2I,YAAa19I,OAAQ0H,KAAK+1I,cACrDsB,EAAgBhnH,GAAYrwB,KAAKq3I,eAoBrC,GAnBIA,IACAD,EAAaC,EAAc1C,IAE/ByC,EAAaA,MACTzC,EAAOv2I,OAASu2I,EAAOv2I,MAAM+lB,UAC7BizH,EAAW7+I,MAAQ6+I,EAAW7+I,OAASyH,KAAKg2I,YAC5CoB,EAAW9+I,OAAS8+I,EAAW9+I,QAAU0H,KAAK+1I,cAGlD91I,EAAQy0B,aAAe,SACvBz0B,EAAQ2Z,oBAAsB3Z,EAAQ0Z,kBAAoB,SAC1Ds9H,EAAgB/2I,MAAM8Y,YAAci+H,EAAgB/2I,MAAM6Y,KAAO,OACjEk+H,EAAgB9kI,UAAYlS,GAC5BA,EAAQof,QAAQ,IAAIC,IACpBrf,EAAQsf,QAAQtf,EAAQuf,aACxBjnB,EAAQ6+I,EAAW7+I,MAAQ6+I,EAAW7+I,aACnB0B,IAAdM,EAAIhC,MAAsB0H,EAAQsM,WAAWhU,WAAQ0B,IAAc+F,KAAKg2I,YAC7E19I,EAAS8+I,EAAW9+I,OAAS8+I,EAAW9+I,cACpB2B,IAAfM,EAAIjC,OAAuB2H,EAAQsM,WAAWjU,YAAS2B,IAAc+F,KAAK+1I,kBACjE97I,IAAV1B,QAAkC0B,IAAX3B,EAAsB,CAC7C,IAAIg/I,EAAc/+I,EACdg/I,EAAej/I,EAEf6rB,GADSwwH,EAAOv2I,MAAMghB,SACZu1H,EAAOv2I,MAAM+lB,cACFlqB,IAArB+F,KAAKg2I,YACLsB,EAAct3I,KAAKg2I,YAAch2I,KAAKw3I,aAAa50I,KAAO5C,KAAKw3I,aAAa30I,MAG5EtK,GAASgC,EAAI2F,MAAM+Y,iBAEGhf,IAAtB+F,KAAK+1I,aACLwB,EAAev3I,KAAK+1I,aAAe/1I,KAAKw3I,aAAaz0I,IAAM/C,KAAKw3I,aAAa10I,OAG7ExK,GAAUiC,EAAI2F,MAAM+Y,YAEpBm+H,EAAWlwG,aAA+C,KAAhCkwG,EAAWlwG,YAAYzsB,OACjD88H,GAAgB,IAEpBl1G,EAAKi1G,IAAiBnzH,GAAWlkB,EAAQ1H,OAAUA,GACnD+pC,EAAKi1G,IAAkBpzH,GAAWlkB,EAAQ3H,QAAWA,GACjD8+I,EAAWK,MACXp1G,EAAKi1G,EAAcF,EAAW7+I,MAC9B+pC,EAAKi1G,EAAeH,EAAW9+I,QAEnCC,EAAQ++I,EACRh/I,EAASi/I,EACTl1G,EAAKC,EAAK7lC,KAAKyK,IAAIm7B,EAAIC,GACvB20G,EAAgB1+I,MAAQA,EACxB0+I,EAAgB3+I,OAASA,EACzB2H,EAAQ1H,MAAQ6+I,EAAW7+I,MAC3B0H,EAAQ3H,OAAS8+I,EAAW9+I,OAC5B0H,KAAK03I,YAAY/C,EAAQsC,EAAiB50G,EAAIC,EAAI/pC,EAAOD,OAExD,CACD,IAAI0U,OAAc,EACd2nI,aAAkBhhI,KAClB3G,EAAckF,GAAeyiI,IAEjC10I,EAAQ1H,MAAQo8I,EAAOp8I,SAAyByU,EAAYzU,MAAQ0H,EAAQsM,WAAWhU,MACvF0H,EAAQ3H,OAASq8I,EAAOr8I,UAA0B0U,EAAY1U,OAAS2H,EAAQsM,WAAWjU,OAE9Fq8I,EAAOnmI,QAAUk9F,EACjBA,EAAWv5F,UAAY8kI,GACvBh3I,EAAQ8gC,MAAQ2qE,EAAW3qE,OAAU/pC,EAAG,EAAGC,EAAG,GAC9Cy0G,EAAW7rG,GAAKI,EAAQJ,GAAK,UAC7B6rG,EAAWxrG,MAAM6Y,KAAO2yF,EAAWxrG,MAAM8Y,YAAc,cACvD0yF,EAAW3vG,QAAU44I,EAAOz0I,MAAM+Y,YAAc,EAChDyyF,EAAW1vG,QAAU24I,EAAOz0I,MAAM+Y,YAAc,EAEhDjZ,KAAK23I,qBAAqBP,EAAY7+I,EAAOmzG,GAC7CA,EAAWrsF,QAAQ,IAAIC,IACvBosF,EAAWnsF,QAAQmsF,EAAWlsF,aAC9B43H,EAAW7+I,MAAQ6+I,EAAW7+I,OAAS0H,EAAQsM,WAAWhU,MAC1D6+I,EAAW9+I,OAAS8+I,EAAW9+I,QAAU2H,EAAQsM,WAAWjU,OAC5Dq8I,EAAO30I,KAAKskC,MAAQ8yG,EAEpBzC,EAAO94H,WACPjD,EAAUyG,QAAQ,IAAIC,GAAK/kB,EAAIhC,MAAOgC,EAAIjC,SAC1CsgB,EAAU2G,QAAQ3G,EAAU4G,eAGpC80H,EAAclkG,UAAU+mG,aAAe,SAAU58I,EAAKqe,GAClDA,EAAU+8B,iBAAkB,EAC5B,IAAIn0C,EACA+M,EAAQhU,EAAI4X,SAChByG,EAAUzG,YACV,IAAK,IAAIzb,EAAI,EAAGA,EAAI6X,EAAM9X,OAAQC,IAC1BsJ,KAAKu0I,YAAYhmI,EAAM7X,KACvBkiB,EAAUzG,SAASrb,KAAKkJ,KAAKu0I,YAAYhmI,EAAM7X,IAAI8X,SAU3D,OAPAoK,EAAUyG,QAAQ,IAAIC,GAAK/kB,EAAIhC,MAAOgC,EAAIjC,SAC1CsgB,EAAU2G,QAAQ3G,EAAU4G,aACD,IAAvB5G,EAAUpX,OAAOxK,GAAkC,IAAvB4hB,EAAUpX,OAAOvK,IAE7CyrC,GAAanoC,GADbiH,EAASoX,EAAUpX,QACMxK,EAAGwK,EAAOvK,EAAG+I,KAAKu0I,aAAa,EAAOv0I,MAC/D4Y,EAAY5Y,KAAKm3I,aAAa58I,EAAKqe,IAEhCA,GAOX07H,EAAclkG,UAAUunG,qBAAuB,SAAUP,EAAY7+I,EAAO2nB,GACxE,GAAIk3H,GAAcA,EAAWlwG,aAAekwG,EAAWlwG,YAAYzsB,KAAM,CACrE,IAAIyhB,EAAc,IAAI5X,GAEtB8yH,EAAWlwG,YAAYioD,SAAWioD,EAAWlwG,YAAYioD,UAAY,WACrEioD,EAAWlwG,YAAYrB,KAAOuxG,EAAWlwG,YAAYrB,MAAQ,mBAC7D3J,EAAYj8B,QAAUm3I,EAAWlwG,YAAYzsB,KAC7CyhB,EAAY3jC,MAAQA,EACpB2jC,EAAY5jC,OAAS,GACrB4jC,EAAYh8B,MAAM8Y,YAAc,cAChCkjB,EAAYh8B,MAAM6Y,KAAO,cACzBmjB,EAAYh8B,MAAM+Y,YAAc,EAChCijB,EAAYh8B,MAAMuZ,aAAe29H,EAAWlwG,YAAYrB,KACxD3J,EAAYh8B,MAAMm8B,aAAe+6G,EAAWlwG,YAAYioD,SACxDjzD,EAAYv5B,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAC1Dod,EAAO/N,SAASrb,KAAKolC,KAQ7Bo4G,EAAclkG,UAAUqmG,cAAgB,SAAUb,EAAagC,GAC3D,IAAK,IAAI/6I,EAAK,EAAGohB,EAAK23H,EAAYnyG,QAAS5mC,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC7D,IAAI83I,EAAS12H,EAAGphB,GACX83I,EAAO94H,UACR7b,KAAK82I,mBAAmBnC,EAAQiD,KAS5CtD,EAAclkG,UAAUwkG,iBAAmB,SAAUD,EAAQzkE,EAAK0nE,GAC9D,IAAIn2H,EACA4gB,EACAC,EACAu1G,EAAqBlD,EAAOnmI,QAAQ2D,SAAS,GAAGqN,YAAYjnB,MAAQo8I,EAAOz0I,MAAM+Y,YACjF6+H,EAAsBnD,EAAOnmI,QAAQ2D,SAAS,GAAGqN,YAAYlnB,OAASq8I,EAAOz0I,MAAM+Y,YACnFhZ,EAAU00I,EAAOnmI,QAAQ2D,SAAS,GAAGA,SAAS,GAClD,QAAiClY,IAA7B+F,KAAK+3I,cAAcx/I,YAAqD0B,IAA9B+F,KAAK+3I,cAAcz/I,OAAsB,CACnFu/I,GAAsB73I,KAAK+3I,cAAcx/I,OAASs/I,GAAsBlD,EAAOz0I,MAAM+Y,YACrF6+H,GAAuB93I,KAAK+3I,cAAcz/I,QAAUw/I,GAAuBnD,EAAOz0I,MAAM+Y,YACxFopB,EAAKw1G,EAAqB53I,EAAQsM,WAAWhU,MAC7C+pC,EAAKw1G,EAAsB73I,EAAQsM,WAAWjU,OAC9C+pC,EAAKC,EAAK7lC,KAAKyK,IAAIm7B,EAAIC,GACvB,IAAI0zG,EAAc/1I,EAAQsM,WAAWhU,MAAQ8pC,EACzC0zG,EAAe91I,EAAQsM,WAAWjU,OAASgqC,EAC/CqyG,EAAOnmI,QAAQ2D,SAAS,GAAG5Z,MAAQs/I,EACnClD,EAAOnmI,QAAQ2D,SAAS,GAAG7Z,OAASw/I,EACpC93I,KAAKg4I,wBAAwB/3I,EAAS00I,aAAkB7/H,IACxD9U,KAAK03I,YAAY/C,EAAQA,EAAOnmI,QAAQ2D,SAAS,GAAIkwB,EAAIC,EAAI0zG,EAAaD,GAAc,GACxF8B,EAAqB7B,EACrB8B,EAAsB/B,EAE1B,IAAI/zE,GAAiBhrE,EAAGiJ,EAAQlE,QAAS9E,EAAGgJ,EAAQjE,SACpDiE,EAAQlE,QAAUkE,EAAQjE,QAAU24I,EAAOz0I,MAAM+Y,YAAc,EAC/DhZ,EAAQ8gC,OAAU/pC,EAAG,EAAGC,EAAG,GAC3B+I,KAAKg4I,wBAAwB/3I,EAAS00I,aAAkB7/H,IACxD,IACIiZ,EADAkqH,EAAmB3pH,GAAkB,OAASuoD,UAAa,OAAQp+D,MAAS,cAAevY,MAAS,wBAExG8tB,SAASuY,KAAKvH,YAAYi5G,GAC1B,IAAI/3I,EAAQ,cACZ,GAA0B,WAAtBy0I,EAAOv2I,MAAMvC,KAAmB,CAChC4lB,EAASynB,GAAiB,OACtBrpC,GAAI80I,EAAO90I,GAAK,WAChBtH,MAAOkE,KAAK+oC,KAAKqyG,GAAsB,EACvCv/I,OAAQmE,KAAK+oC,KAAKsyG,GAAuB,IAE7C,IAAI7iF,EAAW/rB,GAAiB,KAAOrpC,GAAI80I,EAAO90I,GAAK,OACvD4hB,EAAOud,YAAYi2B,GACnBgjF,EAAiBj5G,YAAYvd,GAC7BzhB,KAAK23D,YAAYgB,cAAc14D,EAASg1D,OAAUh7D,OAAWA,EAAWwnB,QAEvE,GAA0B,SAAtBkzH,EAAOv2I,MAAMvC,KAClBkyB,EAAM/tB,KAAKk4I,cAAcvD,EAAQlzH,EAAQw2H,EAAkBH,EAAqBD,GAAoB,QAGpG,GAAIlD,EAAOxiI,UACPwiI,EAAOxiI,SAAS1b,OAAS,GAAK07B,GAAawiH,EAAQ,OAAQ30I,KAAKwrB,YAChEuC,EAAM/tB,KAAKm4I,eAAexD,EAAQlzH,EAAQw2H,EAAkBtD,EAAOnmI,QAAQjC,WAAWjU,OAAQq8I,EAAOnmI,QAAQjC,WAAWhU,OAAO,OAE9H,CACDkpB,EAASssC,GAAeyB,aAAamlF,EAAO90I,GAAK,WAA6E,GAAhEpD,KAAK+oC,KAAKqyG,GAAsBlD,EAAOz0I,MAAM+Y,YAAc,GAA0E,GAAjExc,KAAK+oC,KAAKsyG,GAAuBnD,EAAOz0I,MAAM+Y,YAAc,IAC9Lg/H,EAAiBj5G,YAAYvd,GAC7BvhB,GAAS,wBACTuhB,EAAOmjB,aAAa,mBAAoB,OACxC,IAAI9hB,EAAQ,EACR6xH,aAAkBhhI,KAClBmP,EAAQ,KAEZrB,EAAOusC,WAAW,MAAMs7C,aAAaxmF,EAAO,EAAG,EAAGA,EAAO,EAAG,GAC5D9iB,KAAKoiB,gBAAgBu2C,cAAc14D,EAASwhB,OAAQxnB,GAO5D,OAJE8zB,IAA8B,SAAtB4mH,EAAOv2I,MAAMvC,MAAmB84I,EAAOxiI,UAC1CwiI,EAAOxiI,SAAS1b,OAAS,GAAMs3B,EAAMtM,GAAQmjB,aAAa,QAAS1kC,GAC1ED,EAAQlE,QAAUimE,EAAahrE,EAC/BiJ,EAAQjE,QAAUgmE,EAAa/qE,EACxBghJ,GAEX3D,EAAclkG,UAAU4nG,wBAA0B,SAAU/3I,EAASizE,GAC7DjzE,EAAQkS,WAAa+gE,IACrBjzE,EAAQkS,SAAS,GAAGtM,UAAYmtC,YAAUc,MAE9C7zC,EAAQof,QAAQ,IAAIC,IACpBrf,EAAQsf,QAAQtf,EAAQuf,aACpBvf,EAAQkS,WACRlS,EAAQkS,SAAS,GAAGtM,UAAYmtC,YAAUe,SAGlDugG,EAAclkG,UAAUgoG,iBAAmB,SAAUzD,EAAQp8I,EAAOD,GAChE,IAAIsH,EAAU+0I,EAAOnmI,QAAQ2D,SAAS,GAAGA,SAAS,GAC9C8G,EAAc07H,EAAOz0I,MAAM+Y,YAC/BrZ,EAAQrH,OAASA,GAASqH,EAAQrH,QAAU0gB,EAAc,GAC1DrZ,EAAQtH,QAAUA,GAAUsH,EAAQtH,SAAW2gB,EAAc,GAC7D07H,EAAOnmI,QAAQ6Q,QAAQ,IAAIC,IAC3Bq1H,EAAOnmI,QAAQ+Q,QAAQo1H,EAAOnmI,QAAQgR,cAO1C80H,EAAclkG,UAAU0mG,mBAAqB,SAAUnC,EAAQiD,EAAWS,GACtE,IAAIjB,EAAap3I,KAAKu0I,YAAYI,EAAO90I,IAAIG,KAAKskC,MAC9CpjB,EAAOlhB,KAAKs4I,cAAc3D,EAAQyC,GAClC7+I,EAAQ2oB,EAAK3oB,MAAQ,EACrBD,EAAS4oB,EAAK5oB,OAAS,EACvBsgB,EAAY0V,GAAkB,OAC9BzuB,GAAI80I,EAAO90I,GAAK,aAChBK,MAAO,SAAW3H,EAAQ,aAAeD,EAAS,gCAClD08I,MAAOoC,EAAW93I,QAAU83I,EAAW93I,QAAUq1I,EAAO90I,KAE5D+3I,EAAU54G,YAAYpmB,GACtB,IAAI6I,EACAwzC,EACAlnC,EACJ,GAA0B,WAAtB4mH,EAAOv2I,MAAMvC,KACb4lB,EAASynB,GAAiB,OACtBrpC,GAAI80I,EAAO90I,GACXtH,MAAOkE,KAAK+oC,KAAKmvG,EAAOnmI,QAAQjC,WAAWhU,OAAS,EACpDD,OAAQmE,KAAK+oC,KAAKmvG,EAAOnmI,QAAQjC,WAAWjU,QAAU,IAE1D28D,EAAW/rB,GAAiB,KAAOrpC,GAAI80I,EAAO90I,GAAK,OACnD4hB,EAAOud,YAAYi2B,GACnBr8C,EAAUomB,YAAYvd,GACtBzhB,KAAKo4I,iBAAiBzD,GACtB30I,KAAK23D,YAAYgB,cAAcg8E,EAAOnmI,QAASymD,OAAUh7D,OAAWA,EAAWwnB,QAE9E,GAA0B,SAAtBkzH,EAAOv2I,MAAMvC,KAClBkyB,EAAM/tB,KAAKk4I,cAAcvD,EAAQlzH,EAAQ7I,EAAW+7H,EAAOnmI,QAAQjC,WAAWjU,OAAQq8I,EAAOnmI,QAAQjC,WAAWhU,OAAO,QAGvH,GAAIo8I,EAAOxiI,UACPwiI,EAAOxiI,SAAS1b,OAAS,GAAK07B,GAAawiH,EAAQ,OAAQ30I,KAAKwrB,YAChEuC,EAAM/tB,KAAKm4I,eAAexD,EAAQlzH,EAAQ7I,EAAW+7H,EAAOnmI,QAAQjC,WAAWjU,OAAQq8I,EAAOnmI,QAAQjC,WAAWhU,OAAO,OAEvH,CACDkpB,EAASssC,GAAeyB,aAAamlF,EAAO90I,GAAIpD,KAAK+oC,KAAoE,GAA9DmvG,EAAOnmI,QAAQjC,WAAWhU,MAAQo8I,EAAOz0I,MAAM+Y,cAAoB,EAAGxc,KAAK+oC,KAAqE,GAA/DmvG,EAAOnmI,QAAQjC,WAAWjU,OAASq8I,EAAOz0I,MAAM+Y,cAAoB,GAChNL,EAAUomB,YAAYvd,GACtB,IAAIqB,EAAQ,EACR6xH,aAAkBhhI,KAClBmP,EAAQ,KAEZrB,EAAOusC,WAAW,MAAMs7C,aAAaxmF,EAAO,EAAG,EAAGA,EAAO,EAAG,GAC5D9iB,KAAKoiB,gBAAgBu2C,cAAcg8E,EAAOnmI,QAASymD,GAAYxzC,OAAQxnB,OAAWA,OAAWA,OAAWA,GAAW,GAG3H,IAAKo+I,EAAS,CACV,IAAIf,EAAc3C,EAAOnmI,QAAQjC,WAAWhU,MAAQo8I,EAAOz0I,MAAM+Y,YAC7Ds+H,EAAe5C,EAAOnmI,QAAQjC,WAAWjU,OAASq8I,EAAOz0I,MAAM+Y,YAC/D/Y,EAAQ,4DA2BZ,OA1BIy0I,EAAOv2I,MAAM+lB,QACoB,eAA7BwwH,EAAOv2I,MAAMiT,YACbnR,GAAS,eACLzD,KAAKmJ,IAAI5F,KAAKw3I,aAAa50I,MAAQrK,EAAQ++I,GAAe,GACxD,iBAAmBp2H,EAAK5oB,OAAS,EACjC,MAGN4H,GAAS,eACLghB,EAAK3oB,MAAQ,EACX,iBAAmBkE,KAAKmJ,IAAI5F,KAAKw3I,aAAaz0I,KAAOzK,EAASi/I,GAAgB,GAC9E,MAIVr3I,GAAS,eACLzD,KAAKmJ,IAAI5F,KAAKw3I,aAAa50I,MAAQrK,EAAQ++I,GAAe,GACxD,iBAAmB76I,KAAKmJ,IAAI5F,KAAKw3I,aAAaz0I,KAAOzK,EAASi/I,GAAgB,GAC9E,MAEN91H,aAAkB82H,oBAClBr4I,GAAS,4BAEX6tB,IAA8B,SAAtB4mH,EAAOv2I,MAAMvC,MAAmB84I,EAAOxiI,UAC7CwiI,EAAOxiI,SAAS1b,OAAS,GAAMs3B,EAAMtM,GAAQmjB,aAAa,QAAS1kC,GACvE0Y,EAAUgjB,UAAUlQ,IAAI,sBACjB9S,EAEX,OAAO6I,GAEX6yH,EAAclkG,UAAU+nG,eAAiB,SAAUj4G,EAAMze,EAAQ7I,EAAWtgB,EAAQC,EAAOigJ,GACvF,IAAIzqH,EAAMO,GAAkB,OAASzuB,GAAMqgC,EAAKrgC,IAAM24I,EAAY,oBAAsB,eACpFxmH,EAAY1D,GAAkB,OAC9BzuB,GAAMqgC,EAAKrgC,IAAM24I,EAAY,qBAAuB,cACpDt4I,MAAS,SAAWzD,KAAK+oC,KAAKjtC,EAAQ,GAAK,aAC3BkE,KAAK+oC,KAAKltC,EAAS,GAAK,uBACxCmgB,MAAS,iBAETsqF,EAAez0E,GAAkB,OACjCzuB,GAAMqgC,EAAKrgC,IAAM24I,EAAY,yBAA2B,kBACxDt4I,MAAS,SAAWzD,KAAK+oC,KAAKjtC,EAAQ,GAAK,aAC3BkE,KAAK+oC,KAAKltC,EAAS,GAAK,yBAQ5C,OANA05B,EAAUgN,YAAY+jE,GACtBh1E,EAAIiR,YAAYhN,GAChBvQ,EAASssC,GAAeyB,aAAcgpF,EAAat4G,EAAKrgC,GAAK,WAAcqgC,EAAKrgC,GAAKpD,KAAK+oC,KAAKjtC,GAAS,EAAGkE,KAAK+oC,KAAKltC,GAAU,GAC/Hy1B,EAAIiR,YAAYvd,GAChB7I,EAAUomB,YAAYjR,GACtB/tB,KAAKoiB,gBAAgBu2C,cAAcz4B,EAAK1xB,QAAQ2D,SAAS,GAAGA,SAAS,GAAIsP,EAAQuQ,GAC1EjE,GAEXumH,EAAclkG,UAAU8nG,cAAgB,SAAUvD,EAAQlzH,EAAQ7I,EAAWtgB,EAAQC,EAAOigJ,GACxF,IAAIzqH,EAAMO,GAAkB,OACxBzuB,GAAM80I,EAAO90I,IAAM24I,EAAY,oBAAsB,eAErDxmH,EAAY1D,GAAkB,OAC9BzuB,GAAM80I,EAAO90I,IAAM24I,EAAY,qBAAuB,cACtDt4I,MAAS,SAAWzD,KAAK+oC,KAAKjtC,EAAQ,GAAK,aAC3BkE,KAAK+oC,KAAKltC,EAAS,GAAK,uBACxCmgB,MAAS,iBAETsqF,EAAez0E,GAAkB,OACjCzuB,GAAM80I,EAAO90I,IAAM24I,EAAY,yBAA2B,kBAC1Dt4I,MAAS,SAAWzD,KAAK+oC,KAAKjtC,EAAQ,GAAK,aAC3BkE,KAAK+oC,KAAKltC,EAAS,GAAK,yBAU5C,OARA05B,EAAUgN,YAAY+jE,GACtBh1E,EAAIiR,YAAYhN,GAChBvQ,EAASssC,GAAeyB,aAAamlF,EAAO90I,GAAIpD,KAAK+oC,KAAoE,GAA9DmvG,EAAOnmI,QAAQjC,WAAWhU,MAAQo8I,EAAOz0I,MAAM+Y,cAAoB,EAAGxc,KAAK+oC,KAAqE,GAA/DmvG,EAAOnmI,QAAQjC,WAAWjU,OAASq8I,EAAOz0I,MAAM+Y,cAAoB,GAChNL,EAAUomB,YAAYvd,GACtBA,EAAOusC,WAAW,MAAMs7C,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACpDv7E,EAAIiR,YAAYvd,GAChB7I,EAAUomB,YAAYjR,GACtB/tB,KAAKoiB,gBAAgBu2C,cAAcg8E,EAAOnmI,QAAQ2D,SAAS,GAAGA,SAAS,GAAIsP,EAAQuQ,GAC5EjE,GAEXumH,EAAclkG,UAAUkoG,cAAgB,SAAU3D,EAAQyC,GACtD,IAAI7+I,EAAQo8I,EAAOnmI,QAAQjC,WAAWhU,MAClCD,EAASq8I,EAAOnmI,QAAQjC,WAAWjU,OASvC,OARK0H,KAAKg2I,aAAgBh2I,KAAK+1I,cAK3Bx9I,EAAQyH,KAAKg2I,YACb19I,EAASmE,KAAKmJ,IAAI5F,KAAK+1I,aAAcz9I,KALrCC,GAASyH,KAAKw3I,aAAa50I,KAAO5C,KAAKw3I,aAAa30I,MAAQ8xI,EAAOz0I,MAAM+Y,YACzE3gB,GAAU0H,KAAKw3I,aAAaz0I,IAAM/C,KAAKw3I,aAAa10I,OAAS6xI,EAAOz0I,MAAM+Y,aAMvE,IAAIqG,GAAK/mB,EAAOD,IAI3Bg8I,EAAclkG,UAAUu/B,iBAAmB,SAAU7hE,GACjD,IAAI9R,EACAD,EACA6zE,EACJ,IAAiC,IAA7B9hE,EAAEjS,KAAKykB,QAAQ,SAAiB,CAEhC,IAAI0pB,GADJ4lC,EAAW9hE,GACU+hE,eAAe,GAAG5lC,QACnCH,EAAQ8lC,EAASC,eAAe,GAAG9lC,QACvC/tC,EAAUguC,EAAQhqC,KAAKJ,QAAQ64I,UAC/B18I,EAAU+tC,EAAQ9pC,KAAKJ,QAAQ84I,gBAG/B18I,EAAU8R,EAAEm8B,QAAUjqC,KAAKJ,QAAQ64I,UACnC18I,EAAU+R,EAAEi8B,QAAU/pC,KAAKJ,QAAQ84I,WAEvC,OAAS1hJ,EAAG+E,EAAS9E,EAAG+E,IAE5Bs4I,EAAclkG,UAAU+xB,UAAY,SAAUr0D,EAAG+7B,IACzC7pC,KAAK24I,mBAAuB34I,KAAKuvG,gBAC9BvvG,KAAKuvG,eAAe1vG,GAAK,eAAiBG,KAAK24I,kBAAkB94I,KACpEG,KAAK24I,kBAAkB/8G,UAAUlP,OAAO,kBACxC1sB,KAAK24I,kBAAkBz4I,MAAMm7B,gBAAkB,GAC/Cr7B,KAAK24I,kBAAoB,MAE7B,IAAI94I,EAAKiO,EAAE9K,OAAOnD,GAAGkP,MAAM,cAAc,GACzC,GAAI/O,KAAKu0I,YAAY10I,GAAK,CACtB,IAAI+Y,EAAYoV,SAASC,eAAepuB,EAAK,cAC7C+Y,EAAUgjB,UAAUlQ,IAAI,kBACxB1rB,KAAK24I,kBAAoB//H,EAE7B9K,EAAEkkE,kBAENsiE,EAAclkG,UAAUgyB,QAAU,SAAU8N,GACxC,GAAIA,GAAOA,EAAIltE,OACX,GAA0B,eAAtBktE,EAAI0oE,WAAW/4I,GAAqB,CACpC,IAAID,EAAUouB,SAASC,eAAe,cAClCruB,EAAQg8B,UAAU+R,SAAS,wBAC3B/tC,EAAQ6pC,UAAY,sCACpBzb,SAASC,eAAe,aAAatoB,MAAQ,GAC7C3F,KAAK64I,cAAc,SAGtB,CACD,IAAIh5I,EAAKqwE,EAAIltE,OAAOnD,GAAGkP,MAAM,cAAc,GAC3C,GAAIlP,GAAMG,KAAKuvG,eAAgB,CAC3B,IAAIxvG,GAASmlE,SAAUllE,KAAKuvG,eAAe1vG,GAAIslE,SAAUtlE,GAEzDG,KAAKsmD,QADS,yBACQvmD,GACtBmwE,EAAI8B,oBAKpBsiE,EAAclkG,UAAU0oG,MAAQ,SAAU5oE,GACtC,IAAIz6B,EAAQz1C,KACZ,GAAIA,KAAK60I,aAAc,CACnB,IAAIkE,EAAY/4I,KACFguB,SAASC,eAAe,cAC9Bwb,UAAY,iDAChBymC,GAAoB,UAAZA,EAAIpzC,KAAmC,KAAhBozC,EAAI+F,SAM/Bj2E,KAAKg5I,OACL5oE,aAAapwE,KAAKg5I,OAEtBh5I,KAAKg5I,MAAQniG,WAAW,WAChBq5B,EAAIltE,kBAAkBi2I,mBACtBF,EAAUF,cAAc3oE,EAAIltE,OAAO2C,OACnC8vC,EAAMujG,MAAQ,OAEnB,MAbC9oE,EAAIltE,kBAAkBi2I,kBACtBj5I,KAAK64I,cAAc3oE,EAAIltE,OAAO2C,SAgB9C2uI,EAAclkG,UAAUyxB,UAAY,SAAUqO,GAC1C,IAAIrwE,EAAKqwE,EAAIltE,OAAOnD,GAAGkP,MAAM,cAAc,GAC3C,GAAI/O,KAAKuvG,eAAgB,CACrB,IAAI2pC,EAAYlrH,SAASC,eAAejuB,KAAKuvG,eAAe1vG,GAAK,cAC7DA,IAAOG,KAAKuvG,eAAe1vG,IAAMq5I,GACjCA,EAAUt9G,UAAUlP,OAAO,sBAE3B9T,EAAYoV,SAASC,eAAejuB,KAAKuvG,eAAe1vG,GAAK,iBAE7D+Y,EAAU1Y,MAAMm7B,gBAAkB,IAEtCr7B,KAAKuvG,eAAiB,KAE1B,GAAIvvG,KAAKu0I,YAAY10I,GAAK,CACtB,IAAI+Y,GAAAA,EAAYoV,SAASC,eAAepuB,EAAK,eACnC+7B,UAAUlQ,IAAI,qBACxB1rB,KAAKuvG,eAAiBvvG,KAAKu0I,YAAY10I,GACvCqwE,EAAI8B,mBAGZsiE,EAAclkG,UAAU4lC,QAAU,SAAU9F,GAIxC,GAAIA,GAAoB,WAAZA,EAAIpzC,IAAmB,CAC/B,IAAIl9B,EAJMI,KAIY62E,UAAuB,cACzCj3E,GAAWA,EAAQqf,aACnBrf,EAAQqf,WAAW8f,YAAYn/B,GANzBI,KAOE62E,UAAoB,gBAMxCy9D,EAAclkG,UAAU+oG,cAAgB,WAChCn5I,KAAKq1I,YACLr1I,KACK62E,UAAY,IAAIuiE,YAAUp5I,KAAKJ,SAChCy5I,WAAY,sBACZ7pC,OAAQxvG,KAAKwvG,OACb8pC,UAAWt5I,KAAKs5I,UAChBtnE,gBAAgB,EAChBunE,SAAUv5I,KAAKu5I,SACf78H,KAAM,SAAU3c,GACZ,IACImgB,EAASmpB,GAAatpC,EAAW,OAAG,eACxC,GAAImgB,GAAUA,EAAO0b,UAAU+R,SAAS,aAAc,CAElDztB,EAAkB,cAAE,GAAG02D,UAAUy4B,KAAKtvG,KAG9Cy5I,UAAY52I,KAAM5C,KAAK+3I,cAAc9nI,OAAOjZ,EAAG+L,IAAK/C,KAAK+3I,cAAc9nI,OAAOhZ,OAI1Fq9I,EAAclkG,UAAUkpG,UAAY,SAAUxrI,GAC1C,IAAIlO,EAAUI,KAAKwvG,OAAO,GACtB5vG,GACAA,EAAQglC,aAAa,YAAa5kC,KAAKJ,QAAQC,KAGvDy0I,EAAclkG,UAAUmpG,SAAW,SAAUzrI,GACpCu7B,GAAav7B,EAAE9K,OAAQ,cACxB0pB,SAAO5e,EAAE0hG,SAKjB8kC,EAAclkG,UAAUsnG,YAAc,SAAU/C,EAAQsC,EAAiB50G,EAAIC,EAAI/pC,EAAOD,EAAQ+/I,GAC5F,GAAI1D,aAAkBhhI,GAAW,CAC7B,IAAInF,EAAUmmI,EAAOnmI,QACrBmmI,EAAOnmI,QAAUyoI,EAAgB9kI,SAAS,GAI1C,IAAK,IAHDxW,EAAQg5I,EAAOh4H,MAAM0lB,EAAIC,EAAI/pC,EAAOD,EAAQ2+I,EAAgB9kI,SAAS,IACrEhK,EAAO5P,EAAQ,EAAI0+I,EAAgB9kI,SAAS,GAAGA,SAAS,GAAGpW,QAAUJ,EAAM3E,EAAI,EAC/E4zE,EAAOtyE,EAAS,EAAI2+I,EAAgB9kI,SAAS,GAAGA,SAAS,GAAGnW,QAAUL,EAAM1E,EAAI,EAC3E4F,EAAK,EAAGohB,EAAKg5H,EAAgB9kI,SAAS,GAAGA,SAAUtV,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAC9E,IAAI0R,EAAQ0P,EAAGphB,GACf0R,EAAMxS,SAAWoM,EACjBoG,EAAMvS,SAAW4uE,EACjBr8D,EAAM2lC,YAAa,EAEvBygG,EAAOnmI,QAAUA,OAEhB,GAAImmI,EAAOv2I,iBAAiBm5B,IAAav3B,KAAKgnD,WAAY,CACvDx4C,EAAUmmI,EAAOnmI,QACrBmmI,EAAOnmI,QAAUyoI,EACjBA,EAAgB9kI,SAAS,GAAG5Z,MAAQA,EACpC0+I,EAAgB9kI,SAAS,GAAG7Z,OAASA,EACrC0H,KAAKgnD,WAAWymD,YAAal1G,MAAOA,EAAOD,OAAQA,GAAUq8I,EAAQA,EAAQ,MAC7EA,EAAOnmI,QAAUA,OAGjB,GAAImmI,EAAOxiI,SAAU,CACjB,IAAI8M,EAAa01H,EAAOxiI,SACpB6xB,EAAI,EACJC,EAAI,EACR,IAAKo0G,EAGD,IAAK,IAFD93I,OAAO,EACPqY,OAAY,EACPliB,EAAI,EAAGA,EAAIuoB,EAAWxoB,OAAQC,KACnCkiB,EAAYq+H,EAAgB9kI,SAAS,GAAGA,SAASzb,MAEzCkiB,EAAUzG,SAAS,GAAGA,UACtBnS,KAAKy5I,aAAa7gI,GAEtBrY,EAAOP,KAAKu0I,YAAY37H,EAAU/Y,IAClC+Y,EAAUrgB,MAAQgI,EAAKhI,MACvBqgB,EAAUtgB,OAASiI,EAAKjI,OACxBsgB,EAAUyG,QAAQ,IAAIC,IACtB1G,EAAU2G,QAAQ3G,EAAUzG,SAAS,GAAGqN,cAQpD,GAJAwkB,EAAIzrC,EAAQ0+I,EAAgB9kI,SAAS,GAAGqN,YAAYjnB,MACpD0rC,EAAI3rC,EAAS2+I,EAAgB9kI,SAAS,GAAGqN,YAAYlnB,OACrD2+I,EAAgB9kI,SAAS,GAAGkN,QAAQ,IAAIC,IACxC23H,EAAgB9kI,SAAS,GAAGoN,QAAQ03H,EAAgB9kI,SAAS,GAAGqN,cAC3D64H,EAEI,CAAA,IADDlmI,OAAW,EACf,IAASzb,EAAI,EAAGA,EAAIuoB,EAAWxoB,OAAQC,KACnCyb,EAAW8kI,EAAgB9kI,SAAS,GAAGA,SAASzb,MAExCyb,EAASA,SAAS,GAAGA,UACrBnS,KAAK05I,cAAcvnI,EAAU6xB,EAAGC,EAAG0wG,GAEvC30I,KAAK25I,WAAWxnI,EAAU6xB,EAAGC,EAAG0wG,IAI5C,GAAI0D,EAAS,CACL93I,OAAO,EAIN,IAHDszH,OAAa,EACbC,OAAc,EAElB,IADI3hH,OAAW,EACNzb,EAAI,EAAGA,EAAIuoB,EAAWxoB,OAAQC,IACnC6J,EAAOP,KAAKu0I,YAAYt1H,EAAWvoB,IACnCm9H,EAAat7H,EAAQo8I,EAAOnmI,QAAQ2D,SAAS,GAAGqN,YAAYjnB,MAC5Du7H,EAAcx7H,EAASq8I,EAAOnmI,QAAQ2D,SAAS,GAAGqN,YAAYlnB,QAC9D6Z,EAAW8kI,EAAgB9kI,SAAS,GAAGA,SAASzb,MAExCyb,EAASA,SAAS,GAAGA,UACrBnS,KAAK05I,cAAcvnI,EAAU0hH,EAAYC,EAAa6gB,GAAQ,GAElE30I,KAAK25I,WAAWxnI,EAAU0hH,EAAYC,EAAa6gB,GAAQ,IAGnEA,EAAOnmI,QAAQ2D,SAAS,GAAGkN,QAAQ,IAAIC,IACvCq1H,EAAOnmI,QAAQ2D,SAAS,GAAGoN,QAAQo1H,EAAOnmI,QAAQ2D,SAAS,GAAGqN,mBAIlE4iB,GAAa60G,EAAgB9kI,SAAS,GAAIkwB,EAAIC,EAAI20G,IAI9D3C,EAAclkG,UAAUspG,cAAgB,SAAU9gI,EAAWorB,EAAGC,EAAG0wG,EAAQ0D,GAEvE,IAAK,IADD9pI,EACK7X,EAAI,EAAGA,EAAIkiB,EAAUzG,SAAS1b,OAAQC,KAC3C6X,EAAQqK,EAAUzG,SAASzb,IAChByb,SAAS,GAAGA,SAInBnS,KAAK05I,cAAcnrI,EAAOy1B,EAAGC,EAAG0wG,EAAQ0D,GAHxCr4I,KAAK25I,WAAWprI,EAAOy1B,EAAGC,EAAG0wG,EAAQ0D,IAOjD/D,EAAclkG,UAAUqpG,aAAe,SAAU7gI,GAG7C,IAAK,IAFDghI,EACAr5I,EACK7J,EAAI,EAAGA,EAAIkiB,EAAUzG,SAAS1b,OAAQC,KAC3CkjJ,EAAiBhhI,EAAUzG,SAASzb,IAChByb,SAAS,GAAGA,SAQ5BnS,KAAKy5I,aAAaG,IAPlBr5I,EAAOP,KAAKu0I,YAAYqF,EAAe/5I,IACvC+5I,EAAerhJ,MAAQgI,EAAKhI,MAC5BqhJ,EAAethJ,OAASiI,EAAKjI,OAC7BshJ,EAAev6H,QAAQ,IAAIC,IAC3Bs6H,EAAer6H,QAAQq6H,EAAeznI,SAAS,GAAGqN,eAO9D80H,EAAclkG,UAAUupG,WAAa,SAAUprI,EAAOy1B,EAAGC,EAAG0wG,EAAQ0D,GAChE9pI,EAAMhW,MAAQgW,EAAMhW,MAAQyrC,EAC5Bz1B,EAAMjW,OAAUiW,EAAMjW,OAAS2rC,EAC/B11B,EAAMxS,QAAUs8I,EAAW9pI,EAAMxS,QAAUioC,EAAK2wG,EAAOz0I,MAAM+Y,YAAe1K,EAAMxS,QAAUioC,EAAK2wG,EAAOz0I,MAAM+Y,YAAc,EAC5H1K,EAAMvS,QAAUq8I,EAAW9pI,EAAMvS,QAAUioC,EAAK0wG,EAAOz0I,MAAM+Y,YAAe1K,EAAMvS,QAAUioC,EAAK0wG,EAAOz0I,MAAM+Y,YAAc,EAC5H1K,EAAM8Q,QAAQ,IAAIC,IAClB/Q,EAAMgR,QAAQhR,EAAM4D,SAAS,GAAGqN,cAEpC80H,EAAclkG,UAAUklG,gBAAkB,WACtCt1I,KAAK+0I,iBAAiBt+C,SACtBz2F,KAAKy1I,iBACLz1I,KAAK+0I,iBAAiBzkH,YAE1BgkH,EAAclkG,UAAUqlG,eAAiB,WACrC,IAAK,IAAI/+I,EAAI,EAAGA,EAAIsJ,KAAKwjC,SAAS/sC,OAAQC,IAAK,CAC3C,IAAImjJ,EAAW75I,KAAKwjC,SAAS9sC,GAC7BsJ,KAAK21I,YAAYkE,GACjB75I,KAAKu2I,cAAcsD,KAG3BvF,EAAclkG,UAAU0kG,cAAgB,WACpC,IAAIgF,EAAYxrH,GAAkB,OAASzuB,GAAIG,KAAKJ,QAAQC,GAAK,YACjEi6I,EAAUl1G,aAAa,QAAS,qCAChCk1G,EAAUrwG,UAAY,gBACtBzpC,KAAKJ,QAAQo/B,YAAY86G,GACzB,IAAIC,EAAUzrH,GAAkB,YAChCyrH,EAAQC,YAAc,gBACtBD,EAAQl6I,GAAK,YACbk6I,EAAQn1G,aAAa,QAAS,0BAC9Bm1G,EAAQtwG,UAAY,UACpBqwG,EAAU96G,YAAY+6G,GACtB,IAAIE,EAAO3rH,GAAkB,QAAUzuB,GAAI,aAAc4pC,UAAW,wCACpEqwG,EAAU96G,YAAYi7G,IAE1B3F,EAAclkG,UAAUyoG,cAAgB,SAAUlzI,GAC9C,IAEI6wI,EAFAZ,KACAh2I,EAAUouB,SAASC,eAAe,iBAGtC,GAAIruB,EACA,IAAK,IAAI4jB,EAAI5jB,EAAQuS,SAAS1b,OAAS,EAAG+sB,GAAK,EAAGA,IAC9C5jB,EAAQm/B,YAAYn/B,EAAQuS,SAASqR,IAI7C,IAAK,IAAI9sB,EAAI,EAAGA,EAAIsJ,KAAKwjC,SAAS/sC,OAAQC,IAEtC,IAAK,IADDkgJ,EAAqB52I,KAAKwjC,SAAS9sC,GAC9BL,EAAI,EAAGA,EAAIugJ,EAAmBnzG,QAAQhtC,OAAQJ,IAAK,CACxD,IAAI6pC,EAAO02G,EAAmBnzG,QAAQptC,GACxB,KAAVsP,IAAwE,IAAxDu6B,EAAKrgC,GAAGhJ,cAAcypB,QAAQ3a,EAAM9O,gBACpD++I,EAAY9+I,KAAKopC,GAI7B,IAAIg6G,EAAgB7pH,GAAYrwB,KAAKk6I,eAUrC,GATIA,IACAtE,EAAcsE,EAActE,QAG3Bh2I,IAEDA,EADA42I,EAAax2I,KAAKm6I,oBAAoB3D,IAItCZ,EAAYn/I,OAAS,EACrB,IAAK,IAAIoG,EAAK,EAAGu9I,EAAgBxE,EAAa/4I,EAAKu9I,EAAc3jJ,OAAQoG,IAAM,CAC3E,IAAI83I,EAASyF,EAAcv9I,GAC3BmD,KAAK82I,mBAAmBnC,EAAQ/0I,QAGnC,GAAc,KAAV+F,EAAc,CACnB,IAAI00I,EAAW/rH,GAAkB,OAASzuB,GAAM,WAAYK,MAAS,wCACrEm6I,EAASxkF,UAAY,sBACrBj2D,EAAQo/B,YAAYq7G,OAEnB,CACersH,SAASC,eAAe,cAC9Bwb,UAAY,sCACtBzpC,KAAK+0I,iBAAiB/0G,WAAW,KAGzCs0G,EAAclkG,UAAU+pG,oBAAsB,SAAU3D,GACpDA,EAAaloH,GAAkB,OAASzuB,GAAM,gBAAiBK,MAAS,gCACxEF,KAAKJ,QAAQo/B,YAAYw3G,GAMzB,OADAx2I,KAAK+0I,iBAAiBuF,SAHlBv3H,OAAQ,iBAAkBkyH,UAAU,EACpCh1I,QAAS,kBAEoC,GAC1Cu2I,GAKXlC,EAAclkG,UAAU8Y,WAAa,WACjC,IAAI6wC,EAAa11D,UAAQ21D,gBACrBC,EAAY51D,UAAQ61D,cACpBC,EAAY91D,UAAQ+1D,eAIxBK,eAAa/uE,IAAI1rB,KAAKJ,QAASm6F,EAAY/5F,KAAK6hE,UAAW7hE,MAC3Dy6F,eAAa/uE,IAAI1rB,KAAKJ,QAASu6F,EAAWn6F,KAAKmiE,UAAWniE,MAC1Dy6F,eAAa/uE,IAAI1rB,KAAKJ,QAASq6F,EAAWj6F,KAAKoiE,QAASpiE,MACxDy6F,eAAa/uE,IAAI1rB,KAAKJ,QALP,QAK0BI,KAAK84I,MAAO94I,MACrDy6F,eAAa/uE,IAAIsC,SALE,UAKsBhuB,KAAKg2E,QAASh2E,MAEvDA,KAAKm5I,iBAKT7E,EAAclkG,UAAU6Y,aAAe,WACnC,IAAI8wC,EAAa11D,UAAQ21D,gBACrBC,EAAY51D,UAAQ61D,cACpBC,EAAY91D,UAAQ+1D,eACN/1D,UAAQi2D,UAG1BG,eAAa/tE,OAAO1sB,KAAKJ,QAASm6F,EAAY/5F,KAAK6hE,WACnD44B,eAAa/tE,OAAO1sB,KAAKJ,QAASu6F,EAAWn6F,KAAKmiE,WAClDs4B,eAAa/tE,OAAO1sB,KAAKJ,QAASq6F,EAAWj6F,KAAKoiE,SAClDq4B,eAAa/tE,OAAO1sB,KAAKJ,QALV,QAK6BI,KAAK84I,OACjDr+C,eAAa/tE,OAAOsB,SALD,UAKyBhuB,KAAKg2E,UAErDllC,IACIoB,WAAS,MACVoiG,EAAclkG,UAAW,iBAAa,GACzCU,IACIoB,WAAS,SACVoiG,EAAclkG,UAAW,aAAS,GACrCU,IACIoB,WAAS,SACVoiG,EAAclkG,UAAW,cAAU,GACtCU,IACIuE,gBAAe++F,KAChBE,EAAclkG,UAAW,gBAAY,GACxCU,IACIoB,cACDoiG,EAAclkG,UAAW,qBAAiB,GAC7CU,IACIoB,cACDoiG,EAAclkG,UAAW,qBAAiB,GAC7CU,IACIoB,cACDoiG,EAAclkG,UAAW,yBAAqB,GACjDU,IACIoB,cACDoiG,EAAclkG,UAAW,mBAAe,GAC3CU,IACIoB,cACDoiG,EAAclkG,UAAW,oBAAgB,GAC5CU,IACIyH,WAAU31C,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAAMqyC,KACvDm/F,EAAclkG,UAAW,oBAAgB,GAC5CU,IACIoB,YAAS,IACVoiG,EAAclkG,UAAW,iBAAa,GACzCU,IACIyH,aAAY87F,KACbC,EAAclkG,UAAW,qBAAiB,GAC7CU,IACIoB,YAAS,IACVoiG,EAAclkG,UAAW,oBAAgB,GAC5CU,IACIoB,YAAS,IACVoiG,EAAclkG,UAAW,uBAAmB,GAC/CU,IACIoB,WAAS,aACVoiG,EAAclkG,UAAW,kBAAc,GAC1CU,IACIygE,WACD+iC,EAAclkG,UAAW,8BAA0B,GACtDU,IACIoB,cACDoiG,EAAclkG,UAAW,uBAAmB,GAC/CU,IACIoB,cACDoiG,EAAclkG,UAAW,4BAAwB,GAC7CkkG,GACT9nF,aC/0CEjc,GAAwC,WACxC,IAAIC,EAAgB,SAAUpd,EAAG5iB,GAI7B,OAHAggC,EAAgBtyB,OAAOuyB,iBAChBC,wBAA2BxX,OAAS,SAAU9F,EAAG5iB,GAAK4iB,EAAEsd,UAAYlgC,IACvE,SAAU4iB,EAAG5iB,GAAK,IAAK,IAAImgC,KAAKngC,EAAOA,EAAEo7B,eAAe+E,KAAIvd,EAAEud,GAAKngC,EAAEmgC,MACpDvd,EAAG5iB,IAE5B,OAAO,SAAU4iB,EAAG5iB,GAEhB,SAASogC,IAAO5wC,KAAK82B,YAAc1D,EADnCod,EAAcpd,EAAG5iB,GAEjB4iB,EAAEgd,UAAkB,OAAN5/B,EAAa0N,OAAO2yB,OAAOrgC,IAAMogC,EAAGR,UAAY5/B,EAAE4/B,UAAW,IAAIQ,IAV3C,GAaxCE,GAA0C,SAAUC,EAAY/tC,EAAQ85B,EAAKkU,GAC7E,IAA2H5d,EAAvH6d,EAAIC,UAAUz6C,OAAQsX,EAAIkjC,EAAI,EAAIjuC,EAAkB,OAATguC,EAAgBA,EAAO9yB,OAAOizB,yBAAyBnuC,EAAQ85B,GAAOkU,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBtjC,EAAIqjC,QAAQC,SAASN,EAAY/tC,EAAQ85B,EAAKkU,QACpH,IAAK,IAAIt6C,EAAIq6C,EAAWt6C,OAAS,EAAGC,GAAK,EAAGA,KAAS08B,EAAI2d,EAAWr6C,MAAIqX,GAAKkjC,EAAI,EAAI7d,EAAErlB,GAAKkjC,EAAI,EAAI7d,EAAEpwB,EAAQ85B,EAAK/uB,GAAKqlB,EAAEpwB,EAAQ85B,KAAS/uB,GAChJ,OAAOkjC,EAAI,GAAKljC,GAAKmQ,OAAOozB,eAAetuC,EAAQ85B,EAAK/uB,GAAIA,GA+B5DwsI,GAA0B,SAAUhpG,GAEpC,SAASgpG,EAAS3zG,EAAShnC,GACvB,IAAI61C,EAAQlE,EAAOkF,KAAKz2C,KAAM4mC,EAAShnC,IAAYI,KAiBnD,OAfAy1C,EAAM7pB,KAAO,SAEb6pB,EAAM51C,GAAK,WACX41C,EAAM+kG,WAAa,GACnB/kG,EAAM7iC,WAAa,KACnB6iC,EAAMwW,aAAe,KACrBxW,EAAMglG,UAAY,KAClBhlG,EAAM94B,MAAQ,KACd84B,EAAM4rB,UAAW,EACjB5rB,EAAMilG,cAAgB,EACtBjlG,EAAMpmB,iBAAmB,EACzBomB,EAAMlmB,eAAiB,EACvBkmB,EAAMl/B,SACNk/B,EAAM4Q,OAAQ,EACd5Q,EAAMl/B,OAAUhe,MAAOk9C,EAAMl9C,MAAOD,OAAQm9C,EAAMn9C,QAC3Cm9C,EAy0BX,OA51BAlF,GAAUgqG,EAAUhpG,GA0BpBgpG,EAASnqG,UAAUsZ,kBAAoB,SAAUC,EAASC,GACtD,IACK,IAAI/sD,EAAK,EAAGohB,EAAKC,OAAOC,KAAKwrC,GAAU9sD,EAAKohB,EAAGxnB,OAAQoG,IAAM,CAE9D,OADWohB,EAAGphB,IAEV,IAAK,WACDmD,KAAK26I,UAAUhxF,EAAQloD,UACvB,MACJ,IAAK,QACL,IAAK,SACDzB,KAAK46I,eACL56I,KAAK26I,UAAU36I,KAAKyB,aASpC84I,EAASnqG,UAAUoZ,eAAiB,WAEhC,OAAOxpD,KAAKypD,cADK,YAMrB8wF,EAASnqG,UAAU4Y,UAAY,WAC3BhpD,KAAKJ,QAAQM,MAAMq+D,WAAa,cAChCv+D,KAAKipD,eACLjpD,KAAKkpD,cAETqxF,EAASnqG,UAAU+Y,OAAS,WACxBnpD,KAAKoiB,gBAAkB,IAAIm1C,GAAgBv3D,KAAKJ,QAAQC,GAAI,IAAI00D,IAAe,GAC/Ev0D,KAAK46I,eACL56I,KAAK26I,UAAU36I,KAAKyB,WAExB84I,EAASnqG,UAAUmgC,aAAe,SAAU0wB,GAQxC,OANIA,EAAK3iG,WAAWgiB,QAAQ,MAAQ,GAAK2gF,EAAK3iG,WAAWgiB,QAAQ,KAAO,EAC7D2gF,EAAK3iG,WAGL2iG,EAAK3iG,WAAa,MAIjCi8I,EAASnqG,UAAUwqG,aAAe,SAAUh0G,GACxC,IAAInlB,EAASuM,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,WAClD4hB,IACDA,EAAS6M,GAAkB,UAC3BtuB,KAAKJ,QAAQo/B,YAAYvd,IAQ7BwnB,GAAiBxnB,GALb5hB,GAAMG,KAAKJ,QAAQC,GAAK,UAAW4Y,MAAS,UAC5CvY,MAAS,6BAA+BF,KAAKuwE,aAAavwE,KAAKuW,MAAMje,QAAU,WAC3E0H,KAAKuwE,aAAavwE,KAAKuW,MAAMhe,OAC7B,sDAGRyH,KAAKJ,QAAQglC,aAAa,WAAYiqE,OAAO,IAC7C7uG,KAAKJ,QAAQM,MAAMivF,SAAW,SAC9BnvF,KAAKJ,QAAQM,MAAM5H,OAASu2G,OAAO7uG,KAAKuW,MAAMje,QAC9C0H,KAAKJ,QAAQM,MAAM3H,MAAQs2G,OAAO7uG,KAAKuW,MAAMhe,OAC7CyH,KAAKyhB,OAASA,GAElB84H,EAASnqG,UAAUuqG,UAAY,SAAU96I,GACrC,IAAID,EAAUouB,SAASC,eAAepuB,GAEtC,GAAIG,KAAKkgB,OAAQ,CACb,IAAI26H,EAAY76I,KAAKkgB,OACrBlgB,KAAKkgB,OAAS,KACd26H,EAAUhwC,YAAY,KAAM7qG,KAAKJ,QAAQC,IACzCG,KAAK86I,eAAe96I,MAExBA,KAAKkgB,OAASlgB,KAAK+6I,WAAWn7I,EAPf,iBAQXI,KAAKkgB,QACLlgB,KAAKkgB,OAAO2qF,YAAY7qG,OAGhCu6I,EAASnqG,UAAU2qG,WAAa,SAAUn7I,EAAS0jC,GAG/C,IAAK,IAFDpkC,EACAgiD,EAAIthD,EAAQ0jC,GAAU7sC,OACjBC,EAAI,EAAGA,EAAIwqD,EAAGxqD,IACnB,GAAIw7B,GAAStyB,EAAQ0jC,GAAU5sC,GAAGkJ,QAAS,aAAc,CACrDV,EAAUU,EAAQ0jC,GAAU5sC,GAC5B,MAGR,OAAOwI,GAEXq7I,EAASnqG,UAAU6Y,aAAe,WAC9B,IAAIx3B,EAAQ4S,UAAQ21D,gBAChB1tC,EAAOjoB,UAAQ+1D,eAEfh1B,EAAS/gC,UAAQi2D,UAAY,eAAiB,aAC9CC,EAAgBl2D,UAAQi2D,UAGxBw6B,GAFazwF,UAAQC,KAAKjrB,KAEnBgrB,UAAQ61D,eACnBO,eAAa/tE,OAAO1sB,KAAKJ,QAAS6xB,EAAOzxB,KAAK6hE,WAC9C44B,eAAa/tE,OAAO1sB,KAAKJ,QAAS0sD,EAAMtsD,KAAKmiE,WAC7Cs4B,eAAa/tE,OAAO1sB,KAAKJ,QAASk1H,EAAM90H,KAAKoiE,SAC7Cq4B,eAAa/tE,OAAO1sB,KAAKJ,QAASwlE,EAAQplE,KAAKg7I,iBAC/CvgD,eAAa/tE,OAAOiY,OAAQ,SAAU3kC,KAAKiwE,cAC3C,IAAIr3D,EAAYoV,SAASC,eAAejuB,KAAKyB,SAAW,WACpDmX,GACA6hF,eAAa/tE,OAAO9T,EAAW,SAAU5Y,KAAK63E,WAGtD0iE,EAASnqG,UAAU8Y,WAAa,WAC5B,IAAIz3B,EAAQ4S,UAAQ21D,gBAChB86B,EAAOzwF,UAAQ61D,cACf5tC,EAAOjoB,UAAQ+1D,eACfh1B,EAAS/gC,UAAQi2D,UAAY,eAAiB,aAC9CC,EAAgBl2D,UAAQi2D,UACXj2D,UAAQC,KAAKjrB,KAE9BohF,eAAa/uE,IAAI1rB,KAAKJ,QAAS6xB,EAAOzxB,KAAK6hE,UAAW7hE,MACtDy6F,eAAa/uE,IAAI1rB,KAAKJ,QAAS0sD,EAAMtsD,KAAKmiE,UAAWniE,MACrDy6F,eAAa/uE,IAAI1rB,KAAKJ,QAASk1H,EAAM90H,KAAKoiE,QAASpiE,MACnDy6F,eAAa/uE,IAAI1rB,KAAKJ,QAASwlE,EAAQplE,KAAKg7I,gBAAiBh7I,MAC7Dy6F,eAAa/uE,IAAIiZ,OAAQ,SAAU3kC,KAAKiwE,aAAcjwE,MACtD,IAAI4Y,EAAYoV,SAASC,eAAejuB,KAAKyB,SAAW,WACpDmX,GACA6hF,eAAa/uE,IAAI9S,EAAW,SAAU5Y,KAAK63E,SAAU73E,OAS7Du6I,EAASnqG,UAAU26D,eAAiB,SAAUxV,GAC1CA,EAAK9zE,OAASzhB,KAAKyhB,OACnB,IAAI4pC,EAAIr9B,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAK,QAC7CwrD,GACAA,EAAEpsC,WAAW8f,YAAYssB,GAE7B,IAMI9gB,EAAMrB,GAAiB,OALvBrpC,GAAIG,KAAKyhB,OAAO5hB,GAAK,OACrBg8B,QAAS,MACTo/G,MAAO,+BACPxiI,MAAS,iBAGbzY,KAAKuqC,IAAMA,EACXgrD,EAAKhrD,IAAMA,EACXgrD,EAAK9zE,OAAOud,YAAYuL,GACxB,IACI3qC,EADMouB,SAASC,eAAejuB,KAAKJ,QAAQC,IAE3Cq7I,EAASt7I,EAAQmwB,YACjBorH,EAAUv7I,EAAQowB,aAClBorH,EAAQx7I,EAAQ20B,wBAEhB8mH,EAAW12G,OAAO02G,QAAU,GAAuB,EAAlB12G,OAAO02G,QAAe12G,OAAO02G,QAC9DC,EAAW32G,OAAO22G,QAAU,GAAuB,EAAlB32G,OAAO22G,QAAe32G,OAAO22G,QACnD,IAAXJ,IACAA,EAASz+I,KAAKymC,MAAQyB,OAAO42G,WAAaF,EAAW5+I,KAAKymC,MAAMk4G,EAAMx4I,QAE1D,IAAZu4I,IACAA,EAAU1+I,KAAKymC,MAAQyB,OAAO62G,YAAcF,EAAW7+I,KAAKymC,MAAMk4G,EAAMr4I,OAE5EwnC,EAAI3F,aAAa,QAASiqE,OAAOqsC,IACjC3wG,EAAI3F,aAAa,SAAUiqE,OAAOssC,IAClCn7I,KAAKuW,MAAMhe,MAAQ2iJ,EACnBl7I,KAAKuW,MAAMje,OAAS6iJ,EACpB,IAAI5gI,EACJ,IAAKg7E,EAAKsM,gBAAiB,CACvBtM,EAAKsM,gBAAkBvzE,GAAkB,UACzBN,SAASC,eAAejuB,KAAKJ,QAAQC,IACrD01F,EAAK5S,aAAe50B,GAAeyB,aAAaxvD,KAAKJ,QAAQC,GAAK,gBAAiBG,KAAKuW,MAAMhe,MAAOyH,KAAKuW,MAAMje,QAChHi9F,EAAK5S,aAAa/9C,aAAa,QAAS,0CACxC2wD,EAAKsM,gBAAgB7iE,YAAYu2D,EAAK5S,cACtC4S,EAAK9zE,OAAOud,YAAYu2D,EAAKsM,iBAEjCtnF,GACI1a,GAAMG,KAAKJ,QAAQC,GAAK,oBACxBK,MAAS,SAAWF,KAAKuW,MAAMhe,MAAQ,cAAgByH,KAAKuW,MAAMje,OAAS,yCAE/E2wC,GAAiBssD,EAAKsM,gBAAiBtnF,GACvCva,KAAKy7I,gBAAgBlmD,EAAK9zE,QAC1BzhB,KAAKwiG,kBAAkBjN,EAAK9zE,OAAQ8zE,GACpCv1F,KAAK07I,qBAAqBnmD,IAG9BglD,EAASnqG,UAAU0qG,eAAiB,SAAUvlD,GAC1C,IAAIhrD,EAAMvc,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAK,QACnDG,KAAKyhB,OAAOsd,YAAYwL,GACxB,IAAIvY,EAAYhE,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,cAC1DG,KAAKyhB,OAAOsd,YAAY/M,GACxB,IAAI2wD,EAAe30D,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,qBAC7DG,KAAKyhB,OAAOsd,YAAY4jD,GACxB4S,EAAKsM,gBAAkB,KACvBtM,EAAK5S,aAAe,MAExB43D,EAASnqG,UAAUqrG,gBAAkB,SAAUh6H,GAC3C,IAAIuQ,EAAY1D,GAAkB,OAC9BzuB,GAAMG,KAAKJ,QAAQC,GAAK,aAAc4Y,MAAS,eAC/CvY,MAAS,4DAMTy7I,EAAUrtH,GAAkB,OAH5BzuB,GAAMG,KAAKJ,QAAQC,GAAK,iBACxBK,MAAS,wCAKb,OAFA8xB,EAAUgN,YAAY28G,GACtBl6H,EAAOud,YAAYhN,GACZA,GAEXuoH,EAASnqG,UAAUoyD,kBAAoB,SAAU/gF,EAAQ8zE,GACrD,IAAIyN,EAAiBhjG,KAAKkgB,OAAOshF,UAAUxhG,KAAKJ,QAAQC,GAAK,mBAAoBG,KAAKuW,MAAMhe,MAAOyH,KAAKuW,MAAMje,QAC1G+kE,EAAcn0B,GAAiB,KAAOrpC,GAAMG,KAAKJ,QAAQC,GAAK,iBAClEmjG,EAAehkE,YAAYq+B,GAC3Bk4B,EAAKsM,gBAAgB7iE,YAAYgkE,GACjC55D,GAAgB45D,GAAkBvqF,MAAS,oBAE/C8hI,EAASnqG,UAAUsrG,qBAAuB,SAAUnmD,GAChD,IAAIhrD,EAAMvc,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAK,gBAC/C0qC,GACAA,EAAItrB,WAAW8f,YAAYwL,GAU/BA,EAAMrB,GAAiB,OAPnBrpC,GAAIG,KAAKyhB,OAAO5hB,GAAK,eACrBg8B,QAAS,MACTo/G,MAAO,+BACP/6I,MAAS,oEACT3H,MAAOyH,KAAKuW,MAAMhe,MAClBD,OAAQ0H,KAAKuW,MAAMje,SAGvBi9F,EAAK9zE,OAAOud,YAAYuL,GACxB,IAAIqxG,EAAM1yG,GAAiB,KAAOrpC,GAAMG,KAAKJ,QAAQC,GAAK,iBAAkBK,MAAS,wBACrFqqC,EAAIvL,YAAY48G,GAChB,IAAIvvI,EAAO68B,GAAiB,QACxBnwB,KAAQ,cAAexgB,MAAS,OAAQD,OAAU,OAAQmgB,MAAS,mBACnE5Y,GAAMG,KAAKyhB,OAAO5hB,GAAK,qBAE3BwM,EAAKu4B,aAAa,QAAS,2BAC3Bg3G,EAAI58G,YAAY3yB,GAChB,IACIg/C,EAAIniB,GAAiB,KAAOrpC,GAAMG,KAAKyhB,OAAO5hB,GAAK,iBAAkBK,MAAS,uBAClF07I,EAAI58G,YAAYqsB,GAChB,IAAIwwF,EAAY3yG,GAAiB,QAAUrpC,GAAMG,KAAKyhB,OAAO5hB,GAAK,eAAgBkZ,KAAQ,gBAC1FsyC,EAAErsB,YAAY68G,GACd77I,KAAK87I,qBAAqB,OAAQzwF,GAClCrrD,KAAK87I,qBAAqB,QAASzwF,GACnCrrD,KAAK87I,qBAAqB,MAAOzwF,GACjCrrD,KAAK87I,qBAAqB,SAAUzwF,GACpCrrD,KAAK87I,qBAAqB,UAAWzwF,GACrCrrD,KAAK87I,qBAAqB,WAAYzwF,GACtCrrD,KAAK87I,qBAAqB,aAAczwF,GACxCrrD,KAAK87I,qBAAqB,cAAezwF,IAE7CkvF,EAASnqG,UAAU0rG,qBAAuB,SAAUziI,EAAM6G,GAC5ClgB,KAAKuqC,IAAf,IACInsC,EAOAy9I,EAAY3yG,GALZ9qC,EADS,QAATib,GAA2B,WAATA,GAA8B,UAATA,GAA6B,SAATA,EACnD,OAGA,UAE8BxZ,GAAMG,KAAKyhB,OAAO5hB,GAAK,UAAYwZ,IAC7E6G,EAAO8e,YAAY68G,GACnB,IAAIE,EAAY7yG,GAAiB9qC,GAC7ByB,GAAMG,KAAKyhB,OAAO5hB,GAAKwZ,EAAMZ,MAAS,kBAAmBM,KAAQ,gBAErEmH,EAAO8e,YAAY+8G,IAEvBxB,EAASnqG,UAAU4rG,wBAA0B,WACzC,IAAIl5E,EAAO9iE,KAAKisD,aAAaj1D,EAAIgJ,KAAKy6I,UAAUzjJ,EAC5C+rE,EAAO/iE,KAAKisD,aAAah1D,EAAI+I,KAAKy6I,UAAUxjJ,EAC5CiqB,EAAO,IAAI5B,GACf4B,EAAK3oB,MAAQ,EACb2oB,EAAK5oB,OAAS,EACd,IAAItB,EAAI,EACJC,EAAI,EAGR,OAAQ+I,KAAKi8I,iBACT,IAAK,OACD/6H,EAAK3oB,OAASuqE,EACd5hD,EAAK5oB,QAAUwqE,EAAO9iE,KAAK06I,cAC3B1jJ,EAAI8rE,EACJ7rE,EAAI6rE,EAAO9iE,KAAK06I,cAChBzjJ,GAAK,EACL,MACJ,IAAK,QACDiqB,EAAK3oB,OAASuqE,EACd5hD,EAAK5oB,QAAUwqE,EAAO9iE,KAAK06I,cAC3BzjJ,EAAI6rE,EAAO9iE,KAAK06I,cAChBzjJ,IAAM,EACN,MACJ,IAAK,MACDiqB,EAAK5oB,QAAUyqE,EACf7hD,EAAK3oB,OAASwqE,EAAO/iE,KAAK06I,cAC1BzjJ,EAAI8rE,EACJ/rE,EAAI+rE,EAAO/iE,KAAK06I,cAChB1jJ,GAAK,EACL,MACJ,IAAK,SACDkqB,EAAK5oB,QAAUyqE,EACf7hD,EAAK3oB,OAASwqE,EAAO/iE,KAAK06I,cAC1B1jJ,EAAI+rE,EAAO/iE,KAAK06I,cAChB1jJ,IAAM,EACN,MACJ,IAAK,UACGyF,KAAK6G,IAAIy/D,GAAQtmE,KAAK6G,IAAIw/D,GAC1BA,EAAOC,EAAO/iE,KAAK06I,cAGnB33E,EAAOD,EAAO9iE,KAAK06I,cAEvBx5H,EAAK3oB,OAASuqE,EACd5hD,EAAK5oB,QAAUyqE,EACf/rE,EAAI8rE,EACJ7rE,EAAI8rE,EACJ,MACJ,IAAK,WACGtmE,KAAK6G,IAAIy/D,GAAQtmE,KAAK6G,IAAIw/D,GAC1BA,GAAQC,EAAO/iE,KAAK06I,cAGpB33E,GAASD,EAAO9iE,KAAK06I,cAEzBzjJ,EAAI8rE,EACJ7hD,EAAK3oB,OAASuqE,EACd5hD,EAAK5oB,QAAUyqE,EACf,MACJ,IAAK,aACGtmE,KAAK6G,IAAIy/D,GAAQtmE,KAAK6G,IAAIw/D,GAC1BA,GAAQC,EAAO/iE,KAAK06I,cAGpB33E,GAAQD,EAAO9iE,KAAK06I,cAExB1jJ,EAAI8rE,EACJ5hD,EAAK3oB,OAASuqE,EACd5hD,EAAK5oB,QAAUyqE,EACf,MACJ,IAAK,cACGtmE,KAAK6G,IAAIy/D,GAAQtmE,KAAK6G,IAAIw/D,GAC1BA,EAAOC,EAAO/iE,KAAK06I,cAGnB33E,EAAOD,EAAO9iE,KAAK06I,cAEvBx5H,EAAK3oB,OAASuqE,EACd5hD,EAAK5oB,QAAUyqE,EAGvB/iE,KAAKk8I,aAAallJ,EAAGC,EAAGiqB,OA1EpB8iB,OACAC,IA2ERs2G,EAASnqG,UAAU8rG,aAAe,SAAUp5E,EAAMC,EAAM7hD,EAAM3oB,EAAOD,GACjE,IAAItB,EACAC,EACAuK,EAEA6K,EADMrM,KAAKJ,QAAQwsD,qBAAqB,OAAO,GACpCn+B,eAAe,UAC9B,GAAI/M,EAEAlqB,GADAwK,EAAS6K,EAAKw4B,WACH7tC,EAAI8rE,EACf7rE,EAAIuK,EAAOvK,EAAI8rE,EACfxqE,EAAQiJ,EAAOjJ,MAAQ2oB,EAAK3oB,MAC5BD,EAASkJ,EAAOlJ,OAAS4oB,EAAK5oB,WAE7B,CACD,IAAI6jJ,EAEAA,EADAn8I,KAAKisD,aAAaj1D,EAAIgJ,KAAK4S,WAAW5b,EAC7BgJ,KAAKisD,aAAaj1D,EAAIgJ,KAAKy6I,UAAUzjJ,EAGrCgJ,KAAKy6I,UAAUzjJ,EAAIgJ,KAAKisD,aAAaj1D,EAElD,IAAIolJ,EAEAA,EADAp8I,KAAKisD,aAAah1D,EAAI+I,KAAK4S,WAAW3b,EAC7B+I,KAAKisD,aAAah1D,EAAI+I,KAAKy6I,UAAUxjJ,EAGrC+I,KAAKy6I,UAAUxjJ,EAAI+I,KAAKisD,aAAah1D,EAI9CwF,KAAK6G,IAAI84I,GAAU3/I,KAAK6G,IAAI64I,GAC5BA,EAASn8I,KAAK06I,cAAgB0B,EAK9BA,EAASD,EAASn8I,KAAK06I,cAI3Bl5I,EAAS6K,EAAKw4B,UACd7tC,EAAMgJ,KAAK4S,WAAW5b,EAAIgJ,KAAKisD,aAAaj1D,EACxCwK,EAAOxK,EAAImlJ,EAAS36I,EAAOxK,EAC/BC,EAAM+I,KAAK4S,WAAW3b,EAAI+I,KAAKisD,aAAah1D,EAAKuK,EAAOvK,EAAImlJ,EAAS56I,EAAOvK,EAC5EsB,EAAQiJ,EAAOjJ,MAAQ4jJ,EACvB7jJ,EAASkJ,EAAOlJ,OAAS8jJ,EAE7BhzG,GAAgBppC,KAAKwvG,QACjB3vG,GAAMG,KAAKwvG,OAAO3vG,GAAI7I,EAAKA,EAAGC,EAAKA,EACnCsB,MAASkE,KAAKmJ,IAAI,EAAGrN,GAAQD,OAAUmE,KAAKmJ,IAAI,EAAGtN,MAG3DiiJ,EAASnqG,UAAUisG,mBAAqB,SAAUrlJ,EAAGC,EAAGsB,EAAOD,GAG3D2wC,GAFWjb,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAK,iBACvC7I,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOkE,KAAKmJ,IAAI,EAAGrN,GAAQD,OAAQmE,KAAKmJ,IAAI,EAAGtN,KAExE0H,KAAKs8I,qBAAqB,MAAOtlJ,EAAI,EAAGC,EAAI,EAAGwF,KAAKmJ,IAAI,EAAGrN,EAAQ,IAAK,GACxEyH,KAAKs8I,qBAAqB,SAAUtlJ,EAAI,EAAGC,EAAIqB,EAAQmE,KAAKmJ,IAAI,EAAGrN,EAAQ,IAAK,GAChFyH,KAAKs8I,qBAAqB,OAAQtlJ,EAAI,EAAGC,EAAI,EAAG,EAAGwF,KAAKmJ,IAAI,EAAGtN,EAAS,KACxE0H,KAAKs8I,qBAAqB,QAAStlJ,EAAIuB,EAAOtB,EAAI,EAAG,EAAGwF,KAAKmJ,IAAI,EAAGtN,EAAS,KAC7E0H,KAAKs8I,qBAAqB,UAAWtlJ,EAAGC,EAAG,EAAG,GAC9C+I,KAAKs8I,qBAAqB,WAAYtlJ,EAAIuB,EAAOtB,EAAG,EAAG,GACvD+I,KAAKs8I,qBAAqB,aAActlJ,EAAGC,EAAIqB,EAAQ,EAAG,GAC1D0H,KAAKs8I,qBAAqB,cAAetlJ,EAAIuB,EAAOtB,EAAIqB,EAAQ,EAAG,IAEvEiiJ,EAASnqG,UAAUksG,qBAAuB,SAAUjjI,EAAMriB,EAAGC,EAAGsB,EAAOD,GACnE,IAAI0yD,EACAuxF,EACAC,EAAW,UAAYnjI,EACvBhN,EAAO2hB,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAK28I,GACvC,QAATnjI,GAA2B,WAATA,GAA8B,UAATA,GAA6B,SAATA,GAC3D2xC,GAASh0D,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOA,EAAOD,OAAQA,EAAQygB,KAAM,WACzDwjI,GAAcvlJ,EAAGA,EAAI,EAAGC,EAAGA,EAAI,EAAGsB,MAAiB,IAAVA,EAAc,EAAIA,EAAOD,OAAmB,IAAXA,EAAe,EAAIA,KAG7F0yD,GAASjuB,GAAI/lC,EAAGgmC,GAAI/lC,EAAG8W,EAAK,EAAGgL,KAAM,WACrCwjI,GAAcx/G,GAAI/lC,EAAGgmC,GAAI/lC,EAAG8W,EAAK,EAAGgL,KAAM,gBAE9CkwB,GAAiB58B,EAAM2+C,GAEvB/hB,GADgBjb,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAKwZ,GAC7BkjI,IAEhChC,EAASnqG,UAAUqsG,2BAA6B,WAC5C,IAAIC,EAAWvkJ,OAAO6H,KAAKuW,MAAMhe,OAC7BokJ,EAAYxkJ,OAAO6H,KAAKuW,MAAMje,QAC9BwqE,EAAO9iE,KAAKisD,aAAaj1D,EAAIgJ,KAAKy6I,UAAUzjJ,EAC5C+rE,EAAO/iE,KAAKisD,aAAah1D,EAAI+I,KAAKy6I,UAAUxjJ,EAM5CuK,GAJO/E,KAAKyK,IAAIlH,KAAKkgB,OAAOmC,SAASyN,cAAgB4sH,EAAU18I,KAAKkgB,OAAOmC,SAASwN,eAAiB8sH,GAC/F38I,KAAKJ,QAAQwsD,qBAAqB,OAAO,GACnCn+B,eAAejuB,KAAKyhB,OAAO5hB,GACrC,gBACaglC,WACf7tC,EAAIwK,EAAOxK,EAAI8rE,EACf7rE,EAAIuK,EAAOvK,EAAI8rE,EACfxqE,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OACpB0H,KAAKq8I,mBAAmBrlJ,EAAGC,EAAGsB,EAAOD,GACrC0H,KAAK48I,iBAAiB58I,KAAKkgB,OAAOmC,SAAS8N,YAAan5B,EAAGC,EAAGsB,EAAOD,EAAQ,OAEjFiiJ,EAASnqG,UAAUysG,mBAAqB,SAAU7lJ,EAAGC,EAAGsB,EAAOD,GAC3D,IAAIokJ,EAAWvkJ,OAAO6H,KAAKuW,MAAMhe,OAC7BokJ,EAAYxkJ,OAAO6H,KAAKuW,MAAMje,QAE9BwkJ,EAAavkJ,EAAQmkJ,EAAY18I,KAAKy2D,aACtCsmF,EAAczkJ,EAASqkJ,EAAa38I,KAAK02D,cACzCuT,EAAOxtE,KAAKmJ,IAAI5F,KAAKkgB,OAAOmC,SAASyN,cAAgBgtH,EAAW98I,KAAKkgB,OAAOmC,SAASwN,eAAiBktH,GAC1G,GAAI9yE,GAAQ,KAAQA,GAAQ,GAAI,CAE5BjqE,KAAK48I,iBAAiB3yE,EAAMjzE,EAAGC,EAAGsB,EAAOD,GAD3BtB,EAAG,EAAGC,EAAG,IAEvB,IAAIuK,EAASxB,KAAKg9I,mBAAmBh9I,KAAKkgB,OAAOmC,SAASgN,iBAAkBrvB,KAAKkgB,OAAOmC,SAASkN,eAAgBvvB,KAAKkgB,OAAOmC,SAAS8N,aAAa,GACnJ,GAAInwB,KAAKwvG,OAAQ,CACb,IACIytC,EADQj9I,KAAKJ,QAAQwsD,qBAAqB,QAAQ,IAClCvnB,UACpBrjC,EAAOxK,EAAIimJ,EAAQjmJ,EACnBwK,EAAOvK,EAAIgmJ,EAAQhmJ,EAEvB+I,KAAKq8I,mBAAmB76I,EAAOxK,EAAGwK,EAAOvK,EAAGuK,EAAOjJ,MAAOiJ,EAAOlJ,UAGzEiiJ,EAASnqG,UAAU4sG,mBAAqB,SAAUpsD,EAASC,EAAS1gE,EAAa+sH,GAC7E,IAAMl9I,KAAe,YAAKk9I,EAAQ,CAC9B,IAAIR,EAAWvkJ,OAAO6H,KAAKuW,MAAMhe,OAC7BokJ,EAAYxkJ,OAAO6H,KAAKuW,MAAMje,QAC9BqkB,EAAQlgB,KAAKyK,IAAIlH,KAAKy2D,aAAeimF,EAAU18I,KAAK02D,cAAgBimF,GACpEn7I,EAAS,IAAI8K,GACbtV,EAAIwK,EAAOxK,EAAK45F,EAAUzgE,EAAexT,EACzC1lB,EAAIuK,EAAOvK,EAAK45F,EAAU1gE,EAAexT,EAEzCpkB,EAAQiJ,EAAOjJ,MAASyH,KAAKkgB,OAAOmC,SAASyN,cAAgBK,EAAexT,EAC5ErkB,EAASkJ,EAAOlJ,OAAU0H,KAAKkgB,OAAOmC,SAASwN,eAAiBM,EAAexT,EACvE3c,KAAKkgB,OAAOmC,SAASyN,cAAgB9vB,KAAKkgB,OAAOmC,SAASwN,eACtE,GAAIqtH,EAAQ,CACR,IAAI7wI,EAAO,IAAIC,GAKf,OAJAD,EAAKrV,EAAIA,EACTqV,EAAKpV,EAAIA,EACToV,EAAK9T,MAAQA,EACb8T,EAAK/T,OAASA,EACP+T,EAEXrM,KAAKq8I,oBAAoBrlJ,GAAIC,EAAGsB,EAAOD,GAE3C,OAAO,MAEXiiJ,EAASnqG,UAAUwsG,iBAAmB,SAAU3yE,EAAMjzE,EAAGC,EAAGsB,EAAOD,EAAQoyE,GACvE,IAMIyyE,EACAC,EAPAV,EAAWvkJ,OAAO6H,KAAKuW,MAAMhe,OAC7BokJ,EAAYxkJ,OAAO6H,KAAKuW,MAAMje,QAG9Bs4F,EAAU55F,GAFDgJ,KAAKy2D,aAAeimF,GAENzyE,EACvB4mB,EAAU55F,GAFD+I,KAAK02D,cAAgBimF,GAEP1yE,EAGdjqE,KAAKkgB,OAAOmC,SAASorE,gBACrB,IAATxjB,GAAkC,QAApBjqE,KAAKw6I,aACnB2C,GAAQvsD,EAAU5wF,KAAKkgB,OAAOmC,SAASgN,iBACvC+tH,GAAQvsD,EAAU7wF,KAAKkgB,OAAOmC,SAASkN,gBAEnB,UAApBvvB,KAAKw6I,YAA8C,SAApBx6I,KAAKw6I,WACpCx6I,KAAKkgB,OAAOmC,SAAS4nD,KAAKA,EAAOjqE,KAAKkgB,OAAOmC,SAAS8N,YAAagtH,EAAMC,EAAM1yE,GAG/E1qE,KAAKkgB,OAAOusE,IAAI0wD,EAAMC,EAAM1yE,IAIpC6vE,EAASnqG,UAAUolD,WAAa,SAAUD,GACtC,IAAIh9F,EACAD,EACAkJ,EAASxB,KAAKkgB,OAAOmC,SAASorE,gBAClCl1F,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OAChB,IAEIqkB,EAFA+/H,EAAWvkJ,OAAO6H,KAAKuW,MAAMhe,OAC7BokJ,EAAYxkJ,OAAO6H,KAAKuW,MAAMje,QAE9B0rC,EAAIvnC,KAAKmJ,IAAIrN,EAAOyH,KAAKkgB,OAAOmC,SAASyN,eACzCmU,EAAIxnC,KAAKmJ,IAAItN,EAAQ0H,KAAKkgB,OAAOmC,SAASwN,gBAC9C7vB,KAAKy2D,aAAezyB,EAAIvnC,KAAKmJ,IAAIo+B,EAAI04G,EAAWC,EAAa14G,GAC7DjkC,KAAK02D,cAAgBzyB,EAAIxnC,KAAKmJ,IAAIq+B,EAAI04G,EAAYD,EAAY14G,GAC9DrnB,EAAQlgB,KAAKyK,IAAIw1I,EAAW14G,EAAG24G,EAAY14G,GAC3C,IAAIjS,EAAYhE,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,cAC1DmyB,EAAU9xB,MAAMm9I,gBAAkB,SAAW1gI,EAAQ,gBAAkBnb,EAAOxK,EAAI,OAAUwK,EAAOvK,EAAK,MACxG+6B,EAAU9xB,MAAM2F,UAAY,SAAW8W,EAAQ,gBAAkBnb,EAAOxK,EAAI,OAAUwK,EAAOvK,EAAK,MACxF+2B,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,kBAChD+kC,aAAa,YAAa,cAAiBpjC,EAAOxK,EAAI2lB,EAAS,KAAQnb,EAAOvK,EAAI0lB,EAAS,KAC/F3c,KAAKqvB,iBAAmB7tB,EAAOxK,EAAI2lB,EACnC3c,KAAKuvB,eAAiB/tB,EAAOvK,EAAI0lB,EACjC,IAAI8E,EAASuM,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,iBACnDw9D,EAAcj1B,GAAepoC,KAAKJ,QAAQC,IAC1C60G,EAAUjzF,EAAOusC,WAAW,MAC5BsvF,EAAcnlJ,OAAO6H,KAAKuW,MAAMhe,OAASyH,KAAKy2D,aAC9C8mF,EAAeplJ,OAAO6H,KAAKuW,MAAMje,QAAU0H,KAAK02D,cACpD4mF,EAAa7gJ,KAAKyK,IAAIo2I,EAAYC,GAClClgF,EAAYz4B,aAAa,YAAa,wBAEhC04G,EAAa,KACnB5oC,EAAQpL,aAAag0C,EAAY,EAAG,EAAGA,EAAY,EAAG,GACtD5oC,EAAQ/lD,UAAY,MACpB3uD,KAAKg9I,mBAAmBh9I,KAAKkgB,OAAOmC,SAASgN,iBAAkBrvB,KAAKkgB,OAAOmC,SAASkN,eAAgBvvB,KAAKkgB,OAAOmC,SAAS8N,cAG7HoqH,EAASnqG,UAAUynC,SAAW,SAAU3H,GACpC,GAAIlwE,KAAKqmD,MAAO,CACZ,IAAI7kD,EAASxB,KAAKg9I,mBAAmBh9I,KAAKkgB,OAAOmC,SAASgN,iBAAkBrvB,KAAKkgB,OAAOmC,SAASkN,eAAgBvvB,KAAKkgB,OAAOmC,SAAS8N,aAAa,GACnJnwB,KAAKq8I,oBAAoB76I,EAAOxK,GAAIwK,EAAOvK,EAAGuK,EAAOjJ,MAAOiJ,EAAOlJ,UAG3EiiJ,EAASnqG,UAAUsgC,aAAe,SAAUR,GACxC,GAAIh+C,GAASg+C,EAAIltE,0BACb,OAAQktE,EAAIltE,OAAOnD,IACf,KAAKG,KAAKyhB,OAAO5hB,GAAK,OAClBG,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,WAC3B,MACJ,KAAKrvC,KAAKyhB,OAAO5hB,GAAK,QAClBG,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,WAC3B,MACJ,KAAKrvC,KAAKyhB,OAAO5hB,GAAK,MAClBG,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,WAC3B,MACJ,KAAKrvC,KAAKyhB,OAAO5hB,GAAK,SAClBG,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,WAC3B,MACJ,KAAKrvC,KAAKyhB,OAAO5hB,GAAK,UAClBG,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,YAC3B,MACJ,KAAKrvC,KAAKyhB,OAAO5hB,GAAK,WAClBG,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,YAC3B,MACJ,KAAKrvC,KAAKyhB,OAAO5hB,GAAK,aAClBG,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,YAC3B,MACJ,KAAKrvC,KAAKyhB,OAAO5hB,GAAK,cAClBG,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,iBAKnCrvC,KAAKyhB,OAAOvhB,MAAMmvC,OAAS,WAGnCkrG,EAASnqG,UAAU+xB,UAAY,SAAU+N,GAIrC,GAHAlwE,KAAKqmD,OAAQ,EACbrmD,KAAK0wE,aAAaR,GAClBlwE,KAAKisD,aAAejsD,KAAKk0B,cAAcg8C,GACnClwE,KAAKw6I,WACL,OAAQx6I,KAAKw6I,YACT,IAAK,OACIx6I,KAAKqhE,UAAarhE,KAAK4S,WAAW5b,IAAMgJ,KAAKisD,aAAaj1D,GAAKgJ,KAAK4S,WAAW3b,IAAM+I,KAAKisD,aAAah1D,IACxG+I,KAAKw9I,aACLx9I,KAAKqhE,UAAW,GAEhBrhE,KAAKqhE,UACLrhE,KAAKk8I,eAET,MACJ,IAAK,QACIl8I,KAAKqhE,WACNrhE,KAAKw9I,aACLx9I,KAAKqhE,UAAW,GAEpBrhE,KAAKg8I,0BACL,MACJ,IAAK,OACIh8I,KAAK4S,WAAW5b,IAAMgJ,KAAKisD,aAAaj1D,GAAKgJ,KAAK4S,WAAW3b,IAAM+I,KAAKisD,aAAah1D,GAAM+I,KAAKqhE,YACjGrhE,KAAKqhE,UAAW,EAChBrhE,KAAKy8I,8BAKrBz8I,KAAKy6I,UAAYz6I,KAAKisD,cAE1BsuF,EAASnqG,UAAU4qG,gBAAkB,SAAU9qE,GAC3ClwE,KAAKqhE,UAAW,EAChBrhE,KAAKw6I,WAAa,GACdx6I,KAAKwvG,SACLxvG,KAAKwvG,OAAOvwF,WAAW8f,YAAY/+B,KAAKwvG,QACxCxvG,KAAKwvG,OAAS,MAElBxvG,KAAKqmD,OAAQ,EACbr4B,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAK,kBAAkBK,MAAM+6E,cAAgB,OAErFs/D,EAASnqG,UAAU6/B,aAAe,SAAUC,GACxC,IAAIz6B,EAAQz1C,KAYZ,OAXIA,KAAKmwE,UACLC,aAAapwE,KAAKmwE,UAEtBnwE,KAAKmwE,SAAWt5B,WAAW,WACvB,IACIukG,EADUptH,SAASC,eAAewnB,EAAM71C,QAAQC,IAChC00B,wBACpBkhB,EAAMl/B,MAAMhe,MAAQ6iJ,EAAM7iJ,MAC1Bk9C,EAAMl/B,MAAMje,OAAS8iJ,EAAM9iJ,OAC3Bm9C,EAAMmlG,eACNnlG,EAAMklG,UAAUllG,EAAMh0C,WACvB,KACI,GAGX84I,EAASnqG,UAAUyxB,UAAY,SAAUqO,GAOrC,GANIA,EAAIltE,OAAOnD,KAAOG,KAAKyhB,OAAO5hB,GAAK,iBACnCG,KAAKw6I,WAAa,QAElBtqE,EAAIltE,OAAOnD,KAAOG,KAAKyhB,OAAO5hB,GAAK,iBACnCG,KAAKw6I,WAAa,OAElBtoH,GAASg+C,EAAIltE,OAAQ,mBAErB,OADAhD,KAAKw6I,WAAa,QACVtqE,EAAIltE,OAAOnD,IACf,KAAKG,KAAKyhB,OAAO5hB,GAAK,OAClBG,KAAKi8I,gBAAkB,OACvB,MACJ,KAAKj8I,KAAKyhB,OAAO5hB,GAAK,QAClBG,KAAKi8I,gBAAkB,QACvB,MACJ,KAAKj8I,KAAKyhB,OAAO5hB,GAAK,MAClBG,KAAKi8I,gBAAkB,MACvB,MACJ,KAAKj8I,KAAKyhB,OAAO5hB,GAAK,SAClBG,KAAKi8I,gBAAkB,SACvB,MACJ,KAAKj8I,KAAKyhB,OAAO5hB,GAAK,UAClBG,KAAKi8I,gBAAkB,UACvB,MACJ,KAAKj8I,KAAKyhB,OAAO5hB,GAAK,WAClBG,KAAKi8I,gBAAkB,WACvB,MACJ,KAAKj8I,KAAKyhB,OAAO5hB,GAAK,aAClBG,KAAKi8I,gBAAkB,aACvB,MACJ,KAAKj8I,KAAKyhB,OAAO5hB,GAAK,cAClBG,KAAKi8I,gBAAkB,cAInCj8I,KAAK4S,WAAa5S,KAAKy6I,UAAYz6I,KAAKk0B,cAAcg8C,GACtDlwE,KAAK06I,cAAgB16I,KAAKkgB,OAAOmC,SAASyN,cAAgB9vB,KAAKkgB,OAAOmC,SAASwN,eAC1D7B,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAK,kBAC/CK,MAAM+6E,cAAgB,QAEzCs/D,EAASnqG,UAAUgyB,QAAU,SAAU8N,GACnClwE,KAAKisD,aAAejsD,KAAKk0B,cAAcg8C,GACxB/3E,OAAO6H,KAAKuW,MAAMhe,OACjBJ,OAAO6H,KAAKuW,MAAMje,QAClC,GAAI0H,KAAKw6I,WACL,GAAKx6I,KAAK4S,WAAW5b,IAAMgJ,KAAKisD,aAAaj1D,GAAKgJ,KAAK4S,WAAW3b,IAAM+I,KAAKisD,aAAah1D,GACtF,GAAwB,QAApB+I,KAAKw6I,iBAIL,GAAIx6I,KAAKwvG,OAAQ,CACb,IAAIhuG,EAAUxB,KAAKJ,QAAQwsD,qBAAqB,QAAQ,IAAKvnB,UAC7D7kC,KAAKi8I,gBAAkBj8I,KAAKi8I,iBAAmB,GAC/C,IAAIjlJ,EAAIwK,EAAOxK,EACXC,EAAIuK,EAAOvK,EACXsB,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OACkB,YAAzB0H,KAAKi8I,iBAA0D,aAAzBj8I,KAAKi8I,iBAC3B,eAAzBj8I,KAAKi8I,iBAAoCj8I,KAAKi8I,gBAClDj8I,KAAK68I,mBAAmB7lJ,EAAGC,EAAGsB,EAAOD,SAK7C,GAAI43E,EAAIltE,OAAOnD,KAAOG,KAAKyhB,OAAO5hB,GAAK,gBAAoC,WAAlBqwE,EAAIltE,OAAOnD,GAAiB,CAK7EtH,GADAiJ,EAHMxB,KAAKJ,QAAQwsD,qBAAqB,OAAO,GACvCn+B,eAAejuB,KAAKyhB,OAAO5hB,GACjC,gBACSglC,WACItsC,MACfD,EAASkJ,EAAOlJ,OACpB0H,KAAKqhE,UAAW,EAChBrhE,KAAKw6I,WAAa,MAClBx6I,KAAK68I,mBAAmB78I,KAAKisD,aAAaj1D,EAAIuB,EAAQ,EAAGyH,KAAKisD,aAAah1D,EAAIqB,EAAS,EAAGC,EAAOD,GAClG0H,KAAKqhE,UAAW,EAIxBrhE,KAAKwvG,SACLxvG,KAAKwvG,OAAOvwF,WAAW8f,YAAY/+B,KAAKwvG,QACxCxvG,KAAKwvG,OAAS,MAElBxvG,KAAKw6I,WAAa,GAClBx6I,KAAK4S,WAAa,KAClB5S,KAAKisD,aAAe,KACpBjsD,KAAKy6I,UAAY,KACjBz6I,KAAKwvG,OAAS,KACdxvG,KAAK06I,cAAgB,EACrB16I,KAAKi8I,gBAAkB,GACvBj8I,KAAKqhE,UAAW,EAChBrhE,KAAKqmD,OAAQ,EACbr4B,SAASC,eAAejuB,KAAKyhB,OAAO5hB,GAAK,kBAAkBK,MAAM+6E,cAAgB,OAErFs/D,EAASnqG,UAAUotG,WAAa,WAC5B,IAAInyF,EAAIrrD,KAAKJ,QAAQwsD,qBAAqB,OAAO,GAE7Cp1D,GADQgJ,KAAKkgB,OAAOmC,SAAS8N,YACzBnwB,KAAK4S,WAAW5b,GACpBC,EAAI+I,KAAK4S,WAAW3b,EACpBsB,EAAQ,EACRD,EAAS,EACb,GAAwB,UAApB0H,KAAKw6I,WAAwB,CAC7B,IAEIh5I,EAFO6pD,EACPp9B,eAAejuB,KAAKyhB,OAAO5hB,GAAK,gBAClBglC,UAClB7tC,EAAIwK,EAAOxK,EACXC,EAAIuK,EAAOvK,EACXsB,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OAEpB,IAAIszG,EAAgB1iE,GAAiB,QACjCrpC,GAAM,SAAU7I,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOA,EAAOD,OAAQA,EAClDygB,KAAQ,cAAe8tB,OAAU,OAAQ42G,mBAAoB,MAAOC,kBAAmB,eAEvEryF,EAAEp9B,eAAejuB,KAAKJ,QAAQC,GAAK,kBACzCm/B,YAAY4sE,GAC1B5rG,KAAKwvG,OAAS5D,GAElB2uC,EAASnqG,UAAUlc,cAAgB,SAAUg8C,GACzC,IAAIN,EACA7zE,EACAC,EACJ,IAAmC,IAA/Bk0E,EAAIr0E,KAAKykB,QAAQ,SAAiB,CAElC,IAAIwpB,GADJ8lC,EAAWM,GACUL,eAAe,GAAG9lC,QACnCC,EAAQ4lC,EAASC,eAAe,GAAG5lC,QACvCluC,EAAU+tC,EAAQ9pC,KAAKJ,QAAQ84I,WAC/B18I,EAAUguC,EAAQhqC,KAAKJ,QAAQ64I,eAG/B18I,EAAUm0E,EAAInmC,QACd/tC,EAAUk0E,EAAIjmC,QAElB,IAAI6lC,EAAe9vE,KAAKJ,QAAQ20B,wBAGhC,OAFAx4B,GAAoB+zE,EAAaltE,KACjC5G,GAAoB8zE,EAAa/sE,KACxB/L,EAAG+E,EAAUiE,KAAKqvB,iBAAkBp4B,EAAG+E,EAAUgE,KAAKuvB,iBAQnEgrH,EAASnqG,UAAUkZ,QAAU,WAIzB,GAHAtpD,KAAKipD,eACLjpD,KAAKupD,OAAO,cACZhY,EAAOnB,UAAUkZ,QAAQ7S,KAAKz2C,MAC1BguB,SAASC,eAAejuB,KAAKJ,QAAQC,IAAK,CAC1CG,KAAKJ,QAAQg8B,UAAUlP,OAAO,cAC9B,IAAIzsB,EAAU+tB,SAASC,eAAejuB,KAAKJ,QAAQC,GAAK,WACpDI,GACAD,KAAKJ,QAAQm/B,YAAY9+B,GAGjCD,KAAKkgB,OAAOwb,MAAMn1B,OAAOvG,KAAKkgB,OAAOwb,MAAMpb,QAAQtgB,KAAKJ,QAAQC,IAAK,GACrEG,KAAK6hG,gBAAkB,KACvB7hG,KAAKyhB,OAAS,KACdzhB,KAAKkgB,OAAS,MAKlBq6H,EAASnqG,UAAUiZ,cAAgB,WAI/B,MAAO,YAEXvY,IACIoB,WAAS,SACVqoG,EAASnqG,UAAW,aAAS,GAChCU,IACIoB,WAAS,SACVqoG,EAASnqG,UAAW,cAAU,GACjCU,IACIoB,WAAS,KACVqoG,EAASnqG,UAAW,gBAAY,GACnCU,IACIygE,WACDgpC,EAASnqG,UAAW,eAAW,GAC3BmqG,GACT/tF"}