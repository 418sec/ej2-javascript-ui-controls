{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/utility/uml-util.js","../src/diagram/interaction/container-interaction.js","../src/diagram/ruler/ruler.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/interaction/selector.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        // textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (actualObject.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                obj.width = helperObject.width;\n                obj.height = helperObject.height;\n            }\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n        if (this.mode === 'Canvas') {\n            for (var _f = 0, _g = this.views; _f < _g.length; _f++) {\n                var temp = _g[_f];\n                var view = void 0;\n                view = this.views[temp];\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n                }\n                else {\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                            var stackPanel = selectorModel.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        if (obj && ((obj.id === cell.id) || (cell.ids && obj.ids &&\n                            obj.ids[0] === cell.ids[0]))) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","topRight","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","ReadOnly","verticalAlignment","horizontalAlignment","initObject","nodes","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","maxHeight","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rect","Rect","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","canMeasurePath","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","measureElement","window","pathNode","getChildNode","setAttributeNS","bBox","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","measurePath","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","getHTMLLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","padding","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","canMeasure","textNodes","textWrapBounds","imageSource","stretch","measureImage","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","detail","which","isMultipleSelect","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","UndoRedo","innerNode","zIndex","updateConnectorEdges","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyManager","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","refreshCanvasDiagramLayer","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateGridContainer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","stackPanel","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","isLayout","existingBounds","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","annotationWrapper","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","portWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","removeChildNodes","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","measureElemnt","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","getNativeLayer","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"4dAIA,SAAgBA,EAAgBC,GAC5B,IACIC,EADAC,KAEAC,EAAkBC,EAAcJ,GACpC,GAAIG,EAAgBE,OAAS,EACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAgBE,OAAQC,IAAK,CAC7C,IAAIC,EAAKJ,EAAgBG,GACrBE,EAAO,GAEX,QADAA,EAAOD,EAAG,IACGE,eACT,IAAK,IACD,IAAKR,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMI,EAAGL,EAAGN,GAAIY,EAAGN,EAAGN,EAAI,KACrDA,GAAQ,EACK,MAATO,EACAA,EAAO,IAEO,MAATA,IACLA,EAAO,KAGf,MACJ,IAAK,IACL,IAAK,IACD,IAAKP,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMI,EAAGL,EAAGN,GAAIY,EAAGN,EAAGN,EAAI,KACrDA,GAAQ,EAEZ,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMI,EAAGL,EAAGN,KAE3C,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMK,EAAGN,EAAGN,KAE3C,MACJ,IAAK,IACDC,EAAWQ,MAAOC,QAASH,IAC3B,MACJ,IAAK,IACD,IAAKP,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MACPC,QAASH,EAAMM,GAAIP,EAAGN,GAAIc,GAAIR,EAAGN,EAAI,GAAIe,GAAIT,EAAGN,EAAI,GAAIgB,GAAIV,EAAGN,EAAI,GAAIW,EAAGL,EAAGN,EAAI,GAAIY,EAAGN,EAAGN,EAAI,KAEnGA,GAAQ,EAEZ,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMQ,GAAIT,EAAGN,GAAIgB,GAAIV,EAAGN,EAAI,GAAIW,EAAGL,EAAGN,EAAI,GAAIY,EAAGN,EAAGN,EAAI,KACnFA,GAAQ,EAEZ,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MAAOC,QAASH,EAAMM,GAAIP,EAAGN,GAAIc,GAAIR,EAAGN,EAAI,GAAIW,EAAGL,EAAGN,EAAI,GAAIY,EAAGN,EAAGN,EAAI,KACnFA,GAAQ,EAEZ,MACJ,IAAK,IACD,IAAKA,EAAI,EAAGA,EAAIM,EAAGF,OAAQJ,IACvBC,EAAWQ,MACPC,QAASH,EAAMU,GAAIX,EAAGN,GAAIkB,GAAIZ,EAAGN,EAAI,GAAImB,MAAOb,EAAGN,EAAI,GAAIoB,SAAUd,EAAGN,EAAI,GAC5EqB,MAAOf,EAAGN,EAAI,GAAIW,EAAGL,EAAGN,EAAI,GAAIY,EAAGN,EAAGN,EAAI,KAE9CA,GAAQ,GAM5B,OAAOC,EAGX,SAAgBE,EAAcJ,GAC1B,IAAIuB,EAAY,wCACZC,KACAC,KACAC,KACJH,EAAUI,UAAY,EACtB,IAAIC,GAAgB,EAEpB,IADAF,EAAQH,EAAUM,KAAK7B,GAChB0B,GACc,MAAbA,EAAM,GACNE,GACgB,EAEXF,EAAM,IACoB,OAA3BA,EAAM,GAAGjB,eACLe,EAAQnB,QACRoB,EAASf,KAAKc,GAElBC,EAASf,MAAM,MACfc,GAAWE,EAAM,GAAGI,UAAU,EAAG,MAG7BN,EAAQnB,QACRoB,EAASf,KAAKc,GAElBA,GAAWE,EAAM,KAErBE,GAAgB,IAGXJ,EAAQnB,SACTmB,MAECI,GACDJ,EAAQd,KAAKqB,OAAOL,EAAM,KAE9BE,GAAgB,GAEpBF,EAAQH,EAAUM,KAAK7B,GAK3B,OAHIwB,EAAQnB,QACRoB,EAASf,KAAKc,GAEXC,EAKX,SAAgBO,EAAiBC,EAAcC,EAAQC,GACnD,IAUIC,EACAC,EATAC,EAAO,GACPC,IAAY3B,EAHR,EAGeqB,EAAcpB,EAF7B,IAEuCD,EAHvC,EAG8CuB,EAAQF,EAAcpB,EAFpE,IAGFD,EAJE,EAIKuB,EAAOtB,EAHZ,EAGmBoB,IAAkBrB,EAJrC,EAI4CuB,EAAOtB,EAHnD,EAG0DqB,EAASD,IACrErB,EALE,EAKKuB,EAAQF,EAAcpB,EAJ3B,EAIkCqB,IAAYtB,EAL9C,EAKqDqB,EAAcpB,EAJnE,EAI0EqB,IAC5EtB,EANE,EAMIC,EALJ,EAKWqB,EAASD,IAAkBrB,EANtC,EAM4CC,EAL5C,EAKmDoB,IAEvDO,IAAa5B,EART,EAQgBuB,EAAOtB,EAPvB,IAOiCD,EARjC,EAQwCuB,EAAOtB,EAP/C,EAOsDqB,IAAYtB,EARlE,EAQwEC,EAPxE,EAO+EqB,IAAYtB,EAR3F,EAQiGC,EAPjG,IAQJ4B,EAAS,EAGbH,EAAO,IAAMC,EAAO,GAAG3B,EAAI,IAAM2B,EAAO,GAAG1B,EAC3C,IAAIP,EACJ,IAAKA,EAAI,EAAGA,EAAIiC,EAAOlC,OAAQC,GAAQ,EAEnCgC,GAAQ,KADRF,EAASG,EAAOjC,EAAI,IACCM,EAAI,IAAMwB,EAAOvB,EACtCwB,EAAOE,EAAOjC,EAAI,IAAMiC,EAAO,GAC/BD,GAAQ,IAAME,EAAQC,GAAQ7B,EAAI,IAAM4B,EAAQC,GAAQ5B,EAAI,IAAMwB,EAAKzB,EAAI,IAAMyB,EAAKxB,EACtF4B,IAEJ,OAAOH,EAKX,SAAgBI,EAAexC,GAC3B,IACIyC,EADAL,EAAO,GAEXA,EAAO,IAAMpC,EAAW,GAAGU,EAAI,IAAMV,EAAW,GAAGW,EACnD,IAAIP,EACJ,IAAKA,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IAE/BgC,GAAQ,KADRK,EAAMzC,EAAWI,IACCM,EAAI,IAAM+B,EAAI9B,EAGpC,OADAyB,GAAQ,IAIZ,SAAgBM,EAAsB1C,GAClC,IAAI2C,EACAC,EACAhC,EACAC,EACAC,EACAC,EACAL,EACAC,EACAR,EACAC,EAGAyC,KACJ,IAAKnC,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGD,EAASH,EAAWG,OAAQC,EAAID,IAAUC,EAAG,CACnE,IACIqC,EADMzC,EAAWI,GAEjBE,EAAO,GACXA,EAAOmC,EAAIhC,QACP,OAAQgC,IACR5B,EAAK4B,EAAI5B,IAET,OAAQ4B,IACR1B,EAAK0B,EAAI1B,IAET,OAAQ0B,IACR7B,EAAK6B,EAAI7B,IAET,OAAQ6B,IACR3B,EAAK2B,EAAI3B,IAET,MAAO2B,IACP/B,EAAI+B,EAAI/B,GAER,MAAO+B,IACP9B,EAAI8B,EAAI9B,GAEZ,IAAImC,EAAOD,EAASA,EAAS1C,OAAS,GACtC,OAAQG,GACJ,IAAK,IACDuC,EAASrC,MAAOC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,IACvC,MACJ,IAAK,IACDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIlC,EAAGA,EAAGC,EAAGA,IACvD,MACJ,IAAK,IACDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIlC,EAAGA,EAAGC,EAAGiC,IACvD,MACJ,IAAK,IACDC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIlC,EAAGiC,EAAIhC,EAAGA,IACxD,MACJ,IAAK,IACDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIhC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIL,EAAGA,EAAGC,EAAGA,IACvF,MACJ,IAAK,IACD,GAAImC,EAAM,CACN,IAAIC,OAAO,EAOPC,GAAStC,EAAG,EAAIiC,GALhBI,EADiB,MAAjBD,EAAKrC,SAAoC,MAAjBqC,EAAKrC,SACpBC,EAAGoC,EAAKhC,GAAIH,EAAGmC,EAAK/B,KAGpBL,EAAGiC,EAAIhC,EAAGiC,IAEOlC,EAAGC,EAAG,EAAIiC,EAAKG,EAAKpC,GAClDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIhC,GAAIoC,EAAKtC,EAAGG,GAAImC,EAAKrC,EAAGG,GAAIA,EAAIC,GAAIA,EAAIL,EAAGA,EAAGC,EAAGA,IAEnG,MACJ,IAAK,IAEDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIhC,GAAIA,EAAIC,GAAIA,EAAIH,EAAGA,EAAGC,EAAGA,IACvE,MACJ,IAAK,IACD,GAAImC,EAAM,CACFC,OAAO,EAOPC,GAAStC,EAAG,EAAIiC,GALhBI,EADiB,MAAjBD,EAAKrC,SACIC,EAAGoC,EAAKlC,GAAID,EAAGmC,EAAKjC,KAGpBH,EAAGiC,EAAIhC,EAAGiC,IAEOlC,EAAGC,EAAG,EAAIiC,EAAKG,EAAKpC,GAClDkC,EAASrC,MAAOC,QAAS,IAAKkC,GAAIA,EAAIC,GAAIA,EAAIhC,GAAIoC,EAAKtC,EAAGG,GAAImC,EAAKrC,EAAGD,EAAGA,EAAGC,EAAGA,IAEnF,MACJ,IAAK,IACD,IAAIsC,EAASR,EACbQ,EAAOxC,QAAU,IACjBoC,EAASrC,KAAKyC,GACd,MACJ,IAAK,IACL,IAAK,IACDJ,EAASrC,MAAOC,QAAS,MACzBC,EAAIiC,EACJhC,EAAIiC,EAGZD,EAIKjC,EACLkC,EAAKjC,EAET,OAAOkC,EAGX,SAAgBK,EAAcC,EAAKC,EAAIC,EAAIC,EAAGC,EAAIC,EAAIC,EAAIC,GACtD,IAEI9C,EACAC,EACAC,EACAC,EACAL,EACAC,EACAR,EACAC,EACA6C,EACJ,IAAKvC,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGD,EAASgD,EAAIhD,OAAQC,EAAID,IAAUC,EAAG,CAC5D,IACIqC,EADMU,EAAI/C,GAEVE,EAAOmC,EAAIhC,QACX,MAAOgC,IACP/B,EAAI+B,EAAI/B,GAER,MAAO+B,IACP9B,EAAI8B,EAAI9B,GAER,OAAQ8B,IACR5B,EAAK4B,EAAI5B,IAET,OAAQ4B,IACR1B,EAAK0B,EAAI1B,IAET,OAAQ0B,IACR7B,EAAK6B,EAAI7B,IAET,OAAQ6B,IACR3B,EAAK2B,EAAI3B,IAETwC,QACUK,IAANjD,IACAA,EAAIkD,EAAclD,EAAG0C,EAAIG,EAAIE,SAEvBE,IAANhD,IACAA,EAAIiD,EAAcjD,EAAG0C,EAAIG,EAAIE,SAEtBC,IAAP/C,IACAA,EAAKgD,EAAchD,EAAIwC,EAAIG,EAAIE,SAExBE,IAAP9C,IACAA,EAAK+C,EAAc/C,EAAIwC,EAAIG,EAAIE,SAExBC,IAAP7C,IACAA,EAAK8C,EAAc9C,EAAIsC,EAAIG,EAAIE,SAExBE,IAAP5C,IACAA,EAAK6C,EAAc7C,EAAIsC,EAAIG,EAAIE,WAIzBC,IAANjD,IACAA,EAAImB,QAAQnB,EAAI0C,GAAIS,QAAQ,UAEtBF,IAANhD,IACAA,EAAIkB,QAAQlB,EAAI0C,GAAIQ,QAAQ,UAErBF,IAAP/C,IACAA,EAAKiB,QAAQjB,EAAKwC,GAAIS,QAAQ,UAEvBF,IAAP9C,IACAA,EAAKgB,QAAQhB,EAAKwC,GAAIQ,QAAQ,UAEvBF,IAAP7C,IACAA,EAAKe,QAAQf,EAAKsC,GAAIS,QAAQ,UAEvBF,IAAP5C,IACAA,EAAKc,QAAQd,EAAKsC,GAAIQ,QAAQ,OAItCZ,EAASa,EAAerB,EAAKnC,GADVI,EAAGA,EAAGC,EAAGA,EAAGC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIyB,EAAIzB,GAAIC,GAAIwB,EAAIxB,IACpCqC,EAAGF,EAAIC,MAElDF,EAAI/C,GAAK6C,GASjB,OADec,EAAcZ,GAIjC,SAAgBW,EAAeE,EAAS1D,EAAM2D,EAAKC,EAASd,EAAIC,GAC5D,OAAQ/C,GACJ,IAAK,IAIL,IAAK,IACD0D,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChB,MACJ,IAAK,IACDqD,EAAQtD,EAAIuD,EAAIvD,EAChB,MACJ,IAAK,IACDsD,EAAQrD,EAAIsD,EAAItD,EAChB,MACJ,IAAK,IACDqD,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChBqD,EAAQpD,GAAKqD,EAAIrD,GACjBoD,EAAQnD,GAAKoD,EAAIpD,GACjBmD,EAAQlD,GAAKmD,EAAInD,GACjBkD,EAAQjD,GAAKkD,EAAIlD,GACjB,MACJ,IAAK,IACDiD,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChBqD,EAAQlD,GAAKmD,EAAInD,GACjBkD,EAAQjD,GAAKkD,EAAIlD,GACjB,MACJ,IAAK,IACDiD,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChBqD,EAAQpD,GAAKqD,EAAIrD,GACjBoD,EAAQnD,GAAKoD,EAAIpD,GACjB,MACJ,IAAK,IACDmD,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChB,MACJ,IAAK,IACD,IAAIK,EAAKiD,EAAIjD,GACTC,EAAKgD,EAAIhD,GACTiD,IACAD,EAAIjD,GAAKA,GAAWoC,EACpBa,EAAIhD,GAAKA,GAAWoC,GAExBW,EAAQtD,EAAIuD,EAAIvD,EAChBsD,EAAQrD,EAAIsD,EAAItD,EAChBqD,EAAQhD,GAAKiD,EAAIjD,GACjBgD,EAAQ/C,GAAKgD,EAAIhD,GACjB,MACJ,IAAK,IACL,IAAK,IACD+C,GAAYvD,QAAS,KAG7B,OAAOuD,EAGX,SAAgBJ,EAAcO,EAAKC,EAAaC,EAAWC,GAevD,OAdIH,IAAQE,EAEJF,EADAG,IAAcD,EACLF,EAAMC,GAAgBvC,OAAOwC,GAAaD,EAAcvC,OAAOwC,KACjEC,EAAYzC,OAAOwC,IAGlBxC,OAAOsC,GAAOC,GAAgBvC,OAAOwC,GAAaD,EAAcvC,OAAOwC,IAI/EC,IAAcD,IACdF,EAAMG,GAGPzC,OAAOsC,EAAIN,QAAQ,IAG9B,SAAgBU,EAAqBtE,GACjC,IAAI0C,EACAC,EACAhC,EACAC,EACAC,EACAC,EACAL,EACAC,EACAR,EACAC,EACJ,IAAKM,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGD,EAASF,EAAgBE,OAAQC,EAAID,IAAUC,EAAG,CACxE,IACIqC,EADOxC,EAAgBG,GAEvBE,EAAOmC,EAAIhC,QACf,GAAI,cAAc+D,KAAKlE,GACf,MAAOmC,IACPA,EAAI/B,EAAIA,EAAI+B,EAAI/B,GAEhB,MAAO+B,IACPA,EAAI9B,EAAIA,EAAI8B,EAAI9B,OAGnB,CACG,OAAQ8B,IACRA,EAAI7B,GAAKA,EAAKF,EAAI+B,EAAI7B,IAEtB,OAAQ6B,IACRA,EAAI3B,GAAKA,EAAKJ,EAAI+B,EAAI3B,IAEtB,OAAQ2B,IACRA,EAAI5B,GAAKA,EAAKF,EAAI8B,EAAI5B,IAEtB,OAAQ4B,IACRA,EAAI1B,GAAKA,EAAKJ,EAAI8B,EAAI1B,IAEtB,MAAO0B,IACPA,EAAI/B,EAAIA,GAAK+B,EAAI/B,GAEjB,MAAO+B,IACPA,EAAI9B,EAAIA,GAAK8B,EAAI9B,GAErB,IAAIsC,OAAS,EACb,OAAQ3C,GACJ,IAAK,IACL,IAAK,IACD2C,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,GAClC,MACJ,IAAK,IACL,IAAK,IACDsC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,GAClC,MACJ,IAAK,IACL,IAAK,IACDsC,GAAWxC,QAAS,IAAKC,EAAGA,GAC5B,MACJ,IAAK,IACL,IAAK,IACDuC,GAAWxC,QAAS,IAAKE,EAAGA,GAC5B,MACJ,IAAK,IACL,IAAK,IACDsC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,EAAGC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,GACjE,MACJ,IAAK,IACL,IAAK,IACDkC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,EAAGG,GAAIA,EAAIC,GAAIA,GACjD,MACJ,IAAK,IACL,IAAK,IACDkC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,EAAGC,GAAIA,EAAIC,GAAIA,GACjD,MACJ,IAAK,IACL,IAAK,IACDoC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,GAClC,MACJ,IAAK,IACL,IAAK,KACDsC,GAAWxC,QAAS,IAAKC,EAAGA,EAAGC,EAAGA,IAC3BK,GAAKyB,EAAIzB,GAChBiC,EAAOhC,GAAKwB,EAAIxB,GAChBgC,EAAO/B,MAAQuB,EAAIvB,MACnB+B,EAAO9B,SAAWsB,EAAItB,SACtB8B,EAAO7B,MAAQqB,EAAIrB,MACnB,MACJ,IAAK,IACL,IAAK,IACD6B,GAAWxC,QAAS,KACpBC,EAAIiC,EACJhC,EAAIiC,EACJK,EAAShD,EAAgBG,GAG7B6C,IACAhD,EAAgBG,GAAK6C,GAGhB,MAAT3C,GAAyB,MAATA,IAChBqC,EAAKjC,EACLkC,EAAKjC,GAGb,OAAOV,EAGX,SAAgB8D,EAAc9D,GAC1B,IACIG,EADAqE,EAAe,GAEnB,IAAKrE,EAAI,EAAGA,EAAIH,EAAgBE,OAAQC,IAEhCqE,GADM,IAANrE,EACgBsE,EAAUzE,EAAgBG,IAG1B,IAAMsE,EAAUzE,EAAgBG,IAGxD,OAAOqE,EAGX,SAAgBC,EAAUT,GACtB,IAAIU,EAAS,GACb,OAAQV,EAAIxD,SACR,IAAK,IACL,IAAK,IACDkE,EAASV,EAAIxD,QACb,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACDkE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIvD,EAAI,IAAMuD,EAAItD,EAC/C,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIrD,GAAK,IAAMqD,EAAIpD,GAAK,IAAMoD,EAAInD,GAAK,IAAMmD,EAAIlD,GAAK,IAAMkD,EAAIvD,EAAI,IAAMuD,EAAItD,EAC3G,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIrD,GAAK,IAAMqD,EAAIpD,GAAK,IAAMoD,EAAIvD,EAAI,IAAMuD,EAAItD,EAC7E,MACJ,IAAK,IACL,IAAK,IACD,IAAIiE,EAAMX,EAAIxD,QACVoE,EAAMZ,EAAI/C,MACV4D,EAAKb,EAAI9C,SAAW,IAAM,IAC1BmC,EAAKW,EAAI7C,MAAQ,IAAM,IAC3BuD,EAASC,EAAM,IAAMX,EAAIjD,GAAK,IAAMiD,EAAIhD,GAAK,IAAM4D,EAAM,IAAMC,EAAI,IAAMxB,EAAI,IAAMW,EAAIvD,EAAI,IAAMuD,EAAItD,EACrG,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIvD,EACjC,MACJ,IAAK,IACL,IAAK,IACDiE,EAASV,EAAIxD,QAAU,IAAMwD,EAAItD,EACjC,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAInD,GAAK,IAAMmD,EAAIlD,GAAK,IAAMkD,EAAIvD,EAAI,IAAMuD,EAAItD,EAC7E,MACJ,IAAK,IACL,IAAK,IACDgE,EAASV,EAAIxD,QAAU,IAAMwD,EAAIvD,EAAI,IAAMuD,EAAItD,EAEvD,OAAOgE,EC/jBX,SAAgBI,IACZ,OAAO,IAAIC,GAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,cAAYC,UAGpD,SAAgBC,EAAuBC,EAAQC,GAC3C,IAAIC,EA0DR,SAAuBF,EAAQ1E,EAAGC,GAC9B,OAAQyE,EAAOG,MACX,KAAKN,cAAYC,SAAU,MAC3B,KAAKD,cAAYO,YACb9E,GAAK0E,EAAOK,QACZ9E,GAAKyE,EAAOM,QACZ,MACJ,KAAKT,cAAYU,QACbjF,GAAK0E,EAAOQ,IACZjF,GAAKyE,EAAOS,IACZ,MACJ,KAAKZ,cAAYO,YAAcP,cAAYU,QACvCjF,GAAK0E,EAAOQ,IACZlF,GAAK0E,EAAOK,QACZ9E,GAAKyE,EAAOS,IACZlF,GAAKyE,EAAOM,QACZ,MACJ,QACI,IAAII,EAAMnF,EAAIyE,EAAOW,IAAMX,EAAOK,QAC9BO,EAAOtF,EAAI0E,EAAOa,IAAMb,EAAOM,QACnChF,GAAK0E,EAAOQ,IACZlF,GAAKoF,EACLnF,GAAKyE,EAAOS,IACZlF,GAAKqF,EAGb,OAAStF,EAAGA,EAAGC,EAAGA,GApFTuF,CAAcd,EAAQC,EAAM3E,EAAG2E,EAAM1E,GAC9C,OAASD,EAAGyF,KAAKC,MAAa,IAAPd,EAAG5E,GAAW,IAAKC,EAAGwF,KAAKC,MAAa,IAAPd,EAAG3E,GAAW,KAG1E,SAAgB0F,EAAwBjB,EAAQ/C,GAE5C,IAAK,IADDiE,KACKC,EAAK,EAAGC,EAAWnE,EAAQkE,EAAKC,EAASrG,OAAQoG,IAAM,CAC5D,IAAIlB,EAAQmB,EAASD,GACrBD,EAAkB9F,KAAK2E,EAAuBC,EAAQC,IAE1D,OAAOiB,EAGX,SAAgBG,EAAarB,EAAQlE,EAAOwF,EAASC,GAEjDC,EAAexB,EAgCnB,SAA+BlE,EAAOwF,EAASC,GAC3C,IAAIE,EAAS9B,IACTe,EAAMK,KAAKW,IAAI5F,GACf8E,EAAOG,KAAKY,IAAI7F,GAChBuE,EAAUiB,GAAW,EAAMV,GAAQW,EAAUb,EAC7CJ,EAAUiB,GAAW,EAAMX,GAAQU,EAAUZ,EAGjD,OAFAe,EAAOtB,KAAON,cAAY+B,QAC1BC,EAAUJ,EAAQb,EAAMF,GAAMA,EAAKE,EAAMP,EAASC,GAC3CmB,EAxCgBK,CAA8B,qBADrDhG,GAAS,KACkEwF,GAAoB,EAAGC,GAAoB,IAG1H,SAAgBQ,EAAY/B,EAAQgC,EAAQC,EAAQX,EAASC,QACzC,IAAZD,IAAsBA,EAAU,QACpB,IAAZC,IAAsBA,EAAU,GACpCC,EAAexB,EAmBnB,SAAuBgC,EAAQC,EAAQX,EAASC,GAC5C,IAAIE,EAAS9B,IAGb,OAFA8B,EAAOtB,KAASmB,GAAWC,EAAiC1B,cAAYU,QAAUV,cAAYO,YAAxDP,cAAYU,QAClDsB,EAAUJ,EAAQO,EAAQ,EAAK,EAAKC,EAAQX,EAAUU,EAASV,EAASC,EAAUU,EAASV,GACpFE,EAvBgBS,CAAcF,EAAQC,EAAQX,EAASC,IAGlE,SAAgBY,EAAgBnC,EAAQK,EAASC,GAC7C,OAAIN,EAAOG,KAAON,cAAYC,UAC1BE,EAAOG,KAAON,cAAYO,iBAC1ByB,EAAU7B,EAAQ,EAAK,EAAK,EAAK,EAAKK,EAASC,IAG/CN,EAAOG,KAAON,cAAY+B,SAC1B5B,EAAOK,SAAWA,OAClBL,EAAOM,SAAWA,KAGtBN,EAAOK,SAAWA,EAClBL,EAAOM,SAAWA,OAClBN,EAAOG,MAAQN,cAAYO,cAkD/B,SAAgBoB,EAAeY,EAASC,GACpC,IAAIlC,EAAOiC,EAAQjC,KACfmC,EAAQD,EAAQlC,KACpB,GAAImC,IAAUzC,cAAYC,SAA1B,CAGA,GAAIK,IAASN,cAAYC,SAGrB,OAFAyC,EAAaH,EAASC,QACtBD,EAAQjC,KAAOkC,EAAQlC,MAG3B,GAAImC,IAAUzC,cAAYO,YAMtB,OALAgC,EAAQ/B,SAAWgC,EAAQhC,QAC3B+B,EAAQ9B,SAAW+B,EAAQ/B,aACvBH,IAASN,cAAY+B,UACrBQ,EAAQjC,MAAQN,cAAYO,cAIpC,GAAID,IAASN,cAAYO,YAAa,CAClC,IAAIM,EAAMP,GAAQ,EAAImC,EACtB,OAAQ5B,GACJ,KAAK,GAGD,OAFA0B,EAAQ5B,KAAO6B,EAAQ7B,SACvB4B,EAAQ3B,KAAO4B,EAAQ5B,KAE3B,KAAK,GAMD,OALA2B,EAAQ5B,KAAO6B,EAAQ7B,IACvB4B,EAAQ3B,KAAO4B,EAAQ5B,IACvB2B,EAAQ/B,QAAUgC,EAAQhC,QAC1B+B,EAAQ9B,QAAU+B,EAAQ/B,aAC1B8B,EAAQjC,KAAQN,cAAYO,YAAcP,cAAYU,SAE1D,KAAK,GAAI,MACT,QAEQ,OAAQG,GACJ,KAAK,GAKD,OAJA0B,EAAQ5B,KAAO6B,EAAQ7B,IACvB4B,EAAQ3B,KAAO4B,EAAQ5B,IACvB2B,EAAQ/B,SAAWgC,EAAQ7B,SAC3B4B,EAAQ9B,SAAW+B,EAAQ5B,KAE/B,KAAK,GAKD,OAJA2B,EAAQ5B,KAAO6B,EAAQ7B,IACvB4B,EAAQ3B,KAAO4B,EAAQ5B,IACvB2B,EAAQ/B,QAAUgC,EAAQ7B,IAAM4B,EAAQ/B,QAAUgC,EAAQhC,aAC1D+B,EAAQ9B,QAAU+B,EAAQ5B,IAAM2B,EAAQ9B,QAAU+B,EAAQ/B,SAE9D,KAAK,GAAI,MACT,QACI,OAAQI,GACJ,KAAK,GACL,KAAK,GACL,KAAK,GAAI,MACT,QAAS,SAOjC,IAAIe,EAAS9B,IAyBb,OAlBAkC,EAAUJ,EANGW,EAAQ5B,IAAM6B,EAAQ7B,IAAM4B,EAAQvB,IAAMwB,EAAQ1B,IAClDyB,EAAQ5B,IAAM6B,EAAQxB,IAAMuB,EAAQvB,IAAMwB,EAAQ5B,IAClD2B,EAAQzB,IAAM0B,EAAQ7B,IAAM4B,EAAQ3B,IAAM4B,EAAQ1B,IAClDyB,EAAQzB,IAAM0B,EAAQxB,IAAMuB,EAAQ3B,IAAM4B,EAAQ5B,IAC/C2B,EAAQ/B,QAAUgC,EAAQ7B,IAAM4B,EAAQ9B,QAAU+B,EAAQ1B,IAAM0B,EAAQhC,QACxE+B,EAAQ/B,QAAUgC,EAAQxB,IAAMuB,EAAQ9B,QAAU+B,EAAQ5B,IAAM4B,EAAQ/B,SAEpFmB,EAAOd,KAAOc,EAAOZ,IACrBY,EAAOtB,KAAON,cAAY+B,UAGtBH,EAAOjB,KAAsB,IAAfiB,EAAOjB,KAAeiB,EAAOhB,KAAsB,IAAfgB,EAAOhB,OACzDgB,EAAOtB,KAAON,cAAYU,UAE1BkB,EAAOpB,SAAWoB,EAAOnB,WACzBmB,EAAOtB,MAAQN,cAAYO,cAE1BqB,EAAOtB,MAAQN,cAAYO,YAAcP,cAAYU,YAAcV,cAAYC,WAChF2B,EAAOtB,KAAON,cAAYC,UAE9B2B,EAAOtB,KAAON,cAAYU,QAAUV,cAAYO,aAEpDmC,EAAaH,EAASX,QACtBW,EAAQjC,KAAOsB,EAAOtB,MAG1B,IAAIE,EAAU+B,EAAQ/B,QAClBC,EAAU8B,EAAQ9B,QACtB8B,EAAQ/B,QAAUA,EAAUgC,EAAQ7B,IAAMF,EAAU+B,EAAQ1B,IAAM0B,EAAQhC,QAC1E+B,EAAQ9B,QAAUD,EAAUgC,EAAQxB,IAAMP,EAAU+B,EAAQ5B,IAAM4B,EAAQ/B,QACtEgC,IAAUzC,cAAY+B,QAI1BQ,EAAQjC,KAAQN,cAAYO,YAAcP,cAAYU,QAHlD6B,EAAQjC,KAAON,cAAY+B,SAMnC,SAASC,EAAUW,EAAKhC,EAAKK,EAAKF,EAAKF,EAAKnF,EAAGC,GAC3CiH,EAAIhC,IAAMA,EACVgC,EAAI3B,IAAMA,EACV2B,EAAI7B,IAAMA,EACV6B,EAAI/B,IAAMA,EACV+B,EAAInC,QAAU/E,EACdkH,EAAIlC,QAAU/E,EAGlB,SAASgH,EAAaH,EAASC,GAC3BD,EAAQ5B,IAAM6B,EAAQ7B,IACtB4B,EAAQvB,IAAMwB,EAAQxB,IACtBuB,EAAQzB,IAAM0B,EAAQ1B,IACtByB,EAAQ3B,IAAM4B,EAAQ5B,IACtB2B,EAAQ/B,QAAUgC,EAAQhC,QAC1B+B,EAAQ9B,QAAU+B,EAAQ/B,QAC1B8B,EAAQjC,KAAOkC,EAAQlC,KC3O3B,SAAgBsC,EAAcC,GAC1B,OAAOC,GAAYD,EAAME,YCD7B,SAAgBC,EAAaH,GACzB,OAAOI,GAAWJ,EAAME,YAG5B,SAAgBG,EAAkBL,EAAOM,GACrC,MAAc,WAAVN,EACOM,EAAUC,SAEdC,GAAgBR,GAO3B,SAAgBS,EAAaC,GACzB,IAAI1I,EACJ,OAAQ0I,EAAKV,OACT,IAAK,QACDhI,EAAO,gBACP,MACJ,IAAK,OACDA,EAAO,4BACP,MACJ,IAAK,UACDA,EAAO,0BACP,MACJ,IAAK,YACDA,EAAO,wBACP,MACJ,IAAK,OACDA,EAAO0I,EAAKH,SAGpB,OAAOvI,EClCX,SAAgB2I,EAAaX,GACzB,OAAOY,GAAWZ,EAAME,YCsD5B,SAAgBW,EAAYC,GACxB,IAAIC,EAAgB,IAAIC,UACxBD,EAAgBE,EAAqBH,EAAQI,QAASH,GACtD,IAAIG,EAAU,IAAIF,UAAQD,GAO1B,OANAG,EAAQC,gBAAkBA,EAC1BD,EAAQE,WAAaA,EACrBF,EAAQG,SAAW,oBACnBH,EAAQI,QAAU,SAClBJ,EAAQK,SAAS,IAAMT,EAAQU,QAAQC,IACvCP,EAAQQ,QACDR,EAEX,SAASE,EAAWO,GACM,KAAjBC,KAAKC,cAAmChG,IAAjB+F,KAAKC,UAC7BF,EAAKH,QAAQM,MAAMC,QAAU,QAGrC,SAASZ,EAAgBQ,GAChBA,EAAKK,kBAAoBL,EAAKK,mBAAqBJ,KAAKK,WACzDN,EAAKH,QAAQM,MAAMC,QAAU,QASrC,SAAgBG,EAAcpB,EAASqB,GACnC,IAAIjB,EACAkB,EAAgBtB,EAAQsB,cAG5B,OAFAlB,EAAUiB,EAAOA,EAAKjB,QAAUJ,EAAQI,QACxCD,EAAqBC,EAASkB,GACvBA,EAEX,SAASnB,EAAqBC,EAASkB,GAiBnC,OAhBIlB,EAAQW,SACRO,EAAcP,QAAUX,EAAQW,QAChCO,EAAcH,SAAWf,EAAQe,SACjCG,EAAcC,eAAiBnB,EAAQmB,eACvCD,EAAcjI,MAAQ+G,EAAQ/G,MAC9BiI,EAAclI,OAASgH,EAAQhH,OAC1BgH,EAAQoB,UAITF,EAAcE,UAAYpB,EAAQoB,UAHlCF,EAAcE,WAAcZ,OAASa,OAAQ,UAOjDH,EAAcV,QAEXU,ECrGX,SAAgBI,EAAoBhB,EAASiB,GACzC,IAAIC,EACAC,EAUJ,OALIA,EAJiB,aAAjBnB,EAAQ/D,MAAwB+D,EAAQoB,cAI1BpB,EAAQoB,cAAcpI,QAAQqI,OAOpD,SAAwBrB,GACpB,IAAIsB,EACJ,GAAItB,EAAQuB,kBAAmB,CAC3B,IAAIC,EAAUxB,EAAQuB,kBAClBE,EAAUzB,EAAQoB,cAClBpF,GAAO5E,EAAGoK,EAAQrF,QAAS9E,EAAGmK,EAAQpF,SAC1BsF,GAAiB1F,EAAI2F,GAA4BF,GAAUA,EAAQG,QAAQ,GAC3FN,EAAWtF,OAEV,GAAIgE,EAAQ6B,UAAY7B,EAAQoB,cACjC,GAAIpB,EAAQ8B,cAAe,CACvB,IAAIC,EAAS/B,EAAQoB,cAAcpI,QAAQqI,OACvCW,EAAShC,EAAQ8B,cAAc9I,QAAQqI,OAC3CC,EAAWW,GAAgBjC,EAASA,EAAQoB,cAAeW,EAAQC,GAAQ,QAG3EV,EAAWtB,EAAQmB,iBAIvBG,EAAWtB,EAAQmB,YAEvB,OAAOG,EAhCWY,CAAelC,GAKjCkB,EA+CJ,SAA6BlB,EAASsB,EAAUa,EAAUlB,GACtD,IAeImB,EACAC,EAhBAC,EAAatC,EAAQoB,cACrBmB,EAAavC,EAAQ8B,cACrBU,EAAaxC,EAAQuB,kBACrBkB,EAAazC,EAAQ0C,kBAGrBxB,KAOAyB,GAAW3J,aATX4J,EAS+B7G,MAAOuF,EAAUuB,eALhDC,EAKmEC,QAFlDC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,IAGpDC,GAAWpK,aATXqK,EAS+BtH,MAAOoG,EAAUU,eALhDS,EAKmEP,QAFlDC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,SAKrC9I,IAAfiI,QAA2CjI,IAAfkI,IAC5BH,EAAgBT,GAA4BW,GAC5CD,EAAgBV,GAA4BY,GAC5CI,EAAO3J,QAAUsJ,EAAWtJ,QAC5BoK,EAAOpK,QAAUuJ,EAAWvJ,SAEhC,QAAmBqB,IAAfmI,EAA0B,CAC1B,IAAIe,GAASnM,EAAGoL,EAAWrG,QAAS9E,EAAGmL,EAAWpG,SAClDuG,EAAOE,UAAYnB,GAAiB6B,EAAMnB,EAAeE,EAAWV,QAAQ,GAEhF,QAAmBvH,IAAfoI,EAA0B,CAC1B,IAAIe,GAAcpM,EAAGqL,EAAWtG,QAAS9E,EAAGoL,EAAWrG,SACvDgH,EAAOP,UAAYnB,GAAiB8B,EAAWnB,EAAeE,EAAWX,QAAQ,GAErF,QAAmBvH,IAAfiI,QAA2CjI,IAAfkI,EA+C5B,YA9CyBlI,IAArBsI,EAAOE,gBAAgDxI,IAArB+I,EAAOP,YACrC5B,EApDhB,SAAsB0B,EAAQS,EAAQnC,GACR,gBAAtBA,GACA0B,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,QACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,QAE9B,gBAAtB5B,GACL0B,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,OACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,SAE9B,gBAAtB5B,GACL0B,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,SACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,OAE9B,gBAAtB5B,IACL0B,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,MACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,UAsCjDY,CAAad,EAAQS,EAAQnC,GAGzB0B,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,QACpCrG,KAAK6G,IAAIf,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,QACxCP,EAAOI,OAAOI,IAAMR,EAAOI,OAAOG,QACvCP,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,MACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,UAEpDF,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,KAC5CtG,KAAK6G,IAAIf,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,KAC3CR,EAAOI,OAAOG,OAASP,EAAOI,OAAOI,KAC1CR,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,SACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,OAEnDF,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAC5CnG,KAAK6G,IAAIf,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAC1CL,EAAOI,OAAOE,MAAQN,EAAOI,OAAOC,MACvCL,EAAO3J,QAAQiK,MA1ClB,GA0CqCG,EAAOpK,QAAQgK,MAC9CI,EAAOpK,QAAQiK,OAASN,EAAO3J,QAAQgK,KA3C7C,IA2CgEL,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,MACpGL,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,QACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,QAEnDF,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,OAC3CpG,KAAK6G,IAAIf,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,OAAUN,EAAOI,OAAOC,KAAOL,EAAOI,OAAOE,OACzFG,EAAOpK,QAAQiK,MAjDlB,GAiDqCN,EAAO3J,QAAQgK,MAC9CL,EAAO3J,QAAQiK,OAASG,EAAOpK,QAAQgK,KAlD7C,IAmDYL,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,MAChDL,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,OACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,SAGrDP,EAAWrC,KAAOsC,EAAWtC,KAAQmC,EAAcuB,OAAOvB,EAAeC,IACzEA,EAAcuB,cAAcxB,EAAcyB,UAAWlB,EAAOI,OAAOI,MACnER,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,SACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,QAGzDF,EAAOE,UAAYF,EAAOE,UAAYF,EAAOE,UAAY,MACzDO,EAAOP,UAAYO,EAAOP,UAAYO,EAAOP,UAAY,WA+mBjF,SAAgCiB,EAAKhB,EAAQQ,EAAQS,EAAKC,GACtD,IAKIC,EALAC,EAAYJ,EAAI1C,cAChB+C,EAAYL,EAAIhC,cAChBN,EAAUsC,EAAIvC,kBACd6C,EAAUN,EAAIpB,kBACdxB,KAGAmD,EAASH,EAAUlL,QACnBsL,EAASH,EAAUnL,QAKnB2J,GAJQ2B,EAAOjD,QAIJrI,QAASqL,EAAQtI,MAAOgI,EAAKlB,UAAWC,EAAQC,QAF1CC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,KAGpDC,GAAWpK,QAASsL,EAAQvI,MAAOiI,EAAKnB,UAAWS,EAAQP,QAF1CC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,IAGpDoB,EAAYC,EAAWN,EAAWG,EAAQP,EAAI1C,cAAcQ,QAC5D6C,EAAYD,EAAWL,EAAWG,EAAQR,EAAIhC,cAAcF,QAC5D8C,GAAc,EACdZ,EAAI1C,eAAiB0C,EAAIhC,gBACzB4C,EA3FR,SAAuCtD,EAAeU,GAGlD,IAAK,IAFD6C,EAAgBC,EAAyBxD,GACzCyD,EAAgBD,EAAyB9C,GACpChL,EAAI,EAAGA,EAAI6N,EAAc9N,OAAS,EAAGC,IAE1C,IAAK,IADDgO,EAAaH,EAAc7N,GACtBL,EAAI,EAAGA,EAAIoO,EAAchO,OAAS,EAAGJ,IAAK,CAC/C,IAAIsO,EAAYF,EAAcpO,GAC9B,GAAIuO,GAAWF,EAAYC,GAAWE,QAClC,OAAO,EAInB,OAAO,EA+EWC,CAA8BpB,EAAI1C,cAAe0C,EAAIhC,gBAEvE,QAAgBzH,IAAZmH,EAEA,OADAmB,EAAO5G,OAAU3E,EAAGoK,EAAQrF,QAAS9E,EAAGmK,EAAQpF,SACxCuG,EAAOE,WACX,IAAK,SACL,IAAK,MACDF,EAAO5G,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAC9B,MACJ,IAAK,OACL,IAAK,QACDsL,EAAO5G,MAAM3E,EAAIuL,EAAO5G,MAAM3E,MAKrB,eAAb0M,EAAI7H,MACA6H,EAAIvK,UAAYuK,EAAIvK,SAAS1C,OAAS,GAAKiN,EAAIvK,SAAS,GAAGsJ,YAC3DF,EAAOE,UAAYiB,EAAIvK,SAAS,GAAGsJ,WAEvCF,EAAO5G,MAAQoJ,GAAUZ,EAAW5B,EAAOE,WAC3CoB,EAAWkB,GAAUZ,EAAWa,GAAqBzC,EAAOE,YAC5DF,EAAO5G,MAAQkG,GAAgB6B,EAAKI,EAAWvB,EAAO5G,MAAOkI,GAAU,IAGvEtB,EAAO5G,MAAQmI,EAAUlL,QAAQqI,OAGzC,QAAgBhH,IAAZ+J,EAKA,OAJAhB,EAAOrH,OACH3E,EAAGgN,EAAQjI,QACX9E,EAAG+M,EAAQhI,SAEPgH,EAAOP,WACX,IAAK,SACL,IAAK,MACDO,EAAOrH,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC9B,MACJ,IAAK,OACL,IAAK,QACD+L,EAAOrH,MAAM3E,EAAIgM,EAAOrH,MAAM3E,MAKrB,eAAb0M,EAAI7H,MACJmH,EAAOrH,MAAQoJ,GAAUV,EAAWrB,EAAOP,WAC3CoB,EAAWkB,GAAUV,EAAWW,GAAqBhC,EAAOP,YAC5DO,EAAOrH,MAAQkG,GAAgB6B,EAAKK,EAAWf,EAAOrH,MAAOkI,GAAU,IAGvEb,EAAOrH,MAAQoI,EAAUnL,QAAQqI,OAGzC,GAAiB,eAAbyC,EAAI7H,KAAuB,CAC3B,IAAIvB,OAAU,EACV2K,OAAQ,EAEZ,GADAC,EAA2BxB,QACGzJ,IAA1ByJ,EAAIvC,kBAAiC,CACrCoB,EAAO5G,MAAQ4G,EAAO3J,QAAQqI,OAC1ByC,EAAIvK,UAAYuK,EAAIvK,SAAS1C,OAAS,IACtCwO,EAAQvB,EAAIvK,SAAS,GACrBmB,EAAY6K,GAAMC,aAAaH,EAAMtJ,YAAkB1B,EAARgL,GAEnD,IAAIlD,OAAwB9H,IAAZK,EAAyBA,EAAQqB,MAAQqH,EAAOrH,MAChE,GAAiB,WAAb+H,EAAI7H,MAAqB6H,EAAIvK,SAAS1C,OAAS,GAC/CiN,EAAIvK,SAAS,GAAGkM,QAAQ7N,OAASkM,EAAIvK,SAAS,GAAGkM,QAAQC,SAAU,CACnE,IAAIC,EAAQ9I,KAAK+I,IAAIjD,EAAO3J,QAAQL,MAAOgK,EAAO3J,QAAQN,QAC1DyJ,EAAWoD,GAAMM,UAAUlD,EAAO5G,MAAO+H,EAAIvK,SAAS,GAAGkM,QAAQ7N,MAAO+N,EAAQ,GAEpFhD,EAAO5G,MAAQ2I,EAAcZ,EAAI1C,cAAcQ,OAAOP,OAASY,GAAgB6B,EAAKI,EAAWvB,EAAO5G,MAAOoG,GAAU,GAE3H,QAA8B9H,IAA1ByJ,EAAIpB,kBAAiC,CACrCU,EAAOrH,MAAQqH,EAAOpK,QAAQqI,OAC1ByC,EAAIvK,UAAYuK,EAAIvK,SAAS1C,OAAS,IACtCwO,EAAQvB,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAC3C6D,EAAY6K,GAAMC,aAAaH,EAAMtJ,YAAkB1B,EAARgL,GAEnD,IAAI/D,EAAW,EAAY5G,EAAQqB,MAAQ4G,EAAO5G,MAClD,GAAiB,WAAb+H,EAAI7H,MAAqB6H,EAAIvK,SAAS1C,OAAS,GAC/CiN,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAAGiP,QAAQlO,OAC9CkM,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAAGiP,QAAQJ,SAAU,CACxD,IAAIC,EAAQ9I,KAAK+I,IAAIjD,EAAO3J,QAAQL,MAAOgK,EAAO3J,QAAQN,QAC1D4I,EAAWiE,GAAMM,UAAUzC,EAAOrH,MAAO+H,EAAIvK,SAAS,GAAGuM,QAAQlO,MAAO+N,EAAQ,GAEpFvC,EAAOrH,MAAQ2I,EAAcZ,EAAIhC,cAAcF,OAAOP,OAASY,GAAgB6B,EAAKK,EAAW7C,EAAU8B,EAAOrH,OAAO,GAE3HmF,EAAsB6E,EAA+BjC,EAAKnB,EAAQS,QAGlE,GAAiB,eAAbU,EAAI7H,MAA0B6H,EAAIvK,UAAYuK,EAAIvK,SAAS1C,OAAS,GACtC,OAA9BiN,EAAIvK,SAAS,GAAGsJ,UAChB3B,EAqLZ,SAAiC4C,EAAKnB,EAAQS,EAAQ5B,EAAS4C,EAASF,EAAWC,GAC/E,IAAIpI,EAEA5C,EACA1C,EACAuP,EACJV,EAA2BxB,GAC3B,IAAK,IAAIhN,EAAI,EAAGA,EAAIgN,EAAIvK,SAAS1C,OAAQC,IAAK,CAK1C,GAJAqC,EAAM2K,EAAIvK,SAASzC,GACf0K,GAAWmB,EAAOE,YAAcuC,GAAqBjM,EAAI0J,aACzD1J,EAAI0J,UAAYF,EAAOE,WAEvB/L,EAAI,GAAKgN,EAAIvK,SAASzC,EAAI,GAAG+L,YAAc1J,EAAI0J,UAC/C/L,EAAImP,EAA6BnC,EAAKhN,EAAG6L,QAGzC,GAAIxJ,EAAI0J,UACJF,EAAO5G,MAAQmK,EAAoBvD,EAAQmB,EAAIvK,SAASzC,QAEvD,CACD,IAAI4D,EAAUoJ,EAAIvK,SAASzC,EAAI,GAC/B6L,EAAO5G,MAAQrB,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAG9D,GAAIC,IAAMgN,EAAIvK,SAAS1C,OAAS,EAU5B,GATAsP,EAAyBrC,EAAKnB,GAE1B5G,OADY1B,IAAZ+J,EACQgC,EAAiBtC,EAAKnB,EAAQS,GAG9BiD,EAAYvC,EAAKnB,EAAQS,GAErCkD,EAAqBvK,EAAO+H,EAAKnB,GACjCxJ,EAAIJ,UACAgD,EAAMlF,QAAU,EAChB,IAAKJ,EAAI,EAAGA,EAAIsF,EAAMlF,OAAQJ,IAC1B0C,EAAIJ,OAAO7B,KAAK6E,EAAMtF,SAI1BuP,EAAgBlP,EAUxB,QAPsBuD,IAAlB2L,IACIA,IAAkBlC,EAAIvK,SAAS1C,OAAS,IACxCiN,EAAIvK,SAASyM,EAAgB,GAAGnD,UAAY,KAC5CiB,EAAIvK,SAASyM,EAAgB,GAAGnP,OAAS,MAE7CiN,EAAIvK,SAASgN,OAAOP,EAAe,IAEnCxE,GAAiB,IAAN1K,EAAS,CACpB,IAAIqK,EAAcqF,EAAmB1C,EAAKtC,EAAS0C,GAC/C/C,IACAwB,EAAO5G,MAAQoF,IAI3B,OAAOsF,EAA0B3C,MA9OH4C,CAAwB5C,EAAKnB,EAAQS,EAAQ5B,EAAS4C,EAASF,OAEpF,CACD,IAAKJ,EAAIvK,SAAS,GAAI,CAClB,IAAImB,EAAU,IAAIiM,GAAkB7C,EAAK,YAAc7H,KAAM,eAAgB,GAC7E6H,EAAIvK,SAASrC,KAAKwD,GAEtBoJ,EAAIvK,SAAS,GAAGR,OAASmI,EAwSrC,SAA2B4C,EAAKnB,EAAQS,EAAQwD,GAC5C,IAEIzN,EAFA0N,GAAO,GAGXA,EA2yCJ,SAAqB/D,EAAQQ,GACzB,IAAIuD,GAAO,EACX,OAAQ/D,GACJ,IAAK,OACD,OAAQQ,GACJ,IAAK,QACL,IAAK,SACDuD,GAAO,EAGf,MACJ,IAAK,MACD,OAAQvD,GACJ,IAAK,OACL,IAAK,QACL,IAAK,SACDuD,GAAO,EAGf,MACJ,IAAK,SACD,OAAQvD,GACJ,IAAK,QACDuD,GAAO,GAKvB,OAAOA,EAv0CAC,CAAYnE,EAAOE,UAAWO,EAAOP,aAExCkE,GAAWpE,EAAQS,GAEE,UAArBT,EAAOE,WAA8C,SAArBO,EAAOP,UACvC1J,EA4TR,SAAoC6G,EAAS2C,EAAQS,EAAQyD,GACzD,IAEIG,EAFAxF,EAAUxB,EAAQuB,kBAGlB0F,GAFajH,EAAQ0C,kBAEb7F,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,KAE1D4L,GADQpG,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,KAChDA,EAAGyF,KAAK+I,IAAIjD,EAAO5G,MAAM3E,EAAGuL,EAAO3J,QAAQiK,OAAQ5L,EAAGsL,EAAO5G,MAAM1E,IAC7E2L,GAAS5L,EAAGyF,KAAKqK,IAAI9D,EAAOrH,MAAM3E,EAAGgM,EAAOpK,QAAQgK,MAAO3L,EAAG+L,EAAOrH,MAAM1E,GAC3E0L,EAAS,GACb,GAAI8D,EAAM,CACN,IAAI9K,OAAQ,EACZA,EAAQiH,EACRA,EAAOC,EACPA,EAAQlH,EAEN4G,EAAO3J,QAAQkK,OAASH,EAASK,EAAOpK,QAAQmK,IAAMJ,GACxDJ,EAAO3J,QAAQmK,IAAMJ,EAASK,EAAOpK,QAAQkK,OAASH,IACtDA,EAAS,GAEbJ,EAAOI,QAAWC,KAAMD,EAAQE,MAAOF,EAAQI,IAAKJ,EAAQG,OAAQH,GACpEK,EAAOL,QAAWC,KAAMD,EAAQE,MAAOF,EAAQI,IAAKJ,EAAQG,OAAQH,GAGhEiE,EAFU,IAAVC,IAAgBtE,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAClD6D,GAAQlE,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAC5CmE,eAAaC,IAEdzE,EAAO5G,MAAM3E,EAAIuL,EAAOI,OAAOE,MAAQG,EAAOrH,MAAM3E,EAAIgM,EAAOL,OAAOC,KACrEmE,eAAaE,MAEdrH,EAAQoB,gBAAkBpB,EAAQ8B,gBACtCH,GAA4B3B,EAAQoB,eAAewC,cAAcZ,IAC9DrB,GAA4B3B,EAAQ8B,eAAe8B,cAAcX,IAC/DkE,eAAaE,MAEd1E,EAAO3J,QAAQkK,QAAUE,EAAOpK,QAAQmK,IACvCgE,eAAaG,KAEd3E,EAAO3J,QAAQmK,KAAOC,EAAOpK,QAAQmK,IACpCgE,eAAaG,UAEDjN,IAAZmH,GAAyBA,EAAQpF,SAAWgH,EAAOpK,QAAQmK,UACpD9I,IAAZmH,GAAyBmB,EAAO3J,QAAQiK,OAASG,EAAOpK,QAAQmK,IAC3DgE,eAAaG,WAEDjN,IAAZmH,GAAyBA,EAAQpF,SAAWgH,EAAOpK,QAAQkK,aACpD7I,IAAZmH,IAAyBmB,EAAO3J,QAAQiK,MAASG,EAAOpK,QAAQkK,QAC3DiE,eAAaG,MAKvB,OAAON,EA9WGO,CAA2BzD,EAAKnB,EAAQS,EAAQyD,GAE5B,UAArBlE,EAAOE,WAA8C,UAArBO,EAAOP,UAC5C1J,EA6WR,SAAqC6G,EAASwH,EAAWC,GACrD,IAEIT,EAFAxE,EAAaxC,EAAQuB,kBACrB6C,EAAUpE,EAAQ0C,kBAElBgF,EAAQF,EAAUzL,MAAM3E,EAAIqQ,EAAU1L,MAAM3E,EAC5C6P,EAAQO,EAAUzL,MAAM1E,EAAIoQ,EAAU1L,MAAM1E,EAChDoQ,EAAU1E,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAC3DsE,EAAUzE,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAKnD8D,EAJJQ,EAAUxO,QAAQiK,OAASwE,EAAUzO,QAAQiK,WACzB5I,IAAfmI,IAA6BA,EAAWpG,QAAUqL,EAAUzO,QAAQmK,KACrEX,EAAWpG,QAAUqL,EAAUzO,QAAQkK,cACvB7I,IAAfmI,GAA4BgF,EAAUxO,QAAQ2O,YAAYtQ,EAAIoQ,EAAUzO,QAAQmK,IAC3EgE,eAAaE,WAEEhN,IAAfmI,GAA4BA,EAAWpG,QAAUqL,EAAUzO,QAAQkK,OAASuE,EAAU1E,OAAOG,QAChGsE,EAAUxO,QAAQmK,IAAMsE,EAAUzO,QAAQkK,aAC7B7I,IAAfmI,GAA4BgF,EAAUxO,QAAQ2O,YAAYtQ,EAAIoQ,EAAUzO,QAAQkK,OAC3EiE,eAAaE,WAEEhN,IAAfmI,GAA4BA,EAAWpG,QAAUqL,EAAUzO,QAAQmK,KACtEqE,EAAUxO,QAAQkK,OAASuE,EAAUzO,QAAQmK,UAChC9I,IAAfmI,GAA4BgF,EAAUxO,QAAQ2O,YAAYtQ,EAAIoQ,EAAUzO,QAAQkK,OAC3EiE,eAAaE,MAEdG,EAAUxO,QAAQiK,MAAQwE,EAAUzO,QAAQgK,MACjDyE,EAAUzO,QAAQiK,MAAQuE,EAAUxO,QAAQgK,KACtCmE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,WAGLhN,IAAZ+J,GAAyBoD,EAAUxO,QAAQkK,OAASkB,EAAQhI,cACrD/B,IAAZ+J,GAAyBoD,EAAUxO,QAAQkK,OAASuE,EAAUzO,QAAQ2O,YAAYtQ,EAC7E8P,eAAaE,WAEDhN,IAAZ+J,GAAyBoD,EAAUxO,QAAQmK,IAAMiB,EAAQhI,cAClD/B,IAAZ+J,GAAyBoD,EAAUxO,QAAQmK,IAAMsE,EAAUzO,QAAQ2O,YAAYtQ,EAC1E8P,eAAaE,WAEDhN,IAAZ+J,SAA0C/J,IAAfmI,GAA4BA,EAAWrG,QAAUsL,EAAUzO,QAAQgK,MACpGR,EAAWrG,UAAYiI,EAAQjI,SAAWqG,EAAWpG,UAAYgI,EAAQhI,SACxES,KAAK6G,IAAI8D,EAAUxO,QAAQiK,MAAQwE,EAAUzO,QAAQgK,OAAS,SAC/C3I,IAAfmI,GAA4BgF,EAAUxO,QAAQiK,MAAQwE,EAAUzO,QAAQgK,MACrEwE,EAAUxO,QAAQqI,OAAOjK,IAAMqQ,EAAUzO,QAAQqI,OAAOjK,GAAKoQ,EAAUxO,QAAQqI,OAAOhK,IAAMoQ,EAAUzO,QAAQqI,OAAOhK,GACnH8P,eAAaE,MAEdG,EAAUxO,QAAQiK,MAAQwE,EAAUzO,QAAQgK,KAC3CmE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,MAEvB,OAAOL,EAxaGY,CAA4B9D,EAAKnB,EAAQS,GAErB,UAArBT,EAAOE,WAA8C,QAArBO,EAAOP,UAC5C1J,EAuaR,SAAmC6G,EAAS2C,EAAQS,EAAQyD,GACxD,IAIIG,EAJA5C,EAAUpE,EAAQ0C,kBAClBlB,EAAUxB,EAAQuB,kBAClB0B,GAAU7L,EAAGyF,KAAK+I,IAAIjD,EAAO5G,MAAM3E,EAAGuL,EAAO3J,QAAQiK,OAAQ5L,EAAGsL,EAAO5G,MAAM1E,GAC7E8L,GAAQ/L,EAAGgM,EAAOrH,MAAM3E,EAAGC,EAAGwF,KAAKqK,IAAI9D,EAAOrH,MAAM1E,EAAG+L,EAAOpK,QAAQmK,MAI1E,GAFAC,EAAOL,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GACrDP,EAAOI,QAAWI,IAAK,EAAGD,OAAQ,EAAGF,KAAM,EAAGC,MAAO,GACjD4D,EAAM,CACN,IAAItD,OAAO,EACXA,EAAO/B,EACPA,EAAU4C,EACVA,EAAUb,EAOFyD,OALK3M,IAAZmH,GAAyBA,EAAQpF,QAAUgH,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,UAClE9I,IAAZmH,GAAyBmB,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,IACjFR,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,SACtB9I,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQmB,EAAQjI,cAClE9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQG,EAAOpK,QAAQ6K,UAAUzM,EAC1F+P,eAAaU,IAGbV,eAAaW,UAGLzN,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOoB,EAAQjI,cAChD9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQ6K,UAAUzM,EACnE+P,eAAaW,KAGbX,eAAaU,SAGNxN,IAAZmH,GAAyB3E,KAAK6G,IAAIf,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,OAAS,IACtFnG,KAAK6G,IAAIlC,EAAQpF,QAAUgH,EAAOpK,QAAQmK,MAAQ,GAC5CgE,eAAaU,SAEFxN,IAAZ+J,GAAyBvH,KAAK6G,IAAIU,EAAQjI,QAAUwG,EAAO3J,QAAQ6K,UAAUzM,IAAM,IACxFuL,EAAO3J,QAAQ2O,YAAYtQ,EAAI+M,EAAQhI,QACjC+K,eAAaU,IAEdlF,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,KACrCmE,eAAaW,KAEd9H,EAAQoB,gBAAkBpB,EAAQ8B,gBACtCH,GAA4B3B,EAAQoB,eAAewC,cAAcT,IAC9DxB,GAA4B3B,EAAQ8B,eAAe8B,cAAcX,IAC/DkE,eAAaU,IAGbV,eAAaW,KAEvB,OAAOd,EA3dGe,CAA0BjE,EAAKnB,EAAQS,EAAQyD,GAE3B,UAArBlE,EAAOE,WAA8C,WAArBO,EAAOP,UAC5C1J,EA0dR,SAAsC6G,EAAS2C,EAAQS,EAAQyD,GAC3DlE,EAAOI,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxDE,EAAOL,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxD,IAAI8D,EACAxF,EAAUxB,EAAQuB,kBAClB6C,EAAUpE,EAAQ0C,kBACL7F,KAAK+I,IAAIjD,EAAO5G,MAAM3E,EAAGuL,EAAO3J,QAAQiK,OAAWN,EAAO5G,MAAM1E,EAC/D+L,EAAOrH,MAAM3E,EAAMyF,KAAK+I,IAAIxC,EAAOrH,MAAM1E,EAAG+L,EAAOpK,QAAQkK,QAC7E,GAAI2D,EAAM,CACN,IAAItD,OAAO,EACXA,EAAO/B,EACPA,EAAU4C,EACVA,EAAUb,EAOFyD,OALK3M,IAAZmH,GAAyBA,EAAQpF,QAAUgH,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,aACrE7I,IAAZmH,GAAyBmB,EAAO3J,QAAQ2O,YAAYtQ,EAAI+L,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,OAC3FP,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,YACnB7I,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQmB,EAAQjI,cAClE9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQG,EAAOpK,QAAQgP,aAAa5Q,EAC7F+P,eAAaU,IAGbV,eAAaW,UAGLzN,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOoB,EAAQjI,cAChD9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgP,aAAa5Q,EACtE+P,eAAaW,KAGbX,eAAaU,SAGNxN,IAAZmH,GACL3E,KAAK6G,IAAIf,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,OAAS,IACxDnG,KAAK6G,IAAIlC,EAAQpF,QAAUgH,EAAOpK,QAAQkK,SAAW,GAC/CiE,eAAaU,KAEdlF,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,KACrCmE,eAAaW,MAKvB,OAAOd,EAtgBGiB,CAA6BnE,EAAKnB,EAAQS,EAAQyD,GAE9B,WAArBlE,EAAOE,WAA+C,QAArBO,EAAOP,UAC7C1J,EAqgBR,SAAoCwJ,EAAQS,GACxC,IAAI4D,EACAU,EAAQ/E,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAItC2L,GAHQJ,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EACxBsL,EAAO5G,MAAM3E,EAAMyF,KAAK+I,IAAIjD,EAAO5G,MAAM1E,EAAGsL,EAAO3J,QAAQkK,QAC9DE,EAAOrH,MAAM3E,EAAMyF,KAAKqK,IAAI9D,EAAOrH,MAAM1E,EAAG+L,EAAOpK,QAAQmK,KAC7D,IACPR,EAAO3J,QAAQiK,MAAQF,EAASK,EAAOpK,QAAQgK,KAAOD,GACxDJ,EAAO3J,QAAQgK,KAAOD,EAASK,EAAOpK,QAAQiK,MAAQF,IACtDA,EAAS,GAEbJ,EAAOI,QAAWC,KAAMD,EAAQE,MAAOF,EAAQI,IAAKJ,EAAQG,OAAQH,GACpEK,EAAOL,QAAWC,KAAMD,EAAQE,MAAOF,EAAQI,IAAKJ,EAAQG,OAAQH,GAEhEiE,EADU,IAAVU,GAAe/E,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IAChDgE,eAAaC,IAEdzE,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASE,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,IACjFgE,eAAaE,MAEd1E,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQG,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,KAChFmE,eAAaG,MAEd3E,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAAOI,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,MAC/EkE,eAAaG,MAKvB,OAAON,EAjiBGkB,CAA2BvF,EAAQS,GAEf,WAArBT,EAAOE,WAA+C,WAArBO,EAAOP,WAC7CF,EAAOI,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxDE,EAAOL,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxD/J,EAukBR,SAAuC6G,EAAS2C,EAAQS,GACpD,IAII4D,EAJAxF,EAAUxB,EAAQuB,kBAClB6C,EAAUpE,EAAQ0C,kBAClByF,EAAOtL,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IACzD6P,EAAQpK,KAAKC,MAAMD,KAAK6G,IAAIN,EAAOrH,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IAKtD2P,EAHJrE,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQkK,YACtB7I,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,WACnE3I,IAAZmH,GAAyBmB,EAAO3J,QAAQgP,aAAa5Q,EAAIgM,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,KACxFmE,eAAaE,WAEDhN,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,YACzE5I,IAAZmH,GAAyBmB,EAAO3J,QAAQgP,aAAa5Q,EAAIgM,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,MACzFkE,eAAaE,MAEd1E,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IACtCgE,eAAaG,KAEL,IAATa,GAAwB,IAAVlB,EACbE,eAAaC,IAGbD,eAAaE,WAGLhN,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOoB,EAAQjI,cAChD9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,KACzDmE,eAAaE,WAEDhN,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQmB,EAAQjI,cACjD9B,IAAZ+J,GACGzB,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQiK,MACpCkE,eAAaE,MAEd1E,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,OACnCiE,eAAaG,KAEL,IAATa,GAAwB,IAAVlB,EACbE,eAAaC,IAGbD,eAAaE,MAEvB,OAAOL,EAlnBGoB,CAA8BtE,EAAKnB,EAAQS,IAEvB,WAArBT,EAAOE,WAA+C,SAArBO,EAAOP,UAC7C1J,EA2hBR,SAAqC6G,EAAS2C,EAAQS,EAAQyD,GAC1D,IAIIG,EAJAxF,EAAUxB,EAAQuB,kBAClB6C,EAAUpE,EAAQ0C,kBACJC,EAAO5G,MAAM3E,EAAMyF,KAAK+I,IAAIjD,EAAO5G,MAAM1E,EAAGsL,EAAO3J,QAAQkK,QAC7DrG,KAAKqK,IAAI9D,EAAOrH,MAAM3E,EAAGgM,EAAOpK,QAAQgK,MAAUI,EAAOrH,MAAM1E,EAE/E,GAAIwP,EAAM,CACN,IAAItD,OAAO,EACXA,EAAO/B,EACPA,EAAU4C,EACVA,EAAUb,EAOFyD,OALK3M,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,WACnE3I,IAAZmH,GAAyBmB,EAAO3J,QAAQgP,aAAa5Q,EAAIgM,EAAOpK,QAAQqP,WAAWjR,EAAIgM,EAAOL,OAAOC,KAClGL,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,UACrB3I,IAAZ+J,GAAyBzB,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASkB,EAAQhI,cACpE/B,IAAZ+J,GAAyBzB,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASE,EAAOpK,QAAQsP,WAAWjR,EAC7F8P,eAAaU,IAGbV,eAAaW,UAGLzN,IAAZ+J,GAAyBzB,EAAO3J,QAAQmK,IAAMiB,EAAQhI,cAC/C/B,IAAZ+J,GAAyBzB,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQsP,WAAWjR,EACnE8P,eAAaW,KAGbX,eAAaU,SAGNxN,IAAZ+J,GACLvH,KAAK6G,IAAIf,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,OAAS,IACxDnG,KAAK6G,IAAIU,EAAQhI,QAAUuG,EAAO3J,QAAQkK,SAAW,GAC/CiE,eAAaU,IAGbV,eAAaW,KAEvB,OAAOd,EAlkBGuB,CAA4BzE,EAAKnB,EAAQS,EAAQyD,GAE7B,SAArBlE,EAAOE,WAA6C,SAArBO,EAAOP,UAC3C1J,EAgqBR,SAAmC6G,EAAS2C,EAAQS,GAChD,IAAI5B,EAAUxB,EAAQuB,kBAClBkB,EAAazC,EAAQ0C,kBACzBC,EAAOI,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxDE,EAAOL,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxD,IAEI8D,EAFAU,EAAQ7K,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAC1D6P,EAAQpK,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IAKtD2P,EAHJrE,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,UACjB3I,IAAfoI,GAA4BE,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAAST,EAAWrG,cACvE/B,IAAfoI,GAA4BE,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASE,EAAOpK,QAAQsP,WAAWjR,EAChG8P,eAAaE,WAEEhN,IAAfoI,GAA4BE,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,IAAMV,EAAWrG,cACtE/B,IAAfoI,GAA4BE,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,IAAMC,EAAOpK,QAAQsP,WAAWjR,EAC1F8P,eAAaE,MAEd1E,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQgK,MAC3CI,EAAOpK,QAAQiK,MAAQN,EAAO3J,QAAQgK,KAChCmE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,WAGLhN,IAAZmH,GAAyBA,EAAQpF,QAAUgH,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,UACvE9I,IAAZmH,GAAyBmB,EAAO3J,QAAQsP,WAAWjR,EAAI+L,EAAOpK,QAAQmK,IACjEgE,eAAaE,WAEDhN,IAAZmH,GAAyBA,EAAQpF,QAAUgH,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,aAC1E7I,IAAZmH,GAAyBmB,EAAO3J,QAAQsP,WAAWjR,EAAI+L,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,OACxFiE,eAAaE,MAEd1E,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,MACpCkE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,MAEvB,OAAOL,EA7sBGwB,CAA0B1E,EAAKnB,EAAQS,GAEnB,SAArBT,EAAOE,WAA6C,QAArBO,EAAOP,UAC3C1J,EA2mBR,SAAkC6G,EAAS2C,EAAQS,EAAQyD,GACvD,IAAIG,EACAxE,EAAaxC,EAAQuB,kBACrB6C,EAAUpE,EAAQ0C,kBAClBM,GAAS5L,EAAGyF,KAAKqK,IAAIvE,EAAO5G,MAAM3E,EAAGuL,EAAO3J,QAAQgK,MAAO3L,EAAGsL,EAAO5G,MAAM1E,GAC3E8L,GAAQ/L,EAAGgM,EAAOrH,MAAM3E,EAAGC,EAAGwF,KAAKqK,IAAI9D,EAAOrH,MAAM1E,EAAG+L,EAAOpK,QAAQmK,MAC1E,GAAI0D,EAAM,CACN,IAAItD,OAAO,EACXA,EAAOf,EACPA,EAAa4B,EACbA,EAAUb,EAQFyD,OANQ3M,IAAfmI,GAA4BA,EAAWpG,QAAUgH,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,UACrE9I,IAAfmI,IAA6BG,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,KACrFR,EAAO3J,QAAQsP,WAAWjR,EAAI+L,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,KACjER,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,SACtB9I,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAAOoB,EAAQjI,cAChE9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAAOI,EAAOpK,QAAQ6K,UAAUzM,EACxF+P,eAAaU,IAGbV,eAAaW,UAGLzN,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQmB,EAAQjI,cACjD9B,IAAZ+J,GAAyBzB,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQ6K,UAAUzM,EACpE+P,eAAaW,KAGbX,eAAaU,SAGHxN,IAAfmI,GACL3F,KAAK6G,IAAIf,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,QAAU,IACxDpG,KAAK6G,IAAIlB,EAAWpG,QAAUgH,EAAOpK,QAAQmK,MAAQ,GAC/CgE,eAAaU,IAEd7H,EAAQoB,gBAAkBpB,EAAQ8B,gBACtCH,GAA4B3B,EAAQoB,eAAewC,cAAcT,IAC9DxB,GAA4B3B,EAAQ8B,eAAe8B,cAAcZ,IAC/DmE,eAAaU,KAEdlF,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,MACpCkE,eAAaW,MAKvB,OAAOd,EA3pBGyB,CAAyB3E,EAAKnB,EAAQS,EAAQyD,GAE1B,QAArBlE,EAAOE,WAA4C,QAArBO,EAAOP,YAC1C1J,EAysBR,SAAiC6G,EAAS2C,EAAQS,GAC9C,IAAI5B,EAAUxB,EAAQuB,kBAClBkB,EAAazC,EAAQ0C,kBACrBgF,EAAQ7K,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAC1D6P,EAAQpK,KAAKC,MAAMD,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IAC9DsL,EAAOI,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IACxD,IAAI8D,EACJ5D,EAAOL,QAAWC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAIhD8D,EAHJrE,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQmK,SAChB9I,IAAfoI,GAA4BE,EAAO3J,QAAQgK,KAAOP,EAAWtG,cAC9C9B,IAAfoI,GAA4BE,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,KAC5DmE,eAAaE,WAEEhN,IAAfoI,GAA4BE,EAAO3J,QAAQiK,MAAQR,EAAWtG,cACpD9B,IAAfoI,GAA4BE,EAAO3J,QAAQiK,MAAQG,EAAOpK,QAAQiK,MAC7DkE,eAAaE,MAEd1E,EAAO3J,QAAQkK,OAASE,EAAOpK,QAAQmK,IACtCgE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,WAGLhN,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQiK,YACnD5I,IAAZmH,GAAyBmB,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,MACzDkE,eAAaE,WAEDhN,IAAZmH,GAAyBA,EAAQrF,QAAUiH,EAAOpK,QAAQgK,WACnD3I,IAAZmH,GAAyBmB,EAAO3J,QAAQ0P,YAAYtR,EAAIgM,EAAOpK,QAAQgK,KAClEmE,eAAaE,MAEd1E,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,OACnCiE,eAAaG,KAEJ,IAAVI,GAAyB,IAAVT,EACdE,eAAaC,IAGbD,eAAaE,MAEvB,OAAOL,EArvBG2B,CAAwB7E,EAAKnB,EAAQS,IAE3CyD,GACAE,GAAWpE,EAAQS,GAGvB,OAivBJ,SAA0BpD,EAAS7G,EAAKwJ,EAAQS,EAAQwF,GACpD,IAGI1H,EAHA2H,EAAM7I,EAAQoB,cACd0H,EAAM9I,EAAQ8B,cAGdc,GAFU5C,EAAQ0C,kBAENmG,EAAI7P,SAChBqK,EAAYyF,EAAI9P,QAChB4N,EAAQ,GACZ,KAAIjE,EAAOE,YAAcO,EAAOP,WAAa1J,IAAQgO,eAAaG,MAC1D3E,EAAOE,YAAcuC,GAAqBhC,EAAOP,YAAc1J,IAAQgO,eAAaE,OACpF,OAAQ1E,EAAOE,WACX,IAAK,OACGD,EAAU0F,WAAWlR,EAAIiM,EAAUsE,YAAYvQ,IAC/CwP,EAAQ/J,KAAKqK,IAAIN,GAAQhE,EAAU0F,WAAWlR,EAAIiM,EAAUsE,YAAYvQ,GAAK,IAEjF,MACJ,IAAK,QACGwL,EAAU+E,YAAYvQ,EAAIiM,EAAUiF,WAAWlR,IAC/CwP,EAAQ/J,KAAKqK,IAAIN,GAAQvD,EAAUiF,WAAWlR,EAAIwL,EAAU+E,YAAYvQ,GAAK,IAEjF,MACJ,IAAK,MACGwL,EAAUiB,UAAUxM,EAAIgM,EAAU2E,aAAa3Q,IAC/CuP,EAAQ/J,KAAKqK,IAAIN,GAAQhE,EAAUiB,UAAUxM,EAAIgM,EAAU2E,aAAa3Q,GAAK,IAEjF,MACJ,IAAK,SACGuL,EAAUoF,aAAa3Q,EAAIgM,EAAUQ,UAAUxM,IAC/CuP,EAAQ/J,KAAKqK,IAAIN,GAAQvD,EAAUQ,UAAUxM,EAAIuL,EAAUoF,aAAa3Q,GAAK,IAmBjG,GAbAuP,EAAQmC,GAAoBnG,EAAWD,EAAQiE,GAC3CgC,IACAhC,EAAQ/J,KAAK+I,IAAIgB,EAAOgC,IAExBzP,IAAQgO,eAAaC,MACrBlG,GAAuByB,EAAO5G,MAAOqH,EAAOrH,QAE5C5C,IAAQgO,eAAaU,MACrB3G,EAAsB8H,GAAwBrG,EAAQS,IAEtDjK,IAAQgO,eAAaE,QACrBnG,EAAsB+H,GAAwBjJ,EAAS2C,EAAQS,EAAQwD,IAEvEzN,IAAQgO,eAAaW,KAAM,CAC3B,IAAIoB,OAAU7O,EACd6G,EAAsBiI,GAAwBxG,EAAQS,EAAQ8F,EAAShI,EAAqB0F,GAKhG,OAHIzN,IAAQgO,eAAaG,OACrBpG,EAmJR,SAAiCyB,EAAQS,EAAQwD,QAC/B,IAAVA,IAAoBA,EAAQ,IAChC,IAAI1F,EAUAkI,EATAvS,EAAS+P,EACTyC,EAAQ1G,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAC5CsG,EAAS3G,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAC9CsG,EAAU5G,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAChDsG,EAAO7G,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,IAC1CsG,EAAQrG,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,KAC5C0G,EAAStG,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,MAC9C0G,EAAUvG,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,OAChD0G,EAAOxG,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,IAE9C,OAAQR,EAAOE,WACX,IAAK,QACI2G,EAAOI,GAAQJ,EAAOG,GAAWJ,EAAUI,GAAWJ,EAAUK,IACjEP,EAAQI,GAASJ,GAASK,GAAU9C,GAAS,KAC7C/P,EAAS8L,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,KAAOnM,GAEpDuS,EAAeS,GAAelH,EAAO5G,MAAOlF,EAAQ,KACpD,MACJ,IAAK,OACIwS,EAAQI,GAASJ,EAAQK,GAAUJ,EAASI,GAAUJ,EAASG,IAChED,EAAOI,GAAQJ,GAAQG,GAAW/C,GAAS,KAC3C/P,EAAS8L,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQmK,IAAMtM,GAEnDuS,EAAeS,GAAelH,EAAO5G,MAAOlF,EAAQ,KACpD,MACJ,IAAK,SACI2S,EAAOI,GAAQJ,EAAOG,GAAWJ,EAAUI,GAAWJ,EAAUK,IACjEN,EAASI,GAAUJ,GAAUG,GAAS7C,GAAS,KAC/C/P,EAASuM,EAAOpK,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAIP,GAErDuS,EAAeS,GAAelH,EAAO5G,MAAOlF,EAAQ,GACpD,MACJ,IAAK,UACIwS,EAAQI,GAASJ,EAAQK,GAAUJ,EAASI,GAAUJ,EAASG,IAChEF,EAAUI,GAAWJ,GAAWK,GAAQhD,GAAS,KACjD/P,EAASuM,EAAOpK,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAIR,GAEtDuS,EAAeS,GAAelH,EAAO5G,MAAOlF,EAAQ,IAO5D,GAJAqK,GACIyB,EAAO5G,MACPqN,GAEqB,QAArBzG,EAAOE,WAA4C,WAArBF,EAAOE,UAAwB,CAC7D,IAAIqG,EAAUvG,EAAOE,UACrBF,EAAOE,UAAYuG,EAAahS,EAAIgM,EAAOrH,MAAM3E,EAAI,OAAS,QAC9DuL,EAAO5G,MAAQqN,EACflI,EAAsBiI,GAAwBxG,EAAQS,EAAQ8F,EAAShI,OAEtE,CACD,IAAIgI,EAAUvG,EAAOE,UACrBF,EAAOE,UAAYuG,EAAa/R,EAAI+L,EAAOrH,MAAM1E,EAAI,MAAQ,SAC7DsL,EAAO5G,MAAQqN,EACflI,EAAsBiI,GAAwBxG,EAAQS,EAAQ8F,EAAShI,GAE3E,OAAOA,EA9MmB4I,CAAwBnH,EAAQS,EAAQwD,IAE3D1F,EAxyBe6I,CAAiBjG,EAAK3K,EAAKwJ,EAAQS,EAAQwD,GAnVVoD,CAAkBlG,EAAKnB,EAAQS,GAGtF,OAAOlC,EApuBI+I,CAAuBjK,EAAS2C,EAAOE,UAAWO,EAAOP,UAAWF,EAAO5G,MAAOqH,EAAOrH,OAGpGuJ,EAA2BtF,IACvBA,EAAQoB,eAAiBpB,EAAQ8B,gBAmezC,SAAyB9B,EAAS2C,EAAQS,GACtC,IAMIa,EANAzB,EAAaxC,EAAQuB,kBACrBkB,EAAazC,EAAQ0C,kBACrB/B,EAAOX,EAAQoB,cACf8I,EAAavH,EAAO5G,MACpBoO,GAAenH,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAClDkH,GAAwBhT,EAAG,EAAGC,EAAG,GAEjCgT,EAAgB,MACf1J,GAKDuJ,EAAa9G,EAAOrH,MACpBoO,EAAaxH,EAAOI,SALpBpC,EAAOX,EAAQ8B,cACfqI,EAAa/G,EAAOL,QAMxB,GAAqB,eAAjB/C,EAAQ/D,KACR,GAAK+D,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,GAAMmJ,EAAQoB,eAC7DpB,EAAQzG,SAAS,GAAGsJ,UACpBF,EAAOE,UAAY7C,EAAQzG,SAAS,GAAGsJ,UACvCuH,EAAsBjF,GAAUxE,EAAK3H,QAAS2J,EAAOE,WACrDoB,EAAWkB,GAAUxE,EAAK3H,QAASoM,GAAqBzC,EAAOE,YAC/DuH,EAAsBnI,GAAgBjC,EAASW,EAAMyJ,EAAqBnG,GAAU,OAEnF,CACD,IAAIqG,GAAatR,QAAS,KAAM6J,UAAW,KAAM9G,MAAOmO,EAAYnH,OAAQoH,GACxEI,GAAavR,QAAS,KAAM6J,UAAW,KAAM9G,MAAO,KAAMgH,OAAQ,MACtEyH,EAAc7J,EAAM2J,EAAUC,EAAUvK,GACxCoK,EAAsBG,EAASxO,MAC/BsO,EAAgBE,EAAS1H,cAG5B,CACD,IAAI4H,OAAe,EACfzK,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,IAE1C4T,EADA9J,IAASX,EAAQoB,cACFpB,EAAQzG,SAAS,GAAGwC,MAGpBiE,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGkF,OAGrEqO,EAAsBnI,GAAgBjC,EAASW,EAAMA,EAAKiB,OAAOP,OAASrB,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,EAAK4T,EAAeP,EAAYvJ,IAASX,EAAQ8B,eAEzKnB,IAASX,EAAQoB,eACjBuB,EAAOE,UAAYF,EAAOE,WAAawH,EACvC1H,EAAO5G,MAAQqO,EACXpK,EAAQuB,oBACRoB,EAAO5G,OAAU3E,EAAGoL,EAAWrG,QAAS9E,EAAGmL,EAAWpG,YAI1DgH,EAAOP,UAAYO,EAAOP,WAAawH,EACvCjH,EAAOrH,MAAQqO,EACXpK,EAAQ0C,oBACRU,EAAOrH,OAAU3E,EAAGqL,EAAWtG,QAAS9E,EAAGoL,EAAWrG,WA1hB1DsO,CAAgB1K,EAAS2C,EAAQS,GAErC,GAAqB,aAAjBpD,EAAQ/D,MAAwC,WAAjB+D,EAAQ/D,KACvCiF,EAAsB6E,EAA+B/F,EAAS2C,EAAQS,QAGtE,GAAqB,eAAjBpD,EAAQ/D,MAAyB+D,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,GAChD,OAA/BmJ,EAAQzG,SAAS,GAAG1C,QACc,OAAlCmJ,EAAQzG,SAAS,GAAGsJ,UACpB3B,EA+WZ,SAA+BlB,EAAS2C,EAAQS,EAAQd,EAAYC,EAAYC,EAAYC,GACxF,IAAIhM,EACAsF,EAEA8G,EACAU,EAFArC,KAGJoE,EAC2BtF,GAC3B,IAAIgG,EACJ,GAAIhG,EAAQzG,SAAS1C,OAAS,EAAG,CAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIkJ,EAAQzG,SAAS1C,OAAQC,IAAK,CAC9C,IAAI6T,EAAQ3K,EAAQzG,SAASzC,GAQ7B,GAPU,IAANA,QAAyCuD,IAA9B2F,EAAQuB,oBACnBgC,GAASnM,EAAGoL,EAAWrG,QAAS9E,EAAGmL,EAAWpG,SAC9CyG,EAAYnB,GAAiB6B,EAAM5B,GAA4BW,GAAaA,EAAWV,QAAQ,GAC3F+I,EAAM9H,YAAcuC,GAAqBvC,KACzC8H,EAAM9H,UAAYA,IAGtB/L,EAAI,GAAKkJ,EAAQzG,SAASzC,EAAI,GAAG+L,YAAc8H,EAAM9H,UACrD/L,EAAImP,EAA6BjG,EAASlJ,EAAG6L,OAE5C,CACD,IAAIiI,EAAc5K,EAAQzG,SAASzC,EAAI,GACvC6L,EAAO5G,MAAS4O,EAAe,UAAIzE,EAAoBvD,EAAQgI,GAC3DC,EAAY7R,OAAO6R,EAAY7R,OAAOlC,OAAS,GAEvD,GAAIC,IAAMkJ,EAAQzG,SAAS1C,OAAS,EAahC,GAZK4L,GAAeF,EAGXvC,EAAQ8B,oBAA+CzH,IAA9B2F,EAAQ0C,mBACtCyD,EAAyBnG,EAAS2C,GAClC5G,EAAQ8O,EAAY7K,EAAS2C,EAAQS,IAGrCrH,EAAQsK,EAAYrG,EAAS2C,EAAQS,GAPrCrH,EAAQ+O,EAAa9K,EAAS2C,EAAQS,GAS1CkD,EAAqBvK,EAAOiE,EAAS2C,GACrCgI,EAAM5R,UACFgD,EAAMlF,QAAU,EAChB,IAAKJ,EAAI,EAAGA,EAAIsF,EAAMlF,OAAQJ,IAC1BkU,EAAM5R,OAAO7B,KAAK6E,EAAMtF,SAI5BuP,EAAgBlP,EAGxB,GAAI0L,GAAoB,IAAN1L,EAAS,CACvB,IAAIqK,EAAcqF,EAAmBxG,EAASwC,EAAYF,GACtDnB,IACAwB,EAAO5G,MAAQoF,SAIL9G,IAAlB2L,IACIA,IAAkBhG,EAAQzG,SAAS1C,OAAS,IAC5CmJ,EAAQzG,SAASyM,EAAgB,GAAGnD,UAAY,KAChD7C,EAAQzG,SAASyM,EAAgB,GAAGnP,OAAS,MAEjDmJ,EAAQzG,SAASgN,OAAOP,EAAe,IAE3C9E,EAAsBuF,EAA0BzG,EAASkB,GAE7D,OAAOA,EAhbuB6J,CAAsB/K,EAAS2C,EAAQS,EAAQd,EAAYC,EAAYC,EAAYC,OAExG,CACD,IAAImE,OAAQ,EACPjE,EAAOE,UAKR+D,EAAQmC,GAAoBzG,EAAWV,OAAQe,EAAQ,IAJvDA,EAAOE,UAAaO,EAAgB,eAAoC/I,IAA9B2F,EAAQ0C,kBAAmCU,EAAOP,UAAYuC,GAAqBhC,EAAOP,WAChI0C,GAAM1C,UAAUF,EAAO5G,MAAOqH,EAAOrH,OAK7CiE,EAAQzG,SAAS,GAAGR,OAASmI,EAAsB+H,GAAwBjJ,EAAS2C,EAAQS,EAAQwD,GAG5G,OAAO1F,EA1Je8J,CAAoBhL,EAASmB,EAAanB,EAAQiL,YAAahK,GACrFiK,GAAgBlL,EAASkB,EAAoB,IAAI,GACjDgK,GAAgBlL,EAASkB,EAAoBA,EAAoBrK,OAAS,IAAI,GACvEqK,EAyJX,SAASgF,EAAoBvD,EAAQjI,GACjC,IAAIyQ,EACAvT,EACAgP,EAQJ,OAPAjE,EAAOE,UAAYnI,EAAQmI,UAC3BnI,EAAQ3B,UACR2B,EAAQ3B,OAAO7B,KAAKyL,EAAO5G,OAC3B6K,EAA+B,SAAtBlM,EAAQmI,WAA8C,QAAtBnI,EAAQmI,WAAyBnI,EAAc,OAAIA,EAAQ7D,OACpGe,EAA+B,SAAtB8C,EAAQmI,WAA8C,UAAtBnI,EAAQmI,UAAyB,EAAI,GAC9EsI,EAAWtB,GAAelH,EAAO5G,MAAO6K,EAAOhP,GAC/C8C,EAAQ3B,OAAO7B,KAAKiU,GACbA,EAEX,SAASL,EAAa9K,EAAS2C,EAAQS,GACnC,IAAIrH,EACA8G,EACAuI,EAEJ,GADAzI,EAAO3J,QAAWgH,EAAqB,cAAIA,EAAQoB,cAAcpI,aAAUqB,EACvE2F,EAAQuB,kBAAmB,CAE3B6J,EAAgB1J,IADHtK,EAAG4I,EAAQuB,kBAAkBpF,QAAS9E,EAAG2I,EAAQuB,kBAAkBnF,SACzCuF,GAA4B3B,EAAQoB,eAAgBpB,EAAQoB,cAAcQ,QAAQ,IACrHe,EAAO3J,SAAiC,WAArB2J,EAAOE,WAA+C,QAArBF,EAAOE,WAKtDF,EAAO3J,SAAiC,SAArB2J,EAAOE,WAA6C,UAArBF,EAAOE,WAC1DO,EAAOrH,MAAM1E,EAAIsL,EAAO3J,QAAQmK,KAAOC,EAAOrH,MAAM1E,EAAIsL,EAAO3J,QAAQkK,SACvEL,EAAaF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,SANzDgM,EAAOrH,MAAM3E,EAAIuL,EAAO3J,QAAQgK,MAAQI,EAAOrH,MAAM3E,EAAIuL,EAAO3J,QAAQiK,QACxEJ,EAAaF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,UASpE,GAAI2I,EAAQuB,mBAAqB6J,IAAkBhG,GAAqBvC,GAAY,CAChF,IAAIwI,GACmB,SAAlBD,GAA8C,UAAlBA,IAA+BzI,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAC1FR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQqI,OAAOhK,GAC1C+L,EAAOrH,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOC,EAAOrH,MAAM1E,GAAKsL,EAAO3J,QAAQqI,OAAOhK,GACjFsL,EAAOE,UAAY,MACnBwI,EAAW1I,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,KAEzB,SAAlBiI,GAA8C,UAAlBA,IAA+BzI,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQqI,OAAOhK,GACrGsL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QACnCE,EAAOrH,MAAM1E,EAAIsL,EAAO3J,QAAQqI,OAAOhK,GAAK+L,EAAOrH,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QAC9EP,EAAOE,UAAY,SACnBwI,EAAW1I,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,KAE5B,QAAlB+T,GAA6C,WAAlBA,IAAgCzI,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAC/FL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQqI,OAAOjK,GAC1CgM,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQI,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQqI,OAAOjK,GAClFuL,EAAOE,UAAY,OACnBwI,EAAW1I,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAAO,KAE1B,QAAlBoI,GAA6C,WAAlBA,IAAgCzI,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC/FN,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQqI,OAAOjK,GACzCgM,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAASG,EAAOrH,MAAM3E,EAAIuL,EAAO3J,QAAQqI,OAAOjK,IAClFuL,EAAOE,UAAY,QACnBwI,EAAW1I,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAI,IAEnDuL,EAAOE,WAAawI,IACpBtP,EAAQkN,GAAwBjJ,EAAS2C,EAAQS,EAAQiI,GAAU,SAIvE1I,EAAOE,UAAY,GAA0ByI,EAAoB3I,EAAOE,UAAWF,EAAO5G,MAAOqH,EAAOrH,OACxGA,EAAQiN,GAAwBrG,EAAQS,GAE5C,OAAOrH,EAEX,SAAS8O,EAAY7K,EAAS2C,EAAQS,GAClC,IAAIrH,EACJqH,EAAOpK,QAAUgH,EAAQ8B,cAAc9I,QACvCwR,EAAcxK,EAAQ8B,cAAea,EAAQS,EAAQpD,GACrD,IAAI6C,EAAYyI,EAAoBlI,EAAOP,UAAWF,EAAO5G,MAAOqH,EAAOrH,OAC3E,GAAI4G,EAAOE,YAAcO,EAAOP,WAAmC,SAArBF,EAAOE,WAA6C,UAArBF,EAAOE,UAShFF,EAAOE,UAAYA,EACnB9G,EAAQiN,GAAwBrG,EAAQS,OAVgE,CACxGT,EAAOE,UAAYA,EACnB9G,EAAQkN,GAAwBjJ,EAAS2C,EAAQS,EAAQpD,EAAQ8B,cAAcnJ,MAAQ,EAAI,IAC7EgK,EACN5G,MAAQA,EAAM,GACtByO,EAAcxK,EAAQ8B,cAAea,EAAQS,EAAQpD,GACrDjE,EAAQkN,GAAwBjJ,EAAS2C,EAAQS,GAMrD,OAAOrH,EAEX,SAASwP,EAAUvL,EAAS2C,EAAQS,GAChC,IAAIa,EACJb,EAAOpK,QAAUgH,EAAQ8B,cAAc9I,QACvC,IAAI6J,EACAhM,EACqB,SAArB8L,EAAOE,WAA6C,UAArBF,EAAOE,UAClCO,EAAOpK,QAAQqI,OAAOhK,IAAMsL,EAAO5G,MAAM1E,GACtC+L,EAAOpK,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO5G,MAAM3E,GAAKgM,EAAOpK,QAAQiK,MAIvEG,EAAOpK,QAAQqI,OAAOhK,IAAMsL,EAAO5G,MAAM1E,GACa,WAA5D2I,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGgM,WAC7CO,EAAOpK,QAAQqI,OAAOhK,EAAIsL,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQmK,KAC9EN,EAAY,MACZhM,EAAU8L,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQmK,IAAO,IAE3CC,EAAOpK,QAAQqI,OAAOhK,IAAMsL,EAAO5G,MAAM1E,GACa,QAA5D2I,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGgM,WAC7CO,EAAOpK,QAAQqI,OAAOhK,EAAIsL,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQkK,QAC9EL,EAAY,SACZhM,EAAUuM,EAAOpK,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAK,SAEjBgD,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBACxDC,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,SACzEL,EAAYF,EAAOE,UACnBhM,EAAU8L,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAMsL,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,GAC/ER,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,KAnB9CwL,EAAY,MACZhM,EAASuM,EAAOpK,QAAQN,OAAS,EAAI,IAsBrC0K,EAAOpK,QAAQqI,OAAOjK,IAAMuL,EAAO5G,MAAM3E,GACtCgM,EAAOpK,QAAQmK,IAAMR,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQkK,OAIrEE,EAAOpK,QAAQqI,OAAOjK,IAAMuL,EAAO5G,MAAM3E,GACa,UAA5D4I,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGgM,WAC1CO,EAAOpK,QAAQqI,OAAOjK,EAAIuL,EAAO5G,MAAM3E,GAAKuL,EAAO5G,MAAM3E,GAAKgM,EAAOpK,QAAQgK,MACjFH,EAAY,OACZhM,EAAU8L,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,KAAQ,IAE5CI,EAAOpK,QAAQqI,OAAOjK,IAAMuL,EAAO5G,MAAM3E,GACa,SAA5D4I,EAAQzG,SAASyG,EAAQzG,SAAS1C,OAAS,GAAGgM,WAC7CO,EAAOpK,QAAQqI,OAAOjK,GAAKuL,EAAO5G,MAAM3E,GAAKuL,EAAO5G,MAAM3E,GAAKgM,EAAOpK,QAAQiK,OAC/EJ,EAAY,QACZhM,EAAUuM,EAAOpK,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAK,SAEhBiD,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBACxDC,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QAC1EJ,EAAYF,EAAOE,UACnBhM,EAAU8L,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAMuL,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAAO,GAChFL,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAI,KAnB7CyL,EAAY,OACZhM,EAASuM,EAAOpK,QAAQL,MAAQ,EAAI,IAqB5C,IAAIiO,EAAuB,SAAd/D,GAAsC,QAAdA,KAAmChM,EACpEe,EAAuB,SAAdiL,GAAsC,UAAdA,EAAyB,EAAI,GAClEoB,EAAWtB,EAAO5G,MAClB4G,EAAO5G,MAAQ8N,GAAelH,EAAO5G,MAAO6K,EAAOhP,GACnD+K,EAAOE,UAAY0C,GAAM1C,UAAUF,EAAO5G,MAAOqH,EAAOrH,YACtB1B,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBAClDC,EAAO3J,QAAQqI,OAAOjK,IAAMgM,EAAOpK,QAAQqI,OAAOjK,GAAKuL,EAAO3J,QAAQqI,OAAOhK,IAAM+L,EAAOpK,QAAQqI,OAAOhK,IAC1GsL,EAAOE,UAAYO,EAAOP,WAE9B,IAAI9G,EAAQkN,GAAwBjJ,EAAS2C,EAAQS,GAErD,OADArH,EAAMwK,OAAO,EAAG,EAAGtC,GACZlI,EAmIX,SAASsK,EAAYrG,EAAS2C,EAAQS,GAClC,IAAIrH,EACJqH,EAAOpK,QAAUgH,EAAQ8B,cAAc9I,QACvC,IAAIoS,EAEJ,QAAkC/Q,IAA9B2F,EAAQuB,kBAAiC,CAEzC6J,EAAgB1J,IADHtK,EAAG4I,EAAQuB,kBAAkBpF,QAAS9E,EAAG2I,EAAQuB,kBAAkBnF,SACzCuF,GAA4B3B,EAAQoB,eAAgBpB,EAAQoB,cAAcQ,QAAQ,GAE7H,IAAI4J,EA1IR,SAA8BxL,EAAS2C,EAAQS,EAAQqI,GACnD,IAAID,GAAS,EACb,OAAQpI,EAAOP,WACX,IAAK,YACiCxI,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBAAgD,UAAZ+I,GACvF9I,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KACpER,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,SACf,WAAZuI,GAAwB9I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC3C,QAAZoU,GAAqB9I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IACpDsL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC9EN,EAAOE,UAAyB,UAAZ4I,EAAyB9I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,SACnFsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAI,QAAU,OACjDoU,GAAS,GAEJ7I,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAAMuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,MACpG+L,EAAOpK,QAAQmK,IAAMR,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQkK,OAASP,EAAO5G,MAAM1E,GAClFsL,EAAOE,UAAY,OAEbF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACtEsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAMuL,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM1E,GAC3D+L,EAAOpK,QAAQmK,IAAMR,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQqI,OAAOhK,GAAKsL,EAAO5G,MAAM1E,EACxFsL,EAAOE,UAAY,MAEbF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACtEsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAMuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC1D+L,EAAOpK,QAAQkK,OAASP,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQqI,OAAOhK,EAAIsL,EAAO5G,MAAM1E,EAC1FsL,EAAOE,UAAY,SAEdF,EAAO5G,MAAM1E,IAAM+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IACxEuL,EAAOE,UAAY,SAEvB,MACJ,IAAK,aACiCxI,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,oBACrC,WAAZ+I,GAAwB9I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACvC,QAAZoU,GAAqB9I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IAAOsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAC5FuL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC3EN,EAAOE,UAAaF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,QAChEoU,GAAS,QAE0BnR,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBAC5C,SAAZ+I,GAAsB9I,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAMuL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAC3FR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QACjCP,EAAOE,UAAaF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,SAC/DmU,GAAS,GAEJ7I,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKgM,EAAOpK,QAAQmK,KAAOR,EAAO5G,MAAM1E,GACxE+L,EAAOpK,QAAQkK,QAAUP,EAAO5G,MAAM1E,GAAKsL,EAAO5G,MAAM1E,IAAM+L,EAAOrH,MAAM1E,EAC9EsL,EAAOE,UAAY,MAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,MAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,SAEdF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAAMuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACvEsL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC9BsL,EAAOE,UAAY,QAEdF,EAAO5G,MAAM1E,IAAM+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IACxEuL,EAAOE,UAAY,QAEvB,MACJ,IAAK,WACiCxI,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBAAgD,WAAZ+I,GACvF9I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MACpEL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QAAyB,UAAZwI,GAAuB9I,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GACtF,SAAZqU,GAAsBrI,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,IACvFuL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QAC1EP,EAAOE,UAAyB,WAAZ4I,EAA0B9I,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,QACrFuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,SAAW,MACnDmU,GAAS,GAEJ7I,EAAO5G,MAAM3E,IAAMgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EACxEsL,EAAOE,UAAY,SAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,MACxEL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,MAChCN,EAAOE,UAAY,OAEdF,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM1E,EACpCsL,EAAOE,UAAY,MAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,OAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IACtEuL,EAAOE,UAAY,SAEvB,MACJ,IAAK,cACiCxI,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,qBAAmD,UAAZ+I,GAC7E,SAAZA,GAAsBrI,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,IAAQuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC3FsL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QAC1D,QAAZuI,GAAqB9I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACjDsL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QAE3EN,EAAOE,UADK,UAAZ4I,GAAmC,SAAZA,EACH9I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,SAG3CsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,QAEpEoU,GAAS,GAEJ7I,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,MACxEI,EAAOpK,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAChCuL,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQgK,MACnEI,EAAOpK,QAAQqI,OAAOjK,GAAKuL,EAAO5G,MAAM3E,EACxCuL,EAAOE,UAAY,OAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,OACxEG,EAAOpK,QAAQqI,OAAOjK,EAAIuL,EAAO5G,MAAM3E,IACvCuL,EAAOE,UAAY,SAGlBF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,OAEdF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EACtEuL,EAAOE,UAAY,QAEdF,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM1E,IAAMsL,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAAKgM,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,KAC3GuL,EAAOE,UAAY,UAI/B,OAAO2I,EAWME,CAAqB1L,EAAS2C,EAAQS,EAAQgI,GAwD3D,YAvDkC/Q,IAA9B2F,EAAQuB,wBAAiElH,IAA9B2F,EAAQ0C,mBACnDU,EAAOP,YAAcuC,GAAqBgG,MACjB,SAArBhI,EAAOP,WAAwBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAA4B,UAArBgM,EAAOP,WAC3EF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAAOuL,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KACtER,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QAAiC,WAArBE,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC3GsL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC/ElH,EAAQwP,EAAUvL,EAAS2C,EAAQS,GAE9BT,EAAOE,YAAcO,EAAOP,UACjC9G,EAAQkN,GAAwBjJ,EAAS2C,EAAQS,IAEpB,SAArBA,EAAOP,WAAwBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,GAC/C,UAArBgM,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,KAA6B,QAArBuL,EAAOE,WAA4C,WAArBF,EAAOE,YACvGF,EAAO5G,MAAM1E,GAAK+L,EAAOrH,MAAM1E,GAC9B+L,EAAOpK,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAK+L,EAAOpK,QAAQkK,QAAUP,EAAO5G,MAAM1E,GAC7D,QAArB+L,EAAOP,WAAuBF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GACpC,WAArB+L,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,GAC1D+L,EAAOpK,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKgM,EAAOpK,QAAQiK,OAASN,EAAO5G,MAAM3E,EACxF2E,EAAQwP,EAAUvL,EAAS2C,EAAQS,QAGL/I,IAA1B2F,EAAQoB,oBAAyD/G,IAA1B2F,EAAQ8B,oBAA6DzH,IAA9B2F,EAAQ0C,oBAC/D,SAArBC,EAAOE,WAA6C,UAArBF,EAAOE,YACnCF,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,SACjD,QAArBE,EAAOP,WAA4C,WAArBO,EAAOP,YACxCO,EAAOpK,QAAQqI,OAAOjK,IAAMuL,EAAO3J,QAAQqI,OAAOjK,GACvDuL,EAAOE,UAAkC,QAArBO,EAAOP,UAAuB,SAAW,MAG7D9G,EAAQkN,GAAwBjJ,EAAS2C,EAAQS,EAFlB,QAArBA,EAAOP,UAAwBF,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,GAC7EsL,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,UAGZ9I,IAA1B2F,EAAQoB,oBAAyD/G,IAA1B2F,EAAQ8B,oBAA6DzH,IAA9B2F,EAAQ0C,oBACpE,QAArBC,EAAOE,WAA4C,WAArBF,EAAOE,YAClCF,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QACrD,SAArBG,EAAOP,WAA6C,UAArBO,EAAOP,YAA2BO,EAAOpK,QAAQqI,OAAOhK,IAAMsL,EAAO3J,QAAQqI,OAAOhK,GACxHsL,EAAOE,UAAkC,SAArBO,EAAOP,UAAwB,QAAU,OAG7D9G,EAAQkN,GAAwBjJ,EAAS2C,EAAQS,EAFlB,SAArBA,EAAOP,UAAyBF,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAI,GAC7EuL,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAAO,KAY5CjH,EATKyP,EASGvC,GAAwBjJ,EAAS2C,EAAQS,EARxB,SAArBT,EAAOE,WAA6C,UAArBF,EAAOE,UACP,SAArBF,EAAOE,UAAyBF,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAAO,GAC5EL,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAAI,GAGd,QAArBuL,EAAOE,UAAwBF,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,GAC1ER,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,IAK1C2R,GAAwBrG,EAAQS,GAGzCrH,EAqEX,SAASyK,EAAmBxG,EAASwC,EAAYF,GAC7C,IACIvG,EADAwH,GAASnM,EAAGoL,EAAWrG,QAAS9E,EAAGmL,EAAWpG,SAE9CwF,EAASD,GAA4BW,GACrCO,EAAYnB,GAAiB6B,EAAM3B,EAAQU,EAAWV,QAAQ,GAC9DzI,EAAM6G,EAAQzG,SAAS,GAM3B,OALIJ,EAAI0J,YAAcA,KA2pB1B,SAA+B1J,EAAK0J,EAAWjB,EAAQ7F,EAAO4P,EAAUC,GACpE,IACIxU,EAEAC,EADA0B,KAEJA,EAAO7B,KAAK6E,GAEAA,EAAM1E,IAAMsU,EAAStU,IAAoB,SAAdwL,GAAwB8I,EAASvU,EAAI2E,EAAM3E,GAChE,UAAdyL,GAAyB8I,EAASvU,EAAI2E,EAAM3E,IAC3C2E,EAAM3E,IAAMuU,EAASvU,IAAoB,QAAdyL,GAAuB8I,EAAStU,EAAI0E,EAAM1E,GACpD,WAAdwL,GAA0B8I,EAAStU,EAAI0E,EAAM1E,KAE/B,QAAdwL,GAAqC,WAAdA,EACL,QAAdA,GAAuB8I,EAAStU,EAAI0E,EAAM1E,GAAKsU,EAAStU,EAAI0E,EAAM1E,EAZ/D,IAaW,WAAdwL,GAA0B8I,EAAStU,EAAI0E,EAAM1E,GAAKsU,EAAStU,EAAI0E,EAAM1E,EAblE,IAcHA,EAAkB,QAAdwL,EAAsBjB,EAAOuB,IAd9B,GAc+CvB,EAAOsB,OAdtD,GAeHnK,EAAO7B,MAAOE,EAAG2E,EAAM3E,EAAGC,EAAGA,IAC7B0B,EAAO7B,MAAOE,EAAG2E,EAAM3E,GAAKuU,EAASvU,EAAI2E,EAAM3E,GAAK,EAAGC,EAAGA,IAC1D0B,EAAO7B,MAAOE,EAAG2E,EAAM3E,GAAKuU,EAASvU,EAAI2E,EAAM3E,GAAK,EAAGC,EAAGsU,EAAStU,KAE9DwF,KAAK6G,IAAI3H,EAAM3E,EAAIuU,EAASvU,GAnB9B,KAoBY,QAAdyL,GAAuB8I,EAAStU,EAAI0E,EAAM1E,GAAmB,WAAdwL,GAA0B8I,EAAStU,EAAI0E,EAAM1E,GAE7F0B,EAAO7B,MAAOE,EAAG2E,EAAM3E,EAAGC,EAAGsU,EAAStU,KAGtCA,EAAkB,QAAdwL,EAAsBjB,EAAOuB,IAzB9B,GAyB+CvB,EAAOsB,OAzBtD,GA0BH9L,EAAKuU,EAASvU,EAAI2E,EAAM3E,EAAKwK,EAAOoB,KA1BjC,GA0BmDpB,EAAOqB,MA1B1D,GA2BHlK,EAAO7B,MAAOE,EAAG2E,EAAM3E,EAAGC,EAAGA,IAC7B0B,EAAO7B,MAAOE,EAAGuU,EAASvU,EAAGC,EAAGA,KAIlB,SAAdwL,GAAwB8I,EAASvU,EAAI2E,EAAM3E,GAAKuU,EAASvU,EAAI2E,EAAM3E,EAhChE,IAgC8F,UAAdyL,GACnF8I,EAASvU,EAAI2E,EAAM3E,GAAKuU,EAASvU,EAAI2E,EAAM3E,EAjCxC,IAkCHA,EAAkB,SAAdyL,EAAuBjB,EAAOoB,KAlC/B,GAkCiDpB,EAAOqB,MAlCxD,GAmCHlK,EAAO7B,MAAOE,EAAGA,EAAGC,EAAG0E,EAAM1E,IAC7B0B,EAAO7B,MAAOE,EAAGA,EAAGC,EAAG0E,EAAM1E,GAAKsU,EAAStU,EAAI0E,EAAM1E,GAAK,IAC1D0B,EAAO7B,MAAOE,EAAGuU,EAASvU,EAAGC,EAAG0E,EAAM1E,GAAKsU,EAAStU,EAAI0E,EAAM1E,GAAK,KAE9DwF,KAAK6G,IAAI3H,EAAM1E,EAAIsU,EAAStU,GAvC9B,KAwCY,SAAdwL,GAAwB8I,EAASvU,EAAI2E,EAAM3E,GAAmB,UAAdyL,GAAyB8I,EAASvU,EAAI2E,EAAM3E,GAC7F2B,EAAO7B,MAAOE,EAAGuU,EAASvU,EAAGC,EAAG0E,EAAM1E,KAItCD,EAAkB,SAAdyL,EAAuBjB,EAAOoB,KA7C/B,GA6CiDpB,EAAOqB,MA7CxD,GA8CHlK,EAAO7B,MAAOE,EAAGA,EAAGC,EAAG0E,EAAM1E,IAC7B0B,EAAO7B,MAAOE,EAAGA,EAAGC,EAAGsU,EAAStU,KAGpCuU,IACA7S,EAAO7B,KAAKiC,EAAIJ,OAAO,IACvBA,EAAO8S,WAEX1S,EAAIJ,OAASA,GAjtBb+S,CAAsB3S,EAAK0J,EAAWjB,EAAQzI,EAAIJ,OAAO,GAAII,EAAIJ,OAAOI,EAAIJ,OAAOlC,OAAS,IAAI,GAChGkF,EAAQ5C,EAAIJ,OAAOI,EAAIJ,OAAOlC,OAAS,GACvCsC,EAAI0J,UAAY0C,GAAM1C,UAAU1J,EAAIJ,OAAOI,EAAIJ,OAAOlC,OAAS,GAAIsC,EAAIJ,OAAOI,EAAIJ,OAAOlC,OAAS,KAE/FkF,EAEX,SAASuK,EAAqByF,EAASC,EAAWrJ,GAC9C,IAEIE,EAFAoJ,EAAgBD,EAAUzS,SAASyS,EAAUzS,SAAS1C,OAAS,GAC/DqV,EAAkBD,EAAclT,OAAOkT,EAAclT,OAAOlC,OAAS,IAEvC,QAA5BoV,EAAcpJ,WAAmD,WAA5BoJ,EAAcpJ,WAA4BqJ,EAAgB9U,IAAM2U,EAAQ,GAAG3U,KACpF,SAA5B6U,EAAcpJ,WAAoD,UAA5BoJ,EAAcpJ,WAA2BqJ,EAAgB7U,IAAM0U,EAAQ,GAAG1U,KAClH4U,EAAclT,OAAOkT,EAAclT,OAAOlC,OAAS,GAAKkV,EAAQ,GAChElJ,EAAY0C,GAAM1C,UAAUoJ,EAAclT,OAAO,GAAIkT,EAAclT,OAAOkT,EAAclT,OAAOlC,OAAS,SACxEwD,IAA5B2R,EAAU5K,oBAA+D/G,IAAhC2R,EAAUzK,mBACnDsB,IAAcuC,GAAqB6G,EAAcpJ,aACjB,SAA5BoJ,EAAcpJ,WAAoD,UAA5BoJ,EAAcpJ,UACpDoJ,EAAclT,OAAO,GAAG3B,EAAiC,UAA5B6U,EAAcpJ,UACvCoJ,EAAclT,OAAO,GAAG3B,EAAI4U,EAAU5K,cAAcpI,QAAQL,MAC5DsT,EAAclT,OAAO,GAAG3B,EAAI4U,EAAU5K,cAAcpI,QAAQL,MAGhEsT,EAAclT,OAAO,GAAG1B,EAAiC,WAA5B4U,EAAcpJ,UACvCoJ,EAAclT,OAAO,GAAG1B,EAAI2U,EAAU5K,cAAcpI,QAAQN,OAC5DuT,EAAclT,OAAO,GAAG1B,EAAI2U,EAAU5K,cAAcpI,QAAQN,QAGxEuT,EAAcpJ,UAAYA,EAC1BoJ,EAAcpV,OAAS0O,GAAM4G,eAAeF,EAAclT,OAAO,GAAIkT,EAAclT,OAAOkT,EAAclT,OAAOlC,OAAS,IACxHkV,EAAQxF,OAAO,EAAG,IA6E1B,SAAS3B,EAAyBxD,GAC9B,IAAI7H,KACAR,EAASqT,GAAUhL,EAAeA,EAAcpI,SACpDD,EAAO7B,KAAK6B,EAAO,IACnB,IAAK,IAAIjC,EAAI,EAAGA,EAAIiC,EAAOlC,OAAS,EAAGC,IACnCyC,EAASrC,KAIjB,SAA2B6M,EAAKC,GAE5B,OADa1M,GAAIyM,EAAI3M,EAAGG,GAAIwM,EAAI1M,EAAGG,GAAIwM,EAAI5M,EAAGK,GAAIuM,EAAI3M,GALpCgV,CAAkBtT,EAAOjC,GAAIiC,EAAOjC,EAAI,KAE1D,OAAOyC,EAOX,SAAgBiL,EAAW8H,EAAQ1K,EAAQ2K,GACvC,IAAIC,EACAC,EAAcH,EAAOG,YAAcH,EAAOI,gBAC9C,GAAID,EAAa,CACb,GAAIA,EAAc,GACd,OAAO7K,EAEN,GAAI6K,GAAe,IACpBD,GACI7T,MAAOiJ,EAAOjJ,MAAOD,OAAQkJ,EAAOlJ,OACpCiU,QAAS/K,EAAOyG,WAAYxE,UAAWjC,EAAO0G,WAAYsE,SAAUhL,EAAO+K,QAC3ErE,WAAY1G,EAAOoG,aAAc3G,OAAQkL,EAAYlL,OAAQsG,YAAa/F,EAAOiC,UACjFwE,WAAYzG,EAAO8G,YAAaV,aAAcpG,EAAO+F,YAAae,YAAa9G,EAAOgL,SACtF5J,KAAMuJ,EAAYvJ,KAAMC,MAAOsJ,EAAYtJ,MAAOE,IAAKoJ,EAAYpJ,IAAKD,OAAQqJ,EAAYrJ,aAG/F,GAAIuJ,GAAe,IACpBD,GACI7T,MAAOiJ,EAAOjJ,MAAOD,OAAQkJ,EAAOlJ,OACpCiU,QAAS/K,EAAOyG,WAAYxE,UAAWjC,EAAOoG,aAAc4E,SAAUhL,EAAO8G,YAC7EJ,WAAY1G,EAAO+F,YAAatG,OAAQkL,EAAYlL,OAAQsG,YAAa/F,EAAO0G,WAChFD,WAAYzG,EAAO+K,QAAS3E,aAAcpG,EAAOiC,UAAW6E,YAAa9G,EAAOgL,SAChF5J,KAAMuJ,EAAYvJ,KAAMC,MAAOsJ,EAAYtJ,MAAOE,IAAKoJ,EAAYpJ,IACnED,OAAQqJ,EAAYrJ,YAGvB,CAAA,KAAIuJ,GAAe,KAUpB,OAAO7K,EATP4K,GACI7T,MAAOiJ,EAAOjJ,MAAOD,OAAQkJ,EAAOlJ,OACpCiU,QAAS/K,EAAOgL,SAAU/I,UAAWjC,EAAO+F,YAAaiF,SAAUhL,EAAO8G,YAC1EJ,WAAY1G,EAAOiC,UAAWxC,OAAQkL,EAAYlL,OAAQsG,YAAa/F,EAAOoG,aAC9EK,WAAYzG,EAAO+K,QAAS3E,aAAcpG,EAAO0G,WAAYI,YAAa9G,EAAOyG,WACjFrF,KAAMuJ,EAAYvJ,KAAMC,MAAOsJ,EAAYtJ,MAAOE,IAAKoJ,EAAYpJ,IAAKD,OAAQqJ,EAAYrJ,QAMpG,OAAOsJ,EAEX,OAAO5K,EAgIX,SAASmE,EAA+B/F,EAAS2C,EAAQS,GACrD,IAAIlC,KACJ,GAAIlB,EAAQzG,UAAYyG,EAAQzG,SAAS1C,OAAS,EAAG,CACjD,IAAIC,OAAI,EACJqU,KACA7J,EAAWqB,EAAO5G,MACtB,IAAKjF,EAAI,EAAGA,EAAIkJ,EAAQzG,SAAS1C,OAAQC,IAAK,CAC1C,IAAIqC,EAAM6G,EAAQzG,SAASzC,GAc3B,IAbAqU,MACSjU,KAAKoK,GACVxK,IAAMkJ,EAAQzG,SAAS1C,OAAS,GAChCsU,EAASjU,KAAKiC,EAAI4C,OAClBuF,EAAWnI,EAAI4C,OAGfoP,EAASjU,KAAKkM,EAAOrH,OAEzBiE,EAAQzG,SAASzC,GAAGiC,OAASoS,EACzBnL,EAAQzG,SAAS1C,OAAS,GAAK0O,GAAM5B,OAAOxK,EAAIJ,OAAO,GAAII,EAAIJ,OAAO,KACrEiH,EAAgB,SAAEuG,OAAOzP,EAAG,GAE7BqC,EACA,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAIJ,OAAOlC,OAAQJ,KAC/BA,EAAI,GAAW,IAANK,IACToK,EAAoBhK,KAAKiC,EAAIJ,OAAOtC,KAMxD,OAAOyK,EAEX,SAASoK,EAAoBuB,EAAKvL,EAAUa,GAIxC,MAHyB,QAAR0K,GAAyB,WAARA,EAC5B1K,EAAS/K,EAAIkK,EAASlK,EAAK,QAAU,OACrC+K,EAAS9K,EAAIiK,EAASjK,EAAK,SAAW,MAGhD,SAASiO,EAA2BxB,GAChC,GAAiB,aAAbA,EAAI7H,MAAoC,WAAb6H,EAAI7H,MAC/B,GAA6B,IAAxB6H,EAAIvK,SAAS1C,QAAiBiN,EAAIvK,SAAS1C,OAAS,IACnD0O,GAAMC,aAAa1B,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAAGkF,OAAW,CACtE,IAAIrB,OAAU,EACdA,EAAwB,WAAboJ,EAAI7H,KAAqB,IAAI6Q,GAAchJ,EAAK,YAAc7H,KAAM,WAAY,GACvF,IAAI8Q,GAAgBjJ,EAAK,YAAc7H,KAAM,aAAc,GAC9D6H,EAAY,SAAE5M,KAAKwD,SAIxB,GAA4B,IAAxBoJ,EAAIvK,SAAS1C,QAAgBiN,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAAGgM,UAAW,CAC1EnI,EAAU,IAAIiM,GAAkB7C,EAAK,YAAc7H,KAAM,eAAgB,GAC7E6H,EAAIvK,SAASrC,KAAKwD,IAI9B,SAASuL,EAA6BnC,EAAKhN,EAAG6L,GAC1C,IAAIxJ,EAAM2K,EAAIvK,SAASzC,GACnB8P,EAA2B,SAAlBzN,EAAI0J,WAA0C,QAAlB1J,EAAI0J,WAAyB1J,EAAU,OAAIA,EAAItC,OACpFe,EAA2B,SAAlBuB,EAAI0J,WAA0C,UAAlB1J,EAAI0J,UAAyB,EAAI,GACtEsI,EAAWtB,GAAelH,EAAO5G,MAAO6K,EAAOhP,GAKnD,OAJAkM,EAAIvK,SAASzC,EAAI,GAAGD,QAAUsC,EAAItC,OAClCiN,EAAIvK,SAASzC,EAAI,GAAGiC,OAAO,GAAK4J,EAAO5G,MAAQoP,EAC/CrH,EAAIvK,SAASgN,OAAOzP,EAAG,KACvBA,EAGJ,SAASsP,EAAiBtC,EAAKnB,EAAQS,GACnC,IAAIrH,EACAqP,EACJ,GAAItH,EAAIvC,kBAAmB,CAEvB6J,EAAgB1J,IADHtK,EAAG0M,EAAIvC,kBAAkBpF,QAAS9E,EAAGyM,EAAIvC,kBAAkBnF,SACjCuF,GAA4BmC,EAAI1C,eAAgB0C,EAAI1C,cAAcQ,QAAQ,GAErH4I,EAAc1G,EAAIhC,cAAea,EAAQS,EAAQU,GACjD,IAAIjB,EAAYyI,EAAoBlI,EAAOP,UAAWF,EAAO5G,MAAOqH,EAAOrH,OAC3E,QAA8B1B,IAA1ByJ,EAAIvC,mBAAmCoB,EAAOE,YAAcO,EAAOP,YAC5C,QAArBF,EAAOE,WAA4C,WAArBF,EAAOE,WAA4BF,EAAO3J,QAAQqI,OAAOjK,IAAMgM,EAAOpK,QAAQqI,OAAOjK,KACxF,SAArBuL,EAAOE,WAA6C,UAArBF,EAAOE,WAA2BF,EAAO3J,QAAQqI,OAAOhK,IAAM+L,EAAOpK,QAAQqI,OAAOhK,GAgB1H,GAAI+L,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAAQI,EAAOrH,MAAM3E,GAAKuL,EAAO3J,QAAQiK,OAC/EN,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAAOR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,OAAQ,CACjFP,EAAOE,UAAaO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAAK,SAAW,MAGlE0E,EAAQkN,GAAwBnF,EAAKnB,EAAQS,EAFR,QAArBT,EAAOE,UAAwBF,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,GAChFR,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,SAG7C,GAAIyM,EAAIvC,mBAAqB6J,IAAkBhG,GAAqBvC,GAAY,CACjF,IAAImK,GACmB,SAAlB5B,GAA8C,UAAlBA,IAA+BzI,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQmK,KAC1FR,EAAO5G,MAAM1E,GAAKsL,EAAO3J,QAAQkK,QACpCP,EAAOE,UAAaO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAAK,SAAW,MAClE2V,EAAWrK,EAAO3J,QAAQN,OAAS,EAAI,KAEf,QAAlB0S,GAA6C,WAAlBA,IAAgCzI,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQgK,MAC/FL,EAAO5G,MAAM3E,GAAKuL,EAAO3J,QAAQiK,QACpCN,EAAOE,UAAaO,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EAAK,QAAU,OACjE4V,EAAWrK,EAAO3J,QAAQL,MAAQ,EAAI,IAEtCgK,EAAOE,WAAamK,EACpBjR,EAAQkN,GAAwBnF,EAAKnB,EAAQS,EAAQ4J,GAAU,IAG/DrK,EAAOE,UAAYA,EACnB9G,EAAQiN,GAAwBrG,EAAQS,SAG3C,IAAIU,EAAIvC,mBAAqB6J,IAAkBhI,EAAOP,WAAgC,QAAlBuI,GAA6C,WAAlBA,GAC/FzI,EAAO3J,QAAQqI,OAAOjK,IAAMgM,EAAOpK,QAAQqI,OAAOjK,EAOnDuL,EAAOE,UAAYA,EACnB9G,EAAQiN,GAAwBrG,EAAQS,OARe,CACvDT,EAAOE,UAAaO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAAK,SAAW,MAGlE0E,EAAQkN,GAAwBnF,EAAKnB,EAAQS,EAFb,WAArBT,EAAOE,UAA2BF,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAAI,GACjFsL,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAAM,QA/CqF,CAChIR,EAAOE,UAAYA,EACnB9G,EACIkN,GAAwBnF,EAAKnB,EAAQS,EADlB,QAAdP,GAAqC,WAAdA,EACiBiB,EAAI1C,cAAc1I,OAAS,EAAI,GAC/BoL,EAAI1C,cAAczI,MAAQ,EAAI,IACjEgK,EACN5G,MAAQA,EAAM,GACJ,SAAd8G,GAAsC,UAAdA,GACxBO,EAAOP,UAAYA,EACnBO,EAAOrH,MAAuB,SAAd8G,EAAwBO,EAAOpK,QAAQsP,WAAalF,EAAOpK,QAAQ2O,aAGnF6C,EAAc1G,EAAIhC,cAAea,EAAQS,EAAQU,GAErD/H,EAAQkN,GAAwBnF,EAAKnB,EAAQS,GAwCjD,OAAOrH,EAEX,SAASoK,EAAyBrC,EAAKnB,GACnC,QAA0BtI,IAAtByJ,EAAIhC,oBAAyDzH,IAA1ByJ,EAAIpB,mBACnCf,GAA4BmC,EAAIhC,eAAe8B,cAAcjB,EAAO5G,OAAQ,CAC5E,IAAIqH,EAASU,EAAIhC,cACbpH,EAAUoJ,EAAIvK,SAASuK,EAAIvK,SAAS1C,OAAS,GAC7CoW,EAAYvS,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GACnDgM,EAAYuC,GAAqB1K,EAAQmI,WAC3B,WAAdA,EACIoK,EAAU5V,EAAI+L,EAAOpK,QAAQkK,SAC7BxI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAGQ,EAAI+L,EAAOpK,QAAQkK,OAAS,GACtExI,EAAQ7D,OAAS0O,GAAM4G,eAAezR,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,KAGjF,QAAdgM,EACDoK,EAAU5V,EAAI+L,EAAOpK,QAAQmK,MAC7BzI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAGQ,EAAI+L,EAAOpK,QAAQmK,IAAM,GACnEzI,EAAQ7D,OAAS0O,GAAM4G,eAAezR,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,KAGjF,SAAdgM,EACDoK,EAAU7V,EAAIgM,EAAOpK,QAAQgK,OAC7BtI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAGO,EAAIgM,EAAOpK,QAAQgK,KAAO,GACpEtI,EAAQ7D,OAAS0O,GAAM4G,eAAezR,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,KAGjF,UAAdgM,GACDoK,EAAU7V,EAAIgM,EAAOpK,QAAQiK,QAC7BvI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAGO,EAAIgM,EAAOpK,QAAQiK,MAAQ,GACrEvI,EAAQ7D,OAAS0O,GAAM4G,eAAezR,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,KAGxG8L,EAAO5G,MAAQrB,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,IA+DlE,SAAS4P,EAA0BzG,EAASkB,GACxC,IAAK,IAAIpK,EAAI,EAAGA,EAAIkJ,EAAQzG,SAAS1C,OAAQC,IAEzC,IAAK,IADDqC,EAAM6G,EAAQzG,SAASzC,GAClBL,EAAI,EAAGA,EAAI0C,EAAIJ,OAAOlC,OAAQJ,KAC/BA,EAAI,GAAW,IAANK,IACToK,EAAoBhK,KAAKiC,EAAIJ,OAAOtC,IAIhD,OAAOyK,EAEX,SAASsJ,EAAc7J,EAAMgC,EAAQS,EAAQU,GACzC,IAAIuG,EACAD,GAAwBhT,EAAG,EAAGC,EAAG,GACjC6V,EAAc1I,EAAW7D,EAAMA,EAAK3H,QAAS2H,EAAKiB,QAClDuI,EAAaxH,EAAOI,OACpBmH,EAAavH,EAAO5G,MACxB,GAAImR,EAAYlF,aAAa3Q,EAAI8S,EAAWjH,OAASgH,EAAW7S,EAC5DgT,EAAgB,SAChBD,EAAsB8C,EAAYlF,kBAEjC,GAAIkF,EAAYrJ,UAAUxM,EAAI8S,EAAWhH,IAAM+G,EAAW7S,EAC3DgT,EAAgB,MAChBD,EAAsB8C,EAAYrJ,eAEjC,GAAIqJ,EAAY5E,WAAWlR,EAAI+S,EAAWnH,KAAOkH,EAAW9S,EAC7DiT,EAAgB,OAChBD,EAAsB8C,EAAY5E,gBAEjC,GAAI4E,EAAYvF,YAAYvQ,EAAI+S,EAAWlH,MAAQiH,EAAW9S,EAC/DiT,EAAgB,QAChBD,EAAsB8C,EAAYvF,gBAEjC,CACD,IAAIwF,EAAQtQ,KAAK6G,IAAIwG,EAAW7S,EAAI6V,EAAYrJ,UAAUxM,GACtD4L,EAAQpG,KAAK6G,IAAIwG,EAAW9S,EAAI8V,EAAYvF,YAAYvQ,GACxD8L,EAASrG,KAAK6G,IAAIwG,EAAW7S,EAAI6V,EAAYlF,aAAa3Q,GAC1D2L,EAAOnG,KAAK6G,IAAIwG,EAAW9S,EAAI8V,EAAY5E,WAAWlR,GACtDgW,EAAU7U,OAAO8U,UACrBD,EAAUD,EACV9C,EAAgB,MAChBD,EAAsB8C,EAAYrJ,UAC9BuJ,EAAUnK,IACVmK,EAAUnK,EACVoH,EAAgB,QAChBD,EAAsB8C,EAAYvF,aAElCyF,EAAUlK,IACVkK,EAAUlK,EACVmH,EAAgB,SAChBD,EAAsB8C,EAAYlF,cAElCoF,EAAUpK,IAEVqH,EAAgB,OAChBD,EAAsB8C,EAAY5E,YAG1ClF,EAAOrH,MAAQqO,EACfhH,EAAOP,UAAYwH,EACnB,IAAIpG,EAAWkB,GAAU+H,EAAa9H,GAAqBhC,EAAOP,YAClEO,EAAOrH,MAAQkG,GAAgB6B,EAAKnD,EAAMyC,EAAOrH,MAAOkI,EAAUtD,IAASmD,EAAIhC,eAiDnF,SAAgBwL,EAAUtT,EAAGuT,GACzB,IAAIC,GAAMpW,EAAGmW,EAAEnW,EAAGC,EAAG2C,EAAE3C,GAEnBoW,GADKlI,GAAMmI,WAAW1T,EAAGwT,GACpBjI,GAAMmI,WAAWF,EAAGD,IACzBI,EAAKpI,GAAMmI,WAAWH,EAAGvT,GACzBuB,EAAMsB,KAAK+Q,KAAKH,EAAKE,GAezB,OAdApS,EAAY,IAANA,EAAYsB,KAAKgR,GACnB7T,EAAE5C,EAAImW,EAAEnW,EACJ4C,EAAE3C,EAAIkW,EAAElW,IACRkE,EAAM,IAAMA,GAKZA,EADAvB,EAAE3C,EAAIkW,EAAElW,EACF,IAAMkE,EAGN,IAAMA,EAGbA,EAGX,SAAgB4J,GAAU2I,EAAKjL,GAC3B,IAAI9G,EACJ,OAAQ8G,GACJ,IAAK,OACD9G,EAAQ+R,EAAIxF,WACZ,MACJ,IAAK,MACDvM,EAAQ+R,EAAIjK,UACZ,MACJ,IAAK,QACD9H,EAAQ+R,EAAInG,YACZ,MACJ,IAAK,SACD5L,EAAQ+R,EAAI9F,aAGpB,OAAOjM,EA4DX,SAAS8N,GAAe9N,EAAO6K,EAAOhP,GAElC,OADa2N,GAAMM,UAAU9J,EAAOnE,EAAOgP,GAI/C,SAAgB3E,GAAgB6B,EAAKlC,EAAQmC,EAAKC,EAAK+J,GACnDhK,GAAQ3M,EAAG2M,EAAI3M,EAAGC,EAAG0M,EAAI1M,GACzB2M,GAAQ5M,EAAG4M,EAAI5M,EAAGC,EAAG2M,EAAI3M,GACzB,IACI2W,EAGAC,EAJArW,EAAQ2N,GAAM+H,UAAUtJ,EAAKD,GAG7BmK,EAAUH,EAAQjK,EAAIhC,cAAgBgC,EAAI1C,cAE1CrF,EAAQgS,GAAsB,eAAbjK,EAAI7H,KAAwB8H,EAAMC,EACrCuB,GAAMM,UAAU9B,EAAKnM,EAAOiF,KAAK+I,IAAIsI,EAAQC,WAAWzV,OAAS,EAAGwV,EAAQC,WAAWxV,MAAQ,IACjHqV,EAAQE,EACR,IAAIE,EAAOC,IAAaH,EAAQxB,gBAAiBwB,EAAQ/R,QAAS+R,EAAQ9R,QAAS2H,GAC/EuK,EAAOD,IAAaH,EAAQxB,gBAAiBwB,EAAQ/R,QAAS+R,EAAQ9R,QAAS4H,GACnF,GAAiB,eAAbF,EAAI7H,KAAuB,CAEvBmS,EAAKhX,IAAMkX,EAAKlX,IACZgX,EAAK/W,EAAIiX,EAAKjX,EACd+W,EAAK/W,GAHI,EAMT+W,EAAK/W,GANI,GASb+W,EAAK/W,IAAMiX,EAAKjX,IACZ+W,EAAKhX,EAAIkX,EAAKlX,EACdgX,EAAKhX,GAXI,EAcTgX,EAAKhX,GAdI,GAiBjB2M,EAAMsK,GAAYH,EAAQxB,gBAAiBwB,EAAQ/R,QAAS+R,EAAQ9R,QAASgS,OAE5E,CACaL,EAAQxI,GAAM+H,UAAUvJ,EAAKC,GAAOuB,GAAM+H,UAAUtJ,EAAKD,GACvE,GAAIgK,EAAO,CACP,IAAIQ,EAAUhJ,GAAM+H,UAAUvJ,EAAKC,GACnCA,EAAMuB,GAAMM,WAAYzO,EAAG4M,EAAI5M,EAAGC,EAAG2M,EAAI3M,GAAKkX,EAAS1R,KAAK+I,IAAIsI,EAAQC,WAAWxV,MAAOuV,EAAQC,WAAWzV,aAE5G,CACD,IAAI8V,EAAUjJ,GAAM+H,UAAUtJ,EAAKD,GACnCA,EAAMwB,GAAMM,WAAYzO,EAAG2M,EAAI3M,EAAGC,EAAG0M,EAAI1M,GAAKmX,EAAS3R,KAAK+I,IAAIsI,EAAQC,WAAWxV,MAAOuV,EAAQC,WAAWzV,UAGjHwV,aAAmBO,IAAeP,EAAQ1X,MAC1CyX,EAAgBD,EAAM5B,YAChB4B,EAAMxX,KAAKkY,MAAM,KAAK7X,OAAS,GAAMmX,EAAMxX,KAAKkY,MAAM,KAAK7X,OAAS,IAAQ,IAC9EoX,EAAcA,EAAcpX,QAAUoX,EAAc,MAIxDA,EAAgB7B,GAAU8B,EAASA,EAAQlV,UAC7BiV,EAAcpX,QAAUoX,EAAc,GAE3CA,EAAcpX,OAE3B,OAAO8X,IADarX,GAAIyM,EAAI3M,EAAGG,GAAIwM,EAAI1M,EAAGG,GAAIwM,EAAI5M,EAAGK,GAAIuM,EAAI3M,GACnB4W,GAAe,EAAMlS,IAAUgI,EAE7E,SAASmH,GAAgBlL,EAASjE,EAAO6P,GASrC,OARA7P,EAAM3E,EAAIyF,KAAKC,MAAgB,IAAVf,EAAM3E,GAAW,IACtC2E,EAAM1E,EAAIwF,KAAKC,MAAgB,IAAVf,EAAM1E,GAAW,IAClCuU,EACA5L,EAAQiL,YAAclP,EAGtBiE,EAAQmB,YAAcpF,EAEnBA,EAGX,SAAgB4S,GAAsBC,EAAa5H,EAAK6H,EAAS9S,GAC7D,IACImL,EADArQ,EAASmQ,EAAInQ,OAEb6D,GACApD,GAAI0P,EAAI,GAAG5P,EAAGG,GAAIyP,EAAI,GAAG3P,EAAGG,GAAIwP,EAAI,GAAG5P,EACvCK,GAAIuP,EAAI,GAAG3P,GAEXyX,EAAeC,GAAiBH,EAAalU,GAKjD,GAJIoU,IAEA5H,EAAM3B,GAAM4G,eAAe2C,EAAc/S,IAEzCiT,MAAM9H,IAAQA,EAAM,EACpB,IAAK,IAAIpQ,EAAI,EAAGA,EAAID,EAAS,EAAGC,IAAK,CAKjC,IAAImY,EAAYF,GAAiBH,EAJjClU,GACIpD,GAAI0P,EAAIlQ,GAAGM,EAAGG,GAAIyP,EAAIlQ,GAAGO,EACzBG,GAAIwP,EAAIlQ,EAAI,GAAGM,EAAGK,GAAIuP,EAAIlQ,EAAI,GAAGO,IAGrC,GAAI4X,EAAW,CAEX,IAAIC,EAAO3J,GAAM4G,eAAe8C,EAAWlT,GAK3C,IAJIiT,MAAM9H,IAAQA,EAAMgI,KACpBhI,EAAMgI,EACNJ,EAAeG,GAEf/H,GAAO,GAAKA,GAAO,EACnB,OAKhB,OAAO4H,EAEX,SAASC,GAAiBI,EAAUC,GAChC,IAQIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAtY,EACAC,EACAK,EACAC,EACAgY,EACAC,EACAC,EACAC,EACAtT,EAtBAlF,EAAK6X,EAAS7X,GACdC,EAAK4X,EAAS5X,GACdC,EAAK2X,EAAS3X,GACdC,EAAK0X,EAAS1X,GACdsY,EAAKX,EAAS9X,GACd0Y,EAAKZ,EAAS7X,GACd0Y,EAAKb,EAAS5X,GACd0Y,EAAKd,EAAS3X,GAqBlB,OALA4X,EAAK5X,EAAKF,EACVgY,EAAKjY,EAAKE,EACViY,EAAMjY,EAAKD,EAAOD,EAAKG,EACvBkY,EAAON,EAAKU,EAAOR,EAAKS,EAAMP,EAC9BG,EAAOP,EAAKY,EAAOV,EAAKW,EAAMT,EAClB,IAAPE,GAAqB,IAAPC,GAAaO,GAASR,EAAIC,GAClC,MAEXN,EAAKY,EAAKF,EACVR,EAAKO,EAAKE,EACVP,EAAMO,EAAKD,EAAOD,EAAKG,EACvBxY,EAAM4X,EAAKhY,EAAOkY,EAAKjY,EAAMmY,EAC7B/X,EAAM2X,EAAK9X,EAAOgY,EAAK/X,EAAMiY,EACjB,IAAPhY,GAAqB,IAAPC,GAAcwY,GAASzY,EAAIC,GACnC,KAGG,IADdkY,EAASR,EAAKG,EAAOF,EAAKC,GAEf,MAGPO,EADAD,EAAQ,GACEA,EAAQ,EAGTA,EAAQ,EAErBC,EAAS,EACTtT,EAAO+S,EAAKG,EAAOF,EAAKC,EAEpBrY,EADAoF,EAAM,GACDA,EAAMsT,GAAUD,GAGhBrT,EAAMsT,GAAUD,EAEzBrT,EAAO8S,EAAKG,EAAOJ,EAAKK,EAEpBrY,EADAmF,EAAM,GACDA,EAAMsT,GAAUD,GAGhBrT,EAAMsT,GAAUD,GAEhBzY,EAAGA,EAAGC,EAAGA,KAEtB,SAAS8Y,GAASC,EAAGC,GACjB,OAASD,EAAIC,GAAM,EAkhBvB,SAAStH,GAAoBnH,EAAQe,EAAQiE,GACzC,OAAQjE,EAAOE,WACX,IAAK,OACGF,EAAO5G,MAAM3E,EAAIwK,EAAOoB,OACxB4D,EAASjE,EAAO5G,MAAM3E,EAAIwK,EAAOoB,KAAQ4D,EAAUjE,EAAO5G,MAAM3E,EAAIwK,EAAOoB,KAAQ4D,EAASA,GAEhG,MACJ,IAAK,QACGjE,EAAO5G,MAAM3E,EAAIwK,EAAOqB,QACxB2D,EAAShF,EAAOqB,MAAQN,EAAO5G,MAAM3E,EAAKwP,EAAUhF,EAAOqB,MAAQN,EAAO5G,MAAM3E,EAAKwP,EAASA,GAElG,MACJ,IAAK,MACGjE,EAAO5G,MAAM1E,EAAIuK,EAAOuB,MACxByD,EAASjE,EAAO5G,MAAM1E,EAAIuK,EAAOuB,IAAOyD,EAAUjE,EAAO5G,MAAM1E,EAAIuK,EAAOuB,IAAOyD,EAASA,GAE9F,MACJ,IAAK,SACGjE,EAAO5G,MAAM1E,EAAIuK,EAAOsB,SACxB0D,EAAShF,EAAOsB,OAASP,EAAO5G,MAAM1E,EAAKuP,EAAUhF,EAAOsB,OAASP,EAAO5G,MAAM1E,EAAKuP,EAASA,GAI5G,OAAOA,EAGX,SAAgBoC,GAAwBrG,EAAQS,GAC5C,IAAIlC,EACJ,OAAQyB,EAAOE,WACX,IAAK,OACL,IAAK,QACD,IAAIyN,GAAWlZ,EAAGgM,EAAOrH,MAAM3E,EAAGC,EAAGsL,EAAO5G,MAAM1E,GAClD6J,EAAuBqE,GAAM5B,OAAOhB,EAAO5G,MAAOuU,IAAW/K,GAAM5B,OAAOP,EAAOrH,MAAOuU,IACnF3N,EAAO5G,MAAOqH,EAAOrH,QAAU4G,EAAO5G,MAAOuU,EAAQlN,EAAOrH,OACjE,MACJ,IAAK,MACL,IAAK,SACD,IAAInD,GAAWxB,EAAGuL,EAAO5G,MAAM3E,EAAGC,EAAG+L,EAAOrH,MAAM1E,GAClD6J,EAAuBqE,GAAM5B,OAAOhB,EAAO5G,MAAOnD,IAAW2M,GAAM5B,OAAOP,EAAOrH,MAAOnD,IACnF+J,EAAO5G,MAAOqH,EAAOrH,QAAU4G,EAAO5G,MAAOnD,EAAQwK,EAAOrH,OAGzE,OAAOmF,EAEX,SAAS+H,GAAwBjJ,EAAS2C,EAAQS,EAAQwD,EAAO2J,GACxD3J,IACDA,EAAQ,IAEZ,IAEIwC,EACAvQ,EAGA2X,EANAhP,EAAUxB,EAAQuB,kBAIlBkP,EAAQrN,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EACtCsZ,EAAQtN,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAE1C,IAAKkZ,IAAU1T,KAAK6G,IAAI+M,GAAS,MAAS5T,KAAK6G,IAAIgN,GAAS,YAC/BrW,IAArB+I,EAAOP,UAEP,OADuBF,EAAO5G,MAAOqH,EAAOrH,OAIpD,QAA8B1B,IAA1B2F,EAAQ8B,eAA+BjF,KAAK6G,IAAI+M,IAAU,IAAM5T,KAAK6G,IAAIgN,IAAU,GAAI,CAWvF,GAV0B,SAArB/N,EAAOE,WAA6C,UAArBF,EAAOE,UACnChG,KAAK6G,IAAIgN,GAAS,KAClB/N,EAAOE,UAAaF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAAK,MAAQ,UAI/DwF,KAAK6G,IAAI+M,GAAS,KAClB9N,EAAOE,UAAaF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAAK,OAAS,SAGpEyF,KAAK6G,IAAI+M,GAAS,IAAM5T,KAAK6G,IAAIgN,GAAS,GAC1C,OAAO1H,GAAwBrG,EAAQS,GAGvCwD,GAAS,EAqDjB,MAlDyB,SAArBjE,EAAOE,WAA6C,UAArBF,EAAOE,WACb,UAArBF,EAAOE,gBACkBxI,IAArB+I,EAAOP,WAAgD,UAArBO,EAAOP,YACzC+D,EAAQ/J,KAAK+I,IAAIjD,EAAO5G,MAAM3E,EAAGgM,EAAOrH,MAAM3E,GAAKuL,EAAO5G,MAAM3E,EAAIwP,GAEpEjE,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,QAAiBiD,IAAZmH,IACnCoF,GAASA,UAIYvM,IAArB+I,EAAOP,WAAgD,SAArBO,EAAOP,YACzC+D,EAAQjE,EAAO5G,MAAM3E,EAAIyF,KAAKqK,IAAIvE,EAAO5G,MAAM3E,EAAGgM,EAAOrH,MAAM3E,GAAKwP,IAEpEjE,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,QAAiBiD,IAAZmH,GAA8C,SAArBmB,EAAOE,aACnE+D,GAASA,IAGjB4J,EAAOpN,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EACrC+R,EAAeS,GAAelH,EAAO5G,MAAO6K,EAAO,GAEtC,KADb4J,EAAOpN,EAAOrH,MAAM1E,EAAI+R,EAAa/R,KAEjCwB,EAAOgR,GAAeT,EAAchG,EAAOrH,MAAM1E,EAAI+R,EAAa/R,EAAG,MAG/C,QAArBsL,EAAOE,WAA4C,WAArBF,EAAOE,YACjB,WAArBF,EAAOE,eACkBxI,IAArB+I,EAAOP,WAAgD,WAArBO,EAAOP,YACzC+D,EAAQ/J,KAAK+I,IAAIjD,EAAO5G,MAAM1E,EAAG+L,EAAOrH,MAAM1E,GAAKsL,EAAO5G,MAAM1E,EAAIuP,SAI/CvM,IAArB+I,EAAOP,WAAgD,QAArBO,EAAOP,YACzC+D,EAAQjE,EAAO5G,MAAM1E,EAAIwF,KAAKqK,IAAIvE,EAAO5G,MAAM1E,EAAG+L,EAAOrH,MAAM1E,GAAKuP,IAEpEjE,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,QAAkBgD,IAAZmH,GAA+C,QAArBmB,EAAOE,aACrE+D,GAASA,IAGjB4J,EAAOpN,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EAEjCgS,GADAzG,EAAOE,UACQgH,GAAelH,EAAO5G,MAAO6K,EAAO,KAM1C,KADb4J,EAAOpN,EAAOrH,MAAM3E,EAAIgS,EAAahS,KAEjCyB,EAAOgR,GAAeT,EAAchG,EAAOrH,MAAM3E,EAAIgS,EAAahS,EAAG,KAGhE,IAAToZ,GAEI7N,EAAO5G,MACPqH,EAAOrH,QAIX4G,EAAO5G,MACPqN,EACAvQ,EACAuK,EAAOrH,OAiEf,SAASoN,GAAwBxG,EAAQS,EAAQ8F,EAASyH,EAASpD,QACrD,IAANA,IAAgBA,EAAI,IACxB,IAAInE,EA2BJ,YA1BgB/O,IAAZ6O,GACAvG,EAAOI,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GACrDE,EAAOL,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,IAG5B,WAArBP,EAAOE,UACHO,EAAOpK,QAAQmK,IAAMR,EAAO3J,QAAQkK,QAAUE,EAAOpK,QAAQmK,IAAMR,EAAO3J,QAAQkK,OAAS,KAC3FqK,GAAKnK,EAAOpK,QAAQmK,IAAMR,EAAO3J,QAAQkK,QAAU,GAG7B,QAArBP,EAAOE,UACRO,EAAOpK,QAAQkK,OAASP,EAAO3J,QAAQmK,KAAOR,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,OAAS,KAC3FqK,GAAK5K,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQkK,QAAU,GAG7B,UAArBP,EAAOE,UACRO,EAAOpK,QAAQgK,KAAOL,EAAO3J,QAAQiK,OAASG,EAAOpK,QAAQgK,KAAOL,EAAO3J,QAAQiK,MAAQ,KAC3FsK,GAAKnK,EAAOpK,QAAQgK,KAAOL,EAAO3J,QAAQiK,OAAS,GAG7B,SAArBN,EAAOE,WACRO,EAAOpK,QAAQiK,MAAQN,EAAO3J,QAAQgK,MAAQL,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,MAAQ,KAC3FsK,GAAK5K,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQiK,OAAS,GAIvDN,EAAOE,WACX,IAAK,OACD0K,EAoKZ,SAAuB5K,EAAQS,EAAQ8F,EAASN,GACxCjG,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,KAAOI,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,MAC/EL,EAAO3J,QAAQgK,KAAOL,EAAOI,OAAOC,MAAQI,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,OACxD,WAArBG,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC/DuR,GAAajG,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,KAExB,QAArBI,EAAOP,WAAuBF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IACjEuR,GAAajG,EAAO3J,QAAQgK,KAAOI,EAAOpK,QAAQgK,MAEtD4F,GAAajG,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,WAG5B3I,IAAZ6O,GAAqC,QAAZA,GAA2C,WAArB9F,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC/GuR,GAAa/L,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,YAEpC5I,IAAZ6O,GAAqC,WAAZA,GACV,QAArB9F,EAAOP,WAAuBO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EAC5DuR,GAAa/L,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,OAGtD2F,GAAajG,EAAO5G,MAAM3E,EAAIuL,EAAO3J,QAAQgK,KAGrD,OAAO4F,EA3LKgI,CAAcjO,EAAQS,EAAQ8F,EAASqE,GAC3CnE,EAAeS,GAAelH,EAAO5G,MAAOwR,EAAG,KAC/C,MACJ,IAAK,QACDA,EAyLZ,SAAwB5K,EAAQS,EAAQvM,EAAQqS,GACxCvG,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,MAAQG,EAAOpK,QAAQiK,MAAQG,EAAOL,OAAOE,OAClFN,EAAO3J,QAAQiK,MAAQN,EAAOI,OAAOE,OAASG,EAAOpK,QAAQgK,KAAOI,EAAOL,OAAOC,MACzD,WAArBI,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC/DR,GAAUuM,EAAOpK,QAAQiK,MAAQN,EAAO3J,QAAQiK,MAEtB,QAArBG,EAAOP,WAAuBF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,IACjER,GAAUuM,EAAOpK,QAAQiK,MAAQN,EAAO3J,QAAQiK,OAEpDpM,GAAU8L,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,QAG7BiD,IAAZ6O,GAAqC,QAAZA,GAA2C,WAArB9F,EAAOP,WAA0BF,EAAO5G,MAAM1E,EAAI+L,EAAOrH,MAAM1E,EAC/GR,GAAUgG,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,YAEjC5I,IAAZ6O,GAAqC,WAAZA,GAA8C,QAArB9F,EAAOP,WAAuBO,EAAOrH,MAAM1E,EAAIsL,EAAO5G,MAAM1E,EACpHR,GAAUgG,KAAK6G,IAAIf,EAAO5G,MAAM3E,EAAIgM,EAAOpK,QAAQiK,OAGnDpM,GAAU8L,EAAO3J,QAAQiK,MAAQN,EAAO5G,MAAM3E,EAGtD,OAAOP,EA/MKga,CAAelO,EAAQS,EAAQmK,EAAGrE,GACtCE,EAAeS,GAAelH,EAAO5G,MAAOwR,EAAG,GAC/C,MACJ,IAAK,MACDA,EAmIZ,SAAsB5K,EAAQS,EAAQ0N,EAAQja,GACtC8L,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,IAAMC,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,KAC5ER,EAAO3J,QAAQmK,IAAMR,EAAOI,OAAOI,KAAOC,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,QACvD,UAArBE,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAC9DP,GAAU8L,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQmK,IAEpB,SAArBC,EAAOP,WAAwBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAClEP,GAAU8L,EAAO3J,QAAQmK,IAAMC,EAAOpK,QAAQmK,KAElDtM,GAAU8L,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,UAG1B9I,IAAXyW,GAAmC,SAAXA,GAA2C,UAArB1N,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAC7GP,GAAUgG,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQkK,aAElC7I,IAAXyW,GAAmC,UAAXA,GAA4C,SAArB1N,EAAOP,WACzDO,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EACjCP,GAAUgG,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQkK,QAGnDrM,GAAU8L,EAAO5G,MAAM1E,EAAIsL,EAAO3J,QAAQmK,IAGlD,OAAOtM,EA1JKka,CAAapO,EAAQS,EAAQ8F,EAASqE,GAC1CnE,EAAeS,GAAelH,EAAO5G,MAAOwR,EAAG,KAC/C,MACJ,IAAK,SACDA,EAyMZ,SAAyB5K,EAAQS,EAAQwF,EAAWM,GAC5CvG,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,OAASE,EAAOpK,QAAQkK,OAASE,EAAOL,OAAOG,QACrFP,EAAO3J,QAAQkK,OAASP,EAAOI,OAAOG,QAAUE,EAAOpK,QAAQmK,IAAMC,EAAOL,OAAOI,KAC1D,UAArBC,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAC9DwR,GAAaxF,EAAOpK,QAAQkK,OAASP,EAAO3J,QAAQkK,OAE1B,SAArBE,EAAOP,WAAwBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,IAClEwR,GAAaxF,EAAOpK,QAAQkK,OAASP,EAAO3J,QAAQkK,QAExD0F,GAAajG,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,QAGjCgD,IAAZ6O,GAAqC,SAAZA,GACL,UAArB9F,EAAOP,WAAyBF,EAAO5G,MAAM3E,EAAIgM,EAAOrH,MAAM3E,EAC9DwR,GAAa/L,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQkK,aAEpC7I,IAAZ6O,GAAqC,UAAZA,GACV,SAArB9F,EAAOP,WAAwBO,EAAOrH,MAAM3E,EAAIuL,EAAO5G,MAAM3E,EAC7DwR,GAAa/L,KAAK6G,IAAIf,EAAO5G,MAAM1E,EAAI+L,EAAOpK,QAAQkK,QAGtD0F,GAAajG,EAAO3J,QAAQkK,OAASP,EAAO5G,MAAM1E,EAG1D,OAAOuR,EAjOKoI,CAAgBrO,EAAQS,EAAQmK,EAAGrE,GACvCE,EAAeS,GAAelH,EAAO5G,MAAOwR,EAAG,IAiBvD,YAfgBlT,IAAZsW,EACAA,EAAQzZ,KAAKkS,GAGbuH,GACIhO,EAAO5G,MACPqN,GAGiB,QAArBzG,EAAOE,WAA4C,WAArBF,EAAOE,UACrCoO,GAAa7H,EAAc,aAAczG,EAAQS,EAAQuN,GAE/B,UAArBhO,EAAOE,WAA8C,SAArBF,EAAOE,WAC5CoO,GAAa7H,EAAc,WAAYzG,EAAQS,EAAQuN,GAEpDA,EAEX,SAASM,GAAalN,EAAKmN,EAAarI,EAAKC,EAAK/P,GAC9C,IAAIuX,EACA1X,EACAuY,EACgB,eAAhBD,GACArI,EAAI9F,QAAWC,KAAM,EAAGC,MAAO,GAAIE,IAAK,EAAGD,OAAQ,IACnD4F,EAAI/F,QAAWC,KAAM,EAAGC,MAAO,GAAIE,IAAK,EAAGD,OAAQ,KAE9B,aAAhBgO,IACLrI,EAAI9F,QAAWC,KAAM,GAAIC,MAAO,EAAGE,IAAK,GAAID,OAAQ,GACpD4F,EAAI/F,QAAWC,KAAM,GAAIC,MAAO,EAAGE,IAAK,GAAID,OAAQ,IAExD,IAAI0D,EAAQ,GACZ,GAAoB,eAAhBsK,EAA8B,CAC9B,OAAQpI,EAAIjG,WACR,IAAK,OACD,GAAIgG,EAAI7P,QAAQiK,MAAQ4F,EAAI9F,OAAOE,MAAQ6F,EAAI9P,QAAQgK,KAAO8F,EAAI/F,OAAOC,OACpE8F,EAAI9P,QAAQgK,KAAO6F,EAAI7P,QAAQiK,MAAQ2D,GAAUiC,EAAI7P,QAAQmK,IAAM0F,EAAI9F,OAAOI,KAAO2F,EAAI/M,MAAM1E,GAC5FwR,EAAI7P,QAAQkK,OAAS2F,EAAI9F,OAAOG,QAAU4F,EAAI/M,MAAM1E,GAAK,CAC7D,IAAI+Z,EAAMvU,KAAKqK,IAAIrK,KAAK6G,IAAIoF,EAAI9P,QAAQgK,KAAO6F,EAAI7P,QAAQiK,OAAS,EAAG,IACvE2D,EAAQiC,EAAI7P,QAAQiK,MAAQc,EAAI3M,EAAIga,OAIhCxK,EADmB,QAAlBiC,EAAIhG,WAAuBkB,EAAI1M,EAAIyR,EAAI/M,MAAM1E,GAAyB,WAAlBwR,EAAIhG,WAA0BkB,EAAI1M,EAAIyR,EAAI/M,MAAM1E,EAC7FwF,KAAKqK,IAAI4B,EAAI9P,QAAQgK,KAAMe,EAAI3M,GAAK2M,EAAI3M,EAAI,GAE/C2M,EAAI3M,GAAKyR,EAAI7P,QAAQgK,KAAO6F,EAAI9F,OAAOC,MAAQe,EAAI3M,GAAKyR,EAAI7P,QAAQiK,MAAQ4F,EAAI9F,OAAOE,MACpFpG,KAAKqK,IAAI4B,EAAI9P,QAAQgK,KAAM6F,EAAI7P,QAAQgK,MAAQe,EAAI3M,EAAI,GAGvD0R,EAAI9P,QAAQgK,KAAOe,EAAI3M,EAAI,GAG3C,MACJ,IAAK,QACD,GAAIyR,EAAI7P,QAAQgK,KAAO6F,EAAI9F,OAAOC,KAAO8F,EAAI9P,QAAQiK,MAAQ6F,EAAI/F,OAAOE,QACnE4F,EAAI7P,QAAQgK,KAAO8F,EAAI9P,QAAQiK,MAAQ2D,GAAUiC,EAAI7P,QAAQmK,IAAM0F,EAAI9F,OAAOI,KAAO2F,EAAI/M,MAAM1E,GAC5FwR,EAAI7P,QAAQkK,OAAS2F,EAAI9F,OAAOG,QAAU4F,EAAI/M,MAAM1E,GAAK,CACzD+Z,EAAMvU,KAAKqK,IAAIrK,KAAK6G,IAAImF,EAAI7P,QAAQgK,KAAO8F,EAAI9P,QAAQiK,OAAS,EAAG,IACvE2D,EAAQiC,EAAI7P,QAAQgK,KAAOe,EAAI3M,EAAIga,OAI/BxK,EADmB,QAAlBiC,EAAIhG,WAAuBkB,EAAI1M,EAAIyR,EAAI/M,MAAM1E,GAAyB,WAAlBwR,EAAIhG,WAA0BkB,EAAI1M,EAAIyR,EAAI/M,MAAM1E,EAC7FwF,KAAK+I,IAAIkD,EAAI9P,QAAQiK,MAAOc,EAAI3M,GAAK2M,EAAI3M,EAAI,GAEhD2M,EAAI3M,GAAKyR,EAAI7P,QAAQgK,KAAO6F,EAAI9F,OAAOC,MAAQe,EAAI3M,GAAKyR,EAAI7P,QAAQiK,MAAQ4F,EAAI9F,OAAOE,MACpFpG,KAAK+I,IAAIkD,EAAI9P,QAAQiK,MAAO4F,EAAI7P,QAAQiK,OAASc,EAAI3M,EAAI,GAGzD0R,EAAI9P,QAAQiK,MAAQc,EAAI3M,EAAI,GAMpDwB,EAASiR,GADTyG,EAASzG,GAAe9F,EAAK6C,EAAO,GACJkC,EAAI/M,MAAM1E,EAAI0M,EAAI1M,EAAG,IACrD8Z,EAASrI,EAAI/M,WAEZ,GAAoB,aAAhBmV,EAA4B,CACjC,OAAQpI,EAAIjG,WACR,IAAK,MACD,GAAIgG,EAAI7P,QAAQkK,OAAS2F,EAAI9F,OAAOG,OAAS4F,EAAI9P,QAAQmK,IAAM2F,EAAI/F,OAAOI,MACrE2F,EAAI9P,QAAQmK,IAAM0F,EAAI7P,QAAQkK,OAAS0D,GAAUiC,EAAI7P,QAAQgK,KAAO6F,EAAI9F,OAAOC,MAAQ8F,EAAI/M,MAAM3E,GAC9FyR,EAAI7P,QAAQiK,MAAQ4F,EAAI9F,OAAOE,OAAS6F,EAAI/M,MAAM3E,GAAK,CACvDga,EAAMvU,KAAKqK,IAAIrK,KAAK6G,IAAIoF,EAAI9P,QAAQmK,IAAM0F,EAAI7P,QAAQkK,QAAU,EAAG,IACvE0D,EAAQiC,EAAI7P,QAAQkK,OAASa,EAAI1M,EAAI+Z,OAIjCxK,EADmB,SAAlBiC,EAAIhG,WAAwBkB,EAAI3M,EAAI0R,EAAI/M,MAAM3E,GAAyB,UAAlByR,EAAIhG,WAAyBkB,EAAI3M,EAAI0R,EAAI/M,MAAM3E,EAC7FyF,KAAKqK,IAAI4B,EAAI9P,QAAQmK,IAAKY,EAAI1M,GAAK0M,EAAI1M,EAAI,GAE9C0M,EAAI1M,GAAKwR,EAAI7P,QAAQmK,IAAM0F,EAAI9F,OAAOI,KAAOY,EAAI1M,GAAKwR,EAAI7P,QAAQkK,OAAS2F,EAAI9F,OAAOG,OACnFrG,KAAKqK,IAAI4B,EAAI9P,QAAQmK,IAAK0F,EAAI7P,QAAQmK,KAAOY,EAAI1M,EAAI,GAGrDyR,EAAI9P,QAAQmK,IAAMY,EAAI1M,EAAI,GAG1C,MACJ,IAAK,SACD,GAAIwR,EAAI7P,QAAQmK,IAAM0F,EAAI9F,OAAOI,IAAM2F,EAAI9P,QAAQkK,OAAS4F,EAAI/F,OAAOG,SAClE2F,EAAI7P,QAAQmK,IAAM2F,EAAI9P,QAAQkK,OAAS0D,GAAUiC,EAAI7P,QAAQgK,KAAO6F,EAAI9F,OAAOC,MAAQ8F,EAAI/M,MAAM3E,GAC9FyR,EAAI7P,QAAQiK,MAAQ4F,EAAI9F,OAAOE,OAAS6F,EAAI/M,MAAM3E,GAAK,CACvDga,EAAMvU,KAAKqK,IAAIrK,KAAK6G,IAAImF,EAAI7P,QAAQmK,IAAM2F,EAAI9P,QAAQkK,QAAU,EAAG,IACvE0D,EAAQiC,EAAI7P,QAAQmK,IAAMY,EAAI1M,EAAI+Z,OAI9BxK,EADmB,SAAlBiC,EAAIhG,WAAwBkB,EAAI3M,EAAI0R,EAAI/M,MAAM3E,GAAyB,UAAlByR,EAAIhG,WAAyBkB,EAAI3M,EAAI0R,EAAI/M,MAAM3E,EAC7FyF,KAAK+I,IAAIkD,EAAI9P,QAAQkK,OAAQa,EAAI1M,GAAK0M,EAAI1M,EAAI,GAEjD0M,EAAI1M,GAAKwR,EAAI7P,QAAQmK,IAAM0F,EAAI9F,OAAOI,KAAOY,EAAI1M,GAAKwR,EAAI7P,QAAQkK,OAAS2F,EAAI9F,OAAOG,OACnFrG,KAAK+I,IAAIkD,EAAI9P,QAAQkK,OAAQ2F,EAAI7P,QAAQkK,QAAUa,EAAI1M,EAAI,GAG3DyR,EAAI9P,QAAQkK,OAASa,EAAI1M,EAAI,GAMrDuB,EAASiR,GADTyG,EAASzG,GAAe9F,EAAK6C,EAAO,IACJkC,EAAI/M,MAAM3E,EAAI2M,EAAI3M,EAAG,GACrD+Z,EAASrI,EAAI/M,MAEjBhD,EAAO7B,KAAKoZ,GACZvX,EAAO7B,KAAK0B,GACZG,EAAO7B,KAAKia,GAoIhB,SAASpK,GAAWpE,EAAQS,GACxB,IAAIP,EAAYF,EAAOE,UACvBF,EAAOE,UAAYO,EAAOP,UAC1BO,EAAOP,UAAYA,EACnB,IAAI9G,EAAQ4G,EAAO5G,MACnB4G,EAAO5G,MAAQqH,EAAOrH,MACtBqH,EAAOrH,MAAQA,EACf,IAAI9C,EAAS0J,EAAO3J,QACpB2J,EAAO3J,QAAUoK,EAAOpK,QACxBoK,EAAOpK,QAAUC,EAErB,SAAgByI,GAAiB3F,EAAO9C,EAAQ2I,EAAQyP,GACpD,IACIC,OAAyBjX,IAAXpB,EAAuB2I,EAAS3I,EAC9CsY,EAAMD,EAAY3E,QAClB6E,EAAMF,EAAY1E,SAClB6E,EAAQH,EAAY5I,YACpBgJ,EAAOJ,EAAYjJ,WACnBhH,EAASiQ,EAAYjQ,OACrBzJ,EAAQ0V,EAAUjM,EAAQtF,GAC1B4V,EAAUrE,EAAUjM,EAAQoQ,GAC5BG,EAAQtE,EAAUjM,EAAQqQ,GAC1BG,EAAQvE,EAAUjM,EAAQkQ,GAC1BO,EAAUxE,EAAUjM,EAAQmQ,GAsDhC,OArDI5Z,EAAQia,GAASja,EAAQka,EACb,MAWPla,GAAS+Z,GAAW/Z,EAAQga,EACrB,SAYPha,GAASga,GAASha,GAASia,EACpB,OAYA,QAwDpB,SAAgBE,GAAepX,GAC3B,IAAI4R,EAQJ,OAPAA,EAAc5R,EAAIuT,QAAQ8D,SAAS,GAAGpQ,OACJ,SAA9BjH,EAAIsX,gBAAgBzT,OACpB+N,EAAY2F,UAAUvX,EAAIuT,QAAQ8D,SAAS,GAAGpQ,QAEhB,SAA9BjH,EAAIwX,gBAAgB3T,OACpB+N,EAAY2F,UAAUvX,EAAIuT,QAAQ8D,SAAS,GAAGpQ,QAE3C2K,EAEX,SAAgBnH,GAAqBvC,GACjC,OAAQA,GACJ,IAAK,MACD,MAAO,SACX,IAAK,SACD,MAAO,MACX,IAAK,OACD,MAAO,QACX,IAAK,QACD,MAAO,OAEf,MAAO,OCv4EX,SAAgBY,GAAa7B,EAAQ7I,EAAQqZ,GACzC,IAAI/Q,EAASO,EAAOP,OAEhBgR,EAAOD,EAAgB,GAAM,KAAO,EAAI,GAAKxQ,EAAOlJ,OAASkJ,EAAOjJ,QACpEgZ,EAAUU,EACVT,EAAS,IAAMS,EACfR,EAAQD,EAAS,EAAIS,EACrBP,EAAU,IAAMO,EAChBza,EAAQ0V,EAAUvU,EAAQsI,GAC9B,OAAIzJ,EAAQ+Z,GAAW/Z,EAAQga,EACR,MAEdha,EAAQga,GAASha,EAAQia,EACX,QAEdja,EAAQia,GAASja,EAAQka,EACX,SAGA,OAG3B,SAAgBQ,GAActS,GAC1B,OAAKA,EAAQ0F,WAAa1F,EAAQpI,MAQtC,SAAgB2a,GAAgBpR,EAAa8J,EAAapI,GACtD,IAAI6C,EAAW,GACXC,GAAUvO,EAAG,EAAGC,EAAG,GASvB,OARKwL,IAEGA,EADAhG,KAAK6G,IAAIuH,EAAY7T,EAAI+J,EAAY/J,GAAKyF,KAAK6G,IAAIuH,EAAY5T,EAAI8J,EAAY9J,GACnE8J,EAAY/J,EAAI6T,EAAY7T,EAAI,QAAU,OAG1C+J,EAAY9J,EAAI4T,EAAY5T,EAAI,SAAW,OAGvDwL,GACJ,IAAK,SACL,IAAK,MACD6C,EAAW7I,KAAKqK,IAA8C,IAA1CrK,KAAK6G,IAAIvC,EAAY9J,EAAI4T,EAAY5T,GAAWqO,GACpEC,GAAUvO,EAAG+J,EAAY/J,EAAGC,EAAG8J,EAAY9J,GAAmB,WAAdwL,EAAyB6C,GAAYA,IACrF,MACJ,IAAK,QACL,IAAK,OACDA,EAAW7I,KAAKqK,IAA8C,IAA1CrK,KAAK6G,IAAIvC,EAAY/J,EAAI6T,EAAY7T,GAAWsO,GACpEC,GAAUvO,EAAG+J,EAAY/J,GAAmB,UAAdyL,EAAwB6C,GAAYA,GAAWrO,EAAG8J,EAAY9J,GAGpG,OAAOsO,EAKX,SAAgB6M,GAAgBC,EAAYC,EAAeC,EAAehH,EAAUK,GAChF,IAAI4G,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EAEPnN,EAAMrN,QAAQyT,EAAUtG,SAASgN,EAAeD,GAChDzG,EAAUtG,SAASiN,EAAeD,GAClC1G,EAAUtG,SAASiG,EAAUgH,IAHZ,GAIrB,GAAY,IAAR/M,EACA,IAAK,IAAI9O,EAAI,EAAGA,GAAK8O,EAAK9O,IAAK,CAC3B,IAAIkc,EAAIlc,EAAI8O,EACRxO,GAAK,EAAI4b,IAAM,EAAIA,IAAM,EAAIA,GAAKP,EAAWrb,EAC7C,EAAI4b,GAAK,EAAIA,IAAM,EAAIA,GAAKN,EAActb,EAC1C,EAAI4b,EAAIA,GAAK,EAAIA,GAAKL,EAAcvb,EACpC4b,EAAIA,EAAIA,EAAIrH,EAASvU,EACrBC,GAAK,EAAI2b,IAAM,EAAIA,IAAM,EAAIA,GAAKP,EAAWpb,EAC7C,EAAI2b,GAAK,EAAIA,IAAM,EAAIA,GAAKN,EAAcrb,EAC1C,EAAI2b,EAAIA,GAAK,EAAIA,GAAKL,EAActb,EACpC2b,EAAIA,EAAIA,EAAIrH,EAAStU,EACf,IAANP,GACA8b,EAAOE,EAAO1b,EACdyb,EAAOE,EAAO1b,IAGdub,EAAO/V,KAAKqK,IAAI9P,EAAGwb,GACnBC,EAAOhW,KAAKqK,IAAI7P,EAAGwb,GACnBC,EAAOjW,KAAK+I,IAAIxO,EAAG0b,GACnBC,EAAOlW,KAAK+I,IAAIvO,EAAG0b,IAI/B,OACI3b,EAAGwb,EAAMvb,EAAGwb,EAAMla,MAAOma,EAAOF,EAAMla,OAAQqa,EAAOF,EACrD7P,KAAM4P,EAAMzP,IAAK0P,EAAM5P,MAAQ2P,GAAQE,EAAOF,GAAQ1P,OAAS2P,GAAQE,EAAOF,GAC9ExR,QAAUjK,GAAIwb,GAAQE,EAAOF,IAAS,EAAGvb,GAAIwb,GAAQE,EAAOF,IAAS,IAM7E,SAAgBI,GAAajH,EAAWyG,EAAYnC,EAAQ1X,EAAQ+S,EAAU7U,EAAG8O,GAC7E,IAAI5J,GAAO5E,EAAG,EAAGC,EAAG,GAChB2b,EAAIlc,EAAI8O,EACRxO,GAAK,EAAI4b,IAAM,EAAIA,IAAM,EAAIA,GAAKP,EAAWrb,EAC7C,EAAI4b,GAAK,EAAIA,IAAM,EAAIA,GAAK1C,EAAOlZ,EACnC,EAAI4b,EAAIA,GAAK,EAAIA,GAAKpa,EAAOxB,EAC7B4b,EAAIA,EAAIA,EAAIrH,EAASvU,EACzB4E,EAAG5E,EAAIA,EACP,IAAIC,GAAK,EAAI2b,IAAM,EAAIA,IAAM,EAAIA,GAAKP,EAAWpb,EAC7C,EAAI2b,GAAK,EAAIA,IAAM,EAAIA,GAAK1C,EAAOjZ,EACnC,EAAI2b,EAAIA,GAAK,EAAIA,GAAKpa,EAAOvB,EAC7B2b,EAAIA,EAAIA,EAAIrH,EAAStU,EAEzB,OADA2E,EAAG3E,EAAIA,EACA2E,ECnVX,SAAgBkX,GAAUvS,GACtB,GAAIA,EAAM,CAWN,OATKA,aAAgBwS,IAAqBxS,aAAgByS,GAC9CzS,EAAK0S,YAAcC,wBAAsBC,OAE5C5S,aAAgB6S,GACb7S,EAAK0S,YAAcI,uBAAqBF,OAGxC5S,EAAK0S,YAAcK,kBAAgBH,OAInD,OAAO,EAGX,SAAgBI,GAAQhT,GACpB,GAAIA,EAAM,CAcN,OAZKA,aAAgBwS,IAAqBxS,aAAgByS,GAC9CzS,EAAK0S,YAAcC,wBAAsBM,KAE5CjT,aAAgB6S,GACb7S,EAAK0S,YAAcI,uBAAqBG,KAE3CjT,aAAgBkT,GACb,EAGAlT,EAAK0S,YAAcK,kBAAgBE,KAInD,OAAO,EAGX,SAAgBE,GAAuBnT,EAAMrB,GAQzC,OANIqB,aAAgB6S,GACR7S,EAAK0S,YAAcI,uBAAqBM,cAGxCpT,EAAK0S,YAAcK,kBAAgBK,cA8BnD,SAAgBC,GAAiBhI,GAC7B,OAAOA,EAAUqH,YAAcI,uBAAqBQ,cAGxD,SAAgBC,GAAiBlI,GAC7B,OAAOA,EAAUqH,YAAcI,uBAAqBU,cAGxD,SAAgBC,GAAoBpI,GAChC,OAAOA,EAAUqH,YAAcI,uBAAqBY,iBAGxD,SAAgBC,GAAU3T,GACtB,OAAKA,aAAgBwS,IAAqBxS,aAAgByS,GAC/CzS,EAAK0S,YAAcC,wBAAsBiB,OAGzC5T,EAAK0S,YAAcK,kBAAgBa,OAIlD,SAAgBC,GAAU7T,GACtB,OAAOA,EAAK0S,YAAcK,kBAAgBe,OAG9C,SAAgBC,GAAa/T,GACzB,OAAKA,aAAgBgU,IAAUhU,EAAK0S,YAAcK,kBAAgBkB,UACvDjU,EAAK0S,YAAcK,kBAAgBkB,UAEvC,EAGX,SAAgBC,GAAiBtR,GAC7B,OAAIA,GACKA,EAAK8P,YAAcyB,kBAAgBF,UAC7BrR,EAAK8P,YAAcyB,kBAAgBF,UAG3C,EAGX,SAAgBG,GAAcpU,GAC1B,OAAKA,aAAgBgU,IAAUhU,EAAK0S,YAAcK,kBAAgBsB,WACvDrU,EAAK0S,YAAcK,kBAAgBsB,WAEvC,EAGX,SAAgBC,GAAkB1R,GAC9B,OAAIA,GACKA,EAAK8P,YAAcyB,kBAAgBE,WAC7BzR,EAAK8P,YAAcyB,kBAAgBE,WAG3C,EAGX,SAAgBE,GAAUvU,EAAMkC,GAC5B,IAAIsS,EAAc,EA8BlB,OA7BIxU,aAAgBwS,IAAmBxS,aAAgByS,GACnD+B,EAAcxU,EAAK0S,YAAcC,wBAAsB8B,OAElDzU,IACa,cAAdkC,EACAsS,EAAcxU,EAAK0S,YAAcK,kBAAgB2B,gBAE9B,SAAdxS,EACLsS,EAAcxU,EAAK0S,YAAcK,kBAAgB4B,WAE9B,cAAdzS,EACLsS,EAAcxU,EAAK0S,YAAcK,kBAAgB6B,gBAE9B,UAAd1S,EACLsS,EAAcxU,EAAK0S,YAAcK,kBAAgB8B,YAE9B,UAAd3S,EACLsS,EAAcxU,EAAK0S,YAAcK,kBAAgB+B,YAE9B,cAAd5S,EACLsS,EAAcxU,EAAK0S,YAAcK,kBAAgBgC,gBAE9B,SAAd7S,EACLsS,EAAcxU,EAAK0S,YAAcK,kBAAgBiC,WAE9B,cAAd9S,IACLsS,EAAcxU,EAAK0S,YAAcK,kBAAgBkC,kBAGlDT,EAGX,SAAgBU,GAAalV,GAQzB,OANIA,aAAgB6S,GACR7S,EAAK0S,YAAcI,uBAAqBqC,UAGxCnV,EAAK0S,YAAcK,kBAAgBoC,UAKnD,SAAgBC,GAAazW,GACzB,OAAOA,EAAQ+T,YAAc2C,qBAAmBC,eAwBpD,SAAgBC,GAAgBC,GAC5B,OAAOA,EAAMC,KAAOC,eAAaC,aAOrC,SAAgBC,GAAWJ,GACvB,OAAOA,EAAMC,KAAOC,eAAaG,QAGrC,SAAgBC,GAAkBN,GAC9B,OAAOA,EAAMC,KAAOC,eAAaK,eAGrC,SAAgBC,GAAYR,GACxB,OAAOA,EAAMC,KAAOC,eAAaO,SAGrC,SAAgBC,GAAYV,GACxB,OAAQA,EAAMC,KAAOC,eAAaC,cAAkBH,EAAMC,KAAOC,eAAaS,eAWlF,SAAgBC,GAAgBZ,GAC5B,OAAOA,EAAM9C,YAAc2C,qBAAmBgB,gBAelD,SAAgBC,GAAgB3X,GAC5B,OAASA,EAAQ+T,YAAc2C,qBAAmBkB,aAGtD,SAAgBC,GAAgBhB,GAC5B,OAjBJ,SAA+BA,GAC3B,OAAOA,EAAM9C,YAAc2C,qBAAmBoB,UAgBvCC,CAAelB,IAAWA,EAAMmB,eAAiBC,gBAAcC,WAuB1E,SAAgBC,GAAQlU,EAAMjE,GAC1B,OAAOiE,EAAK8P,YAAcyB,kBAAgB4C,KAG9C,SAAgBC,GAAQpU,EAAMjE,GAC1B,OAAOiE,EAAK8P,YAAcyB,kBAAgBlB,KC5R9C,SAAgBgE,GAAuBvX,EAASM,EAAMrB,GAClD,IAAIuY,EACAC,EAAW,SACe,UAA1BnX,EAAKnC,MAAMqZ,WACXA,EAAalX,EAAKnC,MAAMuZ,MAEO,gBAA1BpX,EAAKnC,MAAMqZ,WAChBA,EAAalX,EAAKnC,MAAMwZ,YAEO,cAA1BrX,EAAKnC,MAAMqZ,aAChBA,EAAalX,EAAKnC,MAAMyZ,WAE5BtX,EACKuX,WAAcjc,KAAM,QAASiV,YAAa,YAC/CvQ,EAAK0S,aAAeK,kBAAgByE,QAAUzE,kBAAgB0E,cACxD1E,kBAAgBa,OAASb,kBAAgB0B,QAC/CzU,EAAKL,OACD+X,KAAM1X,EAAKL,MAAM+X,KAAMC,YAAa,QACpCC,YAAa,KAEjB5X,EAAKqR,YACDrR,EAAK6X,WACLV,EAAW,QAEf,IAAIW,EAAS,IAAI9D,GAAKrV,EAAS,SAC3BW,GAAIU,EAAKV,GAAK,mBACdyY,cAEQzY,GAAI,OAAQI,QAASwX,EAAWc,KAChC7I,QAAU1Y,EAAG,GAAKC,EAAG,KAAQ0L,QAAUC,KAAM,GAAIC,MAAO,IACxD3C,OACIsY,MAAM,EAAMC,SAAU,GAAIC,MAAOjB,EAAWvX,MAAMwY,MAAOT,KAAMR,EAAWvX,MAAM+X,KAChFU,aAAcjB,KAGlBzX,QAAS,KAAOM,EAAKnC,MAAMqZ,WAAa,KAAM9U,QAAUC,KAAM,GAAIC,MAAO,IACzEhD,GAAI,QAASK,OACTuY,SAAUhB,EAAWvX,MAAMuY,SAC3BC,MAAOjB,EAAWvX,MAAMwY,MAAOT,KAAMR,EAAWvX,MAAM+X,KACtDU,aAAcjB,GACfhI,QAAU1Y,EAAG,GAAKC,EAAG,IAAOgc,YAAaC,wBAAsB0F,WAG1E3F,aAAcK,kBAAgByE,QAAUzE,kBAAgB0E,cAAgB1E,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB0B,QACxI6D,kBAAmB,UACnBC,oBAAqB,UACrB5Y,OAAS+X,KAAM1X,EAAKL,MAAM+X,KAAMC,YAAa,eAC9C,GAWH,OAVAhZ,EAAQ6Z,WAAWV,GACnBnZ,EAAQ8Z,MAAMliB,KAAKuhB,GACnB9X,EAAKqR,SAAS9a,KAAKuhB,EAAOxY,IAW9B,SAA8BU,EAAMrB,EAASuY,EAAYC,GACrD,GAA8B,gBAA1BnX,EAAKnC,MAAMqZ,WAA8B,CACzC,IAAIwB,EAASxB,EAAWyB,QACxB,GAAID,GAAUA,EAAOxiB,OAAQ,CACzB0iB,GAAa5Y,EAAMrB,GAEnB,IAAK,IADDka,EAAa,GACR1iB,EAAI,EAAGA,EAAIuiB,EAAOxiB,OAAQC,IAAK,CACpC,IAAIwiB,EAAUD,EAAOviB,GAIrB,GAHqB,KAAjBwiB,EAAQX,OACRa,GAAcF,EAAQX,MAEtB7hB,IAAMuiB,EAAOxiB,OAAQ,CACrB,IAAIyJ,EAAQmZ,GAAS9Y,EAAM2Y,GACvB9I,EAAO,IAAImE,GAAKrV,EAAS,SACzBW,GAAIyZ,KAAa,aACjBhB,cAEQzY,GAAI,OAAQI,QAASmZ,EAAY1J,QAAU1Y,EAAG,EAAGC,EAAG,IACpDiJ,OACIsY,MAAM,EAAMC,SAAUvY,EAAMuY,SAAUC,MAAOxY,EAAMwY,MAAOT,KAAM/X,EAAM+X,KACtEU,aAAcjB,GAElB/U,QAAUC,KAAM,GAAIC,MAAO,GAAKiW,oBAAqB,SAE1DD,kBAAmB,UAAWC,oBAAqB,UACtD5Y,OAAS+X,KAAM1X,EAAKL,MAAM+X,KAAMC,YAAa,YAAaS,aAAcjB,GACxEzE,aAAcK,kBAAgByE,QAAUzE,kBAAgB0E,cAAgB1E,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB0B,QACxIuE,UAAW,KACZ,GACHra,EAAQ6Z,WAAW3I,GACnBlR,EAAQ8Z,MAAMliB,KAAKsZ,GACnB7P,EAAKqR,SAAS9a,KAAKsZ,EAAKvQ,IACxBuZ,EAAa,GACTF,EAAQM,aAAgB9iB,IAAMuiB,EAAOxiB,OAAS,GAC9C0iB,GAAa5Y,EAAMrB,UAMlC,CACD,IAAIua,EAAahC,EAAWgC,WAC5B,GAAIA,EAAWhjB,OAAQ,CACnB,IAAIijB,EAAgB,GACpBP,GAAa5Y,EAAMrB,GACnB,IAAK,IAAIxI,EAAI,EAAGA,EAAI+iB,EAAWhjB,OAAQC,IAAK,CACxC,IAAIijB,OAAO,EACPC,EAAYH,EAAW/iB,GAkB3B,GAhBIijB,EADAC,EAAUC,OAA+B,WAAtB,EAAYA,MACxB,KAEFD,EAAUC,OAA6B,YAApBD,EAAUC,MAC3B,IAEFD,EAAUC,OAA6B,cAApBD,EAAUC,MAC3B,IAGA,IAEY,KAAnBD,EAAUrB,MACNoB,IACAD,GAAiBC,EAAO,IAAMC,EAAUrB,KAAO,MAAaqB,EAAU/d,MAG1EnF,IAAM+iB,EAAWhjB,OAAQ,CACzB,IAAIyJ,EAAQmZ,GAAS9Y,EAAMqZ,GACvBxJ,EAAO,IAAImE,GAAKrV,EAAS,SACzBW,GAAIyZ,KAAa,eAAgBpZ,OAAS+X,KAAM1X,EAAKL,MAAM+X,KAAMC,YAAa,aAC9EI,cAEQzY,GAAI,OAAQI,QAASyZ,EAAehK,QAAU1Y,EAAG,EAAGC,EAAG,IACvDiJ,OACIsY,MAAM,EAAMC,SAAUvY,EAAMuY,SAAUC,MAAOxY,EAAMwY,MAAOT,KAAM/X,EAAM+X,KACtEU,aAAcjB,GAElB/U,QAAUC,KAAM,GAAIC,MAAO,GAAKiW,oBAAqB,SAE1DD,kBAAmB,UAAWC,oBAAqB,UACtD7F,aAAcK,kBAAgByE,QAAUzE,kBAAgB0E,cAAgB1E,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB0B,QACxIuE,UAAW,KACZ,GACHra,EAAQ6Z,WAAW3I,GACnBlR,EAAQ8Z,MAAMliB,KAAKsZ,GACnB7P,EAAKqR,SAAS9a,KAAKsZ,EAAKvQ,IACxB6Z,EAAgB,GACZE,EAAUJ,aAAgB9iB,IAAM+iB,EAAWhjB,OAAS,GACpD0iB,GAAa5Y,EAAMrB,OAjGvC4a,CAAcvZ,EAAMrB,EAASuY,EAAYC,GAyG7C,SAAgCnX,EAAMrB,EAASuY,EAAYC,GACvD,GAAID,EAAWsC,SAAWtC,EAAWsC,QAAQtjB,OAAQ,CACjD,IAAIsjB,EAAUtC,EAAWsC,QACzBZ,GAAa5Y,EAAMrB,GAInB,IAAK,IAHD8a,EAAe,GACfC,EAAa,GACbN,OAAO,EACFjjB,EAAI,EAAGA,EAAIqjB,EAAQtjB,OAAQC,IAAK,CACrC,IAAIwjB,EAASH,EAAQrjB,GAarB,GAXIijB,EADAO,EAAOL,OAA0B,WAAjBK,EAAOL,MAChB,KAEFK,EAAOL,OAA0B,YAAjBK,EAAOL,MACrB,IAEFK,EAAOL,OAA0B,cAAjBK,EAAOL,MACrB,IAGA,IAEPK,EAAOC,WACP,IAAK,IAAI9jB,EAAI,EAAGA,EAAI6jB,EAAOC,WAAW1jB,OAAQJ,IACtC6jB,EAAOC,WAAW9jB,GAAGwF,KACrBme,GAAgBE,EAAOC,WAAW9jB,GAAGkiB,KAAO,IAAM2B,EAAOC,WAAW9jB,GAAGwF,KAGvEme,GAAgBE,EAAOC,WAAW9jB,GAAGkiB,KAErCliB,IAAM6jB,EAAOC,WAAW1jB,OAAS,IACjCujB,GAAgB,KAS5B,GALoB,KAAhBE,EAAO3B,MACHoB,IACAM,GAAcN,EAAO,IAAMO,EAAO3B,KAAO,IAAMyB,EAAe,OAAwBE,EAAOre,MAGjGnF,IAAMqjB,EAAQtjB,OAAQ,CACtB,IAAIyJ,EAAQmZ,GAAS9Y,EAAM2Z,GACvB9J,EAAO,IAAImE,GAAKrV,EAAS,SACzBW,GAAIyZ,KAAa,cAAeT,kBAAmB,UAAWC,oBAAqB,UACnFR,cAEQzY,GAAI,OAAQI,QAASga,EAAYvK,QAAU1Y,EAAG,EAAGC,EAAG,IACpDiJ,OACIsY,MAAM,EAAMC,SAAUvY,EAAMuY,SAAUC,MAAOxY,EAAMwY,MAAOT,KAAM/X,EAAM+X,KACtEU,aAAcjB,GAElB/U,QAAUC,KAAM,GAAIC,MAAO,GAAKiW,oBAAqB,SAG7D5Y,OAAS+X,KAAM1X,EAAKL,MAAM+X,KAAMC,YAAa,aAAeqB,UAAW,GACvEtG,aAAcK,kBAAgByE,QAAUzE,kBAAgB0E,cAAgB1E,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB0B,UACzI,GACH9V,EAAQ6Z,WAAW3I,GACnBlR,EAAQ8Z,MAAMliB,KAAKsZ,GACnB7P,EAAKqR,SAAS9a,KAAKsZ,EAAKvQ,IACxBoa,EAAa,GACTC,EAAOV,aAAgB9iB,IAAMqjB,EAAQtjB,OAAS,GAC9C0iB,GAAa5Y,EAAMrB,MArKnCkb,CAAgB7Z,EAAMrB,EAASuY,EAAYC,GAC3CnX,EAAKxE,QAAUwE,EAAKxE,QACpBwE,EAAKvE,QAAUuE,EAAKvE,QACpBuE,EAAKL,MAAM+X,KAAO1X,EAAKL,MAAM+X,KAC7B1X,EAAK8Z,YAAc9Z,EAAK8Z,YACxBnb,EAAQ6Z,WAAWxY,GACZN,EAsKX,SAAgBkZ,GAAamB,EAAOpb,GAChC,IAAIqb,EAAa,IAAIhG,GAAKrV,EAAS,SAC/BW,GAAIyZ,KAAa,QAAShhB,OAAQ,EAAG2a,YAAaK,kBAAgByE,SAAYzE,kBAAsB,OACpGuF,kBAAmB,UAAWC,oBAAqB,YACpD,GACH5Z,EAAQ6Z,WAAWwB,GACnBrb,EAAQ8Z,MAAMliB,KAAKyjB,GACnBD,EAAM1I,SAAS9a,KAAKyjB,EAAW1a,IAGnC,SAAgBwZ,GAASiB,EAAO/Z,GAC5B,IAAIia,KACAta,EAAQK,EAAKL,MAMjB,OALAsa,EAASvC,KAAuB,gBAAf/X,EAAM+X,KAA0B/X,EAAM+X,KAAOqC,EAAMpa,MAAM+X,KAC1EuC,EAAS9B,MAAQxY,EAAMwY,MACvB8B,EAAS/B,SAA+B,KAAnBvY,EAAMuY,SAAmBvY,EAAMuY,SAAW6B,EAAMpa,MAAMuY,SAC3E+B,EAAStC,YAAqC,UAAtBhY,EAAMgY,YAA2BhY,EAAMgY,YAAcoC,EAAMpa,MAAMgY,YACzFsC,EAASrC,YAAqC,IAAtBjY,EAAMiY,YAAqBjY,EAAMiY,YAAcmC,EAAMpa,MAAMiY,YAC5EqC,EC1OX,SAAgBC,GAAmBvb,EAAS3E,EAAK8F,EAAUqa,GACvD,IAAI5C,EACJ,GAAI6C,GAAuBzb,EAAS3E,GAAK,GAAO,CAE5C,IAAIuT,GADJgK,EAAY5Y,EAAQ0b,UAAUrgB,EAAIsgB,WACV/M,QACxB,GAAIgK,GAA0C,WAA7BA,EAAUA,UAAUjc,KAAmB,CACpD,GAAK6e,GAAmB5M,EAAQtM,OAAOxK,GAAKqJ,EAASrJ,GAAK8W,EAAQtM,OAAOqB,OAASxC,EAASrJ,GACtF8W,EAAQtM,OAAOvK,GAAKoJ,EAASpJ,GAAK6W,EAAQtM,OAAOsB,QAAUzC,EAASpJ,EAAM,CAC3E,GAAI6W,EAAQC,WAAWxV,MAAQuV,EAAQ3B,YAAY5T,SAC5CuV,EAAQtM,OAAOxK,EAAI8W,EAAQ3B,YAAYnV,GAC1C,QAA2BiD,IAAvB6d,EAAUgD,SAAwB,CAClC,IAAIC,EAAW7b,EAAQ0b,UAAU9C,EAAU+C,UAC3C,GAAIE,EAASC,QAAQvkB,OAAS,IAAMqhB,EAAUmD,YAAa,CACvD,IAAIjkB,EAAI8W,EAAQtM,OAAOxK,EACnBC,EAAI6W,EAAQtM,OAAOvK,EACvB,EAAUmhB,SAAWtK,EAAQ3B,YAAY5T,MACzCwiB,EAASjN,QAAQoN,kBAAkBpD,EAAUmD,YAAanN,EAAQ3B,YAAY5T,OAC9E2G,EAAQic,KAAKJ,EAAU/jB,EAAI8W,EAAQtM,OAAOxK,EAAGC,EAAI6W,EAAQtM,OAAOvK,GAChEiI,EAAQkc,oBAAoBL,SAIhC7b,EAAQmc,MAAMvD,EAAY,GAAMhK,EAAQ3B,YAAY5T,MAAQuV,EAAQC,WAAWxV,OAASuV,EAAQC,WAAWxV,MAAS,EAAKuV,EAAQ3B,YAAYnV,EAAI8W,EAAQtM,OAAOxK,GAAOA,EAAG,EAAGC,EAAG,KAAUD,EAAG,EAAGC,EAAG,KAG3M,GAAI6W,EAAQC,WAAWzV,OAASwV,EAAQ3B,YAAY7T,UAC7CwV,EAAQtM,OAAOvK,EAAI6W,EAAQ3B,YAAYlV,GAC1C,QAA2BgD,IAAvB6d,EAAUgD,SAAwB,CAClC,IAAIQ,EAASpc,EAAQ0b,UAAU9C,EAAU+C,UACrC7jB,EAAI8W,EAAQtM,OAAOxK,EACnBC,EAAI6W,EAAQtM,OAAOvK,EACvB,EAAUskB,UAAYzN,EAAQ3B,YAAY7T,OAC1CgjB,EAAOxN,QAAQ0N,gBAAgB1D,EAAUgD,SAAUhN,EAAQ3B,YAAY7T,QACvE4G,EAAQic,KAAKG,EAAQtkB,EAAI8W,EAAQtM,OAAOxK,EAAGC,EAAI6W,EAAQtM,OAAOvK,QAG9DiI,EAAQmc,MAAMvD,EAAW,EAAI,GAAMhK,EAAQ3B,YAAY7T,OAASwV,EAAQC,WAAWzV,QAAUwV,EAAQC,WAAWzV,OAAYwV,EAAQ3B,YAAYlV,EAAI6W,EAAQtM,OAAOvK,GAAOD,EAAG,GAAKC,EAAG,IAAQD,EAAG,GAAKC,EAAG,SAI/M,GAAiC,WAA7B6gB,EAAUA,UAAUjc,KAAmB,CAC5C,IAAI4f,EAAUC,GAAYnhB,GAC1B2E,EAAQyc,iBACRzc,EAAQ0c,YAAYrhB,GACpBA,EAAIsgB,SAAW,GACf,IAAIgB,GACAhgB,KAAM,yBAA0BigB,SAAU,WAC1CC,WAAYN,EAASO,WAAYN,GAAYnhB,IAEjD2E,EAAQ+c,gBAAgBJ,GAE5B3c,EAAQgd,QAAQ3hB,MAK5B,SAAgB4hB,GAAW5hB,EAAK0gB,EAAamB,GAIzC,IAAK,IAHDC,EAAO,IAAIC,GACXC,EAA2B,aAAnBhiB,EAAI6D,MAAMvC,KAClBtB,EAAIuT,QAAQ8D,SAAS,GAAG2K,KAAOhiB,EAAIuT,QAAQyO,KACtC7lB,EAAK,EAAa,EAAI,EAAIA,EAAI6lB,EAAK9lB,OAAQC,IAChD2lB,EAAKvK,UAAUyK,EAAK7lB,GAAG8lB,MAAMvB,GAAazZ,QAE9C,OAAO6a,EAGX,SAAgBI,GAAavd,EAAS3E,GAGlC,IAAK,IAFD8d,EACAqD,KACK7e,EAAK,EAAG6f,EAAKC,OAAOC,KAAKriB,GAAMsC,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC1D,IAAIggB,EAAOH,EAAG7f,GACd6e,EAAYmB,GAAQtiB,EAAIsiB,GAQ5B,OANIC,GAAcviB,KAASga,MACvB8D,EAAS,IAAI9D,GAAKrV,EAAS,QAASwc,GAAa,IAC1C7b,GAAKtF,EAAIsF,GAChBX,EAAQ6Z,WAAWV,IAEvBnZ,EAAQkc,oBAAoB/C,GACrBA,EAGX,SAAgB0E,GAAsB7d,EAAS3E,GAC3C,IAAI2R,EACA8M,EACJ,GAAI9Z,EAAQ8d,eAAeC,aACvBjE,EAAQ9Z,EAAQ8d,eAAeC,iBAE9B,CAEG/Q,EADA3R,aAAekZ,IAAYlZ,EAAIye,MAAMviB,OAAS8D,EAAI2iB,WAAWzmB,SAAW,EAC9D8D,EAAIye,MAAMviB,OAAS,EAAK8D,EAAIye,MAAM,GAAKze,EAAI2iB,WAAW,GAGvD3iB,EAEb2E,EAAQ8d,eAAeG,aAAejR,EACtC,IAAI4L,EAAY5Y,EAAQke,cAActP,QAAQ8D,SAAS,GACvD,GAAI+I,GAAuBzb,EAASgN,GAAS,CAWzC8M,EAAQyD,GAAavd,GATjBW,GAAI,SACJwM,YAAayL,EAAUzL,YACvBtQ,QAAS+b,EAAU/b,QAASC,QAAS8b,EAAU9b,QAC/CqhB,SAAUvF,EAAUuF,SAAU9D,UAAWzB,EAAUyB,UACnDnB,SAAUN,EAAUM,SAAUmD,UAAWzD,EAAUyD,UACnDhjB,MAAOuf,EAAU/J,WAAWxV,MAC5BD,OAAQwf,EAAU/J,WAAWzV,OAC7B4H,OAASod,gBAAiB,MAAOrF,KAAM,cAAeC,YAAa,SAGvEhZ,EAAQ8d,eAAeC,aAAejE,GAG9C,OAAOA,EAGX,SAAgB2B,GAAuBzb,EAAS3E,EAAKgjB,GACjD,IAAIC,EAAa,EAAYte,EAAQ0b,UAAUrgB,EAAIsgB,UAC9C3b,EAAQ0b,UAAUrgB,EAAIsgB,WAAatgB,EACxC,SAAIijB,IAAcA,EAAW1F,WAMjC,SAAgB2F,GAA0Bve,EAAS3E,GAC/C,IAAIijB,EAAate,EAAQ0b,UAAUrgB,EAAIsgB,UACL,WAA9B2C,EAAW1F,UAAUjc,OACrBtB,EAAIoI,OAAOC,KAAQrI,EAAIwB,QAAUyhB,EAAW1P,QAAQtM,OAAOxK,EAAKuD,EAAIhC,MAAQ,EAC5EgC,EAAIoI,OAAOI,IAAOxI,EAAIyB,QAAUwhB,EAAW1P,QAAQtM,OAAOvK,EAAKsD,EAAIjC,OAAS,GAEhF4G,EAAQwe,mBAAmBnjB,MACvBhC,MAAOgC,EAAIhC,MAAOD,OAAQiC,EAAIjC,OAC9ByD,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,QACnC2G,QACIC,KAAMrI,EAAIoI,OAAOC,KACjBC,MAAOtI,EAAIoI,OAAOE,MAAOE,IAAKxI,EAAIoI,OAAOI,IACzCD,OAAQvI,EAAIoI,OAAOG,QACpBuJ,YAAa9R,EAAI8R,cAExBmR,EAAW1P,QAAQ6P,QAAQ,IAAIC,IAC/BJ,EAAW1P,QAAQ+P,QAAQL,EAAW1P,QAAQgQ,aAKlD,SAAgBC,GAAoB7e,EAAS8e,EAAQzd,GACjD,IAAKrB,EAAQ+e,cAAe,CACxB,IAAIrQ,GAA0C,IAAjC1O,EAAQ8Z,MAAMkF,QAAQ3d,GAAgBA,EAAKV,GAAKU,EAC7D,GAA8B,WAA1Byd,EAAOlG,UAAUjc,KAAmB,CACpC,IAAI+G,EAAQrC,EAAKuN,QAAQ/R,QAAUwE,EAAKuN,QAAQC,WAAWxV,MAAQ,GAC9DylB,EAAOlQ,QAAQ/R,QAAUiiB,EAAOlQ,QAAQC,WAAWxV,MAAQ,GAC5DwU,EAASxM,EAAKuN,QAAQ9R,QAAUuE,EAAKuN,QAAQC,WAAWzV,OAAS,GAChE0lB,EAAOlQ,QAAQ9R,QAAUgiB,EAAOlQ,QAAQC,WAAWzV,OAAS,GACjEiI,EAAKoC,OAAOC,KAAOA,EACnBrC,EAAKoC,OAAOI,IAAMgK,EAEtB,IAAI+K,EAAY5Y,EAAQ0b,UAAUoD,EAAOne,IAIzC,GAHKiY,EAAUlG,WACXkG,EAAUlG,cAE+B,IAAzCkG,EAAUlG,SAASsM,QAAQ3d,EAAKV,IAAY,CACtB,KAAlBU,EAAKsa,UACL3b,EAAQ0c,YAAYrb,GAExB,IAAIkb,EAAUC,GAAYnb,GAC1BrB,EAAQif,SAASrG,EAAWlK,GAC5B,IAAIiO,GACAhgB,KAAM,yBAA0BigB,SAAU,WAC1CC,WAAYN,EAASO,WAAYN,GAAYnb,IAEjDrB,EAAQ+c,gBAAgBJ,GACxB3c,EAAQkc,oBAAoBtD,KAOxC,SAAgBsG,GAAuBxe,EAASye,EAAYhe,EAAUnB,EAASof,GAC3E,IAAIC,EAAaC,GAAmBtf,EAAQU,QAAQC,IACpDX,EAAQuf,gBAAgBL,uBAAuBxe,EAAS2e,EAAYrf,EAAQwf,SAASjZ,UAAW4Y,EAAYhe,EAAUie,GAG1H,SAAgBK,GAAiBzc,EAAYc,EAAQ9D,EAAS0f,GAC1D,IAAIrkB,EAAM2H,EACN8b,EAAS9e,EAAQ0b,UAAUrgB,EAAIsgB,UAC/BgE,EAAe3f,EAAQ0b,UAAUrgB,EAAIsgB,UACzC,GAAI7X,GAAU6b,GAAgBA,EAAa/G,WAA6C,UAAhC+G,EAAa/G,UAAUjc,MAC3EmH,EAAO8U,WAAuC,UAA1B9U,EAAO8U,UAAUjc,MAAqBgjB,EAAahf,KAAOmD,EAAO6X,SAAW,CAChG,IAAItV,EAAQsZ,EAAa/Q,QAAQ8D,SAASsM,QAAQ3jB,EAAIuT,SAClDvI,GAAS,IACTrG,EAAQ0b,UAAUrgB,EAAIsF,IAAIgb,SAAW7X,EAAOnD,GAC5Cgf,EAAa/Q,QAAQ8D,SAASzL,OAAOZ,EAAO,IAGpD,GAAIvC,GAAUA,EAAO6X,UAAYtgB,EAAIsgB,UAAuB,SAAX+D,EAAmB,CAChE,IAAIE,EAAcd,EAAOlQ,QAAQ8D,SAASsM,QAAQlb,EAAO8K,SACrDiR,EAAcf,EAAOlQ,QAAQ8D,SAASsM,QAAQ3jB,EAAIuT,SAClDkR,GACAF,YAAaA,EAAa9b,OAAQA,EAClC+b,YAAaA,EAAaxc,OAAQL,GAEtC8b,EAAOlQ,QAAQ8D,SAASzL,OAAO4Y,EAAa,GAC5Cf,EAAOlQ,QAAQ8D,SAASzL,OAAO2Y,EAAa,EAAGvkB,EAAIuT,SACnD,IAII+N,GACAhgB,KAAM,4BAA6BmgB,YAJnC8C,YAAaC,EAAa/b,OAAQA,EAClC+b,YAAaD,EAAavc,OAAQL,GAIlC6Z,WAAYiD,EAAalD,SAAU,YAEvC5c,EAAQ+f,eAAehD,gBAAgBJ,IAM/C,SAAgBqD,GAAaC,EAAMjgB,EAASqB,GACxC,IAAI6e,KACApE,KACAlK,EAAyC,eAA3BvQ,EAAKnC,MAAM0S,YACzBvQ,EAAKnC,MAAMihB,QACXC,GAAUF,EAAK7e,EAAKnC,MAAMihB,OAAO/mB,QAErCinB,GAAYH,EAAKtO,EAAavQ,GAC9Bif,GAAgBxE,EAASlK,EAAavQ,GACtC4e,EAAKM,eAAeL,EAAKpE,GACzB,IAAI0E,EAAQ,EASZ,GARInf,EAAKnC,MAAMihB,SACXM,GAAaR,EAAMjgB,EAASqB,GAC5Bmf,KAEAnf,EAAKnC,MAAMwhB,OAAOnpB,OAAS,IAC3BopB,GAAYV,EAAMjgB,EAASqB,EAAMmf,EAAO5O,GACxC4O,KAEAnf,EAAKnC,MAAM0hB,MAAMrpB,OAAS,EAC1B,IAAK,IAAIspB,EAAI,EAAGA,EAAIxf,EAAKnC,MAAM0hB,MAAMrpB,OAAQspB,IACzCC,GAAeb,EAAMjgB,EAASqB,EAAMmf,EAAOK,EAAGjP,GAC9C4O,IAKZ,SAAgBO,GAAgB/gB,EAASigB,EAAMnB,EAAQ9R,EAAQkQ,GAC3D,IAAI7b,EAAO,IAAIgU,GAAKyJ,EAAQ,QAAS9R,GAMrC,GALA3L,EAAKsa,SAAWsE,EAAKtf,GACjBuc,IACA7b,EAAK6b,UAAW,GAEpBld,EAAQ6Z,WAAWxY,GACfA,EAAKuN,QAAQ8D,SAASnb,OAAS,EAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAI6J,EAAKuN,QAAQ8D,SAASnb,OAAQC,IAAK,CACnD,IAAIkX,EAAQrN,EAAKuN,QAAQ8D,SAASlb,GAC9BkX,aAAiBsS,KACjBtS,EAAMuS,wBAAyB,GAI3C,OAAO5f,EAAKuN,QA2DhB,SAAgB6R,GAAaR,EAAMjgB,EAASgN,GACxC,IAMI4B,EAAUmS,GAAgB/gB,EAASigB,EAAMjT,GALzCoM,cAAgBrY,QAASiM,EAAO9N,MAAMihB,OAAOpf,QAAQA,UACrDC,MAAOgM,EAAO9N,MAAMihB,OAAOnf,MAC3B4a,SAAU,EAAGG,YAAa,EAC1BnD,WAAajc,KAAM,SAAUiV,YAAa,gBAEa,GAC3DqO,EAAKiB,UAAUtS,EAAS,EAAG,EAAG,EAAGqR,EAAKkB,oBAAoB5pB,QAG9D,SAAgBopB,GAAYV,EAAMjgB,EAASgN,EAAQoU,EAAYxP,GAG3D,IAAK,IAFDyP,EAAW,EACXC,EAAW,EACNT,EAAI,EAAGA,EAAI7T,EAAO9N,MAAMwhB,OAAOnpB,OAAQspB,IAAK,CAC7CjP,GACA0P,EAAWT,EACXQ,EAAWD,GAGXC,EAAWrU,EAAO9N,MAAMihB,OAASU,EAAI,EAAIA,EAE7C,IASIjS,EAAUmS,GAAgB/gB,EAASigB,EAAMjT,GARzCoM,cACQrY,QAASiM,EAAO9N,MAAMwhB,OAAOG,GAAGV,OAAOpf,QAAQA,QAC/CoM,YAAayE,EAAc,EAAI,MAEvC5Q,MAAOgM,EAAO9N,MAAMwhB,OAAOG,GAAG7f,MAC9B4a,SAAUyF,EAAUtF,YAAauF,EACjC1I,WAAajc,KAAM,SAAUiV,YAAaA,EAAc,aAAe,cAG3EqO,EAAKiB,UAAUtS,EAASyS,EAAUC,IAI1C,SAAgBR,GAAeb,EAAMjgB,EAASgN,EAAQoU,EAAYG,EAAW3P,GAKzE,IAAK,IAJDvL,EAAQ2G,EAAO9N,MAAMwhB,OAAOnpB,QAAU,EACtC+pB,EAAW,EACXD,EAAWzP,EAAcwP,EAAa,EACtCI,EAAaxU,EAAO9N,MAAMwhB,OAAOnpB,OAAS,EAAI,EAAI,EAC7C2E,EAAI,EAAGA,EAAImK,EAAOnK,IAAK,CAC5BolB,EAAW1P,EAAc1V,EAAIqlB,EAAYC,EACzC,IAOIC,EAAgBV,GAAgB/gB,EAASigB,EAAMjT,GAN/CrM,GAAIqM,EAAO9N,MAAM0hB,MAAMW,GAAW5gB,GAAKzE,EACvC0f,SAAUyF,EAAUtF,YAAauF,EACjCtgB,MAAOgM,EAAO9N,MAAM0hB,MAAMW,GAAWvgB,MACrC+S,YAAaK,kBAAgByE,QAAUzE,kBAAgBoC,UACvDoC,WAAajc,KAAM,SAAUiV,YAAaA,EAAc,aAAe,cAI3E,GADA6P,EAAc/O,SAAS,GAAGuO,wBAAyB,EACzC,IAAN/kB,EAAS,CACT,IAAIwlB,OAAW,EACfA,GACI/gB,GAAIqM,EAAO9N,MAAM0hB,MAAMW,GAAW5gB,GAAK,UACvCK,MAAOgM,EAAO9N,MAAM0hB,MAAMW,GAAWpB,OAAOnf,MAC5CoY,cACQrY,QAASiM,EAAO9N,MAAM0hB,MAAMW,GAAWpB,OAAOpf,QAAQA,QACtDoM,YAAayE,EAAc,IAAM,IAEzCgK,SAAUyF,EAAUtF,YAAauF,EACjC1I,WAAajc,KAAM,SAAUiV,YAAaA,EAAc,aAAe,aAE3E,EAAgB8P,EAASroB,MAAQ2T,EAAO9N,MAAM0hB,MAAMW,GAAWpB,OAAO9mB,MAClEqoB,EAAStoB,OAAS4T,EAAO9N,MAAM0hB,MAAMW,GAAWpB,OAAO9mB,MAC3D,IAAIsoB,EAAeZ,GAAgB/gB,EAASigB,EAAMjT,EAAQ0U,GAC1DD,EAAc/O,SAAS9a,KAAK+pB,GAEhC1B,EAAKiB,UAAUO,EAAeJ,EAAUC,GACnC1P,GACDyP,IAEJC,EAAW1P,EAAc1V,EAAIqlB,EAAY,GAqCjD,SAAgBnB,GAAUF,EAAK9mB,GAC3B,IAAIikB,EAAO,IAAIuE,GACfvE,EAAKjkB,OAASA,EACd8mB,EAAItoB,KAAKylB,GAGb,SAAgBwE,GAAaxoB,GACzB,IAAIyoB,EAAO,IAAIC,GAEf,OADAD,EAAKzoB,MAAQA,EACNyoB,EAGX,SAAgBzB,GAAYH,EAAKtO,EAAa5E,GAC1C,IACI5T,EADA4oB,EAAc,EAElB,GAAI9B,EAAI3oB,OAAS,EACb,IAAK,IAAIC,EAAI,EAAGA,EAAI0oB,EAAI3oB,OAAQC,IAC5BwqB,GAAe9B,EAAI1oB,GAAG4B,OAG9B,GAAIwY,GAKA,GAJI5E,EAAO9N,MAAMwhB,OAAOnpB,OAAS,IAC7ByqB,GAAehV,EAAO9N,MAAMwhB,OAAO,GAAGtnB,OACtCgnB,GAAUF,EAAKlT,EAAO9N,MAAMwhB,OAAO,GAAGtnB,SAEtC4T,EAAO9N,MAAM0hB,MAAMrpB,OAAS,EAC5B,IAASC,EAAI,EAAGA,EAAIwV,EAAO9N,MAAM0hB,MAAMrpB,OAAQC,IAE3CwqB,GADA5oB,EAAS4T,EAAO9N,MAAM0hB,MAAMppB,GAAG4B,OAE3B5B,IAAMwV,EAAO9N,MAAM0hB,MAAMrpB,OAAS,GAAKyqB,EAAchV,EAAO5T,SAC5DA,GAAU4T,EAAO5T,OAAS4oB,GAE9B5B,GAAUF,EAAK9mB,QAKvB,GAAI4T,EAAO9N,MAAMwhB,OAAOnpB,OAAS,EAC7B,IAASC,EAAI,EAAGA,EAAIwV,EAAO9N,MAAMwhB,OAAOnpB,OAAQC,IAE5CwqB,GADA5oB,EAAS4T,EAAO9N,MAAMwhB,OAAOlpB,GAAGgZ,OAE5BhZ,IAAMwV,EAAO9N,MAAMwhB,OAAOnpB,OAAS,GAAKyqB,EAAchV,EAAO5T,SAC7DA,GAAU4T,EAAO5T,OAAS4oB,GAE9B5B,GAAUF,EAAK9mB,QAInBgnB,GAAUF,EAAKlT,EAAO5T,QAKlC,SAAgBknB,GAAgBxE,EAASlK,EAAa5E,GAClD,IAAIiV,EAAa,EACjB,GAAIjV,EAAO9N,MAAMwhB,OAAOnpB,OAAS,GAAkC,eAA7ByV,EAAO9N,MAAM0S,YAC/C,IAAK,IAAIza,EAAI,EAAGA,EAAI6V,EAAO9N,MAAMwhB,OAAOnpB,OAAQJ,IAAK,CACjD8qB,GAAcjV,EAAO9N,MAAMwhB,OAAOvpB,GAAGqZ,OACrC,IAAIsR,EAAOD,GAAa7U,EAAO9N,MAAMwhB,OAAOvpB,GAAGqZ,QAC3CrZ,IAAM6V,EAAO9N,MAAMwhB,OAAOnpB,OAAS,GAAK0qB,EAAajV,EAAO3T,QAC5DyoB,EAAKzoB,OAAS2T,EAAO3T,MAAQ4oB,GAEjCnG,EAAQlkB,KAAKkqB,QAGhB,GAAKlQ,EAmBL,CACGkQ,EAAOD,GAAa7U,EAAO3T,OAC/ByiB,EAAQlkB,KAAKkqB,OAlBR,CAAA,IAFDzb,EAAQ2G,EAAO9N,MAAMwhB,OAAOnpB,OAAS,EAAIyV,EAAO9N,MAAM0hB,MAAMrpB,OAC1D,EAAIyV,EAAO9N,MAAM0hB,MAAMrpB,OAC7B,IAASJ,EAAI,EAAGA,EAAIkP,EAAOlP,IACvB,GAAU,IAANA,GAAW6V,EAAO9N,MAAMwhB,OAAOnpB,OAAS,EAAG,CAC3C0qB,GAAcjV,EAAO9N,MAAMwhB,OAAO,GAAGtnB,OACrC,IAAI0oB,EAAOD,GAAa7U,EAAO9N,MAAMwhB,OAAO,GAAGtnB,QAC/C0iB,EAAQlkB,KAAKkqB,OAEZ,CACDG,GAAcjV,EAAO9N,MAAM0hB,MAAM,GAAGxnB,OAChC0oB,EAAOD,GAAa7U,EAAO9N,MAAM0hB,MAAM,GAAGxnB,QAC1CjC,IAAM6V,EAAO9N,MAAM0hB,MAAMrpB,QAAU0qB,EAAajV,EAAO3T,QACvDyoB,EAAKzoB,OAAS2T,EAAO3T,MAAQ4oB,GAEjCnG,EAAQlkB,KAAKkqB,KCrf7B,SAAgBI,GAAYliB,EAASmiB,GACjC,IAAIC,EAAMC,SAASC,eAAetiB,EAAQU,QAAQC,IAAMwhB,EAAe,UAAY,YAC/EI,EAAYC,GAAaxiB,GACzByiB,EAAgBC,GAAiB1iB,GACjCyD,EAAS0e,EAAgB,eAAiBI,EAAUlpB,MAAQ,MAAU,cAAgBkpB,EAAUnpB,OAAS,MAC7G,IAAKgpB,EAAK,CACN,IAAIphB,EAAQ,WAAamhB,EAAeI,EAAUnpB,OAAUqpB,EAAcrpB,OAAS,KAAQ,6BACtF+oB,EAAgBM,EAAcppB,MAAQ,IAAOkpB,EAAUlpB,OAAS,uCAAyCoK,EAK9G2e,EAAMO,GAAkB,OAHpBhiB,GAAMX,EAAQU,QAAQC,IAAMwhB,EAAe,UAAY,WACvDnhB,MAAOA,IAIfhB,EAAQU,QAAQkiB,aAAaR,EAAKpiB,EAAQU,QAAQmiB,YAClD,IAAIC,EAAeX,EAAeniB,EAAQ+iB,cAAcC,gBAAkBhjB,EAAQ+iB,cAAcE,cAC5FC,EAAQ,IAAIC,GAAML,GACtBI,EAAMtR,YAAcuQ,EAAe,aAAe,WAClDe,EAAM3rB,QAAU4qB,EAAeM,EAAcppB,MAAQopB,EAAcrpB,QAAU0pB,EAAaM,aAC1FF,EAAMziB,SAAS,IAAMT,EAAQU,QAAQC,IAAMwhB,EAAe,UAAY,YACtEA,EAAeniB,EAAQqjB,OAASH,EAAQljB,EAAQsjB,OAASJ,EACzD,IAAIK,EAAWlB,SAASC,eAAetiB,EAAQU,QAAQC,IAAMwhB,EAAe,UAAY,YACxFA,EAAeniB,EAAQqjB,OAAO3iB,QAAU6iB,EAAWvjB,EAAQsjB,OAAO5iB,QAAU6iB,EAKhF,SAAgBC,GAAYxjB,GACxB,IAAIyjB,GAAWzjB,EAAQwf,SAASkE,iBAC5BC,GAAW3jB,EAAQwf,SAASoE,eAC5B5jB,GAAWA,EAAQ+iB,cAAcc,YACjC7jB,EAAQqjB,OAAO9rB,OAAS,EACxByI,EAAQsjB,OAAO/rB,OAAS,OACRwD,IAAZ0oB,GAAyBzjB,EAAQqjB,OAAO3iB,SACxCojB,GAAqB9jB,EAASA,EAAQqjB,OAAQI,GAAS,QAE3C1oB,IAAZ4oB,GAAyB3jB,EAAQsjB,OAAO5iB,SACxCojB,GAAqB9jB,EAASA,EAAQsjB,OAAQK,GAAS,IAI3DI,GAAoB/jB,GAM5B,SAAgB+jB,GAAoB/jB,GAChCgkB,GAAchkB,EAAQU,QAAQC,GAAK,WACnCqjB,GAAchkB,EAAQU,QAAQC,GAAK,WACnCqjB,GAAchkB,EAAQU,QAAQC,GAAK,iBAGvC,SAAgB6hB,GAAaxiB,GACzB,IAAI6D,EAAM,EACNH,EAAO,EAKX,OAJI1D,EAAQ+iB,cAAcc,aACtBhgB,EAAM7D,EAAQ+iB,cAAcC,gBAAgBiB,UAC5CvgB,EAAO1D,EAAQ+iB,cAAcE,cAAcgB,WAExC,IAAIvF,GAAKhb,EAAMG,GAG1B,SAAgB6e,GAAiB1iB,GAC7B,IAAIuiB,EAAYC,GAAaxiB,GACzB5G,EAAS4G,EAAQwf,SAAS0E,eAC1B7qB,EAAQ2G,EAAQwf,SAAS2E,cAa7B,OAZI9qB,EAAQ2G,EAAQU,QAAQ0jB,YAAc7B,EAAUlpB,QAChDA,EAAQ2G,EAAQU,QAAQ0jB,YAAc7B,EAAUlpB,OAEhDD,EAAS4G,EAAQU,QAAQ2jB,aAAe9B,EAAUnpB,SAClDA,EAAS4G,EAAQU,QAAQ2jB,aAAe9B,EAAUnpB,QAElD4G,EAAQqjB,QAAUrjB,EAAQqjB,OAAO9rB,SACjC8B,EAAQ2G,EAAQqjB,OAAO9rB,QAEvByI,EAAQsjB,QAAUtjB,EAAQsjB,OAAO/rB,SACjC6B,EAAS4G,EAAQsjB,OAAO/rB,QAErB,IAAImnB,GAAKrlB,EAAOD,GAwB3B,SAAS0qB,GAAqB9jB,EAASkjB,EAAO1S,EAAQ2R,GAClD,IAAII,EAAYC,GAAaxiB,GACzByiB,EAAgBC,GAAiB1iB,GACjC8iB,EAAeX,EAAeniB,EAAQ+iB,cAAcC,gBAAkBhjB,EAAQ+iB,cAAcE,eAwBpG,SAAwBjjB,EAASyiB,EAAeN,GAC5C,IAAIC,EAAMC,SAASC,eAAetiB,EAAQU,QAAQC,IAAMwhB,EAAe,UAAY,YAC/Ee,EAAQf,EAAeniB,EAAQqjB,OAASrjB,EAAQsjB,OAChDlB,GAAOpiB,GAAWyiB,IAClBL,EAAIphB,MAAM3H,OAAS8oB,EAAgBM,EAAcppB,MAAQ6pB,EAAME,aAAgBF,EAAMe,WAAa,KAClG7B,EAAIphB,MAAM5H,QAAU+oB,EAAee,EAAMe,UAAaxB,EAAcrpB,OAAS8pB,EAAME,cAAiB,MACpGhB,EAAMC,SAASC,eAAetiB,EAAQU,QAAQC,GAAK,oBAE/CwhB,EAAgBC,EAAIphB,MAAM5H,OAAS8pB,EAAMe,UAAY,KAAS7B,EAAIphB,MAAM3H,MAAQ6pB,EAAMe,UAAY,OA/B1GK,CAAetkB,EAASyiB,EAAeN,GAe3C,SAA0BniB,EAASyiB,EAAeN,GAC9C,IAAIC,EAAMC,SAASC,eAAetiB,EAAQU,QAAQC,IAAMwhB,EAAe,sBAAwB,wBAC3Fe,EAAQf,EAAeniB,EAAQqjB,OAASrjB,EAAQsjB,OAChDlB,GAAOpiB,GAAWyiB,IAClBL,EAAIphB,MAAM3H,OAAS8oB,EAAgBM,EAAcppB,MAA8B,EAArB6pB,EAAME,aAAqBF,EAAMe,WAAa,KACxG7B,EAAIphB,MAAM5H,QAAU+oB,EAAee,EAAMe,UAAaxB,EAAcrpB,OAA+B,EAArB8pB,EAAME,cAAsB,MAnB9GmB,CAAiBvkB,EAASyiB,EAAeN,GACzCe,EAAM1S,OAASA,EACf0S,EAAM/G,MAAQnc,EAAQwf,SAASgF,YAC/BtB,EAAM3rB,OAASkrB,EAAcppB,MAAQ,IACrC6pB,EAAMuB,YAAcC,GAAY5B,EAAa2B,aAC7CvB,EAAMyB,WACN,IAAIpB,EAAWpB,EAAeniB,EAAQqjB,OAAO3iB,QAAUV,EAAQsjB,OAAO5iB,QAClEyhB,EACAoB,EAASviB,MAAM4jB,WAAcrC,EAAUlpB,MAAQ6pB,EAAM2B,aAAgB,KAGrEtB,EAASviB,MAAM8jB,UAAavC,EAAUnpB,OAAS8pB,EAAM6B,aAAgB,KC1I7E,SAAgBC,GAAoB9lB,GAChC,OAAO+lB,GAAkB/lB,EAAME,YCsBnC,SAAgB8lB,GAAeC,EAAQC,GAEnC,IAAK,IADDhuB,KACKI,EAAI,EAAGA,EAAI4tB,EAAgB7tB,OAAQC,IAAK,CAC7C,IAAI6D,EAAM+pB,EAAgB5tB,GACtB2tB,EAAOE,aAAahqB,EAAIuT,QAAQtM,SAChClL,EAAWQ,KAAKyD,GAGxB,OAAOjE,EAGX,SAAgBkuB,GAAexL,EAAOT,GAClC,IAAK,IAAI7hB,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAC9B,GAAIsiB,EAAMtiB,GAAGmJ,KAAO0Y,EAChB,OAAO,EAGf,OAAO,EAKX,SAAgBkM,GAAeC,GAC3B,IAAI7oB,EASJ,OARI6oB,IACIA,EAAc7oB,KACdA,EAAO,YAEF6oB,EAActmB,QAAUsmB,EAAc7oB,OAC3CA,EAAO,SAGRA,EAKX,SAAgB8oB,GAAuB/W,EAAOrN,GAC1C,GAAIA,aAAgBgU,GAChB,OAAQ3G,EAAMxP,MAAMA,OAChB,IAAK,WACIwP,EAAMrV,QACPgI,EAAKhI,MAAQ,IAEZqV,EAAMtV,SACPiI,EAAKjI,OAAS,IAEbsV,EAAM1N,OAAU0N,EAAM1N,MAAM+X,OAC7B1X,EAAKL,MAAM+X,KAAO,SAEtB,MACJ,IAAK,WACIrK,EAAMrV,QACPgI,EAAKhI,MAAQ,IAEZqV,EAAMtV,SACPiI,EAAKjI,OAAS,IAEbsV,EAAM1N,OAAU0N,EAAM1N,MAAM+X,OAC7B1X,EAAKL,MAAM+X,KAAO,SAEtB,MACJ,IAAK,cAKL,IAAK,YACIrK,EAAM1N,OAAU0N,EAAM1N,MAAM+X,OAC7B1X,EAAKL,MAAM+X,KAAO,cAM9B,OAAQrK,EAAMxP,MAAMwmB,MAChB,IAAK,SACIhX,EAAM1N,OAAU0N,EAAM1N,MAAMod,kBAC7B/c,EAAKL,MAAMod,gBAAkB,OAE5B1P,EAAM1N,OAAU0N,EAAM1N,MAAMiY,cAC7B5X,EAAKL,MAAMiY,YAAc,GAExBvK,EAAMmE,iBAAoBnE,EAAMmE,gBAAgB3T,QACjDmC,EAAKwR,gBAAgB3T,MAAQ,aAEjC,MACJ,IAAK,UACIwP,EAAM1N,OAAU0N,EAAM1N,MAAMiY,cAC7B5X,EAAKL,MAAMiY,YAAc,GAExBvK,EAAMmE,iBAAoBnE,EAAMmE,gBAAgB3T,QACjDmC,EAAKwR,gBAAgB3T,MAAQ,aAE5BwP,EAAMiE,iBAAoBjE,EAAMiE,gBAAgBzT,QACjDmC,EAAKsR,gBAAgBzT,MAAQ,SAOjD,SAAgBymB,GAAiBC,EAAWC,EAAOC,GAC/C,IAAIC,EAIAA,EAHW9f,GAAMmI,WAAWyX,EAAOD,GACvB3f,GAAMmI,WAAW0X,EAAKF,GAElBE,EAGAD,EAEpB,IAAIG,EAAkB/f,GAAM+H,UAAU6X,EAAOC,GACzCG,EAAkBhgB,GAAM+H,UAAU+X,EAAeH,GACjD1X,EAAIjI,GAAMmI,WAAW2X,EAAeH,GACpCM,EAAUD,EAAyD,GAArCD,EAAkBC,GACpD,OACInuB,EAAIiuB,EAAcjuB,EAAIoW,EAAI3Q,KAAKY,IAAI+nB,EAAU3oB,KAAKgR,GAAK,KACvDxW,EAAIguB,EAAchuB,EAAImW,EAAI3Q,KAAKW,IAAIgoB,EAAU3oB,KAAKgR,GAAK,MA0B/D,SAAgB4X,GAAeC,GAC3B,IAAI1lB,EAAU0lB,EAAUC,cACxB,EAAG,CACC,GAAIC,GAAS5lB,EAAS,aAClB,OAAO,EAEXA,EAAUA,EAAQ2lB,oBACb3lB,GACT,OAAO,EAGX,SAAgB6lB,GAAallB,EAAM1E,EAAM+e,GAErC,GAAIra,GAAQA,EAAKqR,UAAYrR,EAAKqR,SAASnb,OAAS,EAGhD,IAFA,IAAImX,OAAQ,EACRlX,EAAI,EACDA,EAAI6J,EAAKqR,SAASnb,OAAQC,IAE7B,OADAkX,EAAQgN,EAAUra,EAAKqR,SAASlb,KACtB0H,MAAMvC,OAASA,GAGlB4pB,GAAa7X,EAAO/R,EAAM+e,GAGzC,OAZe,EAenB,SAAgB8K,GAAqB9Z,EAAWkZ,GAC5C,IAAIa,EACJA,EAAwC,WAAnB/Z,EAAU/P,KApDnC,SAAyB+P,GACrB,IAAIjT,KACJ,GAAuB,WAAnBiT,EAAU/P,KAEV,IAAK,IADDkkB,EAAI,EACCrpB,EAAI,EAAGA,EAAIkV,EAAUzS,SAAS1C,OAAQC,IAS3C,IAAK,IAPD4D,EAAUsR,EAAUzS,SAASzC,GAE7BwZ,EAAU/K,GAAMC,aAAa9K,EAAQ4V,QAA2B5V,EAAQsrB,aAAzBtrB,EAAQ4V,OACvD1X,EAAU2M,GAAMC,aAAa9K,EAAQ9B,QAA2B8B,EAAQurB,aAAzBvrB,EAAQ9B,OACvDgN,EAAMrN,QAAQyT,EAAUtG,SAAS4K,EAAQ5V,EAAQ3B,OAAO,IACxDiT,EAAUtG,SAAS9M,EAAQ0X,GAC3BtE,EAAUtG,SAAShL,EAAQ3B,OAAO,GAAIH,IAP1B,KAQPnC,EAAI,EAAGA,EAAImP,EAAM,EAAGnP,GAAQ,GACjCsC,EAAOonB,GACHlN,GAAajH,EAAWtR,EAAQ3B,OAAO,GAAKwM,GAAMC,aAAa9K,EAAQ4V,QAA2B5V,EAAQsrB,aAAzBtrB,EAAQ4V,OAAgC/K,GAAMC,aAAa9K,EAAQ9B,QAA2B8B,EAAQurB,aAAzBvrB,EAAQ9B,OAA+B8B,EAAQ3B,OAAO,GAAItC,EAAGmP,GAC/Nua,IAIZ,OAAOpnB,EAgC4CmtB,CAAgBla,GAC/DA,EAAU+Z,mBACd,IAAK,IAAIjvB,EAAI,EAAGA,EAAIivB,EAAmBlvB,OAAS,EAAGC,IAAK,CACpD,IAAIquB,EAAQY,EAAmBjvB,GAC3BsuB,EAAMW,EAAmBjvB,EAAI,GAC7B2lB,EAAOC,GAAKyJ,UAAUhB,EAAOC,IAEjC,GADA3I,EAAK2J,QAAQpa,EAAUqa,YACnB5J,EAAK7Y,cAAcshB,GAAY,CAC/B,IAAIoB,EAAgBrB,GAAiBC,EAAWC,EAAOC,GAGnDmB,EAAmBvhB,IAFN1N,GAAI6tB,EAAM/tB,EAAGI,GAAI4tB,EAAIhuB,EAAGG,GAAI4tB,EAAM9tB,EAAGI,GAAI2tB,EAAI/tB,IAC7CC,GAAI4tB,EAAU9tB,EAAGI,GAAI8uB,EAAclvB,EAAGG,GAAI2tB,EAAU7tB,EAAGI,GAAI6uB,EAAcjvB,IAE1F,GAAIkvB,EAAiBthB,QAAS,CAC1B,IAAIS,EAAWH,GAAMmI,WAAWwX,EAAWqB,EAAiBC,aAC5D,GAAI3pB,KAAK6G,IAAIgC,GAAYsG,EAAUqa,WAC/B,OAAO,MAGV,CACD,IAAII,EAAS/J,GAAKyJ,UAAUjB,EAAWA,IAEvC,GADAuB,EAAOL,QAAQ,GACXK,EAAO7iB,cAAcuhB,IAAUsB,EAAO7iB,cAAcwhB,GACpD,OAAO,EAGf,GAAI7f,GAAM5B,OAAOuhB,EAAWoB,GACxB,OAAO,GAInB,GAAIta,EAAU0M,YAAY7hB,OAAS,EAE1B,CAAA,IADDqhB,EAAYlM,EAAUkC,QAAQ8D,SAClC,IAASlb,EAAI,EAAGA,EAAIohB,EAAUrhB,OAAQC,IAAK,CAEvC,GADkBohB,EAAUphB,GACZ8K,OAAOgC,cAAcshB,GACjC,OAAO,GAInB,OAAO,EAGX,SAAgBlgB,GAAW0hB,EAAWC,GAClC,IAAI5qB,GAAU3E,EAAG,EAAGC,EAAG,GACnBuvB,EAAKF,EACLG,EAAKF,EACLG,GAAKD,EAAGpvB,GAAKovB,EAAGtvB,KAAOqvB,EAAGpvB,GAAKovB,EAAGtvB,KAAOuvB,EAAGrvB,GAAKqvB,EAAGvvB,KAAOsvB,EAAGnvB,GAAKmvB,EAAGrvB,IACtEwvB,GAAMF,EAAGrvB,GAAKqvB,EAAGvvB,KAAOsvB,EAAGrvB,GAAKsvB,EAAGtvB,KAAOsvB,EAAGpvB,GAAKovB,EAAGtvB,KAAOqvB,EAAGtvB,GAAKuvB,EAAGvvB,IACvE0vB,GAAMJ,EAAGpvB,GAAKovB,EAAGtvB,KAAOsvB,EAAGrvB,GAAKsvB,EAAGtvB,KAAOqvB,EAAGnvB,GAAKmvB,EAAGrvB,KAAOqvB,EAAGtvB,GAAKuvB,EAAGvvB,IAC3E,GAAU,IAANwvB,EACA,OAAS7hB,SAAS,EAAOuhB,YAAazqB,GAE1C,IAAIkrB,EAAKF,EAAKD,EACVI,EAAKF,EAAKF,EACd,OAAIG,GAAM,GAAKA,GAAM,GAAKC,GAAM,GAAKA,GAAM,GACvCnrB,EAAM3E,EAAIwvB,EAAGtvB,GAAM2vB,GAAML,EAAGpvB,GAAKovB,EAAGtvB,IACpCyE,EAAM1E,EAAIuvB,EAAGrvB,GAAM0vB,GAAML,EAAGnvB,GAAKmvB,EAAGrvB,KAC3B0N,SAAS,EAAMuhB,YAAazqB,KAEhCkJ,SAAS,EAAOuhB,YAAazqB,GAG1C,SAAgBorB,GAAWC,EAAQC,EAAMC,EAAQC,GAC7C,IAGIC,EAAQxiB,GAFIyiB,GAAeL,EAAOhwB,EAAGgwB,EAAO/vB,EAAGgwB,EAAKjwB,EAAGiwB,EAAKhwB,GAChDowB,GAAeH,EAAOlwB,EAAGkwB,EAAOjwB,EAAGkwB,EAAKnwB,EAAGmwB,EAAKlwB,IAEhE,OAAImwB,EAAMviB,QACCuiB,EAAMhB,aALHpvB,EAAG,EAAGC,EAAG,GAY3B,SAAgBowB,GAAenwB,EAAIC,EAAIC,EAAIC,GACvC,OAASH,GAAMiB,OAAOjB,IAAO,EAAGC,GAAMgB,OAAOhB,IAAO,EAAGC,GAAMe,OAAOf,IAAO,EAAGC,GAAMc,OAAOd,IAAO,GAGtG,SAAgB2U,GAAUpM,EAAShH,GAC/B,IAAI0uB,KAKJ,OAJAA,EAAKxwB,KAAK8B,EAAQ2T,SAClB+a,EAAKxwB,KAAK8B,EAAQ4T,UAClB8a,EAAKxwB,KAAK8B,EAAQ0P,aAClBgf,EAAKxwB,KAAK8B,EAAQqP,YACXqf,EASX,SAAgBC,GAAiBroB,EAASsoB,EAAejnB,GACrD,IAAImP,EACA+X,EAAkBlnB,aAAgBgU,GAAShU,EAAK0S,YAAcK,kBAAgBoU,eAC3EnnB,EAAK0S,YAAcI,uBAAqBqU,eAC3CC,EAAiBpnB,aAAgBgU,GAAShU,EAAK0S,YAAcK,kBAAgBlU,QAC1EmB,EAAK0S,YAAcI,uBAAqBjU,QAG/CsQ,EAIJ,SAAuBnP,EAAMinB,EAAetoB,EAAS0oB,GACjD,IAAIjsB,KAEAiE,GADQV,EAAQwf,SAASjZ,UAAU4V,MACzBkG,SAASC,eAAetiB,EAAQU,QAAQC,KAClD2B,EAASjB,EAAKuN,QAAQtM,OACtB6a,EAAOzc,EAAQioB,wBACI3oB,EAAQwf,SAASkE,iBACnB1jB,EAAQwf,SAASoE,eACtC,OAAQ5jB,EAAQsB,cAAcH,UAC1B,IAAK,eACD1E,EAAQmsB,GAAYN,EAAehmB,EAAOoG,aAAc1I,EAAS0oB,EAAevL,EAAK9jB,MAAQ,EAAI8jB,EAAK/jB,QACtG,MACJ,IAAK,aACL,IAAK,aACDqD,EAAQmsB,GAAYN,EAAehmB,EAAOyG,WAAY/I,EAAS0oB,EAAc,EAAGvL,EAAK/jB,QACrF,MACJ,IAAK,cACL,IAAK,cACDqD,EAAQmsB,GAAYN,EAAehmB,EAAO8G,YAAapJ,EAAS0oB,EAAcvL,EAAK9jB,MAAO8jB,EAAK/jB,QAC/F,MACJ,IAAK,aACDqD,EAAQmsB,GAAYN,EAAehmB,EAAO0G,WAAYhJ,EAAS0oB,EAAc,EAAIvL,EAAK/jB,OAAS,GAC/F,MACJ,IAAK,UACL,IAAK,UACDqD,EAAQmsB,GAAYN,EAAehmB,EAAO+K,QAASrN,EAAS0oB,EAAc,EAAG,GAC7E,MACJ,IAAK,cACDjsB,EAAQmsB,GAAYN,EAAehmB,EAAO+F,YAAarI,EAAS0oB,EAAcvL,EAAK9jB,MAAQ8jB,EAAK/jB,OAAS,GACzG,MACJ,IAAK,WACL,IAAK,WACDqD,EAAQmsB,GAAYN,EAAehmB,EAAOgL,SAAUtN,EAAS0oB,EAAcvL,EAAK9jB,MAAO,GACvF,MACJ,IAAK,YACDoD,EAAQmsB,GAAYN,EAAehmB,EAAOiC,UAAWvE,EAAS0oB,EAAevL,EAAK9jB,MAAQ,EAAI,GAGtG,OAAOoD,EA1CEosB,CAAcxnB,EAAMinB,EAAetoB,EADJ,YADlBuoB,GAAkBE,EAAgBpnB,EAAKjB,QAAQ0oB,aAC/D9oB,EAAQI,QAAQ0oB,eAEtB,IAAIvG,EAAYC,GAAaxiB,GAC7B,OAASlI,EAAG0Y,EAAO1Y,EAAIyqB,EAAUlpB,MAAOtB,EAAGyY,EAAOzY,EAAIwqB,EAAUnpB,QA0CpE,SAASwvB,GAAYN,EAAeS,EAAO/oB,EAAS0oB,EAAc5wB,EAAGC,GACjE,IAAI0E,KACA0f,EAAQnc,EAAQwf,SAASjZ,UAAU4V,MACnCuH,EAAmB1jB,EAAQwf,SAASkE,iBACpCE,EAAiB5jB,EAAQwf,SAASoE,eAGtC,OAFAnnB,EAAM3E,GAAK4wB,EAAeJ,EAAcxwB,EAAIixB,EAAMjxB,GAAKqkB,EAAQuH,EAAmB5rB,EAClF2E,EAAM1E,GAAK2wB,EAAeJ,EAAcvwB,EAAIgxB,EAAMhxB,GAAKokB,EAAQyH,EAAiB7rB,EACzE0E,EAGX,SAAgBusB,GAAKC,GACjB,IAEI/X,EAFA1Z,EAAI,EACJL,EAAI,EAER,IAAKK,EAAI,EAAGA,EAAIyxB,EAAQ1xB,OAAQC,IAAK,CACjC,IAAIuZ,EAAImY,GAAUD,EAAQzxB,GAAGoX,SAC7B,IAAKzX,EAAIK,EAAGL,EAAI8xB,EAAQ1xB,OAAQJ,IAAK,CACjC,IAAImL,EAAS4mB,GAAUD,EAAQ9xB,GAAGyX,SAC9BmC,EAAEhP,OAAOjK,EAAIwK,EAAOP,OAAOjK,IAC3BoZ,EAAO+X,EAAQzxB,GACfyxB,EAAQzxB,GAAKyxB,EAAQ9xB,GACrB8xB,EAAQ9xB,GAAK+Z,IAIzB,OAAO+X,EAGX,SAAgBE,GAAsBzhB,EAAK0hB,EAAYL,GACnD,IAAIzwB,EACA+wB,EACA5sB,EACJ4sB,EAAUC,GAAqB5hB,EAAK0hB,EAAYL,GAChDzwB,EAAQ2N,GAAM+H,UAAUtG,EAAI2hB,EAAQ7I,OAAQ9Y,EAAI2hB,EAAQ7I,MAAQ,IAChE,IAAI+I,EAAgBC,GAAmBJ,GAIvC,OAHA3sB,EAAQwJ,GAAMM,UAAU8iB,EAAQ5sB,MAAOnE,EAAQ,GAAIixB,GACnDF,EAAQ5sB,MAAQA,EAChB4sB,EAAQ/wB,MAAQA,EACT+wB,EAGX,SAAgBC,GAAqB7vB,EAAQ2vB,EAAY9mB,GASrD,IAAK,IAND7F,EACAnE,EACAmxB,EAEAC,EACAC,EAPApyB,EAAS,EACTiZ,EAAS4Y,EAAW5Y,OAIpBoZ,KAGKzyB,EAAI,EAAGA,EAAIsC,EAAOlC,OAAS,EAAGJ,IACnCI,GAAU0O,GAAM4G,eAAepT,EAAOtC,GAAIsC,EAAOtC,EAAI,IACrDyyB,EAAQhyB,KAAKL,GAEjBkyB,EAAejZ,EAASjZ,EACxB,IAAK,IAAIspB,EAAI,EAAGA,EAAI+I,EAAQryB,OAAQspB,IAAK,CACrC,GAAI+I,EAAQ/I,IAAM4I,EAId,OAHAnxB,EAAQ2N,GAAM+H,UAAUvU,EAAOonB,GAAIpnB,EAAOonB,EAAI,IAC9CpkB,EAAQwJ,GAAMM,UAAU9M,EAAOonB,GAAIvoB,EAAOmxB,GAAgBC,GAAc,IACxEC,EAAS9I,GACApkB,MAAOA,EAAO+jB,MAAOmJ,GAElCD,EAAaE,EAAQ/I,GAEzB,OAASpkB,MAAOA,EAAO+jB,MAAOmJ,GAGlC,SAAgBH,GAAmBJ,GAC/B,IAAIS,OAA8B9uB,IAAvBquB,EAAWroB,QAAwB,GAAK,EAC/C+oB,EAAQ,EACZ,OAAQV,EAAWW,WACf,IAAK,SACDD,EAAQ,EACR,MACJ,IAAK,SACDA,IAAU,EAAUD,GACpB,MACJ,IAAK,QACDC,EAAS,EAAUD,EAG3B,OAAOC,EAGX,SAAgBE,GAAqB3uB,EAAKY,EAAKyL,GAC3CzL,GACO,IACP,IAIIguB,EACAC,EACJ,OAAQ7uB,EAAI0uB,WACR,IAAK,SACG9tB,GARE,IAQgBA,GAPlB,KAQAiuB,EAAS,QACTD,EAAwB,KAAf5uB,EAAImV,OAAiB,SAAW,OAEpCvU,GAVL,KAUqBA,GATnB,KAUFiuB,EAAS,OACTD,EAAwB,KAAf5uB,EAAImV,OAAiB,SAAW,UAEpCvU,EAhBH,IAgBoBA,EAdtB,KAeAguB,EAAS,MACTC,EAAwB,KAAf7uB,EAAImV,OAAiB,SAAW,UAGzCyZ,EAAS,SACTC,EAAyB,KAAf7uB,EAAImV,OAAkB,SAAW,QAE/C,MACJ,IAAK,QACGvU,GA1BE,IA0BgBA,GAzBlB,KA0BAiuB,EAAS,OACTD,EAAwB,KAAf5uB,EAAImV,OAAiB,SAAW,OAEpCvU,GA5BL,KA4BqBA,GA3BnB,KA4BFiuB,EAAS,QACTD,EAAwB,KAAf5uB,EAAImV,OAAiB,SAAW,UAEpCvU,EAlCH,IAkCoBA,EAhCtB,KAiCAguB,EAAS,SACTC,EAAwB,KAAf7uB,EAAImV,OAAiB,SAAW,UAGzCyZ,EAAS,MACTC,EAAwB,KAAf7uB,EAAImV,OAAiB,SAAW,QAE7C,MACJ,IAAK,SACD0Z,EAAS,SACTD,EAAS,SAGjB,GAAmB,IAAf5uB,EAAImV,QAA+B,IAAfnV,EAAImV,OAAc,CAGtC,OADY2Z,GAAmBziB,EAAI,GAAIA,EAAI,KAEvC,IAAK,OACDwiB,EAAwB,IAAf7uB,EAAImV,OAAe,QAAU,OACtC,MACJ,IAAK,QACD0Z,EAAwB,IAAf7uB,EAAImV,OAAe,OAAS,QACrC,MACJ,IAAK,SACDyZ,EAAwB,IAAf5uB,EAAImV,OAAe,MAAQ,SACpC,MACJ,IAAK,MACDyZ,EAAwB,IAAf5uB,EAAImV,OAAe,SAAW,OAInD,OAAS0Z,OAAQA,EAAQD,OAAQA,GAGrC,SAAgBE,GAAmB5gB,EAAKC,GACpC,OAAIjM,KAAK6G,IAAIoF,EAAI1R,EAAIyR,EAAIzR,GAAKyF,KAAK6G,IAAIoF,EAAIzR,EAAIwR,EAAIxR,GACxCwR,EAAIzR,EAAI0R,EAAI1R,EAAI,QAAU,OAG1ByR,EAAIxR,EAAIyR,EAAIzR,EAAI,SAAW,MAI1C,SAAgBqyB,GAAUvT,GACtB,IAAIwT,EAAe7N,GAAY3F,EAAOA,EAAMyT,mBAI5C,OAHAD,EAAanM,cAAcpE,SAC3BuQ,EAAanM,cAAcF,cAC3BqM,EAAanM,cAActP,QAAU,KAC9B2b,KAAKC,UAAUH,GAG1B,SAAgBI,GAAY5T,EAAO7W,GAC/BA,EAAQ0qB,QACR1qB,EAAQ2qB,uBAAsB,GAM9B,IAAK,IALDC,EAAM5qB,EAAQ6qB,mBAAmBC,UACjCC,EAAW/qB,EAAQgrB,gBACnBC,EAAiBjrB,EAAQirB,eACzBX,EAAoBtqB,EAAQsqB,kBAC5B3xB,KACKgF,EAAK,EAAG6f,EAAKxd,EAAQkrB,eAAevyB,SAAUgF,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACzE,IAAI9F,EAAU2lB,EAAG7f,GACjBhF,EAASd,EAAQwhB,OAAU8R,QAAStzB,EAAQszB,QAASC,WAAYvzB,EAAQuzB,YAE7E,IAAIC,EAAwBrrB,EAAQ+iB,cAAcC,gBAAgByB,YAC9D6G,EAAsBtrB,EAAQ+iB,cAAcE,cAAcwB,YAC1D8G,EAAgBvrB,EAAQwrB,OAAOD,cAC/BE,EAAYzrB,EAAQwrB,OAAOC,UAC3BC,EAAe1rB,EAAQ2rB,gBACvBC,EAAoB5rB,EAAQ6rB,qBAC5BC,EAAUvB,KAAKwB,MAAMlV,GACzB7W,EAAQgsB,oBAAsBF,EAAQE,oBACtChsB,EAAQ+T,YAAc+X,EAAQ/X,YAC9B/T,EAAQ8W,KAAOgV,EAAQhV,KACvB9W,EAAQisB,gBAAkBH,EAAQG,gBAClCjsB,EAAQksB,aAAeJ,EAAQI,aAC/BlsB,EAAQwlB,cAAgBsG,EAAQtG,cAChCxlB,EAAQI,QAAU0rB,EAAQ1rB,QAC1BJ,EAAQmsB,QAAUL,EAAQK,QAC1BnsB,EAAQirB,eAAiBA,EACzBjrB,EAAQosB,eAAiBN,EAAQM,eACjCpsB,EAAQkrB,eAAiBY,EAAQZ,eACjClrB,EAAQqsB,OAASP,EAAQO,OACzBrsB,EAAQ+iB,cAAcC,gBAAgByB,YAAc4G,EACpDrrB,EAAQ+iB,cAAcE,cAAcwB,YAAc6G,EAClD,IAAK,IAAIgB,EAAK,EAAGC,EAAKvsB,EAAQkrB,eAAevyB,SAAU2zB,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACzE,IAAItwB,EAAMuwB,EAAGD,GACT3zB,EAASqD,EAAIqd,QACbrd,EAAImvB,QAAUxyB,EAASqD,EAAIqd,MAAM8R,QACjCnvB,EAAIovB,WAAazyB,EAASqD,EAAIqd,MAAM+R,YAG5CprB,EAAQwsB,gBAAkBV,EAAQU,gBAClCxsB,EAAQysB,cAAgBX,EAAQW,cAChCzsB,EAAQge,WAAa8N,EAAQ9N,WAC7Bhe,EAAQ6qB,mBAAqBiB,EAAQjB,mBACrC7qB,EAAQ6qB,mBAAmBC,UAAYF,EACvC5qB,EAAQ5G,OAAS0yB,EAAQ1yB,OACzB4G,EAAQgrB,gBAAkBD,EAC1B/qB,EAAQ6rB,qBAAuBD,EAC/B5rB,EAAQ2rB,gBAAkBD,EAC1B1rB,EAAQsqB,kBAAoBA,EAC5BtqB,EAAQ0sB,KAAOZ,EAAQY,KACvB1sB,EAAQ8Z,MAAQgS,EAAQhS,MACxB9Z,EAAQ+iB,cAAgB+I,EAAQ/I,cAChC/iB,EAAQ2sB,aAAeb,EAAQa,aAC/B3sB,EAAQ3G,MAAQyyB,EAAQzyB,MACxB2G,EAAQwrB,OAASM,EAAQN,OACzBxrB,EAAQwrB,OAAOD,cAAgB7G,GAAY6G,GAC3CvrB,EAAQwrB,OAAOC,UAAY/G,GAAY+G,GACvCzrB,EAAQgY,eAAiB,EACzBhY,EAAQ4sB,WAAY,EACpB5sB,EAAQ2qB,uBAAsB,GAG9B,IAAK,IADDkC,EACKr1B,EAAI,EAAGA,EAAIwI,EAAQ8sB,MAAMv1B,OAAQC,KACtCq1B,EAAY7sB,EAAQ8sB,MAAM9sB,EAAQ8sB,MAAMt1B,KAC9Bu1B,UACNF,aAAqBG,IACrBhtB,EAAQU,QAAQusB,UAAUC,IAAI,aAMtC,OAHApB,EAAQ5N,cAAcpE,SACtBgS,EAAQ5N,cAAcF,cACtBhe,EAAQke,cAAgB4N,EAAQ5N,cACzB4N,EAGX,SAAgBqB,GAAYC,EAAetpB,GAIvC,IAAK,IAFD9C,EAAQ8C,EAAO9C,MACfqsB,EAAcvpB,EACTnG,EAAK,EAAG6f,EAAKC,OAAOC,KAAK0P,GAAgBzvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAEpE,OADU6f,EAAG7f,IAET,IAAK,OACDqD,EAAM+X,KAAOqU,EAAcrU,KACvB/X,aAAiBssB,KAEjBtsB,EAAY,KAAI,eAEpB,MACJ,IAAK,eACDA,EAAMusB,aAAeH,EAAcG,aACnC,MACJ,IAAK,UACDvsB,EAAMwsB,QAAUJ,EAAcI,QAC9B,MACJ,IAAK,cACDxsB,EAAMgY,YAAcoU,EAAcpU,YAClC,MACJ,IAAK,kBACDhY,EAAMod,gBAAkBgP,EAAchP,gBACtC,MACJ,IAAK,cACDpd,EAAMiY,YAAcmU,EAAcnU,YAClC,MACJ,IAAK,OACDjY,EAAMsY,KAAO8T,EAAc9T,KAC3B,MACJ,IAAK,QACDtY,EAAMwY,MAAQ4T,EAAc5T,MAC5B,MACJ,IAAK,eACDxY,EAAMyY,aAAe2T,EAAc3T,aACnC,MACJ,IAAK,aACDzY,EAAMysB,WAAaL,EAAcK,WACjC,MACJ,IAAK,WACDzsB,EAAMuY,SAAW6T,EAAc7T,SAC/B,MACJ,IAAK,SACDvY,EAAM0sB,OAASN,EAAcM,OAC7B,MACJ,IAAK,YACD1sB,EAAM2sB,UAAYP,EAAcO,UAChC,MACJ,IAAK,aACD3sB,EAAM4sB,WAAaR,EAAcQ,WACjC,MACJ,IAAK,iBACD5sB,EAAM6sB,eAAiBT,EAAcS,eACrC,MACJ,IAAK,YASjB,SAAwBC,EAAiBC,GACrC,IAAK,IAAIpwB,EAAK,EAAG6f,EAAKC,OAAOC,KAAKoQ,GAAkBnwB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtE,IAAIqwB,EAAMxQ,EAAG7f,GACb,OAAQqwB,GACJ,IAAK,OACDD,EAAepxB,KAAOmxB,EAAgBnxB,KACtC,MACJ,IAAK,KACDoxB,EAAe/1B,GAAK81B,EAAgB91B,GACpC,MACJ,IAAK,KACD+1B,EAAe71B,GAAK41B,EAAgB51B,GACpC,MACJ,IAAK,KACD61B,EAAe91B,GAAK61B,EAAgB71B,GACpC,MACJ,IAAK,KACD81B,EAAe51B,GAAK21B,EAAgB31B,GACpC,MACJ,IAAK,KACD41B,EAAeE,GAAKH,EAAgBG,GACpC,MACJ,IAAK,KACDF,EAAeG,GAAKJ,EAAgBI,GACpC,MACJ,IAAK,KACDH,EAAeI,GAAKL,EAAgBK,GACpC,MACJ,IAAK,KACDJ,EAAeK,GAAKN,EAAgBM,GACpC,MACJ,IAAK,IACDL,EAAe7f,EAAI4f,EAAgB5f,EACnC,MACJ,IAAK,QACD6f,EAAeM,MAAQP,EAAgBO,QA3CvCC,CAAelB,EAAcmB,SAAUvtB,EAAMutB,WAIrDzqB,aAAkB0qB,IAClBnB,EAAYoB,qBA4CpB,SAAgBC,GAAgBtB,EAAetpB,EAAQ6qB,GAGnD,IAAK,IAFDtB,EAAcvpB,EACd8qB,EAAYvB,EAAYuB,UACnBjxB,EAAK,EAAG6f,EAAKC,OAAOC,KAAK0P,GAAgBzvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAEpE,OADU6f,EAAG7f,IAET,IAAK,QACD0vB,EAAYrsB,MAAMwY,MAAQoV,EAAUpV,MAAQ4T,EAAc5T,MAC1D,MACJ,IAAK,UACD6T,EAAYtsB,QAAU6tB,EAAU7tB,QAAUqsB,EAAcrsB,SAAW6tB,EAAUC,KAC7E,MACJ,IAAK,OACD,IAAIC,EAAaH,EAAiB3tB,MAClCqsB,EAAYrsB,MAAMwY,MAAQ4T,EAAcyB,KAAOD,EAAUpV,MAAQsV,EAAWtV,MAC5E6T,EAAYrsB,MAAM6sB,eAAiBT,EAAcyB,KAAOD,EAAUf,eAAiBc,EAAiB3tB,MAAM6sB,eAC1GR,EAAYtsB,QAAUqsB,EAAcyB,KAAOD,EAAU7tB,SAAWqsB,EAAcyB,KAAOF,EAAiB5tB,QACtG6tB,EAAUC,KAAOzB,EAAcyB,KAC/B,MACJ,IAAK,iBACDxB,EAAYrsB,MAAM6sB,eAAiBe,EAAUf,eAAiBT,EAAcS,iBAM5F,SAAgBkB,GAAmBhuB,EAASkd,EAAcje,GACtDe,EAAQ1H,MAAQ4kB,EAAa5kB,MAC7B0H,EAAQ3H,OAAS6kB,EAAa7kB,OAC9B2H,EAAQsZ,UAAY4D,EAAa5D,UACjCtZ,EAAQsb,UAAY4B,EAAa5B,UACjCtb,EAAQod,SAAWF,EAAaE,SAChCpd,EAAQmY,SAAW+E,EAAa/E,SAChCnY,EAAQ6Y,oBAAsBqE,EAAarP,QAAQ8D,SAAS,GAAGkH,oBAC/D7Y,EAAQ4Y,kBAAoBsE,EAAarP,QAAQ8D,SAAS,GAAGiH,kBAC7D5Y,EAAQ+nB,aAAe7K,EAAarP,QAAQ8D,SAAS,GAAGoW,aACxD/nB,EAAQiuB,QAAU/Q,EAAarP,QAAQ8D,SAAS,GAAGsc,QAC/C/Q,EAAa/e,iBAAiB+vB,OAC9BluB,EAAQ0C,OAASwa,EAAa/e,MAAMuE,QAExC1C,EAAQJ,GAAKsd,EAAarP,QAAQ8D,SAAS,GAAG/R,GAC9CI,EAAQC,MAAQid,EAAajd,MAC7B,IACK,IAAIrD,EAAK,EAAG6f,EAAKxd,EAAQ8sB,MAAOnvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAIuxB,EAAY1R,EAAG7f,GACnBqmB,GAAc/F,EAAatd,GAAK,gBAAiBuuB,GACjDlL,GAAc/F,EAAatd,GAAK,wBAAyBuuB,GACzDlL,GAAc/F,EAAatd,GAAK,wBAAyBuuB,GAE7DjR,EAAarP,QAAQ8D,SAASzL,OAAO,EAAG,GACxCgX,EAAarP,QAAQ8D,SAASzL,OAAO,EAAG,EAAGlG,GAG/C,SAAgBouB,GAAY9tB,EAAM4c,EAAcmR,EAAWpvB,GACvD,IAAIe,EAAU,IAAIigB,GAClB,OAGQ/C,EAAa/e,MAAMvC,MACvB,IAAK,OACD,IAAI0yB,EAAc,IAAIlgB,GACtBkgB,EAAYn4B,KAAO+mB,EAAa/e,MAAMhI,KAEtC63B,GADAhuB,EAAUsuB,EACkBpR,EAAcje,GAC1C,MACJ,IAAK,QACD,IAAIsvB,EAAe,IAAIC,GACvBD,EAAajsB,OAAS4a,EAAa/e,MAAMmE,OACzCisB,EAAaE,WAAavR,EAAa/e,MAAMuwB,MAC7CH,EAAaI,WAAazR,EAAa/e,MAAMid,MAE7C4S,GADAhuB,EAAUuuB,EACkBrR,EAAcje,GAC1C,MACJ,IAAK,OAKD+uB,GADAhuB,EAFkB,IAAIytB,GAGMvQ,EAAcje,GAC1C,MACJ,IAAK,QACD,IAAIU,OAAU,EACdA,EAAuC,cAA7Bud,EAAa/e,MAAMA,MAAwB,IAAI8hB,GAAmB,IAAI7R,GAC/C,YAA7B8O,EAAa/e,MAAMA,MACnBwB,EAAQxJ,KAAO0C,EAAeqkB,EAAa/e,MAAMzF,QAGjDiH,EAAQxJ,KAAO+H,EAAcgf,EAAa/e,MAAMA,OAEpD6vB,GAAmBhuB,EAASkd,EAAcje,GACT,cAA7Bie,EAAa/e,MAAMA,QACnBwB,EAAQvH,aAAe8kB,EAAa/e,MAAM/F,cAE9C4H,EAAUL,EACV,MACJ,IAAK,OACD,IAAIivB,EAAmB,IAAIxgB,GAC3BwgB,EAAiBz4B,KAAO2I,EAAaoe,EAAa/e,MAAMA,OAExD6vB,GADAhuB,EAAU4uB,EACkB1R,EAAcje,GAC1C,MACJ,IAAK,SACD,IAAI4vB,EAAgB,IAAIC,GAAqBxuB,EAAKV,GAAIX,EAAQU,QAAQC,IACtEivB,EAAc7uB,QAAUkd,EAAa/e,MAAM6B,QAC3C6uB,EAAczT,MAAQ8B,EAAa/e,MAAMid,MAEzC4S,GADAhuB,EAAU6uB,EACkB3R,EAAcje,GAC1C,MACJ,IAAK,OACD,IAAI8vB,EAAc,IAAIC,GAAmB1uB,EAAKV,GAAIX,EAAQU,QAAQC,IAClEmvB,EAAY/uB,QAAUkd,EAAa/e,MAAM6B,QAEzCguB,GADAhuB,EAAU+uB,EACkB7R,EAAcje,QAE1BjF,IAApBsG,EAAKnC,MAAMvC,MAAsB0E,EAAKnC,MAAMvC,OAASyyB,EAAUlwB,MAAMvC,KACrEqzB,GAAc3uB,EAAM4c,EAAcje,IAGlCe,EAAQ1H,MAAQ4kB,EAAarP,QAAQ8D,SAAS,GAAGrZ,MACjD0H,EAAQ3H,OAAS6kB,EAAarP,QAAQ8D,SAAS,GAAGtZ,OAC9C6kB,EAAa/e,iBAAiB+vB,OAC9BluB,EAAQ0C,OAASwa,EAAa/e,MAAMuE,QAExC1C,EAAQC,MAAQid,EAAajd,MAC7Bid,EAAarP,QAAQ8D,SAAS,GAAK3R,GAI3C,SAAgBivB,GAAcC,EAAWhS,EAAcje,GACnD,GAAIyd,OAAOC,KAAKuS,EAAU/wB,OAAO3H,OAAS,EACtC,GAAgC,SAA5B0mB,EAAa/e,MAAMvC,WAA4C5B,IAAzBk1B,EAAU/wB,MAAMhI,KACtD+mB,EAAarP,QAAQ8D,SAAS,GAAGxb,KAAO+4B,EAAU/wB,MAAMhI,UAEvD,GAAgC,SAA5B+mB,EAAa/e,MAAMvC,WAA+C5B,IAA5Bk1B,EAAU/wB,MAAM6B,QAC3Dkd,EAAarP,QAAQ8D,SAAS,GAAG3R,QAAUkvB,EAAU/wB,MAAM6B,aAE1D,GAAgC,UAA5Bkd,EAAa/e,MAAMvC,WAA+C5B,IAA3Bk1B,EAAU/wB,MAAMmE,OAC5D4a,EAAarP,QAAQ8D,SAAS,GAAGrP,OAAS4sB,EAAU/wB,MAAMmE,YAEzD,GAAgC,WAA5B4a,EAAa/e,MAAMvC,KAAmB,CAE3C,IAAK,IADDuzB,OAAgB,EACX14B,EAAI,EAAGA,EAAIwI,EAAQ8sB,MAAMv1B,OAAQC,IACtC04B,EAAgBC,GAAkBlS,EAAarP,QAAQ8D,SAAS,GAAG/R,GAAK,gBAAiBX,EAAQ8sB,MAAMt1B,SACvEuD,IAA5Bk1B,EAAU/wB,MAAM6B,SAAyBmvB,IACzCA,EAAcE,YAAYF,EAAcxd,SAAS,IACjDuL,EAAarP,QAAQ8D,SAAS,GAAG3R,QAAUkvB,EAAU/wB,MAAM6B,QAC3DmvB,EAAcG,YAAYC,GAAWrS,EAAarP,QAAQ8D,SAAS,IAAI,KAG/EuL,EAAarP,QAAQ8D,SAAS,GAAGyJ,MAAQ8T,EAAU/wB,MAAMid,MACrD8T,EAAU/wB,MAAMid,MAAQ8B,EAAarP,QAAQ8D,SAAS,GAAGyJ,WAE5D,GAAgC,SAA5B8B,EAAa/e,MAAMvC,KAEnB,CAAA,IADD4zB,OAAc,EAClB,IAAS/4B,EAAI,EAAGA,EAAIwI,EAAQ8sB,MAAMv1B,OAAQC,KACtC+4B,EAAcJ,GAAkBlS,EAAarP,QAAQ8D,SAAS,GAAG/R,GAAK,gBAAiBX,EAAQ8sB,MAAMt1B,OAEjG+4B,EAAYH,YAAYG,EAAY7d,SAAS,IAC7CuL,EAAarP,QAAQ8D,SAAS,GAAG3R,QAAUkvB,EAAU/wB,MAAM6B,QAC3DwvB,EAAYF,YAAYC,GAAWrS,EAAarP,QAAQ8D,SAAS,IAAI,UAI5E,GAAgC,SAA5BuL,EAAa/e,MAAMvC,WAA6C5B,IAA1Bk1B,EAAU/wB,MAAMA,MAAqB,CAChF+e,EAAa/e,MAAMA,MAAQ+wB,EAAU/wB,MAAMA,MAC3C,IACIsxB,EAAgB3wB,EADPoe,EAAa/e,MAAMA,MACQE,YACxC6e,EAAarP,QAAQ8D,SAAS,GAAGxb,KAAOs5B,OAEvC,GAAgC,gBAA5BvS,EAAa/e,MAAMvC,WAAoD5B,IAA1Bk1B,EAAU/wB,MAAMA,MAClEuxB,GAAsBxS,EAAcgS,QAEnC,QAAqCl1B,IAAjCk1B,EAAU/wB,MAAM/F,aACrB8kB,EAAarP,QAAQ8D,SAAS,GAAGvZ,aAAe82B,EAAU/wB,MAAM/F,kBAE/D,QAA8B4B,IAA1Bk1B,EAAU/wB,MAAMA,MAAqB,CAC1C+e,EAAa/e,MAAMA,MAAQ+wB,EAAU/wB,MAAMA,MAC3C,IACIwxB,EAAiBzxB,EADRgf,EAAa/e,MAAMA,MACUE,YAC1C6e,EAAarP,QAAQ8D,SAAS,GAAGxb,KAAOw5B,GAKpD,SAAgBD,GAAsBxS,EAAcgS,GAChDhS,EAAa/e,MAAMA,MAAQ+wB,EAAU/wB,MAAMA,MAC3C,IACIyxB,EAAuB3L,GADd/G,EAAa/e,MAAMA,MACsBE,YACrB,gBAA7B6e,EAAa/e,MAAMA,MACnB+e,EAAarP,QAAQ8D,SAAS,GAAG1R,MAAM+X,KAAO,QAEZ,aAA7BkF,EAAa/e,MAAMA,OACK,aAA7B+e,EAAa/e,MAAMA,MACnB+e,EAAarP,QAAQ8D,SAAS,GAAG1R,MAAM+X,KAAO,QAEZ,cAA7BkF,EAAa/e,MAAMA,QACpB+e,aAAwB5I,KACxB4I,EAAarP,QAAUgiB,GAAgB3S,IAE3CA,EAAarP,QAAQ8D,SAAS,GAAGxb,KAAOy5B,GAIhD,SAAgBC,GAAgBvvB,GAC5B,IAAIwvB,EAAiB,IAAIC,GACzBD,EAAe7vB,MAAM+X,KAAO,cAE5B,IAAItZ,EAAW,4GAEXsxB,EAAiB,IAAI5hB,GACzB4hB,EAAe75B,KAAOuI,EACtBsxB,EAAepwB,GAAKU,EAAKV,GAAK,eAC9BowB,EAAenX,oBAAsB,SACrCmX,EAAepX,kBAAoB,SACnCoX,EAAejI,aAAe,SAC9BiI,EAAe/vB,MAAMgY,YAAc3X,EAAKL,MAAMgY,YAC9C+X,EAAe/vB,MAAMiY,YAAc5X,EAAKL,MAAMiY,YAE9C,IAAI+X,EAAiB,IAAI7hB,GAiBzB,OAhBA6hB,EAAe95B,KAAOuI,EACtBuxB,EAAerwB,GAAKU,EAAKV,GAAK,eAC9BqwB,EAAepX,oBAAsB,SACrCoX,EAAerX,kBAAoB,SACnCqX,EAAelI,aAAe,SAC9BkI,EAAehwB,MAAM+X,KAAO1X,EAAKL,MAAM+X,KACvCiY,EAAehwB,MAAMgY,YAAc3X,EAAKL,MAAMgY,YAC9CgY,EAAehwB,MAAMiY,YAAc5X,EAAKL,MAAMiY,YAE9C4X,EAAene,UAAYqe,EAAgBC,GAC3CH,EAAene,SAAS,GAAGrZ,MAAQgI,EAAKhI,MACxCw3B,EAAene,SAAS,GAAGtZ,OAASiI,EAAKjI,OACzCy3B,EAAene,SAAS,GAAGtZ,OAASiI,EAAKjI,OAAS,IAClDy3B,EAAene,SAAS,GAAGrZ,MAAQgI,EAAKhI,MAAQ,IAChDw3B,EAAe7vB,MAAMiY,YAAc,EACnC4X,EAAe7vB,MAAMgY,YAAc,cAC5B6X,EAGX,SAAgBI,GAAqBC,EAAkBnwB,EAASM,GAC5D,IAAIsvB,EAAuB3L,GAAoB3jB,EAAKnC,MAAMA,OAG1D,OAFAgyB,EAAiBh6B,KAAOy5B,EACxB5vB,EAAUmwB,EACF7vB,EAAKnC,MAAMA,OACf,IAAK,iBACD,GAAImC,EAAK+X,YACL,IAAK,IAAI5hB,EAAI,EAAGA,EAAI6J,EAAK+X,YAAY7hB,OAAQC,IACzC6J,EAAK+X,YAAY5hB,GAAGuJ,QAAU,KAAOM,EAAK+X,YAAY5hB,GAAGuJ,QAAU,KAG3EA,EAAUmwB,EACV,MACJ,IAAK,YACDnwB,EAAU6vB,GAAgBvvB,GAGlC,OAAON,EAGX,SAAgBowB,GAAeC,GAC3BpN,GAAcoN,EAAQ,WACtBpN,GAAcoN,EAAQ,WAG1B,SAAgBC,GAAWC,EAAOC,GAC9B,IAAI/Q,EAAQ8Q,EAAMtS,QAAQuS,GACtB/Q,GAAS,GACT8Q,EAAMrqB,OAAOuZ,EAAO,GAI5B,SAAgBgR,GAAgB9kB,EAAWjT,GACvC,IACIg4B,EACAC,EACAC,EAMJ,GAJAjlB,EAAU+Z,mBAAqBhtB,EAC/BiT,EAAUklB,qBAAqBllB,EAAWjT,EAAQiT,EAAUkC,QAAQ8D,SAAS,IAClEhG,EAAU7K,YACrB6vB,EAAehlB,EAAUiG,gBACF,WAAnBjG,EAAU/P,KAAmB,CAC7B,IAAIk1B,EAAenlB,EAAUzS,SAAS,GAClCqR,EAAcoB,EAAUzS,SAASyS,EAAUzS,SAAS1C,OAAS,GACjEk6B,GAAexrB,GAAMC,aAAaoF,EAAYhS,QAA+BgS,EAAYqb,aAAjCrb,EAAYhS,OAC/D2M,GAAMC,aAAa2rB,EAAa7gB,QAAgC6gB,EAAanL,aAAnCmL,EAAa7gB,aAG5DygB,EAAa/kB,EAAU+Z,mBAE3BhtB,EAASiT,EAAUolB,eAAeplB,EAAWjT,GAC7C,IAAIiH,EAAUgM,EAAUkC,QAAQ8D,SAAS,GACzChS,EAAQqxB,gBAAiB,EACzBrxB,EAAUgM,EAAUkC,QAAQ8D,SAAS,GACrChG,EAAUslB,uBAAuBtxB,EAASjH,EAAO,GAAIg4B,EAAW,GAAIC,GACtDhlB,EAAUf,YACxBgmB,EAAejlB,EAAUmG,gBACzBnS,EAAUgM,EAAUkC,QAAQ8D,SAAS,GACrChG,EAAUslB,uBAAuBtxB,EAASjH,EAAOA,EAAOlC,OAAS,GAAIk6B,EAAWA,EAAWl6B,OAAS,GAAIo6B,GACxGjlB,EAAUulB,mBAAmBvlB,GAGjC,SAAgBwlB,GAAsBC,EAAcC,EAAQ7rB,GACxD,IAMI9J,EANAmS,EAAUujB,EAAavjB,QAEvBtM,EAASsM,EAAQtM,OACjBkO,EAAS4hB,EAAO5hB,OAChB6hB,EAAOD,EAAOC,KAAO9rB,EAAU4V,MAC/B1Y,EAAS2uB,EAAO3uB,OAEhBC,EAAOkL,EAAQ/R,QAAU+R,EAAQC,WAAWxV,MAAQuV,EAAQ0jB,MAAMx6B,EAClE+L,EAAM+K,EAAQ9R,QAAU8R,EAAQC,WAAWzV,OAASwV,EAAQ0jB,MAAMv6B,EAEtE,GADA0E,GAAU3E,EAAG,EAAGC,EAAG,GACfo6B,EAAarY,MAAMviB,OAAS,EAAG,CAC/B,OAAQ66B,EAAOG,MACX,IAAK,MACD91B,EAAM3E,GAAK4L,EAAOpB,EAAOjJ,MAAQmX,EACjC/T,EAAM1E,GAAK8L,EAAMwuB,EACjB,MACJ,IAAK,SACD51B,EAAM3E,GAAK4L,EAAO8M,EAASlO,EAAOjJ,MAClCoD,EAAM1E,GAAK8L,EAAM+K,EAAQC,WAAWzV,OAASi5B,EAC7C,MACJ,IAAK,OACD51B,EAAM3E,GAAK4L,EAAO2uB,EAClB51B,EAAM1E,GAAK8L,EAAM2M,EAASlO,EAAOlJ,OACjC,MACJ,IAAK,QACDqD,EAAM3E,GAAK4L,EAAOkL,EAAQC,WAAWxV,MAAQg5B,EAC7C51B,EAAM1E,GAAK8L,EAAM2M,EAASlO,EAAOlJ,OAGzCqD,EAAM3E,GAAM2L,EAAOC,KAAOD,EAAOE,MAC5B0uB,EAAO,GAAqC,WAA/BD,EAAOxY,oBAAmC,EAAoC,UAA/BwY,EAAOxY,qBAAmC,EAAI,GAC/Gnd,EAAM1E,GAAM0L,EAAOI,IAAMJ,EAAOG,OAC3ByuB,EAAO,GAAmC,WAA7BD,EAAOzY,kBAAiC,EAAkC,QAA7ByY,EAAOzY,mBAA+B,EAAI,QAExG,GAAIwY,EAAanU,WAAWzmB,OAAS,EAAG,CACzC,IAAImV,EAAYylB,EAAanU,WAAW,GACpCoL,GAAe5Y,OAAQA,GACvBgiB,EAAkBlJ,GAAqB5c,EAAU+Z,mBAAoB2C,GACrE5I,EAAQgS,EAAgBhS,MAC5B/jB,EAAQ+1B,EAAgB/1B,MACxB,IAAIg2B,EAAetJ,GAAsBzc,EAAU+Z,mBAAoB2C,EAAY9mB,GAG/EhK,GAFSoU,EAAU+Z,mBAEXgM,EAAan6B,OAEzBuF,EADIrB,EAASL,KACS7D,EAAOoU,EAAU+Z,mBAAmBjG,GAAO1oB,EAAG4U,EAAU+Z,mBAAmBjG,GAAOzoB,IACxG0E,EAAQF,EAAuBC,EAAQC,IACjC3E,GAAM2L,EAAOC,KAAOD,EAAOE,MAC5B0uB,EAAO,GAAqC,WAA/BD,EAAOxY,oBAAmC,EAAoC,UAA/BwY,EAAOxY,qBAAmC,EAAI,GAC/Gnd,EAAM1E,GAAM0L,EAAOI,IAAMJ,EAAOG,OAC3ByuB,EAAO,GAAmC,WAA7BD,EAAOzY,kBAAiC,EAAkC,QAA7ByY,EAAOzY,mBAA+B,EAAI,GAEzG9b,EADArB,EAASL,IACY7D,EAAOoU,EAAU+Z,mBAAmBjG,GAAO1oB,EAAG4U,EAAU+Z,mBAAmBjG,GAAOzoB,GACvG0E,EAAQF,EAAuBC,EAAQC,GAE3C,GAA4B,IAAxBmS,EAAQzB,aAAiD,IAA5ByB,EAAQxB,gBAAuB,CAC5D,IAAI5Q,EACJqB,EADIrB,EAASL,IACQyS,EAAQzB,YAAcyB,EAAQxB,gBAAiBwB,EAAQ/R,QAAS+R,EAAQ9R,SAC7FL,EAAQF,EAAuBC,EAAQC,GAE3C,OAAOA,EAGX,SAAgBi2B,GAAgBC,EAAqBjT,EAAQkT,EAAmB1U,GAC5E,GAAIA,EAAckL,YACd,GAAIxT,GAAUsI,EAAckL,YACxB,OAAO,OAGV,GAAKyJ,sBAAoBnT,GAAUiT,GAAyBG,oBAAkBpT,GAAUkT,EACzF,OAAO,EAEX,OAAO,EAGX,SAAgBG,GAAcJ,EAAqBjT,GAC/C,SAAImT,sBAAoBnT,GAAUiT,GAMtC,SAAgBK,GAAqB/uB,EAAMgvB,GACvC,OAAOhvB,EAAKivB,WAAaD,EAG7B,SAAgBE,GAAe9xB,EAAMV,GACjC,IAAIyoB,EACJ,GAAwB,SAApB/nB,EAAKnC,MAAMvC,KACXysB,EAAc/nB,EAAU,UAEvB,CACD,IAAI+xB,EAAezyB,EAAGyO,MAAM,KAC5BzO,EAAKyyB,EAAaA,EAAa77B,OAAS,GACxC,IAAK,IAAIC,EAAI,EAAGA,EAAI6J,EAAK+X,YAAY7hB,OAAQC,IACrCmJ,IAAOU,EAAK+X,YAAY5hB,GAAGmJ,KAC3ByoB,EAAa/nB,EAAK+X,YAAY5hB,IAI1C,OAAO4xB,EAGX,SAAgBiK,GAAShyB,EAAMV,GAC3B,IACI2yB,EAAS3yB,EAAGyO,MAAM,KACtBzO,EAAK2yB,EAAOA,EAAO/7B,OAAS,GAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAI6J,EAAKkyB,MAAMh8B,OAAQC,IACnC,GAAImJ,IAAOU,EAAKkyB,MAAM/7B,GAAGmJ,GACrB,OAAOU,EAAKkyB,MAAM/7B,GAM9B,SAAgBg8B,GAAqBnyB,EAAMoyB,GACvC,IAAIxvB,KACAzM,EAAI,EACR,GAAI6J,EAAKkyB,MAAO,CACZ,IAAIA,EAAQlyB,EAAKkyB,MACjB,IAAK/7B,EAAI,EAAGA,EAAI+7B,EAAMh8B,OAAQC,IACtBi8B,EACKF,EAAM/7B,GAAGuc,YAAcyB,kBAAgBF,YACxCrR,EAAOsvB,EAAM/7B,IAIZ+7B,EAAM/7B,GAAGuc,YAAcyB,kBAAgBE,aACxCzR,EAAOsvB,EAAM/7B,IAK7B,OAAOyM,EAGX,SAAgByvB,GAAgBryB,EAAMV,EAAIyoB,GAGtC,IAAK,IADDhyB,EAAa,EAAeiK,EAAK+X,YAAc/X,EAAKkyB,MAC/C/7B,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IACnC,GAAIJ,EAAWI,GAAGmJ,KAAOA,EACrB,OAAO,EAAIvB,WAGnB,OAAO,KAGX,SAAgBu0B,GAAwBt4B,EAAKsF,GACzC,IAAInJ,EACJ,IAAKA,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IACxB,GAAImJ,IAAOtF,EAAI7D,GAAGmJ,GACd,OAAO,EAGf,OAAO,EAGX,SAAgBizB,GAAalzB,EAASmzB,EAAIC,EAAIC,GAK1C,QAJsBh5B,IAAlB2F,EAAQrH,YAA0C0B,IAAnB2F,EAAQtH,SACvCsH,EAAQrH,OAASw6B,EACjBnzB,EAAQtH,QAAU06B,GAElBpzB,aAAmBszB,GAAW,CAC9B,IAAIx3B,EAASL,IACT9C,EAAQ06B,EAAU16B,OAAS06B,EAAUllB,WAAWxV,MAChDD,EAAS26B,EAAU36B,QAAU26B,EAAUllB,WAAWzV,OACtD,QAAc2B,IAAV1B,QAAkC0B,IAAX3B,EAAsB,CAC7C,IAAItB,EAAIi8B,EAAUl3B,QAAUxD,EAAQ06B,EAAUzB,MAAMx6B,EAChDC,EAAIg8B,EAAUj3B,QAAU1D,EAAS26B,EAAUzB,MAAMv6B,EACjD4M,GACA7M,EAAGA,EAAIuB,EAAQ06B,EAAUzB,MAAMx6B,EAC/BC,EAAGA,EAAIqB,EAAS26B,EAAUzB,MAAMv6B,GAEpC4M,EAAWoK,GAAYglB,EAAU5mB,YAAa4mB,EAAUl3B,QAASk3B,EAAUj3B,QAAS6H,GACpF9G,EAAarB,GAASu3B,EAAU5mB,YAAaxI,EAAS7M,EAAG6M,EAAS5M,GAClEwG,EAAY/B,EAAQq3B,EAAIC,EAAInvB,EAAS7M,EAAG6M,EAAS5M,GACjD8F,EAAarB,EAAQu3B,EAAU5mB,YAAaxI,EAAS7M,EAAG6M,EAAS5M,GACjE,IAAK,IAAI4F,EAAK,EAAG6f,EAAK9c,EAAQgS,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC1D,IAAI+Q,EAAQ8O,EAAG7f,GACf,QAAoB5C,IAAhB2T,EAAMrV,YAAwC0B,IAAjB2T,EAAMtV,OAAsB,CACzD,IAAI66B,EAAc13B,EAAuBC,GAAU1E,EAAG4W,EAAM7R,QAAS9E,EAAG2W,EAAM5R,UAC9E4R,EAAM7R,QAAUo3B,EAAYn8B,EAC5B4W,EAAM5R,QAAUm3B,EAAYl8B,EAC5B67B,GAAallB,EAAOmlB,EAAIC,EAAIC,OAOhD,SAAgBG,GAAa74B,EAAKvD,EAAGC,EAAG2jB,EAAWyY,EAAMn0B,GAGrD,IAAK,IADDqB,EADAqN,EAAQrT,EAAIqX,SAEPlb,EAAI,EAAGA,EAAIkX,EAAMnX,OAAQC,IAE9B,GADA6J,EAAOqa,EAAUhN,EAAMlX,IAEnB,GAAI6J,EAAKqR,SACL5R,KAAKozB,aAAa7yB,EAAMvJ,EAAGC,EAAG2jB,EAAWyY,EAAMn0B,QAK/C,GAFAqB,EAAKxE,SAAW/E,EAChBuJ,EAAKvE,SAAW/E,GACXo8B,EAAM,CACP,IAAIpzB,OAAU,EACV6X,OAAY,EAChB8C,EAAUra,EAAKV,IAAMU,GACrBuX,EAAYvX,EAAK+yB,iBACF1hB,WACXkG,EAAUlG,aAEd3R,EAAUM,EAAKgzB,KAAKr0B,GACpB4Y,EAAUlG,SAAS9a,KAAKmJ,GACxB6X,EAAU6F,QAAQ,IAAIC,GAAKrd,EAAKhI,MAAOgI,EAAKjI,SAC5Cwf,EAAU+F,QAAQ/F,EAAUgG,cAOhD,SAAgB0V,GAAaj5B,EAAK2yB,EAAK52B,GACnC,GAA0B,IAAtBA,EAAWG,OACXH,EAAWQ,KAAKyD,QAEf,GAA0B,IAAtBjE,EAAWG,OACZH,EAAW,GAAG42B,GAAO3yB,EAAI2yB,GACzB52B,EAAW6P,OAAO,EAAG,EAAG5L,GAGxBjE,EAAWQ,KAAKyD,QAGnB,GAAIjE,EAAWG,OAAS,EAAG,CAI5B,IAHA,IAAIg9B,EAAM,EACNC,EAAOp9B,EAAWG,OAAS,EAC3Bk9B,EAAMl3B,KAAKm3B,OAAOH,EAAMC,GAAQ,GAC7BC,IAAQF,GACPn9B,EAAWq9B,GAAKzG,GAAO3yB,EAAI2yB,IAC3BuG,EAAME,EACNA,EAAMl3B,KAAKm3B,OAAOH,EAAMC,GAAQ,IAE3Bp9B,EAAWq9B,GAAKzG,GAAO3yB,EAAI2yB,KAChCwG,EAAOC,EACPA,EAAMl3B,KAAKm3B,OAAOH,EAAMC,GAAQ,IAGpCp9B,EAAWo9B,GAAMxG,GAAO3yB,EAAI2yB,GAC5B52B,EAAWQ,KAAKyD,GAEXjE,EAAWm9B,GAAKvG,GAAO3yB,EAAI2yB,GAChC52B,EAAW6P,OAAOstB,EAAK,EAAGl5B,GAEpBjE,EAAWm9B,GAAKvG,GAAO3yB,EAAI2yB,IAAS52B,EAAWo9B,GAAMxG,GAAO3yB,EAAI2yB,IACtE52B,EAAW6P,OAAOutB,EAAM,EAAGn5B,IAKvC,SAAgBs5B,GAAWj0B,GACvB,IAAIk0B,EAAiBvS,SAASC,eAAe5hB,EAAQm0B,WACjDC,EAAW,gBAEXhb,EAAQ8a,EAAeE,GAAU,GAAGhb,WAC1B/e,IAAV+e,IACAA,EAqCR,SAA2Bib,GAEvB,IAAK,IADDjb,KACKtiB,EAAI,EAAGA,EAAIu9B,EAAcC,SAASz9B,OAAQC,IAE/C,IAAK,IADDy9B,EAAUF,EAAcC,SAASx9B,GAAGy9B,QAC/B99B,EAAI,EAAGA,EAAI89B,EAAQ19B,OAAQJ,IAC5B89B,EAAQ99B,aAAcke,IACtByE,EAAMliB,KAAKq9B,EAAQ99B,IAI/B,OAAO2iB,EA/CKob,CAAkBN,EAAeE,GAAU,KAGvD,IAAK,IAAIt9B,EAAI,EAAGsiB,GAAStiB,EAAIsiB,EAAY,OAAGtiB,IACxC,GAAIsiB,EAAMtiB,GAAGmJ,KAAOD,EAAQy0B,OACxB,OAAOC,GAActb,EAAMtiB,GAAIkJ,GAIlC,IADDsd,EAAa4W,EAAeE,GAAU,GAAG9W,WAC7C,IAASxmB,EAAI,EAAGwmB,GAAcxmB,EAAIwmB,EAAiB,OAAGxmB,IAClD,GAAIwmB,EAAWxmB,GAAGmJ,KAAOD,EAAQy0B,OAC7B,OAAOC,GAAcpX,EAAWxmB,GAAIkJ,GAG5C,IAAI20B,EAAcT,EAAeE,GAAU,GAAGO,YAC9C,OAAIA,IAAgBA,EAAgB,KAAM30B,EAAQy0B,QAAUE,EAAsB,UAC1EA,EAAsB,UAAK9O,GAAa8O,EAAa,OAAQT,EAAeE,GAAU,GAAGQ,YAClFV,EAAeE,GAAU,GAAGQ,WAAW50B,EAAQy0B,QAG/CE,EAGR,KAEX,SAASD,GAAc/5B,EAAKqF,GACxB,IAEIvJ,EAFAiiB,EAAc/d,EAAI+d,YAGtB,IAAKjiB,EAAI,EAAGiiB,GAAejiB,EAAIiiB,EAAkB,OAAGjiB,IAChD,GAAIuJ,EAAQ0yB,cAAgBha,EAAYjiB,GAAGwJ,KAAOD,EAAQ0yB,aACtD,OAAOha,EAAYjiB,GAG3B,OAAOkE,EAgBX,SAAgBk6B,GAASz9B,EAAGC,EAAGy9B,EAAGC,EAAGn9B,EAAOuE,EAASC,EAAS44B,GAC1D,IAAIpD,GAAUx6B,EAAG,EAAGC,EAAG,GACnB49B,EAAQx5B,IAEZ,OADA0B,EAAa83B,EAAOr9B,EAAOuE,EAASC,GAC5B44B,EAAY59B,GAChB,KAAK,EACD,OAAQ49B,EAAY39B,GAChB,KAAK,EACDu6B,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAGC,EAAGA,IAClD,MACJ,IAAK,GACDu6B,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAGC,EAAGA,EAAI09B,EAAI,IAC1D,MACJ,KAAK,EACDnD,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAGC,EAAGA,EAAI09B,IAG9D,MACJ,IAAK,GACD,OAAQC,EAAY39B,GAChB,KAAK,EACDu6B,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAI09B,EAAI,EAAGz9B,EAAGA,IAC1D,MACJ,IAAK,GACDu6B,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAI09B,EAAI,EAAGz9B,EAAGA,EAAI09B,EAAI,IAClE,MACJ,KAAK,EACDnD,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAI09B,EAAI,EAAGz9B,EAAGA,EAAI09B,IAGtE,MACJ,KAAK,EACD,OAAQC,EAAY39B,GAChB,KAAK,EACDu6B,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAI09B,EAAGz9B,EAAGA,IACtD,MACJ,IAAK,GACDu6B,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAI09B,EAAGz9B,EAAGA,EAAI09B,EAAI,IAC9D,MACJ,KAAK,EACDnD,EAAQ/1B,EAAuBo5B,GAAU79B,EAAGA,EAAI09B,EAAGz9B,EAAGA,EAAI09B,KAK1E,OAAS39B,EAAGw6B,EAAMx6B,EAAGC,EAAGu6B,EAAMv6B,GCv0ClC,SAAgB69B,GAAkBl1B,GAC9B,IACIm1B,EACAC,EAFApuB,KAGAquB,EAAiB,iBACrBC,OAAOD,GAAgB/0B,MAAMkyB,WAAa,UAC1C,IACI+C,EAAWC,GADLF,OAAOD,GAAgBrjB,SAAS,IACT,GACjCujB,EAASE,eAAe,KAAM,IAAKz1B,EAAQxJ,MAC3C,IACIuI,EA+SR,SAA2BiB,EAAS4B,EAAQoM,GACxC,IAKI0nB,EAHA53B,EAAS,EACTC,EAAS,EACTnD,GAAU,EAIV+6B,EAAgB,GAChBh/B,KATQ,KAUZ++B,EAAO9zB,GACYxK,GAVP,IAUsBs+B,EAAKr+B,IACnCyG,EAZQ,EAYSvF,OAAOm9B,EAAKt+B,GAC7B2G,EAZQ,EAYSxF,OAAOm9B,EAAKr+B,IAE7B2I,EAAQmO,WAAWxV,QAAU+8B,EAAK/8B,OAASqH,EAAQmO,WAAWzV,SAAWg9B,EAAKh9B,SAC9EoF,EAASkC,EAAQmO,WAAWxV,MAAQJ,OAAOm9B,EAAK/8B,MAAQ+8B,EAAK/8B,MAAQ,GACrEoF,EAASiC,EAAQmO,WAAWzV,OAASH,OAAOm9B,EAAKh9B,OAASg9B,EAAKh9B,OAAS,GACxEkC,GAAU,GAMd,OAJAjE,EAAkBJ,EAAgByJ,EAAQxJ,MAC1CG,EAAkBsE,EAAqBtE,GACvCg/B,EAAgB/7B,EAAcjD,EAAiBmH,EAAQC,EAAQnD,EAAS86B,EAAKt+B,EAAGs+B,EAAKr+B,EAtBzE,EACA,GAsBZuD,GAAU,EACH+6B,EAxUQC,CAAW51B,EADTA,EAAQ61B,gBAEzBN,EAASE,eAAe,KAAM,IAAK12B,GACnC,IAAI+2B,EAAaP,EAASQ,iBAC1B,IAAKX,EAAe,EAAGA,GAAgBU,EAAYV,GAAgB,GAC/DD,EAASI,EAASS,iBAAiBZ,GACnCpuB,EAAI9P,MAAOE,EAAG+9B,EAAO/9B,EAAGC,EAAG89B,EAAO99B,IAGtC,OADAi+B,OAAOD,GAAgB/0B,MAAMkyB,WAAa,SACnCxrB,EAEX,SAAgBwuB,GAAa70B,GACzB,IAAIqN,EACAtX,KACJ,GAA0B,SAAtBu/B,UAAQC,KAAKvd,MAAyC,SAAtBsd,UAAQC,KAAKvd,KAC7C,IAAK,IAAI7hB,EAAI,EAAGA,EAAI6J,EAAKw1B,WAAWt/B,OAAQC,IAEjB,KADvBkX,EAAQrN,EAAKw1B,WAAWr/B,IACds/B,UACN1/B,EAAWQ,KAAK8W,QAKxBtX,EAAaiK,EAAKqR,SAEtB,OAAOtb,EAwBX,SAAgB2/B,GAAY7/B,GACxB,GAAIA,EAAM,CACN,IAAI6+B,EAAiB,iBACrBC,OAAOD,GAAgB/0B,MAAMkyB,WAAa,UAC1C,IACIxyB,EAAUw1B,GADJF,OAAOD,GAAgBrjB,SAAS,IACV,GAChChS,EAAQs2B,aAAa,IAAK9/B,GAC1B,IAAIoL,EAAS5B,EAAQu2B,UACjBC,EAAY,IAAI9Z,GAAK9a,EAAOxK,EAAGwK,EAAOvK,EAAGuK,EAAOjJ,MAAOiJ,EAAOlJ,QAElE,OADA48B,OAAOD,GAAgB/0B,MAAMkyB,WAAa,SACnCgE,EAEX,OAAO,IAAI9Z,GAAK,EAAG,EAAG,EAAG,GA8B7B,SAAS+Z,GAAY1c,EAAM2c,GACvB,IAEIC,EACAC,EAHAT,KACAhW,EAAI,EAGJ9f,EAAUq2B,GAAa3c,EAAK1Z,QAChC,GAAwB,WAApB0Z,EAAKmT,YAA+C,QAApBnT,EAAKmT,WACrC,GAAuB,aAAnBnT,EAAK8c,UAGL,IAFAF,EAAW,GACXA,GAAYt2B,EAAQ,GACf8f,EAAI,EAAGA,EAAI9f,EAAQxJ,OAAQspB,IAE5B,IADAyW,EAAUE,GAASH,EAAU5c,KACdA,EAAKphB,OAASg+B,EAAS9/B,OAAS,EAC3Cs/B,EAAWA,EAAWt/B,SAAYkjB,KAAM4c,EAAUv/B,EAAG,EAAG2/B,GAAI,EAAGp+B,MAAOi+B,GACtED,EAAW,OAEV,EACDA,GAAuBt2B,EAAQ8f,EAAI,IAAM,IAC5B7B,QAAQ,OAAS,IAC1BqY,EAAWA,EAASK,QAAQ,KAAM,KAEtC,IAAIr+B,EAAQm+B,GAASH,EAAU5c,GAC3Bld,KAAKo6B,KAAKt+B,GAAS,GAAKohB,EAAKphB,OAASg+B,EAAS9/B,OAAS,IACxDs/B,EAAWA,EAAWt/B,SAAYkjB,KAAM4c,EAAUv/B,EAAG,EAAG2/B,GAAI,EAAGp+B,MAAOA,GACtEg+B,EAAW,IAEXxW,IAAM9f,EAAQxJ,OAAS,GAAK8/B,EAAS9/B,OAAS,IAC9Cs/B,EAAWA,EAAWt/B,SAAYkjB,KAAM4c,EAAUv/B,EAAG,EAAG2/B,GAAI,EAAGp+B,MAAOA,GACtEg+B,EAAW,SAMvBR,EAQZ,SAAsBpc,EAAM2c,GACxB,IAQIQ,EACAC,EACAC,EACAC,EAXAlB,KACAQ,EAAW,GACXlgC,EAAI,EACJK,EAAI,EACJwgC,EAA2B,WAApBvd,EAAKmT,WAEZqK,GADUb,GAAa3c,EAAK1Z,SACTqO,MAAM,MAM7B,IAAKjY,EAAI,EAAGA,EAAI8gC,EAAS1gC,OAAQJ,IAG7B,IAFAygC,EAC8B,WAAtBnd,EAAKhB,aAA4Bwe,EAAS9gC,GAAGiY,MAAM,KAAO6oB,EAC7DzgC,EAAI,EAAGA,EAAIogC,EAAMrgC,OAAQC,IAAK,CAC/B6/B,KAAqB,IAAN7/B,GAA4B,IAAjBogC,EAAMrgC,SAAiBygC,GAAQX,EAAS9/B,OAAS,EAAK,IAAM,IAAMqgC,EAAMpgC,GAElG,IAAI6B,EAAQm+B,GADZK,EAAUR,GAAYO,EAAMpgC,EAAI,IAAM,IACRijB,GAC1Bld,KAAKm3B,MAAMr7B,GAASohB,EAAKphB,MAAQ,GAAKg+B,EAAS9/B,OAAS,GACxDs/B,EAAWA,EAAWt/B,SAClBkjB,KAAM4c,EAAUv/B,EAAG,EAAG2/B,GAAI,EAC1Bp+B,MAAOw+B,IAAYR,EAAWh+B,EAASg+B,IAAaU,EAAgBD,EAAgBN,GAASH,EAAU5c,IAE3G4c,EAAW,IAGP7/B,IAAMogC,EAAMrgC,OAAS,IACrBs/B,EAAWA,EAAWt/B,SAAYkjB,KAAM4c,EAAUv/B,EAAG,EAAG2/B,GAAI,EAAGp+B,MAAOA,GACtEg+B,EAAW,IAGnBU,EAAeF,EACfC,EAAgBz+B,EAGxB,OAAOw9B,EA7CcqB,CAAazd,EAAM2c,QAIpCP,EAAWA,EAAWt/B,SAAYkjB,KAAM1Z,EAASjJ,EAAG,EAAG2/B,GAAI,EAAGp+B,MAAOm+B,GAASz2B,EAAS0Z,IAE3F,OAAOoc,EAiFX,SAAgBsB,GAAgBn3B,EAAOD,EAAS1H,EAAOD,EAAQ8f,GAC3D,IAAI5W,EAAS,IAAIoc,GACbjE,EAAOkI,GAAkB,QAAU3hB,MAAS,8CA+BhD,OA9BIA,EAAMsY,OACNmB,EAAKzZ,MAAMo3B,WAAa,QAExBp3B,EAAM0sB,SACNjT,EAAKzZ,MAAMq3B,UAAY,eAEbt9B,IAAV1B,IACAohB,EAAKzZ,MAAM3H,MAAQA,EAAM+F,WAAa,WAE3BrE,IAAX3B,IACAqhB,EAAKzZ,MAAM5H,OAASA,EAAOgG,WAAa,WAE3BrE,IAAbme,IACAuB,EAAKzZ,MAAMkY,SAAWA,EAAS9Z,WAAa,MAEhDqb,EAAKzZ,MAAMysB,WAAazsB,EAAMysB,WAC9BhT,EAAKzZ,MAAMuY,SAAWvY,EAAMuY,SAAW,KACvCkB,EAAKzZ,MAAMwY,MAAQxY,EAAMwY,MACzBiB,EAAK6d,YAAcv3B,EACnB0Z,EAAKzZ,MAAM4sB,WAAa2K,GAAmBv3B,EAAM4sB,WAAY5sB,EAAMyY,cAE/DgB,EAAKzZ,MAAMw3B,eADEz9B,IAAbme,EACuB,aAGAuf,GAAkBz3B,EAAMyY,cAEnD4I,SAASqW,KAAKrI,YAAY5V,GAC1BnY,EAAOjJ,MAAQohB,EAAKke,YACpBr2B,EAAOlJ,OAASqhB,EAAKme,aACrBvW,SAASqW,KAAKtI,YAAY3V,GACnBnY,EAGX,SAAgBu2B,GAAYpe,EAAMzZ,EAAOD,EAASmY,EAAUke,GACxD,IACIP,EACAiC,EAFAx2B,EAAS,IAAIoc,GAAK,EAAG,GAGrBqa,EA7LR,SAAwBr4B,EAASwY,GAC7B,IAAI6f,GACAhgB,KAAMrY,EAAQM,MAAM+X,KAAMigB,OAAQt4B,EAAQM,MAAMgY,YAAa1gB,MAAOoI,EAAQyM,YAAczM,EAAQ0M,gBAClG6rB,OAAQv4B,EAAQ4xB,MAAMx6B,EAAGohC,OAAQx4B,EAAQ4xB,MAAMv6B,EAAGkhB,YAAavY,EAAQM,MAAMiY,YAC7EkgB,UAAWz4B,EAAQM,MAAMod,gBAAiBoP,QAAS9sB,EAAQM,MAAMwsB,QAAS4L,OAAQ14B,EAAQ04B,OAC1F7K,SAAU7tB,EAAQM,MAAMutB,SAAUS,QAAStuB,EAAQsuB,QAASruB,GAAID,EAAQC,GAAI04B,YAAa34B,EAAQ24B,YACjGhgC,MAAO6f,GAAYxY,EAAQmO,WAAWxV,MAAOD,OAAQsH,EAAQmO,WAAWzV,OACxEtB,EAAG4I,EAAQ7D,QAAU6D,EAAQmO,WAAWxV,MAAQqH,EAAQ4xB,MAAMx6B,EAAI,GAClEC,EAAG2I,EAAQ5D,QAAU4D,EAAQmO,WAAWzV,OAASsH,EAAQ4xB,MAAMv6B,EAAI,IAkBvE,OAhBAghC,EAAQxf,SAAW7Y,EAAQM,MAAMuY,SACjCwf,EAAQtL,WAAa/sB,EAAQM,MAAMysB,WACnCsL,EAAQxL,aAAe7sB,EAAQM,MAAMusB,aACrCwL,EAAQlL,eAAiBntB,EAAQM,MAAM6sB,eACvCkL,EAAQO,OAAS54B,EAAQ44B,OACzBP,EAAQnL,WAAa2K,GAAmB73B,EAAQM,MAAM4sB,WAAYltB,EAAQM,MAAMyY,cAChFsf,EAAQh4B,QAAUL,EAAQK,QAC1Bg4B,EAAQtf,aAAe/Y,EAAQM,MAAMyY,aACrCsf,EAAQxB,UAAYkB,GAAkB/3B,EAAQM,MAAMyY,cACpDsf,EAAQpL,UAAY4L,GAAkB74B,EAAQM,MAAM2sB,WACpDoL,EAAQvf,MAAQ9Y,EAAQM,MAAMwY,MAC9Buf,EAAQrL,OAAShtB,EAAQM,MAAM0sB,OAC/BqL,EAAQzf,KAAO5Y,EAAQM,MAAMsY,KAC7Byf,EAAQI,UAAY,GACpBJ,EAAQ9f,YAAc,EACtB8f,EAAQhgB,KAAO,GACRggB,EAmKOS,CAAe/e,EAAMvB,GAQnC,OAPAuB,EAAKoc,WAAaA,EAAaM,GAAY4B,EAAS3B,GACpD3c,EAAKqe,WAAaA,EAlFtB,SAA0Bre,EAAMoc,GAC5B,IAEI4C,EACApgC,EAHAy/B,GAAehhC,EAAG,EAAGuB,MAAO,GAC5BwnB,EAAI,EAGR,IAAKA,EAAI,EAAGA,EAAIgW,EAAWt/B,OAAQspB,IAE/BxnB,EADAogC,EAAW5C,EAAWhW,GAAGxnB,MAGrBogC,EADmB,SAAnBhf,EAAKkT,UACM,EAEa,WAAnBlT,EAAKkT,UACN8L,EAAWhf,EAAKphB,QAAgC,aAAtBohB,EAAK8S,cAAqD,SAAtB9S,EAAK8S,cACxD,GAGCkM,EAAW,EAGH,UAAnBhf,EAAKkT,WACE8L,EAGD5C,EAAWt/B,OAAS,EAAI,GAAKkiC,EAAW,EAEvD5C,EAAWhW,GAAG4W,GAAqB,IAAhBhd,EAAKlB,SACxBsd,EAAWhW,GAAG/oB,EAAI2hC,EACbX,GAODA,EAAWhhC,EAAIyF,KAAKqK,IAAIkxB,EAAWhhC,EAAG2hC,GACtCX,EAAWz/B,MAAQkE,KAAK+I,IAAIwyB,EAAWz/B,MAAOA,IAP9Cy/B,GACIhhC,EAAG2hC,EACHpgC,MAAOA,GAQnB,OAAOy/B,EA4CwBY,CAAiBX,EAASlC,GACzDv0B,EAAOjJ,MAAQy/B,EAAWz/B,MACtBohB,EAAKqe,WAAWz/B,OAAS6f,GAAqC,SAAzB6f,EAAQxL,eAC7CjrB,EAAOjJ,MAAQ6f,GAEnB5W,EAAOlJ,OAASy9B,EAAWt/B,OAASkjB,EAAKzZ,MAAMuY,SAAW,IACnDjX,EAwEX,SAAgBq3B,GAAmB9E,GAC/B,IAEI+E,EAGJ,OAFAA,EAFqBzJ,GAAkB0E,GAEVgF,uBAAuB,mBAClCD,EAAY,GAIlC,SAAgBzJ,GAAkBjB,EAAW4K,GACzC,IACIp5B,EAKJ,OAJIo5B,IACAp5B,EAAU2hB,SAASC,eAAewX,IAErB,EAAYp5B,EAAQq5B,cAAc,IAAM7K,GAAa7M,SAASC,eAAe4M,GAMlG,SAAgB5P,GAAmBuV,GAC/B,IAEI+E,EAGJ,OAFAA,EAFqBzJ,GAAkB0E,GAEVgF,uBAAuB,mBAClCD,EAAY,GAIlC,SAAgBI,GAAmBnF,GAI/B,OAFiBvV,GAAmBuV,GACVvS,eAAeuS,EAAY,oBAMzD,SAAgBoF,GAAgBpF,GAI5B,OAFwBvV,GAAmBuV,GACVvS,eAAeuS,EAAY,mBAoBhE,SAAgBqF,GAAkBrF,GAC9B,IAEI+E,EAGJ,OAFAA,EAFqBzJ,GAAkB0E,GAEVgF,uBAAuB,kBACnCD,EAAY,GAIjC,SAAgBO,GAAgBtF,GAC5B,IAEI+E,EAGJ,OAFAA,EAFqBzJ,GAAkB0E,GAEVgF,uBAAuB,gBACrCD,EAAY,GAI/B,SAAgBQ,GAAsBvF,GAIlC,OAFqB1E,GAAkB0E,GACNgF,uBAAuB,sBACrC,GAAGvb,WAY1B,SAAgB+b,GAAmBxF,GAC/B,IAEI+E,EAGJ,OAFAA,EAFqBzJ,GAAkB0E,GAEVgF,uBAAuB,sBACvCD,EAAY,GAgC7B,SAAgBU,GAAazF,GACzB,IAEI+E,EAGJ,OAFAA,EAFczJ,GAAkB0E,GAEVgF,uBAAuB,gBACjCD,EAAY,GAI5B,SAAgBjX,GAAkB4X,EAAa7f,GAC3C,IAAIha,EAAU85B,gBAAcD,GAE5B,OADAE,GAAiB/5B,EAASga,GACnBha,EAGX,SAAgBg6B,GAAiBH,EAAa7f,GAC1C,IAAIha,EAAU2hB,SAASsY,gBAAgB,6BAA8BJ,GAErE,OADAK,GAAgBl6B,EAASga,GAClBha,EAGX,SAAgBm6B,GAAaC,EAAMC,EAAUC,GAEzC,IADA,IAAIlc,EAASgc,EACNhc,IACCkc,EAAOlc,EAAOne,KAAOo6B,GAAWzU,GAASxH,EAAQic,KAGrDjc,EAASA,EAAOR,WAEpB,OAAOQ,EAEX,SAAgBwH,GAAS5lB,EAASu6B,GAE9B,OAAS,KADsC,iBAAtBv6B,EAAQu6B,UAA0Bv6B,EAAQu6B,UAAUC,QAAUx6B,EAAQu6B,WACnE,KAAKjc,QAAQ,IAAMic,EAAY,MAAQ,EAsBvE,SAAgBE,GAAgBC,EAAWntB,EAAGotB,GAC1CD,KACA,IAAK,IAAI5jC,EAAI,EAAGuU,EAAWsvB,EAAQ9jC,OAAQC,EAAIuU,EAAUvU,IACrD4jC,EAAUxjC,MAAO0jC,MAAOD,EAAQ7jC,GAAG+jC,QAASC,MAAOH,EAAQ7jC,GAAGikC,QAASC,UAAW,OAEtF,OAAON,EAMX,SAAgBpX,GAAckL,EAAW4K,GACrC,IAAI1X,EAAM+N,GAAkBjB,EAAW4K,GACnC1X,GACAA,EAAI9D,WAAW8R,YAAYhO,GAGnC,SAAgBkO,GAAW5vB,EAASi7B,GAChC,IAAIvZ,EACJ,GAAIuZ,EAAQ,CAERvZ,EAAMO,GAAkB,OADX3hB,MAAS,mCAItBohB,EAAMC,SAASsY,gBAAgB,6BAA8B,KAEjE,IACIpJ,EADAlwB,EAAOszB,GAAWj0B,GAEtB,GAA+B,iBAApBA,EAAQK,QAGf,IAAK,IAAIpD,EAAK,EAAG6f,EADAoe,UAAQl7B,EAAQK,QACX86B,CAAex6B,GAAO1D,EAAK6f,EAAGjmB,OAAQoG,IACxD4zB,EAAO/T,EAAG7f,GACVykB,EAAIiO,YAAYkB,QAIpBnP,EAAIiO,YAAY3vB,EAAQK,SAE5B,OAAgBqhB,EAAI0Z,WAAU,GAGlC,SAAgBlB,GAAgBmB,EAAKxhB,GAEjC,IAAK,IADDmD,EAAOD,OAAOC,KAAKnD,GACd/iB,EAAI,EAAGA,EAAIkmB,EAAKnmB,OAAQC,IAC7BukC,EAAI/E,aAAatZ,EAAKlmB,GAAI+iB,EAAWmD,EAAKlmB,KAIlD,SAAgBijC,GAAiB/5B,EAAS6Z,GAEtC,IAAK,IADDmD,EAAOD,OAAOC,KAAKnD,GACd/iB,EAAI,EAAGA,EAAIkmB,EAAKnmB,OAAQC,IAC7BkJ,EAAQs2B,aAAatZ,EAAKlmB,GAAI+iB,EAAWmD,EAAKlmB,KAItD,SAAgBwkC,KACZ,IAAIjG,EAAiB,iBACrB,GAAKC,OAAOD,GAwBRC,OAAOD,GAAgBkG,YAAc,MAxBZ,CACzB,IAAIC,EAAavZ,GAAkB,OAC/BhiB,GAAI,iBACJK,MAAO,oEAEPyZ,EAAOkI,GAAkB,QAAU3hB,MAAS,+CAChDk7B,EAAW7L,YAAY5V,GACvB,IAAI0hB,OAAe,EACnBA,EAAexZ,GAAkB,UACjCuZ,EAAW7L,YAAY8L,GACvB,IAAIJ,EAAM1Z,SAASsY,gBAAgB,6BAA8B,OACjEoB,EAAI/E,aAAa,QAAS,gCAC1BkF,EAAW7L,YAAY0L,GACvB,IAAIr7B,EAAU2hB,SAASsY,gBAAgB,6BAA8B,QACrEoB,EAAI1L,YAAY3vB,GACL2hB,SAAS+Z,eAAe,IAAnC,IACIC,EAAQha,SAASsY,gBAAgB,6BAA8B,QACnE0B,EAAMlG,eAAe,uCAAwC,YAAa,YAC1E4F,EAAI1L,YAAYgM,GAChBrG,OAAOD,GAAkBmG,EACzBlG,OAAOD,GAAgBkG,WAAa,EACpC5Z,SAASqW,KAAKrI,YAAY6L,IClmBlC,SAAgB9hB,KAIZ,IAAK,IADDld,EAFAo/B,EAAQ,gEACR37B,EAAK,GAEAnJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,GAAI,WAAYw+B,QAAU,oBAAqBuG,OAAQ,CACnD,IAAIC,EAAQ,IAAIC,YAAY,GAG5Bv/B,GADgB84B,OAAO0G,UAAY1G,OAAOuG,QAC1BI,gBAAgBH,GAAO,IAAMF,EAAM/kC,OAAS,QAG5D2F,EAAMK,KAAKm3B,MAAMn3B,KAAKq/B,SAAWN,EAAM/kC,QAEjC,IAANC,GAAW0F,EAAM,GACjB1F,IAGJmJ,GAAM27B,EAAMtjC,UAAUkE,EAAKA,EAAM,GAErC,OAAOyD,EAGX,SAAgB0B,GAA4BmC,GAC3B,IAAI4Y,GAAjB,IACIvZ,EAAMW,EAAI1H,QAAU0H,EAAIqK,WAAWzV,OAASoL,EAAI8tB,MAAMv6B,EACtD6L,EAASY,EAAI1H,QAAU0H,EAAIqK,WAAWzV,QAAU,EAAIoL,EAAI8tB,MAAMv6B,GAC9D2L,EAAOc,EAAI3H,QAAU2H,EAAIqK,WAAWxV,MAAQmL,EAAI8tB,MAAMx6B,EACtD6L,EAAQa,EAAI3H,QAAU2H,EAAIqK,WAAWxV,OAAS,EAAImL,EAAI8tB,MAAMx6B,GAC5DuV,GAAYvV,EAAG4L,EAAM3L,EAAG8L,GAExByJ,GAAaxV,EAAG6L,EAAO5L,EAAG8L,GAG1BkF,GAAejR,EAAG4L,EAAM3L,EAAG6L,GAE3BwF,GAAgBtR,EAAG6L,EAAO5L,EAAG6L,GAEjC,OADSwZ,GAAKyJ,UAAUxZ,EAASC,EAAUvE,EAAYK,IAI3D,SAAgB8f,GAAUxoB,GACtB,IACIhH,EADA4I,EAAS,IAAI8a,GAGbpU,GADJtP,EAAU2I,GAA4B3B,IACbsI,WACrBzE,EAAY7K,EAAQ6K,UACpBmE,EAAehP,EAAQgP,aACvBL,EAAc3O,EAAQ2O,YACtBgF,EAAU3T,EAAQ2T,QAClBC,EAAW5T,EAAQ4T,SACnBvE,EAAarP,EAAQqP,WACrBK,EAAc1P,EAAQ0P,YAK1B,GAJA1I,EAAQhH,SACJ2T,QAASA,EAAS9I,UAAWA,EAAW+I,SAAUA,EAAUtE,WAAYA,EACxEX,YAAaA,EAAaU,WAAYA,EAAYL,aAAcA,EAAcU,YAAaA,GAEnE,IAAxB1I,EAAQyM,aAAiD,IAA5BzM,EAAQ0M,gBAAuB,CAC5D,IAAI5Q,EAASL,IACb0B,EAAarB,EAAQkE,EAAQyM,YAAczM,EAAQ0M,gBAAiB1M,EAAQ7D,QAAS6D,EAAQ5D,SAC7F4D,EAAQhH,QAAQ2T,QAAUA,EAAU9Q,EAAuBC,EAAQ6Q,GACnE3M,EAAQhH,QAAQ6K,UAAYA,EAAYhI,EAAuBC,EAAQ+H,GACvE7D,EAAQhH,QAAQ4T,SAAWA,EAAW/Q,EAAuBC,EAAQ8Q,GACrE5M,EAAQhH,QAAQsP,WAAaA,EAAazM,EAAuBC,EAAQwM,GACzEtI,EAAQhH,QAAQ2O,YAAcA,EAAc9L,EAAuBC,EAAQ6L,GAC3E3H,EAAQhH,QAAQqP,WAAaA,EAAaxM,EAAuBC,EAAQuM,GACzErI,EAAQhH,QAAQgP,aAAeA,EAAenM,EAAuBC,EAAQkM,GAC7EhI,EAAQhH,QAAQ0P,YAAcA,EAAc7M,EAAuBC,EAAQ4M,GAW/E,OARA9G,EAAS8a,GAAKyJ,UAAUxZ,EAASC,EAAUvE,EAAYK,IACvD1I,EAAQhH,QAAQgK,KAAOpB,EAAOoB,KAC9BhD,EAAQhH,QAAQiK,MAAQrB,EAAOqB,MAC/BjD,EAAQhH,QAAQmK,IAAMvB,EAAOuB,IAC7BnD,EAAQhH,QAAQkK,OAAStB,EAAOsB,OAChClD,EAAQhH,QAAQqI,OAASO,EAAOP,OAChCrB,EAAQhH,QAAQL,MAAQiJ,EAAOjJ,MAC/BqH,EAAQhH,QAAQN,OAASkJ,EAAOlJ,OACzBkJ,EAGX,SAAgBka,GAAYnhB,EAAKwhC,EAAgB7O,GAC7C,IAAI8O,KACApf,EAAO,aAEX,GAAIriB,EAAK,CACL2yB,EAAM3yB,EAAQ,SACd,IAAI0hC,EAAe1hC,EAAIqiB,IAASriB,EAC5B2hC,KACJA,EAAaA,EAAWC,OAAOxf,OAAOC,KAAKqf,IAC3C,IAAIG,KACJ,GAAIlP,EAAK,CACL,IAAImP,EAAiBzY,GAAYmY,GAE7BK,EADAC,EACmBA,EAAenP,MAKtCgP,EAAaA,EAAWC,OAAOC,GAInC,IAAK,IAFDE,EAAeC,GAAsBrP,GAEhCrwB,EAAK,EAAG2/B,EADjBN,EAAaA,EAAWC,OAAOG,GACaz/B,EAAK2/B,EAAa/lC,OAAQoG,IAAM,CACxE,IAAI4/B,EAAWD,EAAa3/B,GAC5B,GAAiB,mBAAb4/B,EACA,GAAiB,YAAbA,EAAwB,IAGFliC,EAAIkiC,KAAaliC,EAAImiC,eAAe,gBAElDniC,EAAIkiC,aAAqBE,MACzBX,EAAUS,GAAYG,IAAgD,IAApCN,EAAape,QAAQue,IAAoBliC,EAAIqiB,GAASriB,EAAIqiB,GAAM6f,GAAYliC,EAAIkiC,GAAWV,EAAgBU,GAExIliC,EAAIkiC,aAAqBE,QAAU,GAASpiC,EAAIkiC,aAAqBI,YAC1Eb,EAAUS,GAAYliC,EAAIkiC,GAAUzB,WAAU,GAAM8B,UAE/CviC,EAAIkiC,aAAqBE,QAAU,GAASpiC,EAAIkiC,aAAqB9f,OAC1Eqf,EAAUS,GAAY/gB,IAAiD,IAApC4gB,EAAape,QAAQue,IAAoBliC,EAAIqiB,GAASriB,EAAIqiB,GAAM6f,GAAYliC,EAAIkiC,IAGnHT,EAAUS,GAAYliC,EAAIkiC,SAK9BliC,EAAIkiC,KACJT,EAAUS,IACN1uB,YACIxV,MAAOgC,EAAIkiC,GAAU1uB,WAAWxV,MAAOD,OAAQiC,EAAIkiC,GAAU1uB,WAAWzV,QACzEyD,QAASxB,EAAIkiC,GAAU1gC,QAASC,QAASzB,EAAIkiC,GAAUzgC,WAOlF,OAAOggC,EAGX,SAAgBO,GAAsBQ,GAClC,OAAQA,GACJ,IAAK,QACD,OAAQ,UAAW,WAAY,WAAY,YAAa,SAAU,YACtE,IAAK,aACD,OAAQ,YACZ,IAAK,aAEL,IAAK,cACD,OAAQ,UAEhB,SAGJ,SAAgBH,GAAWI,EAAajB,EAAgB7O,GACpD,IAAI+P,EACJ,GAAID,EAAa,CACbC,KACA,IAAK,IAAIvmC,EAAI,EAAGA,EAAIsmC,EAAYvmC,OAAQC,IAChCsmC,EAAYtmC,aAAcimC,MAC1BM,EAAYnmC,KAAKkmC,EAAYtmC,IAExBsmC,EAAYtmC,aAAcimB,OAC/BsgB,EAAYnmC,KAAK4kB,GAAYshB,EAAYtmC,GAAIqlC,EAAgB7O,IAG7D+P,EAAYnmC,KAAKkmC,EAAYtmC,IAIzC,OAAOumC,EAGX,SAAgBC,GAAajF,EAASkF,GAClC,IAAIjB,EAAa,aACjB,GAAIjE,EAAS,CACJkF,IACDA,GAAgBjB,gBAEpB,IACK,IAAIr/B,EAAK,EAAG6f,EAAKC,OAAOC,KAAKqb,GAAUp7B,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC9D,IAAI4/B,EAAW/f,EAAG7f,GAClB,GAAIo7B,EAAQwE,aAAqBE,MAAO,CACpC,IAAIS,EAAeC,GAAYpF,EAAQwE,GAAWU,EAAYjB,GAAYO,IACrEU,EAAYjB,GAAYO,IAAcU,EAAYjB,GAAYO,GAAUhmC,SACzE0mC,EAAYV,GAAYW,QAG3B,GAAInF,EAAQwE,aAAqBE,QAAU,GAAS1E,EAAQwE,aAAqBI,YAClFM,EAAYV,GAAYxE,EAAQwE,GAAUzB,WAAU,GAAM8B,eAEzD,GAAI7E,EAAQwE,aAAqBE,QAAU,GAAS1E,EAAQwE,aAAqB9f,OAAQ,CAC1F,IAAI2gB,EAAiBJ,GAAajF,EAAQwE,GAAWU,EAAYjB,GAAYO,IACzEa,EAAepB,KAAgBvf,OAAOC,KAAK0gB,EAAepB,IAAazlC,eAChE6mC,EAAepB,GAE1BiB,EAAYV,GAAYa,OAGxBH,EAAYV,QAAkDxiC,IAAtCkjC,EAAYjB,GAAYO,GAC5CU,EAAYV,GAAYxE,EAAQwE,IAIhD,OAAOU,EAGX,SAAgBE,GAAYL,EAAaO,GACrC,IAAIN,KACAO,GAAQ,EACPD,IACDA,MAECA,EAAW9mC,SACZ+mC,GAAQ,GAEZ,IAAK,IAAI9mC,EAAI,EAAGA,EAAIsmC,EAAYvmC,OAAQC,IACpC,GAAIsmC,EAAYtmC,aAAcimC,MAAO,CACbU,GAAYL,EAAYtmC,GAAI6mC,EAAW7mC,IACvD8mC,GACAP,EAAYnmC,KAAKumC,SAGpB,GAAIL,EAAYtmC,aAAcimB,OAAQ,CACvC,IAAI2gB,EAAiBJ,GAAaF,EAAYtmC,GAAI6mC,EAAW7mC,IACzD8mC,GACAP,EAAYnmC,KAAKwmC,QAIrBL,EAAYnmC,KAAKkmC,EAAYtmC,IAGrC,OAAOumC,EAGX,SAAgBxE,GAAkBlzB,GAC9B,IAAIyjB,EAAQ,GACZ,OAAQzjB,GACJ,IAAK,SACDyjB,EAAQ,SACR,MACJ,IAAK,OACDA,EAAQ,OACR,MACJ,IAAK,QACDA,EAAQ,QAGhB,OAAOA,EAGX,SAAgB2O,GAAkBpyB,GAC9B,IAAIyjB,EAAQ,GACZ,OAAQzjB,GACJ,IAAK,OACDyjB,EAAQ,WACR,MACJ,IAAK,SACDA,EAAQ,UACR,MACJ,IAAK,mBACDA,EAAQ,SACR,MACJ,IAAK,cACDA,EAAQ,eAGhB,OAAOA,EAEX,SAAgB0N,GAASc,EAAaS,GAClC,IAAIhD,EAAiB,iBACrBC,OAAOD,GAAgB/0B,MAAMkyB,WAAa,UAC1C,IACIzY,EAAOyb,GADDF,OAAOD,GAAgBrjB,SAAS,IACb,GAC7B+H,EAAK6d,YAAcA,EACnB7d,EAAKuc,aAAa,QAAS,aAAe+B,EAAQxf,SAAW,mBACvDwf,EAAQtL,WAAa,iBAAmBsL,EAAQzf,KAAO,OAAS,WACtE,IAAI8c,EAAO3b,EAAKwc,UAAU59B,MAE1B,OADA28B,OAAOD,GAAgB/0B,MAAMkyB,WAAa,SACnCkD,EAGX,SAAgBmI,GAAc/mC,EAAGL,GAG7B,OADKK,EAAIL,GAAK,EAIlB,SAAgBqnC,GAAS/jB,EAAMse,GAC3B,IAAIvhC,EAAI,EACJL,EAAI,EACJsnC,EAAS,EACTn8B,EAAS,EACT4O,EAAO,GACX/Z,EAAIsjB,EAAKljB,OACT,IAAImc,EAAI,EACR,GACQpR,EAAS,IACT9K,EAAIinC,GAERA,EAASlhC,KAAKm3B,MAAM6J,GAAc/mC,EAAGL,IAErCmL,EAASk1B,GADTtmB,GAAQuJ,EAAKikB,OAAOlnC,EAAGinC,GACC1F,SACnBz2B,GAAUy2B,EAAQ1/B,OAE3B,IADA6X,EAAOA,EAAKwtB,OAAO,EAAGlnC,GACjBkc,EAAIlc,EAAGkc,EAAIvc,EAAGuc,IAGf,GAFAxC,GAAQuJ,EAAK/G,IACbpR,EAASk1B,GAAStmB,EAAM6nB,KACVA,EAAQ1/B,MAAO,CACzBohB,EAAOA,EAAKikB,OAAO,EAAGxtB,EAAK3Z,OAAS,GACpC,MAUR,MAP6B,aAAzBwhC,EAAQxL,cACR9S,EAAOA,EAAKikB,OAAO,EAAGjkB,EAAKljB,OAAS,GACpCkjB,GAAQ,OAGRA,EAAOA,EAAKikB,OAAO,EAAGjkB,EAAKljB,QAExBkjB,EAGX,SAAgB8d,GAAmBlyB,EAAO2xB,GACtC,GAAa,WAATA,GAA+B,gBAAV3xB,EACrB,MAAO,MAEX,IAAIyjB,EAAQ,GACZ,OAAQzjB,GACJ,IAAK,cACDyjB,EAAQ,SACR,MACJ,IAAK,gBACDA,EAAQ,WACR,MACJ,IAAK,cACDA,EAAQ,WAGhB,OAAOA,EAGX,SAAgB6U,GAAWtM,EAAM/5B,GAC7B,IAAIkE,EAASL,IACb0B,EAAarB,EAAQlE,EAAO,EAAG,GAC/B,IAAI+U,EAAU9Q,EAAuBC,GAAU1E,EAAG,EAAGC,EAAG,IACpDuV,EAAW/Q,EAAuBC,GAAU1E,EAAGu6B,EAAKh5B,MAAOtB,EAAG,IAC9DgR,EAAaxM,EAAuBC,GAAU1E,EAAG,EAAGC,EAAGs6B,EAAKj5B,SAC5DgQ,EAAc7M,EAAuBC,GAAU1E,EAAGu6B,EAAKh5B,MAAOtB,EAAGs6B,EAAKj5B,SACtEwlC,EAAOrhC,KAAKqK,IAAIyF,EAAQvV,EAAGwV,EAASxV,EAAGiR,EAAWjR,EAAGsR,EAAYtR,GACjE+mC,EAAOthC,KAAKqK,IAAIyF,EAAQtV,EAAGuV,EAASvV,EAAGgR,EAAWhR,EAAGqR,EAAYrR,GACjE+mC,EAAOvhC,KAAK+I,IAAI+G,EAAQvV,EAAGwV,EAASxV,EAAGiR,EAAWjR,EAAGsR,EAAYtR,GACjEinC,EAAOxhC,KAAK+I,IAAI+G,EAAQtV,EAAGuV,EAASvV,EAAGgR,EAAWhR,EAAGqR,EAAYrR,GACrE,OAAO,IAAI2mB,GAAKogB,EAAOF,EAAMG,EAAOF,GAGxC,SAAgB9vB,GAAYzW,EAAO2gC,EAAQC,EAAQz8B,GAC/C,GAAc,IAAVnE,EAAa,CACb,IAAIkE,EAASL,IAEb,OADA0B,EAAarB,EAAQlE,EAAO2gC,EAAQC,GAC7B38B,EAAuBC,EAAQC,GAE1C,OAAOA,EAGX,SAAgBuiC,GAAU3xB,EAAShS,GAG/B,OACIvD,EAHOuV,EAAQvV,EAAIuD,EAAIujB,YAAYvlB,MAAQgC,EAAIi3B,MAAMx6B,EAG5CC,EAFFsV,EAAQtV,EAAIsD,EAAIujB,YAAYxlB,OAASiC,EAAIi3B,MAAMv6B,GAQ9D,SAAgB2sB,GAAYre,GAMxB,YALctL,IAAVsL,GACqB,iBAAVA,IACPA,EAAQ44B,WAAS54B,EAAO2vB,SAGzB3vB,ECnXX,SAAgB64B,GAAmB7jC,EAAKuT,EAASzN,EAAUnB,EAASm/B,EAAYC,EAAWt7B,GAC5E9D,EAAQke,cAAcF,WAAW,GAC5C,GAAIohB,GAAaA,EAAU7nC,OAAS,GAAK4nC,GAAcA,EAAW5nC,OAAS,EACvE,MAAO,YAEX,GAAIyI,EAAQ+e,cACR,MAAO,OAOX,GAJqC,aAAjC/e,EAAoB,aAAE0f,SACtB1f,EAAQ8W,OAASC,eAAaO,WAG7BD,GAAYrX,IAAYmX,GAAkBnX,KAAaA,EAAQwlB,cAChE,MAAO,OAEX,GAAI6Z,GAAar/B,GAAU,CAEvB,IADIoyB,EAASpyB,EAAQke,eACVtP,SAAWmkB,GAAcX,EAAOre,YAAa,cACpD,IAAK,IAAIpW,EAAK,EAAG6f,EAAK4U,EAAOkN,YAAa3hC,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC5D,IAAI4hC,EAAQ/hB,EAAG7f,GACf,GAAI4hC,EAAMvQ,QAAS,CAEf,GAAIwQ,GAASr+B,EADTs+B,EAAevN,GAAsBE,EAAQmN,EAAOv/B,EAAQwf,SAASjZ,WACpCg5B,EAAMlN,KAAO,GAC9C,OAAOkN,EAAMlmB,OAOjC,GAAIpC,GAAWjX,KAAa3E,EACxB,MAAO,MAEX,GAAIgkC,GAAar/B,GAAU,CACvB,IAAIU,EAAWV,EAAQke,cAAwB,WAC3Cle,EAAQke,cAActP,QAAQ8D,SAAS,GAAK1S,EAAQke,cAActP,QAClE8wB,EAAeh/B,EAAQ4B,OACvB8vB,EAASpyB,EAAQke,cACjBuhB,EAAe,IAAIriB,GAAKsiB,EAAa5nC,EAAG4nC,EAAa3nC,EAAG2nC,EAAarmC,MAAOqmC,EAAatmC,QAC7F,GAAIumC,GAAoB3/B,KAAaA,EAAQke,cAAckL,WAAY,CACnE,IAAIwW,EAAS5/B,EAAQke,cAAcF,WAAW,GAC1C6hB,EAAqB,GAAK7/B,EAAQosB,eAAe5H,YACjDsb,EAAqB,GAAK9/B,EAAQosB,eAAe5H,YACrD,GAAIuO,GAAcX,EAAOre,YAAa,aAAc,CAChD,GAAKgf,GAAcX,EAAOre,YAAa,yBAChCW,GAAiBkrB,IAAWJ,GAASr+B,EAAUy+B,EAAO/9B,YAAag+B,GACtE,MAAO,qBAEX,GAAK9M,GAAcX,EAAOre,YAAa,yBAChCa,GAAiBgrB,IAAWJ,GAASr+B,EAAUy+B,EAAOj0B,YAAam0B,GACtE,MAAO,qBAGX,GADIpgB,EA+FpB,SAAkCqgB,EAAM3N,EAAQjxB,EAAUnB,GACtD,IAAI8/B,EAAqB,GAAK9/B,EAAQosB,eAAe5H,YACjDqb,EAAqB,GAAK7/B,EAAQosB,eAAe5H,YACrD,GAAkB,WAAdub,EAAKpjC,KACL,IAAK,IAAInF,EAAI,EAAGA,EAAIuoC,EAAK9lC,SAAS1C,OAAQC,IAAK,CAC3C,IAAI4D,EAAW2kC,EAAa,SAAEvoC,GAC9B,GAAIgoC,GAASr+B,EAAW8E,GAAMC,aAAa9K,EAAQ4V,QAA2B5V,EAAQsrB,aAAzBtrB,EAAQ4V,OAA+B6uB,GAChG,MAAO,oBAEX,GAAIL,GAASr+B,EAAW8E,GAAMC,aAAa9K,EAAQ9B,QAA2B8B,EAAQurB,aAAzBvrB,EAAQ9B,OAA+BwmC,GAChG,MAAO,oBAInB,GAAI9/B,EAAQggC,4BAA8BlrB,GAAoBirB,GAC1D,GAAkB,aAAdA,EAAKpjC,MAAqC,WAAdojC,EAAKpjC,KACjC,IAAK,IAAInF,EAAI,EAAGA,EAAIuoC,EAAK9lC,SAAS1C,OAAQC,IAAK,CAC3C,IAAI4D,OAAU,EAEd,GADAA,EAAW2kC,EAAa,SAAEvoC,GACtBgoC,GAASr+B,EAAU/F,EAAQqB,MAAO,IAClC,MAAO,kBAKf,IAAK,IAAIjF,EAAI,EAAGA,EAAIuoC,EAAK9lC,SAAS1C,OAAQC,IAAK,CAC3C,IAAI4D,OAAU,EACVyQ,GAAa/T,EAAG,EAAGC,EAAG,GAC1BqD,EAAW2kC,EAAa,SAAEvoC,GAC1B,IAAK,IAAIL,EAAI,EAAGA,EAAIiE,EAAQ3B,OAAOlC,OAAS,EAAGJ,IAAK,CAChD,IAAI4U,EAAW9F,GAAM4G,eAAezR,EAAQ3B,OAAOtC,GAAIiE,EAAQ3B,OAAOtC,EAAI,IAC1E,GAAI4U,GAAY,KACZF,EAAS/T,GAAMsD,EAAQ3B,OAAOtC,GAAGW,EAAIsD,EAAQ3B,OAAOtC,EAAI,GAAGW,GAAK,EAChE+T,EAAS9T,GAAMqD,EAAQ3B,OAAOtC,GAAGY,EAAIqD,EAAQ3B,OAAOtC,EAAI,GAAGY,GAAK,EAC5DynC,GAASr+B,EAAU0K,EAAU,KAC7B,MAAO,cAO/B,OAAO,KAzIkBo0B,CAAyBL,EAAQxN,EAAQjxB,EAAUnB,GAE5D,OAAO0f,OAId,CACD,IAAIwgB,EAAM,GAAKlgC,EAAQwf,SAASgF,YAC5BhoB,EAASL,IACb0B,EAAarB,EAAQkE,EAAQyM,YAAczM,EAAQ0M,gBAAiB1M,EAAQ7D,QAAS6D,EAAQ5D,SAE7F,IAAIhF,EAAI4I,EAAQ7D,QAAU6D,EAAQ4xB,MAAMx6B,EAAI4I,EAAQmO,WAAWxV,MAC3DtB,EAAI2I,EAAQ5D,QAAU4D,EAAQ4xB,MAAMv6B,EAAI2I,EAAQmO,WAAWzV,OAC3D+mC,GACAroC,EAAGA,GAA0B,KAApB4I,EAAQ4xB,MAAMx6B,EAA8B,EAAlB4I,EAAQ4xB,MAAMx6B,EAAQ4I,EAAQ4xB,MAAMx6B,GAAK4I,EAAQmO,WAAWxV,MAAQ,EACvGtB,EAAGA,EAAI,GAAKiI,EAAQwf,SAASgF,aAEjC2b,EAAc5jC,EAAuBC,EAAQ2jC,GAC7C,IAAIC,IAAiBpgC,EAAQke,cAAckL,WACvCiX,KAAeD,IAAmBprB,GAAUhV,EAAQke,cAAckL,aACtE,GAAI2J,GAAcX,EAAOre,YAAa,WAAayrB,GAASr+B,EAAUg/B,EAAaD,IAC9ElgC,EAAQke,cAAc0U,kBAAoBE,oBAAkB7d,OAAS,CACtE,GAAImrB,GAAkBC,EAClB,MAAO,cAEN,IAAKD,EACN,MAAO,SAIf,GADAX,EAAa3Y,QAAQoZ,GACjBT,EAAan7B,cAAcnD,GAAW,CAEtC,GADIue,EAkDpB,SAA4B1f,EAASU,EAASS,EAAU3E,EAAQ1E,EAAGC,GAC/D,IAAI2nB,EACwC,IAAvC1f,EAAQke,cAAcpE,MAAMviB,QAA4D,IAA5CyI,EAAQke,cAAcF,WAAWzmB,QAC3EyI,EAAQke,cAAcpE,MAAM,GAAGlB,YAClC8G,EA+ER,SAAuC1f,EAASU,EAASS,EAAUrJ,EAAGC,GAClE,IAAImoC,EAAM,GAAKlgC,EAAQwf,SAASgF,YAC5B8b,EAAQ,GAAKtgC,EAAQwf,SAASgF,YAC9BtG,EAAgBle,EAAQke,cACxB7kB,EAAQqH,EAAQmO,WAAWxV,MAC3BD,EAASsH,EAAQmO,WAAWzV,OAC5BsK,EAAO,IAAI0Z,GAAKtlB,EAAGC,EAAI,GAAI2I,EAAQM,MAAMiY,YAAa7f,EAAS,IAC/DuK,EAAQ,IAAIyZ,GAAKtlB,EAAIuB,EAAOtB,EAAI,GAAI2I,EAAQM,MAAMiY,YAAa7f,EAAS,IACxEyK,EAAM,IAAIuZ,GAAKtlB,EAAI,GAAIC,EAAGsB,EAAQ,GAAIqH,EAAQM,MAAMiY,aACpDrV,EAAS,IAAIwZ,GAAKtlB,EAAI,GAAIC,EAAIqB,EAAQC,EAAQ,GAAIqH,EAAQM,MAAMiY,aAChEL,EAAY6C,GAAuBzb,EAASA,EAAQke,cAAcpE,MAAM,IAAI,GAC5E9Z,EAAQ0b,UAAU1b,EAAQke,cAAcpE,MAAM,GAAG6B,UAAY3b,EAAQke,cAAcpE,MAAM,GAC7F,GAAIzgB,GAASinC,GAASlnC,GAAUknC,EAAO,CACnC,GAAI5N,GAAgBxU,EAAcnK,YAAa,aAAcmK,EAAc0U,kBAAmB1U,IAC1Fva,EAAMW,cAAcnD,EAAU++B,GAC9B,MAAO,aAEX,GAAIxN,GAAgBxU,EAAcnK,YAAa,cAAemK,EAAc0U,kBAAmB1U,IAC3Fta,EAAOU,cAAcnD,EAAU++B,GAC/B,MAAO,cAEX,GAAiC,SAA7BtnB,EAAUA,UAAUjc,KAAiB,CACrC,GAAI+1B,GAAgBxU,EAAcnK,YAAa,aAAcmK,EAAc0U,kBAAmB1U,IAC1Fxa,EAAKY,cAAcnD,EAAU++B,GAC7B,MAAO,aAEX,GAAIxN,GAAgBxU,EAAcnK,YAAa,cAAemK,EAAc0U,kBAAmB1U,IAC3Fra,EAAIS,cAAcnD,EAAU++B,GAC5B,MAAO,eAInB,OAAO,KA/GMK,CAA8BvgC,EAASU,EAASS,EAAUrJ,EAAGC,IAErE2nB,IACDA,EA8GR,SAA+B1f,EAASU,EAASS,EAAU3E,EAAQ1E,EAAGC,GAClE,IAAIuoC,EAAQ,GAAKtgC,EAAQwf,SAASgF,YAC9B0b,EAAM,GAAKlgC,EAAQwf,SAASgF,YAC5BtG,EAAgBle,EAAQke,cACxBkiB,IAAkBliB,EAAwB,WAC9C,GAAIxd,EAAQmO,WAAWxV,OAASinC,GAAS5/B,EAAQmO,WAAWzV,QAAUknC,EAAO,CACzE,GAAI5N,GAAgBxU,EAAcnK,YAAa,kBAAmBmK,EAAc0U,kBAAmB1U,IAAkBshB,GAASr+B,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQmO,WAAWxV,MAAOtB,EAAGA,EAAI2I,EAAQmO,WAAWzV,SAAW8mC,GAC3O,OAAO,EAAmB,uBAAyB,kBAEvD,GAAIxN,GAAgBxU,EAAcnK,YAAa,kBAAmBmK,EAAc0U,kBAAmB1U,IAC/FshB,GAASr+B,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAGC,EAAGA,EAAI2I,EAAQmO,WAAWzV,SAAW8mC,GAC/F,OAAO,EAAmB,uBAAyB,kBAEvD,GAAIxN,GAAgBxU,EAAcnK,YAAa,kBAAmBmK,EAAc0U,kBAAmB1U,IAC/FshB,GAASr+B,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQmO,WAAWxV,MAAOtB,EAAGA,IAAMmoC,GAC9F,OAAO,EAAmB,uBAAyB,kBAEvD,GAAIxN,GAAgBxU,EAAcnK,YAAa,kBAAmBmK,EAAc0U,kBAAmB1U,IAC/FshB,GAASr+B,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAGC,EAAGA,IAAMmoC,GACnE,OAAO,EAAmB,uBAAyB,kBAG3D,GAAIxN,GAAgBxU,EAAcnK,YAAa,aAAcmK,EAAc0U,kBAAmB1U,IAAkBshB,GAASr+B,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQmO,WAAWxV,MAAOtB,EAAGA,EAAI2I,EAAQmO,WAAWzV,OAAS,IAAM8mC,GAC1O,OAAO,EAAmB,kBAAoB,aAElD,GAAIxN,GAAgBxU,EAAcnK,YAAa,aAAcmK,EAAc0U,kBAAmB1U,IAC1FshB,GAASr+B,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAGC,EAAGA,EAAI2I,EAAQmO,WAAWzV,OAAS,IAAM8mC,GACnG,OAAO,EAAmB,kBAAoB,aAElD,GAAIxN,GAAgBxU,EAAcnK,YAAa,cAAemK,EAAc0U,kBAAmB1U,IAAkBshB,GAASr+B,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQmO,WAAWxV,MAAQ,EAAGtB,EAAGA,EAAI2I,EAAQmO,WAAWzV,SAAW8mC,GAC3O,OAAO,EAAmB,mBAAqB,cAEnD,GAAIxN,GAAgBxU,EAAcnK,YAAa,cAAemK,EAAc0U,kBAAmB1U,IAC3FshB,GAASr+B,EAAU5E,EAAuBC,GAAU1E,EAAGA,EAAI4I,EAAQmO,WAAWxV,MAAQ,EAAGtB,EAAGA,IAAMmoC,GAClG,OAAO,EAAmB,mBAAqB,cAEnD,OAAO,KAlJMM,CAAsBxgC,EAASU,EAASS,EAAU3E,EAAQ1E,EAAGC,IAE1E,GAAI2nB,EACA,OAAOA,EAEX,OAAO,KA9DkB+gB,CAAmBzgC,EAASU,EAASS,EAAU3E,EAAQ1E,EAAGC,GAEnE,OAAO2nB,IAKvB,GAAI5b,aAAkB48B,KAAezpB,GAAWjX,GAAW,CACvD,IAAI0f,EACJ,GAAe,UADXA,EAASihB,GAAuB3gC,EAAS8D,IAEzC,OAAO4b,EAGf,IAAK5b,aAAkB+P,IAAmB/P,aAAkBgQ,MAAqBmD,GAAWjX,IAAa4T,GAAU9P,GAC/G,OAAI88B,GAAW5gC,EAAS8D,OAAQ/I,EAAW6T,IAAYyF,GAAQvQ,GACpD,YAEJ,cAEX,GAAY,OAARzI,EAAc,CACd,KAAIA,aAAega,IAAQha,aAAe6Y,IAyBtC,MAAO,SAxBP,GAAItF,GAAWA,EAAQjO,GAAI,CACvB,IAAIA,EAAKiO,EAAQjO,GAAGyO,MAAM/T,EAAIsF,IAAI,GAClC,GAAIA,GAAMA,EAAG/H,MAAM,UACf,MAAO,kBAGf,GAAIyb,GAAQhZ,IAAQuT,aAAmB4f,IAAe5f,EAAQggB,UAAUC,KACpE,MAAO,YAEX,IAAIxa,GAAQhZ,KAAQulC,GAAW5gC,EAAS3E,GAAK,SAA+CN,IAArCiF,EAAQke,cAAckL,WAOxE,OAAI/tB,GAAO4b,GAAWjX,KAAauX,GAAYvX,GACzC,MAGA,SAVP,GAAK3E,aAAe6Y,KAAesrB,GAASr+B,EAAU9F,EAAIwG,YAAaxG,EAAI0rB,cACvEyY,GAASr+B,EAAU9F,EAAIsQ,YAAatQ,EAAI0rB,eACtC1rB,aAAe6Y,IACjB,MAAO,OAcvB,MAAO,SA6DX,SAAgBysB,GAAuB3gC,EAAS8D,EAAQq7B,EAAYC,GAChE,GAAI/mB,GAAQvU,KAAqBkvB,GAAqBlvB,EAAQ+8B,iBAAeC,QACrE9N,GAAqBlvB,EAAQ+8B,iBAAeE,WAChD,GAAKj9B,EAAOiQ,YAAcyB,kBAAgBlB,KACtC,MAAO,gBAGV,GAAI6D,GAAQrU,KAAqBkvB,GAAqBlvB,EAAQ+8B,iBAAeC,QAC1E9N,GAAqBlvB,EAAQ+8B,iBAAeE,WAC5Cj9B,EAAOiQ,YAAcyB,kBAAgB4C,KAAM,CAC3CpY,EAAQwlB,iBACR,IAAI9Y,GAAc/P,KAAM,aAAcqkC,aAAcl9B,EAAOnD,IAI3D,OAHAX,EAAQwlB,cAAgB9Y,EACxB1M,EAAQ8W,MAAQC,eAAaO,SAC7BtX,EAAQihC,qBAAuBv0B,EACxB,WAGf,MAAO,OA+EX,SAAgB8yB,GAASlX,EAAe3uB,EAAQunC,GAC5C,OAAI5Y,EAAcxwB,GAAK6B,EAAO7B,EAAIopC,GAAW5Y,EAAcxwB,GAAK6B,EAAO7B,EAAIopC,GACnE5Y,EAAcvwB,GAAK4B,EAAO5B,EAAImpC,GAAW5Y,EAAcvwB,GAAK4B,EAAO5B,EAAImpC,EAOnF,SAAgB7B,GAAar/B,GACzB,OAAIA,EAAQke,cAAcpE,MAAMviB,OAAS,GAAKyI,EAAQke,cAAcF,WAAWzmB,OAAS,EAM5F,SAAgBooC,GAAoB3/B,GAChC,OAAgD,IAA5CA,EAAQke,cAAcF,WAAWzmB,SAAiByI,EAAQke,cAAcpE,MAAMviB,OAMtF,SAAgBqpC,GAAW5gC,EAASU,EAASygC,EAAYvyB,GAErD,QADmB,IAAfuyB,IAAyBA,GAAa,GACtCzgC,aAAmB6T,GACnB,OAAO,EAEX,GAAI7T,aAAmB2U,GACnB,KAAO3U,GAAS,CACZ,IAAsD,IAAlDV,EAAQke,cAAcpE,MAAMkF,QAAQte,SAAwD3F,IAArCiF,EAAQke,cAAckL,WAC7E,OAAO,EAEX,GAAK+X,EAID,MAHAzgC,EAAUV,EAAQ0b,UAAUhb,EAAQib,eAO3C,GAAIjb,aAAmBwT,IACxB,IAA2D,IAAvDlU,EAAQke,cAAcF,WAAWgB,QAAQte,SAAwD3F,IAArCiF,EAAQke,cAAckL,WAClF,OAAO,OAGV,IAAI1oB,aAAmBmT,IAAmBnT,aAAmBoT,KAC1D9T,EAAQke,cAAckL,YAAcppB,EAAQke,cAActP,QAAQ8D,SAAS,GAAG/R,KAAOiO,EAAQjO,GAC7F,OAAO,EAGf,OAAO,EAGX,SAAgBygC,GAAUC,EAAQ/oC,GAI9B,GAFAA,GAAS,IACTA,GAAS,KACyB,IAA9B+oC,EAAOriB,QAAQ,UACf,OAAOsiB,GAAQD,GAGf,IAAI9zB,EAAM+zB,GAAQD,GAClB,OAAK/oC,GAAS,GAAKA,EAAQ,IAAQA,GAAS,KAAOA,GAAS,KAASA,GAAS,KAAOA,GAAS,IACnFiV,EAEDjV,GAAS,IAAMA,GAAS,IAAQA,GAAS,KAAOA,GAAS,IACnD,aAARiV,GAA8B,aAARA,EACf,YAEM,cAARA,GAA+B,cAARA,EACrB,WAEM,aAARA,GAA8B,aAARA,EACpB,YAGA,WAGLjV,GAAS,IAAMA,GAAS,KAASA,GAAS,KAAOA,GAAS,IACpD,aAARiV,GAA8B,aAARA,EACf,WAEM,cAARA,GAA+B,cAARA,EACrB,YAEM,aAARA,GAA8B,aAARA,EACpB,WAGA,YAGLjV,GAAS,KAAOA,GAAS,KAASA,GAAS,KAAOA,GAAS,IACrD,aAARiV,GAA8B,aAARA,EACf,YAEM,cAARA,GAA+B,cAARA,EACrB,WAEM,aAARA,GAA8B,aAARA,EACpB,YAOZ+zB,GAAQD,GAHA,WC22DnB,SACgBE,GAAqBriC,GACjC,OAAOsiC,GAAWtiC,EAAME,YAE5B,SAAgBqiC,GAA4BviC,GACxC,OAAOwiC,GAAkBxiC,EAAME,YAEnC,SAAgBuiC,GAA4BziC,GACxC,OAAO0iC,GAAkB1iC,EAAME,YAEnC,SAAgByiC,GAAyB3iC,GACrC,OAAO4iC,GAAe5iC,EAAME,YAEhC,SAAgB2iC,GAAyB7iC,GACrC,OAAO8iC,GAAe9iC,EAAME,YCpkDhC,SACS6iC,GAAe5gC,GACpB,IAAIvJ,EAAIuJ,EAAKxE,QAAUwE,EAAKwN,WAAWxV,MAAQgI,EAAKixB,MAAMx6B,EACtDC,EAAIsJ,EAAKvE,QAAUuE,EAAKwN,WAAWzV,OAASiI,EAAKixB,MAAMv6B,EAC3D,OAAO,IAAIqlB,GAAKtlB,EAAGC,EAAGsJ,EAAKwN,WAAWxV,MAAOgI,EAAKwN,WAAWzV,QAEjE,SAAS8oC,GAAmBvhC,EAAIwhC,GAC5B,IAAK,IAAI3qC,EAAI,EAAGA,EAAI2qC,EAAK5qC,OAAQC,IAC7B,GAAI2qC,EAAK3qC,GAAGmJ,KAAOA,EACf,OAAO,EAGf,OAAO,EC9tBX,IAAI+d,GAAsB,WACtB,SAASA,EAAKrlB,EAAOD,GACjB0H,KAAKzH,MAAQA,EACbyH,KAAK1H,OAASA,EAuBlB,OApBAslB,EAAK0jB,UAAUC,QAAU,WACrB,OAAuB,IAAhBvhC,KAAK1H,QAA+B,IAAf0H,KAAKzH,OAgBrCqlB,EAAK0jB,UAAUE,MAAQ,WACnB,OAAO,IAAI5jB,EAAK5d,KAAKzH,MAAOyH,KAAK1H,SAE9BslB,KC7BP6jB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAM5DjI,GAAuB,SAAUu9B,GAEjC,SAASv9B,IACL,OAAkB,OAAXu9B,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAoI/D,OAtIAyhC,GAAUt8B,EAAOu9B,GAKjBv9B,EAAM5B,OAAS,SAAU2M,EAAQ1X,GAC7B,OAAI0X,IAAW1X,MAGV0X,IAAW1X,MAGR0X,IAAW1X,GAAU0X,EAAOlZ,IAAMwB,EAAOxB,GAAKkZ,EAAOjZ,IAAMuB,EAAOvB,IAK9EkO,EAAMC,aAAe,SAAUzJ,GAC3B,OAAIA,EAAM3E,IAAK2E,EAAM1E,GAoCzBkO,EAAMM,UAAY,SAAU9J,EAAOnE,EAAOf,GACtC,IAAImF,GAAO5E,EAAG,EAAGC,EAAG,GAGpB,OAFA2E,EAAG5E,EAAIyF,KAAKC,MAA6D,KAAtDf,EAAM3E,EAAIP,EAASgG,KAAKY,IAAI7F,EAAQiF,KAAKgR,GAAK,OAAe,IAChF7R,EAAG3E,EAAIwF,KAAKC,MAA6D,KAAtDf,EAAM1E,EAAIR,EAASgG,KAAKW,IAAI5F,EAAQiF,KAAKgR,GAAK,OAAe,IACzE7R,GAGXuJ,EAAMmI,WAAa,SAAU1T,EAAGuT,GAE5B,OADa1Q,KAAKmmC,KAAKnmC,KAAKomC,IAAKjpC,EAAE5C,EAAImW,EAAEnW,EAAI,GAAKyF,KAAKomC,IAAKjpC,EAAE3C,EAAIkW,EAAElW,EAAI,KAI5EkO,EAAM+H,UAAY,SAAUgD,EAAQ1X,GAChC,IAAIhB,EAAQiF,KAAKqmC,MAAMtqC,EAAOvB,EAAIiZ,EAAOjZ,EAAGuB,EAAOxB,EAAIkZ,EAAOlZ,GAM9D,OALAQ,EAAS,IAAMA,EAAQiF,KAAKgR,IAC5BjW,GAAS,KACG,IACRA,GAAS,KAENA,GAGX2N,EAAM4G,eAAiB,SAAUg3B,EAAKC,GAClC,OAAOvmC,KAAKmmC,KAAKnmC,KAAKomC,IAAIG,EAAIhsC,EAAI+rC,EAAI/rC,EAAG,GAAKyF,KAAKomC,IAAIG,EAAI/rC,EAAI8rC,EAAI9rC,EAAG,KAG1EkO,EAAM89B,0BAA4B,SAAUtqC,GAExC,IAAK,IADDlC,EAAS,EACJJ,EAAI,EAAGA,EAAIsC,EAAOlC,OAAS,EAAGJ,IACnCI,GAAUuJ,KAAK+L,eAAepT,EAAOtC,GAAIsC,EAAOtC,EAAI,IAExD,OAAOI,GAGX0O,EAAM+9B,YAAc,SAAU3gC,EAAQS,EAAQmgC,EAAS1sC,GACnD,IACIe,EADAoE,EAAKunC,GAAYnsC,EAAGuL,EAAOvL,EAAGC,EAAGsL,EAAOtL,IAAQD,EAAGgM,EAAOhM,EAAGC,EAAG+L,EAAO/L,GA4B3E,OA1BIsL,EAAOvL,IAAMgM,EAAOhM,EAChBuL,EAAOtL,EAAI+L,EAAO/L,GAAKksC,GAAW5gC,EAAOtL,EAAI+L,EAAO/L,IAAMksC,EAC1DvnC,EAAG3E,GAAKR,EAGRmF,EAAG3E,GAAKR,EAGP8L,EAAOtL,IAAM+L,EAAO/L,EACrBsL,EAAOvL,EAAIgM,EAAOhM,GAAKmsC,GAAW5gC,EAAOvL,EAAIgM,EAAOhM,IAAMmsC,EAC1DvnC,EAAG5E,GAAKP,EAGRmF,EAAG5E,GAAKP,EAIR0sC,GACA3rC,EAAQwI,KAAKkN,UAAU3K,EAAQS,GAC/BpH,EAAKoE,KAAKyF,UAAUlD,EAAQ/K,EAAOf,KAGnCe,EAAQwI,KAAKkN,UAAUlK,EAAQT,GAC/B3G,EAAKoE,KAAKyF,UAAUzC,EAAQxL,EAAOf,IAGpCmF,GAGXuJ,EAAM1C,UAAY,SAAUsgC,EAAKC,GAC7B,OAAIvmC,KAAK6G,IAAI0/B,EAAIhsC,EAAI+rC,EAAI/rC,GAAKyF,KAAK6G,IAAI0/B,EAAI/rC,EAAI8rC,EAAI9rC,GACxC8rC,EAAI/rC,EAAIgsC,EAAIhsC,EAAI,QAAU,OAG1B+rC,EAAI9rC,EAAI+rC,EAAI/rC,EAAI,SAAW,OAG1CgrC,IACImB,WAAS,IACVj+B,EAAMm8B,UAAW,SAAK,GACzBW,IACImB,WAAS,IACVj+B,EAAMm8B,UAAW,SAAK,GAClBn8B,GACTk+B,iBC5JE/mB,GAAsB,WACtB,SAASA,EAAKtlB,EAAGC,EAAGsB,EAAOD,GAKvB0H,KAAKhJ,EAAImB,OAAO8U,UAKhBjN,KAAK/I,EAAIkB,OAAO8U,UAKhBjN,KAAKzH,MAAQ,EAKbyH,KAAK1H,OAAS,OACJ2B,IAANjD,QAAyBiD,IAANhD,GACnBD,EAAIC,EAAIkB,OAAO8U,UACf1U,EAAQD,EAAS,SAGH2B,IAAV1B,IACAA,EAAQ,QAEG0B,IAAX3B,IACAA,EAAS,IAGjB0H,KAAKhJ,EAAIA,EACTgJ,KAAK/I,EAAIA,EACT+I,KAAKzH,MAAQA,EACbyH,KAAK1H,OAASA,EA2MlB,OAzMAqkB,OAAO8lB,eAAenmB,EAAKglB,UAAW,QAElCgC,IAAK,WACD,OAAOtjC,KAAKhJ,GAEhBusC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,SAElCgC,IAAK,WACD,OAAOtjC,KAAKhJ,EAAIgJ,KAAKzH,OAEzBgrC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,OAElCgC,IAAK,WACD,OAAOtjC,KAAK/I,GAEhBssC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,UAElCgC,IAAK,WACD,OAAOtjC,KAAK/I,EAAI+I,KAAK1H,QAEzBirC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,WAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAK4C,KAAM3L,EAAG+I,KAAK+C,MAEnCwgC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,YAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAK6C,MAAO5L,EAAG+I,KAAK+C,MAEpCwgC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,cAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAK4C,KAAM3L,EAAG+I,KAAK8C,SAEnCygC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,eAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAK6C,MAAO5L,EAAG+I,KAAK8C,SAEpCygC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,cAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAK4C,KAAM3L,EAAG+I,KAAK/I,EAAI+I,KAAK1H,OAAS,IAErDirC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,eAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAK6C,MAAO5L,EAAG+I,KAAK/I,EAAI+I,KAAK1H,OAAS,IAEtDirC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,aAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAKhJ,EAAIgJ,KAAKzH,MAAQ,EAAGtB,EAAG+I,KAAK+C,MAEjDwgC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,gBAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAKhJ,EAAIgJ,KAAKzH,MAAQ,EAAGtB,EAAG+I,KAAK8C,SAEjDygC,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAenmB,EAAKglB,UAAW,UAElCgC,IAAK,WACD,OAAStsC,EAAGgJ,KAAKhJ,EAAIgJ,KAAKzH,MAAQ,EAAGtB,EAAG+I,KAAK/I,EAAI+I,KAAK1H,OAAS,IAEnEirC,YAAY,EACZC,cAAc,IAGlBlnB,EAAKglB,UAAU/9B,OAAS,SAAUkgC,EAAOC,GACrC,OAAOD,EAAMzsC,IAAM0sC,EAAM1sC,GAAKysC,EAAMxsC,IAAMysC,EAAMzsC,GAAKwsC,EAAMlrC,QAAUmrC,EAAMnrC,OAASkrC,EAAMnrC,SAAWorC,EAAMprC,QAG/GgkB,EAAKglB,UAAUxvB,UAAY,SAAUuK,GACjC,IAAIxZ,EAAQpG,KAAK+I,IAAIrN,OAAOwrC,MAAQ3jC,KAAK6C,OAAS7C,KAAKhJ,IAAMmB,OAAO8U,UAAYoP,EAAKxZ,MAAQ7C,KAAK6C,MAAOwZ,EAAKxZ,OAC1GC,EAASrG,KAAK+I,IAAIrN,OAAOwrC,MAAQ3jC,KAAK8C,QAAU9C,KAAK/I,IAAMkB,OAAO8U,UAAYoP,EAAKvZ,OAAS9C,KAAK8C,OAAQuZ,EAAKvZ,QAKlH,OAJA9C,KAAKhJ,EAAIyF,KAAKqK,IAAI9G,KAAK4C,KAAMyZ,EAAKzZ,MAClC5C,KAAK/I,EAAIwF,KAAKqK,IAAI9G,KAAK+C,IAAKsZ,EAAKtZ,KACjC/C,KAAKzH,MAAQsK,EAAQ7C,KAAKhJ,EAC1BgJ,KAAK1H,OAASwK,EAAS9C,KAAK/I,EACrB+I,MAGXsc,EAAKglB,UAAUsC,WAAa,SAAUjoC,GAClC,GAAIqE,KAAKhJ,IAAMmB,OAAO8U,UAGlB,OAFAjN,KAAKhJ,EAAI2E,EAAM3E,OACfgJ,KAAK/I,EAAI0E,EAAM1E,GAGnB,IAAID,EAAIyF,KAAKqK,IAAI9G,KAAK4C,KAAMjH,EAAM3E,GAC9BC,EAAIwF,KAAKqK,IAAI9G,KAAK+C,IAAKpH,EAAM1E,GAC7B4L,EAAQpG,KAAK+I,IAAIxF,KAAK6C,MAAOlH,EAAM3E,GACnC8L,EAASrG,KAAK+I,IAAIxF,KAAK8C,OAAQnH,EAAM1E,GACzC+I,KAAKhJ,EAAIA,EACTgJ,KAAK/I,EAAIA,EACT+I,KAAKzH,MAAQsK,EAAQ7C,KAAKhJ,EAC1BgJ,KAAK1H,OAASwK,EAAS9C,KAAK/I,GAahCqlB,EAAKglB,UAAUtb,QAAU,SAAUoa,GAK/B,OAJApgC,KAAKhJ,GAAKopC,EACVpgC,KAAK/I,GAAKmpC,EACVpgC,KAAKzH,OAAmB,EAAV6nC,EACdpgC,KAAK1H,QAAoB,EAAV8nC,EACRpgC,MAgBXsc,EAAKglB,UAAUuC,WAAa,SAAUxnB,GAClC,QAAIrc,KAAK6C,MAAQwZ,EAAKzZ,MAAQ5C,KAAK4C,KAAOyZ,EAAKxZ,OAAS7C,KAAK+C,IAAMsZ,EAAKvZ,QAAU9C,KAAK8C,OAASuZ,EAAKtZ,MAMzGuZ,EAAKglB,UAAU/c,aAAe,SAAUlI,GACpC,OAAOrc,KAAK4C,MAAQyZ,EAAKzZ,MAAQ5C,KAAK6C,OAASwZ,EAAKxZ,OAAS7C,KAAK+C,KAAOsZ,EAAKtZ,KAAO/C,KAAK8C,QAAUuZ,EAAKvZ,QAG7GwZ,EAAKglB,UAAU99B,cAAgB,SAAU7H,EAAOykC,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,GAC7BpgC,KAAK4C,KAAOw9B,GAAWzkC,EAAM3E,GAAKgJ,KAAK6C,MAAQu9B,GAAWzkC,EAAM3E,GAChEgJ,KAAK+C,IAAMq9B,GAAWzkC,EAAM1E,GAAK+I,KAAK8C,OAASs9B,GAAWzkC,EAAM1E,GAW3EqlB,EAAKyJ,SAAW,SAAUptB,GAEtB,IAAK,IADD0jB,EAAO,IAAIC,EACNzf,EAAK,EAAGC,EAAWnE,EAAQkE,EAAKC,EAASrG,OAAQoG,IAAM,CAC5D,IAAIjB,EAAKkB,EAASD,GAClBwf,EAAKunB,WAAWhoC,GAEpB,OAAOygB,GAGXC,EAAKwnB,MAAQ,IAAIxnB,EAAKnkB,OAAO8U,UAAW9U,OAAO4rC,UAAW,EAAG,GACtDznB,MpB9OX,SAAW/gB,GACPA,EAAYA,EAAsB,SAAI,GAAK,WAC3CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAqB,QAAI,GAAK,UAJ9C,CAKGA,gBAAgBA,mBAEnB,IAAID,GAAwB,WAexB,OAdA,SAAgBY,EAAKK,EAAKF,EAAKF,EAAKJ,EAASC,EAASH,GAClDmE,KAAK9D,IAAMA,EACX8D,KAAKzD,IAAMA,EACXyD,KAAK3D,IAAMA,EACX2D,KAAK7D,IAAMA,EACX6D,KAAKjE,QAAUA,EACfiE,KAAKhE,QAAUA,EAMfgE,KAAKnE,KAAOA,OqBZpB,SAAWkkC,GAEPA,EAAeA,EAAwB,QAAI,GAAK,UAEhDA,EAAeA,EAAuB,OAAI,GAAK,SAE/CA,EAAeA,EAAsB,MAAI,GAAK,QAE9CA,EAAeA,EAAwB,QAAI,GAAK,UARpD,CASGA,mBAAmBA,sBAetB,SAAWiE,GAEPA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAqC,oBAAI,GAAK,sBAE9DA,EAAgBA,EAAmC,kBAAI,GAAK,oBAE5DA,EAAgBA,EAA2B,UAAI,GAAK,YAEpDA,EAAgBA,EAAuC,sBAAI,GAAK,wBAEhEA,EAAgBA,EAAqC,oBAAI,GAAK,sBAE9DA,EAAgBA,EAA6B,YAAI,IAAM,cAEvDA,EAAgBA,EAA8B,aAAI,IAAM,eAExDA,EAAgBA,EAAqB,IAAI,IAAM,MAlBnD,CAmBGA,oBAAoBA,uBAqBvB,SAAWjS,GAEPA,EAAoBA,EAA0B,KAAI,GAAK,OAEvDA,EAAoBA,EAA0C,qBAAI,GAAK,uBAEvEA,EAAoBA,EAA0C,qBAAI,GAAK,uBAEvEA,EAAoBA,EAAqC,gBAAI,GAAK,kBAElEA,EAAoBA,EAAqC,gBAAI,IAAM,kBAEnEA,EAAoBA,EAAqC,gBAAI,IAAM,kBAEnEA,EAAoBA,EAAqC,gBAAI,IAAM,kBAEnEA,EAAoBA,EAAgC,WAAI,KAAO,aAE/DA,EAAoBA,EAAgC,WAAI,KAAO,aAE/DA,EAAoBA,EAAiC,YAAI,KAAO,cAEhEA,EAAoBA,EAAiC,YAAI,MAAQ,cAEjEA,EAAoBA,EAA4B,OAAI,MAAQ,SAE5DA,EAAoBA,EAAgC,WAAI,MAAQ,aAEhEA,EAAoBA,EAA6B,QAAI,MAAQ,UAE7DA,EAAoBA,EAA+B,UAAI,MAAQ,YAE/DA,EAAoBA,EAAyB,IAAI,OAAS,MAhC9D,CAiCGA,wBAAwBA,2BAwB3B,SAAW1e,GAEPA,EAAqBA,EAA2B,KAAI,GAAK,OAEzDA,EAAqBA,EAA6B,OAAI,GAAK,SAE3DA,EAAqBA,EAA6B,OAAI,GAAK,SAE3DA,EAAqBA,EAA2B,KAAI,GAAK,OAEzDA,EAAqBA,EAAoC,cAAI,IAAM,gBAEnEA,EAAqBA,EAAoC,cAAI,IAAM,gBAEnEA,EAAqBA,EAAuC,iBAAI,IAAM,mBAEtEA,EAAqBA,EAAgC,UAAI,KAAO,YAEhEA,EAAqBA,EAA+B,SAAI,KAAO,WAE/DA,EAAqBA,EAAqC,eAAI,KAAO,iBAErEA,EAAqBA,EAAsC,gBAAI,MAAQ,kBAEvEA,EAAqBA,EAAoC,cAAI,MAAQ,gBAErEA,EAAqBA,EAA8B,QAAI,MAAQ,UAE/DA,EAAqBA,EAAqC,eAAI,MAAQ,iBAEtEA,EAAqBA,EAAkC,YAAI,MAAQ,cAEnEA,EAAqBA,EAA+B,SAAI,OAAS,WAEjEA,EAAqBA,EAA8B,QAAI,OAAS,UAlCpE,CAmCGA,yBAAyBA,4BAe5B,SAAWH,GAEPA,EAAsBA,EAAgC,SAAI,GAAK,WAE/DA,EAAsBA,EAAuC,gBAAI,GAAK,kBAEtEA,EAAsBA,EAA8B,OAAI,GAAK,SAE7DA,EAAsBA,EAA4B,KAAI,IAAM,OAE5DA,EAAsBA,EAA8B,OAAI,IAAM,SAE9DA,EAAsBA,EAA8B,OAAI,IAAM,SAE9DA,EAAsBA,EAAmC,YAAI,KAAO,cAEpEA,EAAsBA,EAA4B,KAAI,GAAK,OAhB/D,CAiBGA,0BAA0BA,6BAmC7B,SAAWI,GAEPA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAwB,OAAI,GAAK,SAEjDA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAwB,OAAI,GAAK,SAEjDA,EAAgBA,EAAwB,OAAI,IAAM,SAElDA,EAAgBA,EAA+B,cAAI,IAAM,gBAEzDA,EAAgBA,EAAwB,OAAI,IAAM,SAElDA,EAAgBA,EAA2B,UAAI,KAAO,YAEtDA,EAAgBA,EAA4B,WAAI,KAAO,aAEvDA,EAAgBA,EAA4B,WAAI,KAAO,aAEvDA,EAAgBA,EAA4B,WAAI,MAAQ,aAExDA,EAAgBA,EAA2B,UAAI,MAAQ,YAEvDA,EAAgBA,EAAyB,QAAI,IAAM,UAEnDA,EAAgBA,EAAiC,gBAAI,MAAQ,kBAE7DA,EAAgBA,EAA4B,WAAI,MAAQ,aAExDA,EAAgBA,EAAiC,gBAAI,OAAS,kBAE9DA,EAAgBA,EAA6B,YAAI,OAAS,cAE1DA,EAAgBA,EAAiC,gBAAI,OAAS,kBAE9DA,EAAgBA,EAA4B,WAAI,QAAU,aAE1DA,EAAgBA,EAAiC,gBAAI,QAAU,kBAE/DA,EAAgBA,EAA6B,YAAI,QAAU,cAE3DA,EAAgBA,EAAwB,OAAI,SAAW,SAEvDA,EAAgBA,EAA6B,YAAI,SAAW,cAE5DA,EAAgBA,EAA4B,WAAI,UAAY,aAE5DA,EAAgBA,EAAyB,QAAI,SAAW,UAExDA,EAAgBA,EAAgC,eAAI,SAAW,iBAE/DA,EAAgBA,EAA0B,SAAI,SAAW,WAEzDA,EAAgBA,EAAyB,QAAI,SAAW,UAxD5D,CAyDGA,oBAAoBA,uBAiBvB,SAAW0e,GAEPA,EAAkBA,EAA0B,OAAI,GAAK,SAErDA,EAAkBA,EAAmC,gBAAI,GAAK,kBAE9DA,EAAkBA,EAAmC,gBAAI,GAAK,kBAE9DA,EAAkBA,EAAmC,gBAAI,IAAM,kBAE/DA,EAAkBA,EAA8B,WAAI,IAAM,aAE1DA,EAAkBA,EAAmC,gBAAI,IAAM,kBAE/DA,EAAkBA,EAA+B,YAAI,KAAO,cAE5DA,EAAkBA,EAAmC,gBAAI,KAAO,kBAEhEA,EAAkBA,EAA8B,WAAI,KAAO,aAE3DA,EAAkBA,EAAmC,gBAAI,MAAQ,kBAEjEA,EAAkBA,EAA+B,YAAI,MAAQ,cAE7DA,EAAkBA,EAA2B,QAAI,MAAQ,UAxB7D,CAyBGA,sBAAsBA,yBAqBzB,SAAWpc,GAEPA,EAAmBA,EAAyB,KAAI,GAAK,OAErDA,EAAmBA,EAA6B,SAAI,GAAK,WAEzDA,EAAmBA,EAA6B,SAAI,GAAK,WAEzDA,EAAmBA,EAA4B,QAAI,GAAK,UAExDA,EAAmBA,EAAoC,gBAAI,IAAM,kBAEjEA,EAAmBA,EAA8B,UAAI,IAAM,YAE3DA,EAAmBA,EAAiC,aAAI,IAAM,eAE9DA,EAAmBA,EAAyB,KAAI,IAAM,OAEtDA,EAAmBA,EAAyB,KAAI,KAAO,OAEvDA,EAAmBA,EAAyB,KAAI,KAAO,OAEvDA,EAAmBA,EAAwB,IAAI,KAAO,MAEtDA,EAAmBA,EAAiC,aAAI,KAAO,eAE/DA,EAAmBA,EAAmC,eAAI,MAAQ,iBAElEA,EAAmBA,EAA4B,QAAI,KAAO,UA5B9D,CA6BGA,uBAAuBA,0BAc1B,SAAWK,GAEPA,EAAaA,EAAmB,KAAI,GAAK,OAEzCA,EAAaA,EAA2B,aAAI,GAAK,eAEjDA,EAAaA,EAA6B,eAAI,GAAK,iBAEnDA,EAAaA,EAAsB,QAAI,GAAK,UAE5CA,EAAaA,EAAuB,SAAI,GAAK,WAE7CA,EAAaA,EAA6B,eAAI,IAAM,iBAEpDA,EAAaA,EAAsB,QAAI,GAAK,UAdhD,CAeGA,iBAAiBA,oBAOpB,SAAWguB,GAEPA,EAAUA,EAAgB,KAAI,GAAK,OAEnCA,EAAUA,EAAkB,OAAI,GAAK,SAJzC,CAKGA,cAAcA,iBAOjB,SAAWC,GAEPA,EAAWA,EAAmB,OAAI,GAAK,SAEvCA,EAAWA,EAAgB,IAAI,GAAK,MAJxC,CAKGA,eAAeA,kBAYlB,SAAWC,GAEPA,EAAaA,EAAmB,KAAI,GAAK,OAEzCA,EAAaA,EAAsB,QAAI,GAAK,UAE5CA,EAAaA,EAAmB,KAAI,GAAK,OAEzCA,EAAaA,EAAkB,IAAI,GAAK,MAExCA,EAAaA,EAAoB,MAAI,GAAK,QAV9C,CAWGA,iBAAiBA,oBA0EpB,SAAWC,GAEPA,EAAKA,EAAW,KAAI,MAAQ,OAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAc,QAAI,GAAK,UAE5BA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAQ,EAAI,IAAM,IAEvBA,EAAKA,EAAW,KAAI,IAAM,OAE1BA,EAAKA,EAAS,GAAI,IAAM,KAExBA,EAAKA,EAAY,MAAI,IAAM,QAE3BA,EAAKA,EAAW,KAAI,IAAM,OAE1BA,EAAKA,EAAa,OAAI,IAAM,SAE5BA,EAAKA,EAAY,MAAI,IAAM,QAE3BA,EAAKA,EAAa,OAAI,IAAM,SAE5BA,EAAKA,EAAe,SAAI,IAAM,WAE9BA,EAAKA,EAAU,IAAI,IAAM,MAEzBA,EAAKA,EAAW,KAAI,IAAM,OAE1BA,EAAKA,EAAa,OAAI,IAAM,SAE5BA,EAAKA,EAAU,IAAI,GAAK,MAExBA,EAAKA,EAAY,MAAI,IAAM,QAE3BA,EAAKA,EAAgB,UAAI,GAAK,YAE9BA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAS,GAAI,KAAO,KAEzBA,EAAKA,EAAU,IAAI,KAAO,MAE1BA,EAAKA,EAAU,IAAI,KAAO,MAE1BA,EAAKA,EAAU,IAAI,KAAO,MAE1BA,EAAKA,EAAW,KAAI,IAAM,OAE1BA,EAAKA,EAAW,KAAI,KAAO,OAE3BA,EAAKA,EAAY,MAAI,KAAO,QApIhC,CAqIGA,SAASA,YAYZ,SAAWjtB,GAEPA,EAAcA,EAAsB,OAAI,GAAK,SAE7CA,EAAcA,EAA4B,aAAI,GAAK,eAEnDA,EAAcA,EAA0B,WAAI,GAAK,aAEjDA,EAAcA,EAAwB,SAAI,IAAM,WAEhDA,EAAcA,EAAwB,SAAI,IAAM,WAEhDA,EAAcA,EAAqB,MAAI,IAAM,QAE7CA,EAAcA,EAAqB,MAAI,KAAO,QAdlD,CAeGA,kBAAkBA,qBAErB,SAAWktB,GACPA,EAAWA,EAAiB,KAAI,GAAK,OACrCA,EAAWA,EAAwB,YAAI,GAAK,cAC5CA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAA4B,gBAAI,GAAK,kBAEhDA,EAAWA,EAA4B,gBAAI,IAAM,kBAEjDA,EAAWA,EAA4B,gBAAI,IAAM,kBARrD,CASGA,eAAeA,kBAGlB,SAAWt9B,GACPA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAkB,IAAI,GAAK,MACxCA,EAAaA,EAAkB,IAAI,GAAK,MACxCA,EAAaA,EAAoB,MAAI,GAAK,QAC1CA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAmB,KAAI,GAAK,OAN7C,CAOGA,iBAAiBA,oBAMpB,SAAWu9B,GACPA,EAAaA,EAA+B,iBAAI,GAAK,mBACrDA,EAAaA,EAA2B,aAAI,GAAK,eACjDA,EAAaA,EAA6B,eAAI,GAAK,iBACnDA,EAAaA,EAA6B,eAAI,GAAK,iBACnDA,EAAaA,EAA8B,gBAAI,GAAK,kBACpDA,EAAaA,EAAyB,WAAI,GAAK,aAC/CA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAgC,kBAAI,GAAK,oBACtDA,EAAaA,EAAgC,kBAAI,GAAK,oBACtDA,EAAaA,EAA+B,iBAAI,GAAK,mBACrDA,EAAaA,EAAgC,kBAAI,IAAM,oBACvDA,EAAaA,EAAoB,MAAI,IAAM,QAC3CA,EAAaA,EAA0B,YAAI,IAAM,cACjDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAAwB,UAAI,IAAM,YAC/CA,EAAaA,EAAwB,UAAI,IAAM,YAC/CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAqC,uBAAI,IAAM,yBAC5DA,EAAaA,EAA4B,cAAI,IAAM,gBACnDA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAwB,UAAI,IAAM,YAvBnD,CAwBGA,iBAAiBA,oBAMpB,SAAW5vB,GAEPA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAAsB,KAAI,GAAK,OAE/CA,EAAgBA,EAA2B,UAAI,GAAK,YAEpDA,EAAgBA,EAA4B,WAAI,IAAM,aAV1D,CAWGA,oBAAoBA,uBAKvB,IAAW6vB,GAEX,mBAKWC,GAEX,kBAKWC,GAEX,8BCzwBIvkB,GAAgC,WAChC,SAASA,IAoBLlgB,KAAKwxB,OAAUx6B,EAAG,GAAKC,EAAG,IAI1B+I,KAAK0kC,QAAS,EAId1kC,KAAKkuB,SAAU,EAIfluB,KAAKjE,QAAU,EAIfiE,KAAKhE,QAAU,EAIfgE,KAAK3H,aAAe,EAIpB2H,KAAKuZ,eAAYtf,EAIjB+F,KAAKqd,cAAWpjB,EAIhB+F,KAAKoY,cAAWne,EAIhB+F,KAAKub,eAAYthB,EAIjB+F,KAAKzH,WAAQ0B,EAIb+F,KAAK1H,YAAS2B,EAId+F,KAAKqM,YAAc,EAInBrM,KAAK2C,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GASnD9C,KAAK8Y,oBAAsB,OAS3B9Y,KAAK6Y,kBAAoB,OAMzB7Y,KAAKgoB,aAAe,QAMpBhoB,KAAKyF,UAAYw+B,YAAUU,KAAOV,YAAUW,OAI5C5kC,KAAKE,OAAU+X,KAAM,QAASC,YAAa,QAASwU,QAAS,EAAGvU,YAAa,GAI7EnY,KAAK8d,YAAc,IAAIF,GAIvB5d,KAAK+N,WAAa,IAAI6P,GAItB5d,KAAKsM,gBAAkB,EAEvBtM,KAAK6kC,kBAAmB,EAIxB7kC,KAAK8kC,aAAc,EAInB9kC,KAAKwB,OAAS,IAAI8a,GAAK,EAAG,EAAG,EAAG,GAIhCtc,KAAKs4B,OAAS,KAIdt4B,KAAKu4B,YAAc,GAInBv4B,KAAK+kC,YAAa,EAIlB/kC,KAAKglC,eAAgB,EAErBhlC,KAAKmgB,wBAAyB,EAE9BngB,KAAKK,cAAWpG,EAChB+F,KAAKilC,cAAWhrC,EAEhB+F,KAAKklC,OAAQ,EACbllC,KAAKmlC,oBAAiBlrC,EA+G1B,OApGAimB,EAAeohB,UAAU8D,6BAA+B,SAAUpuC,EAAGC,EAAG20B,GACpE5rB,KAAKilC,SAAWrZ,EAChB5rB,KAAKK,UAAarJ,EAAGA,EAAGC,EAAGA,IAM/BipB,EAAeohB,UAAU+D,oBAAsB,SAAU9T,GACrD,QAAsBt3B,IAAlB+F,KAAKK,SACL,MAAsB,aAAlBL,KAAKilC,SACEjlC,KAAKK,UAIRrJ,EAAGgJ,KAAKK,SAASrJ,EAAIu6B,EAAKh5B,MAAOtB,EAAG+I,KAAKK,SAASpJ,EAAIs6B,EAAKj5B,SAM3EqkB,OAAO8lB,eAAeviB,EAAeohB,UAAW,eAC5CgC,IAAK,WACD,OAAOtjC,KAAKmlC,gBAAkBnlC,KAAKwB,QAMvC8jC,IAAK,SAAU9jC,GACXxB,KAAKmlC,eAAiB3jC,GAE1B+hC,YAAY,EACZC,cAAc,IAMlBtjB,EAAeohB,UAAU3jB,QAAU,SAAU4nB,GACzC,IAAIhtC,OAAuB0B,IAAf+F,KAAKzH,MAAsByH,KAAKzH,OAASgtC,EAAchtC,OAAS,GAAKyH,KAAK2C,OAAOC,KAAO5C,KAAK2C,OAAOE,MAC5GvK,OAAyB2B,IAAhB+F,KAAK1H,OAAuB0H,KAAK1H,QAAUitC,EAAcjtC,QAAU,GAAK0H,KAAK2C,OAAOI,IAAM/C,KAAK2C,OAAOG,OAKnH,OAJA9C,KAAK8d,YAAc,IAAIF,GAAKrlB,EAAOD,GAC/B0H,KAAKmgB,yBACLngB,KAAK8d,YAAc9d,KAAKwlC,oBAAoBxlC,KAAK8d,YAAaynB,IAE3DvlC,KAAK8d,aAMhBoC,EAAeohB,UAAUzjB,QAAU,SAAUC,GAGzC,OAFA9d,KAAK+N,WAAa+P,EAClB9d,KAAKylC,eACEzlC,KAAK+N,YAKhBmS,EAAeohB,UAAUmE,aAAe,WACpCzlC,KAAKwB,OAAS4mB,GAAUpoB,OAO5BkgB,EAAeohB,UAAUkE,oBAAsB,SAAU1nB,EAAaynB,GA8BlE,OA5BIvlC,KAAKglC,eAAkBhlC,KAAKzH,OAAUyH,KAAKqd,UAAard,KAAKoY,WAC7D0F,EAAYvlB,MAAQ,KAEpByH,KAAKglC,eAAkBhlC,KAAK1H,QAAW0H,KAAKuZ,WAAcvZ,KAAKub,YAC/DuC,EAAYxlB,OAAS,UAEL2B,IAAhB6jB,QAA4C7jB,IAAf+F,KAAKzH,YAClB0B,IAAhB+F,KAAK1H,WACLwlB,EAAcA,GAAe,IAAIF,IACrBrlB,WAAuB0B,IAAf+F,KAAKzH,OAAuBgtC,EAAchtC,OAAS,GACjEyH,KAAK2C,OAAOC,KAAO5C,KAAK2C,OAAOE,MAAQ7C,KAAKzH,MAClDulB,EAAYxlB,YAAyB2B,IAAhB+F,KAAK1H,QAAwBitC,EAAcjtC,QAAU,GACpE0H,KAAK2C,OAAOI,IAAM/C,KAAK2C,OAAOG,OAAS9C,KAAK1H,aAGhC2B,IAAlB+F,KAAKqd,WACLS,EAAYvlB,MAAQkE,KAAK+I,IAAIsY,EAAYvlB,MAAOyH,KAAKqd,gBAElCpjB,IAAnB+F,KAAKuZ,YACLuE,EAAYxlB,OAASmE,KAAK+I,IAAIsY,EAAYxlB,OAAQ0H,KAAKuZ,iBAGrCtf,IAAlB+F,KAAKoY,WACL0F,EAAYvlB,MAAQkE,KAAKqK,IAAIgX,EAAYvlB,MAAOyH,KAAKoY,gBAElCne,IAAnB+F,KAAKub,YACLuC,EAAYxlB,OAASmE,KAAKqK,IAAIgX,EAAYxlB,OAAQ0H,KAAKub,YAEpDuC,GAEJoC,KC/QPuhB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAI5Ds4B,GAAkB,SAAUnrC,GAC5B,OAAQA,EAAIsB,MACR,IAAK,SACD,OAAO8pC,GACX,IAAK,SACD,OAAOC,GACX,QACI,OAAOD,KAMfE,GAA2B,WAO3B,OANA,SAAmBjjC,EAAMC,EAAOE,EAAKD,GACjC9C,KAAK4C,KAAOA,EACZ5C,KAAK6C,MAAQA,EACb7C,KAAK+C,IAAMA,EACX/C,KAAK8C,OAASA,MAQlBgjC,GAAwB,SAAUpD,GAElC,SAASoD,IACL,OAAkB,OAAXpD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAUqE,EAAQpD,GAIlBT,IACImB,WAAS,IACV0C,EAAOxE,UAAW,YAAQ,GAC7BW,IACImB,WAAS,IACV0C,EAAOxE,UAAW,aAAS,GAC9BW,IACImB,WAAS,IACV0C,EAAOxE,UAAW,WAAO,GAC5BW,IACImB,WAAS,IACV0C,EAAOxE,UAAW,cAAU,GACxBwE,GACTzC,iBAoBEhvB,GAAwB,SAAUquB,GAElC,SAASruB,IACL,OAAkB,OAAXquB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAUptB,EAAQquB,GAIlBT,IACImB,WAAS,KACV/uB,EAAOitB,UAAW,aAAS,GAC9BW,IACImB,WAAS,IACV/uB,EAAOitB,UAAW,gBAAY,GACjCW,IACImB,WAAS,KACV/uB,EAAOitB,UAAW,eAAW,GAChCW,IACImB,WAAS,cACV/uB,EAAOitB,UAAW,aAAS,GACvBjtB,GACTgvB,iBAyBE0C,GAAsB,SAAUrD,GAEhC,SAASqD,IACL,OAAkB,OAAXrD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUsE,EAAMrD,GAIhBT,IACImB,WAAS,KACV2C,EAAKzE,UAAW,aAAS,GAC5BW,IACImB,WAAS,IACV2C,EAAKzE,UAAW,cAAU,GAC7BW,IACImB,WAAS,IACV2C,EAAKzE,UAAW,eAAW,GACvByE,GACT1C,iBAKE2C,GAA0B,SAAUtD,GAEpC,SAASsD,IACL,OAAkB,OAAXtD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUuE,EAAUtD,GAIpBT,IACIgE,gBAAeF,KAChBC,EAAS1E,UAAW,aAAS,GAChCW,IACImB,WAAS,SACV4C,EAAS1E,UAAW,YAAQ,GAC/BW,IACImB,WAAS,KACV4C,EAAS1E,UAAW,UAAM,GACtB0E,GACT3C,iBA4BEsC,GAAgC,SAAUjD,GAE1C,SAASiD,IACL,OAAkB,OAAXjD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAUkE,EAAgBjD,GAI1BT,IACImB,WAAS,IACVuC,EAAerE,UAAW,UAAM,GACnCW,IACImB,WAAS,IACVuC,EAAerE,UAAW,UAAM,GACnCW,IACImB,WAAS,IACVuC,EAAerE,UAAW,UAAM,GACnCW,IACImB,WAAS,IACVuC,EAAerE,UAAW,UAAM,GAC5BqE,GACTK,IAyBEJ,GAAgC,SAAUlD,GAE1C,SAASkD,IACL,OAAkB,OAAXlD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAiB/D,OAnBAyhC,GAAUmE,EAAgBlD,GAI1BT,IACImB,WAAS,IACVwC,EAAetE,UAAW,UAAM,GACnCW,IACImB,WAAS,IACVwC,EAAetE,UAAW,UAAM,GACnCW,IACImB,WAAS,IACVwC,EAAetE,UAAW,UAAM,GACnCW,IACImB,WAAS,IACVwC,EAAetE,UAAW,UAAM,GACnCW,IACImB,WAAS,KACVwC,EAAetE,UAAW,SAAK,GAC3BsE,GACTI,IAKEE,GAA4B,SAAUxD,GAEtC,SAASwD,IACL,OAAkB,OAAXxD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAoB/D,OAtBAyhC,GAAUyE,EAAYxD,GAItBT,IACImB,WAAS,UACV8C,EAAW5E,UAAW,YAAQ,GACjCW,IACImB,WAAS,UACV8C,EAAW5E,UAAW,mBAAe,GACxCW,IACImB,WAAS,KACV8C,EAAW5E,UAAW,uBAAmB,GAC5CW,IACImB,WAAS,IACV8C,EAAW5E,UAAW,mBAAe,GACxCW,IACImB,WAAS,IACV8C,EAAW5E,UAAW,eAAW,GACpCW,IACIkE,iBAAeT,KAChBQ,EAAW5E,UAAW,gBAAY,GAC9B4E,GACT7C,iBAKE7W,GAA6B,SAAUkW,GAEvC,SAASlW,IACL,OAAkB,OAAXkW,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAK/D,OAPAyhC,GAAUjV,EAAakW,GAIvBT,IACImB,WAAS,gBACV5W,EAAY8U,UAAW,YAAQ,GAC3B9U,GACT0Z,IAyBEE,GAA2B,SAAU1D,GAErC,SAAS0D,IACL,OAAkB,OAAX1D,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAmC/D,OArCAyhC,GAAU2E,EAAW1D,GAIrBT,IACImB,WAAS,UACVgD,EAAU9E,UAAW,aAAS,GACjCW,IACImB,WAAS,UACVgD,EAAU9E,UAAW,kBAAc,GACtCW,IACImB,WAAS,KACVgD,EAAU9E,UAAW,gBAAY,GACpCW,IACImB,YAAS,IACVgD,EAAU9E,UAAW,cAAU,GAClCW,IACImB,YAAS,IACVgD,EAAU9E,UAAW,YAAQ,GAChCW,IACImB,WAAS,kBACVgD,EAAU9E,UAAW,kBAAc,GACtCW,IACImB,WAAS,qBACVgD,EAAU9E,UAAW,oBAAgB,GACxCW,IACImB,WAAS,WACVgD,EAAU9E,UAAW,iBAAa,GACrCW,IACImB,WAAS,SACVgD,EAAU9E,UAAW,sBAAkB,GAC1CW,IACImB,WAAS,SACVgD,EAAU9E,UAAW,oBAAgB,GACxCW,IACImB,WAAS,gBACVgD,EAAU9E,UAAW,YAAQ,GACzB8E,GACTF,IC1WEzE,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAqBxC5O,GAA2B,SAAUwP,GAErC,SAASxP,IACL,IAAImT,EAAmB,OAAX3D,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAWhE,OAPAqmC,EAAMjG,QAAU,IAAIyF,GAAU,EAAG,EAAG,EAAG,GAEvCQ,EAAMC,mBAAgBrsC,EAEtBosC,EAAME,iBAAkB,EAExBF,EAAMG,gBAAkB,EACjBH,EA2LX,OAxMA5E,GAAUvO,EAAWwP,GAkBrBxP,EAAUoO,UAAUmF,YAAc,WAC9B,YAAsBxsC,IAAlB+F,KAAK4R,UAA0B5R,KAAK4R,SAASnb,OAAS,GAU9Dy8B,EAAUoO,UAAU3jB,QAAU,SAAU4nB,GAEpCvlC,KAAKsmC,mBAAgBrsC,EACrB,IACI2T,EAIA84B,EALAC,OAAU1sC,EAMd,GAAI+F,KAAKymC,cAAe,CAEpB,IAAK,IAAI/vC,EAAI,EAAGA,EAAIsJ,KAAK4R,SAASnb,OAAQC,IAAK,CAET,aADlCkX,EAAQ5N,KAAK4R,SAASlb,IACZoiB,qBAAsCysB,EAAchtC,QAC1DgtC,EAAchtC,MAAQqV,EAAMpM,OAAOjJ,OAEP,YAA5BqV,EAAMiL,mBAAoC0sB,EAAcjtC,SACxDitC,EAAcjtC,OAASsV,EAAMpM,OAAOlJ,QAExC,IAAIsuC,EAAsC,YAA9Bh5B,EAAMkL,qBAAiE,YAA5BlL,EAAMiL,mBACzD7Y,KAAKumC,iBAAmBK,GAAUh5B,aAAiBslB,QAAuCj5B,IAA1B2T,EAAM24B,kBACtE34B,EAAM+P,QAAQ4nB,GAElBmB,EAAc1mC,KAAK6mC,kBAAkBj5B,GACH,YAA9BA,EAAMkL,qBAAiE,YAA5BlL,EAAMiL,uBACtB5e,IAAvB+F,KAAKsmC,cACLtmC,KAAKsmC,cAAgBI,EAGrB1mC,KAAKsmC,cAAcx0B,UAAU40B,IAG5B1mC,KAAK+N,YAAe/N,KAAK+N,WAAWxV,OAAUyH,KAAK+N,WAAWzV,QAClEsV,EAAMi3B,kBAAkD,YAA9Bj3B,EAAMkL,qBAAiE,YAA5BlL,EAAMiL,yBACjD5e,IAAvB+F,KAAKsmC,cACLtmC,KAAKsmC,cAAgB14B,EAAMpM,OAG3BxB,KAAKsmC,cAAcx0B,UAAUlE,EAAMpM,SAI/C,QAA2BvH,IAAvB+F,KAAKsmC,eAAoD,IAArBtmC,KAAKqM,YAAmB,CAC5D,IAAIy6B,GACA9vC,EAAGgJ,KAAKsmC,cAActvC,EAAIgJ,KAAKsmC,cAAc/tC,MAAQyH,KAAKwxB,MAAMx6B,EAChEC,EAAG+I,KAAKsmC,cAAcrvC,EAAI+I,KAAKsmC,cAAchuC,OAAS0H,KAAKwxB,MAAMv6B,GAEjE8vC,EAAW94B,GAAYjO,KAAKqM,iBAAapS,OAAWA,EAAW6sC,GACnE9mC,KAAKsmC,cAActvC,EAAI+vC,EAAS/vC,EAAIgJ,KAAKsmC,cAAc/tC,MAAQyH,KAAKwxB,MAAMx6B,EAC1EgJ,KAAKsmC,cAAcrvC,EAAI8vC,EAAS9vC,EAAI+I,KAAKsmC,cAAchuC,OAAS0H,KAAKwxB,MAAMv6B,EAE3E+I,KAAKsmC,gBACLK,EAAU,IAAI/oB,GAAK5d,KAAKsmC,cAAc/tC,MAAOyH,KAAKsmC,cAAchuC,SAMxE,OAHAquC,EAAU3mC,KAAKwlC,oBAAoBmB,EAASpB,GAC5CvlC,KAAKgnC,gBAAgBL,GACrB3mC,KAAK8d,YAAc6oB,EACZA,GAMXzT,EAAUoO,UAAUzjB,QAAU,SAAUC,GACpC,IAAIlQ,EAEA84B,EAAc1mC,KAAKsmC,cACvB,GAAII,EAAa,CACL1mC,KAAKjE,QACLiE,KAAKhE,QAIb,GAHAgE,KAAKjE,QAAU2qC,EAAY1vC,EAAI0vC,EAAYnuC,MAAQyH,KAAKwxB,MAAMx6B,EAC9DgJ,KAAKhE,QAAU0qC,EAAYzvC,EAAIyvC,EAAYpuC,OAAS0H,KAAKwxB,MAAMv6B,EAE3D+I,KAAKymC,cAEL,IAAK,IAAI/vC,EAAI,EAAGA,EAAIsJ,KAAK4R,SAASnb,OAAQC,IAAK,CAE3C,IAAImnB,GAAU,EACoB,aAFlCjQ,EAAQ5N,KAAK4R,SAASlb,IAEZoiB,sBACNlL,EAAM7R,QAAUiE,KAAKjE,QACrB6R,EAAMtB,gBAAkBtM,KAAKsM,gBAAkBtM,KAAKqM,YACpDwR,GAAU,GAEkB,YAA5BjQ,EAAMiL,oBACNjL,EAAM5R,QAAUgE,KAAKhE,QACrB4R,EAAMtB,gBAAkBtM,KAAKsM,gBAAkBtM,KAAKqM,YACpDwR,GAAU,IAEVA,GAAW7d,KAAKumC,iBAAoB34B,aAAiBslB,QAAuCj5B,IAA1B2T,EAAM24B,kBACxE34B,EAAMiQ,QAAQjQ,EAAMkQ,cAQpC,OAHA9d,KAAK+N,WAAa+P,EAClB9d,KAAKylC,eACLzlC,KAAKwmC,gBAAkBxmC,KAAKqM,YACrByR,GAOXoV,EAAUoO,UAAU0F,gBAAkB,SAAUzV,GAC5C,GAAIvxB,KAAKymC,cACL,IAAK,IAAI5pC,EAAK,EAAG6f,EAAK1c,KAAK4R,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAI+Q,EAAQ8O,EAAG7f,GACmB,YAA9B+Q,EAAMkL,0BAAiE7e,IAA5B2T,EAAMkQ,YAAYvlB,QAC7DqV,EAAMkQ,YAAYvlB,MAAQg5B,EAAKh5B,MAAQqV,EAAMjL,OAAOC,KAAOgL,EAAMjL,OAAOE,OAE5C,YAA5B+K,EAAMiL,wBAAgE5e,IAA7B2T,EAAMkQ,YAAYxlB,SAC3DsV,EAAMkQ,YAAYxlB,OAASi5B,EAAKj5B,OAASsV,EAAMjL,OAAOI,IAAM6K,EAAMjL,OAAOG,QAEzE8K,aAAiBslB,GACjBtlB,EAAMo5B,gBAAgBp5B,EAAMkQ,eAS5CoV,EAAUoO,UAAU2F,aAAe,SAAU1V,GACzCA,EAAKh5B,OAASyH,KAAKogC,QAAQx9B,KAAO5C,KAAKogC,QAAQv9B,MAC/C0uB,EAAKj5B,QAAU0H,KAAKogC,QAAQr9B,IAAM/C,KAAKogC,QAAQt9B,QAOnDowB,EAAUoO,UAAU4F,0BAA4B,SAAUt5B,EAAO3M,GAC7D,IACIyO,EAASwuB,IADGlnC,EAAGiK,EAAOjK,EAAI4W,EAAMkQ,YAAYvlB,MAAQ,EAAGtB,EAAGgK,EAAOhK,EAAI2W,EAAMkQ,YAAYxlB,OAAS,GACpEsV,GAEhC8B,EAASzB,GAAYL,EAAMvB,YAAapL,EAAOjK,EAAGiK,EAAOhK,EAAGyY,GAE5DA,EAASzB,GAAYjO,KAAKqM,YAAcrM,KAAKsM,gBAAiBtM,KAAKjE,QAASiE,KAAKhE,QAAS0T,GAC1F9B,EAAM7R,QAAU2T,EAAO1Y,EACvB4W,EAAM5R,QAAU0T,EAAOzY,GAG3Bi8B,EAAUoO,UAAUuF,kBAAoB,SAAUj5B,GAC9C,IACIu5B,EACJA,EAAYv5B,EAAMkQ,YAAY0jB,QACd5zB,EAAMvB,YAAcrM,KAAKqM,YAAzC,IACIxI,EAAgB+J,EAAM7R,QAAtB8H,EAAkC+J,EAAM5R,QACxC4G,EAAOiB,EAAasjC,EAAU5uC,MAAQqV,EAAM4jB,MAAMx6B,EAClD+L,EAAMc,EAAasjC,EAAU7uC,OAASsV,EAAM4jB,MAAMv6B,EAClD4L,EAAQD,EAAOukC,EAAU5uC,MACzBuK,EAASC,EAAMokC,EAAU7uC,OACzBiU,GAAYvV,EAAG4L,EAAM3L,EAAG8L,GACxByJ,GAAaxV,EAAG6L,EAAO5L,EAAG8L,GAC1BkF,GAAejR,EAAG4L,EAAM3L,EAAG6L,GAC3BwF,GAAgBtR,EAAG6L,EAAO5L,EAAG6L,GAWjC,OAVAyJ,EAAU0B,GAAYL,EAAMvB,YAAauB,EAAM7R,QAAS6R,EAAM5R,QAASuQ,GACvEC,EAAWyB,GAAYL,EAAMvB,YAAauB,EAAM7R,QAAS6R,EAAM5R,QAASwQ,GACxEvE,EAAagG,GAAYL,EAAMvB,YAAauB,EAAM7R,QAAS6R,EAAM5R,QAASiM,GAC1EK,EAAc2F,GAAYL,EAAMvB,YAAauB,EAAM7R,QAAS6R,EAAM5R,QAASsM,GAClD,IAArBtI,KAAKqM,cACLE,EAAU0B,IAAajO,KAAKqM,iBAAapS,OAAWA,EAAWsS,GAC/DC,EAAWyB,IAAajO,KAAKqM,iBAAapS,OAAWA,EAAWuS,GAChEvE,EAAagG,IAAajO,KAAKqM,iBAAapS,OAAWA,EAAWgO,GAClEK,EAAc2F,IAAajO,KAAKqM,iBAAapS,OAAWA,EAAWqO,IAEhEgU,GAAKyJ,UAAUxZ,EAASC,EAAUvE,EAAYK,KAElD4qB,GACThT,IC/NEuhB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAqBxCzzB,GAA6B,SAAUq0B,GAKvC,SAASr0B,IACL,IAAIg4B,EAAQ3D,EAAO0E,KAAKpnC,OAASA,KAkBjC,OAdAqmC,EAAM1nC,SAAW,GAIjB0nC,EAAM7sC,eAAgB,EAItB6sC,EAAMgB,aAAe,GAErBhB,EAAMpV,gBAAiB,EAGvBoV,EAAM5Q,eAAiB,IAAInZ,GACpB+pB,EAyGX,OAhIA5E,GAAUpzB,EAAaq0B,GAyBvB/lB,OAAO8lB,eAAep0B,EAAYizB,UAAW,QAIzCgC,IAAK,WACD,OAAOtjC,KAAKrB,UAKhB2mC,IAAK,SAAU//B,GACPvF,KAAKrB,WAAa4G,IAClBvF,KAAKrB,SAAW4G,EAChBvF,KAAK0kC,QAAS,IAGtBnB,YAAY,EACZC,cAAc,IAGlBn1B,EAAYizB,UAAUt1B,UAAY,WAC9B,IAAIq6B,EAAQrmC,KAQZ,OAPKA,KAAKsnC,aACNtnC,KAAKsnC,WAAaC,WAAW,WACzBlB,EAAM1tC,OAAS,KACf0tC,EAAMiB,WAAa,MACpB,MAEPtnC,KAAKrH,OAASqH,KAAKrH,QAAUm8B,GAAkB90B,MZ5BvD,SAAgCJ,EAASjH,GAErC,IAAK,IADD6uC,KACK3qC,EAAK,EAAGC,EAAWnE,EAAQkE,EAAKC,EAASrG,OAAQoG,IAAM,CAC5D,IAAIlB,EAAQmB,EAASD,GACjBkmC,GACA/rC,EAAG4I,EAAQ7D,QAAU6D,EAAQmO,WAAWxV,MAAQqH,EAAQ4xB,MAAMx6B,EAAI2E,EAAM3E,EACxEC,EAAG2I,EAAQ5D,QAAU4D,EAAQmO,WAAWzV,OAASsH,EAAQ4xB,MAAMv6B,EAAI0E,EAAM1E,GAEzEyE,OAAS,EACTlE,EAAQoI,EAAQyM,YAAczM,EAAQ0M,gBACtC9U,GAEAuF,EADArB,EAASL,IACY7D,EAAOoI,EAAQ7D,QAAS6D,EAAQ5D,SAErDN,IACAqnC,EAAMtnC,EAAuBC,EAAQqnC,IAEzCyE,EAAc1wC,KAAKisC,GAEvB,OAAOyE,EYUIC,CAAgBznC,KAAMA,KAAKrH,SAMtC0V,EAAYizB,UAAU3jB,QAAU,SAAU4nB,GAqBtC,OAnBIvlC,KAAK+kC,iBAA6B9qC,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,OACpD0H,KAAKy1B,eAAiB,IAAInZ,GAAKtc,KAAKjE,QAAUiE,KAAKzH,MAAQyH,KAAKwxB,MAAMx6B,EAAGgJ,KAAKhE,QAAUgE,KAAK1H,OAAS0H,KAAKwxB,MAAMv6B,EAAG+I,KAAKzH,MAAOyH,KAAK1H,UAEhI0H,KAAK0kC,SAAW1kC,KAAKxG,oBAAiCS,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,QACxE0H,KAAKy1B,gBAAiD,IAA/Bz1B,KAAKy1B,eAAen9B,UAAiB0H,KAAKixB,iBAEtEjxB,KAAKy1B,eAAiBQ,GAAYj2B,KAAK5J,KAAO4J,KAAK5J,KAAO,UAE3C6D,IAAf+F,KAAKzH,MACLyH,KAAK8d,YAAc,IAAIF,GAAK5d,KAAKy1B,eAAel9B,MAAOyH,KAAK1H,QAAU0H,KAAKy1B,eAAen9B,aAErE2B,IAAhB+F,KAAK1H,OACV0H,KAAK8d,YAAc,IAAIF,GAAK5d,KAAKzH,OAASyH,KAAKy1B,eAAel9B,MAAOyH,KAAKy1B,eAAen9B,QAGzF0H,KAAK8d,YAAc,IAAIF,GAAK5d,KAAKzH,MAAOyH,KAAK1H,QAEjD0H,KAAK8d,YAAc9d,KAAKwlC,oBAAoBxlC,KAAK8d,YAAaynB,GAC9DvlC,KAAKixB,gBAAiB,EACfjxB,KAAK8d,aAMhBzP,EAAYizB,UAAUzjB,QAAU,SAAUC,GAWtC,OAVI9d,KAAK0kC,QAAU1kC,KAAK+N,WAAWxV,QAAUulB,EAAYvlB,OAASyH,KAAK+N,WAAWzV,SAAWwlB,EAAYxlB,UACrG0H,KAAK0kC,QAAS,EACd1kC,KAAKqnC,aAAernC,KAAKw1B,WAAWx1B,KAAK5J,KAAM4J,KAAKy1B,eAAgB3X,GAC/D9d,KAAK+kC,aACN/kC,KAAKrH,OAAS,OAGtBqH,KAAK+N,WAAa/N,KAAK8d,YACvB9d,KAAKylC,eACLzlC,KAAK0kC,QAAS,EACP1kC,KAAK+N,YAQhBM,EAAYizB,UAAU9L,WAAa,SAAU72B,EAAU6C,EAAQuM,GAC3D,IAAIvT,GAAU,EACV+6B,EAAgB,GAChB73B,GAAU8D,EAAOxK,EACjB2G,GAAU6D,EAAOvK,EACjBV,KAeJ,OAdIwX,EAAWxV,QAAUiJ,EAAOjJ,OAASwV,EAAWzV,SAAWkJ,EAAOlJ,SAClEoF,EAASqQ,EAAWxV,MAAQJ,OAAOqJ,EAAOjJ,MAAQiJ,EAAOjJ,MAAQ,GACjEoF,EAASoQ,EAAWzV,OAASH,OAAOqJ,EAAOlJ,OAASkJ,EAAOlJ,OAAS,GACpEkC,GAAU,GAEdjE,EAAkBJ,EAAgBwI,GAClCpI,EAAkBsE,EAAqBtE,GAEnCg/B,GADC/6B,GAAWwF,KAAK0kC,SAAW1kC,KAAKxG,cACjBA,EAAcjD,EAAiBmH,EAAQC,EAAQnD,EAASgH,EAAOxK,EAAGwK,EAAOvK,EAAG,EAAG,GAG/EoD,EAAc9D,GAElCiE,GAAU,EACH+6B,GAEJlnB,GACT6R,ICvJEuhB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAmBxC/S,GAAsC,SAAU2T,GAKhD,SAAS3T,EAAqBsF,EAAQN,GAClC,IAAIsS,EAAQ3D,EAAO0E,KAAKpnC,OAASA,KAgBjC,OAfAqmC,EAAMjwC,KAAO,GAIbiwC,EAAMhS,OAAS,GAIfgS,EAAMtS,UAAY,GAIlBsS,EAAMhrB,MAAQ,UACdgrB,EAAMtS,UAAYA,EAClBsS,EAAMhS,OAASA,EACRgS,EAoDX,OAzEA5E,GAAU1S,EAAsB2T,GAuBhC/lB,OAAO8lB,eAAe1T,EAAqBuS,UAAW,WAElDgC,IAAK,WACD,OAAOtjC,KAAK5J,MAKhBkvC,IAAK,SAAU//B,GACXvF,KAAK5J,KAAOmP,EACZvF,KAAK0nC,SAAWlY,GAAWxvB,MAAM,GACjCA,KAAK0kC,QAAS,GAElBnB,YAAY,EACZC,cAAc,IAMlBzU,EAAqBuS,UAAU3jB,QAAU,SAAU4nB,GAC/C,GAAIvlC,KAAK0kC,OAAQ,CACb,IAAIroB,EbuOhB,SAAqCyS,GACjC,IAAImG,EAAiB,iBACrBC,OAAOD,GAAgB/0B,MAAMkyB,WAAa,UAC1C,IAAIuV,EAAYzS,OAAOD,GAAgBrjB,SAAS,GAChD+1B,EAAUpY,YAAYT,GACtB,IAAIttB,EAASstB,EAAcjH,wBACvBuO,EAAYuR,EAAU9f,wBACtBxL,EAAO7a,EAKX,OAJA6a,EAAKrlB,EAAIwK,EAAOoB,KAAOwzB,EAAUxzB,KACjCyZ,EAAKplB,EAAIuK,EAAOuB,IAAMqzB,EAAUrzB,IAChC4kC,EAAUrY,YAAYR,GACtBoG,OAAOD,GAAgB/0B,MAAMkyB,WAAa,SACnC/V,EanPYurB,CAAqB5nC,KAAK0nC,UACrC1nC,KAAK6nC,YAAc,IAAIjqB,GACvB5d,KAAK6nC,YAAYtvC,MAAQ8jB,EAAK9jB,MAC9ByH,KAAK6nC,YAAYvvC,OAAS+jB,EAAK/jB,OAC/B,IAAItB,EAAIqlB,EAAKrlB,EACTC,EAAIolB,EAAKplB,EACb+I,KAAK8nC,kBAAqB9wC,EAAGA,EAAGC,EAAGA,GACnC+I,KAAK0kC,QAAS,EAElB,QAAmBzqC,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,OAAsB,CACvD,IAAIyvC,Eb8OhB,SAAiCjZ,GAC7B,IAAImG,EAAiB,iBACrBC,OAAOD,GAAgB/0B,MAAMkyB,WAAa,UAC1C,IAAIuV,EAAYzS,OAAOD,GAAgBrjB,SAAS,GAChD+1B,EAAUpY,YAAYT,GACtB,IAAIsH,EAAYuR,EAAU9f,wBAG1B,OAFA8f,EAAUrY,YAAYR,GACtBoG,OAAOD,GAAgB/0B,MAAMkyB,WAAa,SACnCgE,EatPwB4R,CAAiBhoC,KAAK0nC,UAC7C1nC,KAAK8d,YAAc,IAAIF,GAAKmqB,EAAiBxvC,MAAOwvC,EAAiBzvC,aAGrE0H,KAAK8d,YAAc,IAAIF,GAAK5d,KAAKzH,MAAOyH,KAAK1H,QAGjD,OADA0H,KAAK8d,YAAc9d,KAAKwlC,oBAAoBxlC,KAAK8d,YAAaynB,GACvDvlC,KAAK8d,aAMhBiR,EAAqBuS,UAAUzjB,QAAU,SAAUC,GAG/C,OAFA9d,KAAK+N,WAAa,IAAI6P,GAAK5d,KAAK8d,YAAYvlB,MAAOyH,KAAK8d,YAAYxlB,QACpE0H,KAAKylC,eACEzlC,KAAK+N,YAETghB,GACT7O,IC9FEuhB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAmBxCpU,GAA6B,SAAUgV,GAKvC,SAAShV,IACL,IAAI2Y,EAAQ3D,EAAO0E,KAAKpnC,OAASA,KA4BjC,OAxBAqmC,EAAM7O,YAAc,GAEpB6O,EAAM4B,YAAa,EAInB5B,EAAMvY,WACFpV,MAAO,QAGX2tB,EAAM7N,QAAS,EACf6N,EAAM6B,aAIN7B,EAAMnmC,OACFwY,MAAO,QAAST,KAAM,cAAeC,YAAa,QAClDC,YAAa,EAAGwU,WAAY,QAASlU,SAAU,GAAIqU,WAAY,gBAC/DnU,aAAc,mBAAoBkU,UAAW,SAAUD,QAAQ,EAAOpU,MAAM,EAC5EuU,eAAgB,OAAQzP,gBAAiB,GAAIoP,QAAS,EAAGe,SAAU,KACnEhB,aAAc,QAElB4Z,EAAMnmC,MAAM+X,KAAO,cACnBouB,EAAMnmC,MAAMgY,YAAc,cACnBmuB,EA4FX,OA7HA5E,GAAU/T,EAAagV,GAmCvB/lB,OAAO8lB,eAAe/U,EAAY4T,UAAW,WAIzCgC,IAAK,WACD,OAAOtjC,KAAKw3B,aAKhB8N,IAAK,SAAU//B,GACPvF,KAAKw3B,cAAgBjyB,IACrBvF,KAAKw3B,YAAcjyB,EACnBvF,KAAK0kC,QAAS,EACd1kC,KAAKw4B,QAAS,IAGtB+K,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAe/U,EAAY4T,UAAW,cAIzCgC,IAAK,WACD,OAAOtjC,KAAKkoC,WAKhB5C,IAAK,SAAU//B,GACXvF,KAAKkoC,UAAY3iC,GAErBg+B,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAe/U,EAAY4T,UAAW,cAIzCgC,IAAK,WACD,OAAOtjC,KAAKmoC,gBAKhB7C,IAAK,SAAU//B,GACXvF,KAAKmoC,eAAiB5iC,GAE1Bg+B,YAAY,EACZC,cAAc,IAGlB9V,EAAY4T,UAAU3T,mBAAqB,WACvC3tB,KAAK0kC,QAAS,GAMlBhX,EAAY4T,UAAU3jB,QAAU,SAAU4nB,GACtC,IAAIhU,EAcJ,OAZIA,EADAvxB,KAAK0kC,QAAU1kC,KAAKioC,WACblQ,GAAY/3B,KAAMA,KAAKE,MAAOF,KAAKC,QAASD,KAAKzH,OAASgtC,EAAchtC,OAGxEyH,KAAK8d,iBAEG7jB,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,OACjC0H,KAAK8d,YAAc,IAAIF,GAAK2T,EAAKh5B,MAAOg5B,EAAKj5B,QAG7C0H,KAAK8d,YAAc,IAAIF,GAAK5d,KAAKzH,MAAOyH,KAAK1H,QAEjD0H,KAAK8d,YAAc9d,KAAKwlC,oBAAoBxlC,KAAK8d,YAAaynB,GACvDvlC,KAAK8d,aAMhB4P,EAAY4T,UAAUzjB,QAAU,SAAUC,GAOtC,OANIA,EAAYvlB,QAAUyH,KAAK+N,WAAWxV,OAASulB,EAAYxlB,SAAW0H,KAAK+N,WAAWzV,QAAU0H,KAAK0kC,UACrG1kC,KAAKw4B,QAAS,GAElBx4B,KAAK+N,WAAa+P,EAClB9d,KAAKylC,eACLzlC,KAAK0kC,QAAS,EACP1kC,KAAK+N,YAET2f,GACTxN,IClJEuhB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAmBxCrT,GAA8B,SAAUiU,GAKxC,SAASjU,IACL,IAAI4X,EAAQ3D,EAAO0E,KAAKpnC,OAASA,KAiBjC,OAbAqmC,EAAM+B,YAAc,GAIpB/B,EAAMzX,WAAa,OAInByX,EAAM3X,WAAa,OAInB2X,EAAMgC,QAAU,UACThC,EA+CX,OArEA5E,GAAUhT,EAAciU,GAwBxB/lB,OAAO8lB,eAAehU,EAAa6S,UAAW,UAI1CgC,IAAK,WACD,OAAOtjC,KAAKooC,aAKhB9C,IAAK,SAAU//B,GACXvF,KAAKooC,YAAc7iC,EACnBvF,KAAK0kC,QAAS,GAElBnB,YAAY,EACZC,cAAc,IAMlB/U,EAAa6S,UAAU3jB,QAAU,SAAU4nB,GAavC,OAZIvlC,KAAK0kC,SAA4B,YAAjB1kC,KAAKqoC,cAAwCpuC,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,UAC/E0H,KAAK6nC,YfwNjB,SAA6BtlC,EAAQslC,GACjC,IAAI5S,EAAiB,iBACrBC,OAAOD,GAAgB/0B,MAAMkyB,WAAa,UAC1C,IAAIiJ,EAAenG,OAAOD,GAAgBrjB,SAAS,GACnDypB,EAAanF,aAAa,MAAO3zB,GACjC,IAAIf,EAAS65B,EAAaxT,wBACtBtvB,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OAGpB,OAFAuvC,EAAc,IAAIjqB,GAAKrlB,EAAOD,GAC9B48B,OAAOD,GAAgB/0B,MAAMkyB,WAAa,SACnCyV,EelOoBS,CAAatoC,KAAKuC,OAAQvC,KAAK6nC,aAClD7nC,KAAK0kC,QAAS,QAECzqC,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,QACjC0H,KAAK8d,YAAc,IAAIF,GAAK5d,KAAKzH,MAAOyH,KAAK1H,QAC7C0H,KAAK6nC,YAAc7nC,KAAK8d,aAGxB9d,KAAK8d,YAAc9d,KAAK6nC,YAE5B7nC,KAAK8d,YAAc9d,KAAKwlC,oBAAoBxlC,KAAK8d,YAAaynB,GACvDvlC,KAAK8d,aAMhB2Q,EAAa6S,UAAUzjB,QAAU,SAAUC,GAGvC,OAFA9d,KAAK+N,WAAa,IAAI6P,GAAK5d,KAAK8d,YAAYvlB,MAAOyH,KAAK8d,YAAYxlB,QACpE0H,KAAKylC,eACEzlC,KAAK+N,YAET0gB,GACTvO,IC1FEuhB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAsBxC9R,GAAwB,SAAU0S,GAElC,SAAS1S,IACL,IAAIqW,EAAmB,OAAX3D,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAMhE,OADAqmC,EAAME,qBAAkBtsC,EACjBosC,EA8LX,OAtMA5E,GAAUzR,EAAQ0S,GAclB1S,EAAOsR,UAAU3jB,QAAU,SAAU4nB,GACjC,IAAIoB,OAAU1sC,EACVqsC,OAAgBrsC,EACpB,GAAI+F,KAAKymC,cAAe,CAEpB,IAAK,IAAI5pC,EAAK,EAAG6f,EAAK1c,KAAK4R,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAI+Q,EAAQ8O,EAAG7f,GACf,GAAI+Q,aAAiB8f,GAAa,CAC9B,IAAI9f,EAAMq6B,WAKN,MAJA1C,EAAchtC,MAAQgtC,EAAchtC,OAASyH,KAAKoY,UAAYpY,KAAKqd,SACnEzP,EAAM+P,QAAQ4nB,QAMX33B,aAAiB8f,IACxB9f,EAAM+P,QAAQ4nB,GAElB,IAAI4B,EAAYv5B,EAAMkQ,YAAY0jB,QACR,IAAtB5zB,EAAMvB,cACN86B,EAAYtJ,GAAWsJ,EAAWv5B,EAAMvB,cAE5C,IAAIxJ,EAAQskC,EAAU5uC,MAAQqV,EAAMjL,OAAOE,MACvCC,EAASqkC,EAAU7uC,OAASsV,EAAMjL,OAAOG,OACzC4jC,EAAc,IAAIpqB,GAAK1O,EAAMjL,OAAOC,KAAMgL,EAAMjL,OAAOI,IAAKF,EAAOC,GACvE,GAAI8K,EAAMs3B,MAAO,CAEb,QAAiBjrC,IADF2T,EAAMy3B,oBAAoB8B,GAErC,cAGcltC,IAAlBqsC,EACAA,EAAgBI,EAGhBJ,EAAcx0B,UAAU40B,GAGhC,GAAIJ,EAAe,CACf,IAAIiC,EAAa,EACbC,EAAY,EAChBD,EAAa9rC,KAAK+I,IAAI8gC,EAAc1jC,KAAM,GAC1C4lC,EAAY/rC,KAAK+I,IAAI8gC,EAAcvjC,IAAK,GACxC4jC,EAAU,IAAI/oB,GAAK0oB,EAAc/tC,MAAQgwC,EAAYjC,EAAchuC,OAASkwC,IASpF,OANA7B,EAAUjE,EAAOpB,UAAUkE,oBAAoB4B,KAAKpnC,KAAM2mC,EAASpB,GACnE7C,EAAOpB,UAAU0F,gBAAgBI,KAAKpnC,KAAM2mC,GAE5CA,EAAQpuC,OAASyH,KAAKogC,QAAQx9B,KAAO5C,KAAKogC,QAAQv9B,MAClD8jC,EAAQruC,QAAU0H,KAAKogC,QAAQr9B,IAAM/C,KAAKogC,QAAQt9B,OAClD9C,KAAK8d,YAAc6oB,EACZA,GAKX3W,EAAOsR,UAAUzjB,QAAU,SAAUC,EAAa2qB,GAE9C,GADAzoC,KAAKmM,YAAc,IAAImQ,GACnBtc,KAAKymC,cAAe,CACpB,IAAIxvC,OAAI,EACJD,OAAI,EACRC,EAAI+I,KAAKhE,QAAU8hB,EAAYxlB,OAAS0H,KAAKwxB,MAAMv6B,EAAI+I,KAAKogC,QAAQr9B,IACpE/L,EAAIgJ,KAAKjE,QAAU+hB,EAAYvlB,MAAQyH,KAAKwxB,MAAMx6B,EAAIgJ,KAAKogC,QAAQx9B,KACnE,IAAK,IAAI/F,EAAK,EAAG6f,EAAK1c,KAAK4R,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAI+Q,EAAQ8O,EAAG7f,GACf,GAA6C,IAAxC+Q,EAAMnI,UAAYw+B,YAAUW,QAAe,CAC5Ch3B,EAAMtB,gBAAkBtM,KAAKsM,gBAAkBtM,KAAKqM,YACpD,IAAI86B,EAAYv5B,EAAMkQ,YAAY0jB,QAC9Bj1B,OAAU,EACVtL,GAAWjK,EAAG,EAAGC,EAAG,GACpByxC,EAAS1xC,EACT2xC,EAAS1xC,EACb,GAA2B,UAAvB2W,EAAMoa,aAA0B,CAChC,IAAI3nB,EAAWuN,EAAMy3B,oBAAoBvnB,QACxB7jB,IAAboG,IACAqoC,GAAUroC,EAASrJ,EACnB2xC,GAAUtoC,EAASpJ,GAS3BgK,GAAWjK,GALPuV,EADuB,WAAvBqB,EAAMoa,aACIhoB,KAAK4oC,wBAAwBh7B,EAAOu5B,EAAWrpB,EAAa4qB,EAAQC,GAGpE3oC,KAAK6oC,wBAAwBj7B,EAAO86B,EAAQC,IAEpC3xC,EAAImwC,EAAU5uC,MAAQ,EAAGtB,EAAGsV,EAAQtV,EAAIkwC,EAAU7uC,OAAS,GACjFoqC,EAAOpB,UAAU4F,0BAA0BE,KAAKpnC,KAAM4N,EAAO3M,IAE7DwnC,GAA0C,YAA9B76B,EAAMkL,qBAAiE,YAA5BlL,EAAMiL,kBAIzDjL,aAAiB8f,IAAe9f,EAAMq6B,YACtCr6B,EAAMiQ,QAAQjQ,EAAMkQ,aACpB9d,KAAKmM,YAAY2F,UAAUlE,EAAMzB,cAE1ByB,aAAiB8f,KACxB9f,EAAMiQ,QAAQjQ,EAAMkQ,aACpB9d,KAAKmM,YAAY2F,UAAUlE,EAAMzB,cATrCyB,EAAMiQ,QAAQC,IAiB1B,OAHA9d,KAAK+N,WAAa+P,EAClB9d,KAAKylC,eACLzlC,KAAKmM,YAAY2F,UAAU9R,KAAKwB,QACzBsc,GAUXkS,EAAOsR,UAAUsH,wBAA0B,SAAUh7B,EAAOu5B,EAAW2B,EAAY9xC,EAAGC,GAClF,OAAQ2W,EAAMkL,qBACV,IAAK,OACL,IAAK,OACD9hB,GAAK4W,EAAMjL,OAAOC,KAClB,MACJ,IAAK,QACD5L,GAAK8xC,EAAWvwC,MAAQ4uC,EAAU5uC,MAAQqV,EAAMjL,OAAOE,MACvD,MACJ,IAAK,UACL,IAAK,SACD7L,GAAK8xC,EAAWvwC,MAAQ,EAAI4uC,EAAU5uC,MAAQ,EAGtD,OAAQqV,EAAMiL,mBACV,IAAK,OACL,IAAK,MACD5hB,GAAK2W,EAAMjL,OAAOI,IAClB,MACJ,IAAK,SACD9L,GAAK6xC,EAAWxwC,OAAS6uC,EAAU7uC,OAASsV,EAAMjL,OAAOG,OACzD,MACJ,IAAK,UACL,IAAK,SACD7L,GAAK6xC,EAAWxwC,OAAS,EAAI6uC,EAAU7uC,OAAS,EAGxD,OAAStB,EAAGA,EAAGC,EAAGA,IAQtB+4B,EAAOsR,UAAUuH,wBAA0B,SAAUj7B,EAAO5W,EAAGC,GAG3D,OAFAD,GAAK4W,EAAMjL,OAAOC,KAAOgL,EAAMjL,OAAOE,MACtC5L,GAAK2W,EAAMjL,OAAOI,IAAM6K,EAAMjL,OAAOG,OAC7B8K,EAAMkL,qBACV,IAAK,OACL,IAAK,OACD9hB,EAAIA,EACJ,MACJ,IAAK,UACL,IAAK,SACDA,GAAK4W,EAAMkQ,YAAYvlB,MAAQqV,EAAM4jB,MAAMx6B,EAC3C,MACJ,IAAK,QACDA,GAAK4W,EAAMkQ,YAAYvlB,MAG/B,OAAQqV,EAAMiL,mBACV,IAAK,OACL,IAAK,MACD5hB,EAAIA,EACJ,MACJ,IAAK,UACL,IAAK,SACDA,GAAK2W,EAAMkQ,YAAYxlB,OAASsV,EAAM4jB,MAAMv6B,EAC5C,MACJ,IAAK,SACDA,GAAK2W,EAAMkQ,YAAYxlB,OAG/B,OAAStB,EAAGA,EAAGC,EAAGA,IAEf+4B,GACTkD,I5BvNE70B,IAEA0qC,UAAa,4BAEbC,QAAW,sKAGXC,QAAW,iDAEXC,cAAiB,8BAEjBC,SAAY,6BAEZC,KAAQ,yPAIRC,KAAQ,oNAGRC,SAAY,2CAEZC,SAAY,2JAGZC,QAAW,yKAGXC,UAAa,iGAEbC,QAAW,mNAIXC,cAAiB,4EAEjBC,SAAY,8cAMZC,QAAW,sF6BjDXpI,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAS5D08B,GAAsB,SAAUpH,GAEhC,SAASoH,IACL,OAAkB,OAAXpH,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAsC/D,OAxCAyhC,GAAUqI,EAAMpH,GAIhBT,IACImB,WAAS,KACV0G,EAAKxI,UAAW,UAAM,GACzBW,IACImB,WAAS,WACV0G,EAAKxI,UAAW,2BAAuB,GAC1CW,IACImB,WAAS,WACV0G,EAAKxI,UAAW,yBAAqB,GACxCW,IACI8H,aAAYjE,KACbgE,EAAKxI,UAAW,cAAU,GAC7BW,IACImB,WAAS,KACV0G,EAAKxI,UAAW,aAAS,GAC5BW,IACImB,WAAS,KACV0G,EAAKxI,UAAW,cAAU,GAC7BW,IACI8H,aAAY7D,KACb4D,EAAKxI,UAAW,aAAS,GAC5BW,IACImB,WAAS,WACV0G,EAAKxI,UAAW,aAAS,GAC5BW,IACImB,WAASrD,iBAAeiK,UACzBF,EAAKxI,UAAW,kBAAc,GACjCW,IACImB,WAAS,KACV0G,EAAKxI,UAAW,gBAAY,GAC/BW,IACImB,WAAS1uB,kBAAgBu1B,OAC1BH,EAAKxI,UAAW,mBAAe,GAClCW,IACImB,cACD0G,EAAKxI,UAAW,eAAW,GACvBwI,GACTzG,iBAKEzD,GAA2B,SAAU8C,GAGrC,SAAS9C,EAAU5hB,EAAQ+e,EAAUmN,EAAcC,GAC/C,OAAOzH,EAAO0E,KAAKpnC,KAAMge,EAAQ+e,EAAUmN,EAAcC,IAAYnqC,KAKzE,OARAyhC,GAAU7B,EAAW8C,GAKrBT,IACI8H,WAAU/yC,EAAG,GAAKC,EAAG,IAAOkO,KAC7By6B,EAAU0B,UAAW,cAAU,GAC3B1B,GACTkK,ICnFErI,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAS5Dg9B,GAA2B,SAAU1H,GAErC,SAAS0H,IACL,OAAkB,OAAX1H,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAU2I,EAAW1H,GAIrBT,IACImB,WAAS,SACVgH,EAAU9I,UAAW,aAAS,GACjCW,IACImB,WAAS,KACVgH,EAAU9I,UAAW,eAAW,GACnCW,IACImB,WAAS,KACVgH,EAAU9I,UAAW,YAAQ,GAChCW,IACImB,WAAS,SACVgH,EAAU9I,UAAW,sBAAkB,GACnC8I,GACT/G,iBAKEgH,GAA4B,SAAU3H,GAEtC,SAAS2H,IACL,OAAkB,OAAX3H,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAkD/D,OApDAyhC,GAAU4I,EAAY3H,GAItBT,IACImB,WAAS,KACViH,EAAW/I,UAAW,eAAW,GACpCW,IACImB,gBAASnpC,IACVowC,EAAW/I,UAAW,gBAAY,GACrCW,IACImB,YAAS,IACViH,EAAW/I,UAAW,kBAAc,GACvCW,IACImB,WAASlwB,wBAAsBo3B,kBAChCD,EAAW/I,UAAW,mBAAe,GACxCW,IACI8H,eAAQ9vC,EAAWmwC,KACpBC,EAAW/I,UAAW,iBAAa,GACtCW,IACImB,WAAS,KACViH,EAAW/I,UAAW,UAAM,GAC/BW,IACImB,cACDiH,EAAW/I,UAAW,aAAS,GAClCW,IACImB,cACDiH,EAAW/I,UAAW,cAAU,GACnCW,IACImB,WAAS,IACViH,EAAW/I,UAAW,mBAAe,GACxCW,IACI8H,WAAU5xB,YAAa,EAAGD,YAAa,cAAeD,KAAM,eAAiBmuB,KAC9EiE,EAAW/I,UAAW,aAAS,GAClCW,IACImB,WAAS,WACViH,EAAW/I,UAAW,2BAAuB,GAChDW,IACImB,WAAS,WACViH,EAAW/I,UAAW,yBAAqB,GAC9CW,IACI8H,aAAYjE,KACbuE,EAAW/I,UAAW,cAAU,GACnCW,IACI8H,WAAUhnC,SAAK9I,EAAW6I,YAAQ7I,EAAW2I,UAAM3I,EAAW4I,WAAO5I,GAAa6rC,KACnFuE,EAAW/I,UAAW,iBAAa,GACtCW,IACImB,WAAS,UACViH,EAAW/I,UAAW,YAAQ,GACjCW,IACImB,cACDiH,EAAW/I,UAAW,eAAW,GAC7B+I,GACThH,iBAKEtwB,GAAiC,SAAU2vB,GAG3C,SAAS3vB,EAAgBiL,EAAQ+e,EAAUmN,EAAcC,GACrD,OAAOzH,EAAO0E,KAAKpnC,KAAMge,EAAQ+e,EAAUmN,EAAcC,IAAYnqC,KAKzE,OARAyhC,GAAU1uB,EAAiB2vB,GAK3BT,IACI8H,WAAU/yC,EAAG,GAAKC,EAAG,IAAOkO,KAC7B4N,EAAgBuuB,UAAW,cAAU,GACjCvuB,GACTs3B,IAKEr3B,GAAgC,SAAU0vB,GAG1C,SAAS1vB,EAAegL,EAAQ+e,EAAUmN,EAAcC,GACpD,OAAOzH,EAAO0E,KAAKpnC,KAAMge,EAAQ+e,EAAUmN,EAAcC,IAAYnqC,KAczE,OAjBAyhC,GAAUzuB,EAAgB0vB,GAK1BT,IACImB,WAAS,KACVpwB,EAAesuB,UAAW,cAAU,GACvCW,IACI8H,WAAU/yC,EAAG,EAAGC,EAAG,GAAKkO,KACzB6N,EAAesuB,UAAW,oBAAgB,GAC7CW,IACImB,WAAS,WACVpwB,EAAesuB,UAAW,iBAAa,GAC1CW,IACImB,YAAS,IACVpwB,EAAesuB,UAAW,oBAAgB,GACtCtuB,GACTq3B,I7BtGE7rC,IACA+rC,EAAK,kCACLC,OAAU,gDACVC,OAAU,6BAEV7rC,IACA8rC,UAAa,oDACbD,OAAU,4BACVE,OAAU,qEACVC,UAAa,iPAIbC,cAAiB,sCACjBC,eAAkB,wCAClBC,YAAe,6CACfC,MAAS,uBACTnB,QAAW,+BACXW,OAAU,iDCnDVxrC,IAEAisC,QAAW,gEAEXC,SAAY,yFAEZC,SAAY,iEAEZC,kBAAqB,6EAErBC,WAAc,gOAGdC,SAAY,yQAIZC,WAAc,iOAGdC,eAAkB,oOAGlBC,KAAQ,8HAGRC,cAAiB,mXAIjBC,QAAW,+HAGXC,gBAAmB,6PAInBC,GAAM,6JAGNC,gBAAmB,wOAInBC,QAAW,uBAEXC,gBAAmB,qCAEnBC,MAAS,sBAETC,iBAAoB,yCAEpBC,wBAA2B,4GAG3B9B,WAAc,oFAEd+B,YAAe,gHAEfC,KAAQ,iCAERC,KAAQ,8CAERC,MAAS,0HAETC,YAAe,sWAKfC,QAAW,wPAGXC,YAAe,wQAIfC,UAAa,0FAEbC,WAAc,iH6BtFdnL,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAQ5Dy/B,GAA2B,SAAUnK,GAErC,SAASmK,IACL,OAAkB,OAAXnK,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA4C/D,OA9CAyhC,GAAUoL,EAAWnK,GAIrBT,IACImB,WAAS,SACVyJ,EAAUvL,UAAW,aAAS,GACjCW,IACImB,WAAS,UACVyJ,EAAUvL,UAAW,YAAQ,GAChCW,IACImB,WAAS,SACVyJ,EAAUvL,UAAW,2BAAuB,GAC/CW,IACImB,WAAS,SACVyJ,EAAUvL,UAAW,yBAAqB,GAC7CW,IACImB,WAAS,KACVyJ,EAAUvL,UAAW,aAAS,GACjCW,IACImB,WAAS,KACVyJ,EAAUvL,UAAW,cAAU,GAClCW,IACI8H,WAAU/yC,EAAG,GAAKC,EAAG,GAAKkO,KAC3B0nC,EAAUvL,UAAW,cAAU,GAClCW,IACImB,WAAS,YACVyJ,EAAUvL,UAAW,mBAAe,GACvCW,IACImB,WAAS,IACVyJ,EAAUvL,UAAW,mBAAe,GACvCW,IACI8H,aAAYjE,KACb+G,EAAUvL,UAAW,cAAU,GAClCW,IACImB,WAAS,KACVyJ,EAAUvL,UAAW,gBAAY,GACpCW,IACImB,WAAS,KACVyJ,EAAUvL,UAAW,eAAW,GACnCW,IACImB,WAAS,IACVyJ,EAAUvL,UAAW,oBAAgB,GACxCW,IACI8H,WAAUnnC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAAKgjC,KACnD+G,EAAUvL,UAAW,eAAW,GAC5BuL,GACTxJ,iB5BzEE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAQ5D0/B,GAAgC,SAAUpK,GAE1C,SAASoK,IACL,OAAkB,OAAXpK,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAuB/D,OAzBAyhC,GAAUqL,EAAgBpK,GAI1BT,IACImB,WAAS,KACV0J,EAAexL,UAAW,eAAW,GACxCW,IACImB,WAAS,YACV0J,EAAexL,UAAW,gBAAY,GACzCW,IACImB,WAAS,UACV0J,EAAexL,UAAW,oBAAgB,GAC7CW,IACImB,YAAS,IACV0J,EAAexL,UAAW,sBAAkB,GAC/CW,IACImB,WAAS,SACV0J,EAAexL,UAAW,aAAS,GACtCW,IACImB,WAAS,SACV0J,EAAexL,UAAW,cAAU,GACvCW,IACImB,cACD0J,EAAexL,UAAW,iBAAa,GACnCwL,GACTzJ,iB6BpDE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAU5D2/B,GAA0B,SAAUrK,GAEpC,SAASqK,IACL,OAAkB,OAAXrK,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAmC/D,OArCAyhC,GAAUsL,EAAUrK,GAIpBT,IACImB,WAAS,KACV2J,EAASzL,UAAW,UAAM,GAC7BW,IACImB,YAAU,IACX2J,EAASzL,UAAW,cAAU,GACjCW,IACI8H,aAAYjE,KACbiH,EAASzL,UAAW,cAAU,GACjCW,IACImB,YAAS,IACV2J,EAASzL,UAAW,eAAW,GAClCW,IACIgE,gBAAerG,KAChBmN,EAASzL,UAAW,aAAS,GAChCW,IACImB,YAAS,IACV2J,EAASzL,UAAW,kBAAc,GACrCW,IACI8H,aAAY+C,KACbC,EAASzL,UAAW,eAAW,GAClCW,IACI8H,aAAY8C,KACbE,EAASzL,UAAW,kBAAc,GACrCW,IACI8H,aAAY8C,KACbE,EAASzL,UAAW,oBAAgB,GACvCW,IACImB,YAAS,IACV2J,EAASzL,UAAW,yBAAqB,GAC5CW,IACImB,cACD2J,EAASzL,UAAW,eAAW,GAC3ByL,GACT1J,iBClEE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAkBxC7S,GAAoC,SAAUyT,GAK9C,SAASzT,EAAmBoF,EAAQN,EAAWzB,GAC3C,IAAI+T,EAAQ3D,EAAO0E,KAAKpnC,OAASA,KAkBjC,OAjBAqmC,EAAMjwC,KAAO,GAIbiwC,EAAMhS,OAAS,GAKfgS,EAAM/T,aAAe,GAIrB+T,EAAMtS,UAAY,GAClBsS,EAAMtS,UAAYA,EAClBsS,EAAMhS,OAASA,EACfgS,EAAM/T,aAAeA,EACd+T,EAoBX,OA3CA5E,GAAUxS,EAAoByT,GAyB9B/lB,OAAO8lB,eAAexT,EAAmBqS,UAAW,WAIhDgC,IAAK,WACD,OAAOtjC,KAAK5J,MAKhBkvC,IAAK,SAAU//B,GACXvF,KAAK5J,KAAOmP,EACZvF,KAAK0nC,SAAWlY,GAAWxvB,MAAM,GACjCA,KAAK0kC,QAAS,GAElBnB,YAAY,EACZC,cAAc,IAEXvU,GACT/O,I5B/DEuhB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAqB5D4/B,GAAmB,SAAUzyC,GAC7B,OAAQA,EAAIsB,MACR,IAAK,OACD,OAAOoxC,GACX,IAAK,cACD,OAAOC,GACX,IAAK,gBACD,OAAOC,GACX,QACI,OAAOC,KAGfC,GAAiB,SAAU9yC,GAC3B,OAAQA,EAAIsB,MACR,IAAK,WACD,OAAO8Q,GACX,IAAK,SACD,OAAOD,GACX,IAAK,aACD,OAAOnG,GACX,QACI,OAAOoG,KAMf2gC,GAA2B,SAAU5K,GAErC,SAAS4K,IACL,OAAkB,OAAX5K,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAoB/D,OAtBAyhC,GAAU6L,EAAW5K,GAIrBT,IACImB,WAAS,KACVkK,EAAUhM,UAAW,aAAS,GACjCW,IACImB,WAAS,KACVkK,EAAUhM,UAAW,cAAU,GAClCW,IACImB,WAAS,UACVkK,EAAUhM,UAAW,aAAS,GACjCW,IACI8H,WAAU9xB,KAAM,QAASC,YAAa,QAASC,YAAa,GAAK+tB,KAClEoH,EAAUhM,UAAW,aAAS,GACjCW,IACI8H,WAAU/yC,EAAG,EAAGC,EAAG,IAAOkO,KAC3BmoC,EAAUhM,UAAW,aAAS,GACjCW,IACImB,WAAS,KACVkK,EAAUhM,UAAW,gBAAY,GAC7BgM,GACTjK,iBAKEkK,GAAwB,SAAU7K,GAElC,SAAS6K,IACL,OAAkB,OAAX7K,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAU8L,EAAQ7K,GAIlBT,IACImB,WAAS,IACVmK,EAAOjM,UAAW,aAAS,GAC9BW,IACImB,WAAS,IACVmK,EAAOjM,UAAW,gBAAY,GAC1BiM,GACTlK,iBAKE+J,GAAgC,SAAU1K,GAE1C,SAAS0K,IACL,OAAkB,OAAX1K,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAK/D,OAPAyhC,GAAU2L,EAAgB1K,GAI1BT,IACImB,WAAS,SACVgK,EAAe9L,UAAW,YAAQ,GAC9B8L,GACT/J,iBAKE6J,GAA8B,SAAUxK,GAExC,SAASwK,IACL,OAAkB,OAAXxK,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAUyL,EAAcxK,GAIxBT,IACImB,WAAS,WACV8J,EAAa5L,UAAW,YAAQ,GACnCW,IACImB,WAAS,KACV8J,EAAa5L,UAAW,2BAAuB,GAC3C4L,GACTE,IAKEH,GAA0B,SAAUvK,GAEpC,SAASuK,IACL,OAAkB,OAAXvK,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAUwL,EAAUvK,GAIpBT,IACImB,WAAS,aACV6J,EAAS3L,UAAW,YAAQ,GAC/BW,IACImB,WAAS,WACV6J,EAAS3L,UAAW,gBAAY,GACnCW,IACImB,WAAS,YACV6J,EAAS3L,UAAW,eAAW,GAClCW,IACImB,WAAS,YACV6J,EAAS3L,UAAW,mBAAe,GAC/B2L,GACTG,IAKEI,GAAkC,SAAU9K,GAG5C,SAAS8K,EAAiBxvB,EAAQ+e,EAAUmN,EAAcC,GACtD,IAAI9D,EAAQ3D,EAAO0E,KAAKpnC,KAAMge,EAAQ+e,EAAUmN,EAAcC,IAAYnqC,KAE1E,OADAqmC,EAAM1tC,UACC0tC,EAKX,OAVA5E,GAAU+L,EAAkB9K,GAO5BT,IACImB,WAAS,aACVoK,EAAiBlM,UAAW,YAAQ,GAChCkM,GACTnK,iBAKE12B,GAAiC,SAAU+1B,GAE3C,SAAS/1B,IACL,OAAkB,OAAX+1B,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAK/D,OAPAyhC,GAAU90B,EAAiB+1B,GAI3BT,IACI8H,WAAU/yC,EAAG,EAAGC,EAAG,GAAKkO,KACzBwH,EAAgB20B,UAAW,aAAS,GAChC30B,GACT6gC,IAKE9gC,GAA+B,SAAUg2B,GAEzC,SAASh2B,IACL,OAAkB,OAAXg2B,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAU/0B,EAAeg2B,GAIzBT,IACI8H,WAAU/yC,EAAG,EAAGC,EAAG,GAAKkO,KACzBuH,EAAc40B,UAAW,cAAU,GACtCW,IACI8H,WAAU/yC,EAAG,EAAGC,EAAG,GAAKkO,KACzBuH,EAAc40B,UAAW,cAAU,GACtCW,IACI8H,WAAUvyC,MAAO,EAAG8N,SAAU,GAAKioC,KACpC7gC,EAAc40B,UAAW,eAAW,GACvCW,IACI8H,WAAUvyC,MAAO,EAAG8N,SAAU,GAAKioC,KACpC7gC,EAAc40B,UAAW,eAAW,GAChC50B,GACTC,IAKEpG,GAAmC,SAAUm8B,GAE7C,SAASn8B,IACL,OAAkB,OAAXm8B,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAUl7B,EAAmBm8B,GAI7BT,IACImB,WAAS,OACV78B,EAAkB+6B,UAAW,cAAU,GAC1CW,IACImB,WAAS,OACV78B,EAAkB+6B,UAAW,iBAAa,GACtC/6B,GACTinC,IA2HEC,GAAmC,SAAU/K,GAE7C,SAAS+K,IACL,OAAkB,OAAX/K,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUgM,EAAmB/K,GAI7BT,IACImB,YAAS,IACVqK,EAAkBnM,UAAW,gBAAY,GAC5CW,IACImB,gBAASnpC,IACVwzC,EAAkBnM,UAAW,mBAAe,GAC/CW,IACImB,gBAASnpC,IACVwzC,EAAkBnM,UAAW,mBAAe,GACxCmM,GACTpK,iBAKEqK,GAAwC,SAAUhL,GAElD,SAASgL,IACL,OAAkB,OAAXhL,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUiM,EAAwBhL,GAIlCT,IACImB,WAAS,KACVsK,EAAuBpM,UAAW,YAAQ,GAC7CW,IACI8H,aAAY0D,KACbC,EAAuBpM,UAAW,cAAU,GAC/CW,IACI8H,aAAY0D,KACbC,EAAuBpM,UAAW,cAAU,GACxCoM,GACTrK,iBAKE8J,GAA8B,SAAUzK,GAExC,SAASyK,IACL,OAAkB,OAAXzK,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAU0L,EAAczK,GAIxBT,IACImB,WAAS,kBACV+J,EAAa7L,UAAW,YAAQ,GACnCW,IACImB,WAAS,gBACV+J,EAAa7L,UAAW,oBAAgB,GAC3CW,IACImB,WAAS,gBACV+J,EAAa7L,UAAW,uBAAmB,GAC9CW,IACI8H,aAAY2D,KACbP,EAAa7L,UAAW,oBAAgB,GACpC6L,GACTC,IAKEh6B,GAA2B,SAAUsvB,GAGrC,SAAStvB,EAAU4K,EAAQ+e,EAAUmN,EAAcC,GAC/C,IAAI9D,EAAQ3D,EAAO0E,KAAKpnC,KAAMge,EAAQ+e,EAAUmN,EAAcC,IAAYnqC,KAU1E,OARAqmC,EAAMxrB,SAAW,GAEjBwrB,EAAMsH,WAENtH,EAAMuH,OAAS,OACXvH,EAAMjoC,OAA8B,gBAArBioC,EAAMjoC,MAAMvC,MAC3B8oB,GAAuBulB,EAAc7D,GAElCA,EAqzBX,OAl0BA5E,GAAUruB,EAAWsvB,GAiBrBtvB,EAAUkuB,UAAU/N,KAAO,SAAUr0B,GAC5Bc,KAAKH,KACNG,KAAKH,GAAKyZ,MAEd,IAAIu0B,EACA/1B,EAAY,IAAIkY,GAChB11B,EAAU,IAAI+T,GAClB/T,EAAQuF,GAAKG,KAAKH,GAAK,QACvB,IAAI+wB,EAAe,IAAIviB,GACnB0D,EAAkB,IAAI1D,GAC1B/T,EAAU0F,KAAK8tC,kBAAkB9tC,KAAM1F,GACvC,IAAIkH,EACA7I,KAQJ,OAPAA,EAASqH,KAAK+tC,mBAAmB/tC,KAAKnE,MACtClD,EAASqH,KAAKgxB,eAAehxB,KAAMrH,GACnC6I,EAAS8a,GAAKyJ,SAASptB,GACvBmf,EAAUvf,MAAQiJ,EAAOjJ,MACzBuf,EAAUxf,OAASkJ,EAAOlJ,OAC1Bwf,EAAU/b,QAAUyF,EAAOxK,EAAI8gB,EAAU0Z,MAAMx6B,EAAIwK,EAAOjJ,MAC1Duf,EAAU9b,QAAUwF,EAAOvK,EAAI6gB,EAAU0Z,MAAMv6B,EAAIuK,EAAOlJ,OAClD0H,KAAK5B,MAAMvC,MACf,IAAK,OACD,OAAQmE,KAAK5B,MAAMwmB,MACf,IAAK,WACDipB,EAAc7tC,KAAKguC,sBACnB,MACJ,IAAK,eACDH,EAAc,IAAIx/B,IACN6f,SAAU,EACtBluB,KAAKiuC,yBACL,MACJ,IAAK,UACDJ,EAAc7tC,KAAKkuC,qBACnB5zC,EAAU0F,KAAK8tC,kBAAkB9tC,KAAM1F,GACvC0F,KAAKmuC,oBAAoBnuC,KAAM6tC,GAGvC,MACJ,IAAK,cACD,OAAQ7tC,KAAK5B,MAAMwmB,MACf,IAAK,SACD5kB,KAAKouC,mBACL,MACJ,IAAK,YACDpuC,KAAKquC,oBAAoB/zC,GAGjC,MACJ,IAAK,gBACD0F,KAAKsuC,uBAGb,IAAIC,EAAcvuC,KAAK2lB,mBACvB,GAAkB,WAAd3lB,KAAKnE,KAAmB,CACxB,IAAIk1B,EAAe/wB,KAAK7G,SAAS,GAC7BqR,EAAcxK,KAAK7G,SAAS6G,KAAK7G,SAAS1C,OAAS,GACvD83C,GAAgBppC,GAAMC,aAAaoF,EAAYhS,QAA+BgS,EAAYqb,aAAjCrb,EAAYhS,OAChE2M,GAAMC,aAAa2rB,EAAa7gB,QAAgC6gB,EAAanL,aAAnCmL,EAAa7gB,QAEhE,IACIia,EAAiBjrB,EAAqB,eACxBc,KAAKgB,eAAgBhB,KAAKgB,cAAcd,MAAMiY,YAQhE,GAPAyY,EAAe5wB,KAAKwuC,oBAAoB71C,EAAO,GAAI41C,EAAY,GAAIvuC,KAAK6R,iBAAiB,EAAMsY,GAC/FpY,EAAkB/R,KAAKwuC,oBAAoB71C,EAAOA,EAAOlC,OAAS,GAAI83C,EAAYA,EAAY93C,OAAS,GAAIuJ,KAAK+R,iBAAiB,EAAOoY,GACxIyG,EAAa/wB,GAAKG,KAAKH,GAAK,UAC5BkS,EAAgBlS,GAAKG,KAAKH,GAAK,UAC/BvF,EAAQ4F,MAAQF,KAAKE,MAErB5F,EAAQ4F,MAAY,KAAI,mBACDjG,IAAnBkwB,EAA8B,CAE9B,IAAIskB,EAAiBtkB,EAAenqB,KAAMd,GAC1C5E,EAAQi+B,YAAckW,GAAkCzuC,KAAKH,GAEjEiY,EAAU5X,MAAMgY,YAAc,cAC9BJ,EAAU5X,MAAM+X,KAAO,cACvBH,EAAU5X,MAAMiY,YAAc,EAC9BL,EAAUlG,UAAYtX,EAASs2B,EAAc7e,GAC7C+F,EAAUjY,GAAKG,KAAKH,QACA5F,IAAhB4zC,GACA/1B,EAAUlG,SAAS9a,KAAK+2C,GAE5B/1B,EAAU/b,QAAUzB,EAAQyB,QAC5B+b,EAAU9b,QAAU1B,EAAQ0B,QAC5B8b,EAAUvf,MAAQ+B,EAAQ/B,MAC1Buf,EAAUxf,OAASgC,EAAQhC,OAC3B,IAAK,IAAI5B,EAAI,EAAGsJ,KAAKsY,YAA2B5hB,EAAIsJ,KAAKsY,YAAY7hB,OAAQC,IACzEohB,EAAUlG,SAAS9a,KAAKkJ,KAAK0uC,qBAAqB1uC,KAAKsY,YAAY5hB,GAAIsJ,KAAK2lB,mBAAoBnkB,EAAQ2oB,EAAgBjrB,EAAQU,QAAQC,KAG5I,OADAG,KAAK8N,QAAUgK,EACRA,GAEX1E,EAAUkuB,UAAUgN,qBAAuB,WACvC,IAAIlwC,EAAQ4B,KAAK5B,MACU,gBAAvBA,EAAMuwC,cACN3uC,KAAK7G,SAAS,GAAG0C,KAAO,WACxBmE,KAAK6R,gBAAgBzT,MAAQ,OAC7B4B,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAKE,MAAMiY,YAAc,GAEG,gBAAvB/Z,EAAMuwC,cACX3uC,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAK6R,gBAAgBzT,MAAQ,OAC7B4B,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAK+R,gBAAgB7R,MAAM+X,KAAO,QAClCjY,KAAKE,MAAMiY,YAAc,EACzBnY,KAAKE,MAAMod,gBAAkB,OAED,gBAAvBlf,EAAMuwC,cACX3uC,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAK6R,gBAAgBzT,MAAQ,UAC7B4B,KAAK+R,gBAAgB3T,MAAQ,OAC7B4B,KAAK6R,gBAAgB3R,MAAM+X,KAAO,QAClCjY,KAAKE,MAAMiY,YAAc,GAEG,gBAAvB/Z,EAAMuwC,cACX3uC,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAK6R,gBAAgBzT,MAAQ,UAC7B4B,KAAK+R,gBAAgB3T,MAAQ,OAC7B4B,KAAK6R,gBAAgB3R,MAAM+X,KAAO,QAClCjY,KAAKE,MAAMiY,YAAc,GAEG,eAAvB/Z,EAAMuwC,cACX3uC,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAK6R,gBAAgBzT,MAAQ,OAC7B4B,KAAK+R,gBAAgB3T,MAAQ,YAC7B4B,KAAK6R,gBAAgB3R,MAAM+X,KAAO,QAClCjY,KAAKE,MAAMiY,YAAc,EACzBnY,KAAKE,MAAMod,gBAAkB,OAED,gBAAvBlf,EAAMuwC,eACX3uC,KAAK7G,SAAS,GAAG0C,KAAO,aACxBmE,KAAK6R,gBAAgBzT,MAAQ,OAC7B4B,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAK6R,gBAAgB3R,MAAM+X,KAAO,QAClCjY,KAAKE,MAAMiY,YAAc,GAEC,kBAA1B/Z,EAAMwwC,kBACN5uC,KAAK6R,gBAAgBzT,MAAQ,OAC7B4B,KAAK+R,gBAAgB3T,MAAQ,QAEjC,IACIywC,EACAC,EAFAC,EAAQ,GAGRC,EAAa,GACbC,EAAa,GACbt1B,EAAO,GACPvb,EAAM8wC,aAAa3sC,SACnBnE,EAAM8wC,aAAa3sC,OAAO4sC,YAAc/wC,EAAM8wC,aAAa3sC,OAAO4sC,YAClE/wC,EAAM8wC,aAAa3sC,OAAO6sC,YAAchxC,EAAM8wC,aAAa3sC,OAAO6sC,aAElEhxC,EAAM8wC,aAAalsC,SACnB5E,EAAM8wC,aAAalsC,OAAOmsC,YAAc/wC,EAAM8wC,aAAalsC,OAAOmsC,YAClE/wC,EAAM8wC,aAAalsC,OAAOosC,YAAchxC,EAAM8wC,aAAalsC,OAAOosC,aAEtEP,EAAQzwC,EAAM8wC,aAAa3sC,OAC3BusC,EAAQ1wC,EAAM8wC,aAAalsC,OAC3B2W,EAAOk1B,EAAMO,YAAcP,EAAMM,YAAc,MAAQN,EAAMO,YAAcP,EAAMM,YACjFJ,EAAQD,EAAMM,YAAcN,EAAMK,YAAc,MAAQL,EAAMM,YAAcN,EAAMK,YAClD,cAA5B/wC,EAAM8wC,aAAarzC,OACnBuC,EAAM8wC,aAAalsC,OAAOqsC,UAAW,EACrCL,EAAar1B,GAAc,IAC3Bs1B,EAAa,KAEe,cAA5B7wC,EAAM8wC,aAAarzC,OACnBuC,EAAM8wC,aAAa3sC,OAAO8sC,UAAW,EACrCJ,EAAaF,GAAgB,IAC7BC,EAAa,KAEe,cAA5B5wC,EAAM8wC,aAAarzC,OACnBmzC,EAAar1B,GAAc,IAC3Bs1B,EAAaF,GAAgB,KAED,aAA5B3wC,EAAM8wC,aAAarzC,OACnBuC,EAAM8wC,aAAalsC,OAAOqsC,UAAW,EACrCjxC,EAAM8wC,aAAa3sC,OAAO8sC,UAAW,EACrCL,EAAa,IACbC,EAAa,KAEjBjvC,KAAKsY,cAEGzY,GAAIG,KAAKH,GAAK,cAAeI,QAAS+uC,EAAYt/B,OAAQ,EAAGuZ,UAAW,SACxEtmB,QAAUE,MAAO,EAAGC,OAAQ,KAG5BjD,GAAIG,KAAKH,GAAK,cAAeI,QAASgvC,EAAYv/B,OAAQ,EAAGuZ,UAAW,SACxEtmB,QAAUE,MAAO,EAAGC,OAAQ,MAIxCsQ,EAAUkuB,UAAU0M,oBAAsB,WACtC,IAEIsB,EAFAh1C,EAAU,IAAI+T,GACdkhC,EAAU,IAAIlhC,GAMlB,GAJ8B,WAAzBrO,KAAK5B,MAAc,UAAgC,WAAd4B,KAAKnE,OAC3CmE,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAK+R,gBAAgB7R,MAAM+X,KAAO,SAER,YAAzBjY,KAAK5B,MAAc,SAAiB,CACrC9D,EAAU0F,KAAK8tC,kBAAkB9tC,KAAM1F,GAEvC,IAAK,IADDi0C,EAAcvuC,KAAK2lB,mBACdtvB,EAAI,EAAGA,EAAIk4C,EAAY93C,OAAS,EAAGJ,IACxCI,QAAkBuJ,KAAKsF,SAASipC,EAAYl4C,GAAIk4C,EAAYl4C,EAAI,IAChEi5C,EAActvC,KAAKwvC,SAASjB,EAAYl4C,GAAIk4C,EAAYl4C,EAAI,IAC5Dk5C,EAAQn5C,KAAOk5C,EAAY,GAC3BC,EAAQ1vC,GAAKG,KAAKH,GAAK,IAAOG,KAAK5B,MAAc,SACjDmxC,EAAQxzC,QAAUuzC,EAAY,GAAGt4C,EACjCu4C,EAAQvzC,QAAUszC,EAAY,GAAGr4C,EACjCs4C,EAAQljC,YAAc,GACtBkjC,EAAQ9pC,UAAYw+B,YAAUU,KAElC3kC,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAK+R,gBAAgB7R,MAAM+X,KAAO,QAUtC,MAR8B,gBAAzBjY,KAAK5B,MAAc,WACpB4B,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAK6R,gBAAgBzT,MAAQ,UAC7B4B,KAAK6R,gBAAgB3R,MAAM+X,KAAO,QAClCjY,KAAK+R,gBAAgB7R,MAAM+X,KAAO,QAClCjY,KAAK6R,gBAAgBtZ,MAAQ,GAC7ByH,KAAK6R,gBAAgBvZ,OAAS,IAE3Bi3C,GAGXn8B,EAAUkuB,UAAU8M,iBAAmB,WACnC,GAAIpuC,KAAKsY,YACL,IAAK,IAAI5hB,EAAI,EAAGA,EAAIsJ,KAAKsY,YAAY7hB,OAAQC,IACzCsJ,KAAKsY,YAAY5hB,GAAGuJ,QAAU,IAAMD,KAAKsY,YAAY5hB,GAAGuJ,QAAU,KAK9EmT,EAAUkuB,UAAU+M,oBAAsB,SAAU/zC,GAChD0F,KAAKnE,KAAO,WACZ,IAAIvD,EAAU0H,KAAK5B,MAAyB,oBAAI,EAC5CqxC,GAAUz4C,GAAIgJ,KAAK6K,YAAY7T,EAAIgJ,KAAKe,YAAY/J,GAAK,EAAGC,GAAI+I,KAAK6K,YAAY5T,EAAI+I,KAAKe,YAAY9J,GAAK,GAC3Gy4C,EAAQD,EAAMz4C,EAAIgJ,KAAKe,YAAY/J,EACnC24C,EAAQF,EAAMx4C,EAAI+I,KAAKe,YAAY9J,EAEnC24C,EAAkB,EADXnzC,KAAKmmC,KAAK8M,EAAQA,EAAQC,EAAQA,GAEzCE,GAAW74C,EAAGy4C,EAAMz4C,EAAI04C,EAAQE,EAAiB34C,EAAGw4C,EAAMx4C,EAAI04C,EAAQC,GACtEE,GAAW94C,EAAGy4C,EAAMz4C,EAAI04C,EAAQE,EAAiB34C,EAAGw4C,EAAMx4C,EAAI04C,EAAQC,GACtEl0C,EAASL,IACb0B,EAAarB,EAAQ,IAAK+zC,EAAMz4C,EAAGy4C,EAAMx4C,GACzC+I,KAAK7G,YACL,IAAIA,EAAW,IAAIwT,GAAgB3M,KAAM,YAAcnE,KAAM,WAAYF,MAAOF,EAAuBC,EAAQo0C,KAAW,GACzH9vC,KAAa,SAAElJ,KAAKqC,GACrBA,EAAW,IAAIwT,GAAgB3M,KAAM,YAAcnE,KAAM,WAAYF,MAAOF,EAAuBC,EAAQm0C,KAAW,GACrH7vC,KAAa,SAAElJ,KAAKqC,GACrBmB,EAAU0F,KAAK8tC,kBAAkB9tC,KAAM1F,IAE3C8Y,EAAUkuB,UAAU2M,uBAAyB,WACR,YAA5BjuC,KAAK5B,MAAiB,cACvB4B,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAK+R,gBAAgB7R,MAAM+X,KAAO,SAEL,gBAA5BjY,KAAK5B,MAAiB,cACvB4B,KAAKE,MAAMod,gBAAkB,MAC7Btd,KAAK+R,gBAAgB7R,MAAM+X,KAAO,QAClCjY,KAAK+R,gBAAgB3T,MAAQ,SAEA,kBAA5B4B,KAAK5B,MAAiB,cACvB4B,KAAKE,MAAMod,gBAAkB,MAC7Btd,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAK+R,gBAAgB7R,MAAM+X,KAAO,QAClCjY,KAAK6R,gBAAgBzT,MAAQ,QAC7B4B,KAAK6R,gBAAgB3R,MAAM+X,KAAO,QAClCjY,KAAK6R,gBAAgBtZ,MAAQ,EAC7ByH,KAAK6R,gBAAgBvZ,OAAS,KAGtC8a,EAAUkuB,UAAU4M,mBAAqB,WACrC,IAAI6B,EAAiB,IAAI1hC,GAiBzB,OAhBArO,KAAKE,MAAMod,gBAAkB,MAC7Btd,KAAK+R,gBAAgB3T,MAAQ,QAC7B4B,KAAK+R,gBAAgBxZ,MAAQ,EAC7ByH,KAAK+R,gBAAgBzZ,OAAS,GAC9B0H,KAAK6R,gBAAgBzT,MAAQ,SACC,sBAAxB4B,KAAK5B,MAAa,SACM,yBAAxB4B,KAAK5B,MAAa,UACpB2xC,EAAelwC,GAAKG,KAAKH,GAAK,IAAOG,KAAK5B,MAAa,QACvD2xC,EAAex3C,MAAQ,GACvBw3C,EAAez3C,OAAS,GACxBy3C,EAAe35C,KAAO,yDACtB25C,EAAej3B,oBAAsB,SACrCi3B,EAAel3B,kBAAoB,SACnCk3B,EAAetqC,UAAYw+B,YAAUU,KACrCoL,EAAe7vC,MAAM+X,KAAgC,yBAAxBjY,KAAK5B,MAAa,QAA+B,YAAc,SAEzF2xC,GAGX38B,EAAUkuB,UAAUh8B,SAAW,SAAUy9B,EAAKC,GAC1C,OAAOvmC,KAAKmmC,KAAKnmC,KAAKomC,IAAIG,EAAIhsC,EAAI+rC,EAAI/rC,EAAG,GAAKyF,KAAKomC,IAAIG,EAAI/rC,EAAI8rC,EAAI9rC,EAAG,KAG1Emc,EAAUkuB,UAAUkO,SAAW,SAAUQ,EAAUC,GAC/C,IAAIC,GAAmBl5C,EAAGg5C,EAASh5C,EAAGC,EAAG+4C,EAAS/4C,GAC9CqO,EAAWtF,KAAKsF,SAAS0qC,EAAUC,GACvC3qC,EAAW7I,KAAKqK,IAAI,GAAIxB,EAAW,GACnC,IAAI9N,EAAQ0V,EAAU8iC,EAAUC,GAC5BE,EAAgBhrC,GAAMM,WAAYzO,EAAGk5C,EAAel5C,EAAGC,EAAGi5C,EAAej5C,GAAKO,EAAO8N,GACrF8qC,EAAcjrC,GAAMM,WAAYzO,EAAGm5C,EAAcn5C,EAAGC,EAAGk5C,EAAcl5C,GAAKO,GAAQ,IAClF64C,EAAYlrC,GAAMM,WAAYzO,EAAGo5C,EAAYp5C,EAAGC,EAAGm5C,EAAYn5C,GAAKO,EAAO,IAE/E,OADW,IAAM44C,EAAYp5C,EAAI,IAAMo5C,EAAYn5C,EAAI,KAAOo5C,EAAUr5C,EAAI,IAAMq5C,EAAUp5C,EAC9Ek5C,IAGlB/8B,EAAUkuB,UAAUoN,qBAAuB,SAAUpmB,EAAY3vB,EAAQ6I,EAAQ2oB,EAAgB4J,GAC7FzL,EAAWzoB,GAAKyoB,EAAWzoB,IAAMyZ,KACjC,IAAIg3B,EACAvc,GAAazL,EAAWof,UACxB4I,EAAU,IAAIrhB,GAAmBjvB,KAAKH,GAAIk0B,EAAWzL,EAAWzoB,KACxDI,QAAUqoB,EAAWof,WAG7B4I,EAAU,IAAI5iB,IACNztB,QAAUqoB,EAAWroB,QAC7BqwC,EAAQpwC,MAAMusB,aAAe,QAEjC6jB,EAAQr9B,YAAcqV,EAAWrV,YACjCq9B,EAAQpiB,QAAU5F,EAAW8J,WAC7Bke,EAAQjkC,YAAcic,EAAWjc,YACjCikC,EAAQx3B,oBAAsBwP,EAAWxP,oBACzCw3B,EAAQz3B,kBAAoByP,EAAWzP,kBACvCy3B,EAAQ/3C,MAAQ+vB,EAAW/vB,MAC3B+3C,EAAQh4C,OAASgwB,EAAWhwB,YACP2B,IAAjBuH,EAAOjJ,OAAwB+vB,EAAWof,WAC1C4I,EAAQ/3C,OAAS+vB,EAAW/vB,OAASiJ,EAAOjJ,OAAS+vB,EAAW3lB,OAAOC,KAAO0lB,EAAW3lB,OAAOE,OAEpGytC,EAAQ3tC,OAAS2lB,EAAW3lB,OAC5B2tC,EAAQzwC,GAAKG,KAAKH,GAAK,IAAMyoB,EAAWzoB,GACnB,IAAjB2B,EAAOjJ,QACPiJ,EAAOjJ,MAAQyH,KAAKE,MAAMiY,aAER,IAAlB3W,EAAOlJ,SACPkJ,EAAOlJ,OAAS0H,KAAKE,MAAMiY,aAI/B,IAAIs2B,EACAlW,EAAc3U,GAAYuG,GAM9B,OALIoO,IACAkW,EAAiBlW,EAAYjQ,EAAYtoB,OAE7CswC,EAAQ/X,YAAckW,GAAkC6B,EAAQzwC,GAChEG,KAAKuwC,iBAAiBjoB,EAAY3vB,EAAQ6I,EAAQ8uC,GAC3CA,GAGXl9B,EAAUkuB,UAAUiP,iBAAmB,SAAUjoB,EAAY3vB,EAAQ6I,EAAQ+qB,GACzE,IAAIoF,EACAoV,EACApY,EACAvF,EACAD,EACArB,EACA0oB,GAAex5C,EAAG,EAAGC,EAAG,GACtBs1B,aAAuB0C,IACzB1C,EAAYoB,qBAEhBpB,EAAYh0B,MAAS+vB,EAAW/vB,OAASiJ,EAAOjJ,MAEhDwuC,GADApV,EAAetJ,GAAsB1vB,EAAQ2vB,EAAY9mB,IACjC7F,MACpB2sB,EAAWmoB,eACXlkB,EAAYlgB,YAAcic,EAAWjc,YAAcslB,EAAan6B,MAChE+0B,EAAYlgB,aAAekgB,EAAYlgB,YAAc,KAAO,KAE3C,IAAjB7K,EAAOjJ,QACPiJ,EAAOjJ,MAAQyH,KAAKE,MAAMiY,aAER,IAAlB3W,EAAOlJ,SACPkJ,EAAOlJ,OAAS0H,KAAKE,MAAMiY,aAE/B2P,GAAgB9wB,GAAK+vC,EAAS/vC,EAAIwK,EAAOxK,GAAKwK,EAAOjJ,MAAQtB,GAAK8vC,EAAS9vC,EAAIuK,EAAOvK,GAAKuK,EAAOlJ,QAClGk4C,EAAWx5C,EAAIwK,EAAOjJ,MAAQuvB,EAAY9wB,EAC1Cw5C,EAAWv5C,EAAIuK,EAAOlJ,OAASwvB,EAAY7wB,EAE3CmyB,GADAuF,EAAQzF,GAAqBZ,EAAYqJ,EAAan6B,MAAOmB,IAC9CywB,OACfD,EAASwF,EAAMxF,OACf,IAAIunB,EACAC,EACW,SAAXvnB,GACAsnB,EAAU,OACVF,EAAWx5C,GAAKsxB,EAAWsoB,aAAa55C,GAExB,UAAXoyB,GACLsnB,EAAU,QACVF,EAAWx5C,GAAKsxB,EAAWsoB,aAAa55C,GAExB,WAAXoyB,IACLsnB,EAAU,UAEC,QAAXvnB,GACAwnB,EAAS,MACTH,EAAWv5C,GAAKqxB,EAAWsoB,aAAa35C,GAExB,WAAXkyB,GACLwnB,EAAS,SACTH,EAAWv5C,GAAKqxB,EAAWsoB,aAAa35C,GAExB,WAAXkyB,IACLwnB,EAAS,UAEbpkB,EAAYzT,oBAAsB43B,EAClCnkB,EAAY1T,kBAAoB83B,EAChCpkB,EAAY6Y,6BAA6BoL,EAAWx5C,EAAGw5C,EAAWv5C,EAAG,YACrEs1B,EAAYvE,aAAe,SAG/B5U,EAAUkuB,UAAUyM,mBAAqB,SAAUlyC,EAAMlD,EAAQkI,GACjDpE,KAAK6G,IAAItD,KAAKe,YAAY/J,EAAIgJ,KAAK6K,YAAY7T,GAC9CyF,KAAK6G,IAAItD,KAAKe,YAAY9J,EAAI+I,KAAK6K,YAAY5T,GAD5D,IAGI45C,EADKjwC,EAAoBZ,KAAMa,GACZiwC,MAAM,GAK7B,OAJID,GAAaA,EAAUp6C,OAAS,IAChCuJ,KAAKe,YAAc8vC,EAAU,GAC7B7wC,KAAK6K,YAAcgmC,EAAUA,EAAUp6C,OAAS,IAE7Co6C,GAGXz9B,EAAUkuB,UAAUyP,cAAgB,SAAUnlC,EAAWjT,EAAQq4C,GAC7D,IAAIr1C,GAAU3E,EAAG,EAAGC,EAAG,GACnB8tB,GAAU/tB,EAAG,EAAGC,EAAG,GACnB+tB,GAAQhuB,EAAG,EAAGC,EAAG,GACjBR,EAASkC,EAAOlC,OACpBsuB,EAASisB,EAAgCr4C,EAAO,GAA5BA,EAAOlC,EAAS,GACpCuuB,EAAOgsB,EAAgCr4C,EAAO,GAA5BA,EAAOlC,EAAS,GAClC,IAAIw6C,EAAM9rC,GAAM4G,eAAegZ,EAAOC,GACtCisB,EAAe,IAARA,EAAa,EAAIA,EACxB,IAAI14C,EAAQqT,EAAU1L,MAAMiY,YAAc,EAC1Cxc,EAAM3E,EAAKyF,KAAKC,MAAMqoB,EAAM/tB,EAAIuB,GAASysB,EAAIhuB,EAAI+tB,EAAM/tB,GAAKi6C,GAC5Dt1C,EAAM1E,EAAKwF,KAAKC,MAAMqoB,EAAM9tB,EAAIsB,GAASysB,EAAI/tB,EAAI8tB,EAAM9tB,GAAKg6C,GAC5D,IAAI94B,EAAc,EACd5X,EAAOywC,EAAWplC,EAAU5K,cAAgB4K,EAAUlK,cAQ1D,OAPInB,IACA4X,EAAc5X,EAAKL,MAAMiY,cAExB64B,GAAgD,SAApCplC,EAAUiG,gBAAgBzT,QACrC4yC,GAAgD,SAApCplC,EAAUmG,gBAAgB3T,SACxCzC,EAAQwJ,GAAM+9B,YAAYvnC,EAAOqpB,GAAK,EAAO7M,EAAc,IAExDxc,GAGXyX,EAAUkuB,UAAUtQ,eAAiB,SAAUplB,EAAWhF,GAOtD,MANwC,SAApCgF,EAAUiG,gBAAgBzT,QAC1BwI,EAAI,GAAK5G,KAAK+wC,cAAcnlC,EAAWhF,GAAK,IAER,SAApCgF,EAAUmG,gBAAgB3T,QAC1BwI,EAAIA,EAAInQ,OAAS,GAAKuJ,KAAK+wC,cAAcnlC,EAAWhF,GAAK,IAEtDA,GAGXwM,EAAUkuB,UAAUxQ,qBAAuB,SAAUllB,EAAWjT,EAAQiH,GACpE,IAAIsxC,EACA1vC,EAAS,IAAI8a,GAGjB,GAFA40B,EACclxC,KAAKmxC,eAAevlC,EAAWjT,GACtB,WAAnBiT,EAAU/P,MACV,GAAImE,KAAK7G,SAAS1C,OAAS,EACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIsJ,KAAK7G,SAAS1C,OAAQC,IAAK,CAC3C,IAAI4D,EAAU0F,KAAK7G,SAASzC,GACxB06C,EAAmBxlC,EAAUzS,SAASzC,GACtCwZ,EAAU/K,GAAMC,aAAa9K,EAAQ4V,QAAoCkhC,EAAiBxrB,aAA3CwrB,EAAiBlhC,OAChE1X,EAAU2M,GAAMC,aAAa9K,EAAQ9B,QAAoC44C,EAAiBvrB,aAA3CurB,EAAiB54C,OACpEgJ,EAAOsQ,UAAUM,GAAgB9X,EAAQ3B,OAAO,GAAIuX,EAAQ1X,EAAQ8B,EAAQ3B,OAAO,GAAIiT,UAK/FpK,EAAS8a,GAAKyJ,SAASptB,GAa3B,OAXAiH,EAAQrH,MAAQiJ,EAAOjJ,MACvBqH,EAAQtH,OAASkJ,EAAOlJ,OACxBsH,EAAQ7D,QAAUyF,EAAOxK,EAAI4I,EAAQrH,MAAQ,EAC7CqH,EAAQ5D,QAAUwF,EAAOvK,EAAI2I,EAAQtH,OAAS,EAC9CsH,EAAQxJ,KAAO86C,EACXtlC,EAAUkC,UACVlC,EAAUkC,QAAQ/R,QAAU6D,EAAQ7D,QACpC6P,EAAUkC,QAAQ9R,QAAU4D,EAAQ5D,QACpC4P,EAAUkC,QAAQvV,MAAQiJ,EAAOjJ,MACjCqT,EAAUkC,QAAQxV,OAASkJ,EAAOlJ,QAE/BsH,GAGXwT,EAAUkuB,UAAUwM,kBAAoB,SAAUliC,EAAWylC,GACzD,IAEI14C,KAKJ,OAJAA,EAASqH,KAAK+tC,mBAAmBniC,EAAU/P,MAC3CmE,KAAK2lB,mBAAqBhtB,EAC1B04C,EAAetM,YAAa,EAC5BsM,EAAiBrxC,KAAK8wB,qBAAqBllB,EAAWjT,EAAQ04C,IAIlEj+B,EAAUkuB,UAAUkN,oBAAsB,SAAU1mB,EAAawpB,EAAe5yC,EAAWsyC,EAAU7mB,GACjG,IAAIonB,EAAS,IAAIljC,GAKjB,GAJAkjC,EAEO9rC,UAAYw+B,YAAUU,KAC7B3kC,KAAKkxB,uBAAuBqgB,EAAQzpB,EAAawpB,EAAe5yC,QACzCzE,IAAnBkwB,EAA8B,CAE9B,IAAIskB,EAAiBtkB,EAAezrB,EAAWsB,MAC/CuxC,EAAOhZ,YAAckW,GACc,SAEvC,OAAO8C,GAEXn+B,EAAUkuB,UAAUkQ,WAAa,SAAU5lC,EAAWlT,EAAM+4C,GACxD,IAAI9yC,EAAWjG,EACf,GAAIkT,EAAU+hC,QAAQl3C,OAAS,EAC3B,GAAuB,aAAnBmV,EAAU/P,MAAuB+P,EAAUzS,SAAS1C,OAAS,EAC7D,IAAK,IAAIi7C,EAAI,EAAGA,EAAI9lC,EAAU+hC,QAAQl3C,OAAQi7C,IAAK,EAC3CC,EAAS/lC,EAAU+hC,QAAQ+D,IACnBE,WACRjzC,GAAY,KAAOgzC,EAAOt/B,WAAWrb,EAAI,IAAM26C,EAAOt/B,WAAWpb,EACjE0H,GAAYgzC,EAAOj5C,KACnBi5C,EAAOC,UAAW,QAIzB,GAAuB,eAAnBhmC,EAAU/P,MAA6C,aAAnB+P,EAAU/P,MAAuB+P,EAAUzS,SAAS1C,OAAS,EACtG,IAASi7C,EAAI,EAAGA,EAAI9lC,EAAU+hC,QAAQl3C,OAAQi7C,IAAK,CAC/C,IAAIC,GAAAA,EAAS/lC,EAAU+hC,QAAQ+D,IACpBG,oBAAsBJ,IACxBE,EAAOC,UACJD,EAAOE,oBAAsBJ,IAC7B9yC,GAAY,KAAOgzC,EAAOt/B,WAAWrb,EAAI,IAAM26C,EAAOt/B,WAAWpb,EACjE0H,GAAYgzC,EAAOj5C,KACnBi5C,EAAOC,UAAW,IAO1C,OAAOjzC,GAGXyU,EAAUkuB,UAAUpQ,uBAAyB,SAAUtxB,EAAShE,EAAI01C,EAAe5yC,GAC/E,IAAIozC,EACAt6C,EACJoI,EAAQ7D,QAAUH,EAAG5E,EACrB4I,EAAQ5D,QAAUJ,EAAG3E,EACrBO,EAAQ2N,GAAM+H,UAAUtR,EAAI01C,GAC5BQ,EAAUrzC,EAAkBC,EAAUN,MAAOM,GAC7C,IAAI6yB,EAAO,IAAI3T,GAAKlf,EAAUnG,MAAOmG,EAAUpG,QAC/CsH,EAAQ4xB,MAAMx6B,EAAI0H,EAAU8yB,MAAMx6B,EAClC4I,EAAQ4xB,MAAMv6B,EAAIyH,EAAU8yB,MAAMv6B,EAClC2I,EAAQM,MAAQxB,EAAUwB,MAC1BN,EAAQyM,YAAc7U,EACtBoI,EAAQxJ,KAAO07C,EACflyC,EAAQqxB,gBAAiB,EACzBrxB,EAAQrH,MAAQg5B,EAAKh5B,MACrBqH,EAAQtH,OAASi5B,EAAKj5B,QAG1B8a,EAAUkuB,UAAU6P,eAAiB,SAAUvlC,EAAWjT,GAOtD,IANA,IACIo5C,EACA/sB,EACAgtB,EAHAt5C,EAAO,GAIPkO,KACAvQ,EAAI,EACDA,EAAIsC,EAAOlC,QACdmQ,EAAI9P,MAAOE,EAAG2B,EAAOtC,GAAGW,EAAGC,EAAG0B,EAAOtC,GAAGY,IACxCZ,IAEJ,IAAK,IAAI47C,EAAI,EAAGA,EAAIrmC,EAAU+hC,QAAQl3C,OAAQw7C,IAAK,CAClCrmC,EAAU+hC,QAAQsE,GACxBL,UAAW,EAGtB,GADAhrC,EAAM5G,KAAKgxB,eAAeplB,EAAWhF,GACjC5G,KAAK3H,aAAe,GAAmB,WAAd2H,KAAKnE,KAC9B,IAAK,IAAIq2C,EAAM,EAAGA,EAAMtrC,EAAInQ,OAAS,EAAGy7C,IAAO,CAC3CH,EAAQnrC,EAAIsrC,GACA,IAARA,IACAx5C,EAAO,IAAMq5C,EAAM/6C,EAAI,IAAM+6C,EAAM96C,GAEvC,IAAIuR,EAAYrD,GAAM4G,eAAenF,EAAIsrC,GAAMtrC,EAAIsrC,EAAM,IACrD1pC,EAAY,IAGJwc,EAFJktB,EAAMtrC,EAAInQ,OAAS,EACf+R,EAAgC,EAApBxI,KAAK3H,aACX8M,GAAM+9B,YAAYt8B,EAAIsrC,GAAMtrC,EAAIsrC,EAAM,IAAI,EAAO1pC,EAAY,GAG7DrD,GAAM+9B,YAAYt8B,EAAIsrC,GAAMtrC,EAAIsrC,EAAM,IAAI,EAAOlyC,KAAK3H,cAI1DuO,EAAIsrC,EAAM,GAEhBA,EAAM,IACF1pC,EAAgC,EAApBxI,KAAK3H,cACjB25C,EAAK7sC,GAAM+9B,YAAYt8B,EAAIsrC,GAAMtrC,EAAIsrC,EAAM,IAAI,EAAM1pC,EAAY,GAC7D0pC,EAAMtrC,EAAInQ,OAAS,IACnBuuB,EAAM,OAIVgtB,EAAK7sC,GAAM+9B,YAAYt8B,EAAIsrC,GAAMtrC,EAAIsrC,EAAM,IAAI,EAAMlyC,KAAK3H,eAG9D25C,IACAt5C,GAAQ,IAAMq5C,EAAM/6C,EAAI,IAAM+6C,EAAM96C,EAAI,IAAM+6C,EAAGh7C,EAAI,IAAMg7C,EAAG/6C,GAE9D+tB,IACIpZ,EAAU+hC,QAAQl3C,OAAS,IAC3BiC,EAAOsH,KAAKwxC,WAAW5lC,EAAWlT,EAAMw5C,GACjB,eAAnBtmC,EAAU/P,OACVnD,EAAOsH,KAAKwxC,WAAW5lC,EAAWlT,EAAMw5C,EAAM,KAGtDx5C,GAAQ,KAAOssB,EAAIhuB,EAAI,IAAMguB,EAAI/tB,SAM7C,GAAkB,WAAd+I,KAAKnE,KAAmB,CAGxB,IAAK,IAFD4G,OAAY,EACZtJ,EAAW6G,KAAK7G,SACXg5C,EAAM,EAAGA,EAAMh5C,EAAS1C,OAAQ07C,IACjCvrC,EAAInQ,OAAS,IACb0C,EAASg5C,GAAKvsB,cAAiB5uB,EAAG,EAAGC,EAAG,GACxCkC,EAASg5C,GAAKtsB,cAAiB7uB,EAAG,EAAGC,EAAG,KAExCkO,GAAMC,aAAajM,EAASg5C,GAAKjiC,SAAY/W,EAASg5C,GAAK9sC,QAAQ7N,OAAU2B,EAASg5C,GAAK9sC,QAAQC,SAM9FnM,EAASg5C,GAAK9sC,QAAQ7N,OAAS2B,EAASg5C,GAAK9sC,QAAQC,SAC1DnM,EAASg5C,GAAKvsB,aAAezgB,GAAMM,UAAUmB,EAAIurC,GAAMh5C,EAASg5C,GAAK9sC,QAAQ7N,MAAO2B,EAASg5C,GAAK9sC,QAAQC,UAG1GnM,EAASg5C,GAAKvsB,cACV5uB,EAAGmC,EAASg5C,GAAKjiC,OAAOlZ,GAAKmC,EAASg5C,GAAKvsB,aAAa5uB,EACxDC,EAAGkC,EAASg5C,GAAKjiC,OAAOjZ,GAAKkC,EAASg5C,GAAKvsB,aAAa3uB,KAXvD2U,EAAUnK,UAAYzB,KAAKkgC,eAAiBlgC,KAAKgB,gBAClDyB,EAAYY,GAAarD,KAAKgB,cAAcQ,OAAQoF,EAAIurC,IAAM,IAElEh5C,EAASg5C,GAAKvsB,aAAezT,GAAgBvL,EAAIurC,GAAMvrC,EAAIurC,EAAM,GAAI1vC,KAWrE0C,GAAMC,aAAajM,EAASg5C,GAAK35C,SAAYW,EAASg5C,GAAKzsC,QAAQlO,OAAU2B,EAASg5C,GAAKzsC,QAAQJ,SAM9FnM,EAASg5C,GAAKzsC,QAAQlO,OAAS2B,EAASg5C,GAAKzsC,QAAQJ,SAC1DnM,EAASg5C,GAAKtsB,aAAe1gB,GAAMM,UAAUmB,EAAIurC,EAAM,GAAIh5C,EAASg5C,GAAKzsC,QAAQlO,MAAO2B,EAASg5C,GAAKzsC,QAAQJ,UAG9GnM,EAASg5C,GAAKtsB,cACV7uB,EAAGmC,EAASg5C,GAAK35C,OAAOxB,GAAKmC,EAASg5C,GAAKtsB,aAAa7uB,EACxDC,EAAGkC,EAASg5C,GAAK35C,OAAOvB,GAAKkC,EAASg5C,GAAKtsB,aAAa5uB,KAXvD2U,EAAUwmC,UAAYpyC,KAAKqyC,eAAiBryC,KAAK0B,gBAClDe,EAAYY,GAAarD,KAAK0B,cAAcF,OAAQoF,EAAIurC,EAAM,IAAI,IAEtEh5C,EAASg5C,GAAKtsB,aAAe1T,GAAgBvL,EAAIurC,EAAM,GAAIvrC,EAAIurC,GAAM1vC,IAY7EmE,EAAIT,OAAO,EAAG,GAAKnP,EAAGmC,EAAS,GAAGysB,aAAa5uB,EAAGC,EAAGkC,EAAS,GAAGysB,aAAa3uB,IAC9E2P,EAAIT,OAAOS,EAAInQ,OAAS,EAAG,GACvBO,EAAGmC,EAASA,EAAS1C,OAAS,GAAGovB,aAAa7uB,EAAGC,EAAGkC,EAASA,EAAS1C,OAAS,GAAGovB,aAAa5uB,IAEnG2P,EAAM5G,KAAKgxB,eAAeplB,EAAWhF,GACrC,IAAK,IAAI0rC,EAAM,EAAGA,EAAMn5C,EAAS1C,OAAQ67C,IAAO,CAChC,IAARA,IACA55C,EAAO,IAAMkO,EAAI,GAAG5P,EAAI,IAAM4P,EAAI,GAAG3P,GAEzC,IAAI4V,EAAaylC,IAAQn5C,EAAS1C,OAAS,EAAKmQ,EAAIA,EAAInQ,OAAS,GAAGO,EAAI,IAAM4P,EAAIA,EAAInQ,OAAS,GAAGQ,EAC9FkC,EAASm5C,GAAK35C,OAAOQ,EAASm5C,GAAK35C,OAAOlC,OAAS,GAAGO,EAAI,IAAMmC,EAASm5C,GAAK35C,OAAOQ,EAASm5C,GAAK35C,OAAOlC,OAAS,GAAGQ,EAC1HyB,GAAQ,IACJS,EAASm5C,GAAK1sB,aAAa5uB,EAAI,IAAMmC,EAASm5C,GAAK1sB,aAAa3uB,EAAI,IAAMkC,EAASm5C,GAAKzsB,aAAa7uB,EAAI,IACvGmC,EAASm5C,GAAKzsB,aAAa5uB,EAAI,IAAM4V,QAI/C,IAAK,IAAIkT,EAAI,EAAGA,EAAInZ,EAAInQ,OAAQspB,IAC5BgyB,EAAQnrC,EAAImZ,GACF,IAANA,IACArnB,EAAO,IAAMq5C,EAAM/6C,EAAI,IAAM+6C,EAAM96C,GAEnC8oB,EAAI,IACJrnB,EAAOsH,KAAKwxC,WAAW5lC,EAAWlT,EAAMqnB,GACxCrnB,GAAQ,KAAYq5C,EAAM/6C,EAAI,IAAM+6C,EAAM96C,GAK1D,OAAOyB,GAGX0a,EAAUkuB,UAAUnQ,mBAAqB,SAAUvlB,GAC/C,IAAIhM,EACJ,OAAQgM,EAAUxN,MAAMvC,MACpB,IAAK,OACG+P,EAAUkC,QAAQ8D,SAAS,aAAcvD,KACzCzO,EAAUgM,EAAUkC,QAAQ8D,SAAS,IAEZ,YAAzBhG,EAAUxN,MAAMwmB,MAChB5kB,KAAKmuC,oBAAoBviC,EAAWhM,GAExC,MACJ,IAAK,cAC4B,cAAzBgM,EAAUxN,MAAMwmB,MAChB5kB,KAAKquC,oBAAoBziC,EAAUkC,QAAQ8D,SAAS,MAMpEwB,EAAUkuB,UAAU6M,oBAAsB,SAAUviC,EAAWhM,GAM3D,IAAK,IAJDpI,EACAoE,EACAnF,EAAS,EACT83C,EAAcvuC,KAAK2lB,mBACdjvB,EAAI,EAAGA,EAAI63C,EAAY93C,OAAS,EAAGC,IAAK,CAE7C,IAAIiyB,EAPY,IAMhBlyB,GAAkBuJ,KAAKsF,SAASipC,EAAY73C,GAAI63C,EAAY73C,EAAI,KAE5DD,GAAUkyB,IACVnxB,EAAQ0V,EAAUqhC,EAAY73C,GAAI63C,EAAY73C,EAAI,IAClDkF,EAAKuJ,GAAMM,UAAU8oC,EAAY73C,GAAIc,EAAOmxB,IAGpD/oB,EAAQ7D,QAAUH,EAAG5E,EACrB4I,EAAQ5D,QAAUJ,EAAG3E,GAGzBmc,EAAUkuB,UAAUjmB,MAAQ,SAAU0X,EAAIC,EAAIz6B,EAAOD,EAAQ26B,GACzD,IAAIsf,EAAK,EACLC,EAAK,EACT,GAAIxyC,KAAK8N,SAAW9N,KAAK8N,QAAQ3B,YAAa,CAC1C,IAAIA,EAAcwF,GAAe3R,MAC7ByyC,GAAazyC,KAAK8N,QAAQtM,OAAOjJ,OAASyH,KAAKE,MAAMiY,aAAe,GAAK,EACzEu6B,GAAc1yC,KAAK8N,QAAQtM,OAAOlJ,QAAU0H,KAAKE,MAAMiY,aAAe,GAAK,EAC/Eo6B,EAAMpmC,EAAY5T,MAAQk6C,EAC1BD,EAAMrmC,EAAY7T,OAASo6C,EAC3B3f,GAAMx6B,EAASkE,KAAK+I,IAAI+sC,EAAIC,IAAQC,EACpCzf,GAAM16B,EAAUmE,KAAK+I,IAAI+sC,EAAIC,IAAQE,EACrCH,EAAKC,EAAK/1C,KAAKqK,IAAIyrC,EAAIC,GAE3Bzf,EAAKC,EAAKv2B,KAAKqK,IAAIisB,EAAIC,GACvB,IAAIt3B,EAASL,IAEb0B,EAAarB,IADbu3B,EAAYA,GAAajzB,KAAK8N,SACEzB,YAAa4mB,EAAUl3B,QAASk3B,EAAUj3B,SAC1EyB,EAAY/B,EAAQq3B,EAAIC,EAAIC,EAAUl3B,QAASk3B,EAAUj3B,SACzDe,EAAarB,EAAQu3B,EAAU5mB,YAAa4mB,EAAUl3B,QAASk3B,EAAUj3B,SACzE,IAAIrD,EAASgE,EAAwBjB,EAAQsE,KAAK2lB,oBAKlD,OAJA3lB,KAAKe,YAAcpI,EAAO,GAC1BqH,KAAK6K,YAAclS,EAAOA,EAAOlC,OAAS,GAC1CkC,EAASqH,KAAK2lB,mBAAqB/kB,EAAoBZ,MACvD0wB,GAAgB1wB,KAAMrH,IACb3B,EAAGu7C,EAAIt7C,EAAGu7C,IAEvBvQ,IACIkE,iBAAe6G,KAChB55B,EAAUkuB,UAAW,aAAS,GACjCW,IACImB,WAAS/vB,uBAAqB0E,UAC/B3E,EAAUkuB,UAAW,mBAAe,GACvCW,IACImB,WAAS,KACVhwB,EAAUkuB,UAAW,mBAAe,GACvCW,IACIgE,gBAAejzB,KAChBI,EAAUkuB,UAAW,mBAAe,GACvCW,IACI8H,aAAY5kC,KACbiO,EAAUkuB,UAAW,mBAAe,GACvCW,IACI8H,aAAY5kC,KACbiO,EAAUkuB,UAAW,mBAAe,GACvCW,IACI0Q,oBAAkBtF,KACnBj6B,EAAUkuB,UAAW,gBAAY,GACpCW,IACImB,WAAS,KACVhwB,EAAUkuB,UAAW,gBAAY,GACpCW,IACImB,WAAS,KACVhwB,EAAUkuB,UAAW,gBAAY,GACpCW,IACImB,WAAS,KACVhwB,EAAUkuB,UAAW,kBAAc,GACtCW,IACImB,WAAS,aACVhwB,EAAUkuB,UAAW,YAAQ,GAChCW,IACImB,WAAS,IACVhwB,EAAUkuB,UAAW,oBAAgB,GACxCW,IACI8H,WAAU3rC,MAAO,QAAUkvC,KAC5Bl6B,EAAUkuB,UAAW,uBAAmB,GAC3CW,IACI8H,WAAU3rC,MAAO,SAAWkvC,KAC7Bl6B,EAAUkuB,UAAW,uBAAmB,GAC3CW,IACI8H,aAAY+C,KACb15B,EAAUkuB,UAAW,eAAW,GACnCW,IACImB,WAAS,KACVhwB,EAAUkuB,UAAW,oBAAgB,GACxCW,IACImB,WAAS,KACVhwB,EAAUkuB,UAAW,oBAAgB,GACxCW,IACI8H,WAAU5xB,YAAa,EAAGD,YAAa,SAAWsU,KACnDpZ,EAAUkuB,UAAW,aAAS,GACjCW,IACImB,WAAS,OACVhwB,EAAUkuB,UAAW,eAAW,GAC5BluB,GACT25B,I6BruCEtL,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAiD5DwlC,GAA4B,SAAUlQ,GAEtC,SAASkQ,IACL,OAAkB,OAAXlQ,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA4C/D,OA9CAyhC,GAAUmR,EAAYlQ,GAItBT,IACImB,WAAS,KACVwP,EAAWtR,UAAW,YAAQ,GACjCW,IACImB,WAAS,KACVwP,EAAWtR,UAAW,gBAAY,GACrCW,IACImB,WAAS,YACVwP,EAAWtR,UAAW,uBAAmB,GAC5CW,IACImB,WAAS,QACVwP,EAAWtR,UAAW,YAAQ,GACjCW,IACImB,WAAS,KACVwP,EAAWtR,UAAW,mBAAe,GACxCW,IACImB,WAAS,KACVwP,EAAWtR,UAAW,mBAAe,GACxCW,IACImB,WAAS,KACVwP,EAAWtR,UAAW,YAAQ,GACjCW,IACImB,WAAS,UACVwP,EAAWtR,UAAW,iBAAa,GACtCW,IACImB,WAAS,KACVwP,EAAWtR,UAAW,oBAAgB,GACzCW,IACImB,YAAS,IACVwP,EAAWtR,UAAW,eAAW,GACpCW,IACImB,WAAS,IACVwP,EAAWtR,UAAW,cAAU,GACnCW,IACI8H,aAAYjE,KACb8M,EAAWtR,UAAW,cAAU,GACnCW,IACImB,WAAS,WACVwP,EAAWtR,UAAW,2BAAuB,GAChDW,IACImB,WAAS,WACVwP,EAAWtR,UAAW,yBAAqB,GACvCsR,GACTvP,iBAKE5vB,GAA0B,SAAUivB,GAEpC,SAASjvB,IACL,OAAkB,OAAXivB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA6E/D,OA/EAyhC,GAAUhuB,EAAUivB,GAOpBjvB,EAAS6tB,UAAU/N,KAAO,SAAUr0B,GAChC,IAAI4Y,EAAY,IAAIob,GAIpB,GAHApb,EAAUyuB,iBAAkB,EAC5BzuB,EACUlG,YACN5R,KAAKsoB,WAAY,CACjB,IAAIpc,EAAUlM,KAAKgZ,MAAMviB,OAAS,EAAKyI,EAAQ0b,UAAU5a,KAAKgZ,MAAM,GAAGnZ,IAAIiO,QACvE5O,EAAQ0b,UAAU5a,KAAKkd,WAAW,GAAGrd,IAAIiO,QACzCA,EAAU5O,EAAQ2zC,WAAW3mC,EAAQlM,KAAKsoB,WAAWzoB,IACzDiY,EAAUlG,SAAS9a,KAAKgX,QAGxB,GAAI9N,KAAKgZ,OAAShZ,KAAKkd,WAAY,CAC/B,IAAK,IAAIxmB,EAAI,EAAGA,EAAIsJ,KAAKgZ,MAAMviB,OAAQC,IAAK,CAEpCoX,EADO5O,EAAQ0b,UAAU5a,KAAKgZ,MAAMtiB,GAAGmJ,IACxBiO,QAMnBgK,EAAUlG,SAAS9a,KAAKgX,GAE5B,IAAK,IAAIzX,EAAI,EAAGA,EAAI2J,KAAKkd,WAAWzmB,OAAQJ,IAAK,CAEzCyX,EADY5O,EAAQ0b,UAAU5a,KAAKkd,WAAW7mB,GAAGwJ,IAC7BiO,QAIxBgK,EAAUlG,SAAS9a,KAAKgX,IAKpC,OADA9N,KAAK8N,QAAUgK,EACRA,GAEXmqB,IACImB,WAAS,OACV3vB,EAAS6tB,UAAW,eAAW,GAClCW,IACIgE,gBAAe1xB,KAChBd,EAAS6tB,UAAW,aAAS,GAChCW,IACIgE,gBAAe7yB,KAChBK,EAAS6tB,UAAW,kBAAc,GACrCW,IACImB,cACD3vB,EAAS6tB,UAAW,aAAS,GAChCW,IACImB,cACD3vB,EAAS6tB,UAAW,cAAU,GACjCW,IACImB,WAAS,IACV3vB,EAAS6tB,UAAW,mBAAe,GACtCW,IACImB,WAAS,IACV3vB,EAAS6tB,UAAW,eAAW,GAClCW,IACImB,WAAS,IACV3vB,EAAS6tB,UAAW,eAAW,GAClCW,IACI8H,WAAU/yC,EAAG,GAAKC,EAAG,IAAOkO,KAC7BsO,EAAS6tB,UAAW,aAAS,GAChCW,IACImB,WAAS,sBACV3vB,EAAS6tB,UAAW,+BAA2B,GAClDW,IACIgE,gBAAe2M,KAChBn/B,EAAS6tB,UAAW,mBAAe,GACtCW,IACImB,WAASrR,sBAAoB+gB,MAC9Br/B,EAAS6tB,UAAW,mBAAe,GAC/B7tB,GACT4vB,iBCxME5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAkBxCiR,GAA4B,SAAUrQ,GAEtC,SAASqQ,IACL,IAAI1M,EAAmB,OAAX3D,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAWhE,OAPAqmC,EAAMv1B,YAAc,WAMpBu1B,EAAME,qBAAkBtsC,EACjBosC,EA6JX,OA1KA5E,GAAUsR,EAAYrQ,GAmBtBqQ,EAAWzR,UAAU3jB,QAAU,SAAU4nB,GACrC,IAAIyN,EAAkC,eAArBhzC,KAAK8Q,YAA+B9Q,KAAKizC,sBAAwBjzC,KAAKkzC,oBAEvF,OADAlzC,KAAK8d,YAAc9d,KAAKmzC,kBAAkB5N,EAAeyN,GAClDhzC,KAAK8d,aAMhBi1B,EAAWzR,UAAUzjB,QAAU,SAAUC,GACrC,IAAIk1B,EAAkC,eAArBhzC,KAAK8Q,YAA+B9Q,KAAKozC,uBAAyBpzC,KAAKqzC,qBAGxF,OAFArzC,KAAK+N,WAAa/N,KAAKszC,kBAAkBx1B,EAAak1B,GACtDhzC,KAAKylC,eACEzlC,KAAK+N,YAMhBglC,EAAWzR,UAAU6R,kBAAoB,SAAU5N,EAAeyN,GAC9D,IAAIrM,OAAU1sC,EACd,QAAsBA,IAAlB+F,KAAK4R,UAA0B5R,KAAK4R,SAASnb,OAAS,EACtD,IAAK,IAAIoG,EAAK,EAAG6f,EAAK1c,KAAK4R,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAI+Q,EAAQ8O,EAAG7f,GACf+Q,EAAMtB,gBAAkBtM,KAAKqM,YAAcrM,KAAKsM,gBAE5CtM,KAAKumC,gBACL34B,EAAM+P,QAAQ/P,EAAMkQ,aAGpBlQ,EAAM+P,QAAQ4nB,GAElB,IAAI4B,EAAYv5B,EAAMkQ,YAAY0jB,QAElCxhC,KAAKuzC,iBAAiB3lC,EAAOu5B,GAEH,IAAtBv5B,EAAMvB,cACN86B,EAAYtJ,GAAWsJ,EAAWv5B,EAAMvB,mBAG5BpS,IAAZ0sC,EACAA,EAAUQ,EAGLv5B,EAAMi3B,kBACPmO,EAAW7L,EAAWR,GAStC,OAJAA,EAAUjE,EAAOpB,UAAUkE,oBAAoB4B,KAAKpnC,KAAM2mC,EAASpB,GACnEvlC,KAAKgnC,gBAAgBL,GAErB3mC,KAAKinC,aAAaN,GACXA,GAEXoM,EAAWzR,UAAUgS,kBAAoB,SAAUx1B,EAAa01B,GAC5D,QAAsBv5C,IAAlB+F,KAAK4R,UAA0B5R,KAAK4R,SAASnb,OAAS,EAAG,CACzD,IAAIO,OAAI,EACJC,OAAI,EACRD,EAAIgJ,KAAKjE,QAAU+hB,EAAYvlB,MAAQyH,KAAKwxB,MAAMx6B,EAAIgJ,KAAKogC,QAAQx9B,KACnE3L,EAAI+I,KAAKhE,QAAU8hB,EAAYxlB,OAAS0H,KAAKwxB,MAAMv6B,EAAI+I,KAAKogC,QAAQr9B,IACpE,IAAK,IAAIlG,EAAK,EAAG6f,EAAK1c,KAAK4R,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAI+Q,EAAQ8O,EAAG7f,GACXsqC,EAAYv5B,EAAMkQ,YAAY0jB,QAC9BiS,EAActM,EACO,aAArBnnC,KAAK8Q,YACL7Z,GAAK2W,EAAMjL,OAAOI,IAGlB/L,GAAK4W,EAAMjL,OAAOC,KAEI,IAAtBgL,EAAMvB,cACNonC,EAAc5V,GAAWsJ,EAAWv5B,EAAMvB,cAE9C,IAAIpL,EAASuyC,EAAex8C,EAAGC,EAAG2W,EAAO5N,KAAM8d,EAAa21B,GAC5D/Q,EAAOpB,UAAU4F,0BAA0BE,KAAKpnC,KAAM4N,EAAO3M,GAC7D2M,EAAMiQ,QAAQspB,GAAW,GACA,aAArBnnC,KAAK8Q,YACL7Z,GAAKw8C,EAAYn7C,OAASsV,EAAMjL,OAAOG,OAGvC9L,GAAKy8C,EAAYl7C,MAAQqV,EAAMjL,OAAOE,OAIlD,OAAOib,GAEXi1B,EAAWzR,UAAU2R,sBAAwB,SAAUrlC,EAAOoQ,GAC1DA,EAAO1lB,OAASmE,KAAK+I,IAAIoI,EAAMtV,OAAQ0lB,EAAO1lB,QAC9C0lB,EAAOzlB,OAASqV,EAAMrV,OAE1Bw6C,EAAWzR,UAAU4R,oBAAsB,SAAUtlC,EAAOoQ,GACxDA,EAAOzlB,MAAQkE,KAAK+I,IAAIoI,EAAMrV,MAAOylB,EAAOzlB,OAC5CylB,EAAO1lB,QAAUsV,EAAMtV,QAE3By6C,EAAWzR,UAAU8R,uBAAyB,SAAUp8C,EAAGC,EAAG2W,EAAOoQ,EAAQ01B,EAAahN,GACtF,IAAIzpC,EAAU,EACd,GAAgC,QAA5B2Q,EAAMiL,kBACN5b,EAAUhG,EAAI2W,EAAMjL,OAAOI,IAAM2jC,EAAYpuC,OAAS,OAErD,GAAgC,WAA5BsV,EAAMiL,kBAAgC,CAE3C5b,EADmB+gB,EAAOhiB,QAAU03C,EAAYp7C,QAAU,EAAI0lB,EAAOwT,MAAMv6B,GAClD+mB,EAAOoiB,QAAQt9B,OAAS8K,EAAMjL,OAAOG,OAAS4jC,EAAYpuC,OAAS,OAG5F2E,EAAU+gB,EAAOhiB,QAAU03C,EAAYp7C,OAAS0lB,EAAOwT,MAAMv6B,EAAIy8C,EAAYp7C,OAAS,EAClFsV,EAAMjL,OAAOI,MACb9F,EAAUhG,EAAI2W,EAAMjL,OAAOI,IAAM2jC,EAAYpuC,OAAS,GAG9D,OAAStB,EAAGA,EAAI0vC,EAAYnuC,MAAQ,EAAGtB,EAAGgG,IAE9C81C,EAAWzR,UAAU+R,qBAAuB,SAAUr8C,EAAGC,EAAG2W,EAAOoQ,EAAQ8qB,EAAY3B,GACnF,IAAInqC,EAAU,EACd,GAAkC,SAA9B4Q,EAAMkL,oBACN9b,EAAUhG,EAAI4W,EAAMjL,OAAOC,KAAOukC,EAAU5uC,MAAQ,OAEnD,GAAkC,UAA9BqV,EAAMkL,oBAAiC,CAE5C9b,EADkBghB,EAAOjiB,QAAU+sC,EAAWvwC,OAAS,EAAIylB,EAAOwT,MAAMx6B,GAChDgnB,EAAOoiB,QAAQv9B,MAAQ+K,EAAMjL,OAAOE,MAAQskC,EAAU5uC,MAAQ,OAGtFyE,EAAUghB,EAAOjiB,QAAU+sC,EAAWvwC,MAAQylB,EAAOwT,MAAMx6B,EAAI8xC,EAAWvwC,MAAQ,EAC9EqV,EAAMjL,OAAOC,OACb5F,EAAUhG,EAAI4W,EAAMjL,OAAOC,KAAOukC,EAAU5uC,MAAQ,GAG5D,OAASvB,EAAGgG,EAAS/F,EAAGA,EAAIkwC,EAAU7uC,OAAS,IAEnDy6C,EAAWzR,UAAU0F,gBAAkB,SAAUzV,GAC7C,QAAsBt3B,IAAlB+F,KAAK4R,UAA0B5R,KAAK4R,SAASnb,OAAS,EACtD,IAAK,IAAIoG,EAAK,EAAG6f,EAAK1c,KAAK4R,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAI+Q,EAAQ8O,EAAG7f,GACU,aAArBmD,KAAK8Q,YAC6B,YAA9BlD,EAAMkL,sBACNlL,EAAMkQ,YAAYvlB,MAAQg5B,EAAKh5B,OAASqV,EAAMjL,OAAOC,KAAOgL,EAAMjL,OAAOE,QAI7C,YAA5B+K,EAAMiL,oBACNjL,EAAMkQ,YAAYxlB,OAASi5B,EAAKj5B,QAAUsV,EAAMjL,OAAOI,IAAM6K,EAAMjL,OAAOG,WAM9FiwC,EAAWzR,UAAUiS,iBAAmB,SAAU3lC,EAAO2jB,GACrDA,EAAKj5B,QAAUsV,EAAMjL,OAAOI,IAAM6K,EAAMjL,OAAOG,OAC/CyuB,EAAKh5B,OAASqV,EAAMjL,OAAOC,KAAOgL,EAAMjL,OAAOE,OAE5CkwC,GACT7f,IC9LEuO,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAqBxC6R,GAA2B,SAAUjR,GAErC,SAASiR,IACL,IAAItN,EAAmB,OAAX3D,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAKhE,OAJAqmC,EAAMuN,cACNvN,EAAMwN,aACNxN,EAAMyN,oBACNzN,EAAM0N,oBACC1N,EAiYX,OAxYA5E,GAAUkS,EAAWjR,GASrBiR,EAAUrS,UAAUjhB,kBAAoB,WACpC,OAAOrgB,KAAKg0C,UAEhBL,EAAUrS,UAAUlhB,UAAY,SAAU7lB,EAAK05C,EAAOC,EAAUC,EAASC,GAErE,GAAIp0C,KAAKuc,KAAK9lB,QAAUw9C,EAAO,CAC3B,IAAI70B,EAAMpf,KAAKuc,KAAK03B,GACpB,GAAI70B,EAAI5C,MAAM/lB,OAASy9C,EAAU,CAC7BE,EAAaA,GAAc,EAC3BD,EAAUA,GAAW,EACrB,IAAIE,EAAOj1B,EAAI5C,MAAM03B,GACrBG,EAAKD,WAAa33C,KAAK+I,IAAI4uC,EAAYC,EAAKD,YAC5CC,EAAKF,QAAU13C,KAAK+I,IAAI2uC,EAASE,EAAKF,SACtC,IAAIjoC,EAAS,IAAIooC,IACjBpoC,EAAS3R,GACF05C,MAAQA,EACf/nC,EAAOgoC,SAAWA,EAClBhoC,EAAOkoC,WAAaA,EACpBp0C,KAAK4zC,WAAW1nC,EAAOrM,IAAMqM,EAC7BlM,KAAKu0C,gBAAgBroC,EAAQmoC,MAyBzCV,EAAUrS,UAAUiT,gBAAkB,SAAUh6C,EAAK85C,GAC5CA,EAAKziC,WACNyiC,EAAKziC,aAGTrX,EAAI2F,MAAMgY,YAAc,QACxB3d,EAAI2F,MAAMiY,YAAc,EACxB5d,EAAI2F,MAAM+X,KAAO,QACjBo8B,EAAKziC,SAAS9a,KAAKyD,IAGvBo5C,EAAUrS,UAAUkT,iBAAmB,SAAUz4C,EAASC,EAASzD,EAAOD,GACtE0H,KAAKjE,QAAUA,EACfiE,KAAKhE,QAAUA,EACfgE,KAAKzH,MAAQA,EACbyH,KAAK1H,OAASA,GAGlBq7C,EAAUrS,UAAU7hB,eAAiB,SAAUlD,EAAMvB,GACjDhb,KAAKy0C,SAAWl4B,EAChBvc,KAAKg0C,SAAWh5B,EAChBhb,KAAK4R,YACL5R,KAAKuc,KAAOvc,KAAKuc,SACjB,IAAK,IAAI7lB,EAAI,EAAGA,EAAI6lB,EAAK9lB,OAAQC,IAAK,CAClC,IAAIg+C,EAAUn4B,EAAK7lB,GACf0oB,EAAM,IAAIu1B,GACdv1B,EAAI5C,SACJ,IAAIo4B,EAAc,IAAI3zB,GAEtB2zB,EAAYr8C,MAAQyH,KAAKzH,MACzB,IAAIs8C,EAAY70C,KAAKg0C,eACH/5C,IAAd46C,GAA2BA,EAAUp+C,OAAS,KAC9Co+C,GAAaD,IAEjB50C,KAAK80C,aAAaD,EAAWH,EAASt1B,GACtCpf,KAAKuc,KAAKzlB,KAAKsoB,KAIvBu0B,EAAUrS,UAAUwT,aAAe,SAAU95B,EAAS05B,EAASt1B,GAC3D,IAAK,IAAI/oB,EAAI,EAAGA,EAAI2kB,EAAQvkB,OAAQJ,IAAK,CACrC,IAAI0+C,EAAU/5B,EAAQ3kB,GAClBg+C,EAAO,IAAIW,GACfX,EAAKziC,YACL5R,KAAK6zC,UAAU57B,KAAO,OACtBjY,KAAK6zC,UAAU37B,YAAc,OAC7Bm8B,EAAKx0C,GAAKyZ,KACV+6B,EAAKn0C,MAAQF,KAAK6zC,UAClBQ,EAAKN,iBAAmBM,EAAKh3B,SAAW03B,EAAQx8C,MAChD87C,EAAKY,kBAAoBZ,EAAK96B,UAAYm7B,EAAQp8C,OAClD8mB,EAAI5C,MAAM1lB,KAAKu9C,GACfr0C,KAAK4R,SAAS9a,KAAKu9C,KAI3BV,EAAUrS,UAAU4T,cAAgB,WAIhC,IAAK,IAHD34B,EAAOvc,KAAKuc,SACZ44B,EAAkB,EAClBC,EAAiB,EACZ1+C,EAAI,EAAGA,EAAI6lB,EAAK9lB,OAAQC,IAAK,CAClC,IAAI0oB,EAAMpf,KAAKuc,KAAK7lB,GACpB0+C,EAAiB,EACjB,IAAK,IAAI/+C,EAAI,EAAGA,EAAI+oB,EAAI5C,MAAM/lB,OAAQJ,IAClC++C,GAAkBh2B,EAAI5C,MAAMnmB,GAAG09C,iBAC3B19C,IAAM+oB,EAAI5C,MAAM/lB,OAAS,IACrBuJ,KAAKzH,OAASyH,KAAKzH,QAAU68C,IAC7Bh2B,EAAI5C,MAAMnmB,GAAG09C,kBAAqB/zC,KAAKzH,MAAQ68C,EAC3Ch2B,EAAI5C,MAAMnmB,GAAGub,UAAYwN,EAAI5C,MAAMnmB,GAAGub,SAASnb,SAC/C2oB,EAAI5C,MAAMnmB,GAAGub,SAAS,GAAGyL,SAAW+B,EAAI5C,MAAMnmB,GAAG09C,mBAGzDoB,GAAmB/1B,EAAI5C,MAAMnmB,GAAG4+C,kBAC5Bv+C,IAAM6lB,EAAK9lB,OAAS,GAChBuJ,KAAK1H,QAAU0H,KAAK1H,SAAW68C,IAC/B/1B,EAAI5C,MAAMnmB,GAAG4+C,mBAAsBj1C,KAAK1H,OAAS68C,EAC7C/1B,EAAI5C,MAAMnmB,GAAGub,UAAYwN,EAAI5C,MAAMnmB,GAAGub,SAASnb,SAC/C2oB,EAAI5C,MAAMnmB,GAAGub,SAAS,GAAG2H,UAAY6F,EAAI5C,MAAMnmB,GAAG4+C,uBAS9EtB,EAAUrS,UAAU9lB,gBAAkB,SAAUy4B,EAAO37C,GACnD,IAAI8mB,EAAMpf,KAAKuc,KAAK03B,QACAh6C,IAAhB+F,KAAK1H,SACL0H,KAAK1H,QAAUA,EAAS8mB,EAAI5C,MAAM,GAAGy4B,mBAEzC,IAAK,IAAIv+C,EAAI,EAAGA,EAAI0oB,EAAI5C,MAAM/lB,OAAQC,IAClC0oB,EAAI5C,MAAM9lB,GAAGu+C,kBAAoB71B,EAAI5C,MAAM9lB,GAAG6iB,UAAYjhB,EACtD8mB,EAAI5C,MAAM9lB,GAAGkb,UAAYwN,EAAI5C,MAAM9lB,GAAGkb,SAASnb,SAC/C2oB,EAAI5C,MAAM9lB,GAAGkb,SAAS,GAAG2H,UAAYjhB,GAG7C0H,KAAK8zC,iBAAiBG,GAAS37C,EAC/B0H,KAAK2d,QAAQ,IAAIC,GAAK5d,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAK6d,QAAQ7d,KAAK8d,cAGtB61B,EAAUrS,UAAUpmB,kBAAoB,SAAUm6B,EAAO98C,QAClC0B,IAAf+F,KAAKzH,QACLyH,KAAKzH,OAASA,EAAQyH,KAAKuc,KAAK,GAAGC,MAAM64B,GAAOtB,kBAEpD,IAAK,IAAIr9C,EAAI,EAAGA,EAAIsJ,KAAKuc,KAAK9lB,OAAQC,IAClCsJ,KAAKuc,KAAK7lB,GAAG8lB,MAAM64B,GAAOtB,iBAAmB/zC,KAAKuc,KAAK7lB,GAAG8lB,MAAM64B,GAAOh4B,SAAW9kB,EAC9EyH,KAAKuc,KAAK7lB,GAAG8lB,MAAM64B,GAAOzjC,UAAY5R,KAAKuc,KAAK7lB,GAAG8lB,MAAM64B,GAAOzjC,SAASnb,SACzEuJ,KAAKuc,KAAK7lB,GAAG8lB,MAAM64B,GAAOzjC,SAAS,GAAGyL,SAAW9kB,GAGzDyH,KAAK+zC,iBAAiBsB,GAAS98C,EAC/ByH,KAAK2d,QAAQ,IAAIC,GAAK5d,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAK6d,QAAQ7d,KAAK8d,cAGtB61B,EAAUrS,UAAUgU,OAAS,SAAUrB,EAAO13B,GAC1C,IAAK,IAAI7lB,EAAI,EAAGA,EAAI6lB,EAAK9lB,OAAQC,IAAK,CAClC,IAAIg+C,EAAUn4B,EAAK7lB,GACnBsJ,KAAKy0C,SAAS39C,KAAK49C,GACnB,IAAIt1B,EAAM,IAAIu1B,GACdv1B,EAAI5C,UACc,IAAIyE,IACV1oB,MAAQyH,KAAKzH,MACzB,IAAIyiB,EAAUhb,KAAKg0C,SACnBh0C,KAAK80C,aAAa95B,EAAS05B,EAASt1B,GAChC60B,EAAQj0C,KAAKuc,KAAK9lB,OAAS,EAC3BuJ,KAAKuc,KAAKzlB,KAAKsoB,GAGfpf,KAAKuc,KAAKpW,OAAO8tC,EAAO,EAAG70B,GAGnCpf,KAAK2d,QAAQ,IAAIC,GAAK5d,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAK6d,QAAQ7d,KAAK8d,cAGtB61B,EAAUrS,UAAUiU,UAAY,SAAUrB,EAAUl5B,GAEhD,IAAK,IADDuB,EAAOvc,KAAKuc,KACP7lB,EAAI,EAAGA,EAAI6lB,EAAK9lB,OAAQC,IAG7B,IAAK,IAFD0oB,EAAM7C,EAAK7lB,GACXg+C,EAAU10C,KAAKy0C,SAAS/9C,GACnBL,EAAI,EAAGA,EAAI2kB,EAAQvkB,OAAQJ,IAAK,CACrC,IAAI0+C,EAAU/5B,EAAQ3kB,GAClBg+C,EAAO,IAAIW,GACfX,EAAKn0C,MAAQF,KAAK6zC,UAClBQ,EAAKN,iBAAmBgB,EAAQx8C,MAChC87C,EAAKY,kBAAoBP,EAAQp8C,OAC7B47C,EAAW90B,EAAI5C,MAAM/lB,OAAS,EAC9B2oB,EAAI5C,MAAM1lB,KAAKu9C,GAGfj1B,EAAI5C,MAAMrW,OAAO+tC,EAAU,EAAGG,GAElCr0C,KAAK4R,SAAS9a,KAAKu9C,GAG3Br0C,KAAK2d,QAAQ,IAAIC,GAAK5d,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAK6d,QAAQ7d,KAAK8d,cAGtB61B,EAAUrS,UAAUkU,UAAY,SAAUvB,GAGtC,IAAK,IADDuB,EADOx1C,KAAKuc,KACK03B,GACZv9C,EAAI,EAAGA,EAAI8+C,EAAUh5B,MAAM/lB,OAAQC,IAAK,CAC7C,IAAI29C,EAAOmB,EAAUh5B,MAAM9lB,GAC3BsJ,KAAK4R,SAASzL,OAAOnG,KAAK4R,SAASsM,QAAQm2B,GAAO,GAClD,IAAIz0C,EAAU2hB,SAASC,eAAe6yB,EAAKx0C,GAAK,iBAChDD,EAAQ2lB,cAAc+J,YAAY1vB,GAEtCI,KAAKuc,KAAKpW,OAAO8tC,EAAO,GACxBj0C,KAAKy0C,SAAStuC,OAAO8tC,EAAO,GAC5Bj0C,KAAK2d,QAAQ,IAAIC,GAAK5d,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAK6d,QAAQ7d,KAAK8d,cAGtB61B,EAAUrS,UAAUmU,aAAe,SAAUvB,GAEzC,IAAK,IADD33B,EAAOvc,KAAKuc,KACP7lB,EAAI,EAAGA,EAAI6lB,EAAK9lB,OAAQC,IAAK,CAClC,IAAI29C,EAAO93B,EAAK7lB,GAAG8lB,MAAM03B,GACzBl0C,KAAK4R,SAASzL,OAAOnG,KAAK4R,SAASsM,QAAQm2B,GAAO,GAClD,IAAIz0C,EAAU2hB,SAASC,eAAe6yB,EAAKx0C,GAAK,iBAChDD,EAAQ2lB,cAAc+J,YAAY1vB,GAClC2c,EAAK7lB,GAAG8lB,MAAMrW,OAAO+tC,EAAU,GAEnCl0C,KAAK2d,QAAQ,IAAIC,GAAK5d,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAK6d,QAAQ7d,KAAK8d,cAGtB61B,EAAUrS,UAAUoU,eAAiB,SAAUC,EAAcC,GAC9C51C,KAAKuc,KAAhB,IACInM,EAAOpQ,KAAKuc,KAAKo5B,GACrB31C,KAAKuc,KAAKpW,OAAOwvC,EAAc,GAC/B31C,KAAKuc,KAAKpW,OAAOyvC,EAAU,EAAGxlC,GAC9BpQ,KAAK2d,QAAQ,IAAIC,GAAK5d,KAAKzH,MAAOyH,KAAK1H,SACvC0H,KAAK6d,QAAQ7d,KAAK8d,cAGtB61B,EAAUrS,UAAU3jB,QAAU,SAAU4nB,GACpC,IAAIoB,OAAU1sC,EACd,QAAkBA,IAAd+F,KAAKuc,MAAsBvc,KAAKuc,KAAK9lB,OAAS,EAAG,CACjD,IAAIC,EAAI,EACJL,EAAI,EACRswC,EAAU,IAAI/oB,GAAK,EAAG,GACtB5d,KAAKk1C,gBACL,IAAK,IAAIr4C,EAAK,EAAG6f,EAAK1c,KAAKuc,KAAM1f,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAEnDxG,EAAI,EACJ,IAAK,IAAIm1B,EAAK,EAAGC,GAFbrM,EAAM1C,EAAG7f,IAEa2f,MAAOgP,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACnD,IACI+F,GADA8iB,EAAO5oB,EAAGD,IACE7N,QAAQ,IAAIC,GAAKy2B,EAAKN,iBAAkBM,EAAKY,oBACxC,IAAjBZ,EAAKF,UACK,IAAN99C,QAAwC4D,IAA7B+F,KAAK8zC,iBAAiBp9C,GACjCsJ,KAAK8zC,iBAAiBp9C,GAAK66B,EAAKj5B,OAGhC0H,KAAK8zC,iBAAiBp9C,GAAK+F,KAAK+I,IAAI+rB,EAAKj5B,OAAQ0H,KAAK8zC,iBAAiBp9C,KAGvD,IAApB29C,EAAKD,aACK,IAAN19C,QAAwCuD,IAA7B+F,KAAK+zC,iBAAiB19C,GACjC2J,KAAK+zC,iBAAiB19C,GAAKk7B,EAAKh5B,MAGhCyH,KAAK+zC,iBAAiB19C,GAAKoG,KAAK+I,IAAI+rB,EAAKh5B,MAAOyH,KAAK+zC,iBAAiB19C,IAEtEK,IAAMsJ,KAAKuc,KAAK9lB,OAAS,IACzBkwC,EAAQpuC,OAASyH,KAAK+zC,iBAAiB19C,KAG/CA,IAEJswC,EAAQruC,QAAU0H,KAAK8zC,iBAAiBp9C,GACxCA,IAGJA,EAAIL,EAAI,EAER,IAAK,IADDykB,EAAW,EACN+6B,EAAK,EAAGC,EAAK91C,KAAKuc,KAAMs5B,EAAKC,EAAGr/C,OAAQo/C,IAAM,CACnD,IAAIz2B,EACJ/oB,EAAI,EAEJ,IAAK,IADD0/C,EAAY,EACPC,EAAK,EAAGC,GAHb72B,EAAM02B,EAAGD,IAGar5B,MAAOw5B,EAAKC,EAAGx/C,OAAQu/C,IAAM,CACnD,IAAI3B,EACJ,GAAwB,KADpBA,EAAO4B,EAAGD,IACL5B,WAAkB,CACvBC,EAAKv2B,YAAYvlB,MAAQ,EACzB,IAAK,IAAIwsB,EAAQ,EAAGA,EAAQsvB,EAAKD,WAAYrvB,IACpCA,EAAQ1uB,EAAK+oB,EAAI5C,MAAM/lB,SACxB49C,EAAKv2B,YAAYvlB,OAASyH,KAAK+zC,iBAAiBhvB,EAAQ1uB,GACxDg+C,EAAKh3B,SAAWg3B,EAAKv2B,YAAYvlB,MACjC87C,EAAK12B,QAAQ02B,EAAKv2B,cAG1BznB,SAGAg+C,EAAKv2B,YAAYvlB,MAAQyH,KAAK+zC,iBAAiBgC,GAC/C1B,EAAK12B,QAAQ02B,EAAKv2B,aAEtB,GAAqB,IAAjBu2B,EAAKF,QAAe,CACpBE,EAAKv2B,YAAYxlB,OAAS,EAC1B,IAASysB,EAAQ,EAAGA,EAAQsvB,EAAKF,QAASpvB,IACjCA,EAAQjK,EAAY9a,KAAKuc,KAAK9lB,SAC/B49C,EAAKv2B,YAAYxlB,QAAU0H,KAAK8zC,iBAAiB/uB,EAAQjK,GACzDu5B,EAAK96B,UAAY86B,EAAKv2B,YAAYxlB,OAClC+7C,EAAK12B,QAAQ02B,EAAKv2B,mBAK1Bu2B,EAAKv2B,YAAYxlB,OAAS0H,KAAK8zC,iBAAiBh5B,GAChDu5B,EAAK12B,QAAQ02B,EAAKv2B,aAEtBpnB,IACAq/C,IAEJj7B,KAQR,YALgB7gB,IAAZ0sC,IACAA,EAAUjE,EAAOpB,UAAUkE,oBAAoB4B,KAAKpnC,KAAM2mC,EAASpB,IAEvE7C,EAAOpB,UAAU0F,gBAAgBI,KAAKpnC,KAAM2mC,GAC5C3mC,KAAK8d,YAAc6oB,EACZA,GAGXgN,EAAUrS,UAAUzjB,QAAU,SAAUC,EAAao4B,GACjD,QAAkBj8C,IAAd+F,KAAKuc,MAAsBvc,KAAKuc,KAAK9lB,OAAS,EAAG,CAMjD,IAAK,IALDO,EAAIgJ,KAAKjE,QAAU+hB,EAAYvlB,MAAQyH,KAAKwxB,MAAMx6B,EAClDC,EAAI+I,KAAKhE,QAAU8hB,EAAYxlB,OAAS0H,KAAKwxB,MAAMv6B,EACnDk/C,EAAQn/C,EACRX,EAAI,EACJK,EAAI,EACCmG,EAAK,EAAG6f,EAAK1c,KAAKuc,KAAM1f,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAEnDs5C,EAAQn/C,EACRX,EAAI,EACJ,IAAK,IAAIm1B,EAAK,EAAGC,GAHbrM,EAAM1C,EAAG7f,IAGa2f,MAAOgP,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACnD,IAAI6oB,EAAO5oB,EAAGD,GACV4qB,EAAY35C,KAAK+I,IAAIxF,KAAK+zC,iBAAiB19C,GAAIg+C,EAAKv2B,YAAYvlB,OAChE89C,EAAa55C,KAAK+I,IAAIxF,KAAK8zC,iBAAiBp9C,GAAI29C,EAAKv2B,YAAYxlB,QACrE+7C,EAAKt4C,QAAUo6C,EAAQC,EAAY/B,EAAK7iB,MAAMx6B,EAC9Cq9C,EAAKr4C,QAAU/E,EAAIo/C,EAAahC,EAAK7iB,MAAMv6B,EAC3Ck/C,GAASn2C,KAAK+zC,iBAAiB19C,GAC/Bg+C,EAAKx2B,QAAQ,IAAID,GAAKw4B,EAAWC,IACjChgD,IAEJY,GAAK+I,KAAK8zC,iBAAiBp9C,GAC3BA,IAEJ,GAAIw/C,EAGA,IAAK,IAAII,EAAM,EAAGA,EAAMt2C,KAAKuc,KAAK9lB,OAAQ6/C,IAEtC,IAAK,IADDl3B,EAAMpf,KAAKuc,KAAK+5B,GACXpE,EAAM,EAAGA,EAAM9yB,EAAI5C,MAAM/lB,OAAQy7C,IAAO,CAM7C,IALImC,EAAOj1B,EAAI5C,MAAM01B,IACZkC,WAAa,GAElBp0C,KAAK4R,SAASzL,OAAQnG,KAAK4R,SAASsM,QAAQm2B,GAAS,EAAGA,EAAKD,WAAa,GAE1EC,EAAKF,QAAU,EAAG,CAClB,IAAIp0B,OAAI,EACJw2B,OAAI,EACR,IAAKx2B,EAAIu2B,EAAKC,EAAI,EAAKx2B,EAAIs0B,EAAKF,QAAU,EAAKn0C,KAAKuc,KAAK9lB,QAAU8/C,EAAIlC,EAAKF,QAAU,EAAIp0B,IAAKw2B,IAAK,CAChG,IAAIC,EAAcx2C,KAAKuc,KAAKwD,EAAI,GAAGvD,MAAM01B,GAEzClyC,KAAK4R,SAASzL,OAAOnG,KAAK4R,SAASsM,QAAQs4B,GAAc,MASjF,OAFAx2C,KAAK+N,WAAa+P,EAClB9d,KAAKylC,eACE3nB,GAEJ61B,GACTzgB,IAGEpS,GAA+B,WAI/B,OAHA,WACI9gB,KAAK1H,YAAS2B,MAMlBgnB,GAAkC,WAIlC,OAHA,WACIjhB,KAAKzH,WAAQ0B,MAMjB06C,GAAyB,WAIzB,OAHA,WACI30C,KAAKwc,MAAQ,SAMjBw4B,GAA0B,SAAUtS,GAEpC,SAASsS,IACL,IAAI3O,EAAmB,OAAX3D,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAGhE,OAFAqmC,EAAM+N,WAAa,EACnB/N,EAAM8N,QAAU,EACT9N,EAEX,OAPA5E,GAAUuT,EAAUtS,GAObsS,GACThlB,IAEEskB,GAA8B,SAAU5R,GAExC,SAAS4R,IACL,IAAIjO,EAAmB,OAAX3D,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAKhE,OAJAqmC,EAAM4N,MAAQ,EACd5N,EAAM6N,SAAW,EACjB7N,EAAM8N,QAAU,EAChB9N,EAAM+N,WAAa,EACZ/N,EAEX,OATA5E,GAAU6S,EAAc5R,GASjB4R,GACTp0B,IChdEuhB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAgC5DqpC,GAAe,SAAUl8C,GACzB,OAAQA,EAAIsB,MACR,IAAK,QACD,OAAO66C,GACX,IAAK,OACD,OAAOC,GACX,IAAK,OACD,OAAOC,GACX,IAAK,QACD,OAAOC,GACX,IAAK,OACD,OAAO1oB,GACX,IAAK,OACD,OAAO2oB,GACX,IAAK,SACD,OAAOC,GACX,IAAK,OACD,OAAOC,GACX,IAAK,cACD,OAAOC,GACX,IAAK,gBACD,OAAOC,GACX,IAAK,WACD,OAAOC,GACX,QACI,OAAOT,KAMfU,GAAuB,SAAU1U,GAEjC,SAAS0U,IACL,OAAkB,OAAX1U,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAK/D,OAPAyhC,GAAU2V,EAAO1U,GAIjBT,IACImB,WAAS,UACVgU,EAAM9V,UAAW,YAAQ,GACrB8V,GACT/T,iBAKEuT,GAAsB,SAAUlU,GAEhC,SAASkU,IACL,OAAkB,OAAXlU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAUmV,EAAMlU,GAIhBT,IACImB,WAAS,SACVwT,EAAKtV,UAAW,YAAQ,GAC3BW,IACImB,WAAS,KACVwT,EAAKtV,UAAW,YAAQ,GACpBsV,GACTQ,IAKEL,GAAwB,SAAUrU,GAElC,SAASqU,IACL,OAAkB,OAAXrU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUsV,EAAQrU,GAIlBT,IACImB,WAAS,WACV2T,EAAOzV,UAAW,YAAQ,GAC7BW,IACImB,WAAS,KACV2T,EAAOzV,UAAW,eAAW,GAChCW,IACImB,WAAS,YACV2T,EAAOzV,UAAW,aAAS,GACvByV,GACTK,IAKEJ,GAAsB,SAAUtU,GAEhC,SAASsU,IACL,OAAkB,OAAXtU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAUuV,EAAMtU,GAIhBT,IACImB,WAAS,SACV4T,EAAK1V,UAAW,YAAQ,GAC3BW,IACImB,WAAS,KACV4T,EAAK1V,UAAW,eAAW,GACvB0V,GACTI,IAKEP,GAAuB,SAAUnU,GAEjC,SAASmU,IACL,OAAkB,OAAXnU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAUoV,EAAOnU,GAIjBT,IACImB,WAAS,UACVyT,EAAMvV,UAAW,YAAQ,GAC5BW,IACImB,WAAS,KACVyT,EAAMvV,UAAW,cAAU,GAC9BW,IACImB,WAAS,KACVyT,EAAMvV,UAAW,aAAS,GAC7BW,IACImB,WAAS,SACVyT,EAAMvV,UAAW,aAAS,GACtBuV,GACTO,IAKEjpB,GAAsB,SAAUuU,GAEhC,SAASvU,IACL,OAAkB,OAAXuU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUtT,EAAMuU,GAIhBT,IACImB,WAAS,SACVjV,EAAKmT,UAAW,YAAQ,GAC3BW,IACImB,WAAS,KACVjV,EAAKmT,UAAW,eAAW,GAC9BW,IACI8H,aAAYjE,KACb3X,EAAKmT,UAAW,cAAU,GACtBnT,GACTipB,IAKEV,GAA4B,SAAUhU,GAEtC,SAASgU,IACL,OAAkB,OAAXhU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAUiV,EAAYhU,GAItBT,IACImB,WAAS,UACVsT,EAAWpV,UAAW,YAAQ,GACjCW,IACImB,WAAS,cACVsT,EAAWpV,UAAW,aAAS,GAClCW,IACImB,WAAS,IACVsT,EAAWpV,UAAW,oBAAgB,GACzCW,IACIgE,gBAAe9gC,KAChBuxC,EAAWpV,UAAW,cAAU,GAC5BoV,GACTU,IAKET,GAA2B,SAAUjU,GAErC,SAASiU,IACL,OAAkB,OAAXjU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAUkV,EAAWjU,GAIrBT,IACImB,WAAS,SACVuT,EAAUrV,UAAW,YAAQ,GAChCW,IACImB,WAAS,eACVuT,EAAUrV,UAAW,aAAS,GAC1BqV,GACTS,IAKEC,GAA6B,SAAU3U,GAEvC,SAAS2U,IACL,OAAkB,OAAX3U,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAK/D,OAPAyhC,GAAU4V,EAAa3U,GAIvBT,IACImB,WAAS,SACViU,EAAY/V,UAAW,YAAQ,GAC3B+V,GACThU,iBAKEiU,GAAgC,SAAU5U,GAE1C,SAAS4U,IACL,OAAkB,OAAX5U,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAU6V,EAAgB5U,GAI1BT,IACImB,WAAS,SACVkU,EAAehW,UAAW,YAAQ,GACrCW,IACImB,YAAS,IACVkU,EAAehW,UAAW,kBAAc,GACpCgW,GACTjU,iBAKEkU,GAA0B,SAAU7U,GAEpC,SAAS6U,IACL,OAAkB,OAAX7U,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAU8V,EAAU7U,GAIpBT,IACImB,WAAS,SACVmU,EAASjW,UAAW,YAAQ,GAC/BW,IACImB,WAAS,SACVmU,EAASjW,UAAW,YAAQ,GAC/BW,IACImB,YAAS,IACVmU,EAASjW,UAAW,YAAQ,GAC/BW,IACImB,YAAS,IACVmU,EAASjW,UAAW,oBAAgB,GAChCiW,GACTlU,iBAKEmU,GAA2B,SAAU9U,GAErC,SAAS8U,IACL,OAAkB,OAAX9U,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAU+V,EAAW9U,GAIrBT,IACImB,WAAS,UACVoU,EAAUlW,UAAW,aAAS,GACjCW,IACImB,WAAS,SACVoU,EAAUlW,UAAW,eAAW,GAC5BkW,GACTnU,iBAKEoU,GAA8B,SAAU/U,GAExC,SAAS+U,IACL,OAAkB,OAAX/U,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAsC/D,OAxCAyhC,GAAUgW,EAAc/U,GAIxBT,IACImB,WAAS,SACVqU,EAAanW,UAAW,eAAW,GACtCW,IACImB,WAAS,UACVqU,EAAanW,UAAW,aAAS,GACpCW,IACImB,WAAS,KACVqU,EAAanW,UAAW,UAAM,GACjCW,IACI8H,aAAY5kC,KACbsyC,EAAanW,UAAW,cAAU,GACrCW,IACIgE,gBAAelzB,KAChB0kC,EAAanW,UAAW,mBAAe,GAC1CW,IACIgE,gBAAerG,KAChB6X,EAAanW,UAAW,aAAS,GACpCW,IACImB,cACDqU,EAAanW,UAAW,aAAS,GACpCW,IACImB,cACDqU,EAAanW,UAAW,cAAU,GACrCW,IACI8H,aAAYjE,KACb2R,EAAanW,UAAW,cAAU,GACrCW,IACImB,WAAS,WACVqU,EAAanW,UAAW,2BAAuB,GAClDW,IACImB,WAAS,WACVqU,EAAanW,UAAW,yBAAqB,GAChDW,IACImB,YAAS,IACVqU,EAAanW,UAAW,eAAW,GAC/BmW,GACTpU,iBAEEqU,GAA2C,SAAUhV,GAErD,SAASgV,IACL,OAAkB,OAAXhV,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUiW,EAA2BhV,GAIrCT,IACI8H,WAAUlqC,GAAI,UAAW83C,MAAO,MAAOjoC,QAAU1Y,EAAG,EAAGC,EAAG,KAASwgD,KACpEC,EAA0BpW,UAAW,eAAW,GACnDW,IACI8H,WAAUlqC,GAAI,UAAW83C,MAAO,eAAgBC,QAAS,QAASloC,QAAU1Y,EAAG,IAAMC,EAAG,IAAOwgD,KAChGC,EAA0BpW,UAAW,eAAW,GACnDW,IACI8H,WAAUlqC,GAAI,SAAU83C,MAAO,eAAgBC,QAAS,SAAUloC,QAAU1Y,EAAG,IAAMC,EAAG,IAAOwgD,KAChGC,EAA0BpW,UAAW,cAAU,GAC3CoW,GACTrU,iBAKEwU,GAAgC,SAAUnV,GAE1C,SAASmV,IACL,OAAkB,OAAXnV,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA6B/D,OA/BAyhC,GAAUoW,EAAgBnV,GAI1BT,IACImB,WAAS,SACVyU,EAAevW,UAAW,YAAQ,GACrCW,IACImB,YAAS,IACVyU,EAAevW,UAAW,aAAS,GACtCW,IACImB,WAAS,YACVyU,EAAevW,UAAW,gBAAY,GACzCW,IACImB,YAAS,IACVyU,EAAevW,UAAW,oBAAgB,GAC7CW,IACImB,WAAS,SACVyU,EAAevW,UAAW,YAAQ,GACrCW,IACImB,YAAS,IACVyU,EAAevW,UAAW,iBAAa,GAC1CW,IACIgE,gBAAewR,KAChBI,EAAevW,UAAW,cAAU,GACvCW,IACI8H,aAAY2N,KACbG,EAAevW,UAAW,mBAAe,GAC5CW,IACImB,gBAASnpC,IACV49C,EAAevW,UAAW,iBAAa,GACnCuW,GACTxU,iBAKEyU,GAA8B,SAAUpV,GAExC,SAASoV,IACL,OAAkB,OAAXpV,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUqW,EAAcpV,GAIxBT,IACImB,WAAS,SACV0U,EAAaxW,UAAW,gBAAY,GACvCW,IACI8H,aAAYwN,KACbO,EAAaxW,UAAW,YAAQ,GACnCW,IACI8H,aAAY8N,KACbC,EAAaxW,UAAW,kBAAc,GAClCwW,GACTzU,iBAKE0U,GAAgC,SAAUrV,GAG1C,SAASqV,EAAe/5B,EAAQ+e,EAAUmN,EAAcC,GACpD,OAAOzH,EAAO0E,KAAKpnC,KAAMge,EAAQ+e,EAAUmN,EAAcC,IAAYnqC,KAoBzE,OAvBAyhC,GAAUsW,EAAgBrV,GAK1BT,IACImB,WAAS,KACV2U,EAAezW,UAAW,YAAQ,GACrCW,IACImB,WAAS,KACV2U,EAAezW,UAAW,UAAM,GACnCW,IACImB,WAAS,IACV2U,EAAezW,UAAW,aAAS,GACtCW,IACImB,cACD2U,EAAezW,UAAW,cAAU,GACvCW,IACImB,cACD2U,EAAezW,UAAW,aAAS,GACtCW,IACImB,WAAS,IACV2U,EAAezW,UAAW,cAAU,GAChCyW,GACT1U,iBAKEyT,GAA2B,SAAUpU,GAErC,SAASoU,IACL,OAAkB,OAAXpU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA0B/D,OA5BAyhC,GAAUqV,EAAWpU,GAIrBT,IACImB,WAAS,SACV0T,EAAUxV,UAAW,YAAQ,GAChCW,IACImB,WAAS,UACV0T,EAAUxV,UAAW,aAAS,GACjCW,IACI8H,aAAYyN,KACbV,EAAUxV,UAAW,aAAS,GACjCW,IACI8H,aAAYsN,KACbP,EAAUxV,UAAW,eAAW,GACnCW,IACI8H,aAAYuN,KACbR,EAAUxV,UAAW,kBAAc,GACtCW,IACI8H,aAAY+N,KACbhB,EAAUxV,UAAW,gBAAY,GACpCW,IACI8H,aAAYgO,KACbjB,EAAUxV,UAAW,kBAAc,GACtCW,IACIgE,gBAAe8R,KAChBjB,EAAUxV,UAAW,mBAAe,GAChCwV,GACTM,IAKEH,GAAkC,SAAUvU,GAE5C,SAASuU,IACL,OAAkB,OAAXvU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAUwV,EAAkBvU,GAI5BT,IACImB,WAAS,gBACV6T,EAAiB3V,UAAW,YAAQ,GACvCW,IACImB,WAAS,WACV6T,EAAiB3V,UAAW,aAAS,GACjC2V,GACTG,IAKEY,GAAiC,SAAUtV,GAE3C,SAASsV,IACL,OAAkB,OAAXtV,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUuW,EAAiBtV,GAI3BT,IACImB,WAAS,KACV4U,EAAgB1W,UAAW,YAAQ,GACtCW,IACImB,WAAS,KACV4U,EAAgB1W,UAAW,YAAQ,GACtCW,IACI8H,aAAY3D,KACb4R,EAAgB1W,UAAW,aAAS,GAChC0W,GACT3U,iBAKE4U,GAAmC,SAAUvV,GAE7C,SAASuV,IACL,OAAkB,OAAXvV,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAUwW,EAAmBvV,GAI7BT,IACImB,WAAS,WACV6U,EAAkB3W,UAAW,aAAS,GACzCW,IACImB,YAAS,IACV6U,EAAkB3W,UAAW,mBAAe,GACxC2W,GACTD,IAKEE,GAAgC,SAAUxV,GAE1C,SAASwV,IACL,OAAkB,OAAXxV,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAK/D,OAPAyhC,GAAUyW,EAAgBxV,GAI1BT,IACIgE,gBAAe+R,KAChBE,EAAe5W,UAAW,kBAAc,GACpC4W,GACTD,IAKEE,GAA0B,SAAUzV,GAEpC,SAASyV,IACL,OAAkB,OAAXzV,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAU0W,EAAUzV,GAIpBT,IACImB,WAAS,KACV+U,EAAS7W,UAAW,YAAQ,GAC/BW,IACIgE,gBAAegS,KAChBE,EAAS7W,UAAW,kBAAc,GACrCW,IACIgE,gBAAeiS,KAChBC,EAAS7W,UAAW,eAAW,GAClCW,IACI8H,aAAY3D,KACb+R,EAAS7W,UAAW,aAAS,GACzB6W,GACT9U,iBAKE+U,GAA8B,SAAU1V,GAExC,SAAS0V,IACL,OAAkB,OAAX1V,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAK/D,OAPAyhC,GAAU2W,EAAc1V,GAIxBT,IACImB,YAAS,IACVgV,EAAa9W,UAAW,mBAAe,GACnC8W,GACTD,IAKEE,GAAsC,SAAU3V,GAEhD,SAAS2V,IACL,OAAkB,OAAX3V,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAU4W,EAAsB3V,GAIhCT,IACImB,WAAS,KACViV,EAAqB/W,UAAW,YAAQ,GAC3CW,IACImB,WAAS,KACViV,EAAqB/W,UAAW,aAAS,GAC5CW,IACImB,YAAS,IACViV,EAAqB/W,UAAW,mBAAe,GAClDW,IACI8H,aAAY3D,KACbiS,EAAqB/W,UAAW,aAAS,GACrC+W,GACThV,iBAKEiV,GAAgC,SAAU5V,GAE1C,SAAS4V,IACL,OAAkB,OAAX5V,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAU6W,EAAgB5V,GAI1BT,IACImB,WAAS,KACVkV,EAAehX,UAAW,YAAQ,GACrCW,IACIgE,gBAAeoS,KAChBC,EAAehX,UAAW,eAAW,GACxCW,IACI8H,aAAY3D,KACbkS,EAAehX,UAAW,aAAS,GAC/BgX,GACTjV,iBAKE6T,GAAoC,SAAUxU,GAE9C,SAASwU,IACL,OAAkB,OAAXxU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAiB/D,OAnBAyhC,GAAUyV,EAAoBxU,GAI9BT,IACImB,WAAS,kBACV8T,EAAmB5V,UAAW,YAAQ,GACzCW,IACI8H,aAAYoO,KACbjB,EAAmB5V,UAAW,aAAS,GAC1CW,IACI8H,aAAYqO,KACblB,EAAmB5V,UAAW,iBAAa,GAC9CW,IACI8H,aAAYuO,KACbpB,EAAmB5V,UAAW,mBAAe,GAChDW,IACImB,WAAS,UACV8T,EAAmB5V,UAAW,kBAAc,GACxC4V,GACTE,IAKE7iC,GAAsB,SAAUmuB,GAGhC,SAASnuB,EAAKyJ,EAAQ+e,EAAUmN,EAAcC,GAC1C,IAAI9D,EAAQ3D,EAAO0E,KAAKpnC,KAAMge,EAAQ+e,EAAUmN,EAAcC,IAAYnqC,KAE1EqmC,EAAMkS,gBAAiB,EAEvBlS,EAAMuH,OAAS,OAEfvH,EAAMxrB,SAAW,GAEjBwrB,EAAMmS,UAAY,GAElBnS,EAAMoS,UAAY,EAElBpS,EAAMqS,YAENrS,EAAMsS,WAENtS,EAAMjqB,UAAW,EAEjBiqB,EAAMuS,QAAS,EAEfvS,EAAMwS,SAAU,EAChB,IAAIC,EAaJ,OAZIzS,EAAMz0B,UAAYy0B,EAAMz0B,SAASnb,OAAS,KAC1CqiD,EAAc5O,GACGhqC,OAAU44C,EAAY54C,MAAM+X,OACzCouB,EAAMnmC,MAAM+X,KAAO,eAElB6gC,EAAY54C,OAAU44C,EAAY54C,MAAMgY,cACzCmuB,EAAMnmC,MAAMgY,YAAc,gBAG9BmuB,EAAMjoC,OAA8B,gBAArBioC,EAAMjoC,MAAMvC,MAC3B8oB,GAAuBulB,EAAc7D,GAElCA,EAugBX,OA5iBA5E,GAAUltB,EAAMmuB,GAuChB/lB,OAAO8lB,eAAeluB,EAAK+sB,UAAW,cAElCgC,IAAK,WACD,OAAqB,OAAjBtjC,KAAK8N,QACE9N,KAAK8N,QAAQC,WAGb,IAAI6P,GAAK5d,KAAKzH,OAAS,EAAGyH,KAAK1H,QAAU,IAGxDirC,YAAY,EACZC,cAAc,IAOlBjvB,EAAK+sB,UAAU/N,KAAO,SAAUr0B,GAC5B,IAAIe,EAEAA,EADmB,YAAnBD,KAAK5B,MAAMvC,KACD,IAAIqkB,GAGJ,IAAIyzB,GAElB,IAAIoF,EAKJ,OAFA/4C,KAAK5B,MAAuB,qBAC5B4B,KAAK5B,MAAmB,iBAChB4B,KAAK5B,MAAMvC,MACf,IAAK,OACD,IAAI0yB,EAAc,IAAIlgB,GACtBkgB,EAAYn4B,KAAO4J,KAAK5B,MAAMhI,KAC9B6J,EAAUsuB,EACV,MACJ,IAAK,QACD,IAAIC,EAAe,IAAIC,GACvBD,EAAajsB,OAASvC,KAAK5B,MAAMmE,OACjCisB,EAAaE,WAAa1uB,KAAK5B,MAAMuwB,MACrCH,EAAaI,WAAa5uB,KAAK5B,MAAMid,MACrCpb,EAAUuuB,EACV,MACJ,IAAK,OACD,IAAIgJ,EAAc,IAAI9J,GACtB8J,EAAYv3B,QAAUD,KAAK5B,MAAM6B,QACjCA,EAAUu3B,EACVuhB,EAAY/4C,KAAKE,MACjBD,EAAQC,MAAQ64C,EAChB,MACJ,IAAK,QACD,GAAyB,cAArB/4C,KAAK5B,MAAMA,MAAuB,EAElC6B,EADI+4C,EAAa,IAAI94B,IAEb7nB,aAAe2H,KAAK5B,MAAM/F,kBAEjC,GAAyB,YAArB2H,KAAK5B,MAAMA,MAAqB,CACrC,IAAI1F,EAAO,IAAI2V,GACf3V,EAAKtC,KAAO0C,EAAekH,KAAK5B,MAAMzF,QACtCsH,EAAUvH,MAET,CACD,IAAIsgD,EAAa,IAAI3qC,GACjB4qC,EAAiB96C,EAAc6B,KAAK5B,MAAMA,OAC9C46C,EAAW5iD,KAAO6iD,EAClBh5C,EAAU+4C,EAEd,MACJ,IAAK,OACD,IAAIE,EAAY,IAAI7qC,GAChBqhB,EAAgB3wB,EAAaiB,KAAK5B,MAAMA,OAC5C86C,EAAU9iD,KAAOs5B,EACjBzvB,EAAUi5C,EACV,MACJ,IAAK,cAEDj5C,EAAUkwB,GADa,IAAI9hB,GACsBpO,EAASD,MAC1D,MACJ,IAAK,OACD,GAAId,EAAQi6C,WAAY,CACpBl5C,EAAUf,EAAQi6C,WAAWC,gBAAgBn5C,EAASD,KAAMd,GAC5D,IAAIm6C,EAAar5C,KAAK5B,MAAMk7C,SAASD,WACrC,GAAIA,EAAWE,WAAaF,EAAWE,UAAU9iD,OAE7C,IAAK,IAAIoG,EAAK,EAAG28C,EADFx5C,KAAK5B,MAAMk7C,SAASD,WAAWE,UACN18C,EAAK28C,EAAW/iD,OAAQoG,IAAM,CAClE,IAAInG,EAAI8iD,EAAW38C,IACfqC,EAAQ0b,UAAUlkB,IAAQwI,EAAQ0b,UAAUlkB,GAAG8hD,WAAat5C,EAAQ0b,UAAUlkB,GAAG8hD,YAAcx4C,KAAKH,KACpGX,EAAQ0b,UAAUlkB,GAAG8hD,UAAYx4C,KAAKH,GAClCw5C,EAAWI,WACXv6C,EAAQw6C,wBAAwBx6C,EAAQ0b,UAAUlkB,GAAGoX,QAAS5O,EAAQ0b,UAAUlkB,IAAK2iD,EAAWI,WAEpGx5C,EAAQ2R,SAAS9a,KAAKoI,EAAQ0b,UAAUlkB,GAAGoX,WAK3D,MACJ,IAAK,SACD,IAAIghB,EAAgB,IAAIC,GAAqB/uB,KAAKH,GAAIX,EAAQU,QAAQC,IACtEivB,EAAc7uB,QAAUD,KAAK5B,MAAM6B,QACnC6uB,EAAczT,MAAQrb,KAAK5B,MAAMid,MACjCpb,EAAU6uB,EACV,MACJ,IAAK,OACD,IAAIE,EAAc,IAAIC,GAAmBjvB,KAAKH,GAAIX,EAAQU,QAAQC,IAClEmvB,EAAY/uB,QAAUD,KAAK5B,MAAM6B,QACjCA,EAAU+uB,EACV,MACJ,IAAK,gBAED/uB,EAAUuX,GAAuBvX,EAASD,KAAMd,GAChD,MACJ,IAAK,WACDe,EAAQ4zC,UAAU57B,KAAO,OACzBhY,EAAQ4zC,UAAU37B,YAAc,OAChClY,KAAK8X,WAAcjc,KAAM,OAAQiV,YAAa9Q,KAAK5B,MAAM0S,aACzD7Q,EAAQJ,GAAKG,KAAKH,GAClBG,KAAK8X,UAAUhH,YAAc9Q,KAAK5B,MAAM0S,YACxCoO,GAAajf,EAASf,EAASc,MA0CvC,OAvCAC,EAAQJ,GAAKG,KAAKH,GAAK,WACvBI,EAAQ+nB,aAAe,cACJ/tB,IAAf+F,KAAKzH,QACL0H,EAAQ1H,MAAQyH,KAAKzH,OAEzB0H,EAAQ6Y,oBAAsB,eACV7e,IAAhB+F,KAAK1H,SACL2H,EAAQ3H,OAAS0H,KAAK1H,aAEH2B,IAAnB+F,KAAKuZ,YACLtZ,EAAQsZ,UAAYvZ,KAAKuZ,gBAENtf,IAAnB+F,KAAKub,YACLtb,EAAQsb,UAAYvb,KAAKub,gBAEPthB,IAAlB+F,KAAKqd,WACLpd,EAAQod,SAAWrd,KAAKqd,eAENpjB,IAAlB+F,KAAKoY,WACLnY,EAAQmY,SAAWpY,KAAKoY,UAEH,cAArBpY,KAAK5B,MAAMA,OAA0B4B,KAAK5B,MAAM/F,eAChD4H,EAAQ+kC,eAAgB,GAE5B/kC,EAAQ4Y,kBAAoB,UACxB7Y,KAAK5B,iBAAiB+vB,KACtBluB,EAAQ0C,OAAS3C,KAAK5B,MAAMuE,QAE5ByR,GAAUpU,OAC0C,IAA/CA,KAAKiT,YAAcK,kBAAgBe,UACpCpU,EAAQq4B,OAASt4B,KAAKs4B,QAGL,SAApBt4B,KAAK5B,MAAMvC,MAAwC,YAArBmE,KAAK5B,MAAMA,OACrB,eAArB4B,KAAK5B,MAAMA,OAAiD,gBAApB4B,KAAK5B,MAAMvC,MAA+C,cAArBmE,KAAK5B,MAAMA,OAChE,SAApB4B,KAAK5B,MAAMvC,OACXoE,EAAQC,MAAQF,KAAKE,OAGtBD,GAIXsU,EAAK+sB,UAAUhO,cAAgB,WACtBtzB,KAAKH,KACNG,KAAKH,GAAKyZ,MAGd,IAAIqgC,EACJ,GAAK35C,KAAK8X,UAIN,OAAQ9X,KAAK8X,UAAUjc,MACnB,IAAK,SACD89C,EAAS,IAAI3pB,GACb,MACJ,IAAK,QACD2pB,EAAS,IAAI5G,GACb,MACJ,IAAK,QACD4G,EAAS,IAAIhG,IACNl0B,eAAezf,KAAKuc,KAAMvc,KAAKgb,cAZ9C2+B,EAAS35C,KAAK4R,SAAW,IAAIshB,GAAc,IAAIlD,GAwCnD,OAxBA2pB,EAAO95C,GAAKG,KAAKH,GACjB85C,EAAO59C,QAAUiE,KAAKjE,QACtB49C,EAAO39C,QAAUgE,KAAKhE,QACtB29C,EAAOzrB,QAAUluB,KAAKkuB,QACtByrB,EAAO7gC,oBAAsB9Y,KAAK8Y,oBAClC6gC,EAAO9gC,kBAAoB7Y,KAAK6Y,kBAC5B7Y,KAAK8X,YACL6hC,EAAOphD,MAAQyH,KAAKzH,MACpBohD,EAAOrhD,OAAS0H,KAAK1H,OACO,UAAxB0H,KAAK8X,UAAUjc,OACf89C,EAAO7oC,YAAc9Q,KAAK8X,UAAUhH,cAG5C6oC,EAAOz5C,MAAM+X,KAAOjY,KAAK0rB,gBACzBiuB,EAAOz5C,MAAMgY,YAAclY,KAAKqa,YAChCs/B,EAAOz5C,MAAMiY,YAAcnY,KAAK45C,YAChCD,EAAOttC,YAAcrM,KAAKqM,YAC1BstC,EAAOpgC,UAAYvZ,KAAKuZ,UACxBogC,EAAOt8B,SAAWrd,KAAKqd,SACvBs8B,EAAOp+B,UAAYvb,KAAKub,UACxBo+B,EAAOvhC,SAAWpY,KAAKoY,SACvBuhC,EAAOnoB,MAAQxxB,KAAKwxB,MACpBmoB,EAAOh3C,OAAS3C,KAAK2C,OACrB3C,KAAK8N,QAAU6rC,EACRA,GAGXplC,EAAK+sB,UAAUuY,UAAY,SAAUC,EAAsBhiC,GAC1C9X,KAAK8N,QAElB,IAAK,IADD3K,EACKzM,EAAI,EAAGsJ,KAAKyyB,MAAqB/7B,EAAIsJ,KAAKyyB,MAAMh8B,OAAQC,IAAK,CAClEyM,EAAOnD,KAAK+5C,gBAAgB/5C,KAAKyyB,MAAM/7B,IAEvC,IAAI+3C,OAAiB,EACjBuL,EAAuBp2B,GAAYk2B,GACnCE,IACAvL,EAAiBuL,EAAqB72C,EAAMnD,OAEhDmD,EAAKo1B,YAAckW,GAAkCtrC,EAAKtD,GAC1DiY,EAAUlG,SAAS9a,KAAKqM,KAGhCoR,EAAK+sB,UAAU2Y,aAAe,SAAUvvB,EAAQ5rB,GAC5C,IAAI9H,EACAC,EAiBJ,MAhB2B,gBAAvByzB,EAAO5Z,aACP9Z,EAAI8H,EAAK4Q,OAAO1Y,EAChBC,EAAI,EAAI6H,EAAK4Q,OAAOzY,GAEQ,gBAAvByzB,EAAO5Z,aACZ9Z,EAAI8H,EAAK4Q,OAAOzY,EAChBA,EAAI6H,EAAK4Q,OAAO1Y,GAEY,gBAAvB0zB,EAAO5Z,aACZ9Z,EAAI,EAAI8H,EAAK4Q,OAAOzY,EACpBA,EAAI6H,EAAK4Q,OAAO1Y,IAGhBA,EAAI8H,EAAK4Q,OAAO1Y,EAChBC,EAAI6H,EAAK4Q,OAAOzY,IAEXD,EAAGA,EAAGC,EAAGA,IAGtBsd,EAAK+sB,UAAU4Y,UAAY,SAAUJ,EAAsBpvB,EAAQ5S,EAAWic,GAC7D/zB,KAAK8N,QAAlB,IACI4B,EACA5Q,EAAOkB,KAAKm6C,WAAan6C,KAAKo6C,WAAap6C,KAAKq6C,aACpD,GAAmB,SAAfv7C,EAAKV,MAAkB,CACvB,IAAIk8C,EAAgB,IAAItqB,GACxBsqB,EAAcpV,OAAQ,EAEtBoV,EAAcz6C,GAAKG,KAAKH,GAAK,gBAC7By6C,EAAc1oC,YACd0oC,EAAchiD,OAASwG,EAAKxG,OAC5BgiD,EAAc/hD,MAAQuG,EAAKvG,MAC3B+hD,EAAcp6C,MAAMgY,YAAc,cAClCoiC,EAAc33C,OAAS7D,EAAK6D,OAC5B23C,EAAcxhC,oBAAsB,SACpCwhC,EAAczhC,kBAAoB,SAClCyhC,EAAcpsB,QAAUluB,KAAKkuB,QAC7Bxe,EAAS1P,KAAKi6C,aAAavvB,EAAQ5rB,GACnCw7C,EAAclV,6BAA6B11B,EAAO1Y,EAAG0Y,EAAOzY,EAAG,YAC/DqjD,EAActyB,aAAe,QAC7BhoB,KAAKu6C,eAAez7C,EAAMw7C,EAAeR,EAAsB/lB,GAE/D,IAAI0a,OAAiB,EACjBuL,EAAuBp2B,GAAYk2B,GACnCE,IACAvL,EAAiBuL,EAAqBl7C,EAAMkB,OAEhDs6C,EAAc/hB,YAAckW,GAAkC6L,EAAcz6C,GAC5EiY,EAAUlG,SAAS9a,KAAKwjD,KAIhC/lC,EAAK+sB,UAAUkZ,gBAAkB,SAAUV,EAAsBhiC,EAAWic,EAAW0mB,GAEnF,IAAK,IADDnyB,EACK5xB,EAAI,EAAGsJ,KAAKsY,YAA2B5hB,EAAIsJ,KAAKsY,YAAY7hB,OAAQC,IAAK,CAC9E4xB,EAAatoB,KAAK06C,sBAAsB16C,KAAKsY,YAAY5hB,GAAIq9B,EAAW0mB,GAExE,IAAIhM,OAAiB,EACjBuL,EAAuBp2B,GAAYk2B,GACnCE,IACAvL,EAAiBuL,EAAqB1xB,EAAYtoB,OAEtDsoB,EAAWiQ,YAAckW,GAAkCnmB,EAAWzoB,GACtEiY,EAAUlG,SAAS9a,KAAKwxB,KAIhC/T,EAAK+sB,UAAUyY,gBAAkB,SAAUtnB,GACvCA,EAAM5yB,GAAK4yB,EAAM5yB,IAAMyZ,KAEvB,IAAIqhC,EAAc,IAAItsC,GACtBssC,EAAYriD,OAASm6B,EAAMn6B,OAC3BqiD,EAAYpiD,MAAQk6B,EAAMl6B,MAC1B,IAAIqiD,EAA4B,WAAhBnoB,EAAMr0B,MAAsBq0B,EAAM9zB,SAAWJ,EAAak0B,EAAMr0B,OAChFu8C,EAAY96C,GAAKG,KAAKH,GAAK,IAAO4yB,EAAQ,GAC1CkoB,EAAYh4C,OAAS8vB,EAAM9vB,OAC3Bg4C,EAAYvkD,KAAOwkD,EACnB,IAAI16C,EAAQuyB,EAAMvyB,MAclB,OAbAy6C,EAAYz6C,OACR+X,KAAM/X,EAAM+X,KAAMC,YAAahY,EAAMgY,YAAauV,SAAU,KAC5Df,QAASxsB,EAAMwsB,QAASpP,gBAAiBpd,EAAMod,gBAAiBnF,YAAajY,EAAMiY,aAEvFwiC,EAAY7hC,oBAAsB2Z,EAAM3Z,oBACxC6hC,EAAY9hC,kBAAoB4Z,EAAM5Z,kBACtC8hC,EAAYvV,6BAA6B3S,EAAM/iB,OAAO1Y,EAAGy7B,EAAM/iB,OAAOzY,EAAG,iBACtDgD,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,SACjCqiD,EAAYzV,OAAQ,GAExByV,EAAY3yB,aAAe,QAC3B2yB,EAAYzsB,WAAUgE,GAAqBO,EAAOsN,iBAAeE,UAC5D/N,GAAqBO,EAAOsN,iBAAeC,QAAW9N,GAAqBO,EAAOsN,iBAAeiK,UAC/F2Q,GAGXpmC,EAAK+sB,UAAUoZ,sBAAwB,SAAUpyB,EAAYyL,EAAW0mB,GACpEnyB,EAAWzoB,GAAKyoB,EAAWzoB,IAAMyZ,KACjC,IACIuhC,EADAC,EAAQxyB,EAEZ,GAAIyL,GAAazL,EAAWof,UACxBmT,EAAoB,IAAI5rB,GAAmBjvB,KAAKH,GAAIk0B,EAAWzL,EAAWzoB,KACxDI,QAAUqoB,EAAWof,aAEtC,EACDmT,EAAoB,IAAIntB,IACNua,YAAcwS,EAChC,IAAIv6C,EAAQooB,EAAWpoB,MACnB6tB,EAAOzF,EAAWwF,UAAUC,KAAOzF,EAAWwF,eAAY7zB,EAC9D4gD,EAAkB36C,OACd+X,KAAM/X,EAAM+X,KAAMC,YAAahY,EAAMgY,YAAaC,YAAajY,EAAMiY,YACrEK,KAAMtY,EAAMsY,KAAMG,aAAczY,EAAMyY,aACtCD,MAAOqV,EAAOA,EAAKrV,OAASmiC,EAAkB/sB,UAAUpV,MAAQxY,EAAMwY,MAAOoU,WAAY5sB,EAAM4sB,WAC/FH,WAAYzsB,EAAMysB,WAAYlU,SAAUvY,EAAMuY,SAAUmU,OAAQ1sB,EAAM0sB,OAAQa,SAAU,KAAMf,QAASxsB,EAAMwsB,QAC7GpP,gBAAiBpd,EAAMod,gBAAiBuP,UAAW3sB,EAAM2sB,UAAWJ,aAAcnE,EAAWpoB,MAAMusB,aACnGM,eAAgBgB,EAAOA,EAAKhB,gBACxB8tB,EAAkB/sB,UAAUf,eAAiB7sB,EAAM6sB,gBAE3D8tB,EAAkB/sB,UAAUC,KAAOzF,EAAWwF,UAAUC,WAAQ9zB,EAChE4gD,EAAkB/sB,UAAU7tB,QAAUqoB,EAAWwF,UAAU7tB,cAAWhG,EACtE4gD,EAAkB/sB,UAAUf,eAAiBzE,EAAWwF,UAAUf,qBAAkB9yB,EACpF4gD,EAAkB56C,QAAU8tB,EAAOA,EAAK9tB,SACpC46C,EAAkB/sB,UAAUC,KAAOzF,EAAWroB,QAsBtD,OApBA46C,EAAkB5nC,YAAcqV,EAAWrV,YAC3C4nC,EAAkBviD,OAASgwB,EAAWhwB,OACtCuiD,EAAkBtiD,MAAQ+vB,EAAW/vB,MACrCsiD,EAAkB3sB,QAAU5F,EAAW8J,WACvCyoB,EAAkBxuC,YAAcic,EAAWjc,YAC3CwuC,EAAkBh7C,GAAKG,KAAKH,GAAK,IAAMyoB,EAAWzoB,QAC/B5F,IAAf+F,KAAKzH,OAAwB+vB,EAAWof,gBACfztC,IAArBquB,EAAW/vB,OAAwB+vB,EAAW/vB,MAAQyH,KAAKzH,QACxB,SAAlC+vB,EAAWpoB,MAAMyY,cAA6D,qBAAlC2P,EAAWpoB,MAAMyY,iBAC9DkiC,EAAkBtiD,MAAQyH,KAAKzH,OAGvCsiD,EAAkBl4C,OAAS2lB,EAAW3lB,OACtCk4C,EAAkB/hC,oBAAsBwP,EAAWxP,oBACnD+hC,EAAkBhiC,kBAAoByP,EAAWzP,kBACjDgiC,EAAkBzV,6BAA6B0V,EAAMprC,OAAO1Y,EAAG8jD,EAAMprC,OAAOzY,EAAG,iBAC5DgD,IAAf+F,KAAKzH,YAAuC0B,IAAhB+F,KAAK1H,SACjCuiD,EAAkB3V,OAAQ,GAE9B2V,EAAkB7yB,aAAe,QAC1B6yB,GAEXtmC,EAAK+sB,UAAUyZ,kBAAoB,SAAU9iB,EAASqiB,GAClD,IAAIj+B,EAAO,IAAI6D,GAgBf,OAfA7D,EAAKxc,GAAKy6C,EAAcz6C,GAAK,QAC7Bwc,EAAK/jB,OAAS2/B,EAAQ3/B,OACtB+jB,EAAK9jB,MAAQ0/B,EAAQ1/B,MACrB8jB,EAAK6R,QAAUosB,EAAcpsB,QAC7B7R,EAAK1Z,OAASs1B,EAAQt1B,OACtB0Z,EAAKhkB,aAAe4/B,EAAQ5/B,aAC5BgkB,EAAKnc,OACD+X,KAAMggB,EAAQhgB,KAAMC,YAAa+f,EAAQ5d,YACzClC,YAAa8f,EAAQ2hB,aAEzBv9B,EAAK+oB,6BAA6B,GAAK,GAAK,YAC5C/oB,EAAKvD,oBAAsB,SAC3BuD,EAAKxD,kBAAoB,SACzBwD,EAAK2L,aAAe,SACpB3L,EAAKkc,YAAclc,EAAKkc,aAAe,mCAChClc,GAEX9H,EAAK+sB,UAAUiZ,eAAiB,SAAUtiB,EAASqiB,EAAeR,EAAsB/lB,GACpF,IAAIinB,EAEJ,GADAV,EAAc1oC,SAAS9a,KAAKkJ,KAAK+6C,kBAAkB9iB,EAASqiB,IACtC,aAAlBriB,EAAQ75B,OACR48C,EAAc,IAAIjsB,GAAqB/uB,KAAKH,GAAIk0B,IACpC9zB,QAAUg4B,EAAQh4B,QAC9B+6C,EAAY1iD,OAAS,GACrB0iD,EAAYziD,MAAQ,OAEnB,EACDyiD,EAAc,IAAI3sC,IACNjY,KAAOyI,EAAao5B,GAChC,IAAIgjB,EAAoBhlB,GAAY+kB,EAAY5kD,MAChD4kD,EAAY1iD,OACR2iD,EAAkB3iD,OAAS,GAAK2iD,EAAkB3iD,OAAS,IAAM2/B,EAAQmI,QAAQt9B,OAASm1B,EAAQmI,QAAQr9B,KAC9Gi4C,EAAYziD,MACR0iD,EAAkB1iD,MAAQ,GAAK0iD,EAAkB1iD,MAAQ,IAAM0/B,EAAQmI,QAAQx9B,KAAOq1B,EAAQmI,QAAQv9B,OAE9Gm4C,EAAYn7C,GAAKy6C,EAAcz6C,GAAK,SACpCm7C,EAAYliC,oBAAsB,SAClCkiC,EAAYniC,kBAAoB,SAChCmiC,EAAY9sB,QAAUosB,EAAcpsB,QACpC8sB,EAAY9sB,QAAUosB,EAAcpsB,QACpC8sB,EAAY96C,OACR+X,KAAM,QAASC,YAAa+f,EAAQ5d,YACpClC,YAAa8f,EAAQ2hB,aAEzBoB,EAAY5V,6BAA6B,GAAK,GAAK,YACnD4V,EAAYhzB,aAAe,SAC3BgzB,EAAYziB,YAAc+hB,EAAc/hB,aAAe,mCACvD+hB,EAAc1oC,SAAS9a,KAAKkkD,IAEhC/Y,IACIgE,gBAAelzB,KAChBwB,EAAK+sB,UAAW,mBAAe,GAClCW,IACImB,WAAS,IACV7uB,EAAK+sB,UAAW,eAAW,GAC9BW,IACImB,WAAS,IACV7uB,EAAK+sB,UAAW,eAAW,GAC9BW,IACI8H,WAAU/yC,EAAG,GAAKC,EAAG,IAAOkO,KAC7BoP,EAAK+sB,UAAW,aAAS,GAC5BW,IACImB,cACD7uB,EAAK+sB,UAAW,aAAS,GAC5BW,IACImB,cACD7uB,EAAK+sB,UAAW,cAAU,GAC7BW,IACImB,cACD7uB,EAAK+sB,UAAW,gBAAY,GAC/BW,IACImB,cACD7uB,EAAK+sB,UAAW,iBAAa,GAChCW,IACImB,cACD7uB,EAAK+sB,UAAW,gBAAY,GAC/BW,IACImB,cACD7uB,EAAK+sB,UAAW,iBAAa,GAChCW,IACImB,WAAS,IACV7uB,EAAK+sB,UAAW,mBAAe,GAClCW,IACI8H,WAAU9xB,KAAM,SAAWmuB,KAC5B7xB,EAAK+sB,UAAW,aAAS,GAC5BW,IACImB,WAAS,gBACV7uB,EAAK+sB,UAAW,uBAAmB,GACtCW,IACImB,WAAS,SACV7uB,EAAK+sB,UAAW,mBAAe,GAClCW,IACImB,WAAS,IACV7uB,EAAK+sB,UAAW,mBAAe,GAClCW,IACImB,cACD7uB,EAAK+sB,UAAW,YAAQ,GAC3BW,IACIkE,iBAAesQ,KAChBliC,EAAK+sB,UAAW,aAAS,GAC5BW,IACImB,WAAS,OACV7uB,EAAK+sB,UAAW,eAAW,GAC9BW,IACImB,WAAS9vB,kBAAgByE,UAC1BxD,EAAK+sB,UAAW,mBAAe,GAClCW,IACI8H,aAAY11B,KACbE,EAAK+sB,UAAW,cAAU,GAC7BW,IACImB,cACD7uB,EAAK+sB,UAAW,gBAAY,GAC/BW,IACImB,WAAS,OACV7uB,EAAK+sB,UAAW,iBAAa,GAChCW,IACImB,WAAS,SACV7uB,EAAK+sB,UAAW,2BAAuB,GAC1CW,IACImB,WAAS,QACV7uB,EAAK+sB,UAAW,yBAAqB,GACxCW,IACImB,cACD7uB,EAAK+sB,UAAW,YAAQ,GAC3BW,IACImB,cACD7uB,EAAK+sB,UAAW,eAAW,GAC9BW,IACImB,cACD7uB,EAAK+sB,UAAW,gBAAY,GAC/BW,IACImB,cACD7uB,EAAK+sB,UAAW,mBAAe,GAClCW,IACImB,cACD7uB,EAAK+sB,UAAW,eAAW,GAC9BW,IACImB,cACD7uB,EAAK+sB,UAAW,kBAAc,GAC1B/sB,GACTw4B,IAKEmO,GAAwB,SAAUxY,GAElC,SAASwY,IACL,OAAkB,OAAXxY,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAiB/D,OAnBAyhC,GAAUyZ,EAAQxY,GAIlBT,IACImB,WAAS,KACV8X,EAAO5Z,UAAW,UAAM,GAC3BW,IACI8H,aAAYM,KACb6Q,EAAO5Z,UAAW,eAAW,GAChCW,IACImB,WAAS,KACV8X,EAAO5Z,UAAW,aAAS,GAC9BW,IACImB,WAAS,KACV8X,EAAO5Z,UAAW,cAAU,GAC/BW,IACImB,WAAS,KACV8X,EAAO5Z,UAAW,aAAS,GACvB4Z,GACT7X,iBAKE8X,GAAsB,SAAUzY,GAEhC,SAASyY,IACL,OAAkB,OAAXzY,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAoB/D,OAtBAyhC,GAAU0Z,EAAMzY,GAIhBT,IACImB,WAAS,KACV+X,EAAK7Z,UAAW,UAAM,GACzBW,IACImB,WAAS,KACV+X,EAAK7Z,UAAW,aAAS,GAC5BW,IACIgE,gBAAe1xB,KAChB4mC,EAAK7Z,UAAW,kBAAc,GACjCW,IACImB,WAAS,KACV+X,EAAK7Z,UAAW,cAAU,GAC7BW,IACImB,WAAS,KACV+X,EAAK7Z,UAAW,aAAS,GAC5BW,IACI8H,aAAYmR,KACbC,EAAK7Z,UAAW,cAAU,GACtB6Z,GACT9X,iBAKE+X,GAAuB,SAAU1Y,GAEjC,SAAS0Y,IACL,OAAkB,OAAX1Y,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAoB/D,OAtBAyhC,GAAU2Z,EAAO1Y,GAIjBT,IACImB,WAAS,KACVgY,EAAM9Z,UAAW,UAAM,GAC1BW,IACImB,WAAS,KACVgY,EAAM9Z,UAAW,aAAS,GAC7BW,IACI8H,aAAYmR,KACbE,EAAM9Z,UAAW,cAAU,GAC9BW,IACImB,WAAS,KACVgY,EAAM9Z,UAAW,cAAU,GAC9BW,IACImB,WAAS,KACVgY,EAAM9Z,UAAW,aAAS,GAC7BW,IACImB,WAAS,MACVgY,EAAM9Z,UAAW,cAAU,GACvB8Z,GACT/X,iBAKE8T,GAA0B,SAAUzU,GAEpC,SAASyU,IACL,OAAkB,OAAXzU,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA6B/D,OA/BAyhC,GAAU0V,EAAUzU,GAIpBT,IACImB,WAAS,aACV+T,EAAS7V,UAAW,YAAQ,GAC/BW,IACImB,WAAS,OACV+T,EAAS7V,UAAW,iBAAa,GACpCW,IACIgE,gBAAemV,KAChBjE,EAAS7V,UAAW,cAAU,GACjCW,IACImB,WAAS,eACV+T,EAAS7V,UAAW,mBAAe,GACtCW,IACIgE,gBAAekV,KAChBhE,EAAS7V,UAAW,aAAS,GAChCW,IACI8H,aAAYmR,KACb/D,EAAS7V,UAAW,cAAU,GACjCW,IACImB,WAAS,KACV+T,EAAS7V,UAAW,iBAAa,GACpCW,IACImB,YAAS,IACV+T,EAAS7V,UAAW,cAAU,GACjCW,IACImB,YAAS,IACV+T,EAAS7V,UAAW,eAAW,GAC3B6V,GACTC,IAMEiE,GAAgC,WAChC,SAASA,KAQT,OANApZ,IACImB,WAAS,WACViY,EAAe/Z,UAAW,YAAQ,GACrCW,IACImB,WAAS,aACViY,EAAe/Z,UAAW,mBAAe,GACrC+Z,KC90CP5Z,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAkB5DiV,GAAuB,SAAUqgB,GAKjC,SAASrgB,EAAM4V,EAASr4B,GACpB,IAAIymC,EAAQ3D,EAAO0E,KAAKpnC,KAAMi4B,EAASr4B,IAAYI,KAKnD,OAHAqmC,EAAM32B,OAAS,EAEf22B,EAAMhrB,MAAQ,EACPgrB,EA6VX,OAvWA5E,GAAUpf,EAAOqgB,GAgBjBrgB,EAAMif,UAAUga,UAAY,WACxBt7C,KAAKu7C,eACLv7C,KAAKw7C,cAMTn5B,EAAMif,UAAUma,OAAS,WACrBz7C,KAAK07C,uBAMTr5B,EAAMif,UAAUqa,cAAgB,WAC5B,MAAO,SAMXt5B,EAAMif,UAAUsa,QAAU,WACtB57C,KAAKu7C,eACLv7C,KAAK67C,OAAO,cACZnZ,EAAOpB,UAAUsa,QAAQxU,KAAKpnC,MAC9BA,KAAKJ,QAAQusB,UAAU2vB,OAAO,YAMlCz5B,EAAMif,UAAUya,eAAiB,WAE7B,OAAO/7C,KAAKg8C,cADK,YAOrB35B,EAAMif,UAAU2a,kBAAoB,SAAUC,EAASC,GACnD,IAAK,IAAIt/C,EAAK,EAAG6f,EAAKC,OAAOC,KAAKs/B,GAAUr/C,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAE9D,OADW6f,EAAG7f,IAEV,IAAK,SACL,IAAK,WACL,IAAK,eACL,IAAK,gBACL,IAAK,cACL,IAAK,YACDmD,KAAK0iB,iBAKrBL,EAAMif,UAAUoa,oBAAsB,WAClC17C,KAAKJ,QAAQM,MAAM2sB,UAAY,OAC/B7sB,KAAKo8C,mBACLp8C,KAAK0iB,eAETL,EAAMif,UAAU8a,iBAAmB,WAC/B,IAAIz6B,EAAgB3hB,KAAK4hB,mBACrBN,EAAMC,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,gBAQpD,OAPKyhB,IACDA,EAAMO,GAAkB,OACpBhiB,GAAMG,KAAKJ,QAAQC,GAAK,eACxBK,MAAS,UAAYyhB,EAAcrpB,OAAS,YAAcqpB,EAAcppB,MAAQ,sBAEpFyH,KAAKJ,QAAQ2vB,YAAYjO,IAEtBA,GAEXe,EAAMif,UAAU5e,YAAc,WAC1B,IAAIjB,EAAYzhB,KAAK0hB,eACjBC,EAAgB3hB,KAAK4hB,mBACrBnrB,EAAS,EACTiZ,EAAS,EACT61B,EAAgB,IAAI3nB,GACpBqd,EAAMj7B,KAAKq8C,YAAY16B,GAC3B,GAAIsZ,IACAxkC,EAASuJ,KAAKvJ,OACd8uC,EAAcjtC,OAASmpB,EACvB/R,EAAS1P,KAAK0P,OACVjZ,GAAUA,IAAW6lD,EAAAA,GAAU,CAC/B,IAAIC,EAAa9lD,EAASuJ,KAAKsiB,aAC3Bk6B,EAAa9sC,EACjB1P,KAAKy8C,eAAeD,EAAaD,EAAa9/C,KAAK6G,IAAIk5C,GAAcvhB,EAAKxZ,KAItFY,EAAMif,UAAUmb,eAAiB,SAAU13B,EAAOC,EAAKiW,EAAKxZ,GAGxD,IAFA,IAAIi7B,EAAM33B,EACN8P,GAAUA,MAAO,GACd6nB,EAAM13B,GAAK,CACd,IAAI23B,EAAe38C,KAAK48C,cAAcF,EAAKzhB,GACvC0hB,IACA1hB,EAAI1L,YAAYotB,EAAariD,SAC7BoiD,EAAM18C,KAAK68C,cAAc93B,EAAOC,EAAK23B,EAAcD,EAAK7nB,EAAOpT,MAI3EY,EAAMif,UAAUub,cAAgB,SAAU93B,EAAOC,EAAK23B,EAAcD,EAAK7nB,EAAOpT,GAC5E,IAAIq7B,EAAW98C,KAAK+8C,mBAAmB/8C,KAAKqb,OACxCqhC,IAAQ33B,GACR/kB,KAAKg9C,WAAavgD,KAAKm3B,MAAM7O,EAAQ+3B,GAAYA,EAAW98C,KAAKqb,MACjErb,KAAKg9C,WAAch9C,KAAKg9C,WAAa,GAAO,EAAI7kD,OAAQ6H,KAAe,WAAE7F,QAAQ,IAAM6F,KAAKg9C,WAC5FL,EAAa7B,MAAMtjB,YAAcx3B,KAAKg9C,WAAW1+C,WACjD0B,KAAKi9C,cAAgBP,EAAM18C,KAAKg9C,WAAah9C,KAAKqb,MACzB,eAArBrb,KAAK8Q,YACL9Q,KAAK+jB,aAAegB,EAAQ23B,EAG5B18C,KAAKikB,aAAec,EAAQ23B,IAIhC18C,KAAKg9C,WAAcN,EAAM18C,KAAKqb,MAC9Brb,KAAKg9C,WAAch9C,KAAKg9C,WAAa,GAAO,EAAI7kD,OAAQ6H,KAAe,WAAE7F,QAAQ,IAAM6F,KAAKg9C,WAC5FL,EAAa7B,MAAMtjB,YAAcx3B,KAAKg9C,WAAW1+C,YAErD0B,KAAKk9C,gBAAgBP,EAAcl7B,GACnC,IAAI07B,EAAkC,eAArBn9C,KAAK8Q,YAAkC+jB,EAAMA,MAAQ,GAAO,OAAW,QAAUA,EAAMA,MAAQ,IAIhH,OAHA8nB,EAAariD,QAAQ47B,aAAa,YAAa,aAAeinB,EAAY,KAC1EtoB,EAAMA,OAASioB,EACfJ,GAAOI,GAGXz6B,EAAMif,UAAU4b,gBAAkB,SAAUP,EAAcl7B,GACtD,IAAI6T,EAAOqnB,EAAariD,QAAQ8iD,UAAUjnB,UACtC9U,EAAqC,eAArBrhB,KAAK8Q,YACrBusC,EAA0C,kBAAvBr9C,KAAKs9C,cACxBtmD,EAAIqqB,EAAe,EAAI,EACvBpqB,EAAIoqB,EAAgBg8B,EAAmB57B,EAAY,UAClDA,EAAY,MAAiB6T,EAAKh9B,OACnC6kD,EAAYE,IAAqB/nB,EAAK/8B,MAAQ,GAAK,KAAQkpB,EAAY,EAAK6T,EAAKh9B,UAC9Eg9B,EAAK/8B,MAAQ,GAAK,KAAQkpB,EAAY,EAAK6T,EAAKh9B,OAAS,GAC5DilD,EAAOl8B,GAAiBrqB,EAAKA,EAAGC,EAAKA,IACnCD,EAAKA,EAAGC,EAAKA,EAAGwO,UAAa,wBAA+B03C,EAAY,KAC9ErjB,GAAgB6iB,EAAariD,QAAQ8iD,UAAWG,IAEpDl7B,EAAMif,UAAUsb,cAAgB,SAAUF,EAAKzhB,GAC3C,IAAI3gC,EAAU0F,KAAKw9C,eAAed,EAAKzhB,GAEvC,OAAS3gC,QAASA,EAASwgD,MADf96C,KAAKy9C,gBAAgBxiB,EAAK3gC,KAG1C+nB,EAAMif,UAAUkc,eAAiB,SAAUd,EAAKzhB,GAC5C,IAAIyiB,EACAC,EAEAC,EADAt7B,EAAetiB,KAAK+8C,mBAAmB/8C,KAAKqb,OAGhDuiC,EAAIhkB,GAAiB,KADRjiB,MAAS,oBAEtB,IAAK,IAAIjhB,EAAI,EAAGA,EAAIsJ,KAAK69C,SAAUnnD,IAC/BinD,EAAer7B,EAAetiB,KAAK69C,SACnCH,EAAO19C,KAAK89C,WAAW7iB,EAAK0iB,EAAcjnD,EAAI,EAAGgmD,GACjDkB,EAAEruB,YAAYmuB,GAElB,OAAOE,GAEXv7B,EAAMif,UAAUyc,aAAe,SAAU9iB,EAAK0iB,EAAclnD,GACxD,IAAI6rB,EAAetiB,KAAK+8C,mBAAmB/8C,KAAKqb,OAC5CoG,EAAYzhB,KAAK0hB,eAGrB,OAFAi8B,GAA+BlnD,EAAS,EACxCA,EAAWknD,EAAer7B,GAAkB,EAAKb,EAAwB,GAAZA,GAGjEY,EAAMif,UAAUwc,WAAa,SAAU7iB,EAAK0iB,EAAclnD,EAAQimD,GAC9D,IACIp1B,EAGAvnB,EACAw9C,EAHAS,EAAYh+C,KAAK+9C,aAAa9iB,EAAK0iB,EAAclnD,GACjDgrB,EAAYzhB,KAAK0hB,eAGjBL,EAAqC,eAArBrhB,KAAK8Q,YACrBusC,EAA0C,kBAAvBr9C,KAAKs9C,cACxB35B,EAAcC,GAAY5jB,KAAK2jB,aACnC5jB,GAASqiB,WATLA,EASmB67B,WAAYD,EAAWL,aAAgB39C,KAAKsiB,aAAetiB,KAAK69C,UAAapnD,EAAS,IACzGktB,GACAA,EAAY5jB,GAEhBi+C,EAAYj+C,EAAKk+C,WACjB,IAAItiD,EAAQgiD,GAAgBlnD,EAAS,GAQrC,OAHA8mD,GAASrmD,GAJAmqB,EAAe1lB,EAAS0hD,EAAkB57B,EAAY,EAI5CtqB,GAFVkqB,EAAgBg8B,EAAkB57B,EAAaA,GAAaA,EAAYu8B,GAAeriD,EAEnEvE,GAHpBiqB,EAAe1lB,EAAS0hD,EAAmB57B,EAAYu8B,EAAcv8B,GAAaA,EAAYu8B,GAGhE3mD,GAD9BgqB,EAAgBg8B,EAAmB57B,EAAYu8B,EAAa,EAAKriD,EACzBuiD,eAAgB,IAAKhmB,OAAU,UAChF5Q,EAAOsS,GAAiB,OAAQ2jB,IAC3BrnB,aAAa,QAAS,gBACpB5O,GAEXjF,EAAMif,UAAUmc,gBAAkB,SAAUxiB,EAAK3gC,GAC7C,IAAIqf,EACJ,GAAIrf,EAAS,CAETqf,EAAOigB,GAAiB,QADXjiB,MAAS,uBAEtBrd,EAAQi1B,YAAY5V,GAExB,OAAOA,GAMX0I,EAAMif,UAAUyb,mBAAqB,SAAU1hC,GAC3C,GAA0B,MAAtBrb,KAAKsiB,aACL,OAAOtiB,KAAKsiB,aAEhB,IAEIhB,EADA68B,EAAY,EAOhB,IAFA78B,EAFY,IAGZA,EAHY,IACC7kB,KAAKomC,IAAI,EAAGpmC,KAAKC,MAAMD,KAAK2hD,IAAI/iC,GAAS5e,KAAK2hD,IAAI,KAGxD98B,EAAM,KACT68B,GAAa,GACb78B,GAAO,GAEX,KAAOA,EAAM,IACT68B,GAAa,GACb78B,GAAO,GAKX,OAHIA,GAhBO,IAgBQA,EAhBR,IAgBuB,IAC9BA,EAjBO,GAiBD7kB,KAAKC,MAAM4kB,EAjBV,KAmBJA,EAAMjG,EAAQ8iC,GAEzB97B,EAAMif,UAAU+c,iBAAmB,SAAUC,EAAU77B,EAAU86B,GAC7D,IAAIj2B,EAQJ,OAPI7E,KACA6E,EAAOg3B,EAAS98B,eAAeiB,EAAS5iB,GAAK,aAEzCynB,EAAK9J,WAAW8R,YAAYhI,GAEhCA,EAAOsS,GAAiB,OAAQ2jB,IAE7Bj2B,GAOXjF,EAAMif,UAAUid,gBAAkB,SAAU97B,EAAU+7B,EAAc9uC,GAChE,IAAI4uC,EACA78B,EACApG,EACAojC,EACA/nD,EACA6mD,EACAj2B,EACAjG,EAAoC,eAArBrhB,KAAK8Q,YACpB4tC,EAAmBj8B,EAASk8B,qBAAqB,OACrD,IAAKjoD,EAAI,EAAGA,EAAIgoD,EAAiBjoD,OAAQC,IAAK,CACtCgoD,EAAiBhoD,KACjB4nD,EAAWI,EAAiBhoD,IAEhC,MAEJ,GAAI4nD,EAAU,CACV78B,EAAYzhB,KAAK0hB,eACjB67B,GACI19C,GAAM4iB,EAAS5iB,GAAK,UAAW3I,GAAM,EAAGC,GAAM,EAAGC,GAAOiqB,EAAe,EAAII,EAC3EpqB,GAAOgqB,EAAeI,EAAY,EAAIyW,OAAUl4B,KAAK4+C,YAAaV,eAAgB,IAClFvmC,MAAS,oBAEb2P,EAAOtnB,KAAKq+C,iBAAiBC,EAAU77B,EAAU86B,GACjDliC,EAAQrb,KAAKqb,MACbojC,EAAOz+C,KAAK0P,OAAS1P,KAAKi9C,cAC1B,IACI4B,GADQx9B,EAAem9B,EAAaxnD,EAAIwnD,EAAavnD,GACrCokB,EAAS3L,EAAS+uC,EACtCn3B,EAAK4O,aAAa,YAAa,cAAgB7U,EAAiBw9B,EAAO,GAAO,OAAW,QAAUA,EAAO,KAAS,KACnHP,EAAS/uB,YAAYjI,KAG7BjF,EAAMif,UAAU1f,iBAAmB,WAC/B,OAAO,IAAIhE,GAAK5d,KAAKJ,QAAUI,KAAKJ,QAAQioB,wBAAwBtvB,MAAQ,EAAGyH,KAAKJ,QAAUI,KAAKJ,QAAQioB,wBAAwBvvB,OAAS,IAEhJ+pB,EAAMif,UAAU5f,aAAe,WAC3B,OAAO1hB,KAAKmjB,WAEhBd,EAAMif,UAAU+a,YAAc,SAAU16B,GACpC,IAAIm9B,EAEA7jB,EADAxZ,EAAYzhB,KAAK0hB,eAErB,GAAI1hB,KAAKJ,UACLk/C,EAAav9B,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,iBACvC,CAQZ,GADAo7B,EAAMrB,GAAiB,OALnB/5B,GAAMG,KAAKJ,QAAQC,GAAK,aACxBtH,MAA4B,eAArByH,KAAK8Q,YAAgC6Q,EAAcppB,MAAQ,IAAOkpB,EAAY,KACrFnpB,OAA6B,eAArB0H,KAAK8Q,YAA+B2Q,EAAaE,EAAcrpB,OAAS,IAAO,KACvF4H,MAAO,sBAGP4+C,EAAW/oB,WAAWt/B,OAAS,EAC/B,IAAK,IAAIC,EAAIooD,EAAW/oB,WAAWt/B,OAAS,EAAGC,GAAK,EAAGA,IACnDooD,EAAW/oB,WAAWr/B,GAAG8mB,WAAW8R,YAAYwvB,EAAW/oB,WAAWr/B,IAG9EooD,EAAWvvB,YAAY0L,GAG/B,OAAOA,GAKX5Y,EAAMif,UAAUka,WAAa,aAM7Bn5B,EAAMif,UAAUia,aAAe,aAG/BtZ,IACImB,WAAS,IACV/gB,EAAMif,UAAW,gBAAY,GAChCW,IACImB,WAAS,MACV/gB,EAAMif,UAAW,oBAAgB,GACpCW,IACImB,WAAS,eACV/gB,EAAMif,UAAW,mBAAe,GACnCW,IACImB,WAAS,kBACV/gB,EAAMif,UAAW,qBAAiB,GACrCW,IACImB,WAAS,QACV/gB,EAAMif,UAAW,mBAAe,GACnCW,IACImB,WAAS,KACV/gB,EAAMif,UAAW,iBAAa,GACjCW,IACImB,WAAS,OACV/gB,EAAMif,UAAW,mBAAe,GACnCW,IACImB,WAAS,MACV/gB,EAAMif,UAAW,cAAU,GACvBjf,GACT08B,a5BrYE56B,IAEA66B,OAAU,8JAGV9T,SAAY,oDAEZ+T,UAAa,oDAEbC,YAAe,8FAEfC,SAAY,oDAEZC,SAAY,oDAEZC,UAAa,8JAGbC,eAAkB,6DAElBC,WAAc,sEAEdC,cAAiB,qEAEjBC,eAAkB,4BAElBC,KAAQ,2DCuzCD5iC,GAAgB,SAAUviB,GAWjC,OAVIA,IAIIA,OAHiBN,IAAjBM,EAAIkH,eAA8CxH,IAApBM,EAAIwG,kBACjB9G,IAAjBM,EAAI63C,eAA8Cn4C,IAApBM,EAAIsQ,kBACrB5Q,IAAbM,EAAIsB,KACEuX,GAGAmB,IAGPha,G4B11CPolD,GAAgC,WAChC,SAASA,KAmkBT,OAhkBAA,EAAeC,WAAa,SAAUjG,GAClC,OAAOA,EAAOiG,WAAW,OAE7BD,EAAeE,cAAgB,SAAUlG,EAAQphD,EAAOD,GAChDqhD,IACAA,EAAOzjB,aAAa,QAAS39B,EAAM+F,YACnCq7C,EAAOzjB,aAAa,SAAU59B,EAAOgG,cAK7CqhD,EAAere,UAAUwe,eAAiB,SAAU7nB,EAAS8nB,EAAK/oD,EAAGC,GACjE,IAAIuO,EACAsB,EACAk5C,EACJ,GAA8B,SAA1B/nB,EAAQxK,SAAS5xB,KAAiB,CAClC,IAAK,IAAInF,EAAI,EAAGA,EAAIuhC,EAAQxK,SAASF,MAAM92B,OAAQC,IAC/C8O,OAAcvL,IAARuL,EAAoByyB,EAAQxK,SAASF,MAAM72B,GAAGgZ,OAASjT,KAAK+I,IAAIA,EAAKyyB,EAAQxK,SAASF,MAAM72B,GAAGgZ,QACrG5I,OAAc7M,IAAR6M,EAAoBmxB,EAAQxK,SAASF,MAAM72B,GAAGgZ,OAASjT,KAAKqK,IAAIA,EAAKmxB,EAAQxK,SAASF,MAAM72B,GAAGgZ,QAEzG,GAA8B,WAA1BuoB,EAAQxK,SAAS5xB,KAAmB,CACpC,IAAIokD,EAAShoB,EAAQxK,SACrBuyB,EAAMD,EAAIG,qBAAqBlpD,EAAIipD,EAAO/oD,GAAID,EAAIgpD,EAAO9oD,GAAIH,EAAIipD,EAAO7oD,GAAIH,EAAIgpD,EAAO5oD,QAEtF,CACD,IAAI8oD,EAASloB,EAAQxK,SACrBuyB,EAAMD,EAAIK,qBAAqBppD,EAAImpD,EAAO9yB,GAAIp2B,EAAIkpD,EAAO7yB,GAAI,EAAGt2B,EAAImpD,EAAOhzB,GAAIl2B,EAAIkpD,EAAO/yB,GAAI+yB,EAAO/yC,GAEzG,IAAS1W,EAAI,EAAGA,EAAIuhC,EAAQxK,SAASF,MAAM92B,OAAQC,IAAK,CACpD,IAAI2pD,EAASpoB,EAAQxK,SAASF,MAAM72B,GAChCgZ,EAAS5I,EAAM,GAAKtB,EAAM66C,EAAO3wC,SAAW,EAAIlK,GAAO66C,EAAO3wC,OAASlK,EAC3Ew6C,EAAIM,aAAa5wC,EAAQ2wC,EAAO3nC,OAEpCqnC,EAAIQ,UAAYP,EAEpB,OAAOD,GAGXJ,EAAere,UAAUkf,aAAe,SAAUvoB,EAAS0hB,EAAQrjD,QAC5C,IAAfA,IAAyBA,EAAa,MAC1C,IAAIypD,EAAMJ,EAAeC,WAAWjG,GACpCoG,EAAIU,OACJV,EAAIW,YACJX,EAAIY,YAAcZ,EAAIQ,UAAYtoB,EAAQK,OAAO5f,MACjDqnC,EAAIa,YAAc3oB,EAAQK,OAAO5L,QACjC,IACI/wB,EAAQwJ,GAAMM,WADFzO,EAAG,EAAGC,EAAG,GACYghC,EAAQK,OAAO9gC,MAAOygC,EAAQK,OAAOhzB,UACtEu7C,EAAS5oB,EAAQjhC,EAAI2E,EAAM3E,EAC3B8pD,EAAS7oB,EAAQhhC,EAAI0E,EAAM1E,EAC3BkhC,EAAS0oB,EAAS5oB,EAAQ1/B,MAAQ0/B,EAAQE,OAC1CC,EAAS0oB,EAAS7oB,EAAQ3/B,OAAS2/B,EAAQG,OAC/Cp4B,KAAK+gD,cAAcpH,EAAQ1hB,EAAQzgC,MAAO2gC,EAAQC,GAC9C9hC,GACAypD,EAAI5C,UAAU0D,EAAQC,GACtB9gD,KAAKghD,WAAWrH,EAAQ1hB,EAAS3hC,GACjCypD,EAAI5C,WAAW0D,GAASC,KAGxBf,EAAI1jC,KAAKwkC,EAAQC,EAAQ7oB,EAAQ1/B,MAAO0/B,EAAQ3/B,QAChDynD,EAAIkB,SAASJ,EAAQC,EAAQ7oB,EAAQ1/B,MAAO0/B,EAAQ3/B,SAExDynD,EAAI9nC,OACJ8nC,EAAI7nB,SACJ6nB,EAAImB,YACJnB,EAAIoB,WAGRxB,EAAeyB,aAAe,SAAUvhD,EAAItH,EAAOD,GAC/C,IAAI+oD,EAAYx/B,GAAkB,UAAYhiB,GAAMA,IAEpD,OADAG,KAAK6/C,cAAcwB,EAAW9oD,EAAOD,GAC9B+oD,GAGX1B,EAAere,UAAUggB,SAAW,SAAU3H,EAAQz5C,GAClD,IAAI6/C,EAAMJ,EAAeC,WAAWjG,GACjB,SAAfz5C,EAAM+X,OACN/X,EAAM+X,KAAO,eAEI,SAAjB/X,EAAMg4B,SACNh4B,EAAMg4B,OAAS,eAEnB6nB,EAAIY,YAAczgD,EAAMg4B,OACxB6nB,EAAIwB,UAAYrhD,EAAMiY,YACI,IAAtBjY,EAAMiY,cACN4nC,EAAIY,YAAc,eAEtBZ,EAAIa,YAAc1gD,EAAMwsB,QACxB,IAAI2L,KACAn4B,EAAMm4B,YACNA,EAAYr4B,KAAKwhD,eAAethD,EAAMm4B,YAE1C0nB,EAAI0B,YAAYppB,GACZn4B,EAAMutB,UAAoC,SAAxBvtB,EAAMutB,SAAS5xB,KACjCmE,KAAK8/C,eAAe5/C,EAAO6/C,EAAK,EAAG,GAGnCA,EAAIQ,UAAYrgD,EAAM+X,MAG9B0nC,EAAere,UAAUyf,cAAgB,SAAUpH,EAAQniD,EAAOR,EAAGC,GACjE,IAAI8oD,EAAMJ,EAAeC,WAAWjG,GACpCoG,EAAI5C,UAAUnmD,EAAGC,GACjB8oD,EAAI2B,OAAOlqD,EAAQiF,KAAKgR,GAAK,KAC7BsyC,EAAI5C,WAAWnmD,GAAIC,IAEvB0oD,EAAere,UAAUqgB,aAAe,SAAUhI,EAAQhgC,GACtD,IAAIomC,EAAMJ,EAAeC,WAAWjG,GAChCiI,EAAO,GACPjoC,EAAKiT,SACLg1B,GAAQ,WAERjoC,EAAKnB,OACLopC,GAAQ,SAEZA,GAASjoC,EAAa,SAAI,MAC1BioC,GAAQjoC,EAAKgT,WACbozB,EAAI6B,KAAOA,GAGfjC,EAAere,UAAUkgB,eAAiB,SAAUnpB,GAIhD,IAAK,IAHDwpB,KACAC,GAAwC,IAA5BzpB,EAAUna,QAAQ,KAAc,IAAM,IAE7CrhB,EAAK,EAAGklD,EADI1pB,EAAU/pB,MAAMwzC,GACejlD,EAAKklD,EAAiBtrD,OAAQoG,IAAM,CACpF,IAAInG,EAAIqrD,EAAiBllD,GACzBglD,EAAO/qD,KAAKqB,OAAOzB,IAEvB,OAAOmrD,GAIXlC,EAAere,UAAU0gB,cAAgB,SAAUrI,EAAQ1hB,GACvD,IAAwB,IAApBA,EAAQ/J,QACR,GAAI+J,EAAQ5/B,aACR4/B,EAAQ7hC,KAAOgC,EAAiB6/B,EAAQ5/B,aAAc4/B,EAAQ3/B,OAAQ2/B,EAAQ1/B,OAC9EyH,KAAKiiD,SAAStI,EAAQ1hB,OAErB,CACD,IAAI8nB,EAAMJ,EAAeC,WAAWjG,GAChC1hB,EAAQK,QACRt4B,KAAKwgD,aAAavoB,EAAS0hB,GAE/BoG,EAAIU,OACJV,EAAIW,YACezoB,EAAQ5/B,aAA3B,IACI8/B,EAASF,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,OAC7CC,EAASH,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,OAClDp4B,KAAK+gD,cAAcpH,EAAQ1hB,EAAQzgC,MAAO2gC,EAAQC,GAClDp4B,KAAKshD,SAAS3H,EAAQ1hB,GACtB8nB,EAAI1jC,KAAK4b,EAAQjhC,EAAGihC,EAAQhhC,EAAGghC,EAAQ1/B,MAAO0/B,EAAQ3/B,QACtDynD,EAAIkB,SAAShpB,EAAQjhC,EAAGihC,EAAQhhC,EAAGghC,EAAQ1/B,MAAO0/B,EAAQ3/B,QAC1DynD,EAAI9nC,OACJ8nC,EAAI7nB,SACJ6nB,EAAImB,YACJnB,EAAIoB,YAsChBxB,EAAere,UAAU2gB,SAAW,SAAUtI,EAAQ1hB,GAClD,IAAI3hC,KAEJA,EAAa0C,EADb1C,EAAaH,EAAgB8hC,EAAQ7hC,OAEjC6hC,EAAQK,QACRt4B,KAAKwgD,aAAavoB,EAAS0hB,EAAQrjD,GAEvC,IAAIypD,EAAMJ,EAAeC,WAAWjG,GACpCoG,EAAIU,OACJV,EAAIW,YACJ,IAAItoB,EAASH,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,OAC9CD,EAASF,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,OACjDn4B,KAAK+gD,cAAcpH,EAAQ1hB,EAAQzgC,MAAO2gC,EAAQC,GAClDp4B,KAAKshD,SAAS3H,EAAQ1hB,GACtB8nB,EAAI5C,UAAUllB,EAAQjhC,EAAGihC,EAAQhhC,GACjC+I,KAAKghD,WAAWrH,EAAQ1hB,EAAS3hC,GACjCypD,EAAI9nC,OACJ8nC,EAAI5C,WAAWllB,EAAQjhC,GAAIihC,EAAQhhC,GACnC8oD,EAAI7nB,SACJ6nB,EAAIoB,WAGRxB,EAAere,UAAU0f,WAAa,SAAUrH,EAAQ1hB,EAAS3hC,GAC7D,IAAwB,IAApB2hC,EAAQ/J,QAAkB,CAC1B,IASIjjB,EATA80C,EAAMJ,EAAeC,WAAWjG,GAChC1gD,OAAK,EACLC,OAAK,EACLhC,OAAK,EACLC,OAAK,EACLC,OAAK,EACLC,OAAK,EACLL,OAAI,EACJC,OAAI,EAEJP,OAAI,EAEJwrD,EAAO5rD,EACX,IAAKU,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGuU,EAAWi3C,EAAKzrD,OAAQC,EAAIuU,IAAYvU,EAAG,CACjE,IACIqC,EADMmpD,EAAKxrD,GAEXE,EAAOmC,EAAIhC,QAmBf,OAlBI,OAAQgC,IACR7B,EAAK6B,EAAI7B,IAET,OAAQ6B,IACR3B,EAAK2B,EAAI3B,IAET,OAAQ2B,IACR5B,EAAK4B,EAAI5B,IAET,OAAQ4B,IACR1B,EAAK0B,EAAI1B,IAET,MAAO0B,IACP/B,EAAI+B,EAAI/B,GAER,MAAO+B,IACP9B,EAAI8B,EAAI9B,GAEJL,GACJ,IAAK,IACDmpD,EAAIoC,OAAOnrD,EAAGC,GACd8B,EAAI/B,EAAIA,EACR+B,EAAI9B,EAAIA,EACR,MACJ,IAAK,IACD8oD,EAAIqC,OAAOprD,EAAGC,GACd8B,EAAI/B,EAAIA,EACR+B,EAAI9B,EAAIA,EACR,MACJ,IAAK,IACD8oD,EAAIsC,cAAcnrD,EAAIC,EAAIC,EAAIC,EAAIL,EAAGC,GACrC8B,EAAI/B,EAAIA,EACR+B,EAAI9B,EAAIA,EACR8B,EAAI7B,GAAKA,EACT6B,EAAI5B,GAAKA,EACT4B,EAAI3B,GAAKA,EACT2B,EAAI1B,GAAKA,EACT,MACJ,IAAK,IACD0oD,EAAIuC,iBAAiBprD,EAAIC,EAAIH,EAAGC,GAChC8B,EAAI/B,EAAIA,EACR+B,EAAI9B,EAAIA,EACR8B,EAAI7B,GAAKA,EACT6B,EAAI5B,GAAKA,EACT,MACJ,IAAK,IACD,IAAIorD,EAAYtpD,EAAZspD,EAAmBrpD,EACnBspD,EAAKzpD,EAAIzB,GACTmrD,EAAK1pD,EAAIxB,GACTmrD,EAAgB3pD,EAAIvB,OAASiF,KAAKgR,GAAK,KACvChW,EAAWsB,EAAItB,SACfC,EAAQqB,EAAIrB,MACZirD,EAAU3rD,EAAV2rD,EAAgB1rD,EAChB2rD,GACA5rD,EAAGyF,KAAKY,IAAIqlD,IAAkBH,EAASI,GAAQ,EAAMlmD,KAAKW,IAAIslD,IAAkBH,EAASI,GAAQ,EACjG1rD,GAAIwF,KAAKW,IAAIslD,IAAkBH,EAASI,GAAQ,EAAMlmD,KAAKY,IAAIqlD,IAAkBH,EAASI,GAAQ,GAElGvnD,EAAIqB,KAAKomC,IAAI+f,EAAM5rD,EAAG,GAAKyF,KAAKomC,IAAI2f,EAAI,GAAK/lD,KAAKomC,IAAI+f,EAAM3rD,EAAG,GAAKwF,KAAKomC,IAAI4f,EAAI,GACjFrnD,EAAI,IACJonD,GAAM/lD,KAAKmmC,KAAKxnC,GAChBqnD,GAAMhmD,KAAKmmC,KAAKxnC,IAEpB,IAAI2kB,EAAKtjB,KAAKomC,IAAI4f,EAAI,GAAKhmD,KAAKomC,IAAI+f,EAAM5rD,EAAG,GACzC4C,GAAKnC,IAAaC,GAAS,EAAI,GAAK+E,KAAKmmC,MAAOnmC,KAAKomC,IAAI2f,EAAI,GAAK/lD,KAAKomC,IAAI4f,EAAI,GAAOhmD,KAAKomC,IAAI2f,EAAI,GAAK/lD,KAAKomC,IAAI+f,EAAM3rD,EAAG,GAAM8oB,IAC/HtjB,KAAKomC,IAAI2f,EAAI,GAAK/lD,KAAKomC,IAAI+f,EAAM3rD,EAAG,GAAKwF,KAAKomC,IAAI4f,EAAI,GAAKhmD,KAAKomC,IAAI+f,EAAM5rD,EAAG,KAC9E4X,MAAMhV,KACNA,EAAI,GAER,IAAIipD,EAAWjpD,EAAI4oD,EAAKI,EAAM3rD,EAAIwrD,EAA9BI,EAAqCjpD,GAAK6oD,EAAKG,EAAM5rD,EAAIwrD,EACzDM,GACA9rD,GAAIurD,EAASI,GAAQ,EAAMlmD,KAAKY,IAAIqlD,GAAiBG,EAAQpmD,KAAKW,IAAIslD,GAAiBG,EACvF5rD,GAAIsrD,EAASI,GAAQ,EAAMlmD,KAAKW,IAAIslD,GAAiBG,EAAQpmD,KAAKY,IAAIqlD,GAAiBG,GAEvF5zC,EAAKjP,KAAKgQ,GAAG,EAAG,KAAM4yC,EAAM5rD,EAAI6rD,GAASL,GAAKI,EAAM3rD,EAAI4rD,GAASJ,IACjEM,IAAMH,EAAM5rD,EAAI6rD,GAASL,GAAKI,EAAM3rD,EAAI4rD,GAASJ,GACjDO,KAAOJ,EAAM5rD,EAAI6rD,GAASL,IAAMI,EAAM3rD,EAAI4rD,GAASJ,GACnDQ,EAAKjjD,KAAKgQ,EAAE+yC,EAAGC,GAoBnB,GAnBIhjD,KAAKoN,EAAE21C,EAAGC,KAAO,IACjBC,EAAKxmD,KAAKgR,IAEVzN,KAAKoN,EAAE21C,EAAGC,IAAM,IAChBC,EAAK,GAQTlqD,EAAI+pD,MAAQA,EACZ/pD,EAAI2pD,cAAgBA,EACpB3pD,EAAIypD,GAAKA,EACTzpD,EAAI0pD,GAAKA,EACT1pD,EAAIkW,GAAKA,EACTlW,EAAIkqD,GAAKA,EACTlqD,EAAIrB,MAAQA,EACD,MAAPqoD,EAAa,CACb,IAAImD,EAAKV,EAAKC,EAAKD,EAAKC,EACpBU,EAAKX,EAAKC,EAAK,EAAID,EAAKC,EACxBW,EAAKZ,EAAKC,EAAKA,EAAKD,EAAK,EAC7BzC,EAAIU,OACJV,EAAI5C,UAAU2F,EAAM9rD,EAAG8rD,EAAM7rD,GAC7B8oD,EAAI2B,OAAOgB,GACX3C,EAAI1kC,MAAM8nC,EAAIC,GACdrD,EAAIsD,IAAI,EAAG,EAAGH,EAAIj0C,EAAIA,EAAKg0C,GAAKvrD,GAChCqoD,EAAI1kC,MAAM,EAAI8nC,EAAI,EAAIC,GACtBrD,EAAI2B,QAAQgB,GACZ3C,EAAI5C,WAAW2F,EAAM9rD,GAAI8rD,EAAM7rD,GAC/B8oD,EAAIoB,UAER,MACJ,IAAK,IACL,IAAK,IACDpB,EAAImB,YACJlqD,EAAIiC,EACJhC,EAAIiC,EAGZD,EAAKjC,EACLkC,EAAKjC,KAKjB0oD,EAAere,UAAUgiB,SAAW,SAAU3J,EAAQ1hB,GAClD,GAAIA,EAAQh4B,UAA+B,IAApBg4B,EAAQ/J,QAAkB,CAC7C,IAAI6xB,EAAMJ,EAAeC,WAAWjG,GACpCoG,EAAIU,OACJzgD,KAAKshD,SAAS3H,EAAQ1hB,GACtB,IAAIE,EAASF,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,OAC7CC,EAASH,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,OAClDp4B,KAAK+gD,cAAcpH,EAAQ1hB,EAAQzgC,MAAO2gC,EAAQC,GAClDp4B,KAAK2hD,aAAahI,EAAQ1hB,GAC1B,IAAIvhC,EAAI,EACJq/B,KACJA,EAAakC,EAAQlC,WACrB,IAAIiC,EAAaC,EAAQD,WAEzB,GADA+nB,EAAIQ,UAAYtoB,EAAQvf,MACpBsf,EAAY,CACZ,IAAI33B,EAAWL,KAAKujD,WAAWtrB,EAASD,EAAYjC,GACpD,IAAKr/B,EAAI,EAAGA,EAAIq/B,EAAWt/B,OAAQC,IAAK,CACpC,IAAIkX,EAAQmoB,EAAWr/B,GACnBqF,EAAUsE,EAASrJ,EAAI4W,EAAM5W,EAAIghC,EAAWhhC,EAC5CgF,EAAUqE,EAASpJ,EAAI2W,EAAM+oB,GAAKjgC,EAA0B,GAApBuhC,EAAgB,SAK5D,GAJID,EAAWz/B,MAAQ0/B,EAAQ1/B,OAAkC,SAAzB0/B,EAAQxL,eAC5C7e,EAAM+L,KAAO+jB,GAAS9vB,EAAM+L,KAAMse,IAEtC8nB,EAAIyD,SAAS51C,EAAM+L,KAAM5d,EAASC,GACH,cAA3Bi8B,EAAQlL,gBACsB,aAA3BkL,EAAQlL,gBACmB,gBAA3BkL,EAAQlL,eAAkC,CAC7C,IAAI02B,EAAc1nD,EACd2nD,OAAc,EAEdC,EAAY5nD,EADCgkD,EAAIhoB,YAAYnqB,EAAM+L,MAAMphB,MAEzCqrD,OAAY,EAChB,OAAQ3rB,EAAQlL,gBACZ,IAAK,YACD22B,EAAc1nD,EAAU,EACxB4nD,EAAY5nD,EAAU,EACtB,MACJ,IAAK,WACD0nD,EAAerjD,EAASpJ,EAAI2W,EAAM+oB,GAAKjgC,EACvCktD,EAAavjD,EAASpJ,EAAI2W,EAAM+oB,GAAKjgC,EACrC,MACJ,IAAK,cACDgtD,GAAgB1nD,EAAUqE,EAASpJ,EAAI2W,EAAM+oB,GAAKjgC,GAAK,EAAK,EAC5DktD,GAAc5nD,EAAUqE,EAASpJ,EAAI2W,EAAM+oB,GAAKjgC,GAAK,EAAK,EAElEqpD,EAAIW,YACJX,EAAIoC,OAAOsB,EAAaC,GACxB3D,EAAIqC,OAAOuB,EAAWC,GACtB7D,EAAIY,YAAc1oB,EAAQvf,MAC1BqnC,EAAIwB,UAA+B,IAAnBtpB,EAAQxf,SACxBsnC,EAAIa,YAAc3oB,EAAQvL,QAC1BqzB,EAAI7nB,WAIhB6nB,EAAIoB,YAGZxB,EAAere,UAAUuiB,UAAY,SAAU9D,EAAKxlD,EAAKo/C,EAAQxhB,EAAQC,GACrEp4B,KAAK+gD,cAAcpH,EAAQp/C,EAAI/C,MAAO2gC,EAAQC,GAC9C,IAAI0rB,EAAQ,IAAIjN,MAChBiN,EAAMr7C,IAAMlO,EAAIgI,OAChBvC,KAAK8jD,MAAM/D,EAAK+D,EAAOvpD,EAAIvD,EAAGuD,EAAItD,EAAGsD,EAAIhC,MAAOgC,EAAIjC,OAAQiC,IAGhEolD,EAAere,UAAUyiB,UAAY,SAAUpK,EAAQp/C,EAAKypD,EAAWC,GACnE,IAAI5d,EAAQrmC,KACZ,GAAIzF,EAAI2zB,QAAS,CACb,IAAIg2B,EAAQvE,EAAeC,WAAWjG,GACtCuK,EAAMzD,OACN,IAAI0D,EAAW5pD,EAAIvD,EAAIuD,EAAIhC,MAAQgC,EAAI49B,OACnCisB,EAAW7pD,EAAItD,EAAIsD,EAAIjC,OAASiC,EAAI69B,OACpCisB,EAAW,IAAIxN,MACnBwN,EAAS57C,IAAMlO,EAAIgI,OACnB,IAAI1C,EAAKqkD,EAAMvK,OAAO95C,GAAGyO,MAAM,KACnBzO,EAAGA,EAAGpJ,OAAS,GAUtBwtD,EAIDI,EAASC,OAAS,WACdje,EAAMwd,UAAUK,EAAO3pD,EAAKo/C,EAAQwK,EAAUC,IAJlDpkD,KAAK6jD,UAAUK,EAAO3pD,EAAKo/C,EAAQwK,EAAUC,GAOjDF,EAAM/C,YAGdxB,EAAere,UAAUwiB,MAAQ,SAAU/D,EAAK+D,EAAO9sD,EAAGC,EAAGsB,EAAOD,EAAQisD,GACxExE,EAAIW,YACJ,IAAI8D,EAAWV,EAAMvrD,MACjBksD,EAAYX,EAAMxrD,OAClBosD,EAAensD,EACfosD,EAAersD,EACfssD,EAAc,EACdC,EAAe,EACnB,GAAIN,GAA2C,SAA3BA,EAAat7B,UAAsB,CACnD,IAAI67B,EAASP,EAAat7B,UAAUpyB,cAAc+mC,OAAO,EAAG,GACxDmnB,EAASR,EAAat7B,UAAUpyB,cAAc+mC,OAAO,EAAG,GAC5D,GAA2B,UAAvB2mB,EAAalpC,MAAmB,CAChC,IAAIrL,EAAI,WACJ40C,EAAcF,EACdG,EAAeJ,EAAYC,EAAeF,GAE1Cv0C,EAAI,WACJ20C,EAAcJ,EAAWG,EAAeF,EACxCI,EAAeF,GAEfD,EAAeC,GACf30C,IACI20C,EAAeE,GACf50C,KAGCy0C,IAAiBC,EAClBH,EAAWC,EACXx0C,IAGAD,KAIJC,IACIy0C,EAAeE,GACf50C,KAGR,IAAI9Y,EAAK8I,KAAKglD,eAAeF,EAAQF,EAAaF,EAAcF,GAC5DrtD,EAAK6I,KAAKglD,eAAeD,EAAQF,EAAcF,EAAcF,GAC7DQ,EAAST,EAAWttD,EACpBguD,EAAUT,EAAYttD,EACtBguD,EAASP,EAAe1tD,GAAM0tD,EAAcJ,GAC5CY,EAAUP,EAAgB1tD,GAAM0tD,EAAeJ,GAC/CY,EAAUxjC,GAAkB,UAAYtpB,MAASA,EAAM+F,WAAYhG,OAAUA,EAAOgG,aAC7E+mD,EAAQzF,WAAW,MACzBmE,UAAUD,EAAO5sD,EAAIC,EAAI8tD,EAAQC,EAAS,EAAG,EAAGC,EAAQC,GAC7DrF,EAAIgE,UAAUsB,EAASruD,EAAGC,EAAGsB,EAAOD,QAEnC,GAA2B,SAAvBisD,EAAalpC,MAAkB,CACpC,IAAIiqC,EAAYb,EAAYD,EACxBe,EAAaZ,EAAeD,EAChCE,EAAcW,EAAYD,EAAWZ,EAAeC,EAAeW,EACnET,EAAeU,EAAYD,EAAWZ,EAAeY,EAAWX,EAChE3tD,GAAKgJ,KAAKwlD,cAAcV,EAAQF,EAAaF,GAC7CztD,GAAK+I,KAAKwlD,cAAcT,EAAQF,EAAcF,GAC9C5E,EAAIgE,UAAUD,EAAO,EAAG,EAAGU,EAAUC,EAAWztD,EAAGC,EAAG2tD,EAAaC,QAGnE9E,EAAIgE,UAAUD,EAAO9sD,EAAGC,EAAGsB,EAAOD,QAItCynD,EAAIgE,UAAUD,EAAO9sD,EAAGC,EAAGsB,EAAOD,GAEtCynD,EAAImB,aAERvB,EAAere,UAAU0jB,eAAiB,SAAUS,EAAKC,EAAKC,EAAMl9C,GAChE,OAAQg9C,GACJ,IAAK,MAAO,OAAO,EACnB,IAAK,MAAO,OAAQC,EAAMC,GAAQ,EAAIl9C,EAAMi9C,EAC5C,IAAK,MAAO,OAAQA,EAAMC,GAAQl9C,EAAMi9C,EACxC,QAAS,OAAO,IAGxB/F,EAAere,UAAUkkB,cAAgB,SAAUC,EAAKC,EAAKC,GACzD,IAAIngD,EAAM/I,KAAK+I,IAAIkgD,EAAKC,GACpB7+C,EAAMrK,KAAKqK,IAAI4+C,EAAKC,GACxB,OAAQF,GACJ,IAAK,MAAO,OAAO,EACnB,IAAK,MAAO,OAAQjgD,EAAMsB,GAAO,EACjC,IAAK,MAAO,OAAOtB,EAAMsB,EACzB,QAAS,OAAO,IAKxB64C,EAAere,UAAU2Q,EAAI,SAAU+Q,GAAK,OAAOvmD,KAAKmmC,KAAKnmC,KAAKomC,IAAImgB,EAAE,GAAI,GAAKvmD,KAAKomC,IAAImgB,EAAE,GAAI,KAEhGrD,EAAere,UAAUl0B,EAAI,SAAU21C,EAAGC,GAAK,OAAQD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,KAAOhjD,KAAKiyC,EAAE8Q,GAAK/iD,KAAKiyC,EAAE+Q,KAExGrD,EAAere,UAAUtxB,EAAI,SAAU+yC,EAAGC,GAAK,OAAQD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAAM,EAAI,GAAKvmD,KAAKmpD,KAAK5lD,KAAKoN,EAAE21C,EAAGC,KAGjHrD,EAAere,UAAUiiB,WAAa,SAAU5pC,EAAMqe,EAAYjC,GAC9D,IAAIv0B,EAAS,IAAIoc,GAAKoa,EAAWz/B,MAAOw9B,EAAWt/B,QAA0B,IAAhBkjB,EAAKlB,WAC9DpY,GAAarJ,EAAG,EAAGC,EAAG,GACtB4uD,EAASlsC,EAAK3iB,EACd8uD,EAASnsC,EAAK1iB,EAGd8uD,EAFuB,GAAbpsC,EAAKphB,MAGfytD,EAFwB,GAAdrsC,EAAKrhB,OAmBnB,MAhBuB,SAAnBqhB,EAAKkT,UACLk5B,EAAS,EAEe,WAAnBpsC,EAAKkT,UAENk5B,EADA/tB,EAAWz/B,MAAQohB,EAAKphB,QAAgC,aAAtBohB,EAAK8S,cAAqD,SAAtB9S,EAAK8S,cAClE,EAGa,GAAb9S,EAAKphB,MAGM,UAAnBohB,EAAKkT,YACVk5B,EAAuB,EAAbpsC,EAAKphB,OAEnB8H,EAASrJ,EAAI6uD,EAASE,GAAU/tB,EAAaA,EAAWhhC,EAAI,GAC5DqJ,EAASpJ,EAAI6uD,EAASE,EAASxkD,EAAOlJ,OAAS,EACxC+H,GAEJs/C,KCjkBPsG,GAA6B,WAC7B,SAASA,KAokBT,OAjkBAA,EAAY3kB,UAAUkf,aAAe,SAAUvoB,EAAS0hB,EAAQrjD,EAAY0tD,QACrD,IAAf1tD,IAAyBA,EAAa,MAC1C,IAMIuF,EACAqqD,EANAvqD,EAAQwJ,GAAMM,WADCzO,EAAG,EAAGC,EAAG,GACYghC,EAAQK,OAAO9gC,MAAOygC,EAAQK,OAAOhzB,UACzE6gD,EAAKluB,EAAQjhC,EAAI2E,EAAM3E,EACvBovD,EAAKnuB,EAAQhhC,EAAI0E,EAAM1E,EACTghC,EAAQ1/B,MAAQ0/B,EAAQE,OACxBF,EAAQ3/B,OAAS2/B,EAAQG,OAGvC4rB,IACAkC,EAAgBlC,EAAUxiC,eAAem4B,EAAO95C,GAAK,YAEpDqmD,IACDrqD,EAAOvF,EAAa,OAAS,OAC7B4vD,EAAgB3kC,SAASsY,gBAAgB,6BAA8Bh+B,GACvE89C,EAAOpqB,YAAY22B,IAEvB,IAAI3I,GACA19C,GAAM85C,EAAO95C,GAAK,UAAWoY,KAAQggB,EAAQK,OAAO5f,MAAOwf,OAAUD,EAAQK,OAAO5f,MACpFgU,QAAWuL,EAAQK,OAAO5L,QAAQpuB,WAClCmH,UAAa,UAAYwyB,EAAQzgC,MAAQ,KAAOygC,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,QAAU,KACvFF,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,QAAU,eAClCH,EAAQjhC,EAAI2E,EAAM3E,GAAK,KAAOihC,EAAQhhC,EAAI0E,EAAM1E,GAAK,KAE7E,GAAI+sD,EAAW,CACX,IAAIqC,EAAerC,EAAUxiC,eAAem4B,EAAO95C,IAC/CwmD,GACAA,EAAavkC,aAAaokC,EAAeG,EAAatkC,YAG9D+X,GAAgBosB,EAAe3I,GAC1BjnD,EAGIA,GACL0J,KAAKghD,WAAWkF,EAAejuB,EAAS3hC,GAHxCwjC,GAAgBosB,GAAiB3tD,MAAS0/B,EAAQ1/B,MAAOD,OAAU2/B,EAAQ3/B,UAOnF2tD,EAAY3kB,UAAUkgB,eAAiB,SAAUnpB,GAE7C,UAGJ4tB,EAAY3kB,UAAU0gB,cAAgB,SAAU/mB,EAAKhD,EAASlE,EAAWuyB,EAAUC,EAAYvC,EAAWwC,GAClGvuB,EAAQK,SAAWguB,GACnBtmD,KAAKwgD,aAAavoB,EAASgD,OAAKhhC,EAAW+pD,GAE/C,IAAInkD,EAEAA,EADAo4B,EAAQp4B,KAAOo7B,EAAIp7B,GACdo4B,EAAQp4B,GAAK,aAGbo4B,EAAQp4B,GAEjB,IAAIwc,EACA2nC,IACA3nC,EAAO2nC,EAAUxiC,eAAe3hB,IAE/Bwc,IAAQkqC,IACTlqC,EAAOkF,SAASsY,gBAAgB,6BAA8B,QAC9DoB,EAAI1L,YAAYlT,IAEpB,IAAI6pC,EACAlC,IAAc/rB,EAAQK,SACtB4tB,EAAgBlC,EAAUxiC,eAAeyW,EAAQp4B,GAAK,0BAElDqmD,EAAc1oC,WAAW8R,YAAY42B,GAG7C,IAAI3I,GACA19C,GAAMA,EAAI7I,EAAKihC,EAAQjhC,EAAEsH,WAAYrH,EAAKghC,EAAQhhC,EAAEqH,WAAY/F,MAAS0/B,EAAQ1/B,MAAM+F,WACvFhG,OAAU2/B,EAAQ3/B,OAAOgG,WAAY8zB,WAAc6F,EAAQ/J,QAAU,UAAY,SACjFzoB,UAAa,UAAYwyB,EAAQzgC,MAAQ,KAClCygC,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,QAAU,KAAOF,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,QAAU,IAC3GoqB,GAAMvqB,EAAQ5/B,cAAgB,EAAGoqD,GAAMxqB,EAAQ5/B,cAAgB,EAAGq0B,QAAWuL,EAAQvL,QACrF+5B,aAAcD,GAAwB,IAEtCvuB,EAAQtgB,QACR4lC,EAAY,MAAItlB,EAAQtgB,OAGvB6uC,IACDjJ,EAFe,kBAEM,QAEzBzjB,GAAgBzd,EAAMkhC,GACtBv9C,KAAK0mD,YAAYrqC,EAAM4b,EAASlE,IAGpCkyB,EAAY3kB,UAAUqlB,sBAAwB,SAAUC,EAAU3uB,GAC9D,IAAI5b,EACJA,EAAOuqC,EAASppC,WAAWgE,eAAeyW,EAAQp4B,IAClD,IAAI09C,EACJA,GACI19C,GAAMo4B,EAAQp4B,GAAI7I,EAAKihC,EAAQjhC,EAAEsH,WAAYrH,EAAKghC,EAAQhhC,EAAEqH,WAAY/F,MAAS0/B,EAAQ1/B,MAAM+F,WAC/FhG,OAAU2/B,EAAQ3/B,OAAOgG,WAAYmH,UAAa,UAAYwyB,EAAQzgC,MAAQ,KACvEygC,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,QAAU,KAAOF,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,QAAU,IAC3GzgB,MAAO,6BAEN0E,IACDA,EAAOkF,SAASsY,gBAAgB,6BAA8B,QAC9D+sB,EAASr3B,YAAYlT,IAEzBrc,KAAK0mD,YAAYrqC,EAAM4b,GACvB6B,GAAgBzd,EAAMkhC,IAG1B0I,EAAY3kB,UAAUulB,eAAiB,SAAUptB,EAAa7f,GAE1D,OADeggB,GAAiBH,EAAa7f,IAIjDqsC,EAAY3kB,UAAUwlB,SAAW,SAAUF,EAAU3uB,GACjD,IAAI3Q,EAAO/F,SAASsY,gBAAgB,6BAA8B,QAClE75B,KAAK0mD,YAAYp/B,EAAM2Q,GACvB,IAAIE,EAASF,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,OAC7CC,EAASH,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,OAE9CmlB,GACA19C,GAAMo4B,EAAQp4B,GACd3I,GAAM+gC,EAAQ5lB,WAAWrb,EAAIihC,EAAQjhC,EACrCG,GAAM8gC,EAAQ5lB,WAAWpb,EAAIghC,EAAQhhC,EACrCG,GAAM6gC,EAAQ1sB,SAASvU,EAAIihC,EAAQjhC,EACnCK,GAAM4gC,EAAQ1sB,SAAStU,EAAIghC,EAAQhhC,EACnCihC,OAAUD,EAAQC,OAClBgmB,eAAgBjmB,EAAQ9f,YAAY7Z,WAAYouB,QAAWuL,EAAQvL,QAAQpuB,WAC3EmH,UAAa,UAAYwyB,EAAQzgC,MAAQ,IAAM2gC,EAAS,IAAMC,EAAS,IACvEhG,WAAc6F,EAAQ/J,QAAU,UAAY,UAE5C+J,EAAQtgB,QACR4lC,EAAY,MAAItlB,EAAQtgB,OAE5BmiB,GAAgBxS,EAAMi2B,GACtBqJ,EAASr3B,YAAYjI,IAGzB2+B,EAAY3kB,UAAUylB,WAAa,SAAUH,EAAU3uB,EAAS+uB,EAAgBR,GAC5E,IAAIS,EAAS1lC,SAASsY,gBAAgB,6BAA8B,UACpE75B,KAAK0mD,YAAYO,EAAQhvB,GACzB,IAAIivB,EAAWjvB,EAAQtgB,OAAS,GAC3BqvC,IACDE,GAAY,eAEhB,IAAI3J,GACA19C,GAAMo4B,EAAQp4B,GACdstB,GAAM8K,EAAQj7B,QACdowB,GAAM6K,EAAQh7B,QACdmQ,EAAK6qB,EAAQkvB,OACb/0B,WAAc6F,EAAQ/J,QAAU,UAAY,SAC5CvW,MAASuvC,EACTT,aAAcD,EAAYA,EAAU,cAAgB,IAExDS,EAAO/mD,MAAMC,QAAU83B,EAAQ/J,QAAU,QAAU,OACnD4L,GAAgBmtB,EAAQ1J,GACxBqJ,EAASr3B,YAAY03B,IAGzBhB,EAAY3kB,UAAU2gB,SAAW,SAAUhnB,EAAKhD,EAASlE,EAAWwyB,EAAYvC,EAAWwC,GACvF,IACIxvD,EAAIyF,KAAKm3B,MAAuB,GAAhBn3B,KAAKq/B,SAAiB,GACrCb,EAAIp7B,GAAgB7I,EAAEsH,WAC3B,IAAIhI,KAEJA,EAAa0C,EADb1C,EAAaH,EAAgB8hC,EAAQ7hC,OAEjC6hC,EAAQK,QACRt4B,KAAKwgD,aAAavoB,EAASgD,EAAK3kC,EAAY0tD,GAEhD,IAAIkC,EACAlC,IAAc/rB,EAAQK,SACtB4tB,EAAgBlC,EAAUxiC,eAAeyW,EAAQp4B,GAAK,0BAElDqmD,EAAc1oC,WAAW8R,YAAY42B,GAG7C,IAAIxtD,EACAsrD,IACAtrD,EAAOsrD,EAAUxiC,eAAeyW,EAAQp4B,KAEvCnH,IAAQ6tD,IACT7tD,EAAO6oB,SAASsY,gBAAgB,6BAA8B,QAC9DoB,EAAI1L,YAAY72B,IAEpBsH,KAAKghD,WAAWtoD,EAAMu/B,EAAS3hC,GAC/B,IAAIinD,GACA19C,GAAMo4B,EAAQp4B,GAAI4F,UAAa,UAAYwyB,EAAQzgC,MAAQ,KAAOygC,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,QAAU,KACzGF,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,QAAU,cAAsBH,EAAS,EAAI,IAAOA,EAAS,EAAI,IAC7G7F,WAAc6F,EAAQ/J,QAAU,UAAY,SAAUxB,QAAWuL,EAAQvL,QACzE+5B,aAAcD,GAAwB,IAEtCvuB,EAAQtgB,QACR4lC,EAAY,MAAItlB,EAAQtgB,OAE5BmiB,GAAgBphC,EAAM6kD,GACtBv9C,KAAK0mD,YAAYhuD,EAAMu/B,EAASlE,IAGpCkyB,EAAY3kB,UAAU0f,WAAa,SAAU/lB,EAAKhD,EAAS3hC,GACvD,IAAIY,EACAC,EACAC,EACAC,EACAL,EACAC,EACAR,EACAC,EACAyC,EAAW7C,EACXowB,EAAI,GACR,IAAK1vB,EAAI,EAAGC,EAAI,EAAGP,EAAI,EAAGD,EAAS0C,EAAS1C,OAAQC,EAAID,IAAUC,EAAG,CACjE,IACI4D,EADMnB,EAASzC,GAEfE,EAAO0D,EAAQvD,QAmBnB,OAlBI,OAAQuD,IACRpD,EAAKoD,EAAQpD,IAEb,OAAQoD,IACRlD,EAAKkD,EAAQlD,IAEb,OAAQkD,IACRnD,EAAKmD,EAAQnD,IAEb,OAAQmD,IACRjD,EAAKiD,EAAQjD,IAEb,MAAOiD,IACPtD,EAAIsD,EAAQtD,GAEZ,MAAOsD,IACPrD,EAAIqD,EAAQrD,GAERL,GACJ,IAAK,IACD8vB,EAAIA,EAAI,IAAM1vB,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IAClD,MACJ,IAAK,IACDooB,EAAIA,EAAI,IAAM1vB,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IAClD,MACJ,IAAK,IACDooB,EAAIA,EAAI,IAAMxvB,EAAGoH,WAAa,IAAMnH,EAAGmH,WAAa,IAAMlH,EAAGkH,WAAa,IAAMjH,EAAGiH,WAAa,IAChGooB,GAAK1vB,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IACzC,MACJ,IAAK,IACDooB,EAAIA,EAAI,IAAMxvB,EAAGoH,WAAa,IAAMnH,EAAGmH,WAAa,IAAMtH,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IAC9F,MACJ,IAAK,IACDooB,EAAIA,EAAI,IAAMpsB,EAAQhD,GAAGgH,WAAa,IAAMhE,EAAQ/C,GAAG+G,WAAa,IAAMhE,EAAQ9C,MAAM8G,WAAa,IACrGooB,GAAKpsB,EAAQ7C,SAAS6G,WAAa,IAAMhE,EAAQ5C,MAAQ,IAAMV,EAAEsH,WAAa,IAAMrH,EAAEqH,WAAa,IACnG,MACJ,IAAK,IACL,IAAK,IACDooB,GAAQ,MAIpBuU,EAAI/E,aAAa,IAAKxP,IAE1Bu/B,EAAY3kB,UAAU8lB,gBAAkB,SAAUztC,EAAMse,GACpDte,EAAKzZ,MAAMq3B,UAAYU,EAAQrL,OAAS,SAAW,SACnDjT,EAAKzZ,MAAMo3B,WAAaW,EAAQzf,KAAO,OAAS,SAChDmB,EAAKzZ,MAAMuY,SAAWwf,EAAQxf,SAASna,WAAa,KACpDqb,EAAKzZ,MAAMysB,WAAasL,EAAQtL,YAGpCs5B,EAAY3kB,UAAUgiB,SAAW,SAAU3J,EAAQ1hB,EAAS+rB,EAAWwC,EAAWzyB,GAC9E,QAAwB95B,IAApBg+B,EAAQh4B,QAAuB,CAC/B,IAAIonD,OAAW,EACXtxB,OAAa,EACbiC,OAAa,EACb33B,OAAW,EACXuN,OAAQ,EACR05C,OAAe,EACfvrD,EAAU,EACVC,EAAU,EACVtF,EAAI,EACJijB,OAAO,EAIX,GAHIqqC,IACArqC,EAAOqqC,EAAUxiC,eAAeyW,EAAQp4B,GAAK,UAE7C8Z,GACA,GAAIse,EAAQO,OACR,KAAO7e,EAAKoI,YACRpI,EAAK2V,YAAY3V,EAAKoI,iBAK9BkW,EAAQO,QAAS,EACjB7e,EAAO4H,SAASsY,gBAAgB,6BAA8B,QACnC,aAAvB5B,EAAQnL,YACRnT,EAAK0b,eAAe,uCAAwC,YAAa,YAE7EskB,EAAOpqB,YAAY5V,GAEvB,IAAIwe,EAASF,EAAQjhC,EAAIihC,EAAQ1/B,MAAQ0/B,EAAQE,OAC7CC,EAASH,EAAQhhC,EAAIghC,EAAQ3/B,OAAS2/B,EAAQG,OAClD,GAAIH,EAAQO,QAAmC,SAAzBP,EAAQxL,aAU1B,IATAzsB,KAAK0mD,YAAY/sC,EAAMse,EAASlE,GAChC/zB,KAAKonD,gBAAgBztC,EAAMse,GAC3BovB,EAAW9lC,SAAS+Z,eAAerD,EAAQh4B,SAC3C81B,EAAakC,EAAQlC,WACrBiC,EAAaC,EAAQD,WACrB33B,EAAWL,KAAKunD,cAActvB,EAASD,EAAYjC,GAC/CiC,EAAWz/B,MAAQ0/B,EAAQ1/B,OAAkC,SAAzB0/B,EAAQxL,eAC5CsJ,EAAW,GAAGpc,KAAO+jB,GAASzF,EAAQh4B,QAASg4B,IAE9CvhC,EAAI,EAAGA,EAAIq/B,EAAWt/B,OAAQC,IAC/B4wD,EAAe/lC,SAASsY,gBAAgB,6BAA8B,SACtEwtB,EAAW9lC,SAAS+Z,eAAevF,EAAWr/B,GAAGijB,MACjD/L,EAAQmoB,EAAWr/B,GACnBqF,EAAUsE,EAASrJ,EAAI4W,EAAM5W,EAAIghC,EAAWhhC,EAC5CgF,EAAUqE,EAASpJ,EAAI2W,EAAM+oB,KAAiC,GAApBsB,EAAgB,SAC1D6B,GAAgBwtB,GAAgBtwD,EAAK+E,EAAQuC,WAAYrH,EAAK+E,EAAQsC,aACtEqb,EAAKuc,aAAa,OAAQtoB,EAAM+L,MAChC2tC,EAAa/3B,YAAY83B,GACzB1tC,EAAK4V,YAAY+3B,GAGrBrvB,EAAQlL,gBAA6C,gBAA3BkL,EAAQlL,iBAClCkL,EAAQlL,eAAiB4K,GAAkBM,EAAQlL,iBASvD+M,GAAgBngB,GANZ9Z,GAAMo4B,EAAQp4B,GAAK,QAASoY,KAAQggB,EAAQvf,MAAO0Z,WAAc6F,EAAQ/J,QAAU,UAAY,SAC/Fs5B,kBAAmBvvB,EAAQlL,eAAgBtnB,UAAa,UAAYwyB,EAAQzgC,MAAQ,MACnE,MAAiB,cACZygC,EAAS,EAAI,IAAOA,EAAS,EAAI,IAAKvL,QAAWuL,EAAQvL,QAC/E+5B,aAAcD,GAAwB,OAMlDP,EAAY3kB,UAAUyiB,UAAY,SAAUpK,EAAQp/C,EAAKypD,EAAWC,GAChE,IACIH,EADKvpD,EAAIsF,GAETmkD,IACAF,EAAQE,EAAUxiC,eAAejnB,EAAIsF,GAAK,UAEzCikD,IACDA,EAAQviC,SAASsY,gBAAgB,6BAA8B,SAC/D8f,EAAOpqB,YAAYu0B,IAEvB,IAAIO,EAAW,IAAIxN,MACnBwN,EAAS57C,IAAMlO,EAAIgI,OACnB,IAAI8Y,EAAsB,SAAd9gB,EAAI8gB,MAAmB9gB,EAAI8gB,MAAQ,GAC3CosC,EAAWltD,EAAI0uB,UACfy+B,EAAcD,EAASE,OAAO,GAAG9wD,cAAgB4wD,EAAS3W,MAAM,GAChEz1B,IACAqsC,GAAe,IAAMrsC,EAAMssC,OAAO,GAAG9wD,cAAgBwkB,EAAMy1B,MAAM,IAQrEhX,GAAgBgqB,GALZjkD,GAAMtF,EAAIsF,GAAK,QAAS7I,EAAKuD,EAAIvD,EAAEsH,WAAYrH,EAAKsD,EAAItD,EAAEqH,WAAYmH,UAAa,UAAYlL,EAAI/C,MAAQ,KACpG+C,EAAIvD,EAAIuD,EAAIhC,MAAQgC,EAAI49B,QAAU,KAAO59B,EAAItD,EAAIsD,EAAIjC,OAASiC,EAAI69B,QAAU,IACnF7/B,MAASgC,EAAIhC,MAAM+F,WAAY8zB,WAAc73B,EAAI2zB,QAAU,UAAY,SACvE51B,OAAUiC,EAAIjC,OAAOgG,WAAYspD,oBAAuBF,EAAah7B,SAAYnyB,EAAImyB,SAAW,GAAGpuB,aAGvGwlD,EAAMzuB,eAAe,+BAAgC,aAAcgvB,EAAS57C,IAAInK,aAGpF2nD,EAAY3kB,UAAUumB,gBAAkB,SAAUjoD,EAAS+5C,EAAQl0C,EAAWF,GAC1E,IAAIkqB,EACJ,GAAIkqB,EAAQ,CACR,IAAIjjD,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAIijD,EAAO5jB,WAAWt/B,OAAQC,IAClCijD,EAAO5jB,WAAWr/B,GAAGmJ,KAAOD,EAAQC,GAAK,kBACzC4vB,EAAckqB,EAAO5jB,WAAWr/B,IAI5C,IAAK+4B,EAAa,EAKdA,EAAc5N,GAAkB,OAH5BhiB,GAAMD,EAAQC,GAAK,gBACnB8X,MAAS,oBAGD4X,YAAY3vB,EAAQ8nC,SAAS1M,WAAU,IACnD2e,EAAOpqB,YAAYE,GAEvB,IAAI9zB,EAAQ4F,GAA4B3B,GAAS2M,QACjDkjB,EAAYyG,aAAa,QAAS,UAAat2B,EAAQmO,WAAiB,OAAI,aAAgBnO,EAAQmO,WAAgB,MAChH,WAAapS,EAAM3E,EAAI,WAAa2E,EAAM1E,EAAI,0CACL2I,EAAQyM,YAAczM,EAAQ0M,iBAAmB,wBACrE/G,EAAQ,MAAQ,QACnC,gBAAmB3F,EAAe,QAAI,UAAY,UAAY,YAAcA,EAAQM,MAAMwsB,QAAU,MAG9Gu5B,EAAY3kB,UAAUwmB,kBAAoB,SAAUloD,EAAS+5C,EAAQrhD,EAAQC,EAAOyrD,GAChF,IAAI50B,EACA24B,EACA/D,IACA50B,EAAgB40B,EAAUxiC,eAAe5hB,EAAQC,GAAK,mBACtDkoD,EAAW/D,EAAUxiC,eAAe5hB,EAAQC,GAAK,UAEhDuvB,KACDA,EAAgB7N,SAASsY,gBAAgB,6BAA8B,MACzD3D,aAAa,KAAMt2B,EAAQC,GAAK,mBAC9CuvB,EAAcG,YAAY3vB,EAAQ8nC,SAAS1M,WAAU,IACrD2e,EAAOpqB,YAAYH,IAEnB24B,GACA34B,EAAcE,YAAYy4B,GAE9B34B,EAAc8G,aAAa,QAAS,eAC9Bt2B,EAAe,QAAI,UAAY,UAAY,YAAcA,EAAQM,MAAMwsB,QAAU,KACvF1sB,KAAKgoD,kBAAkBpoD,EAASwvB,EAAe92B,EAAQC,GACjC,UAAlBqH,EAAQyb,OACRrb,KAAKioD,aAAaroD,EAASwvB,EAAe92B,EAAQC,EAAOyrD,GAE7DlqB,GAAgB1K,EAAexvB,EAAQ24B,aAAgBkuB,aAAc7mD,EAAQ24B,kBAEjF0tB,EAAY3kB,UAAU0mB,kBAAoB,SAAUpoD,EAASwvB,EAAe92B,EAAQC,GAChF,IAAI2vD,EAA6C,IAA9BtoD,EAAQioC,YAAYtvC,MAAcqH,EAAQioC,YAAYtvC,MAAQ,EAC7E4vD,EAA+C,IAA/BvoD,EAAQioC,YAAYvvC,OAAesH,EAAQioC,YAAYvvC,OAAS,EAChFtB,EAAI4I,EAAQkoC,iBAAiB9wC,EAAIuB,EAAQ2vD,EACzCjxD,EAAI2I,EAAQkoC,iBAAiB7wC,EAAIqB,EAAS6vD,EAC9C/4B,EAAc8G,aAAa,YAAa,UAAYt2B,EAAQ0M,gBAAkB,IAAM1M,EAAQ7D,QAAU,IAAM6D,EAAQ5D,QAChH,gBAAkB4D,EAAQ7D,QAAU/E,EAAIuB,EAAQqH,EAAQ4xB,MAAMx6B,GAAK,KAAO4I,EAAQ5D,QAAU/E,EAAIqB,EAASsH,EAAQ4xB,MAAMv6B,GACvH,WAAcsB,EAAQ2vD,EAAgB,IAAO5vD,EAAS6vD,EAAiB,MAW/ElC,EAAY3kB,UAAU2mB,aAAe,SAAU1nD,EAAM6nD,EAAO9vD,EAAQC,EAAOyrD,GACvE,IAAIkE,EAAe3nD,EAAKsnC,YAAYtvC,MAChC4vD,EAAgB5nD,EAAKsnC,YAAYvvC,OAGjC+vD,GAFc9nD,EAAKwN,WAAWxV,MACfgI,EAAKwN,WAAWzV,OACnBiI,EAAKhI,OAASA,EAAQ2vD,IAClCI,EAAa/nD,EAAKjI,QAAUA,EAAS6vD,GACrCnxD,EAAIuJ,EAAKunC,iBAAiB9wC,GAAKuJ,EAAKhI,OAASgI,EAAKjI,OAAS,GAAK4vD,EAAeG,GAAa,GAC5FpxD,EAAIsJ,EAAKunC,iBAAiB7wC,GAAKsJ,EAAKjI,QAAUiI,EAAKhI,MAAQ,GAAK4vD,EAAgBG,GAAc,GAC9FP,EAAW/D,EAAUxiC,eAAejhB,EAAKV,GAAK,UAClDkoD,EAAWxmC,SAASsY,gBAAgB,6BAA8B,aACzD3D,aAAa,KAAM31B,EAAKV,GAAK,SACtCuoD,EAAM74B,YAAYw4B,GAClB,IAAI1rC,EAAO2nC,EAAUxiC,eAAejhB,EAAKV,GAAK,cAC9Cwc,EAAOkF,SAASsY,gBAAgB,6BAA8B,QAC9DkuB,EAASx4B,YAAYlT,GAOrB,OAFAyd,GAAgBzd,GAHZxc,GAAMU,EAAKV,GAAK,aAActH,MAAS8vD,EAAU/pD,WAAYhG,OAAUgwD,EAAWhqD,WAClFtH,EAAKA,EAAEsH,WAAYrH,EAAKA,EAAEqH,aAG9B8pD,EAAMlyB,aAAa,YAAa,QAAU31B,EAAKV,GAAK,UAC7CuoD,GAGXnC,EAAY3kB,UAAUwe,eAAiB,SAAU7nB,EAASgD,EAAKlH,GAC3D,IAAIvuB,EACAsB,EACAk5C,EACAqG,EAAe/sB,GAAsBvF,GACrCw0B,EAAOlC,EAAa7kC,eAAeuS,EAAY,oBAC9Cw0B,IACDA,EAAO3uB,GAAiB,QAAU/5B,GAAIk0B,EAAY,qBAClDsyB,EAAavkC,aAAaymC,EAAMlC,EAAatkC,aAEjD,IAAIo+B,EACAF,EAIJ,GAHA5vB,GAEe4K,EAAIp7B,IACW,SAA1Bo4B,EAAQxK,SAAS5xB,KAAiB,CAClC,IAAK,IAAInF,EAAI,EAAGA,EAAIuhC,EAAQxK,SAASF,MAAM92B,OAAQC,IAC/C8O,EAAOA,EAAyC/I,KAAK+I,IAAIA,EAAKyyB,EAAQxK,SAASF,MAAM72B,GAAGgZ,QAA3EuoB,EAAQxK,SAASF,MAAM72B,GAAGgZ,OACvC5I,EAAOA,EAAyCrK,KAAKqK,IAAIA,EAAKmxB,EAAQxK,SAASF,MAAM72B,GAAGgZ,QAA3EuoB,EAAQxK,SAASF,MAAM72B,GAAGgZ,OAEb,WAA1BuoB,EAAQxK,SAAS5xB,OACjBokD,EAAShoB,EAAQxK,UACV5tB,GAAKo7B,EAAIp7B,GAAK,UACrBmgD,EAAMhgD,KAAKkgD,qBAAqBD,GAChCsI,EAAKh5B,YAAYywB,MAGjBG,EAASloB,EAAQxK,UACV5tB,GAAKo7B,EAAIp7B,GAAK,UACrBmgD,EAAMhgD,KAAKogD,qBAAqBD,GAChCoI,EAAKh5B,YAAYywB,IAErB,IAAStpD,EAAI,EAAGA,EAAIuhC,EAAQxK,SAASF,MAAM92B,OAAQC,IAAK,CACpD,IAAI2pD,EAASpoB,EAAQxK,SAASF,MAAM72B,GAChC8xD,EAAW1hD,EAAM,GAAKtB,EAAM66C,EAAO3wC,SAAW,EAAIlK,GAAO66C,EAAO3wC,OAASlK,EACzEijD,EAAclnC,SAASsY,gBAAgB,6BAA8B,QACzEC,GAAgB2uB,GAAe/4C,OAAU84C,EAASlqD,WAAY4B,MAAS,cAAgBmgD,EAAO3nC,QAC9FsnC,EAAIzwB,YAAYk5B,IAGxB,OAAOzI,GAGXiG,EAAY3kB,UAAU4e,qBAAuB,SAAUD,GACnD,IAAIyI,EAAiBnnC,SAASsY,gBAAgB,6BAA8B,kBAK5E,OADAC,GAAgB4uB,GAFZ7oD,GAAMogD,EAAOpgD,GAAI3I,GAAM+oD,EAAO/oD,GAAK,IAAKC,GAAM8oD,EAAO9oD,GAAK,IAAKC,GAAM6oD,EAAO7oD,GAAK,IAAKC,GAAM4oD,EAAO5oD,GAAK,MAGrGqxD,GAGXzC,EAAY3kB,UAAU8e,qBAAuB,SAAUD,GACnD,IAAIwI,EAAiBpnC,SAASsY,gBAAgB,6BAA8B,kBAK5E,OADAC,GAAgB6uB,GAFZ9oD,GAAMsgD,EAAOtgD,GAAIstB,GAAMgzB,EAAOhzB,GAAK,IAAKC,GAAM+yB,EAAO/yB,GAAK,IAAKhgB,EAAK+yC,EAAO/yC,EAAI,IAAKigB,GAAM8yB,EAAO9yB,GAAK,IAAKC,GAAM6yB,EAAO7yB,GAAK,MAG1Hq7B,GAGX1C,EAAY3kB,UAAUolB,YAAc,SAAUzrB,EAAK/6B,EAAO6zB,GACnC,SAAf7zB,EAAM+X,OACN/X,EAAM+X,KAAO,eAEI,SAAjB/X,EAAMg4B,SACNh4B,EAAMg4B,OAAS,eAEnB,IACIjgB,EADAogB,KAEJ,QAAwBp+B,IAApBiG,EAAMm4B,UAAyB,CAE/BA,GADqB,IAAIsnB,IACE6B,eAAethD,EAAMm4B,WAEpD,GAAIn4B,EAAMutB,UAAoC,SAAxBvtB,EAAMutB,SAAS5xB,KAAiB,CAElDoc,EAAO,QADGjY,KAAK8/C,eAAe5/C,EAAO+6B,EAAKlH,GACrBl0B,GAAK,SAG1BoY,EAAO/X,EAAM+X,KAEb/X,EAAMg4B,QACN+C,EAAI/E,aAAa,SAAUh2B,EAAMg4B,aAEXj+B,IAAtBiG,EAAMiY,aAAmD,OAAtBjY,EAAMiY,aACzC8iB,EAAI/E,aAAa,eAAgBh2B,EAAMiY,YAAY7Z,YAEnD+5B,GACA4C,EAAI/E,aAAa,mBAAoBmC,EAAU/5B,YAE/C2Z,GACAgjB,EAAI/E,aAAa,OAAQje,IAMjCguC,EAAY3kB,UAAUimB,cAAgB,SAAU5tC,EAAMivC,EAAW7yB,GAC7D,IAAIv0B,EAAS,IAAIoc,GAAKgrC,EAAUrwD,MAAOw9B,EAAWt/B,QAA0B,IAAhBkjB,EAAKlB,WAC7DowC,GAAQ7xD,EAAG,EAAGC,EAAG,GAKjB6xD,EAFuB,GAAbnvC,EAAKphB,MAGfwwD,EAFwB,GAAdpvC,EAAKrhB,OAmBnB,MAhBuB,SAAnBqhB,EAAKkT,UACLi8B,EAAS,EAEe,WAAnBnvC,EAAKkT,UAENi8B,EADAF,EAAUrwD,MAAQohB,EAAKphB,QAAgC,aAAtBohB,EAAK8S,cAAqD,SAAtB9S,EAAK8S,cACjE,EAGa,GAAb9S,EAAKphB,MAGM,UAAnBohB,EAAKkT,YACVi8B,EAAuB,EAAbnvC,EAAKphB,OAEnBswD,EAAI7xD,EApBI,EAoBI8xD,GAAUF,EAAYA,EAAU5xD,EAAI,GAChD6xD,EAAI5xD,EApBI,IAoBI8xD,EAASvnD,EAAOlJ,OAAS,EAC9BuwD,GAEJ5C,KC1jBP+C,GAAiC,WACjC,SAASA,EAAgBzwC,EAAM0wC,EAAWC,GAEtClpD,KAAKmpD,SAAW,KAEhBnpD,KAAKkpD,WAAY,EACjBlpD,KAAKyF,WAAczO,EAAG,EAAGC,EAAG,GAC5B+I,KAAK+zB,UAAYxb,EACjBvY,KAAKJ,QAAUyvB,GAAkBrvB,KAAK+zB,WACtC/zB,KAAKopD,YAAcH,EACnBjpD,KAAKkpD,UAAYA,EACjBlpD,KAAKmpD,SAAWD,EAAY,IAAIjD,GAAgB,IAAItG,GAsgCxD,OAngCAqJ,EAAgB1nB,UAAU+nB,UAAY,SAAU1P,EAAQpZ,GACpDoZ,EAAOz5C,MAAMqgC,OAASA,GAG1ByoB,EAAgB1nB,UAAUgoB,UAAY,WAClCtpD,KAAKupD,aAAevpD,KAAKJ,QAAQm5B,uBAAuB,wBAAwB,GAChF/4B,KAAKwpD,gBAAkBxpD,KAAKJ,QAAQm5B,uBAAuB,mBAAmB,GAC9E/4B,KAAKypD,eAAiBzpD,KAAKJ,QAAQm5B,uBAAuB,kBAAkB,GAC5E/4B,KAAK0pD,gBAAkB1pD,KAAKJ,QAAQm5B,uBAAuB,mBAAmB,IAElFiwB,EAAgB1nB,UAAUnI,gBAAkB,WAExC,OADmBA,GAAgBn5B,KAAK+zB,YAG5Ci1B,EAAgB1nB,UAAUqoB,aAAe,SAAU/pD,EAASgqD,EAAejQ,GACvE,OAAI35C,KAAK+zB,WAAan0B,GAAWA,EAAQC,GACjCD,EAAQC,GAAGyO,MAAM,iBAAiB7X,OAAS,GAAKmJ,EAAQC,GAAGyO,MAAM,aAAa7X,OAAS,EAChFuJ,KAAKupD,aAEZK,GAAmC,aAAlBA,EACV5pD,KAAKwpD,gBAEP5pD,aAAmBmvB,GACjB/uB,KAAKypD,eAGLzpD,KAAK0pD,gBAGb/P,GAEXqP,EAAgB1nB,UAAUuoB,iBAAmB,SAAUjqD,EAASkqD,EAAeC,EAAYzpC,GACvF,IAAI0pC,EAAgBF,EACpB,GAAIC,GAAc/pD,KAAK+zB,WAAan0B,GAAWA,EAAQC,GAAI,CACnDD,EAAQC,GAAGyO,MAAM,iBAAiB7X,OAAS,GAC3CuzD,EAAgBD,EAAWvoC,eAAexhB,KAAK+zB,UAAY,oBAC3D+1B,EAAgB,MAEXlqD,EAAQC,GAAGyO,MAAM,aAAa7X,OAAS,EAC5CuzD,EAAgBD,EAAWvoC,eAAexhB,KAAK+zB,UAAY,iBAEtDn0B,aAAmBmvB,IACxBi7B,EAAgBD,EAAWvoC,eAAexhB,KAAK+zB,UAAY,gBAC3D+1B,EAAgB,MAGhBE,EAAgBD,EAAWvoC,eAAexhB,KAAK+zB,UAAY,iBAE/D,IAAIk2B,EAAejqD,KAAKkqD,gBAAgBtqD,EAASkqD,GAAiBE,EAAe1pC,GACjF0pC,EAAgBC,EAAarM,EACzBqM,EAAahvB,MACb8uB,EAAaE,EAAahvB,KAGlC,OAAS2iB,EAAGoM,EAAe/uB,IAAK8uB,IAEpCf,EAAgB1nB,UAAU4oB,gBAAkB,SAAUtqD,EAAS+5C,EAAQr5B,GACnE,IAAIsmC,EAEAmD,EADA/F,EAAYhkD,KAAK2pD,aAAa/pD,GAElC,GAAI+5C,GAAUqK,EAAW,CACrB,GAAIA,KACA4C,EAAW5C,EAAUxiC,eAAe5hB,EAAQC,GAAK,mBAChCmkD,IAAchkD,KAAKypD,eAAgB,CAChD,IAAIU,EAAYnqD,KAAKypD,eACrB7C,EAAWuD,EAAU3oC,eAAe5hB,EAAQC,GAAK,iBACjDkqD,EAAaI,EAGhBvD,IACDA,EAAW5mD,KAAKopD,YAAYvC,eAAe,KAAOhnD,GAAID,EAAQC,GAAK,uBAChD5F,IAAfqmB,GAA4Bq5B,EAAO5jB,WAAWt/B,OAAS6pB,EACvDq5B,EAAO73B,aAAa8kC,EAAUjN,EAAO5jB,WAAWzV,IAGhDq5B,EAAOpqB,YAAYq3B,IAI/B,OAAShJ,EAAGgJ,EAAU3rB,IAAK8uB,IAG/Bf,EAAgB1nB,UAAU8oB,cAAgB,SAAUxqD,EAAS+5C,EAAQr0B,EAAW7f,EAAWu+C,EAAWqG,EAAcpG,EAAa3jC,GACzH1gB,aAAmBszB,GACnBlzB,KAAKsqD,gBAAgB1qD,EAAS+5C,EAAQr0B,EAAW7f,EAAWu+C,EAAWqG,EAAcpG,EAAa3jC,GAE7F1gB,aAAmB6uB,GACxBzuB,KAAKuqD,mBAAmB3qD,EAAS+5C,EAAQl0C,EAAWu+C,EAAWC,GAE1DrkD,aAAmByO,GACxBrO,KAAKwqD,kBAAkB5qD,EAAS+5C,EAAQl0C,EAAWu+C,EAAWC,GAEzDrkD,aAAmB8tB,GACxB1tB,KAAKyqD,kBAAkB7qD,EAAS+5C,EAAQl0C,EAAWu+C,EAAWC,GAEzDrkD,aAAmBmvB,GACxB/uB,KAAK0qD,oBAAoB9qD,EAAS+5C,EAAQl0C,EAAWu+C,EAAWC,GAE3DrkD,aAAmBqvB,GACxBjvB,KAAK2qD,kBAAkB/qD,EAAS+5C,EAAQr0B,EAAW7f,EAAWu+C,EAAWC,GAGzEjkD,KAAK4qD,WAAWhrD,EAAS+5C,EAAQl0C,EAAWu+C,IAIpDgF,EAAgB1nB,UAAUupB,uBAAyB,SAAU7zD,EAAGC,EAAGy9B,EAAGC,EAAGglB,EAAQ/mC,GAC7E5b,GAAKA,EAAI4b,EAAE2/B,IAAM3/B,EAAEyI,MACnBpkB,GAAKA,EAAI2b,EAAE4/B,IAAM5/B,EAAEyI,MACnB,IAAI4c,GACA1/B,MAAOm8B,EAAI9hB,EAAEyI,MAAO/iB,OAAQq8B,EAAI/hB,EAAEyI,MAClCrkB,EAAGA,EAAI,GAAKC,EAAGA,EAAI,GAAKghB,KAAM,cAAeigB,OAAQ,OAAQ1gC,MAAO,EACpE2gC,OAAQ,GAAKC,OAAQ,GAAKjgB,YAAa,EACvCkgB,UAAW,MAAO3L,QAAS,EAC3BwB,SAAS,EAAMruB,GAAI85C,EAAO95C,GAAK,oBAE/BirD,EAAe9qD,KAAKm5B,kBACxBn5B,KAAKopD,YAAYzC,sBAAsBmE,EAAc7yB,IAKzD+wB,EAAgB1nB,UAAUypB,kBAAoB,SAAUnrD,EAAS+5C,EAAQl0C,GACrE,IAAIlN,EAAQqH,EAAQmO,WAAWxV,OAAS,EACpCD,EAASsH,EAAQmO,WAAWzV,QAAU,EACtCtB,EAAI4I,EAAQ7D,QAAUxD,EAAQqH,EAAQ4xB,MAAMx6B,EAC5CC,EAAI2I,EAAQ5D,QAAU1D,EAASsH,EAAQ4xB,MAAMv6B,EACjDD,GAAKA,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MACnCpkB,GAAKA,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,MACnC,IAAI4c,GACA1/B,MAAOA,EAAQkN,EAAU4V,MAAO/iB,OAAQA,EAASmN,EAAU4V,MAC3DrkB,EAAGA,EAAGC,EAAGA,EAAGghB,KAAM,cAAeigB,OAAQ,UAAW1gC,MAAOoI,EAAQyM,YACnE8rB,OAAQv4B,EAAQ4xB,MAAMx6B,EAAGohC,OAAQx4B,EAAQ4xB,MAAMv6B,EAAGkhB,YAAa,EAC/DkgB,UAAW,GAAI3L,QAAS,EAAGr0B,aAAc,EACzC61B,SAAS,EAAMruB,GAAI85C,EAAO95C,GAAK,eAAgB8X,MAAO,yBAE1D3X,KAAKopD,YAAYpH,cAAcrI,EAAQ1hB,EAASj4B,KAAK+zB,YAKzDi1B,EAAgB1nB,UAAUljB,uBAAyB,SAAUxe,EAAS+5C,EAAQl0C,EAAW4Y,EAAYhe,EAAUie,GAC3G,IAAI/lB,EAAQqH,EAAQmO,WAAWxV,OAAS,EACpCvB,EAAI4I,EAAQ7D,QAAUxD,EAAQqH,EAAQ4xB,MAAMx6B,EAC5CsB,EAASsH,EAAQmO,WAAWzV,QAAU,EACtCrB,EAAI2I,EAAQ5D,QAAU1D,EAASsH,EAAQ4xB,MAAMv6B,EACjDD,GAAKA,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MACnC,IAAIjlB,EACAoL,EAAS5B,EAAQ4B,OACjB+zB,EAAgB,GAEpB,GADAt+B,GAAKA,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,MAC9BgD,EASD,GAAIC,EAAO,CAEPloB,EAAO,aADHswB,EAAInuB,EAAQkN,EAAU4V,OACD,GAAK,OAC9B,IAAI3d,GAAU8D,EAAOxK,EACjB2G,GAAU6D,EAAOvK,EAErByG,EAASkC,EAAQmO,WAAWxV,MAAQJ,OAAOqJ,EAAOjJ,MAAQiJ,EAAOjJ,MAAQ,GAAKkN,EAAU4V,MACxF1d,EAASiC,EAAQmO,WAAWzV,OAASH,OAAOqJ,EAAOlJ,OAASkJ,EAAOlJ,OAAS,GAAKmN,EAAU4V,MAO3Fka,EAAgB/7B,EADEqB,EADA1E,EAJJ,0VAMiCuH,EAASgpB,EAAI,EAAG/oB,EAAS,GAAG,EAAO6D,EAAOxK,EAAGwK,EAAOvK,EAAG,EAAG,GACrGoJ,EAASpJ,GAAK2I,EAAQ5D,UACtB/E,GAAKqB,OAGR,CAEDlC,EAAO,+CADHswB,EAAInuB,EAAQkN,EAAU4V,OACmC,YAAkB,SAC1EqL,EAAI,IAAM,YAAcA,EAAI,IAAM,aA/B9B,CACb,IAAIA,EACJtwB,EAAO,iDADHswB,EAAIpuB,EAASmN,EAAU4V,OACoC,aAC3D,YAAcqL,EAAI,IAAM,aAAeA,EAAI,IAAM,KACjDrmB,EAASrJ,GAAK4I,EAAQ7D,UACtB/E,GAAKuB,GA6Bb,IAAI0/B,GACA7hC,KAAMA,EAAOm/B,EACbh9B,MAAOA,EAAQkN,EAAU4V,MAAO/iB,OAAQA,EAASmN,EAAU4V,MAC3DrkB,EAAGA,EAAGC,EAAGA,EAAGghB,KAAM,cAAeigB,OAAQ,UAAW1gC,MAAOoI,EAAQyM,YACnE8rB,OAAQv4B,EAAQ4xB,MAAMx6B,EAAGohC,OAAQx4B,EAAQ4xB,MAAMv6B,EAAGkhB,YAAa,EAC/DkgB,UAAW,GAAI3L,QAAS,EACxBwB,SAAS,EAAMruB,GAAI85C,EAAO95C,GAAK,qBAAsB8X,MAAO,yBAEhE3X,KAAKopD,YAAYnH,SAAStI,EAAQ1hB,EAASj4B,KAAK+zB,YAGpDi1B,EAAgB1nB,UAAUwlB,SAAW,SAAUnN,EAAQ1hB,GACnDj4B,KAAKopD,YAAYtC,SAASnN,EAAQ1hB,IAGtC+wB,EAAgB1nB,UAAU2gB,SAAW,SAAUtI,EAAQ1hB,GACnDj4B,KAAKopD,YAAYnH,SAAStI,EAAQ1hB,EAASj4B,KAAK+zB,YAGpDi1B,EAAgB1nB,UAAU0pB,mBAAqB,SAAUprD,EAAS+5C,EAAQ1mC,EAAayQ,EAAamO,EAAqBpsB,EAAWwlD,EAASC,EAAYC,GACrJ,IAAIvoD,EAAOhD,EAAQ7D,QAAU6D,EAAQmO,WAAWxV,MAAQqH,EAAQ4xB,MAAMx6B,EAClE+L,EAAMnD,EAAQ5D,QAAU4D,EAAQmO,WAAWzV,OAASsH,EAAQ4xB,MAAMv6B,EAClEqB,EAASsH,EAAQmO,WAAWzV,OAC5BC,EAAQqH,EAAQmO,WAAWxV,MAC3B0a,EAAc+e,oBAAkB7d,SAChCnU,KAAKorD,gBAAgBxrD,EAAS+5C,EAAQl0C,EAAWosB,EAAqBo5B,GACtEjrD,KAAKqrD,kBAAkBzrD,EAAS+5C,EAAQl0C,EAAWosB,EAAqBo5B,IAE5EjrD,KAAKsrD,aAAa1rD,EAAS+5C,EAAQl0C,EAAWylD,EAAYC,GAC1D,IAAII,EAAY3rD,EAAQmO,WAAWxV,MAAQmrB,EACvC8nC,EAAa5rD,EAAQmO,WAAWzV,OAASorB,EACxCynC,IACGI,GAAa,IAAMC,GAAc,KAE7B35B,EAAsBE,sBAAoBvc,iBAC1CxV,KAAKyrD,qBAAqB,kBAAmB7rD,EAASgD,EAAMG,EAAK42C,EAAQ1nB,GAAcJ,EAAqB,mBAAoB5e,EAAc+e,oBAAkBxc,gBAAiB/P,OAAWxL,EAAWgxD,GAAWxE,aAAc,uEAAoExsD,EAAW,uCAE/S43B,EAAsBE,sBAAoB5c,iBAC1CnV,KAAKyrD,qBAAqB,kBAAmB7rD,EAASgD,EAAOrK,EAAOwK,EAAK42C,EAAQ1nB,GAAcJ,EAAqB,mBAAoB5e,EAAc+e,oBAAkB7c,gBAAiB1P,OAAWxL,EAAWgxD,GAAWxE,aAAc,wEAAqExsD,EAAW,uCAExT43B,EAAsBE,sBAAoBzc,iBAC1CtV,KAAKyrD,qBAAqB,kBAAmB7rD,EAASgD,EAAMG,EAAMzK,EAAQqhD,EAAQ1nB,GAAcJ,EAAqB,mBAAoB5e,EAAc+e,oBAAkB1c,gBAAiB7P,OAAWxL,EAAWgxD,GAAWxE,aAAc,0EAAuExsD,EAAW,uCAE3T43B,EAAsBE,sBAAoB9c,iBAC1CjV,KAAKyrD,qBAAqB,kBAAmB7rD,EAASgD,EAAOrK,EAAOwK,EAAMzK,EAAQqhD,EAAQ1nB,GAAcJ,EAAqB,mBAAoB5e,EAAc+e,oBAAkB/c,gBAAiBxP,OAAWxL,EAAWgxD,GAAWxE,aAAc,2EAAwExsD,EAAW,wCAGxU43B,EAAsBE,sBAAoB1c,aAC1CrV,KAAKyrD,qBAAqB,cAAe7rD,EAASgD,EAAOrK,EAAQ,EAAGwK,EAAK42C,EAAQ1nB,GAAcJ,EAAqB,eAAgB5e,EAAc+e,oBAAkB3c,YAAa5P,OAAWxL,EAAWgxD,GAAWxE,aAAc,kEAA+DxsD,EAAW,mCAE1S43B,EAAsBE,sBAAoB3c,aAC1CpV,KAAKyrD,qBAAqB,cAAe7rD,EAASgD,EAAOrK,EAAQ,EAAGwK,EAAMzK,EAAQqhD,EAAQ1nB,GAAcJ,EAAqB,eAAgB5e,EAAc+e,oBAAkB5c,YAAa3P,OAAWxL,EAAWgxD,GAAWxE,aAAc,qEAAkExsD,EAAW,mCAEtT43B,EAAsBE,sBAAoBxc,YAC1CvV,KAAKyrD,qBAAqB,aAAc7rD,EAASgD,EAAMG,EAAMzK,EAAS,EAAGqhD,EAAQ1nB,GAAcJ,EAAqB,cAAe5e,EAAc+e,oBAAkBzc,WAAY9P,OAAWxL,EAAWgxD,GAAWxE,aAAc,mEAAgExsD,EAAW,kCAEzS43B,EAAsBE,sBAAoB7c,YAC1ClV,KAAKyrD,qBAAqB,aAAc7rD,EAASgD,EAAOrK,EAAOwK,EAAMzK,EAAS,EAAGqhD,EAAQ1nB,GAAcJ,EAAqB,cAAe5e,EAAc+e,oBAAkB9c,WAAYzP,OAAWxL,EAAWgxD,GAAWxE,aAAc,oEAAiExsD,EAAW,oCAK9T+uD,EAAgB1nB,UAAUoqB,qBAAuB,SAAUzxB,EAAU0f,EAAQ1mC,EAAa4e,EAAqBpsB,EAAWkmD,EAAiBC,EAAiBC,GACxJ,IAGIn1D,EACA4D,EAJAyG,EAAck5B,EAASl5B,YACvB8J,EAAcovB,EAASpvB,YACvBiD,EAAUmsB,EAASnsB,QAKvB,GAFA9N,KAAKyrD,qBAAqB,uBAAwB39C,EAAS/M,EAAY/J,EAAG+J,EAAY9J,EAAG0iD,EAAQ1nB,GAAcJ,EAAqB,wBAAyB5e,EAAc+e,oBAAkB85B,gBAAiBrmD,EAAWkmD,OAAiB1xD,GAAawsD,aAAc,wDAAqDxsD,EAAW,yCACrU+F,KAAKyrD,qBAAqB,uBAAwB39C,EAASjD,EAAY7T,EAAG6T,EAAY5T,EAAG0iD,EAAQ1nB,GAAcJ,EAAqB,wBAAyB5e,EAAc+e,oBAAkB+5B,gBAAiBtmD,EAAWmmD,OAAiB3xD,GAAawsD,aAAc,wDAAqDxsD,EAAW,yCACjU4xD,EACA,IAAuB,aAAlB5xB,EAASp+B,MAAyC,WAAlBo+B,EAASp+B,OAAsBo+B,EAAS9gC,SAAS1C,OAAS,EAC3F,IAAKC,EAAI,EAAGA,EAAIujC,EAAS9gC,SAAS1C,OAAS,EAAGC,IAC1C4D,EAAU2/B,EAAS9gC,SAASzC,GAC5BsJ,KAAKyrD,qBAAsB,kBAAoB/0D,EAAI,GAAKoX,EAASxT,EAAQqB,MAAM3E,EAAGsD,EAAQqB,MAAM1E,EAAG0iD,GAAQ,EAAM1mC,EAAc+e,oBAAkB85B,gBAAiBrmD,EAAWkmD,EAAiB,KAAM,KAAMj1D,QAI9M,IAAKA,EAAI,EAAGA,EAAIujC,EAAS9gC,SAAS1C,OAAQC,IAAK,CAC3C,IAAIqC,EAAMkhC,EAAS9gC,SAASzC,GAC5BsJ,KAAKgsD,uBAAuB,eAAiBt1D,EAAI,GAAIoX,EAAS/U,EAAK4gD,EAAQ1nB,GAAcJ,EAAqB,wBAAyBpsB,GAInJ,GAAsB,WAAlBw0B,EAASp+B,KACT,IAAKnF,EAAI,EAAGA,EAAIujC,EAAS9gC,SAAS1C,OAAQC,IAAK,CAC3C,IAAIu1D,EAAYhyB,EAAS9gC,SAASzC,GAC9Bw1D,EAAe/mD,GAAMC,aAAa6mD,EAAU/7C,QAC1C+7C,EAAUrmC,aAD0CqmC,EAAU/7C,OAEpElQ,KAAKyrD,qBAAqB,gBAAkB/0D,EAAI,GAAK,KAAMoX,EAASo+C,EAAYl1D,EAAGk1D,EAAYj1D,EAAG0iD,EAAQ1nB,GAAcJ,EAAqB,wBAAyB5e,EAAc+e,oBAAkB85B,gBAAiBrmD,OAAWxL,OAAWA,GAAawsD,aAAc,wDAAqDxsD,EAAW,oCACpUg4B,GAAcJ,EAAqB,yBACnC7xB,KAAKmsD,iBAAiB,eAAiBz1D,EAAI,GAAK,KAAMoX,EAAS6rC,EAAQsS,EAAUtzD,OAAO,GAAKwM,GAAMC,aAAa6mD,EAAU/7C,QAA6B+7C,EAAUrmC,aAA7BqmC,EAAU/7C,OAAiCzK,GAEnLymD,EAAe/mD,GAAMC,aAAa6mD,EAAUzzD,QAA6ByzD,EAAUpmC,aAA7BomC,EAAUzzD,OAChEwH,KAAKyrD,qBAAqB,gBAAkB/0D,EAAI,GAAK,KAAMoX,EAASo+C,EAAYl1D,EAAGk1D,EAAYj1D,EAAG0iD,EAAQ1nB,GAAcJ,EAAqB,wBAAyB5e,EAAc+e,oBAAkB+5B,gBAAiBtmD,OAAWxL,OAAWA,GAAawsD,aAAc,wDAAqDxsD,EAAW,oCACpUg4B,GAAcJ,EAAqB,yBACnC7xB,KAAKmsD,iBAAiB,eAAiBz1D,EAAI,GAAK,KAAMoX,EAAS6rC,EAAQsS,EAAUtzD,OAAO,GAAKwM,GAAMC,aAAa6mD,EAAUzzD,QAA6ByzD,EAAUpmC,aAA7BomC,EAAUzzD,OAAiCiN,KAM/LujD,EAAgB1nB,UAAU0qB,uBAAyB,SAAUnsD,EAAIo6B,EAAU3/B,EAASq/C,EAAQvnB,EAAYxf,GACpG,IAAI9B,EACAod,EACAz3B,EACAJ,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAIiE,EAAQ3B,OAAOlC,OAAS,EAAGJ,IACvCI,EAAS0O,GAAM4G,eAAezR,EAAQ3B,OAAOtC,GAAIiE,EAAQ3B,OAAOtC,EAAI,IACpEya,EAAexW,EAAQ3B,OAAOtC,GAAGY,EAAEkD,QAAQ,KAAOG,EAAQ3B,OAAOtC,EAAI,GAAGY,EAAEkD,QAAQ,GAAM,aAAe,WACvG+zB,EAAWz3B,GAAU,GACrBuJ,KAAKosD,sBAAuBvsD,EAAK,KAAOxJ,EAAI,GAAK4jC,GAAa3/B,EAAQ3B,OAAOtC,GAAGW,EAAIsD,EAAQ3B,OAAOtC,EAAI,GAAGW,GAAK,GAAQsD,EAAQ3B,OAAOtC,GAAGY,EAAIqD,EAAQ3B,OAAOtC,EAAI,GAAGY,GAAK,EAAK0iD,EAAQzrB,EAASpd,EAAa8B,IAInNo2C,EAAgB1nB,UAAU8qB,sBAAwB,SAAUvsD,EAAIo6B,EAAUjjC,EAAGC,EAAG0iD,EAAQzrB,EAASpd,EAAa8B,GAC1G,IAAIla,EACAi8B,EACAquB,EACgB,eAAhBlyC,GACApY,EAAO,4BACPi8B,GAAK,GACLquB,GAAK,IAGLtqD,EAAO,4BACPi8B,GAAK,EACLquB,GAAK,IAET,IAAI/qB,GACAjhC,GAAKA,EAAI4b,EAAE2/B,IAAM3/B,EAAEyI,MAASsZ,EAAG19B,GAAKA,EAAI2b,EAAE4/B,IAAM5/B,EAAEyI,MAAS2nC,EAAGxrD,MAAO,EACrEygB,KAAM,UAAWigB,OAAQ,QAAS/f,YAAa,EAAGkgB,UAAW,GAAIjiC,KAAMsC,EACvEH,MAAO,GAAID,OAAQ,GAAI6/B,OAAQ,EAAGC,OAAQ,EAAG1L,QAAS,EAAGwB,QAASA,EAASruB,GAAIA,GAEnFG,KAAKopD,YAAYnH,SAAStI,EAAQ1hB,EAASj4B,KAAK+zB,YAGpDi1B,EAAgB1nB,UAAU8pB,gBAAkB,SAAUxrD,EAAS+5C,EAAQl0C,EAAWosB,EAAqBo5B,GACnG,IAAIn9C,EAAUlO,EAEVsuB,KAAW2D,EAAsBE,sBAAoB5d,QACrD82C,IACA/8B,GAAU,GAEd,IAAI+J,EAAUj4B,KAAKqsD,kBAAkBv+C,EAASrI,GAC9CwyB,EAAQhgB,KAAO,OACfggB,EAAQC,OAAS,QACjBD,EAAQ9f,YAAc,EACtB8f,EAAQI,UATQ,MAUhBJ,EAAQ/J,QAAUA,EAClB,IAAI7S,EAAQ5V,EAAU4V,MACtB4c,EAAQjhC,GAAKqkB,EACb4c,EAAQhhC,GAAKokB,EACb4c,EAAQ1/B,OAAS8iB,EACjB4c,EAAQ3/B,QAAU+iB,EAClB4c,EAAQp4B,GAAK,YACbo4B,EAAQtgB,MAAQ,uBAChB,IAAItF,GAAerb,EAAG8W,EAAQC,WAAWxV,MAAQuV,EAAQ0jB,MAAMx6B,EAAIqkB,EAAOpkB,GAAI,IAC1EsU,GAAavU,EAAG8W,EAAQC,WAAWxV,MAAQuV,EAAQ0jB,MAAMx6B,EAAIqkB,EAAOpkB,EAAG,GAC3EghC,EAAQ5lB,WAAaA,EACrB4lB,EAAQ1sB,SAAWA,EACnBvL,KAAKopD,YAAYtC,SAASnN,EAAQ1hB,IAGtC+wB,EAAgB1nB,UAAU6qB,iBAAmB,SAAUtsD,EAAIiO,EAAS6rC,EAAQ50B,EAAOC,EAAKvf,GACpF,IACIwyB,EAAUj4B,KAAKqsD,kBAAkBv+C,EAASrI,GAC9CwyB,EAAQp4B,GAAKA,EACbo4B,EAAQC,OAAS,QACjBD,EAAQ9f,YAAc,EACtB8f,EAAQI,UALQ,MAMhBJ,EAAQhgB,KAAO,OACfggB,EAAQtgB,MAAQ,wBAChBsgB,EAAQjhC,EAAI,EACZihC,EAAQhhC,EAAI,EACZ,IAAIokB,EAAQ5V,EAAU4V,MAKlBhJ,GAAerb,GAJT+tB,EAAM/tB,EAAIyO,EAAU8sC,IAAMl3B,EAIVpkB,GAHhB8tB,EAAM9tB,EAAIwO,EAAU+sC,IAAMn3B,GAIhC9P,GAAavU,GAHPguB,EAAIhuB,EAAIyO,EAAU8sC,IAAMl3B,EAGVpkB,GAFd+tB,EAAI/tB,EAAIwO,EAAU+sC,IAAMn3B,GAGlC4c,EAAQ5lB,WAAaA,EACrB4lB,EAAQ1sB,SAAWA,EACnBvL,KAAKopD,YAAYtC,SAASnN,EAAQ1hB,IAGtC+wB,EAAgB1nB,UAAUmqB,qBAAuB,SAAU5rD,EAAIo6B,EAAU9M,EAAIC,EAAIusB,EAAQzrB,EAAS84B,EAAgBp0C,EAAG05C,EAAWrB,EAASzE,EAAW9qB,EAAOvB,GACvJ,IAAIrsB,EAAUmsB,EACVktB,EAAS,EACTpgB,GAAa/vC,EAAGm2B,EAAIl2B,EAAGm2B,GAC3B,GAA4B,IAAxBtf,EAAQzB,aAAiD,IAA5ByB,EAAQxB,gBAAuB,CAC5D,IAAI5Q,EAASL,IACb0B,EAAarB,EAAQoS,EAAQzB,YAAcyB,EAAQxB,gBAAiBwB,EAAQ/R,QAAS+R,EAAQ9R,SAC7F+qC,EAAWtrC,EAAuBC,EAAQqrC,GAE9C,IAAI9O,EAAUj4B,KAAKqsD,kBAAkBv+C,GACrCmqB,EAAQC,OAAS,QACjBD,EAAQ9f,YAAc,OACRle,IAAVyhC,GACAyrB,EAAS,EACTlvB,EAAQp4B,GAAK,cAAgB67B,EAC7BzD,EAAQhgB,KAAO,YAGfkvC,EAAS,EACTlvB,EAAQhgB,KAAOq0C,EAAY,UAAY,SAE3Cr0B,EAAQj7B,SAAW+pC,EAAS/vC,EAAI4b,EAAE2/B,IAAM3/B,EAAEyI,MAC1C4c,EAAQh7B,SAAW8pC,EAAS9vC,EAAI2b,EAAE4/B,IAAM5/B,EAAEyI,MAC1C4c,EAAQkvB,OAASA,EACjBlvB,EAAQzgC,MAAQ,EAChBygC,EAAQp4B,GAAKA,EACbo4B,EAAQ/J,QAAUA,EAClB+J,EAAQtgB,MAAQwiB,EACZmyB,IACAr0B,EAAQtgB,OAAS,gBAEjBszC,IACAhzB,EAAQ/J,SAAU,GAEtBluB,KAAKopD,YAAYrC,WAAWpN,EAAQ1hB,EAAS+uB,EAAgBR,IAGjEwC,EAAgB1nB,UAAUgqB,aAAe,SAAUrxB,EAAU0f,EAAQl0C,EAAWylD,EAAYqB,GACxF,IAAIz+C,EAAUmsB,EACVhC,EAAUj4B,KAAKqsD,kBAAkBv+C,EAASrI,GAC9CwyB,EAAQjhC,GAAKyO,EAAU4V,MACvB4c,EAAQhhC,GAAKwO,EAAU4V,MACvB4c,EAAQ1/B,OAASkN,EAAU4V,MAC3B4c,EAAQ3/B,QAAUmN,EAAU4V,MAC5B4c,EAAQhgB,KAAO,cACfggB,EAAQC,OAAS,UACjBD,EAAQ9f,YAAc,GACtB8f,EAAQI,UAAY,MACpBJ,EAAQtgB,MAAQ,mBAChBsgB,EAAQp4B,GAAK,aACRqrD,IACDjzB,EAAQtgB,OAAS,eAEjB40C,IACAt0B,EAAQtgB,OAAS,mBAErBsgB,EAAQ5/B,aAAe,EACvB,IAAI2rD,EAAYhkD,KAAK2pD,aAAa1vB,EAAU,YAC5Cj6B,KAAKopD,YAAYpH,cAAcrI,EAAQ1hB,EAASj4B,KAAK+zB,eAAW95B,GAAW,EAAM+pD,IAGrFgF,EAAgB1nB,UAAUkrB,kBAAoB,SAAUn7B,EAAcsoB,EAAQl0C,GAE1E,IAAK,IADDqI,EAAUujB,EAAavjB,QAClBjR,EAAK,EAAG6f,EAAK2U,EAAamN,YAAa3hC,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAClE,IAAItC,EAAMmiB,EAAG7f,GAETkqC,GADU,IAAI14B,QACH,GACXjY,EAAOmE,EAAIoE,UACfooC,EAAW3V,GAAsBC,EAAc92B,EAAKkL,IAC3CzO,GAAK+vC,EAAS/vC,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MACrD0rB,EAAS9vC,GAAK8vC,EAAS9vC,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,MACjD9gB,EAAI2zB,UACJ3zB,EAAI2zB,WAAWmD,EAAape,YAAc8e,sBAAoB6gB,aAElE,IAAI6Z,EAASzsD,KAAKqsD,kBAAkBv+C,GACpC2+C,EAAO5sD,GAAKtF,EAAIge,KAAO,cACvBk0C,EAAOx0C,KAAO1d,EAAImxB,gBAClB+gC,EAAOv0B,OAAS39B,EAAI8f,YACpBoyC,EAAOt0C,YAAc5d,EAAIq/C,YACzB6S,EAAOzvD,QAAU+pC,EAAS/vC,EAC1By1D,EAAOxvD,QAAU8pC,EAAS9vC,EAC1Bw1D,EAAOtF,OAAoB,GAAX5sD,EAAIg3B,KACpBk7B,EAAO90C,MAAQ,8BACf80C,EAAOj1D,MAAQ,EACfi1D,EAAOv+B,QAAU3zB,EAAI2zB,QACrBu+B,EAAO//B,QAAU,EACjB1sB,KAAKopD,YAAYrC,WAAWpN,EAAQ8S,EAAQ,GAAKhG,aAAclsD,EAAIge,KAAO,gBAC1E,IACIhiB,KAEJA,EAAkBsE,EADlBtE,EAAkBJ,EAAgBC,IAElC,IAAIs2D,EAAWz2B,GAAY7/B,GAIvBu2D,EAAUnzD,EAAcjD,GAFdgE,EAAIg3B,KAAO,IAAOh3B,EAAIg3B,MAAQm7B,EAASn0D,OACvCgC,EAAIg3B,KAAO,IAAOh3B,EAAIg3B,MAAQm7B,EAASp0D,QACQ,EAAMo0D,EAAS11D,EAAG01D,EAASz1D,EAAG,EAAG,GAC9Fy1D,EAAWz2B,GAAY02B,GACvB,IAAI10B,GACAjhC,EAAG+vC,EAAS/vC,EAAI01D,EAASn0D,MAAQ,EACjCtB,EAAG8vC,EAAS9vC,EAAIy1D,EAASp0D,OAAS,EAClCd,MAAO,EAAGqI,GAAI,GACd8X,MAAO,4BACPM,KAAM1d,EAAIqyD,UAAW10B,OAAQ39B,EAAImxB,gBAAiBvT,YAAa,GAAKkgB,UAAW,GAAIjiC,KAAMu2D,EACzFp0D,MAAOgC,EAAIg3B,KAhBE,EAgBiBj5B,OAAQiC,EAAIg3B,KAhB7B,EAgBgD4G,OAAQ,EAAGC,OAAQ,EAAG1L,QAAS,EAAGwB,QAAS3zB,EAAI2zB,SAEhHluB,KAAKopD,YAAYnH,SAAStI,EAAQ1hB,EAASj4B,KAAK+zB,eAAW95B,OAAWA,GAAawsD,aAAclsD,EAAIge,KAAO,kBAIpHywC,EAAgB1nB,UAAU+pB,kBAAoB,SAAUv9C,EAAS6rC,EAAQl0C,EAAWosB,EAAqBo5B,GACvF,IAAI58C,GAAlB,IACI04B,EACAxV,EAAO,IAAI3T,GACf2T,EAAKh5B,MAAQ,GACbg5B,EAAKj5B,OAAS,GACd,IAAIyK,EAAM+K,EAAQ9R,QAAU8R,EAAQC,WAAWzV,OAASwV,EAAQ0jB,MAAMv6B,EAClE2L,EAAOkL,EAAQ/R,QAAU+R,EAAQC,WAAWxV,MAAQuV,EAAQ0jB,MAAMx6B,EAClEk3B,KAAW2D,EAAsBE,sBAAoB5d,QACrD82C,IACA/8B,GAAU,GAEd,IAgBIiK,EAASv1B,EAAOkL,EAAQ0jB,MAAMx6B,EAAI8W,EAAQC,WAAWxV,MACrD6/B,EAASr1B,EAIb,GAHAo1B,GAAUA,EAAS1yB,EAAU8sC,IAAM9sC,EAAU4V,MAC7C+c,GAAUA,EAAS3yB,EAAU+sC,IAAM/sC,EAAU4V,MAC7C0rB,GAAa/vC,EAAGmhC,EAAsB,GAAb5G,EAAKh5B,MAAatB,EAAGmhC,EAAS,GAAmB,GAAd7G,EAAKj5B,QACrC,IAAxBwV,EAAQzB,aAAiD,IAA5ByB,EAAQxB,gBAAuB,CAC5D,IAAI5Q,EAASL,IACb0B,EAAarB,EAAQoS,EAAQzB,YAAcyB,EAAQxB,iBAAkB7G,EAAU8sC,GAAKzkC,EAAQ/R,SAAW0J,EAAU4V,OAAQ5V,EAAU+sC,GAAK1kC,EAAQ9R,SAAWyJ,EAAU4V,OACrK0rB,EAAWtrC,EAAuBC,EAAQqrC,GAE9C,IAAI9O,GACAjhC,EAAG+vC,EAAS/vC,EACZC,EAAG8vC,EAAS9vC,EACZO,MAAOsW,EAAQzB,YAAcyB,EAAQxB,gBACrC2L,KAAM,UAAWigB,OAAQ,QAAS/f,YAAa,GAAKkgB,UAAW,GAAIjiC,KA9B5D,wqDA+BPmC,MAAO,GAAID,OAAQ,GAAI6/B,OAAQ,EAAGC,OAAQ,EAAG1L,QAAS,EAAGwB,QAASA,EAASruB,GAAIiO,EAAQjO,GAAI8X,MAAO,2BAEtGsgB,EAAQp4B,GAAK,cACbG,KAAKopD,YAAYnH,SAAStI,EAAQ1hB,EAASj4B,KAAK+zB,WAAW,OAAM95B,GAAawsD,aAAc,yCAGhGuC,EAAgB1nB,UAAUkpB,kBAAoB,SAAU5qD,EAAS+5C,EAAQl0C,EAAWu+C,EAAWC,GAC3F,IAAIhsB,EAAUj4B,KAAKqsD,kBAAkBzsD,EAAS6F,GAC9CwyB,EAAQ7hC,KAAOwJ,EAAQynC,aACvBpP,EAAQ7hC,KAAOwJ,EAAQynC,aACvB,IAAImf,EAAY5mD,EAAQ24B,YAAc34B,EAAQ24B,YAAc34B,EAAQC,GACpEG,KAAKmpD,SAASlH,SAAStI,EAAQ1hB,EAASj4B,KAAK+zB,eAAW95B,EAAW+pD,EAAWwC,IAGlFwC,EAAgB1nB,UAAUurB,mBAAqB,SAAUhhC,EAAcihC,EAASl6C,EAAGqP,EAAeM,EAAQC,GAEtG,IAAIuqC,EAAUxrC,SAASsY,gBAAgB,6BAA8B,WACjE0uB,EAAOhnC,SAASsY,gBAAgB,6BAA8B,QAClE0uB,EAAKryB,aAAa,KAAMl2B,KAAK+zB,UAAY,uBACrClI,EAAa5Y,YAAc+wB,kBAAgBgpB,qBAC3CnhC,EAAa5Y,YAAc+wB,kBAAgBipB,oBAC3CF,EAAQ72B,aAAa,KAAMl2B,KAAK+zB,UAAY,YAEhD,IAAIm5B,EAAS,EACTC,EAAU,EACVC,EAAgB,EAChBC,EAAgB,EAChBhyC,EAAQ,EACRiyC,GAAc,EAClB,GAAIrrC,EAAcc,YAAcd,EAAcsrC,aAAehrC,GAAUC,EACnE4qC,EAAgB5qC,EAAOu6B,mBAAmBnqC,EAAEyI,OAC5CgyC,EAAgB9qC,EAAOw6B,mBAAmBnqC,EAAEyI,OAC5CwQ,EAAa2hC,oBAAoBC,iBAAmBL,EAAgB7qC,EAAOs7B,UAC3EhyB,EAAa6hC,kBAAkBD,iBAAmBJ,EAAgB7qC,EAAOq7B,UACzEyP,GAAc,MAEb,CACD,IAAK,IAAIzwD,EAAK,EAAG6f,EAAKmP,EAAa6hC,kBAAkBC,cAAe9wD,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAEtFqwD,GADYxwC,EAAG7f,GAGnB,IAAK,IAAI2uB,EAAK,EAAGC,EAAKI,EAAa2hC,oBAAoBG,cAAeniC,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAExF2hC,GADY1hC,EAAGD,GAGnBnQ,EAAQrb,KAAK4tD,kBAAkB/hC,EAAcjZ,EAAEyI,OAEnD6xC,EAASI,EAAcD,EAAgBH,EAAS7xC,EAChD8xC,EAAUG,EAAcF,EAAgBD,EAAU9xC,EAKlDye,GAAgBizB,GAHZltD,GAAIG,KAAK+zB,UAAY,WAAY/8B,EAAG,EAAGC,EAAG,EAAGsB,MAAO20D,EACpD50D,OAAQ60D,EAASU,aAAc,mBAGnC7tD,KAAK8tD,uBAAuBf,EAASG,EAAQC,EAAS9xC,EAAOwQ,EAAc5J,EAAeO,EAAQ8qC,GAClGttD,KAAK+tD,qBAAqBhB,EAASG,EAAQC,EAAS9xC,EAAOwQ,EAAc5J,EAAeM,EAAQ+qC,GAChG/E,EAAKh5B,YAAYw9B,GACjBD,EAAQv9B,YAAYg5B,IAExBS,EAAgB1nB,UAAUwsB,uBAAyB,SAAUf,EAASG,EAAQC,EAAS9xC,EAAOwQ,EAAc5J,EAAeO,EAAQ8qC,GAC/H,IAEIU,EAFAC,EAAQ,EACR51B,KAEJ,GAAIxM,EAAa5Y,YAAc+wB,kBAAgBgpB,oBAAqB,CAChE,IAAIkB,EAAYriC,EAAa2hC,oBAAoBG,cAC/B9hC,EAAa2hC,oBAAoBW,UAC/CtiC,EAAa2hC,oBAAoBY,gBACjC/1B,EAAYr4B,KAAKmpD,SAAS3H,eAAe31B,EAAa2hC,oBAAoBY,gBAE1EnsC,EAAcc,YAAcd,EAAcsrC,aAAe/qC,IACzD0rC,EAAYluD,KAAKquD,oBAAoBH,EAAWjsC,EAAeO,EAAQ2qC,IAE3E,IAAK,IAAIz2D,EAAI,EAAGA,EAAIw3D,EAAUz3D,OAAQC,GAAQ,EAAG,CAC7Cs3D,EAAQzsC,SAASsY,gBAAgB,6BAA8B,QAC/D,IAAInT,EAAIunC,EAAQC,EAAUx3D,GAAK,EAC/BgwB,EAAI4mC,EAAc5mC,EAAIA,EAAIrL,EAO1Bye,GAAgBk0B,GALZ9P,eAAgBgQ,EAAUx3D,GAAIwhC,OAAUrM,EAAa2hC,oBAAoBW,UACzEznC,EAAK,QAAc,KAAOwmC,EAAS,MAAY,KAC/C70B,UAAaA,EAAU/5B,WACvBqZ,MAA0B,OAAjBu2C,EAAUx3D,GAAc,uBAAyB,wBAG9Dq2D,EAAQx9B,YAAYy+B,GACpBC,GAASC,EAAUx3D,EAAI,GAAKw3D,EAAUx3D,MAIlDsyD,EAAgB1nB,UAAUysB,qBAAuB,SAAUhB,EAASG,EAAQC,EAAS9xC,EAAOwQ,EAAc5J,EAAeM,EAAQ+qC,GAC7H,IAEIgB,EAFAL,EAAQ,EACR51B,KAEJ,GAAIxM,EAAa5Y,YAAc+wB,kBAAgBipB,kBAAmB,CAC9D,IAAIiB,EAAYriC,EAAa6hC,kBAAkBC,cAC7B9hC,EAAa6hC,kBAAkBS,UAC7CtiC,EAAa6hC,kBAAkBU,gBAC/B/1B,EAAYr4B,KAAKmpD,SAAS3H,eAAe31B,EAAa6hC,kBAAkBU,gBAExEnsC,EAAcc,YAAcd,EAAcsrC,aAAehrC,IACzD2rC,EAAYluD,KAAKquD,oBAAoBH,EAAWjsC,EAAeM,EAAQ2qC,IAE3E,IAAK,IAAIx2D,EAAI,EAAGA,EAAIw3D,EAAUz3D,OAAQC,GAAQ,EAAG,CAC7C43D,EAAQ/sC,SAASsY,gBAAgB,6BAA8B,QAC/D,IAAInT,EAAIunC,EAAQC,EAAUx3D,GAAK,EAC/BgwB,EAAI4mC,EAAc5mC,EAAIA,EAAIrL,EAO1Bye,GAAgBw0B,GALZpQ,eAAgBgQ,EAAUx3D,GAAIwhC,OAAUrM,EAAa6hC,kBAAkBS,UACvEznC,EAAK,MAAY,SAAe,IAAMymC,EAAU,KAChD90B,UAAaA,EAAU/5B,WACvBqZ,MAA0B,OAAjBu2C,EAAUx3D,GAAc,uBAAyB,wBAG9Dq2D,EAAQx9B,YAAY++B,GACpBL,GAASC,EAAUx3D,EAAI,GAAKw3D,EAAUx3D,MAKlDsyD,EAAgB1nB,UAAUitB,WAAa,SAAU1iC,EAAc2iC,EAAS/oD,EAAWwc,EAAeM,EAAQC,GACtG,IACI9rB,EADAyoB,EAAOqvC,EAAQhtC,eAAexhB,KAAK+zB,UAAY,cAE/Cu5B,GAAc,EAClB,GAAInuC,EAAM,CACN,IAAI4tC,EAAUyB,EAAQhtC,eAAexhB,KAAK+zB,UAAY,YAClDg5B,GACAA,EAAQvvC,WAAW8R,YAAYy9B,GAEnC,IAAIK,EAAgB,EAChBC,EAAgB,EAChBhyC,EAAQ,EACR4G,EAAcc,YAAcd,EAAcsrC,aAAe/qC,GAAUD,GACnE6qC,EAAgB5qC,EAAOu6B,mBAAmBt3C,EAAU4V,OACpDgyC,EAAgB9qC,EAAOw6B,mBAAmBt3C,EAAU4V,OACpDiyC,GAAc,EACdzhC,EAAa2hC,oBAAoBC,iBAAmBL,EAAgB7qC,EAAOs7B,UAC3EhyB,EAAa6hC,kBAAkBD,iBAAmBJ,EAAgB7qC,EAAOq7B,WAGzExiC,EAAQrb,KAAK4tD,kBAAkB/hC,EAAcpmB,EAAU4V,OAE3D,IAAI/iB,EAAS,EACb,IAAK5B,EAAI,EAAGA,EAAIm1B,EAAa2hC,oBAAoBG,cAAcl3D,OAAQC,IACnE4B,GAAUuzB,EAAa2hC,oBAAoBG,cAAcj3D,GAE7D,IAAI6B,EAAQ,EACZ,IAAK7B,EAAI,EAAGA,EAAIm1B,EAAa6hC,kBAAkBC,cAAcl3D,OAAQC,IACjE6B,GAASszB,EAAa6hC,kBAAkBC,cAAcj3D,GAE1D,IAAI6mD,GACAvmD,GAAIyO,EAAU8sC,GAAK9sC,EAAU4V,MAC7BpkB,GAAIwO,EAAU+sC,GAAK/sC,EAAU4V,OAEjCye,GAAgB3a,EAAMo+B,GACtBhlD,EAAQ+0D,EAAcD,EAAgB90D,EAAQ8iB,EAC9C/iB,EAASg1D,EAAcF,EAAgB90D,EAAS+iB,EAChDkiC,GACI19C,GAAIG,KAAK+zB,UAAY,WAAY/8B,EAAG,EAAGC,EAAG,EAAGsB,MAAOA,EACpDD,OAAQA,EAAQu1D,aAAc,kBAGlC/zB,GADAizB,EAAUxrC,SAASsY,gBAAgB,6BAA8B,WACxC0jB,GACzBv9C,KAAK8tD,uBAAuBf,EAASx0D,EAAOD,EAAQ+iB,EAAOwQ,EAAc5J,EAAeO,EAAQ8qC,GAChGttD,KAAK+tD,qBAAqBhB,EAASx0D,EAAOD,EAAQ+iB,EAAOwQ,EAAc5J,EAAeM,EAAQ+qC,GAC9F,IAAI/E,EAAOiG,EAAQhtC,eAAexhB,KAAK+zB,UAAY,sBAC/Cw0B,GACAA,EAAKh5B,YAAYw9B,KAI7B/D,EAAgB1nB,UAAU+sB,oBAAsB,SAAUH,EAAWjsC,EAAeG,EAAOE,GAGvF,IAAK,IAFDmsC,KACA9Q,EAAer7B,EAAeF,EAAMy7B,SAC/BnnD,EAAI,EAAGA,EAAqB,EAAjB0rB,EAAMy7B,SAAcnnD,IAEhC+3D,EAAY/3D,GADZA,EAAI,GAAM,EACc,IAANA,EAAW,KAAO,IAGnBinD,EAAe8Q,EAAY/3D,EAAI,GAGxD,OAAO+3D,GAEXzF,EAAgB1nB,UAAUssB,kBAAoB,SAAU/hC,EAAcxQ,GAClE,GAAIA,GAAS,EACT,KAAOA,GAAS,GACZA,GAAS,OAGZ,GAAIA,GAAS,GACd,KAAOA,GAAS,IACZA,GAAS,EAGjB,IAAI3kB,EAGJ,GAFAm1B,EAAa2hC,oBAAoBC,gBAAkB5hC,EAAa2hC,oBAAoBkB,cACpF7iC,EAAa6hC,kBAAkBD,gBAAkB5hC,EAAa6hC,kBAAkBgB,cAClE,IAAVrzC,EAAa,CACb,IAAIszC,EAAY9iC,EAAa2hC,oBAE7B,IADAmB,EAAUlB,mBACL/2D,EAAI,EAAGA,EAAIi4D,EAAUD,cAAcj4D,OAAQC,IAC5Ci4D,EAAUlB,gBAAgB/2D,GAAKi4D,EAAUD,cAAch4D,GAAK2kB,EAIhE,KAFAszC,EAAY9iC,EAAa6hC,mBACfD,mBACL/2D,EAAI,EAAGA,EAAIi4D,EAAUD,cAAcj4D,OAAQC,IAC5Ci4D,EAAUlB,gBAAgB/2D,GAAKi4D,EAAUD,cAAch4D,GAAK2kB,EAGpE,OAAOA,GAGX2tC,EAAgB1nB,UAAUmpB,kBAAoB,SAAU7qD,EAAS+5C,EAAQl0C,EAAWu+C,EAAWC,GAC3F,IAAIhsB,EAAUj4B,KAAKqsD,kBAAkBzsD,EAAS6F,GAC9CwyB,EAAQ5/B,aAAe,EACvB4/B,EAAQnL,WAAa2K,GAAmB73B,EAAQM,MAAM4sB,WAAYltB,EAAQM,MAAMyY,cAChFsf,EAAQh4B,QAAUL,EAAQK,QAC1Bg4B,EAAQxB,UAAYkB,GAAkB/3B,EAAQM,MAAMyY,cACpDsf,EAAQpL,UAAY4L,GAAkB74B,EAAQM,MAAM2sB,WACpDoL,EAAQvf,MAAQ9Y,EAAQM,MAAMwY,MAC9Buf,EAAQrL,OAAShtB,EAAQM,MAAM0sB,OAC/BqL,EAAQzf,KAAO5Y,EAAQM,MAAMsY,KAC7Byf,EAAQxf,SAAW7Y,EAAQM,MAAMuY,SACjCwf,EAAQtL,WAAa/sB,EAAQM,MAAMysB,WACnCsL,EAAQxL,aAAe7sB,EAAQM,MAAMusB,aACrCwL,EAAQlL,eAAiBntB,EAAQM,MAAM6sB,eACvCkL,EAAQO,OAAS54B,EAAQ44B,OACzBP,EAAQD,WAAap4B,EAAQo4B,WAC7BC,EAAQlC,WAAan2B,EAAQm2B,WAC7BkC,EAAQI,UAAY,GACpBJ,EAAQ9f,YAAc,EACtB8f,EAAQhgB,KAAOrY,EAAQM,MAAM+X,KAC7B,IAAIuuC,EAAY5mD,EAAQ24B,YAAc34B,EAAQ24B,YAAc34B,EAAQK,QAAUL,EAAQK,QAAUL,EAAQC,GACxGG,KAAKmpD,SAASnH,cAAcrI,EAAQ1hB,EAASj4B,KAAK+zB,eAAW95B,OAAWA,EAAW+pD,GACnFhkD,KAAKmpD,SAAS7F,SAAS3J,EAAQ1hB,EAAS+rB,EAAWwC,EAAWxmD,KAAK+zB,WAC/D/zB,KAAKkpD,YACLtpD,EAAQ44B,QAAS,IAGzBwwB,EAAgB1nB,UAAUopB,oBAAsB,SAAU9qD,EAAS+5C,EAAQl0C,EAAWu+C,EAAWC,GAC7F,IAAI2K,EACAC,EACA1E,EAAYnqD,KAAK2pD,aAAa/pD,OAAS3F,EAAW0/C,IAAWqK,EAC7D8K,EAAc9uD,KAAK6pD,iBAAiBjqD,EAAS+5C,EAAQwQ,GAAWvM,GAAKjE,EACrE1hB,EAAUj4B,KAAKqsD,kBAAkBzsD,EAAS6F,GAK9C,OAJAwyB,EAAQhgB,KAAO,cACfggB,EAAQ5/B,aAAeuH,EAAQvH,aAC/B4/B,EAAQC,OAAS,cACjBl4B,KAAKmpD,SAASnH,cAAcrI,EAAQ1hB,EAASj4B,KAAK+zB,eAAW95B,OAAWA,EAAW+pD,GAC3EpkD,EAAQyb,OACZ,IAAK,OACDuzC,EAAgBhvD,EAAQioC,YAAYtvC,MACpCs2D,EAAiBjvD,EAAQioC,YAAYvvC,OACrC,MACJ,IAAK,UACDs2D,EAAgBhvD,EAAQmO,WAAWxV,MACnCs2D,EAAiBjvD,EAAQmO,WAAWzV,OACpC,MACJ,IAAK,OAEGs2D,EAAgBC,EADhBjvD,EAAQmO,WAAWxV,OAASqH,EAAQmO,WAAWzV,OACdsH,EAAQmO,WAAWxV,MAGnBqH,EAAQmO,WAAWzV,OAExD,MACJ,IAAK,QAEGs2D,EAAgBC,EADhBjvD,EAAQmO,WAAWxV,OAASqH,EAAQmO,WAAWzV,OACdsH,EAAQmO,WAAWxV,MAGnBqH,EAAQmO,WAAWzV,OAI5D0H,KAAKopD,aACLppD,KAAKopD,YAAYtB,kBAAkBloD,EAASkvD,EAAaD,EAAgBD,EAAezE,IAGhGnB,EAAgB1nB,UAAUqpB,kBAAoB,SAAU/qD,EAAS+5C,EAAQr0B,EAAW7f,EAAWu+C,EAAWC,GACtG,IAAIhsB,EAAUj4B,KAAKqsD,kBAAkBzsD,EAAS6F,GAC9CwyB,EAAQhgB,KAAO,cACfggB,EAAQ5/B,aAAeuH,EAAQvH,aAC/B4/B,EAAQC,OAAS,cACjBl4B,KAAKmpD,SAASnH,cAAcrI,EAAQ1hB,EAASj4B,KAAK+zB,eAAW95B,OAAWA,EAAW+pD,GAC/EhkD,KAAKopD,aACLppD,KAAKopD,YAAYvB,gBAAgBjoD,EAAS0lB,EAAU1T,SAAS,GAAInM,EAAW4f,GAAeC,KAInG0jC,EAAgB1nB,UAAUipB,mBAAqB,SAAU3qD,EAAS+5C,EAAQl0C,EAAWu+C,EAAWC,GAC5F,IAAIhsB,EAAUj4B,KAAKqsD,kBAAkBzsD,EAAS6F,GAC9CwyB,EAAQ5/B,aAAe,EACvB2H,KAAKmpD,SAASnH,cAAcrI,EAAQ1hB,EAASj4B,KAAK+zB,eAAW95B,OAAWA,EAAW+pD,GAEnF,IAAI+K,EACAC,EACAC,EACAC,EACJ,GAAwB,YAApBtvD,EAAQyoC,QACR0mB,EAAanvD,EAAQmO,WAAWxV,MAChCy2D,EAAcpvD,EAAQmO,WAAWzV,WAEhC,CACD,IAAI4vD,EAAetoD,EAAQioC,YAAYtvC,MACnC4vD,EAAgBvoD,EAAQioC,YAAYvvC,OACpC62D,EAAal3B,EAAQ1/B,MAAQ2vD,EAC7BkH,EAAcn3B,EAAQ3/B,OAAS6vD,EAC/BkH,OAAQ,EACZ,OAAQzvD,EAAQyoC,SACZ,IAAK,OAED0mB,EAAa7G,GADbmH,EAAQ5yD,KAAKqK,IAAIqoD,EAAYC,IAE7BJ,EAAc7G,EAAgBkH,EAC9Bp3B,EAAQjhC,GAAKyF,KAAK6G,IAAI20B,EAAQ1/B,MAAQw2D,GAAc,EACpD92B,EAAQhhC,GAAKwF,KAAK6G,IAAI20B,EAAQ3/B,OAAS02D,GAAe,EACtD,MACJ,IAAK,QACDG,EAAal3B,EAAQ1/B,MAAQ2vD,EAC7BkH,EAAcn3B,EAAQ3/B,OAAS6vD,EAE/B4G,EAAa7G,GADbmH,EAAQ5yD,KAAK+I,IAAI2pD,EAAYC,IAE7BJ,EAAc7G,EAAgBkH,EAC9BJ,EAAch3B,EAAQ1/B,MAAQw2D,EAAa7G,EAC3CgH,EAAej3B,EAAQ3/B,OAAS02D,EAAc7G,EAC9C,MACJ,IAAK,OACD4G,EAAa7G,EACb8G,EAAc7G,GAI1BlwB,EAAQ1/B,MAAQw2D,EAChB92B,EAAQ3/B,OAAS02D,EAIjB/2B,EAAQg3B,YAAcA,EACtBh3B,EAAQi3B,aAAeA,EACvBj3B,EAAQ11B,OAAS3C,EAAQ2C,OACzB01B,EAAQhP,UAAYrpB,EAAQ8uB,WAC5BuJ,EAAQ5c,MAAQzb,EAAQgvB,WACxBqJ,EAAQM,YAAc34B,EAAQ24B,YAAc34B,EAAQ24B,YAAc34B,EAAQC,GAC1EG,KAAKmpD,SAASpF,UAAUpK,EAAQ1hB,EAAS+rB,EAAWC,IAGxD+E,EAAgB1nB,UAAUgpB,gBAAkB,SAAUlC,EAAOzO,EAAQr0B,EAAW7f,EAAWu+C,EAAWqG,EAAcpG,EAAa3jC,GAC7H,IAAIgvC,GAAcr0B,IAAK+oB,EAAWpG,EAAGjE,GACrC,GAAI35C,KAAK+zB,YACLiwB,EAAYhkD,KAAK2pD,aAAavB,IAAUpE,EACpChkD,KAAKkpD,WAAW,CAChB,IAAIe,OAAe,EACnBA,EAAejqD,KAAK6pD,iBAAiBzB,EAAOzO,EAAQqK,EAAW1jC,GAAYs9B,GAAKjE,EAChFqK,EAAYhkD,KAAK2pD,aAAa3pD,KAAKuvD,gBAAgBnH,EAAMx2C,YAAcoyC,EACvE,IAAIwL,EAAkBxvD,KAAK6pD,iBAAiB7pD,KAAKuvD,gBAAgBnH,EAAMx2C,UAAWq4C,EAAcjG,GAChGsL,EAAUr0B,IAAMu0B,EAAgBv0B,KAAO+oB,EACvCsL,EAAU1R,EAAI4R,EAAgB5R,GAAKqM,EAC/BI,GACIrG,IACKA,EAAUxiC,eAAe8tC,EAAU1R,EAAE/9C,KACtC85C,EAAOpqB,YAAY+/B,EAAU1R,IAGrCjE,EAAS2V,EAAU1R,GAGnBjE,EAAS2V,EAAU1R,EAK/B,GADA59C,KAAK4qD,WAAWxC,EAAOzO,EAAQl0C,EAAWu+C,GACtCoE,EAAM3hB,cAGN,IAAK,IADDgpB,EADAC,OAAU,EAEL7yD,EAAK,EAAG6f,EAAK0rC,EAAMx2C,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACxD,IAAI+Q,EAAQ8O,EAAG7f,GACfmnD,EAAYhkD,KAAK2pD,aAAa3pD,KAAKuvD,gBAAgBnH,EAAMx2C,WAAahE,IAAUo2C,EAC5EhkD,KAAKkpD,YAELwG,GADAD,EAAczvD,KAAK6pD,iBAAiB7pD,KAAKuvD,gBAAgBnH,EAAMx2C,WAAahE,EAAO+rC,EAAQqK,IACrEpG,GAAKjE,EACvB8V,EAAYx0B,MACZ+oB,EAAYyL,EAAYx0B,MAGhCj7B,KAAKoqD,cAAcx8C,EAAO8hD,GAAW/V,EAAQr0B,EAAW7f,EAAWu+C,GAAW,EAAMC,KAKhG+E,EAAgB1nB,UAAUiuB,gBAAkB,SAAU39C,EAAU8pB,GAC5D,GAAI9pB,GAAYA,EAASnb,OAAS,EAAuB,CACrD,IAAImX,EAAQgE,EAAS,GACrB,GAAIhE,aAAiBmhB,GACjB,OAAOnhB,EAEFA,EAAMgE,UAAYhE,EAAMgE,SAASnb,QACtCuJ,KAAKuvD,gBAAgB3hD,EAAMgE,SAAU8pB,KAAW,KAM5DstB,EAAgB1nB,UAAUspB,WAAa,SAAUhrD,EAAS+5C,EAAQl0C,EAAWu+C,GACzE,IAAI/rB,EAAUj4B,KAAKqsD,kBAAkBzsD,EAAS6F,GAC9CwyB,EAAQ5/B,aAAeuH,EAAQvH,cAAgB,EAC/C,IAAImuD,EAAY5mD,EAAQ24B,YAAc34B,EAAQ24B,YAAc34B,EAAQC,GACpEG,KAAKmpD,SAASnH,cAAcrI,EAAQ1hB,EAASj4B,KAAK+zB,eAAW95B,OAAWA,EAAW+pD,EAAWwC,IAGlGwC,EAAgB1nB,UAAUquB,SAAW,SAAUhW,EAAQ1hB,GACnDA,EAAQ5/B,aAAe,EACvB2H,KAAKopD,YAAYpH,cAAcrI,EAAQ1hB,EAASj4B,KAAK+zB,YAGzDi1B,EAAgB1nB,UAAU+qB,kBAAoB,SAAUzsD,EAAS6F,GAC7D,IAAIwyB,GACA1/B,MAAOqH,EAAQmO,WAAWxV,MAAOD,OAAQsH,EAAQmO,WAAWzV,OAC5DtB,EAAG4I,EAAQ7D,QAAU6D,EAAQmO,WAAWxV,MAAQqH,EAAQ4xB,MAAMx6B,EAAI,GAClEC,EAAG2I,EAAQ5D,QAAU4D,EAAQmO,WAAWzV,OAASsH,EAAQ4xB,MAAMv6B,EAAI,GACnEghB,KAAMrY,EAAQM,MAAM+X,KAAMigB,OAAQt4B,EAAQM,MAAMgY,YAAa1gB,MAAOoI,EAAQyM,YAAczM,EAAQ0M,gBAClG6rB,OAAQv4B,EAAQ4xB,MAAMx6B,EAAGohC,OAAQx4B,EAAQ4xB,MAAMv6B,EAAGkhB,YAAavY,EAAQM,MAAMiY,YAC7EkgB,UAAWz4B,EAAQM,MAAMod,iBAAmB,GAAIoP,QAAS9sB,EAAQM,MAAMwsB,QAAS4L,OAAQ14B,EAAQ04B,OAChG7K,SAAU7tB,EAAQM,MAAMutB,SAAUS,QAAStuB,EAAQsuB,QAASruB,GAAID,EAAQC,GAAI04B,YAAa34B,EAAQ24B,aAMrG,OAJI9yB,IACAwyB,EAAQjhC,GAAKyO,EAAU8sC,GACvBta,EAAQhhC,GAAKwO,EAAU+sC,IAEpBva,GAGX+wB,EAAgB4G,yBAA2B,SAAUC,EAAY/7B,EAAgB98B,EAAGC,EAAGsB,EAAOD,GAC1F,GAAIu3D,EAAWttD,OAAQ,CACnB,IACIS,EADkBs2B,GAAsBxF,EAAej0B,IAC9B2hB,eAAesS,EAAej0B,GAAK,UAChE,IAAKmD,EAAQ,CACT,IAAI8sD,E7B7iBpB,SAAwC/7B,GAMpC,OAJqB1E,GAAkB0E,GAEVgF,uBAAuB,4BAC3B,G6BwiBMg3B,CAAwBj8B,EAAej0B,KAC1DmD,EAASue,SAASsY,gBAAgB,6BAA8B,UACzD3D,aAAa,KAAMpC,EAAej0B,GAAK,UAC9CiwD,EAAavgC,YAAYvsB,GAE7B,IAAIqhD,EAAW,IAAIxN,MACnBwN,EAAS57C,IAAMonD,EAAWttD,OAC1BS,EAAOqyB,eAAe,+BAAgC,aAAcgvB,EAAS57C,IAAInK,YACjF,IAAI+c,EAA6B,SAArBw0C,EAAWx0C,MAAmBw0C,EAAWx0C,MAAQ,GACzDosC,EAAWoI,EAAWlhC,MACtB+4B,EAAcD,EAASE,OAAO,GAAG9wD,cAAgB4wD,EAAS3W,MAAM,GAChEz1B,IACAqsC,GAAe,IAAMrsC,EAAMssC,OAAO,GAAG9wD,cAAgBwkB,EAAMy1B,MAAM,IAOrEhX,GAAgB92B,GAJZnD,GAAMi0B,EAAej0B,GAAK,SAAU7I,EAAKA,EAAGC,EAAKA,EACjDsB,MAASA,EAAOD,OAAUA,EAC1BsvD,oBAAuBF,MAMnCsB,EAAgB1nB,UAAU0uB,gBAAkB,SAAUvqD,EAAWwqD,GAC7D,IAAI1d,EAAK9sC,EAAU8sC,GAAK9sC,EAAU4V,MAC9Bm3B,EAAK/sC,EAAU+sC,GAAK/sC,EAAU4V,MAClC,GAAIk3B,IAAOvyC,KAAKyF,UAAUzO,GAAKw7C,IAAOxyC,KAAKyF,UAAUxO,GAAa,IAAPs7C,GAAmB,IAAPC,EAAW,CAE9E,GAAIyd,EAAS,CACUjwD,KAAK0pD,gBAAgBloC,eAAexhB,KAAK+zB,UAAY,iBAC3DmC,aAAa,YAAa,aAChCzwB,EAAU8sC,GAAK9sC,EAAU4V,MAAS,IAAO5V,EAAU+sC,GAAK/sC,EAAU4V,MAAS,WAC5E5V,EAAU4V,MAAQ,M7B3jBxC,SAA6B0Y,GAIzB,OAFqBsF,GAAgBtF,GACLvS,eAAeuS,EAAY,c6B4jBnCm8B,CAAalwD,KAAK+zB,WACxBmC,aAAa,YAAa,aAAgBzwB,EAAU8sC,GAAK9sC,EAAU4V,MAAS,IAC/E5V,EAAU+sC,GAAK/sC,EAAU4V,MAAS,KAExBrb,KAAKupD,aAAa/nC,eAAexhB,KAAK+zB,UAAY,iBACxDmC,aAAa,YAAa,aAC9BzwB,EAAU8sC,GAAK9sC,EAAU4V,MAAS,IAAO5V,EAAU+sC,GAAK/sC,EAAU4V,MAAS,WAC5E5V,EAAU4V,MAAQ,KAENrb,KAAKupD,aAAa/nC,eAAexhB,KAAK+zB,UAAY,oBACxDmC,aAAa,YAAa,aAC/BzwB,EAAU8sC,GAAK9sC,EAAU4V,MAAS,IAAO5V,EAAU+sC,GAAK/sC,EAAU4V,MAAS,WAC5E5V,EAAU4V,MAAQ,KAENrb,KAAKypD,eAAejoC,eAAexhB,KAAK+zB,UAAY,gBAC1DmC,aAAa,YAAa,aAC/BzwB,EAAU8sC,GAAK9sC,EAAU4V,MAAS,IAAO5V,EAAU+sC,GAAK/sC,EAAU4V,MAAS,WAC5E5V,EAAU4V,MAAQ,KAOxB,OALgBme,GAAax5B,KAAK+zB,WAAWniB,SAAS,GAC5C1R,MAAMuF,UAAY,aACrBA,EAAU8sC,GAAK9sC,EAAU4V,MAAS,MAAS5V,EAAU+sC,GAAK/sC,EAAU4V,MAAS,YAC9E5V,EAAU4V,MAAQ,IACxBrb,KAAKyF,WAAczO,EAAGyO,EAAU8sC,GAAK9sC,EAAU4V,MAAOpkB,EAAGwO,EAAU+sC,GAAK/sC,EAAU4V,QAC3E,EAEX,OAAO,GAGX2tC,EAAgB1nB,UAAU6uB,WAAa,SAAUvwD,EAASwwD,EAAsB9qC,EAAW7f,GACvFzF,KAAKoqD,cAAcxqD,EAASwwD,EAAsB9qC,EAAW7f,EAAWzF,KAAK2pD,aAAa/pD,KAEvFopD,KCxiCPvnB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAO5DijD,GAA4B,SAAU3tB,GAEtC,SAAS2tB,IACL,OAAkB,OAAX3tB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAU4uB,EAAY3tB,GAItBT,IACImB,WAAS,KACVitB,EAAW/uB,UAAW,cAAU,GACnCW,IACImB,WAAS,gBACVitB,EAAW/uB,UAAW,aAAS,GAClCW,IACImB,WAAS,SACVitB,EAAW/uB,UAAW,aAAS,GAClCW,IACImB,WAAS,SACVitB,EAAW/uB,UAAW,aAAS,GAC3B+uB,GACThtB,iBAmBEitB,GAA8B,SAAU5tB,GAExC,SAAS4tB,IACL,OAAkB,OAAX5tB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA0B/D,OA5BAyhC,GAAU6uB,EAAc5tB,GAIxBT,IACImB,WAAS,OACVktB,EAAahvB,UAAW,aAAS,GACpCW,IACImB,WAAS,OACVktB,EAAahvB,UAAW,cAAU,GACrCW,IACI8H,aAAYjE,KACbwqB,EAAahvB,UAAW,cAAU,GACrCW,IACImB,WAAS,cACVktB,EAAahvB,UAAW,mBAAe,GAC1CW,IACImB,WAAS,aACVktB,EAAahvB,UAAW,2BAAuB,GAClDW,IACI8H,aAAYsmB,KACbC,EAAahvB,UAAW,kBAAc,GACzCW,IACImB,YAAS,IACVktB,EAAahvB,UAAW,oBAAgB,GAC3CW,IACImB,YAAS,IACVktB,EAAahvB,UAAW,sBAAkB,GACtCgvB,GACTjtB,iBAKEktB,GAAgC,SAAU7tB,GAE1C,SAAS6tB,IACL,OAAkB,OAAX7tB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAmC/D,OArCAyhC,GAAU8uB,EAAgB7tB,GAI1BT,IACImB,WAAS,IACVmtB,EAAejvB,UAAW,wBAAoB,GACjDW,IACImB,WAAS,IACVmtB,EAAejvB,UAAW,sBAAkB,GAC/CW,IACImB,WAAS,IACVmtB,EAAejvB,UAAW,mBAAe,GAC5CW,IACImB,WAAS,IACVmtB,EAAejvB,UAAW,qBAAiB,GAC9CW,IACImB,WAAS,IACVmtB,EAAejvB,UAAW,sBAAkB,GAC/CW,IACImB,WAAS,KACVmtB,EAAejvB,UAAW,eAAW,GACxCW,IACImB,WAAS,KACVmtB,EAAejvB,UAAW,eAAW,GACxCW,IACImB,WAAS,YACVmtB,EAAejvB,UAAW,mBAAe,GAC5CW,IACImB,cACDmtB,EAAejvB,UAAW,sBAAkB,GAC/CW,IACImB,YAAS,IACVmtB,EAAejvB,UAAW,qBAAiB,GAC9CW,IACI8H,WAAUnnC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAAMgjC,KACvDyqB,EAAejvB,UAAW,wBAAoB,GAC1CivB,GACTltB,iBCnIEmtB,GAAgC,WAChC,SAASA,IACLxwD,KAAKywD,YAQT,OANAD,EAAelvB,UAAUovB,SAAW,SAAUn4C,EAAM1c,GAChDmE,KAAKywD,SAASl4C,GAAQ1c,GAE1B20D,EAAelvB,UAAUqvB,WAAa,SAAUp4C,GAC5C,OAAOvY,KAAKywD,SAASl4C,IAElBi4C,KCdP/uB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAO5DwjD,GAA2B,SAAUluB,GAErC,SAASkuB,IACL,OAAkB,OAAXluB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAUmvB,EAAWluB,GAIrBT,IACImB,WAAS,cACVwtB,EAAUtvB,UAAW,iBAAa,GACrCW,IACImB,WAAS,KACVwtB,EAAUtvB,UAAW,qBAAiB,GACzCW,IACImB,YAAU,KAAM,MAAO,IAAM,MAAO,IAAM,MAAO,IAAM,MAAO,IAAM,SACrEwtB,EAAUtvB,UAAW,qBAAiB,GACzCW,IACImB,YAAU,MACXwtB,EAAUtvB,UAAW,qBAAiB,GAClCsvB,GACTvtB,iBAMEwtB,GAA8B,SAAUnuB,GAExC,SAASmuB,IACL,OAAkB,OAAXnuB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAiB/D,OAnBAyhC,GAAUovB,EAAcnuB,GAIxBT,IACI8H,aAAY6mB,KACbC,EAAavvB,UAAW,2BAAuB,GAClDW,IACI8H,aAAY6mB,KACbC,EAAavvB,UAAW,yBAAqB,GAChDW,IACImB,WAASY,kBAAgB8O,MAC1B+d,EAAavvB,UAAW,mBAAe,GAC1CW,IACImB,WAAS,IACVytB,EAAavvB,UAAW,iBAAa,GACxCW,IACImB,WAAS,IACVytB,EAAavvB,UAAW,0BAAsB,GAC1CuvB,GACTxtB,iBCrEE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAM5D0jD,GAA8B,SAAUpuB,GAExC,SAASouB,IACL,OAAkB,OAAXpuB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAuB/D,OAzBAyhC,GAAUqvB,EAAcpuB,GAIxBT,IACImB,WAAS,IACV0tB,EAAaxvB,UAAW,gBAAY,GACvCW,IACImB,WAAS,MACV0tB,EAAaxvB,UAAW,oBAAgB,GAC3CW,IACImB,WAAS,eACV0tB,EAAaxvB,UAAW,mBAAe,GAC1CW,IACImB,WAAS,kBACV0tB,EAAaxvB,UAAW,qBAAiB,GAC5CW,IACImB,WAAS,QACV0tB,EAAaxvB,UAAW,mBAAe,GAC1CW,IACImB,WAAS,KACV0tB,EAAaxvB,UAAW,iBAAa,GACxCW,IACImB,WAAS,OACV0tB,EAAaxvB,UAAW,mBAAe,GACnCwvB,GACTztB,iBAoBE0tB,GAA+B,SAAUruB,GAEzC,SAASquB,IACL,OAAkB,OAAXruB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAc/D,OAhBAyhC,GAAUsvB,EAAeruB,GAIzBT,IACImB,YAAS,IACV2tB,EAAczvB,UAAW,kBAAc,GAC1CW,IACImB,YAAS,IACV2tB,EAAczvB,UAAW,mBAAe,GAC3CW,IACI8H,WAAUj5B,YAAa,cAAgBggD,KACxCC,EAAczvB,UAAW,uBAAmB,GAC/CW,IACI8H,WAAUj5B,YAAa,YAAcggD,KACtCC,EAAczvB,UAAW,qBAAiB,GACtCyvB,GACT1tB,iBCxFE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAgC5D4jD,GAA4B,SAAUtuB,GAEtC,SAASsuB,IACL,OAAkB,OAAXtuB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAiB/D,OAnBAyhC,GAAUuvB,EAAYtuB,GAItBT,IACImB,WAAS,KACV4tB,EAAW1vB,UAAW,YAAQ,GACjCW,IACImB,WAAS,KACV4tB,EAAW1vB,UAAW,cAAU,GACnCW,IACImB,WAAS,KACV4tB,EAAW1vB,UAAW,cAAU,GACnCW,IACImB,WAAS,KACV4tB,EAAW1vB,UAAW,eAAW,GACpCW,IACImB,cACD4tB,EAAW1vB,UAAW,oBAAgB,GAClC0vB,GACT3tB,iBAEE4tB,GAAsC,SAAUvuB,GAEhD,SAASuuB,IACL,OAAkB,OAAXvuB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA6B/D,OA/BAyhC,GAAUwvB,EAAsBvuB,GAIhCT,IACImB,WAAS,KACV6tB,EAAqB3vB,UAAW,UAAM,GACzCW,IACImB,WAAS,KACV6tB,EAAqB3vB,UAAW,gBAAY,GAC/CW,IACImB,WAAS,KACV6tB,EAAqB3vB,UAAW,gBAAY,GAC/CW,IACImB,WAAS,OACV6tB,EAAqB3vB,UAAW,oBAAgB,GACnDW,IACImB,WAAS,OACV6tB,EAAqB3vB,UAAW,oBAAgB,GACnDW,IACImB,WAAS,OACV6tB,EAAqB3vB,UAAW,oBAAgB,GACnDW,IACImB,WAAS,OACV6tB,EAAqB3vB,UAAW,oBAAgB,GACnDW,IACImB,WAAS,OACV6tB,EAAqB3vB,UAAW,mBAAe,GAClDW,IACI8H,aAAYinB,KACbC,EAAqB3vB,UAAW,kBAAc,GAC1C2vB,GACT5tB,iBAEE6tB,GAA4B,SAAUxuB,GAEtC,SAASwuB,IACL,OAAkB,OAAXxuB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KA0B/D,OA5BAyhC,GAAUyvB,EAAYxuB,GAItBT,IACImB,WAAS,KACV8tB,EAAW5vB,UAAW,UAAM,GAC/BW,IACImB,WAAS,OACV8tB,EAAW5vB,UAAW,mBAAe,GACxCW,IACImB,WAAS,KACV8tB,EAAW5vB,UAAW,YAAQ,GACjCW,IACImB,WAAS,KACV8tB,EAAW5vB,UAAW,gBAAY,GACrCW,IACImB,cACD8tB,EAAW5vB,UAAW,YAAQ,GACjCW,IACImB,cACD8tB,EAAW5vB,UAAW,iBAAa,GACtCW,IACI8H,aAAYinB,KACbE,EAAW5vB,UAAW,kBAAc,GACvCW,IACI8H,aAAYknB,KACbC,EAAW5vB,UAAW,4BAAwB,GAC1C4vB,GACT7tB,iBCzIE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAO5D+jD,GAAwB,SAAUzuB,GAElC,SAASyuB,IACL,OAAkB,OAAXzuB,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAwD/D,OA1DAyhC,GAAU0vB,EAAQzuB,GAIlBT,IACImB,WAAS,KACV+tB,EAAO7vB,UAAW,iBAAa,GAClCW,IACImB,WAAS,KACV+tB,EAAO7vB,UAAW,yBAAqB,GAC1CW,IACImB,WAAS,KACV+tB,EAAO7vB,UAAW,uBAAmB,GACxCW,IACImB,WAAS,KACV+tB,EAAO7vB,UAAW,oBAAgB,GACrCW,IACImB,WAAS,KACV+tB,EAAO7vB,UAAW,oBAAgB,GACrCW,IACImB,WAAS,KACV+tB,EAAO7vB,UAAW,oBAAgB,GACrCW,IACI8H,WAAUnnC,KAAM,GAAIG,IAAK,GAAIF,MAAO,EAAGC,OAAQ,GAAKgjC,KACrDqrB,EAAO7vB,UAAW,cAAU,GAC/BW,IACImB,WAAS,SACV+tB,EAAO7vB,UAAW,2BAAuB,GAC5CW,IACImB,WAAS,SACV+tB,EAAO7vB,UAAW,yBAAqB,GAC1CW,IACImB,WAAS,gBACV+tB,EAAO7vB,UAAW,mBAAe,GACpCW,IACImB,WAAS,SACV+tB,EAAO7vB,UAAW,2BAAuB,GAC5CW,IACImB,WAAS,YACV+tB,EAAO7vB,UAAW,yBAAqB,GAC1CW,IACImB,WAAS,SACV+tB,EAAO7vB,UAAW,YAAQ,GAC7BW,IACImB,cACD+tB,EAAO7vB,UAAW,qBAAiB,GACtCW,IACImB,cACD+tB,EAAO7vB,UAAW,iBAAa,GAClCW,IACImB,cACD+tB,EAAO7vB,UAAW,cAAU,GAC/BW,IACImB,YAAS,IACV+tB,EAAO7vB,UAAW,uBAAmB,GACxCW,IACImB,WAAS,KACV+tB,EAAO7vB,UAAW,YAAQ,GACtB6vB,GACT9tB,iBjCiVE7C,IACAyJ,KAAQ,UACR91B,OAAU,YACVhB,OAAU,UACVK,KAAQ,OACR+B,WAAc,WACdL,WAAc,WACdE,YAAe,WACfC,YAAe,WACfiC,KAAQ,YACR85C,SAAY,YACZj8C,gBAAmB,YACnBK,gBAAmB,YACnBP,gBAAmB,YACnBK,gBAAmB,YACnB+7C,mBAAsB,OACtBC,mBAAsB,OACtBC,kBAAqB,OACrBC,kBAAqB,OACrBC,WAAc,OACdC,WAAc,OACdC,IAAO,UACPvnB,UAAa,UACbwnB,SAAY,UACZC,YAAe,UACfC,UAAa,OACbC,YAAe,YACfC,gBAAmB,WACnBC,gBAAmB,WACnBC,iBAAoB,WACpBC,iBAAoB,WACpBC,qBAAwB,YACxBC,qBAAwB,YACxBC,qBAAwB,YACxBC,qBAAwB,akCvcxB9wB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GA+BxC0wB,GAA0B,WAK1B,SAASA,EAASz7D,EAAS07D,QACD,IAAlBA,IAA4BA,GAAgB,GAIhDzyD,KAAKif,eAAiB,KAItBjf,KAAK0yD,UAAW,EAIhB1yD,KAAK2yD,iBAAkB,EAIvB3yD,KAAK4yD,eAAiB,KAEtB5yD,KAAK6yD,SAAU,EACf7yD,KAAK8yD,kBAAmB,EAExB9yD,KAAK4zC,cAIL5zC,KAAKgf,aAAgBhG,SAAWkE,eAChCld,KAAK+yD,mBAAsB/5C,SAAWkE,eACtCld,KAAKif,eAAiBloB,EACtBiJ,KAAK2yD,gBAAkBF,EA4K3B,OA1KAD,EAASlxB,UAAU0xB,YAAc,SAAUJ,GACvC5yD,KAAK4yD,eAAiBA,EACtB5yD,KAAK0yD,UAAW,GAGpBF,EAASlxB,UAAU2xB,UAAY,SAAUlzD,GACrCC,KAAK4yD,eAAiB7yD,EAAKwC,OAC3BvC,KAAKkzD,cAAgBlzD,KAAKmzD,gBAAkBnzD,KAAKozD,aAAerzD,EAAKM,SACrEL,KAAK8yD,kBAAmB,EACxB9yD,KAAKgzD,YAAYjzD,EAAKwC,QACtBvC,KAAKif,eAAeo0C,iBAAiBrzD,KAAK2yD,kBAG9CH,EAASlxB,UAAUgyB,UAAY,SAAUvzD,GAGrC,OAFAC,KAAKmzD,gBAAkBpzD,EAAKM,UAEpBL,KAAK6yD,SAGjBL,EAASlxB,UAAUiyB,QAAU,SAAUxzD,GACnCC,KAAKmzD,gBAAkBpzD,EAAKM,SAE5BL,KAAK8yD,kBAAmB,EACxB9yD,KAAKif,eAAeu0C,eAAexzD,KAAK2yD,iBAExC3yD,KAAKyzD,aAETjB,EAASlxB,UAAUmyB,UAAY,WACtBzzD,KAAK8yD,kBACN9yD,KAAKif,eAAey0C,eAExB1zD,KAAKif,eAAiB,KACtBjf,KAAK4yD,eAAiB,KACtB5yD,KAAKmzD,gBAAkB,KACvBnzD,KAAK0yD,UAAW,EAChB1yD,KAAK6yD,SAAU,GAGnBL,EAASlxB,UAAUqyB,WAAa,SAAU5zD,GACtCC,KAAKmzD,gBAAkBpzD,EAAKM,UAGhCmyD,EAASlxB,UAAUsyB,WAAa,SAAU7zD,GACtCC,KAAKuzD,QAAQxzD,IAEjByyD,EAASlxB,UAAU0R,WAAa,SAAU50C,EAAOiU,EAAY9G,EAAU1S,EAAQg7D,EAAer8D,GAC1F4G,EAAQ4B,KAAKif,eAAelC,sBAAsB3e,IAAUA,EAC5D,IAQI1C,EARAo4D,GAAmBC,SAAS,EAAOrkD,OAAQ,EAAG9M,MAAM,EAAOC,OAAO,GAClEmxD,GAAiBD,SAAS,EAAOrkD,OAAQ,EAAG3M,KAAK,EAAOD,QAAQ,GAChEmxD,EAAOj0D,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAKkzD,cAAcl8D,EACnDk9D,EAAOl0D,KAAKmzD,gBAAgBl8D,EAAI+I,KAAKkzD,cAAcj8D,EACnDk9D,IAAiB/1D,aAAiBsvB,KAAiB1tB,KAAKif,eAAem1C,gBACpEp0D,KAAKif,eAAem1C,eAAeC,UACtCC,EAAWH,EAAcn0D,KAAKif,eAAem1C,eAAeG,WAAa,KACzEloD,EAAejO,aAAiBsvB,GAAel2B,EAAQ4G,EAAMiO,YAGjEtP,EADArB,EAASL,KACagR,EAAa,EAAG,GAC9BjO,EAAMrC,QACNqC,EAAMpC,QADd,IAEI04B,EAAIt2B,EAAM7F,MACVo8B,EAAIv2B,EAAM9F,OACF8F,EAAMozB,MAAMx6B,EACZoH,EAAMozB,MAAMv6B,EACxB,IAEIwnD,EAFA+V,EAAa,EACbC,EAAc,EAEdl8D,EAAS6F,aAAiBsvB,GAAetvB,EAAM2P,WAAWxV,MAAQ6F,EAAM7F,MACxED,EAAU8F,aAAiBsvB,GAAetvB,EAAM2P,WAAWzV,OAAS8F,EAAM9F,OAC9E,OAAQO,GACJ,IAAK,aAEDo7D,GADAxV,EAAOhjD,EAAuBC,GAAW1E,EAAGi9D,EAAMh9D,EAAGi9D,KACzCl9D,EACZk9D,EAAOzV,EAAKxnD,EACZw9D,EAAc,EACdR,EAAOE,EAAcn0D,KAAKif,eAAem1C,eAAeM,SAASZ,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GACjJI,EACJC,EAAO,EACPM,GAAcX,EAAct7D,MAAQ07D,GAAQ17D,EAC5C,MACJ,IAAK,aAED07D,GADAxV,EAAOhjD,EAAuBC,GAAW1E,EAAGi9D,EAAMh9D,EAAGi9D,KACzCl9D,EACZk9D,EAAOzV,EAAKxnD,EACZg9D,EAAOE,EAAcn0D,KAAKif,eAAem1C,eAAeO,UAAUb,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAClJI,EACJC,EAAO,EACPM,GAAcX,EAAct7D,MAAQ07D,GAAQ17D,EAC5Ck8D,EAAc,EACd,MACJ,IAAK,cACDD,EAAa,EAEbP,GADAxV,EAAOhjD,EAAuBC,GAAW1E,EAAGi9D,EAAMh9D,EAAGi9D,KACzCl9D,EACZk9D,EAAOzV,EAAKxnD,EACZi9D,EAAOC,EAAcn0D,KAAKif,eAAem1C,eAAeQ,QAAQd,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAChJK,EACJO,GAAeZ,EAAcv7D,OAAS47D,GAAQ57D,EAC9C,MACJ,IAAK,cACDk8D,EAAa,EAEbP,GADAxV,EAAOhjD,EAAuBC,GAAW1E,EAAGi9D,EAAMh9D,EAAGi9D,KACzCl9D,EACZk9D,EAAOzV,EAAKxnD,EACZi9D,EAAOC,EAAcn0D,KAAKif,eAAem1C,eAAeS,WAAWf,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GACnJK,EACJO,GAAeZ,EAAcv7D,OAAS47D,GAAQ57D,EAC9C,MACJ,IAAK,kBAED27D,GADAxV,EAAOhjD,EAAuBC,GAAW1E,EAAGi9D,EAAMh9D,EAAGi9D,KACzCl9D,EACZk9D,EAAOzV,EAAKxnD,EACZg9D,EAAOE,EAAcn0D,KAAKif,eAAem1C,eAAeO,UAAUb,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAClJI,EACJC,EAAOC,EAAcn0D,KAAKif,eAAem1C,eAAeQ,QAAQd,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAChJK,EACJM,GAAcX,EAAct7D,MAAQ07D,GAAQ17D,EAC5Ck8D,GAAeZ,EAAcv7D,OAAS47D,GAAQ57D,EAC9C,MACJ,IAAK,kBAED27D,GADAxV,EAAOhjD,EAAuBC,GAAW1E,EAAGi9D,EAAMh9D,EAAGi9D,KACzCl9D,EACZk9D,EAAOzV,EAAKxnD,EACZi9D,EAAQC,EAAqBn0D,KAAKif,eAAem1C,eAAeQ,QAAQd,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAAtIK,EACtBD,EAAQE,EAAqBn0D,KAAKif,eAAem1C,eAAeM,SAASZ,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAAvII,EACtBO,GAAcX,EAAct7D,MAAQ07D,GAAQ17D,EAC5Ck8D,GAAeZ,EAAcv7D,OAAS47D,GAAQ57D,EAC9C,MACJ,IAAK,kBAED27D,GADAxV,EAAOhjD,EAAuBC,GAAW1E,EAAGi9D,EAAMh9D,EAAGi9D,KACzCl9D,EACZk9D,EAAOzV,EAAKxnD,EACZi9D,EAAQC,EAAqBn0D,KAAKif,eAAem1C,eAAeS,WAAWf,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAAzIK,EACtBD,EAAQE,EAAqBn0D,KAAKif,eAAem1C,eAAeO,UAAUb,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAAxII,EACtBQ,GAAeZ,EAAcv7D,OAAS47D,GAAQ57D,EAC9Ck8D,GAAcX,EAAct7D,MAAQ07D,GAAQ17D,EAC5C,MACJ,IAAK,kBAED07D,GADAxV,EAAOhjD,EAAuBC,GAAW1E,EAAGi9D,EAAMh9D,EAAGi9D,KACzCl9D,EACZk9D,EAAOzV,EAAKxnD,EACZi9D,EAAOC,EAAcn0D,KAAKif,eAAem1C,eAAeS,WAAWf,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAAiBK,EACxKD,EAAOE,EAAcn0D,KAAKif,eAAem1C,eAAeM,SAASZ,EAAgBE,EAAcM,EAAUL,EAAMC,EAAM91D,EAAOmN,IAAa8G,EAAYwhD,GAAiBI,EACtKO,GAAcX,EAAct7D,MAAQ07D,GAAQ17D,EAC5Ck8D,GAAeZ,EAAcv7D,OAAS47D,GAAQ57D,EAGtD,OAASC,MAAOi8D,EAAYl8D,OAAQm8D,IAExCjC,EAASlxB,UAAUwzB,SAAW,SAAUj8D,GACpC,OAAQA,GACJ,IAAK,aACD,OAAS7B,EAAG,EAAGC,EAAG,IACtB,IAAK,aACD,OAASD,EAAG,EAAGC,EAAG,IACtB,IAAK,cACD,OAASD,EAAG,GAAKC,EAAG,GACxB,IAAK,cACD,OAASD,EAAG,GAAKC,EAAG,GACxB,IAAK,kBACD,OAASD,EAAG,EAAGC,EAAG,GACtB,IAAK,kBACD,OAASD,EAAG,EAAGC,EAAG,GACtB,IAAK,kBACD,OAASD,EAAG,EAAGC,EAAG,GACtB,IAAK,kBACD,OAASD,EAAG,EAAGC,EAAG,GAE1B,OAASD,EAAG,GAAKC,EAAG,KAEjBu7D,KAMPuC,GAA4B,SAAUryB,GAEtC,SAASqyB,EAAW91C,EAAgBwzC,EAAe7zC,GAC/C,IAAIynB,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAEvD,OADAqmC,EAAMznB,OAASA,EACRynB,EA2DX,OA/DA5E,GAAUszB,EAAYryB,GAOtBqyB,EAAWzzB,UAAU2xB,UAAY,SAAUlzD,GACvCC,KAAK0yD,UAAW,EAChBhwB,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,IAG1Cg1D,EAAWzzB,UAAUgyB,UAAY,SAAUvzD,GAGvC,GAFA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GAElCC,KAAK0yD,WAAsE,IAA1DvtD,GAAM5B,OAAOvD,KAAKmzD,gBAAiBnzD,KAAKozD,cAAyB,CAClF,IAAI/2C,EAAOC,GAAKyJ,UAAU/lB,KAAKozD,aAAcpzD,KAAKmzD,kBAClDnzD,KAAKif,eAAe4rC,uBAAuBxuC,EAAKrlB,EAAGqlB,EAAKplB,EAAGolB,EAAK9jB,MAAO8jB,EAAK/jB,QAEhF,OAAQ0H,KAAK6yD,SAGjBkC,EAAWzzB,UAAUiyB,QAAU,SAAUxzD,GAErC,IAA8D,IAA1DoF,GAAM5B,OAAOvD,KAAKmzD,gBAAiBnzD,KAAKozD,eAA2BpzD,KAAK0yD,SAAU,CAClF,IAAIruC,EAAS/H,GAAKyJ,UAAU/lB,KAAKozD,aAAcpzD,KAAKmzD,kBACpDnzD,KAAKif,eAAe+1C,sBAAsB3wC,OAEzC,CAED,IAAI4wC,EAAaj1D,KAAKif,eAAei2C,oBAChCl1D,KAAKif,eAAesf,gBAAmBx+B,EAAK+1B,MAAS/1B,EAAK+1B,KAAKq/B,QAW5Dp1D,GAAQA,EAAKwC,SACRvC,KAAKif,eAAe6gB,WAAW//B,EAAKwC,QAIb,IAApBxC,EAAKq1D,YACLp1D,KAAKif,eAAeo2C,SAASt1D,EAAKwC,QAJtCvC,KAAKif,eAAeq2C,eAAev1D,EAAKwC,SAAS,KAZzDvC,KAAKif,eAAetD,eAA+B,OAAhB5b,EAAKwC,QACpB,gBAAhBvC,KAAK4e,OACL5e,KAAKif,eAAes2C,YAAYx1D,EAAKwC,OAAQxC,EAAKiB,eAE7CjB,EAAKwC,QACVvC,KAAKif,eAAeq2C,eAAev1D,EAAKwC,SAAS,EAAO0yD,IAiBpEj1D,KAAK0yD,UAAW,EAChBhwB,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAGxCg1D,EAAWzzB,UAAUsyB,WAAa,SAAU7zD,GACpCC,KAAK0yD,UACL1yD,KAAKuzD,QAAQxzD,IAGdg1D,GACTvC,IAKEgD,GAA6B,SAAU9yB,GAEvC,SAAS8yB,EAAYv2C,EAAgB1T,GACjC,IAAI86B,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAEvD,OADAqmC,EAAM96B,SAAWA,EACV86B,EAqNX,OAzNA5E,GAAU+zB,EAAa9yB,GAOvB8yB,EAAYl0B,UAAU2xB,UAAY,SAAUlzD,GACxCC,KAAK0yD,UAAW,EAChB1yD,KAAKgf,iBAAc/kB,EACb+F,gBAAgBy1D,KAClBz1D,KAAKgf,YAActD,GAAY3b,EAAKwC,SAExCmgC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtC,IACImd,EAMJ,GALInd,EAAKwC,QAAUxC,EAAKwC,OAAO2a,cACdlmB,EAAGgJ,KAAKozD,aAAap8D,EAAGC,EAAG+I,KAAKozD,aAAan8D,GAC1DimB,EAAand,EAAKwC,OAAO2a,WAAW,IAGlB,sBAAlBld,KAAKuL,UAAsD,sBAAlBvL,KAAKuL,SAC9C,IAAK,IAAI7U,EAAI,EAAGA,EAAIwmB,EAAW/jB,SAAS1C,OAAQC,IAAK,CACjD,IAAI4D,EAAU4iB,EAAW/jB,SAASzC,GAC9Bg/D,EAAiBvwD,GAAMC,aAAa9K,EAAQ4V,QAA2B5V,EAAQsrB,aAAzBtrB,EAAQ4V,OAC9DylD,EAAiBxwD,GAAMC,aAAa9K,EAAQ9B,QAA2B8B,EAAQurB,aAAzBvrB,EAAQ9B,QAC9DkmC,GAAS1+B,KAAKmzD,gBAAiBuC,EAAex4C,EAAW+I,aACzDyY,GAAS1+B,KAAKmzD,gBAAiBwC,EAAez4C,EAAW+I,eACzDjmB,KAAK41D,gBAAkBt7D,GAInC0F,KAAKmzD,gBAAkBpzD,EAAKM,UAGhCm1D,EAAYl0B,UAAUiyB,QAAU,SAAUxzD,GAItC,GAHAC,KAAKif,eAAe42C,iBACpB71D,KAAKif,eAAe62C,aACpB91D,KAAKif,eAAe82C,qBAAqBh2D,GAClCC,gBAAgBy1D,KAA8C,uBAAlBz1D,KAAKuL,WACpDxL,EAAKwC,OAAO2a,WAAWzmB,QACpB0O,GAAM5B,OAAOxD,EAAKwC,OAAO2a,WAAW,GAAGnc,YAAaf,KAAKgf,YAAY9B,WAAW,GAAGnc,cACjFhB,EAAKwC,OAAO2a,WAAW,GAAGzb,WAAazB,KAAKgf,YAAY9B,WAAW,GAAGzb,YACxD,uBAAlBzB,KAAKuL,UACCpG,GAAM5B,OAAOxD,EAAKwC,OAAO2a,WAAW,GAAGrS,YAAa7K,KAAKgf,YAAY9B,WAAW,GAAGrS,cAC9E9K,EAAKwC,OAAO2a,WAAW,GAAGk1B,WAAapyC,KAAKgf,YAAY9B,WAAW,GAAGk1B,WAgCjF,KAAMpyC,gBAAgBy1D,IACJ,sBAAlBz1D,KAAKuL,UAAsD,sBAAlBvL,KAAKuL,WAC3CvL,KAAKgf,aAAejf,EAAKwC,OAAQ,CAG7BsZ,GACAhgB,KAAM,iBAAkBmgB,WAFtBN,GAAY3b,EAAKwC,QAEsBwZ,WAAY/b,KAAKgf,YAAalD,SAAU,YAErF9b,KAAKif,eAAehD,gBAAgBJ,QAxCwD,CAChG,IAAIm6C,OAAY,EACZpqD,OAAY,EACZ7L,EAAKwC,QAAUxC,EAAKwC,OAAO2a,aAC3B84C,GACIh/D,EAAGgJ,KAAKozD,aAAap8D,EAAGC,EAAG+I,KAAKozD,aAAan8D,GAEjD2U,EAAY7L,EAAKwC,OAAO2a,WAAW,IAEvC,IAAI+4C,OAAiB,EACjBC,OAAiB,EACrB,GAAIn2D,EAAKiD,OAAQ,CACb,IAAIA,EAAShD,KAAKif,eAAek3C,WAAWp2D,EAAK2B,cAAe3B,EAAKiD,OAA0B,uBAAlBhD,KAAKuL,UAAmC,GACpHvI,aAAkB48B,GAAaq2B,EAAiBjzD,EAAOnD,GAAKq2D,EAAiBlzD,EAAOnD,GAEzF,IAAI4lD,GACA75C,UAAWA,EAAWod,MAAO,YAAa7mB,WAAY+zD,EACtDE,SAAUJ,EAAWK,SAAUL,EAAWM,QAAQ,EAAOj0D,WAAY4zD,GAErEre,EAA4B,uBAAlB53C,KAAKuL,SAAoC+4B,eAAaiyB,kBAAoBjyB,eAAakyB,kBAGrG,GAFAx2D,KAAKif,eAAew3C,aAAa7e,EAAS6N,GAC1CzlD,KAAKif,eAAey3C,sBAAsB9qD,GAAW,GACjD5L,KAAKgf,aAAejf,EAAKwC,OAAQ,CACjC,IAEIsZ,GACAhgB,KAAM,oBAAqBmgB,WAAYN,GAFrCA,GAAY3b,EAAKwC,SAEsCwZ,WAAYL,GAAY1b,KAAKgf,aACtFlD,SAAU,YAEd9b,KAAKif,eAAehD,gBAAgBJ,IAc5C6mB,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAGxCy1D,EAAYl0B,UAAUgyB,UAAY,SAAUvzD,GAExC,GADA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,KAC/BC,gBAAgBy1D,MAA8C,uBAAlBz1D,KAAKuL,UACpDpG,GAAM5B,OAAOxD,EAAKwC,OAAO2a,WAAW,GAAGnc,YAAaf,KAAKgf,YAAY9B,WAAW,GAAGnc,cAChE,uBAAlBf,KAAKuL,UACFpG,GAAM5B,OAAOxD,EAAKwC,OAAO2a,WAAW,GAAGrS,YAAa7K,KAAKgf,YAAY9B,WAAW,GAAGrS,cAAgB,CACvG,IAAIurD,OAAW,EACXl5C,OAAa,EACbnd,EAAKwC,QAAUxC,EAAKwC,OAAO2a,aAC3Bk5C,GAAap/D,EAAGgJ,KAAKozD,aAAap8D,EAAGC,EAAG+I,KAAKozD,aAAan8D,GAC1DimB,EAAand,EAAKwC,OAAO2a,WAAW,IAExC,IAAI7a,OAAa,EACbF,OAAa,EACjB,GAAIpC,EAAKiD,OAAQ,CACbb,EAAapC,EAAKiD,OAAOnD,IACrBmD,EAAShD,KAAKif,eAAek3C,WAAWp2D,EAAK2B,cAAe3B,EAAKiD,OAA0B,uBAAlBhD,KAAKuL,UAAmC,cAClGq0B,IAAa58B,aAAkBy0C,GAAgBp1C,EAAaW,EAAOnD,GAAKsC,EAAaa,EAAOnD,GAEnH,IAAI4lD,GACA75C,UAAWsR,EAAY8L,MAAO,QAAS7mB,WAAYA,EACnDi0D,SAAUA,EAAUC,SAAUD,EAAUE,QAAQ,EAAOj0D,WAAYA,GAEnEu1C,EAA4B,uBAAlB53C,KAAKuL,SACf+4B,eAAaiyB,kBAAoBjyB,eAAakyB,kBAClDx2D,KAAKif,eAAew3C,aAAa7e,EAAS6N,GAG9C,GADAzlD,KAAKmzD,gBAAkBpzD,EAAKM,SACxBL,KAAKmzD,iBAAmBnzD,KAAKozD,aAAc,CAC3C,IAAI9rD,EAAQtH,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAKozD,aAAap8D,EACnD6P,EAAQ7G,KAAKmzD,gBAAgBl8D,EAAI+I,KAAKozD,aAAan8D,EACnDo/D,OAAW,EAEXM,GADAP,OAAW,OACF,GACTQ,OAAU,EACd52D,KAAKmzD,gBAAkBnzD,KAAKif,eAAe43C,iBAAiB72D,KAAKmzD,iBACjE,IAAIvnD,OAAY,EACZ7L,EAAKwC,QAAUxC,EAAKwC,OAAO2a,aAC3Bm5C,GACIr/D,EAAGgJ,KAAKmzD,gBAAgBn8D,EAAGC,EAAG+I,KAAKmzD,gBAAgBl8D,GAEvDm/D,GACIp/D,EAAGgJ,KAAKozD,aAAap8D,EAAGC,EAAG+I,KAAKozD,aAAan8D,GAEjD2U,EAAY7L,EAAKwC,OAAO2a,WAAW,IAEvC,IAAI45C,OAAe,EACfC,OAAe,EACnB,GAAIh3D,EAAKiD,OAAQ,EACTA,EAAShD,KAAKif,eAAek3C,WAAWp2D,EAAK2B,cAAe3B,EAAKiD,OAA0B,uBAAlBhD,KAAKuL,UAAmC,cAClGq0B,GAAak3B,EAAe9zD,EAAOnD,GAAKk3D,EAAe/zD,EAAOnD,GAEjF4lD,GACA75C,UAAWA,EAAWod,MAAO,WAAY7mB,WAAY40D,EACrDX,SAAUA,EAAUC,SAAUA,EAAUC,QAAQ,EAAOj0D,WAAYy0D,GAEvE,KAAM92D,gBAAgBy1D,IAAuB,CACrC7d,EAA4B,uBAAlB53C,KAAKuL,SACf+4B,eAAaiyB,kBAAoBjyB,eAAakyB,kBAClDx2D,KAAKif,eAAew3C,aAAa7e,EAAS6N,GAM9C,GAJI1lD,EAAKiD,SACL2zD,EAASjkC,GAAqB3yB,EAAKiD,QAAQ,GAC3C4zD,EAAUlkC,GAAqB3yB,EAAKiD,QAAQ,KAE3CyiD,EAAI6Q,QAAUt2D,KAAK0yD,eAA8Bz4D,IAAlB+F,KAAKuL,UAAoC,IAAVjE,GAAyB,IAAVT,EAG9E,GAFA7G,KAAK6yD,SAAW7yD,KAAKif,eAAe+3C,kBAAkBh3D,KAAKuL,SAAUxL,EAAKwC,OAAQvC,KAAKmzD,gBAAiBnzD,KAAK41D,gBAAiB71D,EAAKiD,OAAQ8zD,GAC3I92D,KAAKif,eAAe42C,iBAChB91D,EAAKiD,SAA8B,uBAAlBhD,KAAKuL,WAAsCoJ,GAAc5U,EAAKiD,SAAW6R,GAAkB+hD,KACtF,uBAAlB52D,KAAKuL,WAAsC+I,GAAavU,EAAKiD,SAAWyR,GAAiBkiD,KAAY,CACrG32D,KAAKif,eAAeg4C,cAAcj3D,KAAKuL,SAAUxL,EAAM+2D,EAAcC,IACrE/2D,KAAKif,eAAei4C,WAAWn3D,EAAKwC,OAAQvC,KAAKuL,UAErD,IAAIvI,EACJ,IADIA,EAAShD,KAAKif,eAAek3C,WAAWp2D,EAAK2B,cAAe3B,EAAKiD,OAA0B,uBAAlBhD,KAAKuL,UAAmC,cAC/FgJ,IACbD,GAAatR,IAA6B,uBAAlBhD,KAAKuL,UAC1BoJ,GAAc3R,IAA6B,uBAAlBhD,KAAKuL,WAClCvL,KAAKif,eAAek4C,QAAQn3D,KAAKuL,SAAUxL,OAG9C,CACeC,KAAKo3D,aAAap0D,IAE9BhD,KAAKif,eAAek4C,QAAQn3D,KAAKuL,SAAUxL,SAIT,IAArCC,KAAKuL,SAAS2S,QAAQ,YAC3Ble,KAAKif,eAAei4C,WAAWn3D,EAAKwC,OAAQvC,KAAKuL,UACjDvL,KAAKif,eAAe42C,kBAG5B,GAAI71D,KAAKif,eAAeo4C,0BAA2B,CAC/C,IAAIp3D,EAAUD,KAAKs3D,kBAAkBv3D,EAAKM,UAC1CL,KAAKif,eAAes4C,YAAYx3D,EAAKwC,OAAQxC,EAAKM,SAAUJ,EAAS,cAAeD,KAAK8yD,kBACzF9yD,KAAK8yD,kBAAmB,GAIhC,OADA9yD,KAAKozD,aAAepzD,KAAKmzD,iBACjBnzD,KAAK6yD,SAGjB2C,EAAYl0B,UAAUsyB,WAAa,SAAU7zD,GACzCC,KAAKuzD,QAAQxzD,IAEjBy1D,EAAYl0B,UAAUg2B,kBAAoB,SAAUj3D,GAChD,MAAO,KAAO5D,KAAKC,MAAM2D,EAASrJ,GAAK,MAAayF,KAAKC,MAAM2D,EAASpJ,IAE5Eu+D,EAAYl0B,UAAU81B,aAAe,SAAUp0D,GAC3C,SAAIyR,GAAiBzR,IAA6B,uBAAlBhD,KAAKuL,eAG5BsJ,GAAkB7R,IAA6B,uBAAlBhD,KAAKuL,YAGjCkJ,GAAiBzR,KAAY6R,GAAkB7R,KAM7DwyD,EAAYl0B,UAAUmyB,UAAY,WAC9B/wB,EAAOpB,UAAUmyB,UAAUrsB,KAAKpnC,MAChCA,KAAKozD,aAAe,KACpBpzD,KAAKuL,SAAW,MAEbiqD,GACThD,IAKEgF,GAA0B,SAAU90B,GAEpC,SAAS80B,EAASv4C,EAAgBw4C,GAC9B,IAAIpxB,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAIvD,OAFAqmC,EAAMqxB,cAAgB,KACtBrxB,EAAMsxB,WAAaF,EACZpxB,EA2NX,OAjOA5E,GAAU+1B,EAAU90B,GASpB80B,EAASl2B,UAAU2xB,UAAY,SAAUlzD,GACrC,GAAIA,EAAKwC,kBAAkBgS,IAAQxU,EAAKwC,kBAAkB6Q,GAAW,CACjEpT,KAAKif,eAAeq2C,eAAev1D,EAAKwC,QAASxC,EAAK+1B,MAAQ/1B,EAAK+1B,KAAKq/B,SACxE,IAAIn4C,GAAmBhE,SAAWkE,eAC9Bnd,EAAKwC,kBAAkBgS,GACvByI,EAAehE,MAAMliB,KAAK4kB,GAAY3b,EAAKwC,SAG3Cya,EAAeE,WAAWpmB,KAAK4kB,GAAY3b,EAAKwC,SAEpDvC,KAAKgf,YAActD,GAAYsB,QAG/Bhd,KAAKgf,YAActD,GAAY3b,EAAKwC,QAExCvC,KAAK+yD,kBAAoB/yD,KAAKif,eAAe24C,cAAc73D,EAAKwC,QACxC,SAApBvC,KAAK23D,aACL33D,KAAKwyB,OAASzyB,EAAKiB,cAAcnB,IAErC6iC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtCC,KAAK63D,eAAkB7gE,EAAG,EAAGC,EAAG,IAGpCugE,EAASl2B,UAAUiyB,QAAU,SAAUxzD,GACnC,IAAIxF,EAEA2R,EADA4rD,GAAe,EAEf97C,GAAehD,SAAWkE,eAC9B,GAAwB,SAApBld,KAAK23D,WAAuB,CAC5B,GAAI53D,EAAKwC,kBAAkBgS,IAAQxU,EAAKwC,kBAAkB6Q,GAAW,CAC7DrT,EAAKwC,kBAAkBgS,GACvByH,EAAWhD,MAAMliB,KAAK4kB,GAAY3b,EAAKwC,SAGvCyZ,EAAWkB,WAAWpmB,KAAK4kB,GAAY3b,EAAKwC,SAEhDhI,EAAMmhB,GAAYM,GAClB,IAAIlO,EAAU/N,EAAKwC,OAAOuL,QAC1BvT,EAAIwB,QAAU+R,EAAQ/R,QACtBxB,EAAIyB,QAAU8R,EAAQ9R,aAGtBzB,EAAMmhB,GAAY3b,EAAKwC,QAG3B,IADA2J,EAASlM,KAAKif,eAAelC,sBAAsBhd,EAAKwC,SAAWxC,EAAKwC,QAC7DxG,UAAYiE,KAAKgf,YAAYjjB,SAAWmQ,EAAOlQ,UAAYgE,KAAKgf,YAAYhjB,QAAS,CAC5F,IAAIg6D,OAAY,EACZ7mC,OAAY,EACZpvB,EAAKwC,SACL4sB,GAAcpzB,QAASgE,EAAKwC,OAAOuL,QAAQ/R,QAASC,QAAS+D,EAAKwC,OAAOuL,QAAQ9R,SACjFg6D,GAAcj6D,QAASgE,EAAKwC,OAAOuL,QAAQ/R,QAASC,QAAS+D,EAAKwC,OAAOuL,QAAQ9R,UAErF,IAAIypD,GACAljD,OAAQxC,EAAKwC,OAAQymB,MAAO,YAAaotC,SAAUJ,EAAWK,SAAUlnC,EACxEnsB,OAAQhD,KAAK03D,cAAeK,eAAgB/3D,KAAKmzD,gBAAiB6E,WAAW,EAAM1B,QAAQ,GAE/Ft2D,KAAKif,eAAew3C,aAAanyB,eAAa2zB,eAAgBxS,GAC9DzlD,KAAKif,eAAei5C,mBACpBJ,GAAe,EACf,IAAIj8C,GACAhgB,KAAM,kBACNmgB,WAAYN,GAAYnhB,GAAMwhB,WAAYL,GAAY1b,KAAKgf,aAAclD,SAAU,YAEvF,GAAIvhB,EAAIye,MAAM,IAAMze,EAAIye,MAAM,GAAGw/B,UAAW,CACxC,IAAI2f,GACAt8D,KAAM,cAAeigB,SAAU,WAC/BC,WAAY/b,KAAK+yD,kBAAmB/2C,WAAYhc,KAAKif,eAAe24C,cAAc73D,EAAKwC,SAE3FvC,KAAKif,eAAehD,gBAAgBk8C,GAExCn4D,KAAKif,eAAehD,gBAAgBJ,GAErB7b,KAAKif,eAAem5C,UAAUp4D,KAAKozD,aAAcpzD,KAAKmzD,gBAAiB,EAAG,GAG7F,GAFAnzD,KAAKif,eAAe62C,aACpB91D,KAAKif,eAAeo5C,oBAChBt4D,EAAKwC,QAAUvC,KAAK03D,eAAiBjiD,GAAazV,KAAK03D,gBACvD13D,KAAKif,eAAeq5C,YAAYv4D,EAAKwC,OAAQvC,KAAK03D,eAAgB,CAClE13D,KAAKif,eAAeoU,KAAKrzB,KAAK4yD,eAAgB5yD,KAAK03D,cAAe13D,KAAKmzD,iBACnE1N,GACA7lD,QAASG,EAAKwC,OAAQS,OAAQhD,KAAK03D,cAAer3D,SAAUL,KAAKmzD,gBAAiBmD,QAAQ,GAG9F,GADAt2D,KAAKif,eAAew3C,aAAanyB,eAAajR,KAAMoyB,IAC/CA,EAAI6Q,QAAUv2D,EAAKwC,QAAUvC,KAAKif,eAAes5C,oBAAoBv4D,KAAK03D,eAAgB,CAC3F,IAAIn3D,EAAQR,EAAKwC,kBAAkBkR,GAAY1T,EAAKwC,OAAOyW,MAAM,GAAKjZ,EAAKwC,OAC3EvC,KAAKif,eAAeu5C,qBAAqBx4D,KAAK03D,cAAen3D,GAC7DP,KAAKif,eAAelC,sBAAsBxc,IAG9CR,EAAKwC,QAAUvC,KAAK03D,eACpB13D,KAAKif,eAAew5C,eAAe14D,EAAKwC,OAAQvC,KAAK03D,eAEzD13D,KAAKif,eAAe42C,iBAChBiC,GACA93D,KAAKif,eAAey5C,qBAGvB,CACD18C,EAAWhD,MAAMliB,KAAK4kB,GAAY3b,EAAKwC,SACvChI,EAAMmhB,GAAYM,GACdH,GACAhgB,KAAM,sBAAuB88D,SAAU34D,KAAKwyB,OAC5CxW,WAAYN,GAAYnhB,GAAMwhB,WAAYL,GAAY1b,KAAKgf,aAAclD,SAAU,YAEvF9b,KAAKif,eAAehD,gBAAgBJ,GAExC6mB,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAGxCy3D,EAASl2B,UAAUgyB,UAAY,SAAUvzD,GACrC2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GACtC,IACImM,EADA0sD,GAAS,GAEb1sD,EAASlM,KAAKif,eAAelC,sBAAsBhd,EAAKwC,SACpDxC,EAAKwC,kBACagS,IAAQrI,aAAkBkH,GACxClH,aAAkBqI,GACdrI,EAAOnQ,UAAYiE,KAAKgf,YAAYhG,MAAM,GAAGjd,SAC7CmQ,EAAOlQ,UAAYgE,KAAKgf,YAAYhG,MAAM,GAAGhd,UAC7C48D,GAAS,GAITzzD,GAAM5B,OAAO2I,EAAOnL,YAAaf,KAAKgf,YAAY9B,WAAW,GAAGnc,cAChEoE,GAAM5B,OAAO2I,EAAOrB,YAAa7K,KAAKgf,YAAY9B,WAAW,GAAGrS,eAChE+tD,GAAS,GAKb1sD,EAAO4B,QAAQ/R,UAAYiE,KAAKgf,YAAYlR,QAAQ/R,SACpDmQ,EAAO4B,QAAQ9R,UAAYgE,KAAKgf,YAAYlR,QAAQ9R,UACpD48D,GAAS,GAGjB,IAAI5C,EACA9pD,IACA8pD,GAAcj6D,QAASmQ,EAAO4B,QAAQ/R,QAASC,QAASkQ,EAAO4B,QAAQ9R,UAE3E,IAAIypD,GACAljD,OAAQ2J,EAAQ8c,MAAO,QAASotC,SAAUJ,EAAWK,SAAUL,EAC/DhzD,OAAQjD,EAAKiD,OAAQ+0D,eAAgBh4D,EAAKM,SAAU23D,WAAW,EAAM1B,QAAQ,GAMjF,GAJIsC,GACA54D,KAAKif,eAAew3C,aAAanyB,eAAa2zB,eAAgBxS,GAElEzlD,KAAKmzD,gBAAkBpzD,EAAKM,SACJ,SAApBL,KAAK23D,WAAuB,CACpB33D,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAKozD,aAAap8D,EAC3CgJ,KAAKmzD,gBAAgBl8D,EAAI+I,KAAKozD,aAAan8D,EADnD,IAEIqQ,EAAQtH,KAAK63D,cAAc7gE,GAAKgJ,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAKozD,aAAap8D,GAC3E6P,EAAQ7G,KAAK63D,cAAc5gE,GAAK+I,KAAKmzD,gBAAgBl8D,EAAI+I,KAAKozD,aAAan8D,GAC/E+I,KAAKif,eAAe45C,gBAAgB94D,EAAMC,KAAKmzD,iBAC/CnzD,KAAKif,eAAei4C,WAAWn3D,EAAKwC,QACpCvC,KAAKif,eAAe62C,aACpB,IAAIgD,EACA3pC,OAAY,EACZ4pC,EAAe/4D,KAAKif,eAAem5C,UAAUp4D,KAAKozD,aAAcpzD,KAAKmzD,gBAAiB7rD,EAAOT,GACjG7G,KAAK63D,cAAc7gE,EAAIsQ,EAAQyxD,EAAa/hE,EAC5CgJ,KAAK63D,cAAc5gE,EAAI4P,EAAQkyD,EAAa9hE,EACxCiV,IACA4sD,GAAgB/8D,QAASmQ,EAAO4B,QAAQ/R,QAASC,QAASkQ,EAAO4B,QAAQ9R,SACzEmzB,GACIpzB,QAASmQ,EAAO4B,QAAQ/R,QAAUg9D,EAAa/hE,EAC/CgF,QAASkQ,EAAO4B,QAAQ9R,QAAU+8D,EAAa9hE,IAGnD+I,KAAK03D,eAAiB33D,EAAKiD,SAAWhD,KAAK03D,eAC3C13D,KAAKif,eAAe+5C,oBAAoBj5D,EAAKwC,OAAQxC,EAAKiD,OAAQhD,KAAK03D,eAE3E13D,KAAK03D,cAAgB33D,EAAKiD,OAC1B,IAAIi2D,GACA12D,OAAQ2J,EAAQ8c,MAAO,WAAYotC,SAAU0C,EAAazC,SAAUlnC,EACpEnsB,OAAQjD,EAAKiD,OAAQ+0D,eAAgBh4D,EAAKM,SAAU23D,WAAW,EAAM1B,QAAQ,GAGjF,GADAt2D,KAAKif,eAAew3C,aAAanyB,eAAa2zB,eAAgBgB,IACzDA,EAAM3C,OAAQ,CACft2D,KAAK6yD,SAAW7yD,KAAKif,eAAei6C,oBAAoBH,EAAa/hE,EAAG+hE,EAAa9hE,GACrF,IAAI47D,GAAY7yD,KAAKif,eAAek6C,UAAUn5D,KAAK4yD,eAAgB5yD,KAAK03D,cAAe13D,KAAKmzD,iBAC5FnzD,KAAK6yD,QAAU7yD,KAAK6yD,SAAWA,EAanC,GAXA7yD,KAAKif,eAAem6C,yBACpBp5D,KAAKif,eAAeb,uBAAuBre,GACvCC,KAAK03D,eAAkB33D,EAAKwC,SAAWvC,KAAK03D,eAC5C13D,KAAKif,eAAeq5C,YAAYv4D,EAAKwC,OAAQvC,KAAK03D,gBAAqC,WAAnB33D,EAAKwC,OAAO1C,GAC3EG,KAAKif,eAAes5C,oBAAqBx4D,EAAKwC,kBAAkBkR,GAAY1T,EAAKwC,OAAOyW,MAAM,GAAKjZ,EAAKwC,QAAQ,IACjHvC,KAAKif,eAAeo6C,gBAAgBr5D,KAAK03D,eAI7C13D,KAAKif,eAAeo5C,oBAEpBr4D,KAAKif,eAAeo4C,0BAA2B,CAC/C,IAAIp3D,EAAUD,KAAKs3D,kBAAkBv3D,EAAKwC,QAC1CvC,KAAKif,eAAes4C,YAAYx3D,EAAKwC,OAAQxC,EAAKM,SAAUJ,EAAS,WAAYD,KAAK8yD,kBACtF9yD,KAAK8yD,kBAAmB,QAI5B9yD,KAAKif,eAAeq6C,SAASv5D,EAAKwC,OAAQxC,EAAKiB,cAAejB,EAAKM,SAASrJ,EAAIgJ,KAAKozD,aAAap8D,EAAG+I,EAAKM,SAASpJ,EAAI+I,KAAKozD,aAAan8D,GAG7I,OADA+I,KAAKozD,aAAepzD,KAAKmzD,iBACjBnzD,KAAK6yD,SAEjB2E,EAASl2B,UAAUg2B,kBAAoB,SAAU/2D,GAC7C,MAAO,KAAO9D,KAAKC,MAAM6D,EAAKuN,QAAQtM,OAAOxK,GAAK,MAAayF,KAAKC,MAAM6D,EAAKuN,QAAQtM,OAAOvK,IAGlGugE,EAASl2B,UAAUsyB,WAAa,SAAU7zD,GACtCC,KAAKuzD,QAAQxzD,IAGjBy3D,EAASl2B,UAAUmyB,UAAY,WAC3B/wB,EAAOpB,UAAUmyB,UAAUrsB,KAAKpnC,MAChCA,KAAK03D,cAAgB,KACrB13D,KAAKozD,aAAe,MAEjBoE,GACThF,IAKE+G,GAA4B,SAAU72B,GAEtC,SAAS62B,EAAWt6C,GAChB,OAAOyjB,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAmFtD,OArFAyhC,GAAU83B,EAAY72B,GAKtB62B,EAAWj4B,UAAU2xB,UAAY,SAAUlzD,GAEvC,GADAC,KAAKgf,YAActD,GAAY3b,EAAKwC,QAChCvC,KAAKgf,YAAYhG,MAAM,IAAMhZ,KAAKgf,YAAYhG,MAAM,GAAGpH,SAGvD,IAAK,IADDoH,EAAQhZ,KAAKif,eAAeu6C,kBAAkBx5D,KAAKgf,YAAYhG,MAAM,OAChEtiB,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAAK,CACnC,IAAI6J,EAAOP,KAAKif,eAAew6C,WAAWzgD,EAAMtiB,GAAGmJ,IACnDG,KAAK4zC,WAAW56B,EAAMtiB,GAAGmJ,IAAM6b,GAAYnb,GAGnDmiC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,IAG1Cw5D,EAAWj4B,UAAUiyB,QAAU,SAAUxzD,GACrC,IAAImM,EAEJ,GADAA,EAASlM,KAAKif,eAAelC,sBAAsBhd,EAAKwC,SAAWxC,EAAKwC,OACpEvC,KAAKgf,YAAY3S,cAAgBH,EAAO4B,QAAQzB,YAAa,CAC7D,IAAI+pD,GAAa/pD,YAAaH,EAAO4B,QAAQzB,aACzCo5C,GACAljD,OAAQxC,EAAKwC,OAAQymB,MAAO,YAAaotC,SAAUA,EACnDC,SAAUD,EAAUE,QAAQ,GAEhCt2D,KAAKif,eAAew3C,aAAanyB,eAAao1B,aAAcjU,GAC5D,IAEI5pC,GACAhgB,KAAM,kBAAmBmgB,WAAYN,GAFnCA,GAAY3b,EAAKwC,SAEoCwZ,WAAYL,GAAY1b,KAAKgf,aAAclD,SAAU,WAC5G83B,WAAY5zC,KAAK4zC,YAErB5zC,KAAKif,eAAehD,gBAAgBJ,GACpC7b,KAAKif,eAAe42C,iBAExBnzB,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAGxCw5D,EAAWj4B,UAAUgyB,UAAY,SAAUvzD,GACvC2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GACtC,IAAImM,EAEJ,GADAA,EAASlM,KAAKif,eAAelC,sBAAsBhd,EAAKwC,SAAWxC,EAAKwC,OACpEvC,KAAKgf,YAAY3S,cAAgBH,EAAO4B,QAAQzB,YAAa,CAC7D,IAAIstD,GAAettD,YAAaH,EAAO4B,QAAQzB,aAC3CutD,GACAr3D,OAAQxC,EAAKwC,OAAQymB,MAAO,QAASotC,SAAUuD,EAAYtD,SAAUsD,EAAYrD,QAAQ,GAE7Ft2D,KAAKif,eAAew3C,aAAanyB,eAAao1B,aAAcE,GAEhE55D,KAAKmzD,gBAAkBpzD,EAAKM,SAC5B,IAAIwD,GAAa7M,EAAGkV,EAAO4B,QAAQ/R,QAAS9E,EAAGiV,EAAO4B,QAAQ9R,SAC1DxE,EAAQ2N,GAAM+H,UAAUrJ,EAAU7D,KAAKmzD,iBAAmB,GAC1D0G,EAAY75D,KAAKif,eAAe46C,UAAUriE,GAE9CA,IADAA,EAAsB,IAAdqiE,EAAkBA,EAAYriE,GACrB,KAAO,IACxB,IAAI4+D,GAAa/pD,YAAaH,EAAO4B,QAAQzB,aACzCgqD,GAAahqD,YAAa7U,GAC1BiuD,GACAljD,OAAQxC,EAAKwC,OAAQymB,MAAO,WAAYotC,SAAUA,EAClDC,SAAUA,EAAUC,QAAQ,GAMhC,GAJAt2D,KAAKif,eAAew3C,aAAanyB,eAAao1B,aAAcjU,GACvDA,EAAI6Q,SACLt2D,KAAK6yD,SAAY7yD,KAAKif,eAAe66C,oBAAoBtiE,EAAQ0U,EAAO4B,QAAQzB,cAEhFrM,KAAKif,eAAeo4C,0BAA2B,CAC/C,IAAIp3D,EAAUD,KAAKs3D,kBAAkBv3D,EAAKwC,QAC1CvC,KAAKif,eAAes4C,YAAYx3D,EAAKwC,OAAQxC,EAAKM,SAAUJ,EAAS,aAAcD,KAAK8yD,kBACxF9yD,KAAK8yD,kBAAmB,EAE5B,OAAQ9yD,KAAK6yD,SAEjB0G,EAAWj4B,UAAUg2B,kBAAoB,SAAU/2D,GAC/C,OAAO9D,KAAKC,MAAO6D,EAAK8L,YAAc,KAAM/N,WAAa,KAG7Di7D,EAAWj4B,UAAUsyB,WAAa,SAAU7zD,GACxCC,KAAKuzD,QAAQxzD,IAGjBw5D,EAAWj4B,UAAUmyB,UAAY,WAC7B/wB,EAAOpB,UAAUmyB,UAAUrsB,KAAKpnC,OAE7Bu5D,GACT/G,IAKEuH,GAA4B,SAAUr3B,GAEtC,SAASq3B,EAAW96C,EAAgBpmB,GAChC,IAAIwtC,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAIvD,OAFAqmC,EAAMwtB,cAAgB,IAAIv3C,GAC1B+pB,EAAMxtC,OAASA,EACRwtC,EA6JX,OAnKA5E,GAAUs4B,EAAYr3B,GAStBq3B,EAAWz4B,UAAU2xB,UAAY,SAAUlzD,GAIvC,GAHAC,KAAKgf,YAActD,GAAY3b,EAAKwC,QACpCvC,KAAK+yD,kBAAoB/yD,KAAKif,eAAe24C,cAAc73D,EAAKwC,QAChEmgC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GAClCC,KAAKgf,YAAYhG,MAAM,IAAMhZ,KAAKgf,YAAYhG,MAAM,GAAGpH,SAGvD,IAAK,IADDoH,EAAQhZ,KAAKif,eAAeu6C,kBAAkBx5D,KAAKgf,YAAYhG,MAAM,OAChEtiB,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAAK,CACnC,IAAI6J,EAAOP,KAAKif,eAAew6C,WAAWzgD,EAAMtiB,GAAGmJ,IACnDG,KAAK4zC,WAAW56B,EAAMtiB,GAAGmJ,IAAM6b,GAAYnb,GAGnDP,KAAKif,eAAe+6C,eAAej6D,EAAKwC,OAAQvC,KAAKnH,QACrD6pC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtCC,KAAK6zD,cAAc78D,EAAI+I,EAAKwC,OAAOuL,QAAQ/R,QAC3CiE,KAAK6zD,cAAc58D,EAAI8I,EAAKwC,OAAOuL,QAAQ9R,QAC3CgE,KAAK6zD,cAAcv7D,OAASyH,EAAKwC,OAAOuL,QAAQC,WAAWzV,OAC3D0H,KAAK6zD,cAAct7D,MAAQwH,EAAKwC,OAAOuL,QAAQC,WAAWxV,OAG9DwhE,EAAWz4B,UAAUiyB,QAAU,SAAUxzD,GACrCC,KAAKif,eAAe62C,aACpB,IAAI5pD,EAEJ,GADAA,EAASlM,KAAKif,eAAelC,sBAAsBhd,EAAKwC,SAAWxC,EAAKwC,OACpEvC,KAAKgf,YAAYjjB,UAAYmQ,EAAO4B,QAAQ/R,SAAWiE,KAAKgf,YAAYhjB,UAAYkQ,EAAO4B,QAAQ9R,QAAS,CAC5G,IAAIi+D,EAAcj6D,KAAKgzC,WAAWjzC,EAAKwC,OAAQvC,KAAKmzD,gBAAiBnzD,KAAKozD,aAAcpzD,KAAKnH,OAAQmH,KAAK6zD,eAC1G7zD,KAAK6yD,QAAU7yD,KAAKk6D,aAAaD,EAAY1hE,MAAO0hE,EAAY3hE,OAAQ0H,KAAKnH,OAAQmH,KAAKmzD,gBAAiBnzD,KAAKozD,aAAclnD,GAC9H,IAAIkqD,GACAr6D,QAASgE,EAAKwC,OAAOuL,QAAQ/R,QAASC,QAAS+D,EAAKwC,OAAOuL,QAAQ9R,QACnEzD,MAAOwH,EAAKwC,OAAOuL,QAAQC,WAAWxV,MAAOD,OAAQyH,EAAKwC,OAAOuL,QAAQC,WAAWzV,QAEpFmtD,GACAljD,OAAQxC,EAAKwC,OAAQymB,MAAO,YAC5BotC,SAAUA,EAAUC,SAAUD,EAAUE,QAAQ,GAEpDt2D,KAAKif,eAAew3C,aAAanyB,eAAa61B,WAAY1U,GAC1D,IAAIlrD,EAAMmhB,GAAY3b,EAAKwC,QACvBsZ,GACAhgB,KAAM,cAAemgB,WAAYN,GAAYnhB,GAAMwhB,WAAYL,GAAY1b,KAAKgf,aAAclD,SAAU,WACxG83B,WAAY5zC,KAAK4zC,YAIrB,GAFA5zC,KAAKif,eAAei5C,mBACpBl4D,KAAKif,eAAehD,gBAAgBJ,GAChCthB,EAAIye,MAAM,IAAMze,EAAIye,MAAM,GAAGw/B,UAAW,CACxC,IAAI4hB,GACAv+D,KAAM,cAAemgB,WAAYhc,KAAKif,eAAe24C,cAAc73D,EAAKwC,QACxEwZ,WAAY/b,KAAK+yD,kBAAmBj3C,SAAU,YAElD9b,KAAKif,eAAehD,gBAAgBm+C,GAExCp6D,KAAKif,eAAey5C,iBAGxB,OADAh2B,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAC5BC,KAAK6yD,SAGjBkH,EAAWz4B,UAAUgyB,UAAY,SAAUvzD,GACvC2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GACtC,IAAImM,EAEJ,GADAA,EAASlM,KAAKif,eAAelC,sBAAsBhd,EAAKwC,SAAWxC,EAAKwC,OACpEvC,KAAKgf,YAAYjjB,UAAYmQ,EAAO4B,QAAQ/R,SAAWiE,KAAKgf,YAAYhjB,UAAYkQ,EAAO4B,QAAQ9R,QAAS,CAC5G,IAAIo6D,GACAr6D,QAASgE,EAAKwC,OAAOuL,QAAQ/R,QAASC,QAAS+D,EAAKwC,OAAOuL,QAAQ9R,QACnEzD,MAAOwH,EAAKwC,OAAOuL,QAAQC,WAAWxV,MAAOD,OAAQyH,EAAKwC,OAAOuL,QAAQC,WAAWzV,QAEpFmtD,GACAljD,OAAQxC,EAAKwC,OAAQymB,MAAO,QAASotC,SAAUA,EAAUC,SAAUr2D,KAAK4yD,eAAgB0D,QAAQ,GAEpGt2D,KAAKif,eAAew3C,aAAanyB,eAAa61B,WAAY1U,GAE9DzlD,KAAKmzD,gBAAkBpzD,EAAKM,SAC5B,IAEIg6D,GAAYrjE,EAFRgJ,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAKkzD,cAAcl8D,EAE9BC,EADd+I,KAAKmzD,gBAAgBl8D,EAAI+I,KAAKkzD,cAAcj8D,GAEpDojE,EAAUpsD,IAAajO,KAAK4yD,eAAe9kD,QAAQzB,iBAAapS,OAAWA,EAAWogE,GAC5Er6D,KAAK4yD,eAAe9kD,QAAQC,WAAWxV,MAAQ8hE,EAAQrjE,EAAKgJ,KAAK4yD,eAAe9kD,QAAQC,WAAWxV,MACnGyH,KAAK4yD,eAAe9kD,QAAQC,WAAWzV,OAAS+hE,EAAQpjE,EAAK+I,KAAK4yD,eAAe9kD,QAAQC,WAAWzV,OAC9G+hE,EAAUr6D,KAAKs6D,WAAWD,GAC1Br6D,KAAKif,eAAe62C,aACpB,IAAImE,EAAcj6D,KAAKgzC,WAAWjzC,EAAKwC,OAAQvC,KAAKkzD,cAAelzD,KAAKmzD,gBAAiBnzD,KAAKnH,OAAQmH,KAAK6zD,eAE3G,GADA7zD,KAAK6yD,SAAY7yD,KAAKk6D,aAAaD,EAAY1hE,MAAO0hE,EAAY3hE,OAAQ0H,KAAKnH,OAAQmH,KAAKkzD,cAAelzD,KAAKmzD,gBAAiBjnD,GAC7HlM,KAAKif,eAAeo4C,0BAA2B,CAC/C,IAAIp3D,EAAUD,KAAKs3D,kBAAkBv3D,EAAKwC,QAC1CvC,KAAKif,eAAes4C,YAAYx3D,EAAKwC,OAAQxC,EAAKM,SAAUJ,EAAS,aAAcD,KAAK8yD,kBACxF9yD,KAAK8yD,kBAAmB,EAG5B,OADA9yD,KAAKozD,aAAepzD,KAAKmzD,iBACjBnzD,KAAK6yD,SAGjBkH,EAAWz4B,UAAUsyB,WAAa,SAAU7zD,GACxCC,KAAKuzD,QAAQxzD,IAEjBg6D,EAAWz4B,UAAUg2B,kBAAoB,SAAU/2D,GAC/C,MAAO,KAAO9D,KAAKC,MAAM6D,EAAKuN,QAAQtM,OAAOjJ,OAAS,MAAakE,KAAKC,MAAM6D,EAAKuN,QAAQtM,OAAOlJ,SAEtGyhE,EAAWz4B,UAAUg5B,WAAa,SAAUC,GACxC,OAAQv6D,KAAKnH,QACT,IAAK,aACD,OAAS7B,EAAGujE,EAAOvjE,EAAGC,EAAG,GAC7B,IAAK,kBACD,OAAOsjE,EACX,IAAK,cACD,OAASvjE,EAAG,EAAGC,EAAGsjE,EAAOtjE,GAC7B,IAAK,cACD,OAASD,EAAG,EAAGC,GAAIsjE,EAAOtjE,GAC9B,IAAK,kBACD,OAASD,EAAGujE,EAAOvjE,EAAGC,GAAIsjE,EAAOtjE,GACrC,IAAK,kBACD,OAASD,GAAIujE,EAAOvjE,EAAGC,GAAIsjE,EAAOtjE,GACtC,IAAK,aACD,OAASD,GAAIujE,EAAOvjE,EAAGC,EAAG,GAC9B,IAAK,kBACD,OAASD,GAAIujE,EAAOvjE,EAAGC,EAAGsjE,EAAOtjE,GAEzC,OAAOsjE,GAQXR,EAAWz4B,UAAU44B,aAAe,SAAU1F,EAAYC,EAAa57D,EAAQwZ,EAAY9G,EAAUhJ,GAC7FA,aAAkBkR,IAAoC,IAAxBlR,EAAOyW,MAAMviB,QAAgB8L,EAAOyW,MAAM,GAAG/F,YAAcK,kBAAgBknD,cAC1F,eAAX3hE,GAAsC,eAAXA,GAAsC,gBAAXA,GAAuC,gBAAXA,EAC5D,IAAhB47D,GAAoC,IAAfD,IACvBC,EAAcD,EAAa/3D,KAAK+I,IAAoB,IAAhBivD,EAAoB,EAAIA,EAA4B,IAAfD,EAAmB,EAAIA,IAIpGC,EAAcD,EADTniD,IAAe9G,EACO9O,KAAK+I,IAAIivD,EAAaD,GAGtB,GAGnC,IAAI4B,GACAr6D,QAASwG,EAAOxG,QAASC,QAASuG,EAAOvG,QACzCzD,MAAOgK,EAAOhK,MAAOD,OAAQiK,EAAOjK,QAExC0H,KAAK6yD,QAAU7yD,KAAKif,eAAew7C,mBAAmBjG,EAAYC,EAAaz0D,KAAK80D,SAAS90D,KAAKnH,SAClG,IAII4sD,EAMJ,OALAA,GAAQljD,OAAQA,EAAQymB,MAAO,WAAYotC,SAAUA,EAAUC,UAJ3Dt6D,QAASwG,EAAOxG,QAASC,QAASuG,EAAOvG,QACzCzD,MAAOgK,EAAOhK,MAAOD,OAAQiK,EAAOjK,QAG2Cg+D,QAAQ,GAC3Ft2D,KAAKif,eAAew3C,aAAanyB,eAAa61B,WAAY1U,GACtDA,EAAI6Q,QACJt2D,KAAKif,eAAew7C,mBAAmB,EAAIjG,EAAY,EAAIC,EAAaz0D,KAAK80D,SAAS90D,KAAKnH,SAExFmH,KAAK6yD,SAETkH,GACTvH,IAKEkI,GAAiC,SAAUh4B,GAE3C,SAASg4B,EAAgBz7C,EAAgBgd,GACrC,IAAIoK,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAEvD,OADAqmC,EAAMpK,aAAeA,EACdoK,EAiDX,OArDA5E,GAAUi5B,EAAiBh4B,GAO3Bg4B,EAAgBp5B,UAAU2xB,UAAY,SAAUlzD,GAC5C2iC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtCC,KAAK0yD,UAAW,GAGpBgI,EAAgBp5B,UAAUgyB,UAAY,SAAUvzD,GAC5C2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GACtC,IAAI46D,EACAp6D,GACAxE,QAASiE,KAAKmzD,gBAAgBn8D,EAAGuB,MAAO,EAAGD,OAAQ,EACnD0D,QAASgE,KAAKmzD,gBAAgBl8D,GAKlC,GAHK+I,KAAK0kB,gBACN1kB,KAAK0kB,cAAgB1kB,KAAKif,eAAe27C,WAAWr6D,IAEpDP,KAAK0yD,WAAsE,IAA1DvtD,GAAM5B,OAAOvD,KAAKmzD,gBAAiBnzD,KAAKozD,cAAyB,CAClF,IAAI/2C,EAAOC,GAAKyJ,UAAU/lB,KAAKozD,aAAcpzD,KAAKmzD,mBAClDwH,EAA2B36D,KAAKif,eAAe07C,8BAAyB1gE,OAAWA,EAAWoiB,KAE1Frc,KAAKif,eAAe47C,oBAAoB76D,KAAK0kB,cAAerI,GAGpE,OAAOs+C,GAGXD,EAAgBp5B,UAAUiyB,QAAU,SAAUxzD,GAC1C,IACIsc,EAAOC,GAAKyJ,UAAU/lB,KAAKozD,aAAcpzD,KAAKmzD,kBACvBnzD,KAAKif,eAAe07C,8BAAyB1gE,OAAWA,EAAWoiB,GAC1Frc,KAAK0kB,eAAiB1kB,KAAK0kB,yBAAyBnQ,KACpDvU,KAAKif,eAAe67C,mBAAmB96D,KAAK0kB,eAC5C1kB,KAAK0kB,cAAgB,MAEzBge,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,GACpCC,KAAK0yD,UAAW,GAGpBgI,EAAgBp5B,UAAUmyB,UAAY,WAClC/wB,EAAOpB,UAAUmyB,UAAUrsB,KAAKpnC,OAGpC06D,EAAgBp5B,UAAUsyB,WAAa,SAAU7zD,GACzCC,KAAK0yD,UACL1yD,KAAKuzD,QAAQxzD,IAGd26D,GACTlI,IAKEiD,GAAsC,SAAU/yB,GAEhD,SAAS+yB,EAAqBx2C,EAAgB1T,EAAU0wB,GACpD,IAAIoK,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,EAAgB1T,IAAavL,KAE3D,OADAqmC,EAAMpK,aAAeA,EACdoK,EAkDX,OAtDA5E,GAAUg0B,EAAsB/yB,GAOhC+yB,EAAqBn0B,UAAU2xB,UAAY,SAAUlzD,GACjD2iC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtCC,KAAK0yD,UAAW,GAGpB+C,EAAqBn0B,UAAUgyB,UAAY,SAAUvzD,GACjD,GAAIC,KAAK0yD,SAAU,CACf,IAAI9mD,GACA7K,YAAaf,KAAKmzD,gBAAiBtoD,YAAa7K,KAAKmzD,iBAEpDnzD,KAAK0kB,gBACN1kB,KAAK0kB,cAAgB1kB,KAAKif,eAAe27C,WAAWhvD,IAExD7L,EAAKwC,OAASvC,KAAK0kB,cACf3kB,EAAKiD,QACLhD,KAAKif,eAAek4C,QAAQn3D,KAAKuL,SAAUxL,GAE/CC,KAAKuL,SAAW,qBASpB,OAPKvL,KAAK0yD,WACN1yD,KAAKif,eAAe42C,iBAChB91D,EAAKwC,QAAUxC,EAAKiB,eACpBhB,KAAKif,eAAe8rC,kBAAkBhrD,GAAM,IAGpD2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,IAC9BC,KAAK6yD,SAGjB4C,EAAqBn0B,UAAUiyB,QAAU,SAAUxzD,GAC3CC,KAAK0kB,eAAiB1kB,KAAK0kB,yBAAyBtR,KACpDpT,KAAKif,eAAe67C,mBAAmB96D,KAAK0kB,eAC5C1kB,KAAK0kB,cAAgB,MAEzB1kB,KAAK0yD,UAAW,EAChBhwB,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAGxC01D,EAAqBn0B,UAAUmyB,UAAY,WACvC/wB,EAAOpB,UAAUmyB,UAAUrsB,KAAKpnC,OAGpCy1D,EAAqBn0B,UAAUsyB,WAAa,SAAU7zD,GAC9CC,KAAK0yD,UACL1yD,KAAKuzD,QAAQxzD,IAGd01D,GACTD,IAEEuF,GAAiC,SAAUr4B,GAE3C,SAASq4B,EAAgB97C,GACrB,OAAOyjB,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAuDtD,OAzDAyhC,GAAUs5B,EAAiBr4B,GAK3Bq4B,EAAgBz5B,UAAU2xB,UAAY,SAAUlzD,GAC5C2iC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtCC,KAAKif,eAAetD,iBACpB,IAAIpb,GACAnC,OAASvC,KAAM,QACfE,QAASiE,KAAKmzD,gBAAgBn8D,EAAGuB,MAAO,GAAID,OAAQ,GACpD0D,QAASgE,KAAKmzD,gBAAgBl8D,GAE7B8I,EAAKwC,SACNvC,KAAKg7D,YAAch7D,KAAKif,eAAe27C,WAAWr6D,KAI1Dw6D,EAAgBz5B,UAAUgyB,UAAY,SAAUvzD,GAE5C,GADA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GACjCC,KAAKg7D,YAQNh7D,KAAKg7D,YAAY96D,MAAMgY,YAAc,QACrClY,KAAKg7D,YAAY96D,MAAMod,gBAAkB,MACzCtd,KAAKg7D,YAAY96D,MAAM+X,KAAO,kBAVX,CACnB,IAAI1X,GACAnC,OAASvC,KAAM,QAAUE,QAASiE,KAAKmzD,gBAAgBn8D,EAAGuB,MAAO,GAAID,OAAQ,GAC7E4H,OAASod,gBAAiB,MAAOrF,KAAM,eAAiBjc,QAASgE,KAAKmzD,gBAAgBl8D,GAE1F+I,KAAKg7D,YAAch7D,KAAKif,eAAe27C,WAAWr6D,GAOtD,GAAIP,KAAK0yD,WAAsE,IAA1DvtD,GAAM5B,OAAOvD,KAAKmzD,gBAAiBnzD,KAAKozD,cAAyB,CAClF,IAAI/2C,EAAOC,GAAKyJ,UAAU/lB,KAAKozD,aAAcpzD,KAAKmzD,kBAClDnzD,KAAKif,eAAe47C,oBAAoB76D,KAAKg7D,YAAa3+C,GAE9D,OAAQrc,KAAK6yD,SAGjBkI,EAAgBz5B,UAAUiyB,QAAU,SAAUxzD,GACtCC,KAAKg7D,aACLh7D,KAAKg7D,YAAY96D,MAAMgY,YAAc,OACrClY,KAAKg7D,YAAY96D,MAAM+X,KAAO,QAG9BjY,KAAKg7D,YAAcj7D,EAAKwC,OAExBvC,KAAKg7D,cAAgBh7D,KAAKg7D,uBAAuBzmD,IAAQvU,KAAKg7D,uBAAuB5nD,KACrFpT,KAAKif,eAAeg8C,QAAQj7D,KAAKg7D,YAAah7D,KAAKmzD,iBAEvDzwB,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,GACpCC,KAAK0yD,UAAW,GAGpBqI,EAAgBz5B,UAAUmyB,UAAY,WAClC/wB,EAAOpB,UAAUmyB,UAAUrsB,KAAKpnC,OAE7B+6D,GACTvI,IAKE0I,GAA6B,SAAUx4B,GAEvC,SAASw4B,EAAYj8C,EAAgBk8C,GACjC,IAAI90B,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,IAAmBjf,KAEjD,OADAqmC,EAAM+0B,QAAUD,EACT90B,EAgDX,OApDA5E,GAAUy5B,EAAax4B,GAOvBw4B,EAAY55B,UAAU2xB,UAAY,SAAUlzD,GACxC2iC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtCC,KAAK0yD,UAAW,GAGpBwI,EAAY55B,UAAUgyB,UAAY,SAAUvzD,GAExC,GADA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GAClCC,KAAK0yD,SACL,GAAK1yD,KAAKo7D,UAAqE,IAA1Dj2D,GAAM5B,OAAOvD,KAAKmzD,gBAAiBnzD,KAAKozD,eAKxD,GAAIrzD,EAAKs7D,YAAY5kE,QAAU,EAAG,CACnC,IAAI6kE,EAAcv7D,EAAKw7D,aAAa,GAChCC,EAAcz7D,EAAKw7D,aAAa,GAChCE,EAAa17D,EAAKs7D,YAAY,GAC9BK,EAAa37D,EAAKs7D,YAAY,GAC9BhgD,EAAQrb,KAAK27D,YAAYF,EAAYC,GAAc17D,KAAK27D,YAAYL,EAAaE,GACjFI,EAAa77D,EAAKM,SACtBL,KAAKif,eAAek8C,KAAK9/C,EAAO,EAAG,EAAGugD,GACtC57D,KAAK67D,YAAYP,EAAaG,GAC9Bz7D,KAAK67D,YAAYL,EAAaE,QAdoD,CAClF,IAAI3zD,EAAO/H,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAKozD,aAAap8D,EAClD8kE,EAAO97D,KAAKmzD,gBAAgBl8D,EAAI+I,KAAKozD,aAAan8D,EACtD+I,KAAKif,eAAe88C,OAAOh0D,EAAM+zD,EAAM97D,KAAKmzD,iBAcpD,OAAQnzD,KAAK6yD,SAGjBqI,EAAY55B,UAAUiyB,QAAU,SAAUxzD,GACtC2iC,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,GACpCC,KAAK0yD,UAAW,GAGpBwI,EAAY55B,UAAUmyB,UAAY,WAC9B/wB,EAAOpB,UAAUmyB,UAAUrsB,KAAKpnC,OAEpCk7D,EAAY55B,UAAUq6B,YAAc,SAAUK,EAAQC,GAClD,IAAIjlE,EAAIilE,EAAOzhC,MAAQwhC,EAAOxhC,MAC1BvjC,EAAIglE,EAAOvhC,MAAQshC,EAAOthC,MAC9B,OAAOj+B,KAAKmmC,KAAM5rC,EAAIA,EAAMC,EAAIA,IAEpCikE,EAAY55B,UAAUu6B,YAAc,SAAUK,EAAYC,GACtDD,EAAW1hC,MAAQ2hC,EAAU3hC,MAC7B0hC,EAAWxhC,MAAQyhC,EAAUzhC,OAE1BwgC,GACT1I,IAKE4J,GAA4B,SAAU15B,GAEtC,SAAS05B,EAAWn9C,GAChB,OAAOyjB,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAOtD,OATAyhC,GAAU26B,EAAY15B,GAKtB05B,EAAW96B,UAAUiyB,QAAU,SAAUxzD,GACrCC,KAAKif,eAAeo9C,WAAWt8D,GAC/B2iC,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAEjCq8D,GACT5J,IAKE8J,GAA2B,SAAU55B,GAErC,SAAS45B,EAAUr9C,GACf,OAAOyjB,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAQtD,OAVAyhC,GAAU66B,EAAW55B,GAKrB45B,EAAUh7B,UAAUiyB,QAAU,SAAUxzD,GAC1Bm1B,OAAOqnC,KAAKx8D,EAAKiB,cAAc8sB,UAAUC,KAAM,UACrDyuC,QACJ95B,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAEjCu8D,GACT9J,IAKEiK,GAAoC,SAAU/5B,GAE9C,SAAS+5B,EAAmBx9C,GACxB,OAAOyjB,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAmEtD,OArEAyhC,GAAUg7B,EAAoB/5B,GAK9B+5B,EAAmBn7B,UAAU2xB,UAAY,SAAUlzD,GAG/C,GAFA2iC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtCC,KAAK0yD,UAAW,EACX1yD,KAAK0kB,cAeL,CACD,IAAI9oB,OAAK,EACLrB,EAAMyF,KAAK0kB,cAActmB,MAE7BxC,GAAO5E,GADP4E,EAAKrB,EAAI5B,OAAO4B,EAAI5B,OAAOlC,OAAS,IACvBO,EAAGC,EAAG2E,EAAG3E,GACtB+I,KAAK0kB,cAActmB,MAAMzF,OAAO7B,KAAK8E,OApBhB,CACrBoE,KAAKqS,YAAerb,EAAGgJ,KAAKkzD,cAAcl8D,EAAGC,EAAG+I,KAAKkzD,cAAcj8D,GACnE,IAAIsJ,GACAxE,QAASiE,KAAKmzD,gBAAgBn8D,EAC9BgF,QAASgE,KAAKmzD,gBAAgBl8D,EAC9BsB,MAAO,EAAGD,OAAQ,EAClB4H,OAASgY,YAAa,QAASC,YAAa,GAC5C/Z,OACIvC,KAAM,QACNuC,MAAO,UACPzF,SAAW3B,EAAGgJ,KAAKqS,WAAWrb,EAAGC,EAAG+I,KAAKqS,WAAWpb,IAAOD,EAAGgJ,KAAKmzD,gBAAgBn8D,EAAGC,EAAG+I,KAAKmzD,gBAAgBl8D,MAGtH+I,KAAK0kB,cAAgB1kB,KAAKif,eAAe27C,WAAWr6D,KAW5Dk8D,EAAmBn7B,UAAUgyB,UAAY,SAAUvzD,GAE/C,GADA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GAClCC,KAAK0yD,SAAU,CACf,IAAIn4D,EAAMyF,KAAK0kB,cAActmB,MAC7B,GAAI4B,KAAK0kB,eAAiB1kB,KAAKmzD,kBAC3B54D,EAAI5B,OAAO4B,EAAI5B,OAAOlC,OAAS,GAAGO,EAAIgJ,KAAKmzD,gBAAgBn8D,EAC3DuD,EAAI5B,OAAO4B,EAAI5B,OAAOlC,OAAS,GAAGQ,EAAI+I,KAAKmzD,gBAAgBl8D,EAC3D+I,KAAK0kB,cAAc5W,QAAQ8D,SAAS,GAAGxb,KAAO0C,EAAekH,KAAK0kB,cAActmB,MAAMzF,QAClFqH,KAAK0yD,WAAsE,IAA1DvtD,GAAM5B,OAAOvD,KAAKmzD,gBAAiBnzD,KAAKozD,eAAyB,CAClF,IAAI/uC,EAAS/H,GAAKyJ,SAAS/lB,KAAK0kB,cAActmB,MAAMzF,QACpDqH,KAAKif,eAAe47C,oBAAoB76D,KAAK0kB,cAAeL,IAIxE,OAAO,GAGXo4C,EAAmBn7B,UAAUiyB,QAAU,SAAUxzD,EAAM28D,GACnDh6B,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GAClCC,KAAK0yD,WACL1yD,KAAK0yD,UAAW,EACZ1yD,KAAK0kB,eACL1kB,KAAKif,eAAe67C,mBAAmB96D,KAAK0kB,gBAGpD1kB,KAAKyzD,aAGTgJ,EAAmBn7B,UAAUqyB,WAAa,SAAU5zD,GAChD2iC,EAAOpB,UAAUqyB,WAAWvsB,KAAKpnC,KAAMD,GACvCC,KAAKszD,UAAUvzD,IAGnB08D,EAAmBn7B,UAAUmyB,UAAY,WACrCzzD,KAAK0yD,UAAW,EAChB1yD,KAAK0kB,cAAgB,MAElB+3C,GACTjK,IAKEmK,GAAqC,SAAUj6B,GAE/C,SAASi6B,EAAoB19C,GACzB,OAAOyjB,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAqDtD,OAvDAyhC,GAAUk7B,EAAqBj6B,GAK/Bi6B,EAAoBr7B,UAAUgyB,UAAY,SAAUvzD,GAEhD,GADA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GAClCC,KAAK0yD,SAAU,CACf,IAAIn4D,EAAMyF,KAAK0kB,cACfnqB,EAAIsQ,YAAc7K,KAAKmzD,gBACvBnzD,KAAKif,eAAe29C,sBAAsBriE,GAE9C,OAAO,GAGXoiE,EAAoBr7B,UAAU2xB,UAAY,SAAUlzD,GAGhD,GAFA2iC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtCC,KAAK0yD,UAAW,EACX1yD,KAAK0kB,cASL,CACD,IAAIk2C,EAAa56D,KAAK0kB,cAClBpqB,OAAU,GACdA,EAAU,IAAIqS,GAAgBiuD,EAAY,YAAc/+D,KAAM,aAAc,IACpEF,MAAQqE,KAAKmzD,gBACrByH,EAAWzhE,SAASyhE,EAAWzhE,SAAS1C,OAAS,GAAK6D,MAdjC,CACrB,IAAIsR,GACA/L,GAAI,YACJhE,KAAM,WACNkF,YAAaf,KAAKmzD,gBAClBtoD,YAAa7K,KAAKmzD,iBAEtBnzD,KAAK0kB,cAAgB1kB,KAAKif,eAAe27C,WAAWhvD,KAW5D+wD,EAAoBr7B,UAAUqyB,WAAa,SAAU5zD,GACjD2iC,EAAOpB,UAAUqyB,WAAWvsB,KAAKpnC,KAAMD,GACvCC,KAAKszD,UAAUvzD,IAGnB48D,EAAoBr7B,UAAUiyB,QAAU,SAAUxzD,GAC9C2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GAClCC,KAAK0yD,UACD1yD,KAAK0kB,eACL1kB,KAAKif,eAAe67C,mBAAmB96D,KAAK0kB,eAGpD1kB,KAAKyzD,aAGTkJ,EAAoBr7B,UAAUmyB,UAAY,WACtCzzD,KAAK0kB,cAAgB,KACrB1kB,KAAK0yD,UAAW,GAEbiK,GACTnK,IAEEqK,GAA+B,SAAUn6B,GAEzC,SAASm6B,EAAc59C,GACnB,OAAOyjB,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KA6CtD,OA/CAyhC,GAAUo7B,EAAen6B,GAKzBm6B,EAAcv7B,UAAU2xB,UAAY,SAAUlzD,GAC1CC,KAAK0yD,UAAW,EAChB1yD,KAAKgf,YAActD,GAAY3b,EAAKwC,QACpCvC,KAAKsyB,aAAevyB,EAAKiB,cAAcnB,GACvC6iC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,IAG1C88D,EAAcv7B,UAAUgyB,UAAY,SAAUvzD,GAC1C2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GACtC,IAAIk0D,EAAOj0D,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAKozD,aAAap8D,EAClDk9D,EAAOl0D,KAAKmzD,gBAAgBl8D,EAAI+I,KAAKozD,aAAan8D,EAClDsJ,EAAOR,EAAKwC,OAChB,GAAIhC,aAAgBgU,GAAM,CACtB,IAAI7Y,EAASL,IACb0B,EAAarB,GAAS6E,EAAK8L,YAAa,EAAG,GAC3C,IAAIoyC,EAAOhjD,EAAuBC,GAAU1E,EAAGi9D,EAAMh9D,EAAGi9D,IACxDD,EAAOxV,EAAKznD,EACZk9D,EAAOzV,EAAKxnD,EAOhB,OALI+I,KAAK0yD,WACL1yD,KAAKif,eAAe69C,UAAU/8D,EAAKwC,OAAQxC,EAAKiB,cAAeizD,EAAMC,GACrEl0D,KAAKif,eAAe42C,kBAExB71D,KAAKozD,aAAepzD,KAAKmzD,iBACjBnzD,KAAK6yD,SAGjBgK,EAAcv7B,UAAUiyB,QAAU,SAAUxzD,GACxC,IAAIg9D,EAAYh9D,EAAKwC,OACrBvC,KAAK0yD,UAAW,EAChB,IAAIsK,GACAnhE,KAAM,4BACN88D,SAAU34D,KAAKsyB,aAAcvW,WAAYL,GAAY1b,KAAKgf,aAC1DlD,SAAU,WAAYE,WAAYN,GAAYqhD,IAElD/8D,KAAKif,eAAehD,gBAAgB+gD,GACpCt6B,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAGxC88D,EAAcv7B,UAAUsyB,WAAa,SAAU7zD,GAC3CC,KAAKuzD,QAAQxzD,IAEV88D,GACTrK,IAEEyK,GAAiC,SAAUv6B,GAE3C,SAASu6B,EAAgBh+C,EAAgBpmB,GACrC,IAAIwtC,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAEvD,OADAqmC,EAAMxtC,OAASA,EACRwtC,EAuEX,OA3EA5E,GAAUw7B,EAAiBv6B,GAO3Bu6B,EAAgB37B,UAAU2xB,UAAY,SAAUlzD,GAC5CC,KAAK0yD,UAAW,EAChB,IAAIxmD,EAAUnM,EAAKwC,OAAOyW,MAAY,OAClCjZ,EAAKwC,OAAOyW,MAAM,GAAKjZ,EAAKwC,OAAO2a,WAAW,GAClDld,KAAKsyB,aAAevyB,EAAKwC,OAAOuL,QAAQ8D,SAAS,GAAG/R,GACpDG,KAAKgf,YAActD,GAAYxP,GAC/B,IAAIoc,EAAavoB,EAAKwC,OAAOuL,QAAQ8D,SAAS,GAC9C5R,KAAK6zD,eACD78D,EAAGsxB,EAAWvsB,QACd9E,EAAGqxB,EAAWtsB,QACdzD,MAAO+vB,EAAWva,WAAWxV,MAC7BD,OAAQgwB,EAAWva,WAAWzV,QAElCoqC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,IAG1Ck9D,EAAgB37B,UAAUgyB,UAAY,SAAUvzD,GAK5C,OAJA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GAClCC,KAAK0yD,UACL1yD,KAAKk9D,aAAan9D,IAEdC,KAAK6yD,SAGjBoK,EAAgB37B,UAAUiyB,QAAU,SAAUxzD,GAC1C,IAAIic,EAAcjc,EAAKwC,OAAOyW,MAAY,OACtCjZ,EAAKwC,OAAOyW,MAAM,GAAKjZ,EAAKwC,OAAO2a,WAAW,GAClDld,KAAK0yD,UAAW,EAChB,IAAI72C,GACAhgB,KAAM,4BAA6B88D,SAAU34D,KAAKsyB,aAClDtW,WAAYN,GAAYM,GAAaD,WAAYL,GAAY1b,KAAKgf,aAAclD,SAAU,YAE9F9b,KAAKif,eAAehD,gBAAgBJ,GACpC6mB,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAGxCk9D,EAAgB37B,UAAUsyB,WAAa,SAAU7zD,GAC7CC,KAAKuzD,QAAQxzD,IAGjBk9D,EAAgB37B,UAAU47B,aAAe,SAAUn9D,GAC/C,IAAImM,EACJA,EAAUnM,EAAKwC,OAAOyW,MAAY,OAAIjZ,EAAKwC,OAAOyW,MAAM,GAAKjZ,EAAKwC,OAAO2a,WAAW,GACpF,IACIs3C,EACAC,EAFAloC,EAAcxsB,EAAKwC,OAAOuL,QAAQ8D,SAAS,GAG3C3Q,GAAWjK,EAAGu1B,EAAYxwB,QAAS9E,EAAGs1B,EAAYvwB,SAClDqQ,EAAckgB,EAAYlgB,YAE9BA,IADAA,GAAgBH,aAAkBqI,GAAQrI,EAAOG,YAAc,GAClC,KAAO,IACpC,IAAIwoB,EAAQx5B,IACZ0B,EAAa83B,EAAOxoB,EAAapL,EAAOjK,EAAGiK,EAAOhK,GAClD,IAAI4B,EAASmH,KAAKnH,OAAOi4C,MAAM,GAC3Btf,EAAQxxB,KAAKgzC,WAAWzmB,EAAavsB,KAAKkzD,cAAelzD,KAAKmzD,gBAAiBt6D,EAAQmH,KAAK6zD,cAAexnD,GAC3GrV,EAAIu1B,EAAYxwB,QAAUwwB,EAAYxe,WAAWxV,MAAQg0B,EAAYiF,MAAMx6B,EAC3EC,EAAIs1B,EAAYvwB,QAAUuwB,EAAYxe,WAAWzV,OAASi0B,EAAYiF,MAAMv6B,EAC5Eu5C,EAAaxwC,KAAK80D,SAASj8D,GAE3B8C,EAAQF,EAAuBo5B,EADnC2b,GAAex5C,EAAGA,EAAIu1B,EAAYxe,WAAWxV,MAAQi4C,EAAWx5C,EAAGC,EAAGA,EAAIs1B,EAAYxe,WAAWzV,OAASk4C,EAAWv5C,IAErHu6B,EAAMx6B,EAAI2E,EAAM3E,EAChBw6B,EAAMv6B,EAAI0E,EAAM1E,EAChBu9D,EAAahjC,EAAMj5B,MACnBk8D,EAAcjjC,EAAMl5B,OACpBk8D,EAAcA,EAAa,EAAK,EAAIA,EACpCC,EAAeA,EAAc,EAAK,EAAIA,EACtCz0D,KAAKif,eAAek+C,YAAYjxD,EAAQnM,EAAKwC,OAAO+lB,WAAYksC,EAAYC,EAAajjC,EAAOzxB,EAAKwC,QACrGvC,KAAKif,eAAe42C,kBAEjBoH,GACTzK,IAEE4K,GAAiC,SAAU16B,GAE3C,SAAS06B,EAAgBn+C,GACrB,OAAOyjB,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KA4CtD,OA9CAyhC,GAAU27B,EAAiB16B,GAK3B06B,EAAgB97B,UAAU2xB,UAAY,SAAUlzD,GAC5CC,KAAK0yD,UAAW,EAChB1yD,KAAKsyB,aAAevyB,EAAKwC,OAAOuL,QAAQ8D,SAAS,GAAG/R,GACpD,IAAIqM,EAAUnM,EAAKwC,OAAOyW,MAAY,OAClCjZ,EAAKwC,OAAOyW,MAAM,GAAKjZ,EAAKwC,OAAO2a,WAAW,GAClDld,KAAKgf,YAActD,GAAYxP,GAC/Bw2B,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,IAG1Cq9D,EAAgB97B,UAAUgyB,UAAY,SAAUvzD,GAE5C,GADA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GAClCA,EAAKwC,QACDvC,KAAK0yD,SAAU,CACf,IAAIxmD,EAASnM,EAAKwC,OAAOyW,MAAM,GAAKjZ,EAAKwC,OAAOyW,MAAM,GAClDjZ,EAAKwC,OAAO2a,WAAW,GACvBoL,OAAa,EACjBA,EAAcvoB,EAAKwC,OAAiB,WACpCvC,KAAKif,eAAesgB,YAAYrzB,EAAQoc,EAAYtoB,KAAKmzD,gBAAiBpzD,EAAKwC,QAC/EvC,KAAKif,eAAe42C,iBAI5B,OADA71D,KAAKozD,aAAepzD,KAAKmzD,iBACjBnzD,KAAK6yD,SAGjBuK,EAAgB97B,UAAUiyB,QAAU,SAAUxzD,GAC1CC,KAAK0yD,UAAW,EAChB,IAAI2K,EAAat9D,EAAKwC,OAAOyW,MAAY,OACrCjZ,EAAKwC,OAAOyW,MAAM,GAAKjZ,EAAKwC,OAAO2a,WAAW,GAC9CogD,GACAzhE,KAAM,4BAA6B88D,SAAU34D,KAAKsyB,aAClDtW,WAAYN,GAAY2hD,GACxBthD,WAAYL,GAAY1b,KAAKgf,aAAclD,SAAU,YAEzD9b,KAAKif,eAAehD,gBAAgBqhD,GACpC56B,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAGxCq9D,EAAgB97B,UAAUsyB,WAAa,SAAU7zD,GAC7CC,KAAKuzD,QAAQxzD,IAEVq9D,GACT5K,ICllDE/wB,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAwBxCy7B,GAAkC,SAAU76B,GAE5C,SAAS66B,EAAiBt+C,EAAgB1T,GACtC,IAAI86B,EAAQ3D,EAAO0E,KAAKpnC,KAAMif,GAAgB,IAASjf,KAEvD,OADAqmC,EAAM96B,SAAWA,EACV86B,EA8nBX,OAloBA5E,GAAU87B,EAAkB76B,GAO5B66B,EAAiBj8B,UAAU2xB,UAAY,SAAUlzD,GAC7CC,KAAK0yD,UAAW,EAChB1yD,KAAKgf,YAActD,GAAY3b,EAAKwC,QACpCmgC,EAAOpB,UAAU2xB,UAAU7rB,KAAKpnC,KAAMD,GACtC,IAAImd,EACAnd,EAAKwC,QAAUxC,EAAKwC,OAAO2a,aAC3BA,EAAand,EAAKwC,OAAO2a,WAAW,IAGxC,IAAK,IAAIxmB,EAAI,EAAGA,EAAIwmB,EAAW/jB,SAAS1C,OAAQC,IAAK,CACjD,IAAI4D,EAAU4iB,EAAW/jB,SAASzC,GAClC,GAAsB,eAAlBsJ,KAAKuL,SACL,IAAK,IAAIlV,EAAI,EAAGA,EAAIiE,EAAQ3B,OAAOlC,OAAS,EAAGJ,IAAK,CAChD,IAAI0U,GAAa/T,EAAG,EAAGC,EAAG,GAC1B8T,EAAS/T,GAAMsD,EAAQ3B,OAAOtC,GAAGW,EAAIsD,EAAQ3B,OAAOtC,EAAI,GAAGW,GAAK,EAChE+T,EAAS9T,GAAMqD,EAAQ3B,OAAOtC,GAAGY,EAAIqD,EAAQ3B,OAAOtC,EAAI,GAAGY,GAAK,EAC5DynC,GAAS1+B,KAAKmzD,gBAAiBpoD,EAAU,MACzC/K,KAAK41D,gBAAkBt7D,EACvB0F,KAAKw9D,aAAennE,QAKxBqoC,GAAS1+B,KAAKmzD,gBAAiB74D,EAAQqB,MAAO,MAC9CqE,KAAK41D,gBAAkBt7D,KAMvCijE,EAAiBj8B,UAAUgyB,UAAY,SAAUvzD,GAG7C,GAFA2iC,EAAOpB,UAAUgyB,UAAUlsB,KAAKpnC,KAAMD,GACtCC,KAAKmzD,gBAAkBpzD,EAAKM,SACxBL,KAAKmzD,iBAAmBnzD,KAAKozD,aAAc,CAC3C,IAAIvsD,EAAQ7G,KAAKmzD,gBAAgBl8D,EAAI+I,KAAKozD,aAAan8D,EACnDqQ,EAAQtH,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAKozD,aAAap8D,EACvDgJ,KAAKmzD,gBAAkBnzD,KAAKif,eAAe43C,iBAAiB72D,KAAKmzD,iBACjE,IAAIvnD,OAAY,EAIhB,GAHI7L,EAAKwC,QAAUxC,EAAKwC,OAAO2a,aAC3BtR,EAAY7L,EAAKwC,OAAO2a,WAAW,IAEnCld,KAAK0yD,eAA8Bz4D,IAAlB+F,KAAKuL,UAAoC,IAAVjE,GAAyB,IAAVT,EAAa,CAC5E,GAAsB,eAAlB7G,KAAKuL,SACLvL,KAAK6yD,SAAW7yD,KAAKy9D,sBAAsB7xD,EAAW5L,KAAK41D,gBAAiB51D,KAAKmzD,gBAAiBnzD,KAAKw9D,kBAEtG,CACD,IAAIjrB,EAAKvyC,KAAKmzD,gBAAgBn8D,EAAIgJ,KAAK41D,gBAAgBj6D,MAAM3E,EACzDw7C,EAAKxyC,KAAKmzD,gBAAgBl8D,EAAI+I,KAAK41D,gBAAgBj6D,MAAM1E,EACzDyoB,EAAQ9T,EAAUzS,SAAS+kB,QAAQle,KAAK41D,iBAC5C51D,KAAK6yD,SAAW7yD,KAAKif,eAAey+C,iBAAiB9xD,EAAW2mC,EAAIC,GAAI,EAAO9yB,GAEnF1f,KAAKif,eAAe42C,kBAI5B,OADA71D,KAAKozD,aAAepzD,KAAKmzD,iBACjBnzD,KAAK6yD,SAGjB0K,EAAiBj8B,UAAUiyB,QAAU,SAAUxzD,GAC3C,IAAI6L,EAIJ,GAHI7L,EAAKwC,QAAUxC,EAAKwC,OAAO2a,aAC3BtR,EAAY7L,EAAKwC,OAAO2a,WAAW,IAEnCnd,GAAQA,EAAKwC,QAAUxC,EAAK+1B,MAAQ/1B,EAAK+1B,KAAKq/B,SAAWp1D,EAAK+1B,KAAK6nC,UAA+B,aAAnB/xD,EAAU/P,KACzFmE,KAAK49D,mBAAmBhyD,EAAW5L,KAAKmzD,sBAGxC,GAAsB,eAAlBnzD,KAAKuL,UAA6BvL,KAAK41D,gBAAiB,CACxD,IAAIl2C,EAAQ9T,EAAUzS,SAAS+kB,QAAQle,KAAK41D,iBACxCx8D,EAAOwS,EAAUzS,SAASumB,EAAQ,GAClCjnB,EAAOmT,EAAUzS,SAASumB,EAAQ,GACtC,GAAIA,IAAU9T,EAAUzS,SAAS1C,OAAS,GACnCuJ,KAAK69D,kBAAkBjyD,EAAW5L,KAAK41D,iBAC1ChqD,EAAUzS,SAASgN,OAAOyF,EAAUzS,SAAS1C,OAAS,EAAG,QAGzD,GAAI2C,GAAQqD,KAAK6G,IAAIlK,EAAK3C,QAAU,EAClB,IAAVipB,GACA1f,KAAK89D,kBAAkBlyD,EAAW8T,QAGrC,GAAIjnB,EAAM,CACX,IAAIw4C,EAAM9rC,GAAM4G,eAAetT,EAAKE,OAAO,GAAIF,EAAKE,OAAO,IACvDsS,EAAaxS,EAAKhC,QAA0B,IAAhBgC,EAAKhC,OAAgBgC,EAAKhC,OAASw6C,EAC9Dx0C,KAAK6G,IAAI2H,IAAa,GACvBjL,KAAK+9D,kBAAkBnyD,EAAW8T,GAI9C1f,KAAKif,eAAe++C,eAAepyD,GAG3C,GAAI5L,KAAKgf,YAAa,CAClB,IAEInD,GACAhgB,KAAM,iBAAkBmgB,WAFtBN,GAAY3b,EAAKwC,QAEsBwZ,WAAY/b,KAAKgf,YAAalD,SAAU,YAErF9b,KAAKif,eAAehD,gBAAgBJ,GAExC6mB,EAAOpB,UAAUiyB,QAAQnsB,KAAKpnC,KAAMD,IAExCw9D,EAAiBj8B,UAAUw8B,kBAAoB,SAAUlyD,EAAW8T,GAChE,IAAIza,EAAQ2G,EAAUzS,SAASumB,EAAQ,GACnCjnB,EAAOmT,EAAUzS,SAASumB,EAAQ,GAEtC,MADcjnB,EAAKhC,QAA0B,IAAhBgC,EAAKhC,OAAgBgC,EAAKhC,OAAS0O,GAAM4G,eAAetT,EAAKE,OAAO,GAAIF,EAAKE,OAAO,MACjG,GAAI,CAChB,IAAIslE,EAAOryD,EAAUzS,SAASumB,EAAQ,GACtC9T,EAAUzS,SAASgN,OAAOuZ,EAAQ,EAAG,GACrC,IAAIplB,EAAU0F,KAAK41D,gBACO,SAAtBt7D,EAAQmI,WAA8C,UAAtBnI,EAAQmI,WACxCwC,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGO,EAAIinE,EAAKtlE,OAAO,GAAG3B,EACzDinE,EAAKtlE,OAAO,GAAG1B,EAAIgO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGQ,IAGzDgO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGQ,EAAIgnE,EAAKtlE,OAAO,GAAG1B,EACzDgnE,EAAKtlE,OAAO,GAAG3B,EAAIiO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGO,IAEzDsD,EAAQ7D,QAA6B,IAAnB6D,EAAQ7D,SAC1BuJ,KAAKsL,qBAAqBrG,GAE9BjF,KAAKsL,qBAAqB2yD,KAGlCV,EAAiBj8B,UAAUh2B,qBAAuB,SAAUhR,GACpDA,EAAQmI,YAAcnI,EAAQ7D,QAA6B,IAAnB6D,EAAQ7D,UAChD6D,EAAQ7D,OAAS0O,GAAM4G,eAAezR,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,IAChG6D,EAAQmI,UAAY0C,GAAM1C,UAAUnI,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,MAGtG8mE,EAAiBj8B,UAAUy8B,kBAAoB,SAAUnyD,EAAW8T,GAChE,IAAIplB,EAAU0F,KAAK41D,gBACf3wD,EAAQ2G,EAAUzS,SAASumB,EAAQ,GACnCu+C,EAAOryD,EAAUzS,SAASumB,EAAQ,GAClCjnB,EAAOmT,EAAUzS,SAASumB,EAAQ,GAuBtC,GAtBIjnB,EAAKhC,QAA0B,IAAhBgC,EAAKhC,QACpBmV,EAAUzS,SAASgN,OAAOuZ,EAAO,GACP,QAAtBplB,EAAQmI,WAA6C,WAAtBnI,EAAQmI,WACvCw7D,EAAKtlE,OAAO,GAAG1B,EAAIqD,EAAQ3B,OAAO,GAAG1B,EACrCgO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGO,EAAIinE,EAAKtlE,OAAO,GAAG3B,IAGzDinE,EAAKtlE,OAAO,GAAG3B,EAAIsD,EAAQ3B,OAAO,GAAG3B,EACrCiO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGQ,EAAIgnE,EAAKtlE,OAAO,GAAG1B,KAI7D2U,EAAUzS,SAASgN,OAAOuZ,EAAQ,EAAG,GACX,QAAtBplB,EAAQmI,WAA6C,WAAtBnI,EAAQmI,UACvCwC,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGO,EAAIyB,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGO,EAG9EiO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGQ,EAAIwB,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGQ,EAElF+I,KAAKsL,qBAAqBrG,GAC1B3K,EAAQ7D,OAAS6D,EAAQmI,UAAY,MAErCwC,GAASg5D,IACTh5D,EAAMxO,OAAS0O,GAAM4G,eAAe9G,EAAMtM,OAAO,GAAIslE,EAAKtlE,OAAO,IACjEsM,EAAMxC,UAAY0C,GAAM1C,UAAUwC,EAAMtM,OAAO,GAAIslE,EAAKtlE,OAAO,IAC3DslE,EAAKxnE,QAA0B,IAAhBwnE,EAAKxnE,QAAc,CAClCwnE,EAAKxnE,OAAS0O,GAAM4G,eAAe9G,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAIwnE,EAAKtlE,OAAOslE,EAAKtlE,OAAOlC,OAAS,IAC3G,IAAIyZ,EAASjL,EAAMtM,OACfH,EAASylE,EAAKtlE,OAClBslE,EAAKx7D,UAAY0C,GAAM1C,UAAUyN,EAAOA,EAAOzZ,OAAS,GAAI+B,EAAOA,EAAO/B,OAAS,MAI/F8mE,EAAiBj8B,UAAUs8B,mBAAqB,SAAUhyD,EAAWjQ,GAGjE,IAAK,IAFDuiE,EACAV,EACK9mE,EAAI,EAAGA,EAAIkV,EAAUzS,SAAS1C,OAAQC,IAAK,CAE5CgoC,GAAS/iC,GADTrB,EAAWsR,EAAkB,SAAElV,IACPiF,MAAOiQ,EAAUqa,cACzCu3C,EAAe9mE,EACfwnE,GAAY,GAGpB,GAAIA,QAA8BjkE,IAAjBujE,GACb,GAAI5xD,EAAUzS,UAAYyS,EAAUzS,SAASqkE,IAA2D,aAA1C5xD,EAAUzS,SAASqkE,GAAc3hE,KAAqB,CAChH,IAAIvB,EAAUsR,EAAUzS,SAASqkE,GAC7BW,EAAWvyD,EAAUzS,SAASqkE,EAAe,GAC7CW,IACAvyD,EAAUzS,SAASgN,OAAOq3D,EAAc,GACxCW,EAASxlE,OAAO,GAAK2B,EAAQ3B,OAAO,SAI3C,CACD,IAAI+mB,EAAQ1f,KAAKo+D,UAAUxyD,EAAWjQ,GACtC,GAAIiQ,EAAUzS,UAAYyS,EAAUzS,SAASumB,IAA6C,aAAnC9T,EAAUzS,SAASumB,GAAO7jB,KAAqB,CAC9FvB,EAAUsR,EAAUzS,SAASumB,GAAjC,IACI2+C,EAAS,IAAI1xD,GAAgBf,EAAW,YAAc/P,KAAM,WAAYF,MAAOA,IAAS,GAC5F0iE,EAAO1lE,OAAO,GAAK2B,EAAQ3B,OAAO,GAClC0lE,EAAO1lE,OAAO,GAAKgD,EACnBrB,EAAQ3B,OAAO,GAAKgD,EACpBiQ,EAAUzS,SAASgN,OAAOuZ,EAAO,EAAG2+C,GACpCH,GAAY,GAGhBA,GACAl+D,KAAKif,eAAe++C,eAAepyD,IAG3C2xD,EAAiBj8B,UAAU88B,UAAY,SAAUxyD,EAAWjQ,GAExD,IAAK,IADD2iE,KACK5nE,EAAI,EAAGA,EAAIkV,EAAUzS,SAAS1C,OAAQC,IAAK,CAChD,IAAI4D,EAAUsR,EAAUzS,SAASzC,GAC7B2lB,EAAOC,GAAKyJ,UAAUzrB,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO,KAC5D0jB,EAAK2J,QAAQpa,EAAUqa,YACnB5J,EAAK7Y,cAAc7H,IACnB2iE,EAAiBxnE,KAAKwD,GAG9B,GAAgC,IAA5BgkE,EAAiB7nE,OACjB,OAAOmV,EAAUzS,SAAS+kB,QAAQogD,EAAiB,IAS9C,IANDjP,OAAQ,EACRvoD,OAAM,EACN4Y,OAAQ,EACR3mB,OAAM,EACNiqD,OAAI,EACJruB,OAAI,EACR,IAASj+B,EAAI,EAAGA,EAAI4nE,EAAiB7nE,OAAQC,IACzCqC,EAAMulE,EAAiB5nE,GACvBssD,GAAKrnD,EAAM1E,EAAI8B,EAAIJ,OAAO,GAAG1B,IAAM8B,EAAIJ,OAAO,GAAG1B,EAAI0E,EAAM1E,GAC3D09B,GAAKh5B,EAAM3E,EAAI+B,EAAIJ,OAAO,GAAG3B,IAAM+B,EAAIJ,OAAO,GAAG3B,EAAI2E,EAAM3E,GAC3Dq4D,EAAQ5yD,KAAK6G,IAAI0/C,EAAIruB,GACX,IAANj+B,IACAoQ,EAAMuoD,EACN3vC,EAAQ,GAER2vC,EAAQvoD,IACRA,EAAMuoD,EACN3vC,EAAQhpB,GAGhB,OAAOkV,EAAUzS,SAAS+kB,QAAQogD,EAAiB5+C,KAG3D69C,EAAiBj8B,UAAUm8B,sBAAwB,SAAUljE,EAAKD,EAASqB,EAAO6hE,GAC9E,IAAInzD,GAAiBrT,EAAG,EAAGC,EAAG,GAC9BoT,EAAarT,GAAMsD,EAAQ3B,OAAO6kE,GAAcxmE,EAAIsD,EAAQ3B,OAAO6kE,EAAe,GAAGxmE,GAAK,EAC1FqT,EAAapT,GAAMqD,EAAQ3B,OAAO6kE,GAAcvmE,EAAIqD,EAAQ3B,OAAO6kE,EAAe,GAAGvmE,GAAK,EAC1F,IAAIu7C,EAAK72C,EAAM1E,EAAIoT,EAAapT,EAC5Bs7C,EAAK52C,EAAM3E,EAAIqT,EAAarT,EAC5B0oB,EAAQnlB,EAAIpB,SAAS+kB,QAAQ5jB,GAC7B8Q,GAAS,EACM9Q,EAAQ3B,OAAO,GAAG1B,EAAEkD,QAAQ,GAAOG,EAAQ3B,OAAO,GAAG1B,EAAEkD,QAAQ,GAuBlF,OApBe,IAAXulB,IACc,IAAVA,GAAuC,IAAxBnlB,EAAIpB,SAAS1C,QAA0C,IAA1B6D,EAAQ3B,OAAOlC,QAC3DipB,EAAQ1f,KAAKu+D,YAAYhkE,EAAKD,EAASi4C,EAAIC,EAAI9yB,GAC/CtU,GAAS,GAEJsU,IAAUnlB,EAAIpB,SAAS1C,OAAS,GAA4B,OAAtB6D,EAAQmI,WAAyC,OAAnBnI,EAAQ7D,OAIlE,IAAVipB,IACLA,EAAQ1f,KAAKw+D,mBAAmBjkE,EAAKD,EAASi4C,EAAIC,EAAI9yB,GACtDtU,GAAS,IALTsU,EAAQ1f,KAAKy+D,mBAAmBlkE,EAAKD,EAASi4C,EAAIC,EAAIgrB,GACtDpyD,GAAS,GAMTA,IACApL,KAAK41D,gBAAkBt7D,EAAUC,EAAIpB,SAASumB,GAC9C1f,KAAKw9D,aAAe,GAExBx9D,KAAK0+D,uBAAuBnkE,EAAKmlB,EAAO6yB,EAAIC,GAC5CxyC,KAAKif,eAAe++C,eAAezjE,KAEhC,GAEXgjE,EAAiBj8B,UAAUi9B,YAAc,SAAUhkE,EAAKD,EAASi4C,EAAIC,EAAInR,GACrE,IACI5+B,EAEAwuC,EADA93C,KAEA1C,EAAS0O,GAAM4G,eAAezR,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO,IAChEgmE,EAAmBx5D,GAAM1C,UAAUnI,EAAQ3B,OAAO,GAAI2B,EAAQ3B,OAAO,IAQzE,OAPAQ,EAASrC,KAAK,IAAIyP,GAAkBhM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWk8D,EAAkBloE,OAAQA,EAAS,IAAK,IAC9HgM,EAAanI,EAAQ3B,OAAO,GAAG1B,IAAMqD,EAAQ3B,OAAO,GAAG1B,EAAOu7C,EAAK,EAAK,SAAW,MAAWD,EAAK,EAAK,QAAU,OAClHtB,EAAO32C,EAAQ3B,OAAO,GAAG3B,IAAMsD,EAAQ3B,OAAO,GAAG3B,EAAKw7C,EAAKD,EAC3Dp5C,EAASrC,KAAK,IAAIyP,GAAkBhM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQw6C,IAAO,IAChH93C,EAASrC,KAAK,IAAIyP,GAAkBhM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWk8D,EAAkBloE,OAAQA,EAAS,IAAK,IAC9H8D,EAAIpB,SAAWA,EAASgjC,OAAO5hC,EAAIpB,UAC3BkoC,EAAO,GAGnBk8B,EAAiBj8B,UAAUk9B,mBAAqB,SAAUjkE,EAAKD,EAASi4C,EAAIC,EAAInR,GAC5E,IAAI5+B,EACAhM,EAEAmoE,EACAl/C,EACAm/C,EAHA1lE,KAIJ,GAAIoB,EAAI2lC,cAAgB5lC,EAAQ7D,QAAU8D,EAAIpB,SAAS,GAAGR,OAAOlC,OAAS,EAAG,CACzE8D,EAAIpB,SAASgN,OAAO,EAAG,GAEvB,IAAK,IADD/M,OAAO,EACF1C,EAAI,EAAGA,EAAI4D,EAAQ3B,OAAOlC,OAAS,EAAGC,IAAK,CAChD,IAAIu6C,EAAM9rC,GAAM4G,eAAezR,EAAQ3B,OAAOjC,GAAI4D,EAAQ3B,OAAOjC,EAAI,IACjE+V,EAAMtH,GAAM1C,UAAUnI,EAAQ3B,OAAOjC,GAAI4D,EAAQ3B,OAAOjC,EAAI,IAEvC,KADzBmoE,EAAY,IAAIt4D,GAAkBhM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWgK,EAAKhW,OAAQw6C,IAAO,IAC1Fx6C,UACN2C,GAA4B,QAAnBA,EAAKqJ,WAA0C,WAAnBrJ,EAAKqJ,UAI1Co8D,EAAUp8D,UAAY+vC,EAAK,EAAI,SAAW,MAH1CqsB,EAAUp8D,UAAY8vC,EAAK,EAAI,QAAU,QAMjDn5C,EAAOylE,EACP1lE,EAASrC,KAAK+nE,GAElBtkE,EAAIpB,SAAWA,EAASgjC,OAAO5hC,EAAIpB,UACnCumB,EAAQ,MAEP,CACDk/C,GAAc/iE,KAAM,aAAc4G,UAAWnI,EAAQmI,UAAWhM,OAAQ6D,EAAQ7D,OAAS,GACzF0C,EAASrC,KAAK,IAAIyP,GAAkBhM,EAAK,WAAYqkE,GAAW,IACtC,WAAtBtkE,EAAQmI,WAAgD,QAAtBnI,EAAQmI,WAC1ChM,EAASgG,KAAK6G,IAAIivC,GAClB9vC,EAAY8vC,EAAK,EAAI,QAAU,SAG/B97C,EAASgG,KAAK6G,IAAIkvC,GAClB/vC,EAAY+vC,EAAK,EAAI,SAAW,OAEpCqsB,EAAY,IAAIt4D,GAAkBhM,EAAK,YAAcsB,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQA,IAAU,GACjH0C,EAASrC,KAAK+nE,GACd,IAAIC,EAAUvkE,EAAIpB,SAAS,GACvB2lE,GAAWA,EAAQroE,SACnBqoE,EAAQroE,OAAUgM,IAAcq8D,EAAQr8D,UAAaq8D,EAAQroE,OAASA,EAASqoE,EAAQroE,OAASA,GAEpGipB,EAAQ,EACRplB,EAAQ7D,OAAS,EAAI6D,EAAQ7D,OAAS,EACtC8D,EAAIpB,SAAWA,EAASgjC,OAAO5hC,EAAIpB,UAEvC,OAAOumB,GAEX69C,EAAiBj8B,UAAUo9B,uBAAyB,SAAUnkE,EAAKmlB,EAAO6yB,EAAIC,GAC1E,IAAI56C,EAAU2C,EAAIpB,SAASumB,GACvBnU,EAAW3T,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,GAClD4b,EAAaza,EAAQe,OAAO,GAC5BomE,GAAe,EACnB,GAAqB,eAAjBnnE,EAAQiE,KAAuB,CAC/BjE,EAAQe,OAAO,GAAK0Z,EACpBza,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,GAAK8U,EAK5C,GAJWhR,EAAIpB,SAASumB,EAAQ,KAE5Bq/C,EAAe/+D,KAAKg/D,sBAAsBzsB,EAAIC,EAAIj4C,EAAKmlB,IAEvDnlB,EAAIpB,SAAS1C,OAAS,EAAIipB,GAASq/C,EAAc,CACjD,IAAIE,EAAc1kE,EAAIpB,SAASumB,EAAQ,GACvC1f,KAAKk/D,kBAAkB3kE,EAAK3C,EAASqnE,EAAa1sB,EAAIC,MAIlE+qB,EAAiBj8B,UAAUm9B,mBAAqB,SAAU7yD,EAAWtR,EAASi4C,EAAIC,EAAIgrB,GAClF,IACIv4D,EACA45D,EACA5tB,EACAxkC,EAJAiT,EAAQ9T,EAAUzS,SAAS+kB,QAAQ5jB,GAKvCsR,EAAUzS,SAASgmE,MACnB,IAAIlB,EAAOryD,EAAUzS,SAASyS,EAAUzS,SAAS1C,OAAS,GAC1DwO,EAASg5D,GAAsB,eAAdA,EAAKpiE,KAAyBoiE,EAAO,KACtD,IAAK,IAAIvnE,EAAI,EAAGA,EAAI4D,EAAQ3B,OAAOlC,OAAS,EAAGC,IAC3Cu6C,EAAM9rC,GAAM4G,eAAezR,EAAQ3B,OAAOjC,GAAI4D,EAAQ3B,OAAOjC,EAAI,IACjE+V,EAAMtH,GAAM1C,UAAUnI,EAAQ3B,OAAOjC,GAAI4D,EAAQ3B,OAAOjC,EAAI,IAC5DmoE,EAAY,IAAIt4D,GAAkBqF,EAAW,YAAc/P,KAAM,aAAcpF,OAAQw6C,EAAKxuC,UAAWgK,IAAO,GAC9Gb,EAAUzS,SAASrC,KAAK+nE,GACxB55D,EAAQ45D,EAEZ,IAAIO,EAAM5B,EACV,IAA8B,IAA1BljE,EAAQ3B,OAAOlC,QAAgB2oE,IAAQ9kE,EAAQ3B,OAAOlC,OAAS,KAC3DwO,IACAA,EAAMxO,QAAU,QAERwD,IAARmlE,GAAmB,CACnB,IAAIf,OAAS,EACbptB,EAAM,EAAI9rC,GAAM4G,eAAezR,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAI6D,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,IAAM,EACvHgW,EAAMtH,GAAM1C,UAAUnI,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,GAAI6D,EAAQ3B,OAAO2B,EAAQ3B,OAAOlC,OAAS,IACxG4nE,EAAS,IAAI93D,GAAkBqF,EAAW,YAAc/P,KAAM,aAAcpF,OAAQw6C,EAAKxuC,UAAWgK,IACpGb,EAAUzS,SAASrC,KAAKunE,GAGhC,IAAIgB,EAAU,IAAI94D,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,GAInF,OAHA+P,EAAUzS,SAASrC,KAAKuoE,GACxBr/D,KAAKif,eAAe++C,eAAepyD,GACnC8T,GAAgB89C,GAGpBD,EAAiBj8B,UAAUg+B,kBAAoB,SAAUlmE,EAAMwS,EAAW8T,EAAO6yB,EAAIC,GACjF,GAAc,IAAV9yB,GAAsC,IAAvBtmB,EAAKT,OAAOlC,QAAgB2C,EAAK3C,OAAS,EAAG,CAC5D,IAAI8L,EAASqJ,EAAU5K,cAAcpI,QACjChB,EAAUgU,EAAUzS,SAASumB,GAC7BjnB,EAAOmT,EAAUzS,SAASumB,EAAQ,GAClC2+C,OAAS,EACT/jE,KACJ+jE,EAAS,IAAI93D,GAAkBqF,EAAW,YAAc/P,KAAM,aAAcpF,OAAQ,GAAIgM,UAAWrJ,EAAKqJ,YACxGnI,EAAQxD,KAAKunE,GACb,IAAIptB,OAAM,EAENA,EADsB,SAAtBr5C,EAAQ6K,UACD7K,EAAQe,OAAO,GAAG3B,GAAKuL,EAAO2F,WAAWlR,EAAI,IAEzB,UAAtBY,EAAQ6K,UACLF,EAAOgF,YAAYvQ,EAAI,GAAMY,EAAQe,OAAO,GAAG3B,EAE5B,WAAtBY,EAAQ6K,UACLF,EAAOqF,aAAa3Q,EAAI,GAAMW,EAAQe,OAAO,GAAG1B,EAGjDW,EAAQe,OAAO,GAAG1B,GAAKsL,EAAOkB,UAAUxM,EAAI,IAE7CW,EAAQ6K,UAClB47D,EAAS,IAAI93D,GAAkBqF,EAAW,YAAc/P,KAAM,aAAcpF,OAAQw6C,EAAKxuC,UAAW7K,EAAQ6K,YAC5GnI,EAAQxD,KAAKunE,GACbzmE,EAAQnB,OAASmB,EAAQnB,OAASw6C,EAC9Bx4C,GAAQA,EAAKhC,QAAUgC,EAAKgK,YACxBhK,EAAKgK,YAAcrJ,EAAKqJ,UACxBhK,EAAKhC,QAAU,GAEVgC,EAAKgK,YAAcuC,GAAqB5L,EAAKqJ,aAClDhK,EAAKhC,QAAU,KAGvBmV,EAAUzS,SAAWmB,EAAQ6hC,OAAOvwB,EAAUzS,UAC9C6G,KAAK41D,gBAAkBhqD,EAAUzS,SAAS,KAGlDokE,EAAiBj8B,UAAU09B,sBAAwB,SAAUzsB,EAAIC,EAAI5mC,EAAW8T,GAC5E,IAAI9nB,EAAUgU,EAAUzS,SAASumB,GAC7BtmB,EAAOwS,EAAUzS,SAASumB,EAAQ,GACtCtmB,EACKT,OAAOS,EAAKT,OAAOlC,OAAS,GAAKmB,EAAQe,OAAO,GACrD,IAAI4mE,GAAgB3zD,EAAUnK,UAAuC,KAA3BmK,EAAUs0B,aAChD6+B,GAAe,EAyBnB,MAxBkB,eAAd3lE,EAAKyC,OACkB,WAAnBzC,EAAKqJ,UACLrJ,EAAK3C,QAAU+7C,EAES,QAAnBp5C,EAAKqJ,UACVrJ,EAAK3C,QAAU+7C,EAES,UAAnBp5C,EAAKqJ,UACVrJ,EAAK3C,QAAU87C,EAGfn5C,EAAK3C,QAAU87C,EAEY,KAA3B3mC,EAAUs0B,cAAuB9mC,EAAK3C,OAAS,EAC/CuJ,KAAKs/D,kBAAkBlmE,EAAMwS,EAAW8T,EAAO6yB,EAAIC,GAE9C5mC,EAAUnK,UAAuC,KAA3BmK,EAAUs0B,cAAuB9mC,EAAK3C,OAAS,GAAe,IAAVipB,IAC/Eq/C,GAAe,EACf/+D,KAAKw/D,mBAAmB5zD,EAAWhU,IAEnC2nE,GACAv/D,KAAKy/D,uBAAuBrmE,IAG7B2lE,GAEXxB,EAAiBj8B,UAAUm+B,uBAAyB,SAAUnlE,GACtDA,EAAQ7D,OAAS,IACjB6D,EAAQmI,UAAYuC,GAAqB1K,EAAQmI,WACjDnI,EAAQ7D,SAAW,IAG3B8mE,EAAiBj8B,UAAU49B,kBAAoB,SAAU3kE,EAAK3C,EAASa,EAAM85C,EAAIC,GACpE56C,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,GAChDgC,EAAKE,OAAO,GAAKf,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,GACpDgC,GAAsB,eAAdA,EAAKoD,OACTpD,EAAKhC,QAA0B,IAAhBgC,EAAKhC,UACG,SAAnBgC,EAAKgK,WAA2C,UAAnBhK,EAAKgK,UACvB,IAAP8vC,IACA95C,EAAKhC,OAA6B,UAAnBgC,EAAKgK,UAAyBhK,EAAKhC,OAAS87C,EAAK95C,EAAKhC,OAAS87C,GAC1E95C,EAAKhC,QAA0B,IAAhBgC,EAAKhC,SACpBuJ,KAAKy/D,uBAAuBhnE,IAKzB,IAAP+5C,IACA/5C,EAAKhC,OAA6B,WAAnBgC,EAAKgK,UAA0BhK,EAAKhC,OAAS+7C,EAAK/5C,EAAKhC,OAAS+7C,GAC3E/5C,EAAKhC,QAA0B,IAAhBgC,EAAKhC,SACpBuJ,KAAKy/D,uBAAuBhnE,MAOpD8kE,EAAiBj8B,UAAUk+B,mBAAqB,SAAU5zD,EAAWgqD,GACjE,IAKI70D,EALA2e,EAAQ9T,EAAUzS,SAAS+kB,QAAQ03C,GACnC8J,GAAc,EACd9nE,EAAUgU,EAAUzS,SAASumB,GAC7BtmB,EAAOwS,EAAUzS,SAASumB,EAAQ,GAGtC,GAAItmB,EAAK3C,OAAS,GAAKmV,EAAUnK,SAAU,CACvC,IAAIS,EAAa0J,EAAU5K,cAAcpI,QACrCO,KACAylE,OAAY,EACZe,GAAoB,EACxB3/D,KAAKy/D,uBAAuB7nE,GAC5B,IAAIa,EAAOmT,EAAUzS,SAASumB,EAAQ,GAClCkgD,EAAWh0D,EAAUzS,SAASumB,EAAQ,GAO1C,OANIjnB,GACAuH,KAAKy/D,uBAAuBhnE,GAE5BmnE,GACA5/D,KAAKy/D,uBAAuBG,GAExBxmE,EAAKqJ,WACT,IAAK,MACL,IAAK,SACD1B,EAAenJ,EAAQnB,OAAS,GAA2B,SAAtBmB,EAAQ6K,UAAwBP,EAAWgG,WAAahG,EAAWqF,YACpG3P,EAAQnB,OAASyL,EAAW3J,MAAQ,EAChCkE,KAAK6G,IAAIlK,EAAK3C,QAAUyL,EAAW5J,OAAS,IAC5Cc,EAAK3C,OAAS0O,GAAM4G,eAAe7J,EAAWjB,OAAQ7H,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,IACvFmB,EAAQe,OAAO,GAAG3B,EAAI+J,EAAY/J,EAClCY,EAAQnB,OAAS0O,GAAM4G,eAAenU,EAAQe,OAAO,GAAIf,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,IAChGmB,EAAQnB,QAAU,GAClBipE,GAAc,IAIdjnE,GAAQA,EAAKgK,WAAahK,EAAKhC,SAC/BgC,EAAKE,OAAO,GAAG1B,EAAI8J,EAAY9J,EAC/BwB,EAAKE,OAAO,GAAG3B,EAAIyB,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGO,EAA2B,UAAtBY,EAAQ6K,UAChE1B,EAAY/J,EAAI,GAAK+J,EAAY/J,EAAI,IAE7C0oE,GAAc,EACdC,GAAoB,GAExB,MACJ,IAAK,OACL,IAAK,QACD5+D,EAAenJ,EAAQnB,OAAS,GAA2B,QAAtBmB,EAAQ6K,UAAuBP,EAAWuB,UAAYvB,EAAW0F,aAClGhQ,EAAQnB,OAASyL,EAAW5J,OAAS,EACjCmE,KAAK6G,IAAIlK,EAAK3C,QAAUyL,EAAW3J,MAAQ,IAC3Ca,EAAK3C,OAAS0O,GAAM4G,eAAe7J,EAAWjB,OAAQ7H,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,IACvFmB,EAAQe,OAAO,GAAG1B,EAAI8J,EAAY9J,EAClCW,EAAQnB,OAAS0O,GAAM4G,eAAenU,EAAQe,OAAO,GAAIf,EAAQe,OAAOf,EAAQe,OAAOlC,OAAS,IAChGmB,EAAQnB,QAAU,GAClBipE,GAAc,IAIdjnE,GAAQA,EAAKgK,WAAahK,EAAKhC,SAC/BgC,EAAKE,OAAO,GAAG3B,EAAI+J,EAAY/J,EAC/ByB,EAAKE,OAAO,GAAG1B,EAAIwB,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGQ,EAA2B,WAAtBW,EAAQ6K,UAChE1B,EAAY9J,EAAI,GAAK8J,EAAY9J,EAAI,IAE7CyoE,GAAc,EACdC,GAAoB,GAIhC3/D,KAAKy/D,uBAAuBrmE,GAC5B4G,KAAKy/D,uBAAuB7nE,GACxB8nE,IACAd,GAAc/iE,KAAM,aAAc4G,UAAW7K,EAAQ6K,UAAWhM,OAAQ,IACxE0C,EAASrC,KAAK,IAAIyP,GAAkBqF,EAAW,WAAYgzD,GAAW,IAClEe,IACIlnE,GAAQA,EAAKgK,WAAahK,EAAKhC,SAC/BgC,EAAKhC,OAAS0O,GAAM4G,eAAetT,EAAKE,OAAO,GAAIF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,KAEpFmpE,GAAYA,EAASn9D,WAAam9D,EAASnpE,SAC3CmpE,EAASnpE,OAAS0O,GAAM4G,eAAetT,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAImpE,EAASjnE,OAAOinE,EAASjnE,OAAOlC,OAAS,KAEzHmV,EAAUzS,SAASgN,OAAOuZ,EAAQ,EAAG,IAEzC9T,EAAUzS,SAAWA,EAASgjC,OAAOvwB,EAAUzS,WAEnD6G,KAAK41D,gBAAmB,EAAsBhqD,EAAUzS,SAASumB,EAAQ,GACrE9T,EAAUzS,SAASumB,EAAQ,GAC/B1f,KAAKif,eAAe++C,eAAepyD,KAG3C2xD,EAAiBj8B,UAAUu8B,kBAAoB,SAAUjyD,EAAWgqD,GAChE,GAAIhqD,EAAUwmC,UAAuC,KAA3BxmC,EAAUymC,aAAqB,CACrD,IAAIwtB,OAAa,EACbC,OAAW,EACXC,OAAa,EACbC,OAAW,EACXpnE,EAAUgT,EAAUlK,cAAc9I,QAClCqnE,EAAgBrK,EAAgBj9D,OAAO,GACvCunE,EAAetK,EAAgBj9D,OAAOi9D,EAAgBj9D,OAAOlC,OAAS,GACxC,UAA9Bm/D,EAAgBnzD,WAAuD,SAA9BmzD,EAAgBnzD,WACzDo9D,GAAe7oE,EAAGipE,EAAcjpE,EAAGC,EAAGgpE,EAAchpE,GACpD6oE,GACI9oE,EAAkC,SAA9B4+D,EAAgBnzD,UAAwBy9D,EAAalpE,EAAI4B,EAAQL,MAAQ,EAAI2nE,EAAalpE,EAAI4B,EAAQL,MAAQ,EAClHtB,EAAGipE,EAAajpE,GAEpB8oE,GAAe/oE,EAAG4B,EAAQqI,OAAOjK,EAAGC,EAAG2B,EAAQqI,OAAOhK,EAAI2B,EAAQN,QAClE0nE,GAAahpE,EAAG4B,EAAQqI,OAAOjK,EAAGC,EAAG2B,EAAQqI,OAAOhK,EAAI2B,EAAQN,UAGhEunE,GAAe7oE,EAAGipE,EAAcjpE,EAAGC,EAAGgpE,EAAchpE,GACpD6oE,GACI9oE,EAAGkpE,EAAalpE,EAChBC,EAAkC,WAA9B2+D,EAAgBnzD,UAA0By9D,EAAajpE,EAAI2B,EAAQN,OAAS,EAAI4nE,EAAajpE,EAAI2B,EAAQN,OAAS,GAE1HynE,GAAe/oE,EAAG4B,EAAQqI,OAAOjK,EAAI4B,EAAQL,MAAOtB,EAAG2B,EAAQqI,OAAOhK,GACtE+oE,GAAahpE,EAAG4B,EAAQqI,OAAOjK,EAAI4B,EAAQL,MAAOtB,EAAG2B,EAAQqI,OAAOhK,IAIxE,OAAQ2N,IAFM1N,GAAI2oE,EAAW7oE,EAAGG,GAAI0oE,EAAW5oE,EAAGG,GAAI0oE,EAAS9oE,EAAGK,GAAIyoE,EAAS7oE,IACjEC,GAAI6oE,EAAW/oE,EAAGG,GAAI4oE,EAAW9oE,EAAGG,GAAI4oE,EAAShpE,EAAGK,GAAI2oE,EAAS/oE,IACvC,QAE5C,OAAO,GAOXsmE,EAAiBj8B,UAAUsa,QAAU,aAQrC2hB,EAAiBj8B,UAAUqa,cAAgB,WAIvC,MAAO,wBAEJ4hB,GACT/K,IC1nBE2N,GAAqC,WAErC,SAASA,EAAoBjhE,EAAS+f,GAClCjf,KAAKogE,cAAgB,OAErBpgE,KAAKw8D,OAAQ,EACbx8D,KAAKqgE,WAAY,EACjBrgE,KAAKsgE,aAAc,EACnBtgE,KAAK0yD,UAAW,EAChB1yD,KAAKugE,iBAAkB,EACvBvgE,KAAKd,QAAU,KACfc,KAAKwgE,aAAe,KACpBxgE,KAAKgW,KAAO,KACZhW,KAAKygE,UAAY,KACjBzgE,KAAKd,QAAUA,EACfc,KAAKwgE,aAAe,IAAIE,GACxB1gE,KAAKif,eAAiBA,EAqtC1B,OAntCAtC,OAAO8lB,eAAe09B,EAAoB7+B,UAAW,UACjDgC,IAAK,WACD,OAAOtjC,KAAKogE,eAEhB96B,IAAK,SAAU1mB,GACPA,IAAW5e,KAAKogE,gBACW,aAAvBpgE,KAAKogE,gBACLpgE,KAAKd,QAAQ8W,OAASC,eAAaO,SAC/BxW,KAAKgW,MACLhW,KAAKgW,KAAKu9C,SAAUlzD,SAAUL,KAAKmzD,kBAEvCnzD,KAAKgW,KAAO,MAED,WAAX4I,GAAkC,gBAAXA,EACvB5e,KAAKd,QAAQyhE,cAAcx0C,UAAUC,IAAI,oBAEb,WAAvBpsB,KAAKogE,eAAqD,gBAAvBpgE,KAAKogE,eAC7CpgE,KAAKd,QAAQyhE,cAAcx0C,UAAU2vB,OAAO,oBAEhD97C,KAAKogE,cAAgBxhD,EACM,SAAvB5e,KAAKogE,eAAmD,WAAvBpgE,KAAKogE,eACpCpgE,KAAKd,QAAQgY,eAAiBC,gBAAcypD,SAI9C5gE,KAAKd,QAAQgY,eAAiBlX,KAAKd,QAAQgY,gBAAkBC,gBAAcC,WAH3EpX,KAAKd,QAAQgY,eAAiBlX,KAAKd,QAAQgY,eAAiBC,gBAAcC,WAK9EpX,KAAKd,QAAQmqD,UAAUrpD,KAAKd,QAAQohC,UAAU1hB,EAAQ5e,KAAK0yD,aAGnEnvB,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAe09B,EAAoB7+B,UAAW,WACjDgC,IAAK,WACD,OAAOtjC,KAAKqgE,WAEhB/6B,IAAK,SAAUutB,GACX7yD,KAAKqgE,UAAYxN,EACb7yD,KAAK6yD,QACL7yD,KAAKd,QAAQmqD,UAAU,eAGvBrpD,KAAKd,QAAQmqD,UAAUrpD,KAAKd,QAAQohC,UAAUtgC,KAAK4e,OAAQ5e,KAAK0yD,YAGxEnvB,YAAY,EACZC,cAAc,IAGlB28B,EAAoB7+B,UAAUu/B,iBAAmB,SAAU1zD,GACvD,IAAI2zD,EACA/kE,EACAC,GAC6B,IAA7BmR,EAAEtR,KAAKqiB,QAAQ,UAEfniB,GADA+kE,EAAW3zD,GACQ4zD,eAAe,GAAGtmC,QACrCz+B,EAAU8kE,EAASC,eAAe,GAAGpmC,UAGrC5+B,EAAUoR,EAAEstB,QACZz+B,EAAUmR,EAAEwtB,SAEhB,IAAIt6B,EAAW,IAAIud,GACnBvd,EAAWqhB,GAAa1hB,KAAKd,SAC7B,IAAI8hE,EAAehhE,KAAKd,QAAQU,QAAQioB,wBAOxC,OANA9rB,EAAUA,EAAUiE,KAAKd,QAAQyhE,cAAcM,WAAaD,EAAap+D,KAAOvC,EAAS9H,MACzFyD,EAAUA,EAAUgE,KAAKd,QAAQyhE,cAAcO,UAAYF,EAAaj+D,IAAM1C,EAAS/H,OACvFyD,GAAWiE,KAAKd,QAAQwf,SAASjZ,UAAU4V,MAC3Crf,GAAWgE,KAAKd,QAAQwf,SAASjZ,UAAU4V,MAC3Ctf,GAAWiE,KAAKd,QAAQwf,SAASjZ,UAAU8sC,GAC3Cv2C,GAAWgE,KAAKd,QAAQwf,SAASjZ,UAAU+sC,IAClCx7C,EAAG+E,EAAS9E,EAAG+E,IAK5BmkE,EAAoB7+B,UAAU6/B,aAAe,SAAUC,GACnD,IAAI/6B,EAAQrmC,KAOZ,OANIA,KAAKqhE,UACLC,aAAathE,KAAKqhE,UAEtBrhE,KAAKqhE,SAAW95B,WAAW,WACvBlB,EAAMk7B,mBAAmBl7B,EAAMnnC,QAAQU,UACxC,MACI,GAKXugE,EAAoB7+B,UAAUigC,mBAAqB,SAAU3hE,GACzD,IAAIkY,EAAYyJ,SAASC,eAAe5hB,EAAQC,IAChD,GAAIiY,EAAW,CACX,IAAItW,EAASsW,EAAU+P,wBACvB7nB,KAAKd,QAAQwf,SAAS8iD,gBAAgBhgE,EAAOjJ,MAAOiJ,EAAOlJ,QAC3D,IAAI+H,EAAW,IAAIud,GACnBvd,EAAWqhB,GAAa1hB,KAAKd,SAC7B,IAAI3G,EAAQyH,KAAKd,QAAQuiE,aAAazhE,KAAKd,QAAQ3G,MAAO8H,EAAS9H,OAC/DD,EAAS0H,KAAKd,QAAQuiE,aAAazhE,KAAKd,QAAQ5G,OAAQ+H,EAAS/H,QACrE0H,KAAKd,QAAQyhE,cAAczgE,MAAM3H,MAAQA,EACzCyH,KAAKd,QAAQyhE,cAAczgE,MAAM5H,OAASA,EAC1C0H,KAAKd,QAAQwf,SAASgjD,UACtB1hE,KAAKd,QAAQ8wD,kBACThwD,KAAKd,QAAQ+iB,cAAcc,YAC3BL,GAAY1iB,KAAKd,WAK7BihE,EAAoB7+B,UAAUqgC,gBAAkB,WAC5C,OAAS3hE,KAAKgW,gBAAgBwhD,IAAYx3D,KAAKgW,gBAAgBujD,KAAev5D,KAAKsgE,aAGvFH,EAAoB7+B,UAAUsgC,aAAe,WACzC,GAAiD,IAA5C5hE,KAAKd,QAAQke,cAAcpE,MAAMviB,QAAiE,IAAjDuJ,KAAKd,QAAQke,cAAcF,WAAWzmB,OAAe,CACvG,IAAIorE,KACJA,EAAOA,EAAK1lC,OAAOn8B,KAAKd,QAAQke,cAAcpE,MAAOhZ,KAAKd,QAAQke,cAAcF,YAChFld,KAAK6yD,QAAW7yD,KAAKsgE,aAA+B,IAAhBuB,EAAKprE,QAAgBuJ,KAAKgW,gBAAgB++C,KAAexhD,GAAQsuD,EAAK,MAGlH1B,EAAoB7+B,UAAUwgC,gBAAkB,SAAU9+D,EAAQ++D,GAC9D,IAAIC,EAAgBh/D,EACpB,GAAIg/D,EACA,KAAoC,OAA7BA,EAAcxkD,YAAqB,CACtC,GAAuC,iBAA5BwkD,EAAc7nC,aAClB4nC,IAAoE,IAAvDC,EAAc7nC,UAAUjc,QAAQ,mBAC3C6jD,IAAyE,IAA5DC,EAAc7nC,UAAUjc,QAAQ,wBAClD,OAAO8jD,EAGPA,EAAgBA,EAAcxkD,WAI1C,OAAO,MAEX2iD,EAAoB7+B,UAAU2gC,UAAY,SAAUb,GAChD,OAAOc,UAAUC,SAASrqE,MAAM,OAASspE,EAAIgB,QAAUhB,EAAIjM,SAE/DgL,EAAoB7+B,UAAU+gC,qBAAuB,SAAUtiE,GAC3DC,KAAKd,QAAQ+f,eAAem6C,yBAC5B,IAAI74D,EAAOP,KAAKd,QAAQke,cAAcpE,MAAM,GAC5C,GAAIzY,GAAQA,EAAKuX,WAAqC,UAAxBvX,EAAKuX,UAAUjc,MAAwC,kBAApB0E,EAAKnC,MAAMvC,KAA0B,CAElG,IADY0E,EAAKuN,QAAQtM,OACdgC,cAAcxD,KAAKmzD,iBAAkB,CAC5C,IAAIhrC,EAAUnoB,KAAKd,QAAQojE,uBAAwBtrE,EAAGgJ,KAAKmzD,gBAAgBn8D,EAAI,GAAIC,EAAG+I,KAAKmzD,gBAAgBl8D,IACvG+L,EAAShD,KAAKd,QAAQqjE,qBAAqBp6C,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,UAC1E,GAAI1vD,GAAUA,EAAO6X,UAAa7X,EAAO6X,WAAata,EAAKV,GAAK,CAC5D,IAAIwe,EAA+E,aAAlEre,KAAKd,QAAQ0b,UAAU5X,EAAO6X,UAAU/C,UAAUhH,YACnEsN,GAAuBpb,EAAO8K,QAASuQ,EAAYte,EAAKM,SAAUL,KAAKd,SAAS,OAKhGihE,EAAoB7+B,UAAUkhC,YAAc,SAAUt1C,EAAK3nB,GACvD,OAAQ28D,UAAUC,SAASrqE,MAAM,QAAkB,cAARo1B,GAAiC,WAAV3nB,GAEtE46D,EAAoB7+B,UAAUmhC,mBAAqB,SAAUrB,GACzD,IAKI70D,EACAC,EACAvE,EACAK,EARAtR,EAAIoqE,EAAIrlE,QACR9E,EAAImqE,EAAIplE,QACR2kE,EAAgB3gE,KAAKd,QAAQyhE,cAC7BroE,EAASqoE,EAAc7oC,aACvBv/B,EAAQooE,EAAc9oC,YAM1B,SAAIv/B,EAASqoE,EAAc+B,eAEvBn2D,GAAYvV,EAAIuB,EAAQ,GAAKtB,EAAG,GAChCuV,GAAaxV,EAAGuB,EAAOtB,EAAG,GAC1BgR,GAAejR,EAAIuB,EAAQ,GAAKtB,EAAGqB,GACnCgQ,GAAgBtR,EAAGuB,EAAOtB,EAAGqB,GACpBgkB,GAAKyJ,UAAUxZ,EAASC,EAAUvE,EAAYK,IAC5C9E,eAAgBxM,EAAGA,EAAGC,EAAGA,UAIpCsB,EAAQooE,EAAcgC,cACtBp2D,GAAYvV,EAAG,EAAGC,EAAIqB,EAAS,IAC/BkU,GAAaxV,EAAGuB,EAAOtB,EAAIqB,EAAS,IACpC2P,GAAejR,EAAG,EAAGC,EAAGqB,GACxBgQ,GAAgBtR,EAAGuB,EAAOtB,EAAGqB,GACpBgkB,GAAKyJ,UAAUxZ,EAASC,EAAUvE,EAAYK,IAC5C9E,eAAgBxM,EAAGA,EAAGC,EAAGA,OAO5CkpE,EAAoB7+B,UAAUshC,qBAAuB,WACjD,IAEIC,EAFAx8B,EAAQrmC,KAGZ6iE,EAAuBC,YAAY,SAAU/iE,GACzCsmC,EAAMnnC,QAAQ6jE,qBAAqBF,IAH3B,IAKZt7B,WAAW,WACPlB,EAAMnnC,QAAQ8jE,qBAAsB,GAN5B,KAShB7C,EAAoB7+B,UAAU2xB,UAAY,SAAUmO,GAChDphE,KAAKw8D,OAAQ,EACb,IAAIjiC,EAEJ,GADAA,EAAU6mC,EAAI7mC,QACVv6B,KAAKyiE,mBAAmBrB,GAGxB,OAFAphE,KAAKijE,aAAc,OACnB7B,EAAI8B,iBAGR,IAAKljE,KAAKmjE,qBAAqB/B,IAASzqD,GAAgB3W,KAAKd,UACxDiX,GAAWnW,KAAKd,WAAauX,GAAYzW,KAAKd,SAI/C,GAHoB,WAAhBc,KAAK4e,QAAuC,SAAhB5e,KAAK4e,QACjC5e,KAAKd,QAAQkkE,qBAAqBpjE,KAAKqjE,aAActjC,iBAAeC,OAAO,KAEzEhgC,KAAKgW,gBAAgBymD,IAAsBz8D,KAAKgW,gBAAgB2mD,KAC/C,IAAfyE,EAAIkC,QAAgC,IAAhBlC,EAAImC,QAO3B,IAAwB,IAAlBvjE,KAAK0yD,WAA2C,IAArB1yD,KAAKsgE,cACtCtgE,KAAKgW,gBAAgBymD,IAAsBz8D,KAAKgW,gBAAgB2mD,IACjE38D,KAAKsgE,aAAc,EACnBtgE,KAAKygE,aACLzgE,KAAKwjE,kBAAkBxjE,KAAKmzD,gBAAiBnzD,KAAKygE,WAClDzgE,KAAKygE,UAAUpgE,SAAWL,KAAKmzD,gBAC/BnzD,KAAKgW,KAAKi9C,UAAUjzD,KAAKygE,eAExB,CACDzgE,KAAKsgE,aAAc,EACnBtgE,KAAKmzD,gBAAkBnzD,KAAKozD,aAAepzD,KAAK6gE,iBAAiBO,GACjEphE,KAAKygE,aACDzgE,KAAKd,QAAQukE,cAAgBzjE,KAAKyiE,mBAAmBrB,KACrDphE,KAAKd,QAAQwkE,UACb1jE,KAAKd,QAAQukE,aAAc,GAE/B,IAAIzgE,OAAS,EACTmlB,EAAUnoB,KAAKwgE,aAAa8B,sBAAsBtiE,KAAKmzD,gBAAiBnzD,KAAKd,QAASc,KAAKygE,UAAW,KAAMzgE,KAAK4e,QACjHrkB,EAAMyF,KAAKwgE,aAAa+B,qBAAqBviE,KAAKd,QAASipB,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,SAAU1yD,KAAKygE,UAAWW,GAChHuC,EAAgB,KACR,OAARppE,IACAopE,EAAgB3jE,KAAKd,QAAQ0kE,sBAAsBrpE,EAAKyF,KAAKmzD,oBAEzDnwD,EAAShD,KAAKif,eAAek3C,WAAWwN,EAAeppE,IAG/DyF,KAAK4e,OAAS5e,KAAKd,QAAQ2kE,mBAAmBtpE,EAAKopE,EAAe3jE,KAAKmzD,gBAAiBnwD,GAExF,IAAImyD,EAAUn1D,KAAKiiE,UAAUb,GAa7B,GAZIjM,GAAWiM,EAAIzD,UAAY39D,KAAKd,QAAQggC,2BACxCl/B,KAAK4e,OAAS,cAERu2C,IAAWiM,EAAIzD,UAAexnD,GAAWnW,KAAKd,WACpDc,KAAK4e,OAAS,UAElB5e,KAAKgW,KAAOhW,KAAKd,QAAQ4kE,QAAQ9jE,KAAK4e,QACjC5e,KAAKgW,OACNhW,KAAK4e,OAAS,SACd5e,KAAKgW,KAAOhW,KAAKd,QAAQ4kE,QAAQ9jE,KAAK4e,SAE1C5e,KAAKwjE,kBAAkBxjE,KAAKmzD,gBAAiBnzD,KAAKygE,WAC9CtL,GAAWiM,EAAIzD,SAAU,CACzB,IAAI7nC,EAAQq/B,GAAWiM,EAAIzD,UAAcxI,QAASA,EAASwI,SAAUyD,EAAIzD,WAAexI,SAAS,GACjGn1D,KAAKygE,UAAU3qC,KAAOA,EAE1B91B,KAAKygE,UAAUpgE,SAAWL,KAAKmzD,gBAC/BnzD,KAAKgW,KAAKi9C,UAAUjzD,KAAKygE,WACzBzgE,KAAK+jE,kBAAqBxhE,OAAQvC,KAAKygE,UAAUl+D,OAAQvB,cAAehB,KAAKygE,UAAUz/D,eACvFhB,KAAK+jE,iBAAiB1jE,SAAWL,KAAKmzD,gBACtCnzD,KAAK+jE,iBAAiBjuC,KAAO91B,KAAKygE,UAAU3qC,KAC5C91B,KAAK0yD,UAAW,EACC,eAAb0O,EAAIvlE,OACA0+B,GAAWA,EAAQ9jC,QAAU,IAC7BuJ,KAAKgkE,eAAiB3pC,GAAgBr6B,KAAKgkE,eAAgB5C,EAAK7mC,IAE/DA,GACD6mC,EAAI8B,sBA/DiC,CAEhCljE,KAAKd,QAAmBc,KAAKmzD,gBAAwBiO,EAAImC,QAAuBvjE,KAAKygE,UAAUtjD,aAE5Gnd,KAAK0yD,UAAW,EAChB1yD,KAAKgW,KAAKu9C,QAAQvzD,KAAKygE,WA+D1BzgE,KAAK8hE,gBAAgBV,EAAIp+D,SAAYhD,KAAK8hE,gBAAgBV,EAAIp+D,QAAQ,IAAWu3B,GAClF6mC,EAAI8B,kBAIZ/C,EAAoB7+B,UAAU2iC,gBAAkB,SAAU92D,EAAG5S,IACrDyF,KAAKgW,gBAAgBymD,IAAsBz8D,KAAKgW,gBAAgB2mD,KAChE38D,KAAKgW,KAAKs9C,UAAUtzD,KAAKygE,WAEzBzgE,KAAKd,QAAQosB,eAAe44C,cAC5BlkE,KAAKmkE,gBAAgBh3D,GAGhBnN,KAAK6yD,SACL7yD,KAAKgW,KAAKs9C,UAAUtzD,KAAKygE,WAG9BzgE,KAAKygE,UAAUz9D,SACfhD,KAAKqjE,aAAerjE,KAAKygE,UAAUz9D,QAEvC,IAAIohE,IAASpkE,KAAKygE,UAAUz9D,kBAAkBuR,IAAQha,aAAega,IACjEvU,KAAKgW,gBAAgBw/C,IACrBx1D,KAAKd,QAAQkkE,qBAAqBpjE,KAAKqjE,wBAAwB9uD,GAAOvU,KAAKqjE,aAAerjE,KAAKqkE,UAAWtkC,iBAAeiK,QAAUjK,iBAAeC,MAAOokC,GAEzJpkE,KAAKqjE,wBAAwB9uD,IAC1BvU,KAAKqkE,qBAAqB9vD,IAAQvU,KAAKqkE,WAAarkE,KAAKqkE,UAAUxkE,KAAOG,KAAKqjE,aAAaxjE,IAC/FG,KAAKd,QAAQkkE,qBAAqBpjE,KAAKqkE,UAAWtkC,iBAAeiK,QAAUjK,iBAAeC,OAAO,GAErGhgC,KAAKqjE,aAAee,EAAS,KAAO7pE,EACpCyF,KAAKqkE,UAAYD,EAAS,KAAO7pE,GAGrC4lE,EAAoB7+B,UAAUgjC,YAAc,SAAU/pE,GAClD,GAAoB,gBAAhByF,KAAK4e,QAA4B5e,KAAKygE,UAAUz/D,gBAC/ChB,KAAKygE,UAAUz/D,yBAAyB0sB,IAAe1tB,KAAKygE,UAAUz/D,yBAAyBiuB,IAAqB,CACrH,IAAI3G,EAAatoB,KAAKif,eAAek3C,WAAWn2D,KAAKygE,UAAUz/D,cAAehB,KAAKygE,UAAUl+D,SACxFu9B,GAAW9/B,KAAKd,QAASopB,GAAY,EAAOtoB,KAAKygE,UAAUz/D,gBAAkBuS,GAAQ+U,KACtFtoB,KAAK4e,OAAS,YACd5e,KAAKgW,KAAOhW,KAAK8jE,QAAQ9jE,KAAK4e,QAC9B5e,KAAKgW,KAAKi9C,UAAUjzD,KAAK+jE,wBAGxBxwD,GAAQhZ,IAAQuY,GAAUvY,IAAQyF,KAAK+jE,kBAC5C/jE,KAAK+jE,iBAAiBxhE,QAA0B,WAAhBvC,KAAK4e,UAChCkhB,GAAW9/B,KAAKd,QAASc,KAAKygE,UAAUl+D,QAAQ,IACjDvC,KAAKygE,UAAUl+D,kBAAkBkR,IACjCzT,KAAKwjE,kBAAkBxjE,KAAKmzD,gBAAiBnzD,KAAKygE,WAEhDlmE,aAAe6Y,OAAe7Y,aAAe6Y,KAC7CsrB,GAAS1+B,KAAKmzD,gBAAiB54D,EAAIwG,YAAaxG,EAAI0rB,aAClDyY,GAAS1+B,KAAKmzD,gBAAiB54D,EAAIsQ,YAAatQ,EAAI0rB,eACxDjmB,KAAK4e,OAAS,QAElB5e,KAAKgW,KAAOhW,KAAK8jE,QAAQ9jE,KAAK4e,QAC9B5e,KAAKgW,KAAKi9C,UAAUjzD,KAAK+jE,oBAIjC5D,EAAoB7+B,UAAUgyB,UAAY,SAAUnmD,EAAGotB,GAEnD,GADAv6B,KAAKw8D,OAAQ,EACTx8D,KAAKijE,YACL91D,EAAE+1D,sBAGN,GAAIvsD,GAAgB3W,KAAKd,UAAaiX,GAAWnW,KAAKd,WAAauX,GAAYzW,KAAKd,SAAW,CAC3Fc,KAAKmzD,gBAAkBnzD,KAAK6gE,iBAAiB1zD,GAC7C,IAAIgb,EAAUnoB,KAAKd,QAAQojE,sBAAsBtiE,KAAKmzD,iBAClD54D,EAAMyF,KAAKd,QAAQqjE,qBAAqBp6C,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,WzC7RnF,SAAiCxzD,EAASs/C,GAClCt/C,EAAQ+iB,cAAcc,aACtB7jB,EAAQqjB,OAAOg8B,gBAAgBr/C,EAAQqjB,OAAO3iB,QAAS4+C,EAAct/C,EAAQwf,SAASkE,kBACtF1jB,EAAQsjB,OAAO+7B,gBAAgBr/C,EAAQsjB,OAAO5iB,QAAS4+C,EAAct/C,EAAQwf,SAASoE,iByC2RlFyhD,CAAiBvkE,KAAKd,QAASc,KAAKmzD,iBACpC,IAAIvsB,GAAQ,EACR5jC,OAAS,EAUb,GATe,cAAXmK,EAAEtR,OACF0+B,EAAUptB,EAAEotB,UACGA,EAAQ9jC,OAAS,IAC5BuJ,KAAKwkE,cAAgBnqC,GAAgBr6B,KAAKwkE,cAAer3D,EAAGotB,GACxC,cAAhBv6B,KAAK4e,SACLgoB,GAAQ,KAI0C,IAA1DzhC,GAAM5B,OAAOvD,KAAKmzD,gBAAiBnzD,KAAKozD,eAA2BpzD,KAAK0yD,SAAU,CAClF,IAAyB,IAArB1yD,KAAKsgE,aAAyB15B,EAAO,CACrC5mC,KAAKygE,aACL,IAAIkD,EAAgB,KACR,OAARppE,IACAopE,EAAgB3jE,KAAKd,QAAQ0kE,sBAAsBrpE,EAAKyF,KAAKmzD,iBACzD54D,IAAQyF,KAAKqjE,cACTrjE,KAAKqjE,eACLrjE,KAAKykE,eACLzkE,KAAKd,QAAQkkE,qBAAqBpjE,KAAKqjE,aAActjC,iBAAeC,OAAO,IAE3EzlC,aAAega,KACfvU,KAAKqkE,UAAY9pE,GAErByF,KAAKqjE,aAAe9oE,EACpByF,KAAK0kE,aAAa1kE,KAAKmzD,iBAAiB,IAElCnzD,KAAKqjE,cAAgBrjE,KAAKqjE,eAAiB9oE,GACjDyF,KAAK0kE,aAAa1kE,KAAKmzD,iBAAiB,GAExCwQ,IACA3gE,EAAShD,KAAKif,eAAek3C,WAAWwN,EAAeppE,KAG/DyF,KAAK4e,OAAS5e,KAAKd,QAAQ2kE,mBAAmBtpE,EAAKopE,EAAe3jE,KAAKmzD,gBAAiBnwD,GACxFhD,KAAKwjE,kBAAkBxjE,KAAKmzD,gBAAiBnzD,KAAKygE,WAClDzgE,KAAKgW,KAAOhW,KAAK8jE,QAAQ9jE,KAAK4e,QAC9B5e,KAAK2kE,cACD3kE,KAAKgW,gBAAgBy/C,IACrBz1D,KAAKgW,gBAAgB2mD,IACrB38D,KAAKgW,gBAAgBymD,GACrBz8D,KAAKgW,KAAKs9C,UAAUtzD,KAAKygE,WAEpBlmC,GAAWv6B,KAAKgW,gBAAgBklD,IACrCl7D,KAAKgW,KAAKi9C,UAAUjzD,KAAKygE,WAE7BzgE,KAAK4hE,eACL5hE,KAAKqiE,qBAAqBriE,KAAKygE,WAC/B,IAAI2D,GAAS,IACPpkE,KAAKqjE,cAAmBrjE,KAAKgW,gBAAgBklD,MAAiB3gE,aAAega,KAClC,IAA5CvU,KAAKd,QAAQke,cAAcpE,MAAMviB,QAAiBqpC,GAAW9/B,KAAKd,QAASc,KAAKqjE,iBACjFe,GAAS,GAEbpkE,KAAKd,QAAQkkE,qBAAqBpjE,KAAKqjE,aAActjC,iBAAeC,MAAOokC,GAC/D,OAAR7pE,GAAgByF,KAAKqjE,eACrBrjE,KAAKqjE,aAAe,KACpBrjE,KAAKykE,gBAET79B,GAAQ,MAEP,CAOD,GANA5mC,KAAKygE,UAAUpgE,SAAWL,KAAKmzD,gBACX,SAAhBnzD,KAAK4e,SAAsBkhB,GAAW9/B,KAAKd,QAASc,KAAKygE,UAAUl+D,QAAQ,IAC3EvC,KAAKygE,UAAUl+D,kBAAkBkR,IACjCzT,KAAKwjE,kBAAkBxjE,KAAKmzD,gBAAiBnzD,KAAKygE,WAEtDzgE,KAAK2kE,cACDx3D,EAAEgoD,SAAWhoD,EAAEwwD,SAAU,CACzB,IAAI7nC,EAAQ3oB,EAAEgoD,SAAWhoD,EAAEwwD,UAAcxI,QAAShoD,EAAEgoD,QAASwI,SAAUxwD,EAAEwwD,WAAexI,SAAS,GACjGn1D,KAAKygE,UAAU3qC,KAAOA,EAE1B91B,KAAKskE,YAAY/pE,GACjByF,KAAKwjE,kBAAkBxjE,KAAKmzD,gBAAiBnzD,KAAKygE,UAAWzgE,KAAKygE,UAAUl+D,QAC5EvC,KAAK4hE,eACL5hE,KAAK0yD,UAAW,EAChB1yD,KAAK+jE,iBAAmB,KACxB/jE,KAAKikE,gBAAgB92D,EAAG5S,GAE5ByF,KAAKozD,aAAepzD,KAAKmzD,gBACpBnzD,KAAK8hE,gBAAgB30D,EAAEnK,QAAQ,IAChCmK,EAAE+1D,oBAKlB/C,EAAoB7+B,UAAU6iC,gBAAkB,SAAUh3D,GACtD,IAAIy3D,EAAqB5kE,KAAK6kE,gBAAgB13D,GAC9C,IAAKy3D,GAAsB5kE,KAAKugE,gBAC5BvgE,KAAKugE,iBAAkB,EACvBuE,cAAc9kE,KAAK+kE,mBAElB,GAAIH,GACL,IAAK5kE,KAAKgW,gBAAgBwhD,IAAYx3D,KAAKgW,gBAAgB+jD,IACpD/5D,KAAKgW,gBAAgB++C,KAAe/0D,KAAK0yD,SAAU,CACtD,IAAIsS,EAAYhlE,KAEZA,KAAKd,QAAQosB,eAAe44C,eAAiBU,IAAuB5kE,KAAKugE,kBACzEvgE,KAAKugE,iBAAkB,EACvBvgE,KAAK+kE,aAAejC,YAAY,SAAU/iE,GACtCilE,EAAUC,aAAaL,EAAoBz3D,EAJrC,MAAA,YAUlBnN,KAAK6yD,SAAY7yD,KAAKgW,KAAKs9C,UAAUtzD,KAAKygE,YAIlDN,EAAoB7+B,UAAUiyB,QAAU,SAAU6N,GAC9C,IAAI7mC,EAKJ,GAJ0B,QAAtBv6B,KAAKd,QAAQ0sB,MAAkBjW,GAAa3V,KAAKd,UACjDc,KAAK4iE,uBAETroC,EAAU6mC,EAAI7mC,QACVv6B,KAAKijE,YAGL,OAFAjjE,KAAKijE,aAAc,OACnB7B,EAAI8B,iBAGR,IAAKljE,KAAKmjE,qBAAqB/B,IAASzqD,GAAgB3W,KAAKd,UACrDiX,GAAWnW,KAAKd,WAAauX,GAAYzW,KAAKd,SAAW,CAC7D,GAAIc,KAAKgW,SAAWhW,KAAKgW,gBAAgBymD,IAAsBz8D,KAAKgW,gBAAgB2mD,MAC9E38D,KAAKgW,gBAAgBymD,IAAsBz8D,KAAKgW,gBAAgB2mD,KAC5C,IAAfyE,EAAI8D,QAAgB,CAI3B,IAHKllE,KAAK8hE,gBAAgBV,EAAIp+D,SAAWhD,KAAKsgE,aAC1C/+C,SAASC,eAAexhB,KAAKd,QAAQU,QAAQC,GAAK,WAAW28D,SAE5Dx8D,KAAK0yD,UAA0B,IAAd0O,EAAI+D,OACF,SAAhBnlE,KAAK4e,OAAmB,CACxB5e,KAAK4e,OAAS,SACd,IAAIuJ,EAAUnoB,KAAKd,QAAQojE,sBAAsBtiE,KAAKmzD,iBAClD54D,EAAMyF,KAAKd,QAAQqjE,qBAAqBp6C,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,UACnE0S,GAAmB,GACjBhE,EAAIjM,SAAWn1D,KAAKsgE,aAClBtgE,KAAKd,QAAQke,cAAcpE,MAAMviB,OAASuJ,KAAKd,QAAQke,cAAcF,WAAWzmB,OAAU,GAC7E,IAAd2qE,EAAI+D,QACPC,GAAmB,EACnBplE,KAAKif,eAAetD,kBAEnBmkB,GAAW9/B,KAAKd,QAAS3E,IAAU6qE,GACpCplE,KAAKif,eAAeq2C,eAAe/6D,IAI/C,IAAI8qE,EAAWrlE,KAAKslE,4BAKpB,GAJAtlE,KAAKulE,aACLvlE,KAAK0yD,UAAW,EAChB1yD,KAAKsgE,aAAc,EACnBtgE,KAAKmzD,gBAAkBnzD,KAAK6gE,iBAAiBO,GACzCphE,KAAKgW,OAAShW,KAAKgW,KAAKo9C,cAAgBpzD,KAAKgW,gBAAgBsmD,IAAY,CACzEt8D,KAAKygE,UAAUpgE,SAAWL,KAAKmzD,gBAC/BnzD,KAAKwjE,kBAAkBxjE,KAAKmzD,gBAAiBnzD,KAAKygE,UAAWzgE,KAAKygE,UAAUl+D,QAC5E,IAAI4yD,EAAUn1D,KAAKiiE,UAAUb,GAC7B,GAAIjM,GAAWiM,EAAIzD,SAAU,CACzB,IAAI7nC,EAAQq/B,GAAWiM,EAAIzD,UAAcxI,QAASA,EAASwI,SAAUyD,EAAIzD,WACnExI,SAAS,GACfn1D,KAAKygE,UAAU3qC,KAAOA,EAE1B91B,KAAKygE,UAAUrL,WAAagM,EAAI8D,OAChCllE,KAAKgW,KAAKu9C,QAAQvzD,KAAKygE,WACnB4E,GACArlE,KAAKd,QAAQw5D,iBAGrB,GAAI14D,KAAKd,QAAQ8d,eAAeC,aAAc,CAC1C,IAAIuoD,EAAgBxlE,KAAKgW,gBAAgB+jD,GACzC/5D,KAAKd,QAAQ48C,OAAO97C,KAAKd,QAAQ8d,eAAeC,cAC5C1iB,EAAMyF,KAAKd,QAAQ8d,eAAeG,aACtCnd,KAAKd,QAAQkc,oBAAoB7gB,GACjCyF,KAAKd,QAAQ8d,gBAAmBC,kBAAchjB,EAAWkjB,kBAAcljB,GACvEwgB,GAAmBza,KAAKd,QAAS3E,EAAKyF,KAAKygE,UAAUpgE,SAAUmlE,GAC/DxlE,KAAKd,QAAQ22D,iBAGjB,GADA71D,KAAK6yD,SAAU,EACX7yD,KAAKqjE,aAAc,CACnB,IAAIlxC,EAAiB4N,iBAAeiK,QAChClK,GAAW9/B,KAAKd,QAASc,KAAKqjE,gBAC9BlxC,GAAkB4N,iBAAeC,OAErChgC,KAAKd,QAAQkkE,qBAAqBpjE,KAAKqjE,aAAclxC,GAAgB,GACrEnyB,KAAKqjE,aAAe,KAExBrjE,KAAKgkE,eAAiB,KACtBhkE,KAAKwkE,cAAgB,KACfxkE,KAAKgW,gBAAgB+kD,KACvB/6D,KAAKgW,KAAO,MAGfukB,GACD6mC,EAAI8B,iBAERljE,KAAKd,QAAQihC,0BAAuBlmC,EACpC,IAAIggC,EAAWj6B,KAAKd,QAAQke,cAI5B,IAHKpd,KAAK0yD,UAAYz4B,EAASnsB,SAAWmsB,EAASuE,YAAY/nC,OAAS,GACpEuJ,KAAKd,QAAQumE,gBAAe,IAE3BzlE,KAAK0yD,WAAa1yD,KAAKd,QAAQ+e,eAAiBje,KAAKygE,UAAW,CACjE,IAAIhb,GACA7lD,QAASI,KAAKygE,UAAUl+D,QAAUvC,KAAKd,QAASmB,SAAUL,KAAKygE,UAAUpgE,SAAUq7B,MAAO0lC,EAAI8D,OAC9F/nD,aAAcnd,KAAKygE,UAAUtjD,cAEjCnd,KAAKd,QAAQu3D,aAAanyB,eAAaohC,MAAOjgB,GAElDzlD,KAAKygE,aAETzgE,KAAKygE,aACLzgE,KAAKd,QAAQ+f,eAAem6C,0BAGhC+G,EAAoB7+B,UAAUsyB,WAAa,SAAUwN,GAE7CphE,KAAKgW,MAAQhW,KAAK0yD,UAClB1yD,KAAKgW,KAAK49C,WAAW5zD,KAAKygE,WAE1BzgE,KAAKygE,WAAazgE,KAAKygE,UAAUl+D,SACjCvC,KAAKd,QAAQkkE,qBAAqBpjE,KAAKygE,UAAUl+D,OAAQw9B,iBAAeC,OAAO,GAC/EhgC,KAAKqjE,aAAe,MAEpBrjE,KAAKgW,gBAAgBw/C,IAAex1D,KAAKygE,WAAazgE,KAAKygE,UAAUz9D,QAAUhD,KAAKygE,UAAUz9D,kBAAkBuR,KAChHvU,KAAKd,QAAQkkE,qBAAqBpjE,KAAKygE,UAAUz9D,OAAQ+8B,iBAAeC,MAAQD,iBAAeiK,SAAS,GACxGhqC,KAAKqjE,aAAe,MAExB,IAAIppC,EAAWj6B,KAAKd,QAAQke,cACxB6c,GAAYA,EAASnsB,SACrB9N,KAAKd,QAAQumE,gBAAe,GAEhCzlE,KAAKsgE,aAAc,EACnBtgE,KAAKw8D,OAAQ,EACbx8D,KAAKgkE,eAAiB,KACtBhkE,KAAKwkE,cAAgB,KACrBxkE,KAAKif,eAAe62C,aACpB91D,KAAK0yD,UAAW,EAChB1yD,KAAKygE,aACLzgE,KAAKgW,KAAO,KzCvhBpB,WACI,IACI2vD,EACAjvE,EAFAkvE,EAAUrkD,SAASwX,uBAAuB,oBAG9C,GAAI6sC,GAAWA,EAAQnvE,OAAS,EAC5B,IAAKC,EAAIkvE,EAAQnvE,OAAS,EAAGC,GAAK,EAAGA,KACjCivE,EAASC,EAAQlvE,KAEbivE,EAAOnoD,WAAW8R,YAAYq2C,GyCghBtCE,GACoB,WAAhB7lE,KAAK4e,QACL5e,KAAKd,QAAQyhE,cAAcx0C,UAAU2vB,OAAO,oBAEhDslB,EAAI8B,kBAGR/C,EAAoB7+B,UAAUqyB,WAAa,SAAUyN,GACjD,IAAI0E,EAAM1E,EAAI2E,WAAa,IAAM,GAAK3E,EAAI8D,OAAS,EAC/C19C,EAAgBxnB,KAAK6gE,iBAAiBO,GAC1CphE,KAAKd,QAAQsB,cAAcV,QAE3B,GADcE,KAAKiiE,UAAUb,GAEzBphE,KAAKd,QAAQi8D,KAAK2K,MAAa,MAAWt+C,GAC1C45C,EAAI8B,qBAEH,CACD,IAAItgD,EAAmB5iB,KAAKd,QAAQwf,SAASkE,iBACzCE,EAAiB9iB,KAAKd,QAAQwf,SAASoE,eACvCy3C,EAASuL,EAAK,IAAM,GACpB9lE,KAAKgW,OAAShW,KAAKgW,gBAAgBymD,IAAsBz8D,KAAKgW,gBAAgB2mD,MAC9E38D,KAAKygE,aACLzgE,KAAKwjE,kBAAkBh8C,EAAexnB,KAAKygE,WAC3CzgE,KAAKygE,UAAUpgE,SAAWmnB,EAC1BxnB,KAAKgW,KAAK29C,WAAW3zD,KAAKygE,YAE1BW,EAAIzD,SACJ39D,KAAKd,QAAQwf,SAASy8C,KAAK,EAAGZ,EAAQ,EAAG/yC,GAGzCxnB,KAAKd,QAAQwf,SAASy8C,KAAK,EAAG,EAAGZ,EAAQ/yC,GAEzC5E,IAAqB5iB,KAAKd,QAAQwf,SAASkE,kBACxCE,IAAmB9iB,KAAKd,QAAQwf,SAASoE,gBAC5Cs+C,EAAI8B,iBAGRljE,KAAKd,QAAQukE,cACbzjE,KAAKd,QAAQ8mE,gBAAiB,EAC9BhmE,KAAKd,QAAQ+mE,gBACbjmE,KAAKd,QAAQ8mE,gBAAiB,IAItC7F,EAAoB7+B,UAAU4kC,QAAU,SAAU9E,GAC9C,KAAMphE,KAAKd,QAAQgY,eAAiBC,gBAAcypD,YAC5C5gE,KAAKmjE,qBAAqB/B,IAAsB,WAAZA,EAAIl0C,KAAoC,KAAhBk0C,EAAI+E,QAAiB,CACnF,IACIpvE,OAAU,EACVqvE,EAAUhF,EAAI+E,QAAU/E,EAAI+E,QAAU/E,EAAI+D,MAC1Cj4C,EAAMk0C,EAAIl0C,IACVioC,EAAUn1D,KAAKiiE,UAAUb,GAC7B,GAAIphE,KAAKd,QAAQkrB,gBAAkBpqB,KAAKd,QAAQrH,SAE5C,IAAK,IADDA,EAAWmI,KAAKd,QAAQrH,SACnBgF,EAAK,EAAG6f,EAAKC,OAAOC,KAAK/kB,GAAWgF,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC/D,IAAIy5C,EAAM55B,EAAG7f,GAEb,IADA9F,EAAUiJ,KAAKd,QAAQrH,SAASy+C,MAChBv/C,EAAQsvE,QAAQC,cAAgBvvE,EAAQsvE,QAAQn5C,OACvDk5C,IAAYrvE,EAAQsvE,QAAQn5C,KAAQA,IAAQkX,OAAKrtC,EAAQsvE,QAAQn5C,MAC/DltB,KAAKwiE,YAAYt1C,EAAKopB,OAClBv/C,EAAQsvE,QAAQC,eAAmBlF,EAAImF,SAAanF,EAAIzD,WAAexI,GACzEp+D,EAAQsvE,QAAQC,eAAiBnR,GAAWiM,EAAImF,QAAUnF,EAAIzD,WAC1D39D,KAAKwmE,cAAczvE,EAAQsvE,QAAQC,eAAiBlF,EAAImF,QACxDvmE,KAAKymE,gBAAgB1vE,EAAQsvE,QAAQC,eAAiBlF,EAAIzD,UAC1D39D,KAAK0mE,eAAe3vE,EAAQsvE,QAAQC,eAAiBnR,GAAY,CAC1E,IAAI7qC,EAAa1G,GAAY7sB,EAAQuzB,YACrC,GAAIA,GAAcA,GACdq8C,iBAAoBC,cACpBC,UAAW9vE,EAAQ8vE,YACnB,CAKA,GAJAzF,EAAI8B,iBACY,WAAZ9B,EAAIl0C,KAAqBltB,KAAKmjE,qBAAqB/B,IACnD7/C,SAASC,eAAexhB,KAAKd,QAAQyhE,cAAc9gE,IAAI28D,QAEvDzlE,EAAQszB,QAAS,CAIHzG,GAAY7sB,EAAQszB,QAClCA,EAAUs8C,iBAAoBC,cAAeC,UAAW9vE,EAAQ8vE,YAGpE,WAQ5B1G,EAAoB7+B,UAAUujC,gBAAkB,SAAU13D,GACtD,IAAI9M,EAAWL,KAAK6gE,iBAAiB1zD,GACrC9M,EAASrJ,GAAKgJ,KAAKd,QAAQwf,SAASgF,YACpCrjB,EAASpJ,GAAK+I,KAAKd,QAAQwf,SAASgF,YACpC,IACIojD,EADArlD,EAAYC,GAAa1hB,KAAKd,SAE9B6nE,EAAmB/mE,KAAKd,QAAQosB,eAAey7C,iBAiBnD,OAhBI/mE,KAAKd,QAAQosB,eAAe44C,gBACxB7jE,EAASrJ,EAAIgJ,KAAKd,QAAQwf,SAASkE,iBAAmBmkD,EAAiBlkE,MAAQ4e,EAAUlpB,OACzFyH,KAAKd,QAAQwf,SAAS2E,cAAgB,GACtCyjD,EAAiB,QAEZzmE,EAASrJ,EAAIgJ,KAAKd,QAAQwf,SAASkE,iBAAmBmkD,EAAiBnkE,KAC5EkkE,EAAiB,OAEZzmE,EAASpJ,EAAI+I,KAAKd,QAAQwf,SAASoE,eAAiBikD,EAAiBjkE,OAAS2e,EAAUnpB,OAC7F0H,KAAKd,QAAQwf,SAAS0E,eAAiB,GACvC0jD,EAAiB,SAEZzmE,EAASpJ,EAAI+I,KAAKd,QAAQwf,SAASoE,eAAiBikD,EAAiBhkE,MAC1E+jE,EAAiB,QAGlBA,GAEX3G,EAAoB7+B,UAAU2jC,aAAe,SAAUxY,EAAQt/C,EAAG65D,EAAOC,GACrE,IAAI5mE,EAAWosD,EACf,IAAKzsD,KAAKgW,gBAAgBwhD,IAAYx3D,KAAKgW,gBAAgB+jD,IACpD/5D,KAAKgW,gBAAgB++C,KAAe/0D,KAAK0yD,SAAU,CACtD,IACI7J,EAAM7oD,KAAK6gE,iBAAiB1zD,GAG5BvK,GAFmB5C,KAAKd,QAAQosB,eAAey7C,iBAExC,GACPh6D,EAAQ,EACRpR,GAAU3E,EAAG6xD,EAAI7xD,EAAGC,EAAG4xD,EAAI5xD,GAC/B,OAAQoJ,GACJ,IAAK,QACD1E,EAAM3E,EAAI6xD,EAAI7xD,EAAI,GAClB4L,EAAO,GACP,MACJ,IAAK,OACDjH,EAAM3E,EAAI6xD,EAAI7xD,EAAI,GAClB4L,GAAQ,GACR,MACJ,IAAK,SACDjH,EAAM1E,EAAI4xD,EAAI5xD,EAAI,GAClB8V,EAAQ,GACR,MACJ,IAAK,MACDpR,EAAM1E,EAAI4xD,EAAI5xD,EAAI,GAClB8V,GAAS,GAGjB/M,KAAKygE,UAAUpgE,UAAarJ,EAAG2E,EAAM3E,EAAGC,EAAG0E,EAAM1E,GACjD+I,KAAKgW,KAAKs9C,UAAUtzD,KAAKygE,WACzBzgE,KAAKd,QAAQwf,SAASy8C,KAAK,GAAIv4D,GAAOmK,EAAO87C,KAGrDsX,EAAoB7+B,UAAUqjC,YAAc,WAExC,IAAK,IADD3hE,EAAShD,KAAKd,QAAQojE,sBAAsBtiE,KAAKmzD,iBAC5Cz8D,EAAI,EAAGA,EAAIsM,EAAOvM,OAAQC,IAC3BsJ,KAAKygE,UAAUtjD,eAAiBna,EAAOtM,IACvCsM,EAAOmD,OAAOzP,EAAG,GAGzB,IAAI+uD,GACAyhB,QAASlkE,EACTpD,QAAUI,KAAKygE,UAAUl+D,SAAWvC,KAAKygE,UAAUtjD,kBAAgBljB,EAAY+F,KAAKygE,UAAUl+D,OAC9F4a,aAAcnd,KAAKygE,UAAUtjD,cAEjC,GAAInd,KAAKmnE,wBAA0BnnE,KAAKygE,UAAUtjD,cAAiBnd,KAAKmnE,uBAAyBnnE,KAAKygE,UAAUtjD,cAAgB,CAC5H,IAAI87C,GAAUiO,aAASjtE,EAAW2F,QAASI,KAAKmnE,qBAAsBhqD,kBAAcljB,GACpF+F,KAAKd,QAAQu3D,aAAanyB,eAAasvB,WAAYqF,GACnDj5D,KAAKmnE,qBAAuB,OAE3BnnE,KAAKmnE,sBAAwBnnE,KAAKygE,UAAUl+D,QAAWvC,KAAKmnE,uBAAyBnnE,KAAKygE,UAAUtjD,gBACrGnd,KAAKmnE,qBAAuBnnE,KAAKygE,UAAUtjD,aAC3Cnd,KAAKd,QAAQu3D,aAAanyB,eAAa8iC,WAAY3hB,IAEnDzlD,KAAKygE,UAAUtjD,cACfnd,KAAKd,QAAQu3D,aAAanyB,eAAa60B,UAAW1T,IAG1D0a,EAAoB7+B,UAAUojC,aAAe,SAAUl9C,EAAe6/C,GAClE,IAAKA,EAAa,CACd,IAAIC,EAAqBtnE,KAAKqjE,wBAAwB9uD,IAClDvU,KAAKqjE,aAAapwD,YAAcK,kBAAgBlU,SAC9CY,KAAKqjE,wBAAwBjwD,IAAcpT,KAAKqjE,aAAapwD,YAAcI,uBAAqBjU,QACtGkB,EAAcN,KAAKd,QAASooE,EAAmBtnE,KAAKqjE,kBAAeppE,GACnE,IAAIyV,EAAS6X,GAAiBvnB,KAAKd,QAASsoB,EAAexnB,KAAKqjE,cAChErjE,KAAKd,QAAQsB,cAAcV,QAC3BE,KAAKd,QAAQsB,cAAczE,QAAU2T,EAAO1Y,EAC5CgJ,KAAKd,QAAQsB,cAAcxE,QAAU0T,EAAOzY,EAC5C+I,KAAKd,QAAQsB,cAAcqjB,W5C9nBvC,SAAiCtjB,EAAMrB,GACnC,IAAI8pB,EAAQ,EAiBZ,OAhBIzoB,aAAgB6S,GACZ7S,EAAK0S,YAAcI,uBAAqBjU,QACxC4pB,EAAQzoB,EAAK0S,YAAcI,uBAAqBjU,QAE3CmB,EAAK0S,YAAcI,uBAAqBqU,iBAC7CsB,EAAQ9pB,EAAQ+T,YAAc2C,qBAAmBxW,SAIjDmB,EAAK0S,YAAcK,kBAAgBlU,QACnC4pB,EAAQzoB,EAAK0S,YAAcK,kBAAgBlU,QAEtCmB,EAAK0S,YAAcK,kBAAgBoU,iBACxCsB,EAAQ9pB,EAAQ+T,YAAc2C,qBAAmBxW,SAGlD4pB,E4C6mBKu+C,CAAiBvnE,KAAKqjE,aAAcrjE,KAAKd,UACzCc,KAAKd,QAAQsB,cAAc+7D,KAAKv8D,KAAKd,QAAQU,WAIzDugE,EAAoB7+B,UAAUmjC,aAAe,WACzCzkE,KAAKd,QAAQsB,cAAcV,SAE/BqgE,EAAoB7+B,UAAUklC,cAAgB,SAAUgB,GACpD,SAAIA,EAAcrjC,eAAasjC,MAKnCtH,EAAoB7+B,UAAUolC,eAAiB,SAAUc,GACrD,SAAIA,EAAcrjC,eAAaujC,UAKnCvH,EAAoB7+B,UAAUmlC,gBAAkB,SAAUe,GACtD,SAAIA,EAAcrjC,eAAawjC,QAMnCxH,EAAoB7+B,UAAUsmC,SAAW,SAAUxG,GAC/CphE,KAAKd,QAAQ2oE,sBAGjB1H,EAAoB7+B,UAAUwmC,YAAc,SAAU1G,GAClD,GAAIzqD,GAAgB3W,KAAKd,SAAU,CAC/B,IAAIopB,OAAa,EACbH,EAAUnoB,KAAKd,QAAQojE,sBAAsBtiE,KAAKmzD,iBAClD54D,EAAMyF,KAAKd,QAAQqjE,qBAAqBp6C,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,UACvE,GAAY,OAARn4D,GAAgBoc,GAAgB3W,KAAKd,SAGrC,GAFAopB,EACatoB,KAAKd,QAAQ0kE,sBAAsBrpE,EAAKyF,KAAKmzD,iBACtDnzD,KAAKgW,OAAShW,KAAKgW,gBAAgBymD,IAAsBz8D,KAAKgW,gBAAgB2mD,IAAsB,CAExFpiE,GAAOyF,KAAKd,QAAmBc,KAAKmzD,gBAAwBiO,EAAI8D,OAE5EllE,KAAKgW,KAAKu9C,QAAQvzD,KAAKygE,WACvBzgE,KAAKsgE,aAAc,EACnBtgE,KAAKygE,aACLzgE,KAAKgW,KAAO,KACZorD,EAAI8B,qBAEH,CACD,IAAI6E,EAAQ/nE,KAAKd,QAAQ+f,eAAe+oD,eAAeztE,EAAIsF,IAC3D,GAAIkoE,IAAUA,EAAME,MAAQF,EAAM75C,WACxBluB,KAAKd,QAAQgY,eAAiBC,gBAAcypD,UAAW,CACzD,IAAI/gE,EAAK,GACe,mBAApBtF,EAAI6D,MAAMA,QACVyB,EAAKtF,EAAIsF,GAAGyO,MAAM,oBAAoB,IAE1CtO,KAAKd,QAAQ+mE,cAAc1rE,EAAKsF,IAAOyoB,aAAsBoF,GACxDpF,EAAa,GAAEha,MAAM/T,EAAIsF,GAAK,KAAK,QAAK5F,KAK7D,IAAIwrD,GACAljD,OAAQhI,GAAOyF,KAAKd,QAASmB,SAAUL,KAAKmzD,gBAAiBz3B,MAAO0lC,EAAI8D,QAE5EllE,KAAKd,QAAQu3D,aAAanyB,eAAawjC,YAAariB,KAM5D0a,EAAoB7+B,UAAU4mC,UAAY,SAAUC,EAAcjpE,GAC9D,IAAI3E,EAAM4tE,EACV,OAAIxtD,GAAuB3a,KAAKd,QAAS3E,GAAK,GACnCA,EAEJ,MAKX4lE,EAAoB7+B,UAAU8mC,YAAc,SAAUhH,GAClD,IACIhpD,EAEAiwD,EACAC,EACA/nE,EACAjI,EACAC,EACAgwE,EAEAC,EACAntD,EACAotD,EAAclnD,SAASC,eAAexhB,KAAKd,QAAQU,QAAQC,GAAK,YAChE6oE,EAAiBnnD,SAASC,eAAexhB,KAAKd,QAAQU,QAAQC,GAAK,mBACnE8Z,EAAQ8uD,EAAiB,MACzBnhD,EAAO3N,EAAKrL,MAAM,QACtB/N,EAAQP,KAAKd,QAAQke,cAAcpE,MAAM,GAAMhZ,KAAKd,QAAQke,cAAcpE,MAAM,GAAKhZ,KAAKd,QAAQke,cAAcF,WAAW,KAC9Gld,KAAKgW,gBAAgB+kD,KAC9Bx6D,EAAOP,KAAKd,QAAQ0b,UAAU5a,KAAKd,QAAQypE,YAAY9tD,WAEvDta,IAA8B,SAApBA,EAAKnC,MAAMvC,MAAmB0E,EAAK+X,YAAY7hB,OAAS,GAA2B,SAApB8J,EAAKnC,MAAMvC,QACpFysE,EAActoE,KAAKd,QAAQ2zC,WAAWtyC,EAAKuN,QAAS9N,KAAKd,QAAQypE,YAAY9oE,IAE7EuY,GADAA,EAAW7X,EAAKuN,QAAQtM,OAAOjJ,MAAQ+vE,EAAY9mE,OAAOjJ,MAAQgI,EAAKuN,QAAQtM,OAAOjJ,MAAQ+vE,EAAY9mE,OAAOjJ,OAtBtG,GAuBsB6f,EAvBtB,GAwBXmwD,EAAalxC,GAAgBixC,EAAYpoE,MAAOyZ,OAAM1f,OAAWA,EAAWme,GAC5EiwD,EAAWlwE,OAAQswE,EAAYvoE,MAAc,SAAEoO,MAAM,MAAM,IACvDgZ,EAAK7wB,OAAS,GAA+B,KAA1B6wB,EAAKA,EAAK7wB,OAAS,KACtC8xE,EAAWjwE,OAASiwE,EAAWjwE,OAAS+vE,GAE5CG,EAAaxoE,KAAKd,QAAQwf,SAASjZ,UACnC4V,EAAQxE,GAAgB7W,KAAKd,SAAWspE,EAAWntD,MAAQ,EAE3D9iB,GAhCW,IA+BXA,EAAQgwE,EAAWhwE,OA/BR,GAgC8BA,GAAS8iB,EAClD/iB,GA/BY,GA+BWiwE,EAAWjwE,OA/BtB,GA+B4CiwE,EAAWjwE,QAAU+iB,EAC7EqtD,EAAexoE,MAAM0C,MAAW0lE,EAAY9mE,OAAOP,OAAOjK,EAAIwxE,EAAWj2B,IAAMi2B,EAAWntD,MAAS9iB,EAAQ,EAAK,IAAO,KACvHmwE,EAAexoE,MAAM6C,KAAUulE,EAAY9mE,OAAOP,OAAOhK,EAAIuxE,EAAWh2B,IAAMg2B,EAAWntD,MAAS/iB,EAAS,EAAK,EAAK,KACrHowE,EAAexoE,MAAM3H,MAAQA,EAAQ,KACrCmwE,EAAexoE,MAAM5H,OAASA,EAAS,KACvCmwE,EAAYvoE,MAAMqZ,UAAYA,OAC9BkvD,EAAYvoE,MAAMmd,SAAWA,OAC7BorD,EAAYvoE,MAAM3H,MAAQA,EAAQ,KAClCkwE,EAAYvoE,MAAM5H,OAASA,EAAS,OAM5C6nE,EAAoB7+B,UAAUsnC,cAAgB,SAAUroE,EAAMsoE,GAC1D,SAAI7oE,KAAKgW,gBAAgB+kD,IAAmB8N,KACxC7oE,KAAKgW,KAAO,KACRzV,IAAW8V,GAAkBrW,KAAKd,WAClCc,KAAKd,QAAQwlB,mBAAgBzqB,EAC7B+F,KAAKd,QAAQihC,0BAAuBlmC,KAEpC44B,GAAwB7yB,KAAKd,QAAQ8Z,MAAOzY,EAAKV,KACjDgzB,GAAwB7yB,KAAKd,QAAQge,WAAY3c,EAAKV,KACrDG,KAAKd,QAAQi6C,YAAcn5C,KAAKd,QAAQi6C,WAAW2vB,yBAAyB5qD,QAAQ3d,IAAS,KAO1G4/D,EAAoB7+B,UAAU6hC,qBAAuB,SAAU/B,GAC3D,SAAKA,EAAIp+D,QAAUo+D,EAAIp+D,OAAOnD,KAAOG,KAAKd,QAAQU,QAAQC,GAAK,aAKnEsgE,EAAoB7+B,UAAUkiC,kBAAoB,SAAUnjE,EAAUN,EAAMwC,GACxExC,EAAKM,SAAWA,EAChB,IAAI9F,EACA4tB,EACC5lB,GAYD4lB,EAAUnoB,KAAKd,QAAQojE,sBAAsBtiE,KAAKmzD,gBAAiB5wD,GACnEhI,EAAMyF,KAAKd,QAAQ6pE,2BAA2B5gD,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,SAAU3yD,EAAKM,SAAUkC,IAZ9E,SAAhBvC,KAAK4e,QAAqC,uBAAhB5e,KAAK4e,QAAmD,eAAhB5e,KAAK4e,QACvD,eAAhB5e,KAAK4e,QAA2C,sBAAhB5e,KAAK4e,QAAkD,sBAAhB5e,KAAK4e,QAC5D,uBAAhB5e,KAAK4e,SAAsE,IAAnC5e,KAAK4e,OAAOV,QAAQ,YAAuD,IAAnCle,KAAK4e,OAAOV,QAAQ,UACpG3jB,EAAMyF,KAAKd,QAAQke,eAGnB+K,EAAUnoB,KAAKd,QAAQojE,sBAAsBtiE,KAAKmzD,iBAClD54D,EAAMyF,KAAKd,QAAQqjE,qBAAqBp6C,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,WAOvEn4D,GAAOA,EAAI6hB,WACX7hB,EAAMyF,KAAKd,QAAQ0b,UAAUrgB,EAAIsgB,UACjC7a,KAAKygE,UAAUtjD,aAAe5iB,GAElC,IAAIuT,EAeJ,OAdIvT,IACAuT,EAAU9N,KAAKd,QAAQ0kE,sBAAsBrpE,EAAKyF,KAAKmzD,kBAEtD5wD,GAKDxC,EAAKiD,OAASzI,EACdwF,EAAK2B,cAAgBoM,IALrB/N,EAAKwC,OAAShI,EACdwF,EAAKiB,cAAgB8M,GAMzB/N,EAAKod,aAAend,KAAKygE,UAAUtjD,aACnCpd,EAAKw7D,aAAev7D,KAAKgkE,eACzBjkE,EAAKs7D,YAAcr7D,KAAKwkE,cACjBzkE,GAGXogE,EAAoB7+B,UAAU0nC,UAAY,WACtChpE,KAAK4e,OAAS,SACd5e,KAAKqjE,aAAe,KACpBrjE,KAAKqkE,UAAY,KACjBrkE,KAAKgW,KAAOhW,KAAKd,QAAQ4kE,QAAQ9jE,KAAK4e,QACtC5e,KAAK4hE,gBAGTzB,EAAoB7+B,UAAUwiC,QAAU,SAAUllD,GAC9C,OAAQA,GACJ,IAAK,SACD,OAAO,IAAIm2C,GAAW/0D,KAAKif,gBAAgB,GAC/C,IAAK,OACD,OAAO,IAAIu4C,GAASx3D,KAAKif,gBAC7B,IAAK,SACD,OAAO,IAAIs6C,GAAWv5D,KAAKif,gBAC/B,IAAK,kBACD,OAAO,IAAIm9C,GAAWp8D,KAAKif,gBAC/B,IAAK,YACD,OAAO,IAAIq9C,GAAUt8D,KAAKif,gBAC9B,IAAK,kBACL,IAAK,kBACL,IAAK,kBACL,IAAK,kBACL,IAAK,cACL,IAAK,cACL,IAAK,aACL,IAAK,aACD,OAAO,IAAI86C,GAAW/5D,KAAKif,eAAgBL,GAC/C,IAAK,qBACL,IAAK,qBACL,IAAK,oBACL,IAAK,oBACD,OAAO,IAAI42C,GAAYx1D,KAAKif,eAAgBL,GAChD,IAAK,aACL,IAAK,aACD,OAAO,IAAI2+C,GAAiBv9D,KAAKif,eAAgBL,GACrD,IAAK,OACD,IACI/iB,EAAO4oB,GAAezkB,KAAKd,QAAQwlB,eACvC,GAAa,SAAT7oB,GAA6D,SAA1CmE,KAAKd,QAAQwlB,cAActmB,MAAMvC,KACpD,OAAO,IAAIk/D,GAAgB/6D,KAAKif,gBAE/B,GAAa,SAATpjB,GAA+D,YAA5CmE,KAAKd,QAAQwlB,cAActmB,MAAW,QAC5D4B,KAAKd,QAAQwlB,cAActmB,MAAY,OACzC,OAAO,IAAIq+D,GAAmBz8D,KAAKif,gBAElC,GAAa,SAATpjB,GACK,SAATA,GAA+D,YAA5CmE,KAAKd,QAAQwlB,cAActmB,MAAW,OACrD4B,KAAKd,QAAQwlB,cAActmB,MAAY,OAC5C,OAAO,IAAIs8D,GAAgB16D,KAAKif,eAAgBjf,KAAKd,QAAQwlB,eAE5D,GAAa,cAAT7oB,GAA4D,aAApCmE,KAAKd,QAAQwlB,cAAc7oB,KACxD,OAAO,IAAI8gE,GAAoB38D,KAAKif,gBAEnC,GAAa,cAATpjB,EACL,OAAO,IAAI45D,GAAqBz1D,KAAKif,eAAgB,qBAAsBjf,KAAKd,QAAQwlB,eAE5F,MACJ,IAAK,MACD,OAAO,IAAIw2C,GAAYl7D,KAAKif,gBAAgB,GAChD,IAAK,YACD,OAAO,IAAIi8C,GAAYl7D,KAAKif,gBAAgB,GAChD,IAAK,WACD,OAAO,IAAIu4C,GAASx3D,KAAKif,eAAgB,QAC7C,IAAK,WACD,OAAO,IAAIw2C,GAAqBz1D,KAAKif,eAAgB,qBAAsBjf,KAAKd,QAAQwlB,eAC5F,IAAK,cACD,OAAO,IAAIqwC,GAAW/0D,KAAKif,gBAAgB,EAAM,eACrD,IAAK,YACD,OAAO,IAAI49C,GAAc78D,KAAKif,gBAClC,IAAK,uBACL,IAAK,uBACL,IAAK,uBACL,IAAK,uBACL,IAAK,mBACL,IAAK,mBACL,IAAK,kBACL,IAAK,kBACD,OAAO,IAAIg+C,GAAgBj9D,KAAKif,eAAgBL,GACpD,IAAK,cACD,OAAO,IAAIw+C,GAAgBp9D,KAAKif,gBAKxC,OAAO,MAGXkhD,EAAoB7+B,UAAUhB,UAAY,SAAU1hB,GAChD,IAAI1S,EAAUlM,KAAKd,QAAQke,cAAwB,WAC/Cpd,KAAKd,QAAQke,cAActP,QAAQ8D,SAAS,GAAK5R,KAAKd,QAAQke,cAGlE,OAAOkjB,GAAU1hB,EAFE5e,KAAKd,QAAQke,cAAwB,WACnDlR,EAAOG,YAAcH,EAAOI,gBAAmBJ,EAAOG,cAK/D8zD,EAAoB7+B,UAAUsiC,sBAAwB,SAAUrpE,EAAK8F,GACjE,OAAOL,KAAKwgE,aAAayI,6BAA6B1uE,EAAK8F,IAG/D8/D,EAAoB7+B,UAAUghC,sBAAwB,SAAUjiE,EAAUkC,GACtE,OAAOvC,KAAKwgE,aAAa8B,sBAAsBjiE,EAAUL,KAAKd,QAASc,KAAKygE,UAAWl+D,IAG3F49D,EAAoB7+B,UAAUihC,qBAAuB,SAAUp6C,EAASvJ,EAAQ8zC,GAC5E,OAAO1yD,KAAKwgE,aAAa+B,qBAAqBviE,KAAKd,QAASipB,EAASvJ,EAAQ8zC,EAAU1yD,KAAKygE,UAAWzgE,KAAKmzD,kBAGhHgN,EAAoB7+B,UAAU4nC,qBAAuB,SAAU/gD,EAASvJ,EAAQ8zC,EAAUryD,EAAUkC,GAChG,OAAOvC,KAAKwgE,aAAa+B,qBAAqBviE,KAAKd,QAASipB,EAASvJ,EAAQ8zC,EAAU1yD,KAAKygE,UAAWpgE,EAAUkC,IAGrH49D,EAAoB7+B,UAAUuiC,mBAAqB,SAAUtpE,EAAKuT,EAASzN,EAAU2C,GACjF,OAAOo7B,GAAmB7jC,EAAKuT,EAAS9N,KAAKmzD,gBAAiBnzD,KAAKd,QAASc,KAAKgkE,eAAgBhkE,KAAKwkE,cAAexhE,IAEzHm9D,EAAoB7+B,UAAUgkC,0BAA4B,WACtD,IAAIroD,EAEAooD,EACA8D,EAFAC,GAAqB,EAGzB,GAAIppE,KAAKd,QAAQ8d,eAAeC,aAAc,CAC1CA,EAAejd,KAAKd,QAAQ8d,eAAeC,aAC3Cjd,KAAKd,QAAQke,cAActP,QAAQ8D,SAAS,GAAG7V,QAAUkhB,EAAanP,QAAQ/R,QAC9EiE,KAAKd,QAAQke,cAActP,QAAQ8D,SAAS,GAAG5V,QAAUihB,EAAanP,QAAQ9R,QAC9EgE,KAAKd,QAAQke,cAActP,QAAQ8D,SAAS,GAAG7D,WAAWxV,MAAQ0kB,EAAanP,QAAQC,WAAWxV,MAClGyH,KAAKd,QAAQke,cAActP,QAAQ8D,SAAS,GAAG7D,WAAWzV,OAAS2kB,EAAanP,QAAQC,WAAWzV,OACnG,IAAIiC,EAAMyF,KAAKd,QAAQ8d,eAAeG,aACtC5iB,EAAIwB,QAAUkhB,EAAalhB,QAC3BxB,EAAIyB,QAAUihB,EAAajhB,QACvBzB,GAAOA,EAAI6D,OAA4B,kBAAnB7D,EAAI6D,MAAMvC,OAC9BtB,EAAIhC,MAAQ0kB,EAAa1kB,MACzBgC,EAAIjC,OAAS2kB,EAAa3kB,QAE9BiC,EAAI8R,YAAc4Q,EAAa5Q,YAC/B,IAAI8b,EAAUnoB,KAAKd,QAAQojE,sBAAsBtiE,KAAKmzD,iBAClDnwD,EAAShD,KAAKd,QAAQqjE,qBAAqBp6C,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,UACtEl1C,EAAaxd,KAAKd,QAAQ0b,UAAUrgB,EAAIsgB,UACxCmE,OAAc,EAKlB,GAJIxB,GAAcA,EAAW1F,WAA2C,UAA9B0F,EAAW1F,UAAUjc,OAC3DmE,KAAKd,QAAQg5D,mBACbiR,GAAW,IAEVnmE,GAAUwa,GAAcA,EAAW1F,WAA2C,UAA9B0F,EAAW1F,UAAUjc,MAAoC,SAAhBmE,KAAK4e,OAAmB,CAClH,IAAIc,EAAQlC,EAAW1P,QAAQ8D,SAASsM,QAAQ3jB,EAAIuT,SAKpD,GAJAkR,GACIF,iBAAa7kB,EAAW+I,YAAQ/I,EAChC8kB,YAAaW,EAAOnd,OAAQi/B,GAAMjnC,IAElCmlB,GAAS,EAAG,CACZ,IAAI9N,EAAW4L,EAAW5L,SAC1BA,EAASzL,OAAOyL,EAASsM,QAAQ3jB,EAAIsF,IAAK,GAC1CG,KAAKd,QAAQ0b,UAAUrgB,EAAIsF,IAAIgb,SAAW,GAC1CwqD,GAAW,EACX7nD,EAAW1P,QAAQ8D,SAASzL,OAAOuZ,EAAO,IAalD,GAVAf,GAAiBpkB,EAAKyI,EAAQhD,KAAKd,QAASc,KAAK4e,SACjDpB,EAAa7C,GAAuB3a,KAAKd,QAAS3E,GAAOyF,KAAKd,QAAQ0b,UAAUrgB,EAAIsgB,UAC/E7a,KAAKd,QAAQ0b,UAAUrgB,EAAIsgB,WAAatgB,IAC3BijB,EAAW1F,WAA2C,WAA9B0F,EAAW1F,UAAUjc,OAC3D2hB,EAAWpF,SAAWoF,EAAW1P,QAAQC,WAAWxV,MACpDilB,EAAW1P,QAAQsK,SAAWoF,EAAW1P,QAAQC,WAAWxV,MAC5DilB,EAAWjC,UAAYiC,EAAW1P,QAAQC,WAAWzV,OACrDklB,EAAW1P,QAAQyN,UAAYiC,EAAW1P,QAAQC,WAAWzV,OAC7D8wE,GAAqB,GAErBzuD,GAAuB3a,KAAKd,QAAS3E,GAAK,IAASijB,GAA4C,WAA9BA,EAAW1F,UAAUjc,KACtF4hB,GAA0Bzd,KAAKd,QAAS3E,QAGxC,GAAIijB,GAAcA,EAAW1F,WAA2C,SAA9B0F,EAAW1F,UAAUjc,KAAiB,CAC5E,IAAIic,EAAwC,aAA1B0F,EAAWpf,MAAMvC,KAC/B2hB,EAAW1P,QAAQ8D,SAAS,GAAK4L,EAAW1P,QAC5C9W,EAAIwmB,EAAW1P,QAAQtM,OAAOxK,EAC9BC,EAAIumB,EAAW1P,QAAQtM,OAAOvK,OACVgD,IAApBM,EAAI0gB,aAAmE,eAArCuC,EAAW1F,UAAUhH,aAAiD,IAAjBvW,EAAIugB,UACrD,aAArC0C,EAAW1F,UAAUhH,aAA8BvW,EAAIugB,SAAW,GAAKvgB,EAAI0gB,YAAc,EAC1FnD,EAAUoD,kBAAkB3gB,EAAI0gB,YAAagC,EAAa1kB,YAEpC0B,IAAjBM,EAAIugB,UACThD,EAAU0D,gBAAgBjhB,EAAIugB,SAAUmC,EAAa3kB,QAEzD0H,KAAKd,QAAQwe,mBAAmBF,MAC5BzhB,QAASyhB,EAAWzhB,QAASC,QAASwhB,EAAWxhB,QACjDzD,MAAOilB,EAAWjlB,MAAOD,OAAQklB,EAAWllB,OAC5C+T,YAAamR,EAAWnR,cAE5BrM,KAAKd,QAAQic,KAAKqC,EAAYxmB,EAAIwmB,EAAW1P,QAAQtM,OAAOxK,EAAGC,EAAIumB,EAAW1P,QAAQtM,OAAOvK,QAGzFsD,GAAOA,EAAI6D,OAA4B,kBAAnB7D,EAAI6D,MAAMvC,OAC9BtB,EAAIuT,QAAQy4B,iBAAkB,GAElCvmC,KAAKd,QAAQwe,mBAAmBnjB,MAC5BwB,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,QACnCzD,MAAOgC,EAAIhC,MAAOD,OAAQiC,EAAIjC,OAC9B+T,YAAa9R,EAAI8R,cAErB9R,EAAIuT,QAAQy4B,iBAAkB,EAStC,GANI6iC,IACA5rD,EAAWpF,cAAWne,EACtBujB,EAAW1P,QAAQsK,cAAWne,EAC9BujB,EAAWjC,eAAYthB,EACvBujB,EAAW1P,QAAQyN,eAAYthB,GAE/BorE,EAAU,CACVrlE,KAAKd,QAAQwe,mBAAmBF,MAC5BzhB,QAASyhB,EAAWzhB,QAASC,QAASwhB,EAAWxhB,QACjDzD,MAAOilB,EAAWjlB,MAAOD,OAAQklB,EAAWllB,OAC5C+T,YAAamR,EAAWnR,cAE5B,IAAIwP,GACAhgB,KAAM,4BAA6BmgB,YAAc+C,iBAAa9kB,EAAWsI,OAAQyc,EAAYzc,QAC7FwZ,WAAYiD,EAAalD,SAAU,YAEjC9b,KAAKd,QAAQgY,eAAiBC,gBAAckyD,UAC9CrpE,KAAKd,QAAQ+c,gBAAgBJ,IAIzC,OAAOstD,GAEXhJ,EAAoB7+B,UAAUikC,WAAa,WACvC,IAAIhlE,EAAOP,KAAKd,QAAQke,cAAcpE,MAAM,GACxCmP,EAAUnoB,KAAKd,QAAQojE,uBAAwBtrE,EAAGgJ,KAAKmzD,gBAAgBn8D,EAAI,GAAIC,EAAG+I,KAAKmzD,gBAAgBl8D,IACvG+L,EAAShD,KAAKd,QAAQqjE,qBAAqBp6C,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,UAK1E,GAJK1vD,IACDmlB,EAAUnoB,KAAKd,QAAQojE,uBAAwBtrE,EAAGgJ,KAAKmzD,gBAAgBn8D,EAAI,GAAIC,EAAG+I,KAAKmzD,gBAAgBl8D,IACvG+L,EAAShD,KAAKd,QAAQqjE,qBAAqBp6C,EAASnoB,KAAK4e,OAAQ5e,KAAK0yD,WAEtEnyD,GAAQA,EAAKuX,WAAqC,UAAxBvX,EAAKuX,UAAUjc,MAAoBmH,GAAUA,EAAO6X,UAC3E7X,EAAO6X,WAAata,EAAKV,GAAI,CAChC,IAAIypE,EAAYtmE,EACZub,EAAaC,GAAmBxe,KAAKd,QAAQU,QAAQC,IAEzD,GADkB0e,EAAWiD,eAAejD,EAAW1e,GAAK,sBAC3C,CACb,IAAI6f,EAAQnf,EAAKuN,QAAQ8D,SAASsM,QAAQlb,EAAO8K,SAAW,EACxDsC,EAAO,IAAImE,GAAKvU,KAAKd,QAAS,SAC9BgB,OAAS+X,KAAM1X,EAAKL,MAAM+X,KAAMC,YAAa,aAC7CI,YAAatV,EAAOsV,YAAaO,kBAAmB,UAAWC,oBAAqB,UACpF7F,aAAcK,kBAAgByE,QAAUzE,kBAAgB0E,cAAgB1E,kBAAgBa,OAASb,kBAAgBE,KAAOF,kBAAgB0B,QACxIuE,UAAW,KACZ,GACHnJ,EAAKkI,YAAY,GAAGrY,QAAU,iBACrBqpE,EAAUzpE,GAAGyO,MAAM,KAC5B8B,EAAKvQ,GAAKyZ,KAAalJ,EAAKvQ,GAC5BuQ,EAAKyK,SAAWta,EAAKV,GACrBuQ,EAAKm5D,QAAU,EACfn5D,EAAKqoC,SAAW/4B,EAChB1f,KAAKd,QAAQg5D,mBAEI33D,EAAKuN,QAAQ8D,SAASsM,QAAQ9N,EAAKtC,SAGpD9N,KAAKd,QAAQktB,IAAIhc,GACjBpQ,KAAKd,QAAQsqE,qBAAqBjpE,GAClCP,KAAKd,QAAQgd,QAAQlc,KAAKd,QAAQ0b,UAAUxK,EAAKvQ,MACjDG,KAAKd,QAAQw5D,iBACb14D,KAAKd,QAAQ+mE,mBAIlB9F,KAIPO,GAA8B,WAC9B,SAASA,KAgTT,OA7SAA,EAAap/B,UAAUghC,sBAAwB,SAAU1mE,EAAIsD,EAASuhE,EAAWl+D,EAAQknE,GAErF,IAAItB,KACA5lE,GAAUA,aAAkBkR,IACxBlR,EAAOyW,MAAMviB,OAAS8L,EAAO2a,WAAWzmB,SAAW,IACnD8L,EAAUA,EAAOyW,MAAM,IAAMzW,EAAO2a,WAAW,IACpCtL,UAAuC,IAA3BrP,EAAOqP,SAASnb,SACnCgqE,EAAUtjD,aAAe5a,GAWrC,IAAK,IAPDuV,EACAtW,EACAoM,EACAlS,EAGAguE,EADAC,KAEK9sE,EAAK,EAAG+sE,EAHF1qE,EAAQ2qE,cAAcC,YAAY,IAAIxtD,GAAK1gB,EAAG5E,EAAI,GAAI4E,EAAG3E,EAAI,GAAI,IAAK,MAG7C4F,EAAK+sE,EAAWnzE,OAAQoG,IAAM,CAClE,IACIlB,EAAQC,EACZ4F,GAFIjH,EAAMqvE,EAAW/sE,IAERiR,QAAQ3B,YACrB,IAAI49D,GAAiBxvE,EAAe,aAAYiH,EAAOgC,cAAc7H,GACrE,IAAKpB,IAAQgI,GAAUrD,EAAQihC,gCAAgC/sB,KAC1D7Y,aAAe6Y,GAAa7Y,IAAQ2E,EAAQihC,qBAA+B5lC,EAAIuT,QAAQogB,QAAS,CAEjG,IADI65C,EAAQ7oE,EAAQ+f,eAAe+oD,eAAeztE,EAAIsF,OACxCkoE,EAAME,MAAQF,EAAM75C,QAAS,CAEvC,GADAw7C,EAAcC,EAAc5B,EAAMwB,QAAUI,EAAc5B,EAAMwB,YAC5DhvE,EAAI8R,YAAa,CAEjB7K,EAASD,GADTuW,EAAYvd,EAAIuT,SAEhB,IAAK,IAAI4O,EAAK,EAAG8O,EAAK1T,EAAUlG,SAAU8K,EAAK8O,EAAG/0B,OAAQimB,IACtD9O,EAAQ4d,EAAG9O,GAEX3f,EADArB,EAASL,MACcuS,EAAMvB,YAAcuB,EAAMtB,iBAAkBsB,EAAM7R,QAAS6R,EAAM5R,SACxFL,EAAQF,EAAuBC,EAAQE,GACnC2F,GAA4BqM,GAAOpK,cAAc7H,KACjDouE,GAAgB,GAI5B,KAAKxnE,IAAwC,IAA7Bu9B,GAAW5gC,EAAS3E,KAC5BmZ,GAAuBnZ,KAClBA,aAAe6Y,GAAasS,GAAqBnrB,EAAKqB,GAAMmuE,GAAe,CAC5E,IAAI3pC,EAAW7lC,aAAe6Y,GAAa7Y,EAAI0rB,YAAc,EAAI,EAEvDjmB,KAAK4jE,sBAAsBrpE,EAAKqB,EAAIwkC,IACpB,WAAX7lC,EAAIsF,IACf2zB,GAAaj5B,EAAK,SAAUmvE,MAQxD,IAAK,IAAIj+C,EAAK,EAAGoqB,EAAK32C,EAAQqsB,OAAQE,EAAKoqB,EAAGp/C,OAAQg1B,IAGlD,IAAK,IAFDs8C,EAAQlyB,EAAGpqB,GAENqqB,EAAK,EAAGk0B,EADjB7B,EAAeA,EAAahsC,OAAOwtC,EAAc5B,EAAMwB,aACPzzB,EAAKk0B,EAAevzE,OAAQq/C,IAAM,CAC9E,IAAIv7C,EAEJ,GAAuB,UAFnBA,EAAMyvE,EAAel0B,IAEjB13C,MAAMvC,MAAmBtB,EAAIi+C,cAAgBt5C,EAAoB,aAAE8W,gBAAgBwhD,KACtFt4D,EAAoB,aAAE8W,gBAAgBwhD,IAAa/hD,GAAalb,IAAO,EACpEmlB,EAAQyoD,EAAajqD,QAAQhf,EAAQ0b,UAAUrgB,EAAIi+C,cAC1C,GACT2vB,EAAahiE,OAAOuZ,EAAO,GAGnC,GAAuB,kBAAnBnlB,EAAI6D,MAAMvC,MAA4BtB,EAAIud,WAAoC,UAAvBvd,EAAIud,UAAUjc,KAAkB,EACnF6jB,EAAQyoD,EAAajqD,QAAQhf,EAAQ0b,UAAU1b,EAAQ0b,UAAUrgB,EAAIsF,IAAIiO,QAAQ8D,SAAS,GAAG/R,OACpF,GACTsoE,EAAahiE,OAAOuZ,EAAO,IAK3C,IAAK,IAAIhpB,EAAI,EAAGA,EAAIyxE,EAAa1xE,OAAQC,IAAK,CAC1C,IAAIuzE,EAAY/qE,EAAQ0b,UAAUutD,EAAazxE,GAAGmkB,UAClD,GAAIovD,EAEA,IAAK,IADDC,EAAclqE,KAAK4jE,sBAAsBqG,EAAWruE,GAC/CvF,EAAI,EAAGA,EAAI4zE,EAAUx3C,MAAMh8B,OAAQJ,IACxC,GAAI6zE,EAAYrqE,GAAG/H,MAAM,IAAMmyE,EAAUx3C,MAAMp8B,GAAGwJ,GAAK,KAAM,CACzD,IAAIsD,EAAO8mE,EAAUx3C,MAAMp8B,GAC3B,GAAIkhB,GAAQpU,IAAkBkU,GAAQlU,GAClC,OAAOglE,EAKvB,KAAO8B,GAAW,CACd,IAAIvqD,EACJ,IAAe,KADXA,EAAQyoD,EAAajqD,QAAQ+rD,IAK7B,MAHA9B,EAAahiE,OAAOuZ,EAAO,GAK/BuqD,EAAY/qE,EAAQ0b,UAAUqvD,EAAUpvD,WAGhD,OAAOstD,GAGXzH,EAAap/B,UAAU91B,SAAW,SAAU28D,EAAcjpE,EAAS0f,GAC/D,IACIre,EADAqL,EAAY1M,EAAQke,cAAcF,WAAW,GAajD,KAXA3c,EAAkB,uBAAXqe,EAAkC1f,EAAQ0b,UAAUhP,EAAUwmC,UACjE7xC,EAAOrB,EAAQ0b,UAAUhP,EAAUnK,aACzBlB,EAAKi4C,WAAc2vB,EAAa3vB,YAAaj4C,EAAKi4C,YAAc2vB,EAAa3vB,YACnFj4C,EAAKi4C,YAAc2vB,EAAa3vB,YAChC2vB,EAAe,MAEfA,GAAgBA,EAAattD,UAC2B,kBAAxD3b,EAAQ0b,UAAUutD,EAAattD,UAAUzc,MAAMvC,OAC/CssE,EAAejpE,EAAQ0b,UAAUutD,EAAattD,YAGvC,uBAAX+D,GAAmChT,EAAUwmC,SAAU,CACvD,IAAIjwC,EAAajD,EAAQ0b,UAAUhP,EAAUwmC,UAC7C,GAAIjwC,GAAcA,EAAW/D,OAAqC,mBAA3B+D,EAAW/D,MAAMA,MAA6B,CACjF,IAAIyB,EAAK+L,EAAU/L,GAAGyO,MAAM,MACI,SAA1BnM,EAAW/D,MAAMvC,MAAgD,SAA5BssE,EAAa/pE,MAAMvC,MAAqBgE,EAAG,KAAOsoE,EAAatoE,IACzE,mBAA7BsoE,EAAa/pE,MAAMA,SACnB+pE,EAAe,MAEfA,EAAattD,UAC2C,kBAAxD3b,EAAQ0b,UAAUutD,EAAattD,UAAUzc,MAAMvC,OAC/CssE,EAAejpE,EAAQ0b,UAAUutD,EAAattD,YAI1D,OAAOstD,GAIXzH,EAAap/B,UAAUihC,qBAAuB,SAAUrjE,EAASipB,EAASvJ,EAAQ8zC,EAAUyX,EAAU9pE,EAAUkC,GAI5G,IACIo0D,EACAC,EAFAwT,EAAe,eAGfjC,EAAe,KACnB,GAAuB,IAAnBhgD,EAAQ1xB,OAMR,GALI8L,GAAUA,aAAkBkR,IACxBlR,EAAOyW,MAAMviB,OAAS8L,EAAO2a,WAAWzmB,SAAW,IACnD8L,EAAUA,EAAOyW,MAAM,IAAMzW,EAAO2a,WAAW,IAGvC,uBAAX0B,GAAmCrc,GAAqB,aAAXqc,IAC5CrI,GAAYrX,IAAYmX,GAAkBnX,KAAa4d,GAAc5d,EAAQwlB,iBAAmBtR,IAElG,IAAK,IADDxH,EAAY1M,EAAQke,cAAcF,WAAW,GACxCxmB,EAAIyxB,EAAQ1xB,OAAS,EAAGC,GAAK,EAAGA,IAErC,GADAkgE,EAAUlkC,GAAqBvK,EAAQzxB,IAAI,GACvCyxB,EAAQzxB,aAAc6d,KAASI,GAAcwT,EAAQzxB,KAAQme,GAAkB+hD,IAM/E,OALAuR,EAAehgD,EAAQzxB,GACnBkV,IACAu8D,EAAenoE,KAAKwL,SAAS28D,EAAcjpE,EAAS0f,IAExDurD,EAAShtD,aAAegrD,EACjBA,OAId,GAAe,uBAAXvpD,GAAmCrc,GACxC,IAAS7L,EAAIyxB,EAAQ1xB,OAAS,EAAGC,GAAK,EAAGA,IAErC,GADAigE,EAASjkC,GAAqBvK,EAAQzxB,IAAI,GACtCyxB,EAAQzxB,aAAc6d,KAASD,GAAa6T,EAAQzxB,KAAQ+d,GAAiBkiD,IAI7E,OAHAwR,EAAehgD,EAAQzxB,GACvByxE,EAAenoE,KAAKwL,SAAS28D,EAAcjpE,EAAS0f,GACpDurD,EAAShtD,aAAegrD,EACjBA,MAId,CAAA,GAAI5lE,IAAsB,SAAXqc,GAAsB1f,EAAQkrE,GAAcp0D,gBAAgBwhD,IAAY,CAEnF,IADD93C,EAAQ,EACZ,IAAShpB,EAAI,EAAGA,EAAIyxB,EAAQ1xB,OAAQC,IAAK,CACrC,IAAI0Z,EAAO+X,EAAQzxB,GACf6L,IAAW6N,IAASA,aAAgBgD,KACnC/S,GAAY+P,EAAKtC,QAAQtM,OAAOgC,cAAcnD,KAC3CoV,GAAarF,KACR+3D,GAKDA,EAAezoD,GAAStP,EAAKm5D,OAASpB,EAAe/3D,EACrDsP,EAAQjjB,KAAK+I,IAAIka,EAAOtP,EAAKm5D,SAJ7B7pD,GADAyoD,EAAe/3D,GACMm5D,QAoBrC,OAXIpB,GAA4C,SAA5BA,EAAa/pE,MAAMvC,OAE/BssE,EADAjpE,EAAQke,cAAcpE,MAAMviB,OAAS,GAAmD,SAA9CyI,EAAQke,cAAcpE,MAAM,GAAG5a,MAAMvC,KAChEssE,EAGA,MAGnBA,IACAgC,EAAShtD,aAAegrD,GAErBA,EAEN,GAAe,WAAXvpD,GAAuB1f,EAAQkrE,GAAcp0D,KAAM,CACxD,IAAStf,EAAIyxB,EAAQ1xB,OAAS,EAAGC,GAAK,EAAGA,IACrC,GAAIyxB,EAAQzxB,aAAc0c,IAClB+U,EAAQzxB,EAAI,aAAc6d,IAAQ4T,EAAQzxB,EAAI,GAAG+7B,MAAO,CAExD,IADIy3C,EAAclqE,KAAKqqE,kBAAkBliD,EAAQzxB,EAAI,GAAGoX,QAASzN,OAAUpG,MACtDiwE,EAAYrqE,GAAG/H,MAAM,yBAA2BoyE,EAAYrqE,GAAG/H,MAAM,wBACtF,OAAOqwB,EAAQzxB,EAAI,GAEvB,IAAK,IAAIL,EAAI,EAAGA,EAAI8xB,EAAQzxB,EAAI,GAAG+7B,MAAMh8B,OAAQJ,IAC7C,GAAI6zE,GAAeA,EAAYrqE,GAAG/H,MAAM,IAAMqwB,EAAQzxB,EAAI,GAAG+7B,MAAMp8B,GAAGwJ,GAAK,MACnEwX,GAAQ8Q,EAAQzxB,EAAI,GAAG+7B,MAAMp8B,IAC7B,OAAO8xB,EAAQzxB,EAAI,GAS3C,GAFAyxE,EAAehgD,EAAQA,EAAQ1xB,OAAS,GACxC0zE,EAAShtD,aAAegrD,GACnBjpE,EAAQkrE,GAAclC,UAAUC,GAAc,IAC3CA,EAAattD,SAGb,IAFA,IAAItgB,EAAM4tE,EACNmC,EAAWxqC,GAAW5gC,EAAS3E,GAC5BA,KACCulC,GAAW5gC,EAAS3E,IAAS+vE,IAGjCnC,EAAe5tE,EACfA,EAAM2E,EAAQ0b,UAAUrgB,EAAIsgB,eAKvC,GAAe,QAAX+D,GAA+B,oBAAXA,GACzB,IAASloB,EAAIyxB,EAAQ1xB,OAAS,EAAGC,GAAK,EAAGA,IACrC,GAAIyxB,EAAQzxB,aAAc6d,GAAM,CAC5B,IAAI21D,EAAclqE,KAAKqqE,kBAAkBliD,EAAQzxB,GAAGoX,QAASzN,OAAUpG,GACvE,GAAgB,oBAAX2kB,GAA2C,QAAXA,GAAuBsrD,IAAgBA,EAAYrqE,GAAG/H,MAAM,yBAA2BoyE,EAAYrqE,GAAG/H,MAAM,wBAC7I,OAAOqwB,EAAQzxB,SAM3ByxE,EAAehgD,EAAQA,EAAQ1xB,OAAS,GACpC0zE,GAAYhC,IACZgC,EAAShtD,aAAegrD,GAIpC,OAAOA,GAIXzH,EAAap/B,UAAU2nC,6BAA+B,SAAU1uE,EAAK8F,GAEjE,OAAI9F,aAAekZ,GACU,IAArBlZ,EAAIye,MAAMviB,QAAkB8D,EAAI2iB,YAAe3iB,EAAI2iB,WAAWzmB,OAGvD8D,EAAIye,QAASze,EAAIye,MAAMviB,QAAqC,IAA1B8D,EAAI2iB,WAAWzmB,OAOzD,KANQuJ,KAAK4jE,sBAAsBrpE,EAAI2iB,WAAW,GAAI7c,GAH9CL,KAAK4jE,sBAAsBrpE,EAAIye,MAAM,GAAI3Y,GAO7CL,KAAK4jE,sBAAsBrpE,EAAK8F,IAI/CqgE,EAAap/B,UAAUsiC,sBAAwB,SAAUrpE,EAAK8F,EAAU+/B,GACpE,OAAOpgC,KAAKqqE,kBAAkB9vE,EAAIuT,QAASzN,EAAU+/B,IAGzDsgC,EAAap/B,UAAU+oC,kBAAoB,SAAUvyD,EAAWzX,EAAU+/B,GACtE,IAAK,IAAI1pC,EAAIohB,EAAUlG,SAASnb,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACrD,IAAIkJ,EAAUkY,EAAUlG,SAASlb,GACjC,GAAIkJ,GAAWA,EAAQuM,YAAY3I,cAAcnD,GAAW,CACxD,GAAIT,aAAmBszB,GAAW,CAC9B,IAAIlwB,EAAShD,KAAKqqE,kBAAkBzqE,EAASS,GAC7C,GAAI2C,EACA,OAAOA,EAGf,GAAIpD,EAAQ4B,OAAOgC,cAAcnD,GAC7B,OAAOT,GAInB,OAAIkY,EAAUtW,OAAOgC,cAAcnD,EAAU+/B,IAAqC,SAAzBtoB,EAAU5X,MAAM+X,KAC9DH,EAEJ,MAEJ4oD,KC5jDPj/B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAO5Dm9D,GAAuB,SAAU7nC,GAGjC,SAAS6nC,EAAMvsD,EAAQ+e,EAAUmN,EAAcC,GAC3C,IAAI9D,EAAQ3D,EAAO0E,KAAKpnC,KAAMge,EAAQ+e,EAAUmN,EAAcC,IAAYnqC,KAM1E,OAJAqmC,EAAMmkC,cAAgB,EAEtBnkC,EAAMokC,eACNpkC,EAAMle,WACCke,EAoBX,OA7BA5E,GAAU8oC,EAAO7nC,GAWjBT,IACImB,WAAS,KACVmnC,EAAMjpC,UAAW,UAAM,GAC1BW,IACImB,YAAS,IACVmnC,EAAMjpC,UAAW,eAAW,GAC/BW,IACImB,YAAS,IACVmnC,EAAMjpC,UAAW,YAAQ,GAC5BW,IACImB,cACDmnC,EAAMjpC,UAAW,eAAW,GAC/BW,IACImB,cACDmnC,EAAMjpC,UAAW,eAAW,GAC/BW,IACImB,YAAU,IACXmnC,EAAMjpC,UAAW,cAAU,GACvBipC,GACTlnC,iBCpBEqnC,GAAgC,WAChC,SAASA,EAAexrE,GAEpBc,KAAK2qE,iBAEL3qE,KAAK4qE,mBAEL5qE,KAAK6qE,gBACL7qE,KAAK4zC,cACL5zC,KAAK8qE,eACL9qE,KAAKd,QAAUA,EA03GnB,OAx3GAyd,OAAO8lB,eAAeioC,EAAeppC,UAAW,kBAE5CgC,IAAK,WACD,OAAOtjC,KAAKd,QAAQk1D,gBAExB7wB,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAeioC,EAAeppC,UAAW,uBAE5CgC,IAAK,WACD,OAAOtjC,KAAKd,QAAQ6rE,qBAExBxnC,YAAY,EACZC,cAAc,IAGlBknC,EAAeppC,UAAU+xB,iBAAmB,SAAUZ,GAClDzyD,KAAKgpB,OAAUppB,QAASI,KAAKd,QAAQke,cAAe4tD,OAAQ,MACxDvY,GACAzyD,KAAKd,QAAQ2qB,uBAAsB,GAEvCsP,GAAgBn5B,KAAKd,QAAQU,QAAQC,IAAIK,MAAM+qE,cAAgB,QAGnEP,EAAeppC,UAAUkyB,eAAiB,SAAUf,GAChDzyD,KAAKgpB,MAAQ,KACTypC,GACAzyD,KAAKd,QAAQ2qB,uBAAsB,GAEvCsP,GAAgBn5B,KAAKd,QAAQU,QAAQC,IAAIK,MAAM+qE,cAAgB,OAKnEP,EAAeppC,UAAUi2B,YAAc,SAAUh3D,EAAMF,EAAUJ,EAASirE,EAAUpY,GAChF,IAAIzsB,EAAQrmC,KACR8yD,IACA9yD,KAAKd,QAAQsB,cAAcH,SAAW,eACtCL,KAAKd,QAAQsB,cAAcE,WAAc67D,MAAQyK,MAAO,EAAGmE,SAAU,IACrEnrE,KAAKd,QAAQI,QAAQ0oB,aAA4B,gBAAbkjD,EAA6B,QAAU,SAC3ElrE,KAAKd,QAAQsB,cAAc4qE,UAAY,EACvCprE,KAAKd,QAAQsB,cAAc6qE,WAAa,GAE5CrrE,KAAKd,QAAQsB,cAAcP,QAAUA,EACrC,IAAI8nB,EAAgBR,GAAiBvnB,KAAKd,SAAWlI,EAAGqJ,EAASrJ,EAAGC,EAAGoJ,EAASpJ,GAAKsJ,GACrFP,KAAKd,QAAQsB,cAAczE,QAAUgsB,EAAc/wB,GAAkB,gBAAbk0E,EAA6B,GAAK,GAC1FlrE,KAAKd,QAAQsB,cAAcxE,QAAU+rB,EAAc9wB,EAAI,GACvD+I,KAAKd,QAAQsB,cAAcqjB,WACvBivC,GACAvrB,WAAW,WACPlB,EAAMnnC,QAAQsB,cAAc+7D,KAAKl2B,EAAMnnC,QAAQU,UAChD,IAMX8qE,EAAeppC,UAAUoyB,aAAe,WACpC1zD,KAAKd,QAAQsB,cAAcV,SAK/B4qE,EAAeppC,UAAU+1B,wBAA0B,WAC/C,SAAIr3D,KAAKd,QAAQke,cAAcnK,YAAc8e,sBAAoBu5C,UAUrEZ,EAAeppC,UAAUu0B,eAAiB,WACtC71D,KAAKd,QAAQ22D,kBAKjB6U,EAAeppC,UAAUm1B,aAAe,SAAU9e,EAAO53C,GACrD,GAAI43C,IAAUrT,eAAajR,MAAQskB,IAAUrT,eAAa2zB,gBACtDtgB,IAAUrT,eAAainC,iBAAkB,CACzC,GAAIvrE,KAAKd,QAAQ+e,cACb,OAKJ,GAHI05B,IAAUrT,eAAajR,OACvBtzB,EAAKwC,OAASvC,KAAKd,SAEnBc,KAAKd,QAAQihC,qBACb,OAGRngC,KAAKd,QAAQu3D,aAAa9e,EAAO53C,IAKrC2qE,EAAeppC,UAAUu3B,gBAAkB,SAAU94D,EAAMozD,GACvD,GAAInzD,KAAKd,QAAQ+e,cAAe,CAC5B,IAAIutD,GACA5rE,QAASG,EAAKwC,OAAQS,OAAQjD,EAAKiD,OAAQwkB,cAAe2rC,EAAiBj0D,QAASc,KAAKd,SAE7Fc,KAAKy2D,aAAanyB,eAAamnC,SAAUD,KAMjDd,EAAeppC,UAAU41B,WAAa,SAAU38D,EAAKgR,GACjD,IAGIK,EAHA8/D,KACAC,KAUJ,GAPIpxE,aAAekZ,GAEf7H,EADgBrR,EACU2iB,WAAW,GAEhC3iB,aAAe6Y,IAAapT,KAAKd,QAAQihC,uBAC9Cv0B,EAAY5L,KAAKd,QAAQihC,sBAEzB5lC,GAAOqR,IAAcizB,GAAoB7+B,KAAKd,UAAYc,KAAKd,QAAQihC,sBACvE,IAAI50B,GAA0B,uBAAbA,GAAkD,uBAAbA,GAejD,GAAkB,eAAbA,GAA0C,eAAbA,IAA+BK,EAAUnK,UAAYmK,EAAUwmC,UAAW,CAC7Gs5B,GACIjqE,SAAUmK,EAAUnK,SAAUy+B,aAAct0B,EAAUs0B,aACtDkS,SAAUxmC,EAAUwmC,SAAUC,aAAczmC,EAAUymC,cAE1DzmC,EAAUnK,SAAW,GACrBmK,EAAUs0B,aAAe,GACzBt0B,EAAUwmC,SAAW,GACrBxmC,EAAUymC,aAAe,GAKzB,IAAIoT,GACA75C,UAAWA,EAAWwqD,SAAUsV,EAChCrV,SANJsV,GACIlqE,SAAUmK,EAAUnK,SAAUy+B,aAAct0B,EAAUs0B,aACtDkS,SAAUxmC,EAAUwmC,SAAUC,aAAczmC,EAAUymC,cAIhCikB,QAAQ,EAAOttC,MAAO,WAAY4iD,aAAcrgE,GAE1EvL,KAAKy2D,aAAanyB,eAAainC,iBAAkB9lB,GAC7CA,EAAI6Q,QACJ1qD,EAAUnK,SAAWiqE,EAAWjqE,SAChCmK,EAAUs0B,aAAewrC,EAAWxrC,aACpCt0B,EAAUwmC,SAAWs5B,EAAWt5B,SAChCxmC,EAAUymC,aAAeq5B,EAAWr5B,eAGpCryC,KAAKd,QAAQ2sE,wBAAwBjgE,EAAW8/D,EAAYC,GAC5D3rE,KAAKd,QAAQkc,oBAAoBxP,GACjC65C,GACI75C,UAAWA,EAAWwqD,SAAUsV,EAChCrV,SAAUsV,EAAYrV,QAAQ,EAAOttC,MAAO,UAAW4iD,aAAcrgE,GAEzEvL,KAAKy2D,aAAanyB,eAAainC,iBAAkB9lB,SA9CiC,CACtF,IAAIqmB,EAAyB,uBAAbvgE,EAAoC,WAAa,WAC7DwgE,EAAyB,uBAAbxgE,EAAoC,eAAiB,eACjEK,EAAUkgE,KACVJ,EAAWI,GAAalgE,EAAUkgE,GAClClgE,EAAUkgE,GAAa,GACvBH,EAAWG,GAAalgE,EAAUkgE,IAC9BlgE,EAAUs0B,cAAgBt0B,EAAUymC,gBACpCq5B,EAAWK,GAAangE,EAAUmgE,GAClCngE,EAAUmgE,GAAa,GACvBJ,EAAWI,GAAangE,EAAUmgE,IAEtC/rE,KAAKgsE,sBAAsBpgE,EAAW8/D,EAAYC,EAAYpgE,MAuC9Em/D,EAAeppC,UAAU0qC,sBAAwB,SAAUpgE,EAAW8/D,EAAYC,EAAYpgE,GAC1F,IAAIugE,EAAyB,uBAAbvgE,EAAoC,WAAa,WAC7DwgE,EAAyB,uBAAbxgE,EAAoC,eAAiB,eACjEk6C,GACA75C,UAAWA,EAAWwqD,UAAY/hC,OAAQq3C,EAAWI,GAAYt5C,OAAQk5C,EAAWK,IACpF1V,UAAYhiC,OAAQs3C,EAAWG,GAAYt5C,OAAQm5C,EAAWI,IAC9DzV,QAAQ,EAAOttC,MAAO,WAAY4iD,aAAcrgE,GAEpDvL,KAAKy2D,aAAanyB,eAAainC,iBAAkB9lB,GAC7CA,EAAI6Q,QACJ1qD,EAAUkgE,GAAaJ,EAAWI,GAClClgE,EAAUmgE,GAAaL,EAAWK,GAClCJ,EAAaD,IAGb1rE,KAAKd,QAAQ2sE,wBAAwBjgE,EAAW8/D,EAAYC,GAC5D3rE,KAAKd,QAAQkc,oBAAoBxP,GACjC65C,GACI75C,UAAWA,EAAWwqD,UAAY/hC,OAAQq3C,EAAWI,GAAYt5C,OAAQk5C,EAAWK,IACpF1V,UAAYhiC,OAAQs3C,EAAWG,GAAYt5C,OAAQm5C,EAAWI,IAC9DzV,QAAQ,EAAOttC,MAAO,UAAW4iD,aAAcrgE,GAEnDvL,KAAKy2D,aAAanyB,eAAainC,iBAAkB9lB,KAMzDilB,EAAeppC,UAAU60B,WAAa,SAAUv2D,EAASqsE,EAAY1pE,EAAQ2pE,GACzE,GACID,aAAsB13D,GAAM,CAC5B,GAAI3U,GAAWA,EAAQC,KAAOosE,EAAWpsE,GAAK,WAC1C,OAAOosE,EAEX,GAAI1pE,GAAoC,SAA1B0pE,EAAW7tE,MAAMvC,MAA8C,aAA3BowE,EAAW7tE,MAAMA,OACb,gBAA9C6tE,EAAW7tE,MAAMk7C,SAASD,WAAWx9C,KAAwB,CAC7D,IAAIswE,EAAcF,EAAW7tE,MAAMk7C,SAASD,WAAW8yB,YACvD,GAAIA,EAAYC,QAAQl+C,SAA8D,IAAnDtuB,EAAQC,GAAGqe,QAAQ+tD,EAAWpsE,GAAK,YAClE,OAAOssE,EAAYC,QAEvB,GAAID,EAAY7V,OAAOpoC,SAA6D,IAAlDtuB,EAAQC,GAAGqe,QAAQ+tD,EAAWpsE,GAAK,WACjE,OAAOssE,EAAY7V,OAEvB,GAAI6V,EAAYE,QAAQn+C,SAA8D,IAAnDtuB,EAAQC,GAAGqe,QAAQ+tD,EAAWpsE,GAAK,YAClE,OAAOssE,EAAYE,QAI/B,GAAIzsE,aAAmByO,GACnB,IAAK,IAAI3X,EAAI,EAAGA,EAAIu1E,EAAWx5C,MAAMh8B,OAAQC,IAAK,CAC9C,IAAIyM,EAAO8oE,EAAWx5C,MAAM/7B,GAC5B,GAAIkJ,EAAQC,KAAOosE,EAAWpsE,GAAK,IAAMsD,EAAKtD,GAC1C,OAAOsD,GAKvB,IAAK+oE,EAEI,CAAA,IADD5jD,OAAa,EACjB,IAAS5xB,EAAI,EAAGA,EAAIu1E,EAAW3zD,YAAY7hB,OAAQC,IAE/C,GADA4xB,EAAa2jD,EAAW3zD,YAAY5hB,GAChCkJ,EAAQC,KAAOosE,EAAWpsE,GAAK,IAAMyoB,EAAWzoB,GAChD,OAAOyoB,EAInB,OAAO2jD,GAKXvB,EAAeppC,UAAU21B,cAAgB,SAAU1rD,EAAUxL,EAAM+2D,EAAcC,GAC7E,IACII,EACAp3D,EAAKwC,kBAAkBkR,GAEvB0jD,EADWp3D,EAAKwC,OACG2a,WAAW,GAEzBnd,EAAKwC,kBAAkB6Q,IAAapT,KAAKd,QAAQihC,uBACtDg3B,EAAUn3D,KAAKd,QAAQihC,sBAERngC,KAAKm2D,WAAWp2D,EAAK2B,cAAe3B,EAAKiD,OAAqB,uBAAbuI,GAAmC,GAAvG,IAEI+gE,EAAuB,uBAAb/gE,EAAoC,eAAiB,eACnE,OAAI4rD,EAFuB,uBAAb5rD,EAAoC,WAAa,cAEtCwrD,GAAgBI,EAAQmV,KAAaxV,GAQlE4T,EAAeppC,UAAUy0B,qBAAuB,SAAUh2D,GACtD,IACI6L,EACJ,GAAI7L,EAAKwC,QAAUxC,EAAKwC,OAAO2a,YAC3Bnd,EAAKwC,OAAO2a,WAAWzmB,QAAUuJ,KAAKd,QAAQi6C,YAC9Cn5C,KAAKd,QAAQi6C,WAAW2vB,yBAAyB5qD,QAAQne,EAAKwC,OAAO2a,WAAW,KAAO,EAAG,CACtFnd,EAAKwC,kBAAkBkR,KAEvB7H,EADgB7L,EAAKwC,OACK2a,WAAW,IAEzC,IAAIrd,EAAK+L,EAAU/L,GAAGyO,MAAM,KAExB+lB,GADex0B,EAAGA,EAAGpJ,OAAS,GACrBoJ,EAAGA,EAAGpJ,OAAS,IAAMoJ,EAAG,IACrC,GAAIE,EAAKiD,QAAUjD,EAAKiD,OAAOnD,KAAOw0B,GACN,mBAA5Bt0B,EAAKiD,OAAO5E,MAAMA,MAA4B,CAC9C4B,KAAKd,QAAQg5D,mBACb,IAAI16C,EAAaxd,KAAKd,QAAQ0b,UAAU/a,EAAG,IACvC0sE,EAAavsE,KAAKs0B,cAAc9W,EAAY3d,EAAG,IAC/C2sE,GACA3sE,GAAIA,EAAG,GAAKyZ,KACZ9hB,MAAO2N,GAAM+H,UAAUtB,EAAU+Z,mBAAmB,GAAI/Z,EAAU+Z,mBAAmB,IACrFhM,KAAM4yD,EAAW5yD,KACjBljB,OAAQ0O,GAAM4G,eAAeH,EAAU+Z,mBAAmB,GAAI/Z,EAAU+Z,mBAAmB,IAC3FvnB,OAASA,MAAO,iBAAkBvC,KAAM,QACxCw4B,OAAQk4C,EAAWl4C,QAEnBo4C,EAAgB,IAAI10B,GAAeh4C,EAAKiD,OAAO5E,MAAO,cAAeouE,GAAgB,GACzFxsE,KAAKd,QAAQi6C,WAAWuzB,0BAA0B1sE,KAAKd,QAAQ0b,UAAUhP,EAAUwmC,UAAWpyC,KAAKd,SACnGc,KAAKd,QAAQytE,sBACbF,EAAc5sE,GAAKA,EAAG,GACtBG,KAAKd,QAAQ0tE,kBAAkBH,EAAe1sE,EAAKiD,QACnDhD,KAAKd,QAAQw5D,sBAER9sD,IACLA,EAAUnK,SAAW4yB,EACrBr0B,KAAKd,QAAQ2sE,wBAAwBjgE,MAAiBnK,SAAU4yB,IAChEr0B,KAAKd,QAAQkc,oBAAoBxP,MAO7C8+D,EAAeppC,UAAU61B,QAAU,SAAU5rD,EAAUxL,GACnD,IAEI8sE,EACAC,EAEAlhE,EALA+/D,KACAD,KAKA3rE,EAAKwC,kBAAkBkR,GAEvB7H,EADgB7L,EAAKwC,OACK2a,WAAW,GAEhCnd,EAAKwC,kBAAkB6Q,IAAapT,KAAKd,QAAQihC,uBACtDv0B,EAAY5L,KAAKd,QAAQihC,sBAE7B,IAAIn9B,EAAShD,KAAKm2D,WAAWp2D,EAAK2B,cAAe3B,EAAKiD,OAAqB,uBAAbuI,GAAmC,GAC7FugE,EAAyB,uBAAbvgE,EAAoC,WAAa,WAC7DwgE,EAAyB,uBAAbxgE,EAAoC,eAAiB,eACrE,GAAIvI,aAAkBuR,GAClBm3D,EAAWI,GAAalgE,EAAUkgE,GAClClgE,EAAUkgE,GAAa9oE,EAAOnD,GAC9B8rE,EAAWG,GAAalgE,EAAUkgE,GAClCJ,EAAWK,GAAangE,EAAUmgE,GAClC/rE,KAAKgsE,sBAAsBpgE,EAAW8/D,EAAYC,EAAYpgE,OAE7D,CACDshE,EAAYjhE,EAAUkgE,GACtBgB,EAAYlhE,EAAUmgE,GACtBngE,EAAUmgE,GAAa/oE,EAAOnD,GAC9B+L,EAAUkgE,GAAa/rE,EAAKiD,OAAOnD,GACnC8rE,EAAWG,GAAalgE,EAAUkgE,GAClCH,EAAWI,GAAangE,EAAUmgE,GAClC,IAAItmB,GACA75C,UAAWA,EAAWwqD,UAAY/hC,OAAQw4C,EAAWr6C,OAAQs6C,GAC7DzW,UAAYhiC,OAAQs3C,EAAWG,GAAYt5C,OAAQm5C,EAAWI,IAC9DzV,QAAQ,EAAOttC,MAAO,WAAY4iD,aAAcrgE,GAEpDvL,KAAKy2D,aAAanyB,eAAainC,iBAAkB9lB,GAC7CA,EAAI6Q,QACJ1qD,EAAUkgE,GAAae,EACvBjhE,EAAUmgE,GAAae,EACvBnB,EAAWG,GAAae,EACxBlB,EAAWI,GAAae,IAGxB9sE,KAAKd,QAAQ2sE,wBAAwBjgE,KAAe+/D,GACpD3rE,KAAKd,QAAQkc,oBAAoBxP,GACjC65C,GACI75C,UAAWA,EAAWwqD,UAAY/hC,OAAQw4C,EAAWr6C,OAAQs6C,GAC7DzW,UAAYhiC,OAAQs3C,EAAWG,GAAYt5C,OAAQm5C,EAAWI,IAAczV,QAAQ,EACpFttC,MAAO,UAAW4iD,aAAcrgE,GAEpCvL,KAAKy2D,aAAanyB,eAAainC,iBAAkB9lB,IAGzDzlD,KAAK+qD,kBAAkBhrD,OAAM9F,EAAwB,uBAAbsR,IAG5Cm/D,EAAeppC,UAAUyrC,IAAM,WAC3B/sE,KACK2qE,cAAcqC,WAAa,EAC5BhtE,KAAKd,QAAQ+tE,gBACbjtE,KAAKd,QAAQguE,eAAehV,mBAEhCl4D,KAAK2qE,cAAcwC,WAAantE,KAAKotE,cACjCptE,KAAKd,QAAQ+tE,gBACbjtE,KAAKd,QAAQguE,eAAexU,iBAEN,QAAtB14D,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQmuE,uBAIrB3C,EAAeppC,UAAUgsC,SAAW,SAAUvF,EAAO5/C,GACjD4/C,EAAMloE,GAAKkoE,EAAMloE,IAAMyZ,KACvByuD,EAAMwB,OAASvpE,KAAKd,QAAQqsB,OAAO90B,QACnCsxE,EAAQ,IAAIwC,GAAMvqE,KAAKd,QAAS,SAAU6oE,GAAO,IAC3CyC,cAAgB,EACtBzC,EAAM0C,eACNzqE,KAAKd,QAAQqsB,OAAOz0B,KAAKixE,GACzB/nE,KAAKd,QAAQquE,iBAAiBxF,EAAMwB,QAAUxB,EAAMloE,GACpDG,KAAKd,QAAQsuE,YAAczF,EACdA,EAAM5/C,QACnB,GAAIA,EACA,IAAK,IAAIzxB,EAAI,EAAGA,EAAIyxB,EAAQ1xB,OAAQC,IAChCsJ,KAAKd,QAAQktB,IAAIjE,EAAQzxB,KAKrCg0E,EAAeppC,UAAU0mC,eAAiB,SAAUyF,GAEhD,IAAK,IADDliD,EAASvrB,KAAKd,QAAQqsB,OACjB70B,EAAI,EAAGA,EAAI60B,EAAO90B,OAAQC,IAAK,CAEpC,GADe60B,EAAO70B,GAAGyxB,QAAQjK,QAAQuvD,IACzB,EACZ,OAAOliD,EAAO70B,GAGtB,OAAOsJ,KAAKd,QAAQsuE,aAGxB9C,EAAeppC,UAAUizB,SAAW,SAAUmZ,GAE1C,IAAK,IADDniD,EAASvrB,KAAKd,QAAQqsB,OACjB70B,EAAI,EAAGA,EAAI60B,EAAO90B,OAAQC,IAC/B,GAAI60B,EAAO70B,GAAGmJ,KAAO6tE,EACjB,OAAOniD,EAAO70B,IAM1Bg0E,EAAeppC,UAAUqsC,YAAc,SAAUC,GAC7C,IAAIriD,EAASvrB,KAAKu0D,SAASqZ,GAC3B,GAAIriD,EAAQ,CAGR,IAAK,IAFD7L,EAAQ1f,KAAKd,QAAQqsB,OAAOrN,QAAQqN,GACpCsiD,EAActiD,EAAOpD,QAChBzxB,EAAIm3E,EAAYp3E,OAAS,EAAGC,GAAK,EAAGA,IACzCsJ,KAAKd,QAAQm2D,SAASr1D,KAAKd,QAAQ0b,UAAUizD,EAAYn3E,KACzDsJ,KAAKd,QAAQ48C,OAAO97C,KAAKd,QAAQ0b,UAAUizD,EAAYn3E,KACrC,kBAAd60B,EAAO1rB,IACHG,KAAKd,QAAQsuE,YAAY3tE,KAAO+tE,IAChC5tE,KAAKd,QAAQsuE,YAAcxtE,KAAKd,QAAQqsB,OAAOvrB,KAAKd,QAAQqsB,OAAO90B,OAAS,WAIjFuJ,KAAKd,QAAQquE,iBAAiBhiD,EAAOg+C,QAC5CvpE,KAAKd,QAAQqsB,OAAOplB,OAAOuZ,EAAO,GACR,QAAtB1f,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQmuE,wBAKzB3C,EAAeppC,UAAUwsC,YAAc,SAAU3lD,EAAS4lD,GACtD,IAAIhG,EAAQ/nE,KAAKu0D,SAASwZ,IAAgB/tE,KAAKd,QAAQsuE,YACvDxtE,KAAKd,QAAQ8uE,eAAejG,EAAMloE,IAElC,IAAK,IADDouE,EACKpxE,EAAK,EAAGqxE,EAAY/lD,EAAStrB,EAAKqxE,EAAUz3E,OAAQoG,IAAM,CAC/D,IAAInG,EAAIw3E,EAAUrxE,GACJmD,KAAKgoE,eAAetxE,GACdyxB,QAAQjK,QAAQxnB,IACvB,IACTu3E,EAAcjuE,KAAKd,QAAQ0b,UAAUlkB,GACrCsJ,KAAKd,QAAQm2D,SAAS4Y,GACtBjuE,KAAKd,QAAQ48C,OAAO97C,KAAKd,QAAQ0b,UAAUlkB,IAC3CsJ,KAAKd,QAAQktB,IAAI6hD,MAK7BvD,EAAeppC,UAAU6sC,WAAa,SAAUT,GAC/B1tE,KAAKd,QAAQqsB,OAA1B,IACIw8C,EAAQ/nE,KAAKu0D,SAASmZ,GAC1B,GAAI3F,EAAO,CACP,IAAIqG,KACAC,GACAxuE,GAAI6tE,EAAY,IAAMp0D,KAAY6O,WAAa+F,SAAS,EAAM+5C,MAAM,GAExEjoE,KAAKstE,SAASe,GACdA,EAAS9E,OAASvpE,KAAKd,QAAQqsB,OAAO90B,OAAS,EAC/C,IACK,IAAIoG,EAAK,EAAG6f,EAAKqrD,EAAM5/C,QAAStrB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAItC,EAAMmiB,EAAG7f,GACbuxE,EAAct3E,KAAKkJ,KAAKd,QAAQ0b,UAAUrgB,IAE9CyF,KAAKsuE,MAAMF,KAInB1D,EAAeppC,UAAUitC,KAAO,WAG5B,OAFAvuE,KAAK2qE,cAAcqC,WAAa,EAChChtE,KAAK2qE,cAAcwC,WAAantE,KAAKotE,cAC9BptE,KAAK2qE,cAAcwC,YAG9BzC,EAAeppC,UAAU8rC,YAAc,WACnC,IAAIhwD,KACA7iB,KAEJ,GADAyF,KAAK2qE,cAAc/2B,cACf5zC,KAAKd,QAAQke,cAAcF,WAAWzmB,OAAS,EAAG,CAClD2mB,EAAgBpd,KAAKd,QAAQke,cAAcF,WAC3C,IAAK,IAAI7mB,EAAI,EAAGA,EAAI+mB,EAAc3mB,OAAQJ,IAAK,CAC3C,IAAIuJ,OAAU,EAGVA,EAFAI,KAAKd,QAAQi6C,YACbn5C,KAAKd,QAAQi6C,WAAW2vB,yBAAyB5qD,QAAQd,EAAc/mB,KAAO,EACpEqlB,GAAa1b,KAAKd,QAAQ0b,UAAUwC,EAAc/mB,GAAG+7C,WAGrD12B,GAAa0B,EAAc/mB,IAEzCkE,EAAIzD,KAAK8I,IAGjB,GAAII,KAAKd,QAAQke,cAAcpE,MAAMviB,OAAS,EAAG,CAC7C2mB,EAAgBA,EAAc+e,OAAOn8B,KAAKd,QAAQke,cAAcpE,OAChE,IAAS3iB,EAAI,EAAGA,EAAI2J,KAAKd,QAAQke,cAAcpE,MAAMviB,OAAQJ,IAAK,CAC9D,IAAIkK,EAAOihC,GAAMxhC,KAAKd,QAAQke,cAAcpE,MAAM3iB,IAClD2J,KACKwuE,cAAcjuE,GACnBhG,EAAIzD,KAAK0qC,GAAMjhC,IACf,IAAI7E,EAASL,IAEb,GADA0B,EAAarB,GAAS6E,EAAK8L,YAAa9L,EAAKxE,QAASwE,EAAKvE,SACvDuE,EAAKqR,SAAU,CAKf,IAAK,IAJDgiC,EAAa5zC,KAAK2qE,cAAc/2B,WAChC66B,OAAW,EAEXz1D,EAAQhZ,KAAKw5D,kBAAkBj5D,MAAgB,GAC1C7J,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAAK,CAEnC,IAAI6yB,EAAeqqB,GADnB66B,EAAWzuE,KAAKd,QAAQ0b,UAAU5B,EAAMtiB,GAAGmJ,KACJA,IAAM2hC,GAAMitC,GAC/C7zE,EAAYa,EAAuBC,GAAU1E,EAAGuyB,EAAazb,QAAQ/R,QAAS9E,EAAGsyB,EAAazb,QAAQ9R,UACtGyyE,aAAoBl6D,KACpBgV,EAAaxtB,QAAUnB,EAAU5D,EACjCuyB,EAAavtB,QAAUpB,EAAU3D,EACjCsyB,EAAald,aAAe9L,EAAK8L,aAGzCrM,KAAK2qE,cAAc/2B,WAAaA,IAI5C,GAAsC,IAAlC5zC,KAAK2qE,cAAcqC,WAAkB,CACrChtE,KAAKk4D,mBACL,IAAK,IAAIr7D,EAAK,EAAG6xE,EAAkBtxD,EAAevgB,EAAK6xE,EAAgBj4E,OAAQoG,IAAM,CACjF,IAAI4zB,EAAOi+C,EAAgB7xE,GACvBmD,KAAKd,QAAQ0b,UAAU6V,EAAK5wB,MACxBG,KAAKd,QAAQi6C,YACbn5C,KAAKd,QAAQi6C,WAAW2vB,yBAAyB5qD,QAAQuS,IAAS,EAClEzwB,KAAKd,QAAQ48C,OAAO97C,KAAKd,QAAQ0b,UAAU6V,EAAK2hB,WAGhDpyC,KAAKd,QAAQ48C,OAAOrrB,IAIhCzwB,KAAK04D,iBAGT,OADA14D,KAAK2uE,aAAap0E,EAAK,UAChBA,GAEXmwE,EAAeppC,UAAUktC,cAAgB,SAAUjuE,GAC/C,GAAwB,SAApBA,EAAKnC,MAAMvC,MAAmB0E,EAAKnC,MAAMk7C,UACzC/4C,EAAKnC,MAAMk7C,SAASD,WAAWE,WAC/Bh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAAS,EAAG,CAErD,IAAK,IAAIoG,EAAK,EAAG+xE,EADDruE,EAAKnC,MAAMk7C,SAASD,WAAWE,UACL18C,EAAK+xE,EAAYn4E,OAAQoG,IAAM,CACrE,IAAInG,EAAIk4E,EAAY/xE,GACpBmD,KAAK6qE,aAAan0E,GAAM8qC,GAAMxhC,KAAKd,QAAQ0b,UAAUlkB,IACjDsJ,KAAK6qE,aAAan0E,GAAG0H,MAAMk7C,SAASD,WAAWE,WAC/Cv5C,KAAK6qE,aAAan0E,GAAG0H,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAAS,GAClEuJ,KAAKwuE,cAAcxuE,KAAK6qE,aAAan0E,IAG7CsJ,KAAK2qE,cAAcE,aAAe7qE,KAAK6qE,eAI/CH,EAAeppC,UAAU8mB,MAAQ,WAC7B,IACIymB,EAAkB7uE,KAAKd,QAAgB,oBAC3Cc,KAAKd,QAAQ2qB,uBAAsB,GACnC7pB,KAAKd,QAAQgY,eAAiBlX,KAAKd,QAAQgY,eAAiBC,gBAAc23D,MAC1E,IAAI1xD,KACA7iB,KACJA,EAAIsF,GAAK,QAAUyZ,MACnB/e,EAAM,IAAIga,GAAKvU,KAAKd,QAAS,QAAS3E,GAAK,IACvCqX,YAEJwL,GADAA,EAAgBpd,KAAKd,QAAQke,cAAcpE,OACbmjB,OAAOn8B,KAAKd,QAAQke,cAAcF,YAChE,IAAK,IAAIxmB,EAAI,EAAGA,EAAI0mB,EAAc3mB,OAAQC,IACjC0mB,EAAc1mB,GAAGmkB,UAClBtgB,EAAIqX,SAAS9a,KAAKsmB,EAAc1mB,GAAGmJ,IAG3CG,KAAKd,QAAQktB,IAAI7xB,GACjB,IAAIshB,GAAUhgB,KAAM,QAASkgB,WAAYxhB,EAAKyhB,WAAYzhB,EAAKuhB,SAAU,YACzE9b,KAAKic,gBAAgBJ,GACrB7b,KAAKd,QAAQgY,eAAiBlX,KAAKd,QAAQgY,gBAAkBC,gBAAc23D,MAC3E9uE,KAAKd,QAAQ2qB,sBAAsBglD,IAGvCnE,EAAeppC,UAAUytC,QAAU,SAAUx0E,GACzC,IACIs0E,EAAkB7uE,KAAKd,QAAgB,oBAC3Cc,KAAKd,QAAQ2qB,uBAAsB,GACnC7pB,KAAKd,QAAQgY,eAAiBlX,KAAKd,QAAQgY,eAAiBC,gBAAc23D,MAC1E,IAAI1xD,KACA7iB,EACA6iB,EAActmB,KAAKyD,GAGnB6iB,EAAgBpd,KAAKd,QAAQke,cAAcpE,MAE/C,IAAK,IAAItiB,EAAI,EAAGA,EAAI0mB,EAAc3mB,OAAQC,IAAK,CAC3C,IAAI6J,EAAO6c,EAAc1mB,GACrBmlB,GACAhgB,KAAM,UAAWkgB,WAAYL,GAAYnb,GACzCyb,WAAYN,GAAYnb,GAAOub,SAAU,YAK7C,GAHM9b,KAAKd,QAAQgY,eAAiBC,gBAAckyD,UAC9CrpE,KAAKic,gBAAgBJ,GAErBtb,EAAKqR,SAAU,CACXrR,EAAKkyB,OAASlyB,EAAKkyB,MAAMh8B,OAAS,GAClCuJ,KAAKd,QAAQ8vE,YAAYzuE,EAAMA,EAAKkyB,OAEpClyB,EAAK+X,aAAe/X,EAAK+X,YAAY7hB,OAAS,GAC9CuJ,KAAKd,QAAQ+vE,aAAa1uE,EAAMA,EAAK+X,aAGzC,IAAK,IADDkF,EAAaxd,KAAKd,QAAQ0b,UAAUra,EAAKsa,UACpCxkB,EAAIkK,EAAKqR,SAASnb,OAAS,EAAGJ,GAAK,EAAGA,IAC1C2J,KAAKd,QAAQ0b,UAAUra,EAAKqR,SAAS,IAAKiJ,SAAW,GACtD7a,KAAKd,QAAQ0c,YAAY5b,KAAKd,QAAQ0b,UAAUra,EAAKqR,SAAS,IAAKrR,GAC/DA,EAAKsa,UAAYta,EAAKqR,SAAS,IAC/B5R,KAAKd,QAAQif,SAASX,EAAYjd,EAAKqR,SAAS,IAGpDrR,EAAKsa,UACL7a,KAAKd,QAAQ0c,YAAYrb,EAAMid,GAGvCxd,KAAKd,QAAQgwE,WAAW3uE,GACxBP,KAAK2b,iBAET3b,KAAKd,QAAQgY,eAAiBlX,KAAKd,QAAQgY,gBAAkBC,gBAAc23D,MAC3E9uE,KAAKd,QAAQ2qB,sBAAsBglD,IAGvCnE,EAAeppC,UAAUgtC,MAAQ,SAAU/zE,GACvC,GAAIA,GAAOyF,KAAK2qE,cAAcwC,WAAY,CACtCntE,KAAKd,QAAQ2qB,uBAAsB,GACnC,IAAIslD,EAAc50E,EAAMyF,KAAKovE,aAAa70E,GACtCyF,KAAK2qE,cAAcwC,WACvB,GAAIgC,EAAa,CACb,IAAIE,EAAqC,IAAvBF,EAAY14E,OAC1B64E,GAAc,EACdC,KACAC,KACkC,IAAlCxvE,KAAK2qE,cAAcqC,YACnBhtE,KAAK2b,iBAEL3b,KAAKd,QAAQ+tE,iBACbqC,GAAc,EACdtvE,KAAKd,QAAQguE,eAAehV,oBAEhC,IAAK,IAAIr7D,EAAK,EAAG4yE,EAAgBN,EAAatyE,EAAK4yE,EAAch5E,OAAQoG,IAAM,CAE3E0yE,GADIhB,EAAOkB,EAAc5yE,IACRgD,IAAM0uE,EAE3B,IAAK,IAAIl4E,EAAI,EAAGA,EAAI84E,EAAY14E,OAAQJ,IAAK,CACzC,IAAIk4E,EAAOY,EAAY94E,GACvB,GAAIymB,GAAcyxD,KAAUn7D,GAAW,CACnC,IAAIs8D,EAAYluC,GAAM+sC,GAClBl6C,EAASq7C,EAAUjuE,SACvBiuE,EAAUjuE,SAAW,GACjB8tE,EAAYl7C,IAAWm7C,EAASn7C,KAChCq7C,EAAUjuE,SAAW+tE,EAASn7C,IAElCA,EAASq7C,EAAUt9B,SACnBs9B,EAAUt9B,SAAW,GACjBm9B,EAAYl7C,IAAWm7C,EAASn7C,KAChCq7C,EAAUt9B,SAAWo9B,EAASn7C,IAElC,IAAIhc,EAASrY,KAAK2vE,eAAeD,EAAWL,GAC5CG,EAASjB,EAAK1uE,IAAMwY,EAAOxY,OAE1B,CACD,IAAI+vE,EAAU5vE,KAAKg7B,UAAUuzC,EAAMc,GAEnC,GAAIO,EAAS,CACTJ,EAASjB,EAAK1uE,IAAM+vE,EAAQ/vE,GAC5B,IAAIgwE,EAAQtB,EAAK51B,QACjB,GAAIk3B,EACA,IAAK,IAAInzD,EAAK,EAAGozD,EAAUD,EAAOnzD,EAAKozD,EAAQr5E,OAAQimB,IAAM,CAEzD,GAAI6yD,EADAQ,EAAOD,EAAQpzD,KACM8yD,EAASO,GAAO,EACjCC,EAAehwE,KAAKd,QAAQ0b,UAAU40D,EAASO,KACtC39B,SAAWo9B,EAASjB,EAAK1uE,IACtCG,KAAKd,QAAQ2sE,wBAAwBmE,GAAgB59B,SAAU,GAAIC,aAAc,KAAQD,SAAU49B,EAAa59B,SAAUC,aAAc29B,EAAa39B,gBAKjK,GADAw9B,EAAQtB,EAAK71B,SAET,IAAK,IAAIltB,EAAK,EAAGykD,EAAUJ,EAAOrkD,EAAKykD,EAAQx5E,OAAQ+0B,IAAM,CACzD,IAAIukD,EACJ,GAAIR,EADAQ,EAAOE,EAAQzkD,KACMgkD,EAASO,GAAO,CACrC,IAAIC,GAAAA,EAAehwE,KAAKd,QAAQ0b,UAAU40D,EAASO,KACtCtuE,SAAW+tE,EAASjB,EAAK1uE,IACtCG,KAAKd,QAAQ2sE,wBAAwBmE,GAAgBvuE,SAAU,GAAIy+B,aAAc,KAAQz+B,SAAUuuE,EAAavuE,SAAUy+B,aAAc8vC,EAAa9vC,oBAOzJ,IAAhBovC,IACAtvE,KAAKd,QAAQguE,eAAexU,iBAC5B4W,GAAc,GAEQ,QAAtBtvE,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQmuE,sBAEjBrtE,KAAK2qE,cAAcqC,aACnBhtE,KAAKd,QAAQ2qB,uBAAsB,MAI/C6gD,EAAeppC,UAAU8tC,aAAe,SAAU70E,GAC9C,IAAI8d,EACA63D,KACJlwE,KAAK2qE,cAAcqC,WAAa,EAChC,IAAK,IAAIt2E,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IAC5B2hB,EAASqD,GAAYnhB,EAAI7D,IACzBw5E,EAAQp5E,KAAKuhB,GAEjB,OAAO63D,GAEXxF,EAAeppC,UAAUquC,eAAiB,SAAU/jE,EAAWyjE,GAC3D,IAAIW,EACAt0D,EAAc8lB,GAAM51B,GAKxB,OAJA5L,KAAKmwE,gBAAgBz0D,GACrBA,EAAY6tD,QAAU,EACtByG,EAAehwE,KAAKd,QAAQktB,IAAI1Q,GAChC1b,KAAKs1D,eAAe0a,GAAeX,GAC5BW,GAEXtF,EAAeppC,UAAUtG,UAAY,SAAUz6B,EAAM8uE,EAAaz9D,EAAUw+D,GACxE,IAAIR,EAGAS,EAFAzF,KACAlvD,EAAc8lB,GAAMjhC,GASxB,GAPIA,EAAKnC,OAA6B,SAApBmC,EAAKnC,MAAMvC,MAAmB0E,EAAKnC,MAAMk7C,UACvD/4C,EAAKnC,MAAMk7C,SAASD,WAAWE,WAC5Bh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAAU9iD,SAC5C45E,EAAU30D,EAAYtd,MAAMk7C,SAASD,WAAWE,UAChD79B,EAAY6tD,QAAU,EACtB7tD,EAAYtd,MAAMk7C,SAASD,WAAWE,eAAYt/C,IAElDsG,EAAKqR,WAAYrR,EAAKqR,SAASnb,QAAYmb,GAAaA,EAASnb,OAGhE,GAAI8J,EAAKnC,OAA8B,mBAArBmC,EAAKnC,MAAMA,QAAuE,IAAzCmC,EAAKV,GAAGqe,QAAQ,qBAC5Ele,KAAKd,QAAQ0b,UAAUra,EAAKV,IAI5B,IAAK,IAHDywE,EAAkB/vE,EAAKV,GAAGyO,MAAM,oBAChCkP,OAAa,EACb8K,EAAatoB,KAAKd,QAAQ0b,UAAUra,EAAKV,IACpCxJ,EAAI,EAAGA,EAAIiyB,EAAWqwB,QAAQliD,OAAQJ,IAAK,CAChD,IAAIuV,EAAY5L,KAAKd,QAAQ0b,UAAU0N,EAAWqwB,QAAQtiD,IAC1D,GAAIuV,EAAW,CACX4R,EAAaxd,KAAKd,QAAQ0b,UAAUhP,EAAUnK,UAC9C,IAAI8qE,EAAavsE,KAAKs0B,cAAc9W,EAAY8yD,EAAgB,IAC5D9D,GACA3sE,GAAIywE,EAAgB,GAAKh3D,KACzB9hB,MAAO+0E,EAAW/0E,MAClBmiB,KAAM4yD,EAAW5yD,KACjBljB,OAAQ81E,EAAW91E,OACnB2H,OAASA,MAAO,iBAAkBvC,KAAM,QACxCw4B,OAAQk4C,EAAWl4C,QAEvBr0B,KAAKd,QAAQ0tE,kBAAkBJ,EAAgBhvD,SAKvDxd,KAAKmwE,gBAAgBz0D,EAAa00D,GAClC10D,EAAY6tD,QAAU,EAClB33D,IACA8J,EAAY9J,SAAWA,GAE3Bg+D,EAAU5vE,KAAKd,QAAQktB,IAAI1Q,QA9B3Bk0D,EAAU5vE,KAAKuwE,WAAWhwE,EAAM8uE,GAgCpC,IAAK,IAAIxyE,EAAK,EAAG6f,EAAKC,OAAOC,KAAKguD,GAAkB/tE,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtE,IAAInG,EAAIgmB,EAAG7f,GACXmD,KAAKd,QAAQktB,IAAIw+C,EAAgBl0E,IASrC,OAPI25E,GAAWA,EAAQ55E,SACnBm5E,EAAQxxE,MAAMk7C,SAASD,WAAWE,UAAY82B,EAC9CrwE,KAAKwwE,kBAAkBZ,IAEvBA,GACA5vE,KAAKs1D,eAAesa,GAAUP,GAE3BO,GAEXlF,EAAeppC,UAAUhN,cAAgB,SAAUtW,EAAQsU,GACvD,IAAIm+C,EAAoBzyD,EAAO5f,MAAMka,YACrC,GAAIm4D,GAAqBA,EAAkBh6E,OACvC,IAAK,IAAImnD,EAAI,EAAGA,GAAK6yB,EAAkBh6E,OAAQmnD,IAC3C,GAAI6yB,EAAkB7yB,GAAG/9C,KAAOyyB,EAC5B,OAAOm+C,EAAkB7yB,IAMzC8sB,EAAeppC,UAAUkvC,kBAAoB,SAAUjwE,GACnD,IAAIqL,KACAwE,KACJ,GAAwB,SAApB7P,EAAKnC,MAAMvC,MAAmB0E,EAAKnC,MAAMk7C,UACzC/4C,EAAKnC,MAAMk7C,SAASD,WAAWE,WAC5Bh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAE5C,IAAK,IADD45E,EAAU9vE,EAAKnC,MAAMk7C,SAASD,WAAWE,UACpCqE,EAAI,EAAGA,EAAIyyB,EAAQ55E,OAAQmnD,IAAK,CAErC,IAAK,IADDhwC,EAAQ5N,KAAKd,QAAQ0b,UAAUy1D,EAAQzyB,KAAO59C,KAAK2qE,cAAcE,aAAawF,EAAQzyB,IACjF/gD,EAAK,EAAG6f,EAAK9O,EAAM8qC,SAAU77C,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACxD,IAAIxG,EAAIqmB,EAAG7f,GACP+O,EAAUsS,QAAQ7nB,GAAK,GACvBuV,EAAU9U,KAAKT,GAGvB,IAAK,IAAIm1B,EAAK,EAAGC,EAAK7d,EAAM+qC,QAASntB,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACnDn1B,EAAIo1B,EAAGD,GACP5f,EAAUsS,QAAQ7nB,GAAK,GACvBuV,EAAU9U,KAAKT,GAGvB,IAAIq6E,EAAah1D,GAAY1b,KAAK2qE,cAAcE,aAAawF,EAAQzyB,KACrE8yB,EAAWl4B,UAAYj4C,EAAKV,GAC5B,IAAI+vE,EAAU5vE,KAAKg7B,UAAU01C,GAAY,GACzCtgE,EAAKigE,EAAQzyB,IAAMgyB,EAAQ/vE,GAC3BwwE,EAAQzyB,GAAKgyB,EAAQ/vE,GACrBG,KAAKd,QAAQyxE,WAAWf,EAASrvE,EAAKV,IACtC,IAAK,IAAIg2C,EAAK,EAAG+6B,EAAchlE,EAAWiqC,EAAK+6B,EAAYn6E,OAAQo/C,IAAM,CACrE,IAAIn/C,EAAIk6E,EAAY/6B,GAEhB02B,EAAa7wD,GADJ1b,KAAKd,QAAQ0b,UAAUlkB,IAAMsJ,KAAKd,QAAQ2xE,eAAen6E,IAElE0Z,EAAKm8D,EAAW9qE,WAAa2O,EAAKm8D,EAAWn6B,YAC7Cm6B,EAAWhD,QAAU,EACrBgD,EAAW1sE,IAAMyZ,KACjBizD,EAAW9qE,SAAW2O,EAAKm8D,EAAW9qE,UACtC8qE,EAAWn6B,SAAWhiC,EAAKm8D,EAAWn6B,UACtCxmC,EAAUzF,OAAOyF,EAAUsS,QAAQxnB,GAAI,GACvCsJ,KAAKd,QAAQktB,IAAImgD,OAMrC7B,EAAeppC,UAAUivC,WAAa,SAAUh2E,EAAK80E,GACjD,IAIIh3D,EAHAy4D,KACAl/D,KACAm/D,KAEAC,KACJp/D,EAAWA,EAASuqB,OAAO5hC,EAAIqX,UAC/B,IAAI/R,EAAKyZ,KACT,GAAItZ,KAAK2qE,cAAc/2B,YAAcr5C,EAAIqX,SAASnb,OAAS,EACvD,IAAK,IAAIC,EAAI,EAAGA,EAAIkb,EAASnb,OAAQC,IAAK,CACtC,IAAIu6E,OAAW,GAEXA,EADAjxE,KAAK2qE,cAAc/2B,WACR5zC,KAAK2qE,cAAc/2B,WAAWhiC,EAASlb,IAGvCsJ,KAAKd,QAAQ0b,UAAUhJ,EAASlb,KAEtCmkB,SAAW,GAChBo2D,IACIn0D,GAAcm0D,KAAc79D,GAC5B29D,EAAaj6E,KAAKm6E,IAGlB54D,EAASrY,KAAKg7B,UAAUi2C,EAAU5B,OAAap1E,EAAW4F,GAC1DmxE,EAAMl6E,KAAKm6E,EAASpxE,IACpBixE,EAAYh6E,KAAKuhB,EAAOxY,MAKxC,IAAK,IAAIkgB,EAAI,EAAGA,EAAIgxD,EAAat6E,OAAQspB,IAAK,CAC1C,GAAIgxD,EAAahxD,GAAGte,UAAYsvE,EAAahxD,GAAGqyB,SAC5C,IAAK,IAAI/7C,EAAI,EAAGA,EAAI26E,EAAMv6E,OAAQJ,IAC1B06E,EAAahxD,GAAGte,WAAcuvE,EAAM36E,KACpC06E,EAAahxD,GAAGte,UAAY5B,GAE5BkxE,EAAahxD,GAAGqyB,WAAc4+B,EAAM36E,KACpC06E,EAAahxD,GAAGqyB,UAAYvyC,GAIxCwY,EAASrY,KAAK2vE,eAAeoB,EAAahxD,GAAIsvD,GAC9CyB,EAAYh6E,KAAKuhB,EAAOxY,IAE5B,IAAIoqE,EAAYjqE,KAAKg7B,UAAUzgC,EAAK80E,EAAayB,GAKjD,OAJI7G,GAAaA,EAAUnyD,WAAamyD,EAAU7rE,OAAkC,kBAAzB6rE,EAAU7rE,MAAMvC,OACvEmE,KAAKd,QAAQkc,oBAAoB6uD,GACjCA,EAAUn8D,QAAQ6P,QAAQ,IAAIC,KAE3BqsD,GAGXS,EAAeppC,UAAU6uC,gBAAkB,SAAU51E,EAAK61E,GACtD71E,EAAIsF,IAAMuwE,GAAe92D,KACzB,IAAImlC,EAAuC,GAAhCz+C,KAAK2qE,cAAcqC,WAC9B,GAAIlwD,GAAcviB,KAAS6Y,GAAW,CAOlC,GANA7Y,EAAIwG,aACA/J,EAAGuD,EAAIwG,YAAY/J,EAAIynD,EAAMxnD,EAAGsD,EAAIwG,YAAY9J,EAAIwnD,GAExDlkD,EAAIsQ,aACA7T,EAAGuD,EAAIsQ,YAAY7T,EAAIynD,EAAMxnD,EAAGsD,EAAIsQ,YAAY5T,EAAIwnD,GAEvC,WAAblkD,EAAIsB,KAEJ,IAAK,IADD1C,EAAWoB,EAAIpB,SACVzC,EAAI,EAAGA,EAAIyC,EAAS1C,OAAQC,IAC5ByO,GAAMC,aAAajM,EAASzC,GAAGwZ,UAChC/W,EAASzC,GAAGwZ,QACRlZ,EAAGmC,EAASzC,GAAGwZ,OAAOlZ,EAAIynD,EAAMxnD,EAAGkC,EAASzC,GAAGwZ,OAAOjZ,EAAIwnD,IAG7Dt5C,GAAMC,aAAajM,EAASzC,GAAG8B,UAChCW,EAASzC,GAAG8B,QACRxB,EAAGmC,EAASzC,GAAG8B,OAAOxB,EAAIynD,EAAMxnD,EAAGkC,EAASzC,GAAG8B,OAAOvB,EAAIwnD,IAK1E,IAAiB,aAAblkD,EAAIsB,MAAoC,WAAbtB,EAAIsB,OAC3BtB,EAAIpB,UAAYoB,EAAIpB,SAAS1C,OAAS,EAEtC,IADI0C,EAAWoB,EAAIpB,SACVzC,EAAI,EAAGA,EAAIyC,EAAS1C,OAAS,EAAGC,IACrCyC,EAASzC,GAAGiF,MAAM3E,GAAKynD,EACvBtlD,EAASzC,GAAGiF,MAAM1E,GAAKwnD,OAMnClkD,EAAIwB,SAAW0iD,EACflkD,EAAIyB,SAAWyiD,GAMvBisB,EAAeppC,UAAUs5B,WAAa,SAAUrgE,GAC5C,IAAI8d,EACAqD,EACJA,EAAc8lB,GAAMxhC,KAAKd,QAAQwlB,eACjC,IAAK,IAAI7nB,EAAK,EAAG6f,EAAKC,OAAOC,KAAKriB,GAAMsC,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC1D,IAAIggB,EAAOH,EAAG7f,GACd6e,EAAYmB,GAAQtiB,EAAIsiB,GAc5B,OAZIC,GAAc9c,KAAKd,QAAQwlB,iBAAmBnQ,KAC9C8D,EAAS,IAAI9D,GAAKvU,KAAKd,QAAS,QAASwc,GAAa,IAC/C7b,IAAMG,KAAKd,QAAQwlB,cAAc7kB,IAAM,QAAUyZ,KACxDtZ,KAAKd,QAAQ6Z,WAAWV,MAGxBA,EAAS,IAAIjF,GAAUpT,KAAKd,QAAS,aAAcwc,GAAa,IACzD7b,IAAMG,KAAKd,QAAQwlB,cAAc7kB,IAAM,aAAeyZ,KAC7DtZ,KAAKd,QAAQ6Z,WAAWV,IAE5BrY,KAAKd,QAAQkc,oBAAoB/C,GACjCrY,KAAKd,QAAQihC,qBAAuB9nB,EAC7BA,GAKXqyD,EAAeppC,UAAUw5B,mBAAqB,SAAUvgE,GACpD,IAAI8d,EACJrY,KAAKd,QAAQgyE,gBAAgB32E,GAC7ByF,KAAKd,QAAQiyE,uBAAuBnxE,KAAKd,QAAQ0b,UAAUrgB,EAAIsF,YACxDG,KAAKd,QAAQ0b,UAAUrgB,EAAIsF,IAClCwY,EAASrY,KAAKd,QAAQktB,IAAI7xB,GACA,QAAtByF,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQmuE,sBAEjBrtE,KAAKs1D,eAAej9C,IAChB9d,IAAU8b,GAAkBrW,KAAKd,WACjCc,KAAKd,QAAQ8W,OAASC,eAAaO,SACnCxW,KAAKd,QAAQihC,0BAAuBlmC,IAM5CywE,EAAeppC,UAAU25B,QAAU,SAAU1gE,EAAK44D,GAC9C,IAAI7qC,EAAatoB,KAAKd,QAAQ0kE,sBAAsBrpE,EAAK44D,GACzDnzD,KAAKd,QAAQ+mE,cAAc1rE,EAAK+tB,aAAsBoF,GAAepF,EAAa,GAAEha,MAAM,KAAK,QAAKrU,IAGxGywE,EAAeppC,UAAUg0B,cAAgB,SAAU/6D,EAAK62E,EAAmBhb,GACvE,IAAI3Q,GACA2Q,SAAUA,MAA0BC,SAAU97D,EAAK82E,MAAOrxE,KAAKd,QAAQgY,eACvE8R,MAAO,WAAYntB,KAAM,WAAYy6D,QAAQ,GAGjDt2D,KAAKd,QAAQu3D,aAAanyB,eAAagtC,gBAAiB7rB,GACxD,IAAI8rB,E9C/zBZ,SAA+Bx7D,GAC3B,OAAOA,EAAMC,KAAOC,eAAaS,e8C8zBA86D,CAAexxE,KAAKd,SAC7CuyE,EAAuB37D,GAAgB9V,KAAKd,SAChD,GAAIuyE,GAAwBF,EAAwB,CAChD,IAAKA,IAA4Bh3E,EAAI9D,OAAS,GAAO26E,GAAoC,IAAf72E,EAAI9D,QAAgB,CAC1F,GAAmB,IAAf8D,EAAI9D,OAIJ,OAHAuJ,KAAK2b,iBAMb,KAAK81D,GAAuC,IAAfl3E,EAAI9D,QAAkB26E,GAAsB7yC,GAAav+B,KAAKd,UAEvF,YADAc,KAAK2b,iBAIb,IAAK8pC,EAAI6Q,OAAQ,CACb,IAAK,IAAI5/D,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IAAK,CACjC,IAAI2hB,EAAS9d,EAAI7D,GAEjB,IADS,EACJ6nC,GAAav+B,KAAKd,SAGlB,CACD,IAAKxI,EAAI,GAAK06E,IAAsB/4D,EAAOzG,WAAayG,EAAOwC,SAC3D,IAAK,IAAIy7B,EAAM,EAAGA,EAAMt2C,KAAKd,QAAQke,cAAcpE,MAAMviB,OAAQ6/C,IAAO,CACpE,IAAI94B,EAAaxd,KAAKd,QAAQ0b,UAAU5a,KAAKd,QAAQke,cAAcpE,MAAMs9B,GAAKz7B,UAC1E2C,IACAA,EAAaxd,KAAK0xE,WAAWl0D,KAErBnF,EAAOxY,KAAO2d,EAAW3d,IACzBG,KAAK2xE,YAAYt5D,GAMrCrY,KAAK4xE,gBAAgBv5D,GACZrY,KAAK6xE,uBAAuBx5D,IAEjCrY,KAAKkc,OAAO7D,EAAQ3hB,EAAI,GAAK06E,GAAmB,QAnBpDpxE,KAAKkc,OAAO7D,EAAQ3hB,EAAI,GAAK06E,GAAmB,GAuBxD3rB,GACI2Q,SAAUA,MAA0BC,SAAU97D,EAAK82E,MAAOrxE,KAAKd,QAAQgY,eACvE8R,MAAO,UAAWntB,KAAM,WAAYy6D,QAAQ,GAEhDt2D,KAAKd,QAAQu3D,aAAanyB,eAAagtC,gBAAiB7rB,GACxDzlD,KAAKd,QAAQumE,eAAe2L,GAAsB72E,GAAOA,EAAI9D,OAAS,KAM9Ei0E,EAAeppC,UAAUowC,WAAa,SAAUnxE,GAK5C,OAJIA,EAAKsa,WACLta,EAAOP,KAAKd,QAAQ0b,UAAUra,EAAKsa,UACnC7a,KAAK0xE,WAAWnxE,IAEbA,GAEXmqE,EAAeppC,UAAUswC,gBAAkB,SAAUv5D,GACjD,GAAIrY,KAAK8xE,aAAaz5D,GAElB,IAAK,IADDkhC,EAAY,EAASn7C,MAAMk7C,SAASD,WAAWE,UAC1C7iD,EAAI,EAAGA,EAAI6iD,EAAU9iD,OAAQC,IAAK,CACvC,IAAIg6E,EAAa1wE,KAAKd,QAAQ0b,UAAU2+B,EAAU7iD,IAC9CsJ,KAAK8xE,aAAapB,IAClB1wE,KAAKs1D,eAAeob,IAAa,GAErC1wE,KAAKq1D,SAASqb,KAI1BhG,EAAeppC,UAAUqwC,YAAc,SAAUt5D,GAC7C,IAAK,IAAIhiB,EAAI,EAAGA,EAAIgiB,EAAOzG,SAASnb,OAAQJ,IAAK,CAC7C,IAAIq6E,EAAa1wE,KAAKd,QAAQ0b,UAAUvC,EAAOzG,SAASvb,IACpDq6E,EAAW9+D,UACX5R,KAAK2xE,YAAYjB,GAErB1wE,KAAKq1D,SAASr1D,KAAKd,QAAQ0b,UAAUvC,EAAOzG,SAASvb,OAM7Dq0E,EAAeppC,UAAUuwC,uBAAyB,SAAUtxE,GACxD,IACIyd,EADA9B,GAAS,EAEb,GAAI3b,EAAKi4C,UAEDt8B,GADA4jB,GAAW9/B,KAAKd,QAASc,KAAKd,QAAQ0b,UAAUra,EAAKi4C,aAI5Cx4C,KAAK6xE,uBAAuB7xE,KAAKd,QAAQ0b,UAAUra,EAAKi4C,iBAGpE,GAAIj4C,aAAgB6S,KACjB7S,EAAKkB,UAAYzB,KAAKd,QAAQ0b,UAAUra,EAAKkB,WAC7CzB,KAAKd,QAAQ0b,UAAUra,EAAKkB,UAAU+2C,YACtCx6B,EAAShe,KAAKd,QAAQ0b,UAAUra,EAAKkB,UAAU+2C,WAE/Cj4C,EAAK6xC,UAAYpyC,KAAKd,QAAQ0b,UAAUra,EAAK6xC,WAC7CpyC,KAAKd,QAAQ0b,UAAUra,EAAK6xC,UAAUoG,YACtCx6B,EAAShe,KAAKd,QAAQ0b,UAAUra,EAAK6xC,UAAUoG,WAE/Cx6B,GAAQ,CACR,GAAI8hB,GAAW9/B,KAAKd,QAASc,KAAKd,QAAQ0b,UAAUoD,IAChD,OAAO,EAGP9B,EAASlc,KAAK6xE,uBAAuB7xE,KAAKd,QAAQ0b,UAAUoD,IAIxE,OAAO9B,GAKXwuD,EAAeppC,UAAUwwC,aAAe,SAAUvxE,GAC9C,SAAIA,GACyB,SAApBA,EAAKnC,MAAMvC,MAAoB0E,EAAKnC,MAAMk7C,UAC3C/4C,EAAKnC,MAAMk7C,SAASD,WAAWE,WAC/Bh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAAS,IAO9Di0E,EAAeppC,UAAUplB,OAAS,SAAU3hB,EAAK62E,EAAmBW,GAChE,IAAIC,EAAWhyE,KAAKgoE,eAAeztE,EAAIsF,IACvC,GAAKiT,GAAUvY,MAAUA,aAAekZ,MAAcqsB,GAAW9/B,KAAKd,QAAS3E,IACvEy3E,IAAaA,EAAS/J,MAAQ+J,EAAS9jD,SAAY3zB,EAAIuT,QAAQogB,QAAS,EAC5EkjD,IAAoB7yC,GAAav+B,KAAKd,UAAWkyE,IAE7CpxE,KAAK2b,iBAET,IAAIs2D,EAAgBjyE,KAAKd,QAAQke,cAQjC,GAPc7iB,aACSga,GACnB09D,EAAcj5D,MAAMliB,KAAKyD,GAGzB03E,EAAc/0D,WAAWpmB,KAAKyD,GAE7B62E,EAsCDa,EAAcnkE,QAAQzB,YAAc4lE,EAAc5lE,YAAc,EAChE4lE,EAAcnkE,QAAQ8D,SAAS9a,KAAKyD,EAAIuT,cArCxC,GADAmkE,EAAc1+C,KAAKvzB,KAAKd,SACW,IAA/B+yE,EAAcj5D,MAAMviB,QAAoD,IAApCw7E,EAAc/0D,WAAWzmB,OAAc,CAC3E,GAAIkkB,GAAuB3a,KAAKd,QAAS+yE,EAAcj5D,MAAM,IAAI,GAAO,CACpE,IAAIwE,EAAaxd,KAAKd,QAAQ0b,UAAUq3D,EAAcj5D,MAAM,GAAG6B,UAC/D,GAAI2C,GAA4C,SAA9BA,EAAW1F,UAAUjc,KAAiB,CACpD,IAAI89C,EAAS,IAAI3pB,GACjB2pB,EAAO/nC,YACP,IAAIhS,EAAU,IAAIsgB,GAClB,GAAI+xD,EAAcj5D,MAAM,GAAG8B,UAAYm3D,EAAcj5D,MAAM,GAAG8B,SAAW,EACrE,GAA0C,eAArC0C,EAAW1F,UAAUhH,aAAoE,IAApCmhE,EAAcj5D,MAAM,GAAG8B,UACvC,aAArC0C,EAAW1F,UAAUhH,aAClBmhE,EAAcj5D,MAAM,GAAG8B,SAAW,GAAKm3D,EAAcj5D,MAAM,GAAGiC,YAAc,EAAI,CACpF,IAAIzZ,EAAS2a,GAAWqB,EAAYy0D,EAAcj5D,MAAM,GAAGiC,aAAa,GACxE0+B,EAAO59C,QAAUyF,EAAOP,OAAOjK,EAC/B2iD,EAAO39C,QAAUwF,EAAOP,OAAOhK,EAC/B2I,EAAQrH,MAAQiJ,EAAOjJ,MACvBqH,EAAQtH,OAASkJ,EAAOlJ,YAGxBqhD,EAAO59C,QAAUyhB,EAAWzhB,QAC5B49C,EAAO39C,QAAUi2E,EAAcj5D,MAAM,GAAGlL,QAAQ9R,QAChD4D,EAAQrH,MAAQilB,EAAW1P,QAAQC,WAAWxV,MAC9CqH,EAAQtH,OAAS25E,EAAcj5D,MAAM,GAAGlL,QAAQC,WAAWzV,OAGnEqhD,EAAO/nC,SAAS9a,KAAK8I,GACrB+5C,EAAOh8B,QAAQ,IAAIC,IACnB+7B,EAAO97B,QAAQ87B,EAAO77B,aACtBm0D,EAAcnkE,QAAQ8D,SAAS,GAAK+nC,GAG5Cs4B,EAAc5lE,YAAc4lE,EAAcj5D,MAAM,GAAG3M,YACnD4lE,EAAcnkE,QAAQzB,YAAc4lE,EAAcj5D,MAAM,GAAG3M,YAC3D4lE,EAAcnkE,QAAQ0jB,MAAQygD,EAAcj5D,MAAM,GAAGwY,MAOxDugD,GACD/xE,KAAKd,QAAQumE,eAAe2L,KAKxC1G,EAAeppC,UAAUi0B,YAAc,SAAUh7D,EAAK+tE,GAClD,IAAI2J,EAAiBjyE,KAAKd,QAAqB,cAC/C+yE,EAAcj5D,MAAQi5D,EAAc/0D,cAChC3iB,aAAega,GACf09D,EAAcj5D,MAAM,GAAKze,EAGzB03E,EAAc/0D,WAAW,GAAK3iB,EAElC03E,EAAc3pD,WAActoB,KAAKm2D,WAAWmS,EAAa/tE,GACzD03E,EAAc1+C,KAAKvzB,KAAKd,SACxBc,KAAKd,QAAQumE,gBAAe,IAGhCiF,EAAeppC,UAAU+zB,SAAW,SAAU96D,GAC1C,IAAI23E,KACJA,EAASp7E,KAAKyD,GACd,IAAIkrD,GACA2Q,SAAU8b,EAAU7b,YAAcgb,MAAOrxE,KAAKd,QAAQgY,eACtD8R,MAAO,WAAYntB,KAAM,UAAWy6D,QAAQ,GAKhD,GAHKt2D,KAAKd,QAAQ+e,eACdje,KAAKd,QAAQu3D,aAAanyB,eAAagtC,gBAAiB7rB,GAExD3lB,GAAW9/B,KAAKd,QAAS3E,GAAM,CAC/B,IAAI43E,EAAgBnyE,KAAKd,QAAQke,cAC7BsC,OAAQ,EACRnlB,aAAega,IACfmL,EAAQyyD,EAAcn5D,MAAMkF,QAAQ3jB,EAAK,GACzC43E,EAAcn5D,MAAM7S,OAAOuZ,EAAO,KAGlCA,EAAQyyD,EAAcj1D,WAAWgB,QAAQ3jB,EAAK,GAC9C43E,EAAcj1D,WAAW/W,OAAOuZ,EAAO,KAE3C+lC,GACI2Q,SAAU8b,EAAU7b,YAAcgb,MAAOrxE,KAAKd,QAAQgY,eACtD8R,MAAO,UAAWntB,KAAM,UAAWy6D,QAAQ,IAEtCA,SACL52C,EAAQyyD,EAAcrkE,QAAQ8D,SAASsM,QAAQ3jB,EAAIuT,QAAS,GAC5DqkE,EAAcrkE,QAAQ8D,SAASzL,OAAOuZ,EAAO,GAC7C1f,KAAKd,QAAQ22D,iBACR71D,KAAKd,QAAQ+e,eACdje,KAAKd,QAAQu3D,aAAanyB,eAAagtC,gBAAiB7rB,MAMxEilB,EAAeppC,UAAU8wC,iBAAmB,SAAUxkE,GAElD,IAAK,IADDgE,KACKlb,EAAI,EAAGA,EAAIkX,EAAMnX,OAAQC,IAAK,CACnC,IAAI27E,EAAYzkE,EAAMlX,GAClB27E,EAAUzgE,UAAYygE,EAAUzgE,SAASnb,OAAS,EAClDmb,EAASuqB,OAAOn8B,KAAKoyE,iBAAiBC,EAAUzgE,YAGhDA,EAAS9a,KAAKu7E,EAAUxyE,IACpBwyE,aAAqB3kD,IACrB9b,EAAS9a,KAAKu7E,EAAUxyE,GAAK,UAIzC,OAAO+R,GAEX84D,EAAeppC,UAAUgxC,YAAc,SAAUj+C,EAAQ+d,GACrD,IAAImgC,EAAaljD,GAAkB+iB,EAAW,gBAAiBpyC,KAAKd,QAAQU,QAAQC,IAChF2yE,EAAWnjD,GAAkBgF,EAAS,gBAAiBr0B,KAAKd,QAAQU,QAAQC,IAChF0yE,EAAW/0D,WAAWsE,aAAa0wD,EAAUD,IAGjD7H,EAAeppC,UAAUmxC,kBAAoB,SAAU/E,GACnD,IAAI3F,EAAQ/nE,KAAKu0D,SAASmZ,GAC1B,GAAI3F,GAA0B,IAAjBA,EAAMwB,OAAc,CAC7B,IAAI7pD,EAAQqoD,EAAMwB,OAClB,GAA0B,QAAtBvpE,KAAKd,QAAQ0sB,KAAgB,CAC7B,IAAI8mD,EAAqB3K,EAAM5/C,QAC3BwqD,EAAe3yE,KAAKu0D,SAASv0D,KAAKd,QAAQquE,iBAAiB7tD,EAAQ,IAAIyI,QAAQ,GACnF,GAAIwqD,EACA,IAAK,IAAI91E,EAAK,EAAG+1E,EAAuBF,EAAoB71E,EAAK+1E,EAAqBn8E,OAAQoG,IAAM,CAChG,IAAItC,EAAMq4E,EAAqB/1E,GAC/BmD,KAAKsyE,YAAY/3E,EAAKo4E,IAIlC,IAAI5E,EAAc/tE,KAAKu0D,SAASv0D,KAAKd,QAAQquE,iBAAiB7tD,EAAQ,IACtEquD,EAAYxE,OAASwE,EAAYxE,OAAS,EAC1CxB,EAAMwB,OAASxB,EAAMwB,OAAS,EAC9B,IAAIn5D,EAAOpQ,KAAKd,QAAQquE,iBAAiB7tD,GACzC1f,KAAKd,QAAQquE,iBAAiB7tD,GAAS1f,KAAKd,QAAQquE,iBAAiB7tD,EAAQ,GAC7E1f,KAAKd,QAAQquE,iBAAiB7tD,EAAQ,GAAKtP,EACjB,WAAtBpQ,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQmuE,wBAKzB3C,EAAeppC,UAAUuxC,kBAAoB,SAAUnF,GACnD,IAAI3F,EAAQ/nE,KAAKu0D,SAASmZ,GAC1B,GAAI3F,GAASA,EAAMwB,OAASvpE,KAAKd,QAAQqsB,OAAO90B,OAAS,EAAG,CACxD,IAAIipB,EAAQqoD,EAAMwB,OAClB,GAA0B,QAAtBvpE,KAAKd,QAAQ0sB,KAGb,IAAK,IAFD+mD,EAAe3yE,KAAKu0D,SAASv0D,KAAKd,QAAQquE,iBAAiB7tD,EAAQ,IAAIyI,QAAQ,GAE1EtrB,EAAK,EAAGi2E,EADQ/K,EAAM5/C,QAC6BtrB,EAAKi2E,EAAqBr8E,OAAQoG,IAAM,CAChG,IAAItC,EAAMu4E,EAAqBj2E,GAC3B81E,GACA3yE,KAAKsyE,YAAYK,EAAcp4E,GAI3C,IAAIwzE,EAAc/tE,KAAKu0D,SAASv0D,KAAKd,QAAQquE,iBAAiB7tD,EAAQ,IACtEquD,EAAYxE,OAASwE,EAAYxE,OAAS,EAC1CxB,EAAMwB,OAASxB,EAAMwB,OAAS,EAC9B,IAAIn5D,EAAOpQ,KAAKd,QAAQquE,iBAAiB7tD,GACzC1f,KAAKd,QAAQquE,iBAAiB7tD,GAAS1f,KAAKd,QAAQquE,iBAAiB7tD,EAAQ,GAC7E1f,KAAKd,QAAQquE,iBAAiB7tD,EAAQ,GAAKtP,EACjB,WAAtBpQ,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQmuE,wBAKzB3C,EAAeppC,UAAUyxC,WAAa,WAClC,GAAIx0C,GAAav+B,KAAKd,SAAU,CAM5B,IAAK,IALDy5D,EAAW34D,KAAKd,QAAQke,cAAcpE,MAAMviB,OAASuJ,KAAKd,QAAQke,cAAcpE,MAAM,GAAGnZ,GACvFG,KAAKd,QAAQke,cAAcF,WAAW,GAAGrd,GAC3C6f,EAAQ1f,KAAKd,QAAQ0b,UAAU+9C,GAAU4Q,OACzCyJ,EAAWhzE,KAAKd,QAAQqsB,OAAOrN,QAAQle,KAAKgoE,eAAerP,IAC3D8R,EAAczqE,KAAKd,QAAQqsB,OAAOynD,GAAUvI,YACvC/zE,EAAIgpB,EAAOhpB,EAAI,EAAGA,IACnB+zE,EAAY/zE,KAEP+zE,EAAY/zE,EAAI,IAOjB+zE,EAAY/zE,GAAK+zE,EAAY/zE,EAAI,GACjCsJ,KAAKd,QAAQ0b,UAAU6vD,EAAY/zE,IAAI6yE,OAAS7yE,IAPhD+zE,EAAY/zE,EAAI,GAAK+zE,EAAY/zE,GACjCsJ,KAAKd,QAAQ0b,UAAU6vD,EAAY/zE,EAAI,IAAI6yE,OAAS7yE,SAC7C+zE,EAAY/zE,KAW/B,GAFA+zE,EAAY,GAAKzqE,KAAKd,QAAQ0b,UAAU+9C,GAAU94D,GAClDG,KAAKd,QAAQ0b,UAAU+9C,GAAU4Q,OAAS,EAChB,QAAtBvpE,KAAKd,QAAQ0sB,KAAgB,CAG7B,IAFA,IACI5oB,EAASynE,EADT/zE,EAAI,IAEAsM,GAAUtM,EAAIgpB,GAClB1c,EAASynE,IAAc/zE,GAE3BsJ,KAAKsyE,YAAY3Z,EAAU31D,GAC3BhD,KAAKizE,sBAAsBta,QAG3B34D,KAAKd,QAAQytE,wBAKzBjC,EAAeppC,UAAU4xC,aAAe,WACpC,GAAI30C,GAAav+B,KAAKd,SAAU,CAQ5B,IAAK,IAPDuuE,EAAaztE,KAAKd,QAAQke,cAAcpE,MAAMviB,OAASuJ,KAAKd,QAAQke,cAAcpE,MAAM,GAAGnZ,GACzFG,KAAKd,QAAQke,cAAcF,WAAW,GAAGrd,GAC3CmzE,EAAWhzE,KAAKd,QAAQqsB,OAAOrN,QAAQle,KAAKgoE,eAAeyF,IAC3DhD,EAAczqE,KAAKd,QAAQqsB,OAAOynD,GAAUvI,YAE5C0I,EAAch7E,OAAOwkB,OAAOC,KAAK6tD,GAAaviD,KAAK,SAAUlY,EAAGC,GAAK,OAAO9X,OAAO6X,GAAK7X,OAAO8X,KAAOxE,UAAU,IAE3G/U,EADGsJ,KAAKd,QAAQ0b,UAAU6yD,GAAYlE,OAC3B7yE,EAAIy8E,EAAaz8E,IAE7B+zE,EAAY/zE,KACP+zE,EAAY/zE,EAAI,IAOjB+zE,EAAY/zE,GAAK+zE,EAAY/zE,EAAI,GACjCsJ,KAAKd,QAAQ0b,UAAU6vD,EAAY/zE,IAAI6yE,OAAS7yE,IAPhD+zE,EAAY/zE,EAAI,GAAK+zE,EAAY/zE,GACjCsJ,KAAKd,QAAQ0b,UAAU6vD,EAAY/zE,EAAI,IAAI6yE,OAAS7yE,SAC7C+zE,EAAY/zE,KAW/B,GAFA+zE,EAAY0I,GAAenzE,KAAKd,QAAQ0b,UAAU6yD,GAAY5tE,GAC9DG,KAAKd,QAAQ0b,UAAU6yD,GAAYlE,OAAS4J,EAClB,QAAtBnzE,KAAKd,QAAQ0sB,KAAgB,CAC7B,IAAIwnD,EAAepzE,KAAKd,QAAQk0E,aAG5BxzE,GAFQI,KAAKoyE,iBAAiBpyE,KAAKd,QAAQ0b,UAAU6yD,GAAY3/D,QAAQ8D,UAE/Dyd,GAAkBo+C,EAAa,gBAAiBztE,KAAKd,QAAQU,QAAQC,KACnFD,EAAQ4d,WAAW8R,YAAY1vB,GAC/B,IAAIoZ,EAAQhZ,KAAKd,QAAQke,cAAcpE,MACvC,GAAIA,EAAMviB,OAAS,IAA8B,WAAxBuiB,EAAM,GAAG5a,MAAMvC,MAA6C,SAAxBmd,EAAM,GAAG5a,MAAMvC,MACxE,IAAK,IAAIxF,EAAI,EAAGA,EAAI2J,KAAKd,QAAQ8sB,MAAMv1B,OAAQJ,IAAK,CAEhD,IAAIg9E,GADJzzE,EAAUyvB,GAAkBo+C,GAAsC,SAAxBz0D,EAAM,GAAG5a,MAAMvC,KAAkB,wBAA0B,yBAA0BmE,KAAKd,QAAQ8sB,MAAM31B,KACtHmnB,WAAW4/B,UACvCi2B,EAAc71D,WAAWsE,aAAaliB,EAASyzE,EAAcC,aAGrE,IAAIhuD,EAAYkU,GAAax5B,KAAKd,QAAQU,QAAQC,IAClDG,KAAKd,QAAQuf,gBAAgB2rC,cAAcpqD,KAAKd,QAAQ0b,UAAU6yD,GAAY3/D,QAASslE,EAAc9tD,QAGrGtlB,KAAKd,QAAQytE,wBAKzBjC,EAAeppC,UAAUqtC,aAAe,SAAU4E,EAAWC,GACzD,IAAI3zE,EAAK2zE,GAAkB,SAI3B,OAHAD,EAAYA,EAAUrrD,KAAK,SAAUlY,EAAGC,GACpC,OAAOD,EAAEnQ,GAAMoQ,EAAEpQ,MAKzB6qE,EAAeppC,UAAUmyC,YAAc,WACnC,GAAIl1C,GAAav+B,KAAKd,SAAU,CAC5B,IAAIm1B,EAASr0B,KAAKd,QAAQke,cAAcpE,MAAMviB,OAASuJ,KAAKd,QAAQke,cAAcpE,MAAM,GAAGnZ,GACrFG,KAAKd,QAAQke,cAAcF,WAAW,GAAGrd,GAC3C6zE,EAAa1zE,KAAKd,QAAQqsB,OAAOrN,QAAQle,KAAKgoE,eAAe3zC,IAC7Do2C,EAAczqE,KAAKd,QAAQqsB,OAAOmoD,GAAYjJ,YAE9C/qD,GADc/C,OAAOC,KAAK6tD,GAAah0E,OAC/BuJ,KAAKd,QAAQ0b,UAAUyZ,IAC/Bs/C,KACAvjE,EAAOpQ,KAAKd,QAAQ2qE,cAAcC,YAAYpqD,EAAM5R,QAAQtM,QAC5D4O,EAAK3Z,OAAS,IACd2Z,EAAOpQ,KAAK2uE,aAAav+D,IAE7B,IAAK,IAAIvT,EAAK,EAAG+2E,EAASxjE,EAAMvT,EAAK+2E,EAAOn9E,OAAQoG,IAAM,CACtD,IAAInG,EAAIk9E,EAAO/2E,GACf,GAAI6iB,EAAM7f,KAAOnJ,EAAEmJ,GAAI,CAEnB,GAAI6zE,IADe1zE,KAAKgoE,eAAetxE,EAAEmJ,IAAI0pE,QACTpxE,OAAO6H,KAAKd,QAAQ0b,UAAUyZ,GAAQk1C,QAAUpxE,OAAOzB,EAAE6yE,SACzF7pD,EAAM5R,QAAQtM,OAAOqiC,WAAWntC,EAAEoX,QAAQtM,QAAS,CACnDmyE,EAAe78E,KAAKJ,GACpB,QAIZ,GAAIi9E,EAAel9E,OAAS,EAAG,CAC3B,IAAIo9E,EAAgBF,EAAe,GAAGpK,OAClCuK,EAAgBp0D,EAAM6pD,OACbkB,EAAYoJ,GAEzB7zE,KAAKd,QAAQqsB,OAAO,GAAGk/C,YAAYoJ,GAAiBn0D,EAAM7f,GAC1DG,KAAKd,QAAQ0b,UAAU6vD,EAAYoJ,IAAgBtK,OAASsK,EAC5D7zE,KAAKd,QAAQqsB,OAAO,GAAGk/C,YAAYqJ,GAAiBH,EAAe,GAAG9zE,GACtEG,KAAKd,QAAQ0b,UAAU6vD,EAAYqJ,IAAgBvK,OAASuK,EAClC,QAAtB9zE,KAAKd,QAAQ0sB,MACb5rB,KAAKsyE,YAAY7H,EAAYtyE,OAAOw7E,EAAe,GAAGpK,SAAUl1C,GAChEr0B,KAAKizE,sBAAsBxI,EAAYtyE,OAAOw7E,EAAe,GAAGpK,SAAUl1C,IAG1Er0B,KAAKd,QAAQytE,yBAM7BjC,EAAeppC,UAAUyyC,aAAe,WACpC,GAAIx1C,GAAav+B,KAAKd,SAAU,CAC5B,IAAIy5D,EAAW34D,KAAKd,QAAQke,cAAcpE,MAAMviB,OAASuJ,KAAKd,QAAQke,cAAcpE,MAAM,GAAGnZ,GACvFG,KAAKd,QAAQke,cAAcF,WAAW,GAAGrd,GAC3CmzE,EAAWhzE,KAAKd,QAAQqsB,OAAOrN,QAAQle,KAAKgoE,eAAerP,IAC3D8R,EAAczqE,KAAKd,QAAQqsB,OAAOynD,GAAUvI,YAE5ClqE,GADcoc,OAAOC,KAAK6tD,GAAah0E,OAChCuJ,KAAKd,QAAQ0b,UAAU+9C,IAC9Bgb,KACAvjE,EAAOpQ,KAAKd,QAAQ2qE,cAAcC,YAAYvpE,EAAKuN,QAAQtM,QAC3D4O,EAAK3Z,OAAS,IACd2Z,EAAOpQ,KAAK2uE,aAAav+D,IAE7B,IAAK,IAAIvT,EAAK,EAAGm3E,EAAS5jE,EAAMvT,EAAKm3E,EAAOv9E,OAAQoG,IAAM,CACtD,IAAInG,EAAIs9E,EAAOn3E,GACf,GAAI0D,EAAKV,KAAOnJ,EAAEmJ,GAAI,CAEdmzE,IADehzE,KAAKgoE,eAAetxE,EAAEmJ,IAAI0pE,QACXpxE,OAAO6H,KAAKd,QAAQ0b,UAAU+9C,GAAU4Q,QAAUpxE,OAAOzB,EAAE6yE,SACzFhpE,EAAKuN,QAAQtM,OAAOqiC,WAAWntC,EAAEoX,QAAQtM,SACzCmyE,EAAe78E,KAAKJ,IAIhC,GAAIi9E,EAAel9E,OAAS,EAAG,CAC3B,IAAIo9E,EAAgBF,EAAeA,EAAel9E,OAAS,GAAG8yE,OAC1DuK,EAAgBvzE,EAAKgpE,OACZkB,EAAYoJ,GAEzBpJ,EAAYoJ,GAAiBtzE,EAAKV,GAClCG,KAAKd,QAAQ0b,UAAU6vD,EAAYoJ,IAAgBtK,OAASsK,EAC5DpJ,EAAYqJ,GAAiBH,EAAeA,EAAel9E,OAAS,GAAGoJ,GACvEG,KAAKd,QAAQ0b,UAAU6vD,EAAYqJ,IAAgBvK,OAASuK,EAClC,QAAtB9zE,KAAKd,QAAQ0sB,MACb5rB,KAAKsyE,YAAY3Z,EAAU8R,EAAYkJ,EAAeA,EAAel9E,OAAS,GAAG8yE,SACjFvpE,KAAKizE,sBAAsBta,EAAU8R,EAAYkJ,EAAeA,EAAel9E,OAAS,GAAG8yE,UAG3FvpE,KAAKd,QAAQytE,yBAM7BjC,EAAeppC,UAAU2xC,sBAAwB,SAAU5+C,EAAQ+d,GAE/D,IAAK,IADDp5B,EAAQhZ,KAAKd,QAAQke,cAAcpE,MAC9BtiB,EAAI,EAAGA,EAAIsJ,KAAKd,QAAQ8sB,MAAMv1B,OAAQC,IAC3C,GAAIsiB,EAAMviB,OAAS,IACa,SAAxBuiB,EAAM,GAAG5a,MAAMvC,MACY,WAAxBmd,EAAM,GAAG5a,MAAMvC,MAAoB,CAC1C,IAAIgE,EAA6B,SAAxBmZ,EAAM,GAAG5a,MAAMvC,KAAkB,wBAA0B,wBAChE22E,EAAWnjD,GAAkBgF,EAASx0B,EAAIG,KAAKd,QAAQ8sB,MAAMt1B,IAC7D67E,EAAangC,EAAW/iB,GAAkB+iB,EAAWvyC,EAAIG,KAAKd,QAAQ8sB,MAAMt1B,IAC1E87E,EAASjtD,cAAcxD,WACzBywD,EAASh1D,WAAW3d,KAAO0yE,EAAW/0D,WAAW3d,IACjD0yE,EAAW/0D,WAAWsE,aAAa0wD,EAAUD,KAM7D7H,EAAeppC,UAAU2yC,oBAAsB,WAC3C,IAAIhC,EAAgBjyE,KAAKd,QAAQke,cACjC60D,EAAc1+C,KAAKvzB,KAAKd,SACW,IAA/B+yE,EAAcj5D,MAAMviB,QAAoD,IAApCw7E,EAAc/0D,WAAWzmB,SAC7Dw7E,EAAc5lE,YAAc4lE,EAAcj5D,MAAM,GAAG3M,YACnD4lE,EAAcnkE,QAAQzB,YAAc4lE,EAAcj5D,MAAM,GAAG3M,YAC3D4lE,EAAcnkE,QAAQ0jB,MAAQygD,EAAcj5D,MAAM,GAAGwY,QAI7Dk5C,EAAeppC,UAAU0zB,sBAAwB,SAAU3wC,GACvDrkB,KAAKk0E,0BACLl0E,KAAK2b,iBACL,IAAIw4D,KACAC,KACJD,EAAWn0E,KAAKd,QAAQm1E,mBAAmBF,IAEvCC,EADuD,sBAAvDp0E,KAAKd,QAAQke,cAAck3D,wBACblwD,GAAeC,EAAQ8vD,GAGvBn0E,KAAKd,QAAQ2qE,cAAcC,YAAYzlD,IAEzC5tB,QACZuJ,KAAKs1D,cAAc8e,GAAa,IAGxC1J,EAAeppC,UAAU4yC,wBAA0B,WAC/C,IACIt0E,EADa4e,GAAmBxe,KAAKd,QAAQU,QAAQC,IAChC2hB,eAAexhB,KAAKd,QAAQU,QAAQC,GAAK,mCAC9DD,GACAk8C,SAAOl8C,IAIf8qE,EAAeppC,UAAU01B,kBAAoB,SAAUzrD,EAAUhR,EAAKoB,EAAOrB,EAAS0I,EAAQ8zD,GAC1F,IACIlrD,EAEA2mC,EAEAC,EAEA+hC,GAAmB,EAYvB,OAXIh6E,aAAekZ,GAEf7H,EADgBrR,EACU2iB,WAAW,GAEhC3iB,aAAe6Y,IAAapT,KAAKd,QAAQihC,uBAC9CngC,KAAK2b,iBACL/P,EAAY5L,KAAKd,QAAQihC,sBAEZ,sBAAb50B,GAAiD,sBAAbA,IACpCgpE,GAAmB,GAEN,uBAAbhpE,GAAkD,sBAAbA,GACrCgnC,EAAK52C,EAAM3E,GAAKu9E,EAAmBj6E,EAAQsrB,aAAa5uB,EAAI4U,EAAU7K,YAAY/J,GAClFw7C,EAAK72C,EAAM1E,GAAKs9E,EAAmBj6E,EAAQsrB,aAAa3uB,EAAI2U,EAAU7K,YAAY9J,GAC3E+I,KAAKw0E,cAAc5oE,EAAW2mC,EAAIC,EAAI,KAAM72C,EAAO4P,OAAUtR,EAAW+I,EAAQ8zD,OAAc78D,EAAWK,KAGhHi4C,EAAK52C,EAAM3E,GAAKu9E,EAAmBj6E,EAAQurB,aAAa7uB,EAAI4U,EAAUf,YAAY7T,GAClFw7C,EAAK72C,EAAM1E,GAAKs9E,EAAmBj6E,EAAQurB,aAAa5uB,EAAI2U,EAAUf,YAAY5T,GAC3E+I,KAAKy0E,cAAc7oE,EAAW2mC,EAAIC,EAAI,KAAM72C,EAAO4P,OAAUtR,EAAWK,KAIvFowE,EAAeppC,UAAU4zB,kBAAoB,WACzC,IAAIid,EAAgBnyE,KAAKd,QAAQke,cACjC,OAAQ+0D,EAAmB,MAAEh2C,OAAOg2C,EAAcj1D,aAGtDwtD,EAAeppC,UAAU3lB,eAAiB,SAAU+4D,GAChD,GAAIn2C,GAAav+B,KAAKd,SAAU,CAC5B,IAAIizE,EAAgBnyE,KAAKd,QAAQke,cAC7B63C,EAAaj1D,KAAKk1D,oBAClBzP,GACA2Q,SAAUnB,EAAYoB,YAAcgb,MAAOrxE,KAAKd,QAAQgY,eACxD8R,MAAO,WAAYntB,KAAM,UAAWy6D,QAAQ,GAE5Coe,GACA10E,KAAKd,QAAQu3D,aAAanyB,eAAagtC,gBAAiB7rB,GAEvDA,EAAI6Q,SACL6b,EAAcp2E,QAAU,EACxBo2E,EAAcn2E,QAAU,EACxBm2E,EAAc55E,MAAQ,EACtB45E,EAAc75E,OAAS,EACvB65E,EAAc9lE,YAAc,EAC5B8lE,EAAcn5D,SACdm5D,EAAcj1D,cACdi1D,EAAcrkE,QAAU,KACxBqkE,EAAc7pD,gBAAaruB,EAC3B+F,KAAKd,QAAQy1E,qBACTD,IACAjvB,GACI2Q,SAAUnB,EAAYoB,YAAcgb,MAAOrxE,KAAKd,QAAQgY,eACxD8R,MAAO,UAAWntB,KAAM,UAAWy6D,QAAQ,GAE/Ct2D,KAAKd,QAAQu3D,aAAanyB,eAAagtC,gBAAiB7rB,OAQxEilB,EAAeppC,UAAU83B,uBAAyB,WAC9C,IAAI76C,EAAaC,GAAmBxe,KAAKd,QAAQU,QAAQC,IACrD+0E,EAAcr2D,EAAWiD,eAAejD,EAAW1e,GAAK,sBACxD+0E,GACAA,EAAYp3D,WAAW8R,YAAYslD,IAM3ClK,EAAeppC,UAAUljB,uBAAyB,SAAUre,EAAMiD,GAC9D,IAAIT,EAASvC,KAAKd,QAAQke,cAAcpE,MAAM,GAC9C,IAAKhW,EAAQ,CACT,IAAImlB,EAAUnoB,KAAKd,QAAQojE,sBAAsBviE,EAAKM,UACtD2C,EAAShD,KAAKd,QAAQqjE,qBAAqBp6C,EAAS,QAAQ,GAEhE,GAAI5lB,GAAUS,GAAUT,EAAOsY,UAAY7X,EAAO6X,UAAatY,EAAOsY,WAAa7X,EAAO6X,UAClFtY,EAAO1C,KAAOmD,EAAOnD,IAAQG,KAAKd,QAAQ0b,UAAU5X,EAAO6X,UAAU/C,WACd,UAA3D9X,KAAKd,QAAQ0b,UAAU5X,EAAO6X,UAAU/C,UAAUjc,KAAmB,CACrE,IAAIwiB,EAA+E,aAAlEre,KAAKd,QAAQ0b,UAAU5X,EAAO6X,UAAU/C,UAAUhH,YACnEsN,GAAuBpb,EAAO8K,QAASuQ,EAAYte,EAAKM,SAAUL,KAAKd,WAI/EwrE,EAAeppC,UAAUnmB,KAAO,SAAU5gB,EAAKg4C,EAAIC,GAC/C,IAAIi8B,EAEJ,GAAIl7D,GAAQhZ,IAAQyF,KAAK26D,yBAAyBpoB,EAAIC,EAAIj4C,EAAIuT,QAAQtM,SAAWuV,GAAgB/W,KAAKd,SAClG,GAAI3E,aAAega,GAAM,CACrB,IAAIyhD,GAAcj6D,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,SAGrD,GAFAzB,EAAIwB,SAAWw2C,EACfh4C,EAAIyB,SAAWw2C,EACXj4C,EAAIqX,WAAcrX,EAAa,UAAG,CAElC,IAAK,IADDye,EAAQhZ,KAAKw5D,kBAAkBj/D,MAC1B7D,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAC9B+3E,EAAYzuE,KAAKd,QAAQ0b,UAAU5B,EAAMtiB,GAAGmJ,IAC5CG,KAAKmb,KAAKszD,EAAUl8B,EAAIC,GAE5BxyC,KAAK60E,4BAA4Bt6E,GAEjCogB,GAAuB3a,KAAKd,QAAS3E,GAAK,GAC1CkjB,GAA0Bzd,KAAKd,QAAS3E,IAGpCA,GAAOA,EAAI6D,OAA4B,kBAAnB7D,EAAI6D,MAAMvC,OAC9BtB,EAAIuT,QAAQy4B,iBAAkB,GAElCvmC,KAAKd,QAAQwe,mBAAmBnjB,EAAKy7D,GAAaj6D,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,UACrFzB,EAAIuT,QAAQy4B,iBAAkB,OAGjC,CACD,IAAI36B,EAAYrR,EACZ6Q,EAA4B,WAAnBQ,EAAU/P,KACnBi5E,GAAU,EAad,GAZKlpE,EAAU5K,cAIX8zE,GAAU,EAHV90E,KAAKw0E,cAAc5oE,EAAW2mC,EAAIC,GAAI,EAAM,KAAM,GAAIpnC,GAKrDQ,EAAUlK,cAIXozE,GAAU,EAHV90E,KAAKy0E,cAAc7oE,EAAW2mC,EAAIC,GAAI,EAAM,KAAM,GAAIpnC,IAKrD0pE,EAAS,CACV90E,KAAK09D,iBAAiB9xD,EAAW2mC,EAAIC,GAAI,GACzC,IAAIvT,GAASl+B,YAAa6K,EAAU7K,YAAa8J,YAAae,EAAUf,aACxE7K,KAAKd,QAAQ2sE,wBAAwBjgE,KAAeqzB,MAMpEyrC,EAAeppC,UAAUyzC,uBAAyB,SAAU53D,EAAc63D,EAAqBC,GAC3F,IAAI1iC,EACAC,EACA0iC,GAAgB,EACpB,IAAqF,IAAjFF,EAAoBzxE,OAAOyxE,EAAqB73D,EAAarP,QAAQtM,SACjE2b,EAAau7B,SAASjiD,OAAS,EAC/B,IAAK,IAAIspB,EAAI,EAAGA,EAAI5C,EAAau7B,SAASjiD,OAAQspB,IAAK,CACnD,IAAInU,EAAY5L,KAAKd,QAAQ0b,UAAUuC,EAAau7B,SAAS34B,IAO7D,GALIm1D,EADuB,KAAvBtpE,EAAUwmC,UACMpyC,KAAK8/B,WAAW9/B,KAAKd,QAAQ0b,UAAUhP,EAAUwmC,YAGjDpyC,KAAK8/B,WAAW9/B,KAAKd,QAAQ0b,UAAUhP,EAAU/L,KAE9C,eAAnB+L,EAAU/P,MAAyB+P,EAAUzS,UAAYyS,EAAUzS,SAAS1C,OAAS,EACrF,GAAKw+E,EAuBA,CACD,IAAIlkD,EAAenlB,EAAUzS,SAAS,GAClCg8E,EAAgBvpE,EAAUzS,SAAS,GAEnC4H,EAAcgE,GADCX,EAAW+Y,EAAarP,QAASqP,EAAarP,QAAQlV,QAASukB,EAAarP,QAAQtM,QAC7DuvB,EAAatuB,WAQnDkjB,EAAqB/c,IALrBhQ,aAASqB,EAAW0B,MAFxBoF,EAAcc,GAAgB+J,EAAWA,EAAU5K,cAAeD,GAAe/J,EAAG4U,EAAU5K,cAAcjF,QAAS9E,EAAG2U,EAAU5K,cAAchF,UAAW,GAE/G2G,YAAQ1I,EAAWwI,UAAWsuB,EAAatuB,YAGnF7J,aAASqB,EAAW0B,MAAOw5E,EAAcx8E,OAAO,GAAIgK,YAAQ1I,EAAWwI,eAAWxI,IAGtF82B,EAAat6B,OAAS0O,GAAM4G,eAAe4Z,EAAmB,GAAIA,EAAmB,IACjFwvD,EAAc1yE,WAAa0yE,EAAc1+E,SACzC0+E,EAAc1+E,OAAS0O,GAAM4G,eAAe4Z,EAAmB,GAAIA,EAAmB,UArC1F,GAAIuvD,EAAe,CACf,OAAQtpE,EAAUzS,SAAS,GAAGsJ,WAC1B,IAAK,SACD8vC,EAAKp1B,EAAarP,QAAQtM,OAAOoG,aAAa5Q,EAAIg+E,EAAoBptE,aAAa5Q,EACnFw7C,EAAKr1B,EAAarP,QAAQtM,OAAOoG,aAAa3Q,EAAI+9E,EAAoBptE,aAAa3Q,EACnF,MACJ,IAAK,MACDs7C,EAAKp1B,EAAarP,QAAQtM,OAAOiC,UAAUzM,EAAIg+E,EAAoBvxE,UAAUzM,EAC7Ew7C,EAAKr1B,EAAarP,QAAQtM,OAAOiC,UAAUxM,EAAI+9E,EAAoBvxE,UAAUxM,EAC7E,MACJ,IAAK,OACDs7C,EAAKp1B,EAAarP,QAAQtM,OAAO0G,WAAWlR,EAAIg+E,EAAoB9sE,WAAWlR,EAC/Ew7C,EAAKr1B,EAAarP,QAAQtM,OAAO0G,WAAWjR,EAAI+9E,EAAoB9sE,WAAWjR,EAC/E,MACJ,IAAK,QACDs7C,EAAKp1B,EAAarP,QAAQtM,OAAO+F,YAAYvQ,EAAIg+E,EAAoBztE,YAAYvQ,EACjFw7C,EAAKr1B,EAAarP,QAAQtM,OAAO+F,YAAYtQ,EAAI+9E,EAAoBztE,YAAYtQ,EAGzF+I,KAAKw0E,cAAc5oE,EAAW2mC,EAAIC,GAAI,EAAM,KAAM,0BAAsBv4C,OAAWA,OAAWA,GAAW,MA2BrIywE,EAAeppC,UAAU08B,eAAiB,SAAUpyD,GAChD,IAAIqzB,GACAl+B,YAAa6K,EAAU7K,YAAa8J,YAAae,EAAUf,YAC3DpJ,SAAUmK,EAAUnK,SAAWmK,EAAUnK,cAAWxH,EACpDm4C,SAAUxmC,EAAUwmC,SAAWxmC,EAAUwmC,cAAWn4C,EACpDimC,aAAct0B,EAAUs0B,aAAet0B,EAAUs0B,kBAAejmC,EAChEo4C,aAAczmC,EAAUymC,aAAezmC,EAAUymC,kBAAep4C,EAChEd,SAAUyS,EAAUzS,SAAWyS,EAAUzS,cAAWc,GAExD+F,KAAKd,QAAQ2sE,wBAAwBjgE,KAAeqzB,GAEpDj/B,KAAKd,QAAQ22D,kBAGjB6U,EAAeppC,UAAUkzC,cAAgB,SAAUj6E,EAAKg4C,EAAIC,EAAIu/B,EAAep2E,EAAO4P,EAAUH,EAAQpI,EAAQ8zD,EAAcse,EAAc96E,GACxI,IAAIsR,EAAY5L,KAAKd,QAAQ0b,UAAUrgB,EAAIsF,IACvC86D,EAA2B36D,KAAK26D,yBAAyBpoB,EAAIC,EAAI5mC,EAAUkC,QAAQtM,QASvF,GARIoS,GAAiBhI,IAAc+uD,GACd,sBAAbpvD,GAAqCwL,GAAgB/W,KAAKd,WAC9D0M,EAAU7K,YAAY/J,GAAKu7C,EAC3B3mC,EAAU7K,YAAY9J,GAAKu7C,EACV,uBAAbjnC,GAAwD,eAAnBK,EAAU/P,MAC/CmE,KAAKq1E,oBAAoBzpE,EAAW5I,EAAQ8zD,EAAcse,IAG3C,WAAnBxpE,EAAU/P,KACV,GAAIvB,EACA0F,KAAKs1E,sBAAsB/6E,EAAmB,KAAbgR,EAAmB,qBAAuBA,EAAUgnC,EAAIC,EAAIl4C,EAASqB,GAAQyP,QAG9G,IAAK,IAAI1U,EAAI,EAAGA,EAAI6D,EAAIpB,SAAS1C,OAAQC,IACrCsJ,KAAKs1E,sBAAsB/6E,EAAmB,KAAbgR,EAAmB,qBAAuBA,EAAUgnC,EAAIC,EAAIj4C,EAAIpB,SAASzC,GAAIiF,GAAQyP,GAOlI,OAHK2mE,GACD/xE,KAAKg+D,eAAepyD,GAEjB+uD,GAKX+P,EAAeppC,UAAU+zC,oBAAsB,SAAUzpE,EAAW5I,EAAQ8zD,EAAcse,GACtF,GAAIxpE,EAAUzS,UAAgD,OAApCyS,EAAUzS,SAAS,GAAGsJ,aACtCO,GAAiC,KAAvB4I,EAAUnK,UAAoB2zE,GAAe,CAC7D,IAAInwE,EAAQ2G,EAAUzS,SAAS,GAC3Bo8E,EAAS3pE,EAAUzS,SAAS,GAC5BoH,EAAOP,KAAKd,QAAQ0b,UAAUhP,EAAUnK,UACxC+zE,OAAW,EAiBf,GAhBAvwE,EAAMtM,OAAO,GAAKiT,EAAU7K,YACJ,QAApBkE,EAAMxC,WAA2C,WAApBwC,EAAMxC,WACnCwC,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGO,EAAI4U,EAAU7K,YAAY/J,EAChEu+E,EAAO58E,OAAO,GAAG1B,EAAIgO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGQ,IAG3DgO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGQ,EAAI2U,EAAU7K,YAAY9J,EAChEs+E,EAAO58E,OAAO,GAAG3B,EAAIiO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGO,GAE3DiO,EAAMxC,YAAcwC,EAAMxO,QAA2B,IAAjBwO,EAAMxO,UAC1CwO,EAAMxO,OAAS0O,GAAM4G,eAAe9G,EAAMtM,OAAO,GAAIsM,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,KAExF8+E,EAAO9yE,YAAc8yE,EAAO9+E,QAA4B,IAAlB8+E,EAAO9+E,UAC7C8+E,EAAO9+E,OAAS0O,GAAM4G,eAAe9G,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAI8+E,EAAO58E,OAAO48E,EAAO58E,OAAOlC,OAAS,IACjH8+E,EAAO9yE,UAAY0C,GAAM1C,UAAUwC,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAI8+E,EAAO58E,OAAO48E,EAAO58E,OAAOlC,OAAS,KAEpF,KAA3BmV,EAAUs0B,cAAuBj7B,EAAMxO,OAAS,GAChD,GAAImV,EAAUzS,SAAS1C,OAAS,EAAG,CAC/B,IAAIgC,EAAOmT,EAAUzS,SAAS,GAC1Bs8E,EAAgBtwE,GAAM1C,UAAUhK,EAAKE,OAAO,GAAIF,EAAKE,OAAO,IAC5DsM,EAAMxC,YAAcuC,GAAqBywE,IACjB,UAApBxwE,EAAMxC,UACNhK,EAAKE,OAAO,GAAG3B,EAAIiO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGO,EAAIuJ,EAAKuN,QAAQlV,QAAQ2O,YAAYvQ,EAAI,GAEzE,SAApBiO,EAAMxC,UACXhK,EAAKE,OAAO,GAAG3B,EAAIiO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGO,EAAIuJ,EAAKuN,QAAQlV,QAAQsP,WAAWlR,EAAI,GAExE,QAApBiO,EAAMxC,UACXhK,EAAKE,OAAO,GAAG1B,EAAIgO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGQ,EAAIsJ,EAAKuN,QAAQlV,QAAQ6K,UAAUxM,EAAI,GAGhGwB,EAAKE,OAAO,GAAG1B,EAAIgO,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,GAAGQ,EAAIsJ,EAAKuN,QAAQlV,QAAQgP,aAAa3Q,EAAI,GAEnGwB,EAAKgK,WAAahK,EAAKhC,SACvBgC,EAAKhC,OAAS0O,GAAM4G,eAAetT,EAAKE,OAAO,GAAIF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,KAExFwO,EAAMxO,OAAS0O,GAAM4G,eAAe9G,EAAMtM,OAAO,GAAIsM,EAAMtM,OAAOsM,EAAMtM,OAAOlC,OAAS,KAEnFwO,EAAMxC,YAAcgzE,GAAiBh9E,EAAKgK,WAAahK,EAAKhC,QACzC,QAApBwO,EAAMxC,WAA2C,WAApBwC,EAAMxC,WACnChK,EAAKE,OAAO,GAAKsM,EAAMtM,OAAO,GAC9BF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGO,EAAIyB,EAAKE,OAAO,GAAG3B,IAGvDyB,EAAKE,OAAO,GAAKsM,EAAMtM,OAAO,GAC9BF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,GAAGQ,EAAIwB,EAAKE,OAAO,GAAG1B,GAE3DwB,EAAKhC,OAAS0O,GAAM4G,eAAetT,EAAKE,OAAO,GAAIF,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,IACpFmV,EAAUzS,SAASgN,OAAO,EAAG,IAG7BlB,EAAMxO,OAAS,QAInBwO,EAAMxO,OAAS,QAGlB,GAAIwO,EAAMxO,OAAS,EACpB,GAA2B,KAAvBmV,EAAUnK,SAAiB,CAkB3B,GAjByB,UAArB8zE,EAAO9yE,WACP+yE,EAAWj1E,EAAKuN,QAAQlV,QAAQ2O,YAChCguE,EAAO58E,OAAO48E,EAAO58E,OAAOlC,OAAS,GAAGQ,EAAIu+E,EAASv+E,GAE3B,SAArBs+E,EAAO9yE,WACZ+yE,EAAWj1E,EAAKuN,QAAQlV,QAAQsP,WAChCqtE,EAAO58E,OAAO48E,EAAO58E,OAAOlC,OAAS,GAAGQ,EAAIu+E,EAASv+E,GAE3B,QAArBs+E,EAAO9yE,WACZ+yE,EAAWj1E,EAAKuN,QAAQlV,QAAQ6K,UAChC8xE,EAAO58E,OAAO48E,EAAO58E,OAAOlC,OAAS,GAAGO,EAAIw+E,EAASx+E,IAGrDw+E,EAAWj1E,EAAKuN,QAAQlV,QAAQgP,aAChC2tE,EAAO58E,OAAO48E,EAAO58E,OAAOlC,OAAS,GAAGO,EAAIw+E,EAASx+E,GAEzDu+E,EAAO9+E,OAAS0O,GAAM4G,eAAeypE,EAAUD,EAAO58E,OAAO48E,EAAO58E,OAAOlC,OAAS,IAChFmV,EAAUzS,SAAS1C,OAAS,EAAG,EAC3BgC,EAAOmT,EAAUzS,SAAS,IACrBsJ,WAAahK,EAAKhC,SACvBgC,EAAKhC,OAAS0O,GAAM4G,eAAewpE,EAAO58E,OAAO48E,EAAO58E,OAAOlC,OAAS,GAAIgC,EAAKE,OAAOF,EAAKE,OAAOlC,OAAS,KAGrHmV,EAAUzS,SAASgN,OAAO,EAAG,QAG7ByF,EAAUzS,SAASgN,OAAO,EAAG,QAKjCnD,IAAW8zD,GAAgBlrD,EAAUnK,WAAauB,EAAOnD,IACzD+L,EAAUzS,UAAgD,OAApCyS,EAAUzS,SAAS,GAAGsJ,WAAsBO,GAAUA,aAAkBuR,IAC9FvU,KAAK01E,sBAAsB9pE,EAAW5I,GAEtCA,GAAU8zD,GAAgBlrD,EAAUs0B,eAAiB42B,GACrDlrD,EAAUzS,UAAgD,OAApCyS,EAAUzS,SAAS,GAAGsJ,WAAsBO,GAAUA,aAAkBuR,IAC9FvU,KAAK21E,sBAAsB/pE,EAAW5I,EAAQ8zD,IAO1D4T,EAAeppC,UAAUq0C,sBAAwB,SAAU/pE,EAAW5I,EAAQ8zD,GAC1E,IAAI3zD,EAAOnD,KAAKd,QAAQ2zC,WAAW7vC,EAAO8K,QAASgpD,GAC/Cn7D,GAAU3E,EAAGmM,EAAKpH,QAAS9E,EAAGkM,EAAKnH,SACnCyG,EAAYnB,GAAiB3F,EAAO4F,GAA4ByB,EAAO8K,SAAU9K,EAAO8K,QAAQtM,QAChGuvB,EAAenlB,EAAUzS,SAAS,GAClCg8E,EAAgBvpE,EAAUzS,SAAS,GACvC,GAAI43B,EAAatuB,YAAcA,EAAW,CACtC,IAAItJ,KACAylE,KACJ,GAAI7tC,EAAatuB,YAAcuC,GAAqBvC,GAAY,CAC5Dm8D,KACA,IAAIgX,OAAa,EACC,QAAdnzE,GAAqC,WAAdA,GACvBmzE,EAA4B,QAAdnzE,GACV5G,KAAM,aAAcg6E,YAAY,EAAMpzE,UAAWA,EACjDhM,OAAQgG,KAAK6G,IAAIytB,EAAap4B,OAAO,GAAG1B,EAAI0E,EAAM1E,KAG9C4E,KAAM,aAAcg6E,YAAY,EAAMpzE,UAAWA,EACjDhM,OAAQgG,KAAK6G,IAAI3H,EAAM1E,EAAI85B,EAAap4B,OAAO,GAAG1B,IAE1D2nE,EAAa7tC,EAAap4B,OAAO,GAAG3B,EAAI2E,EAAM3E,GACxC6E,KAAM,aAAcg6E,YAAY,EAAMpzE,UAAW,QAAShM,OAASs6B,EAAap4B,OAAO,GAAG3B,EAAI2E,EAAM3E,IACpG6E,KAAM,aAAcg6E,YAAY,EAAMpzE,UAAW,OAAQhM,OAASkF,EAAM3E,EAAI+5B,EAAap4B,OAAO,GAAG3B,KAGzG4+E,EAA4B,UAAdnzE,GACV5G,KAAM,aAAcg6E,YAAY,EAAMpzE,UAAWA,EACjDhM,OAAQgG,KAAK6G,IAAIytB,EAAap4B,OAAO,GAAG3B,EAAI2E,EAAM3E,KAG9C6E,KAAM,aAAcg6E,YAAY,EAAMpzE,UAAWA,EACjDhM,OAAQgG,KAAK6G,IAAI3H,EAAM3E,EAAI+5B,EAAap4B,OAAO,GAAG3B,IAE1D4nE,EAAa7tC,EAAap4B,OAAO,GAAG1B,EAAI0E,EAAM1E,GACxC4E,KAAM,aAAc4G,UAAW,MAAOozE,YAAY,EAAMp/E,OAASs6B,EAAap4B,OAAO,GAAG1B,EAAI0E,EAAM1E,IAClG4E,KAAM,aAAc4G,UAAW,SAAUozE,YAAY,EAAMp/E,OAASkF,EAAM1E,EAAI85B,EAAap4B,OAAO,GAAG1B,IAE/GkC,EAASrC,KAAK,IAAIyP,GAAkBqF,EAAW,WAAYgqE,GAAY,IACvEz8E,EAASrC,KAAK,IAAIyP,GAAkBqF,EAAW,WAAYgzD,GAAW,SAGtEA,GAAc/iE,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQ,GAAIo/E,YAAY,GAChF18E,EAASrC,KAAK,IAAIyP,GAAkBqF,EAAW,WAAYgzD,GAAW,IAEtE7tC,EAAatuB,YAAcuC,GAAqBvC,KAC9B,QAAdA,GAAqC,WAAdA,GACvBsuB,EAAap4B,OAAO,GAAG3B,EAAI2E,EAAM3E,EACjC+5B,EAAap4B,OAAO,GAAG1B,EAAI85B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGQ,EAAmB,QAAdwL,EAChF9G,EAAM1E,EAAI,GAAK0E,EAAM1E,EAAI,KAG7B85B,EAAap4B,OAAO,GAAG1B,EAAI0E,EAAM1E,EACjC85B,EAAap4B,OAAO,GAAG3B,EAAI+5B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGO,EAAmB,UAAdyL,EAChF9G,EAAM3E,EAAI,GAAK2E,EAAM3E,EAAI,IAEjC+5B,EAAat6B,OAAS0O,GAAM4G,eAAeglB,EAAap4B,OAAO,GAAIo4B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,IACpH0+E,EAAc1+E,OAAS0O,GAAM4G,eAAeglB,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAI0+E,EAAcx8E,OAAOw8E,EAAcx8E,OAAOlC,OAAS,KAExJmV,EAAUzS,SAAWA,EAASgjC,OAAOvwB,EAAUzS,eAG/C43B,EAAap4B,OAAO,GAAKgD,EACP,QAAd8G,GAAqC,WAAdA,EACvBsuB,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGO,EAAI2E,EAAM3E,EAG9D+5B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGQ,EAAI0E,EAAM1E,EAElE85B,EAAat6B,OAAS0O,GAAM4G,eAAeglB,EAAap4B,OAAO,GAAIo4B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,IACpH0+E,EAAc1+E,OAAS0O,GAAM4G,eAAeglB,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAI0+E,EAAcx8E,OAAOw8E,EAAcx8E,OAAOlC,OAAS,KAO5Ji0E,EAAeppC,UAAUo1B,sBAAwB,SAAU9qD,EAAWkqE,GAClE,IAAK,IAAIp/E,EAAI,EAAGA,EAAIkV,EAAUzS,SAAS1C,OAAS,EAAGC,IAAK,CACpD,IAAI4D,EAAUsR,EAAUzS,SAAS,GAC7BmB,EAAQu7E,aACJC,EACAx7E,EAAQu7E,YAAa,GAGrBjqE,EAAUzS,SAASgN,OAAOzP,EAAG,GAC7BA,QAQhBg0E,EAAeppC,UAAUo0C,sBAAwB,SAAU9pE,EAAW5I,GAClEhD,KAAK02D,sBAAsB9qD,GAC3B,IACI7K,EACAg1E,EAFA/0E,EAAgBgC,EAAO8K,QAAQ8D,SAAS,GAAGhZ,QAG3Cm4B,EAAenlB,EAAUzS,SAAS,GAClC8lE,EAAcrzD,EAAUzS,SAAS,GACjCA,KACJ,GAA+B,UAA3B43B,EAAatuB,WAAoD,SAA3BsuB,EAAatuB,UAEnD,GADA1B,EAA0C,SAA3BgwB,EAAatuB,UAAwBzB,EAAckH,WAAalH,EAAcuG,YACzFwpB,EAAat6B,OAASuK,EAAczI,OAAsC,SAA3Bw4B,EAAatuB,WAC5D1B,EAAY/J,GAAK+5B,EAAap4B,OAAO,GAAG3B,GAAkC,UAA3B+5B,EAAatuB,WAC5D1B,EAAY/J,GAAK+5B,EAAap4B,OAAO,GAAG3B,EACxC+5B,EAAap4B,OAAO,GAAG1B,EAAI85B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGQ,EAAI8J,EAAY9J,EAC/F85B,EAAap4B,OAAO,GAAG3B,EAAI+J,EAAY/J,EACvC+5B,EAAat6B,OAAS0O,GAAM4G,eAAeglB,EAAap4B,OAAO,GAAIo4B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,IACpHwoE,EAAYxoE,OAAS0O,GAAM4G,eAAeglB,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAIwoE,EAAYtmE,OAAOsmE,EAAYtmE,OAAOlC,OAAS,QAE7I,CACD,IAAIgM,OAAY,EAOhBszE,EAA8B,YAL1BtzE,EADAw8D,EAAYx8D,UACAw8D,EAAYx8D,UAGZ0C,GAAM1C,UAAUw8D,EAAYtmE,OAAO,GAAIsmE,EAAYtmE,OAAOsmE,EAAYtmE,OAAOlC,OAAS,KAE5DuK,EAAc4G,aAAe5G,EAAcyC,UACjFw7D,EAAYxoE,QAAUwoE,EAAYx8D,YAClCw8D,EAAYxoE,OACO,QAAdgM,EAAuBsuB,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGQ,GAAK8+E,EAAa9+E,EAAI,IAC7F8+E,EAAa9+E,EAAI,GAAM85B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGQ,GAExF85B,EAAat6B,OAASs6B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGO,EAAI++E,EAAa/+E,EAC3F+5B,EAAatuB,UAAasuB,EAAat6B,OAAS,EAAK,QAAU,OAC/D,IAAImoE,GAAc/iE,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQ,IACpE0C,EAASrC,KAAK,IAAIyP,GAAkBqF,EAAW,WAAYgzD,GAAW,IACtEhzD,EAAUzS,SAAWA,EAASgjC,OAAOvwB,EAAUzS,eAKnD,GADA4H,EAA0C,WAA3BgwB,EAAatuB,UAA0BzB,EAAc4G,aAAe5G,EAAcyC,UAC7FstB,EAAat6B,OAASuK,EAAc1I,QAAuC,QAA3By4B,EAAatuB,WAC7D1B,EAAY9J,GAAK85B,EAAap4B,OAAO,GAAG1B,GACZ,WAA3B85B,EAAatuB,WAA0B1B,EAAY9J,GAAK85B,EAAap4B,OAAO,GAAG1B,EAChF85B,EAAap4B,OAAO,GAAG3B,EAAI+5B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGO,EAAI+J,EAAY/J,EAC/F+5B,EAAap4B,OAAO,GAAG1B,EAAI8J,EAAY9J,EACvC85B,EAAat6B,OAAS0O,GAAM4G,eAAeglB,EAAap4B,OAAO,GAAIo4B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,IACpHwoE,EAAYxoE,OAAS0O,GAAM4G,eAAeglB,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAIwoE,EAAYtmE,OAAOsmE,EAAYtmE,OAAOlC,OAAS,QAE7I,CACDs/E,EAA0C,SAA1B9W,EAAYx8D,UAAwBzB,EAAckH,WAAalH,EAAcuG,YACzF9E,OAAY,EAEZA,EADAw8D,EAAYx8D,UACAw8D,EAAYx8D,UAGZ0C,GAAM1C,UAAUw8D,EAAYtmE,OAAO,GAAIsmE,EAAYtmE,OAAOsmE,EAAYtmE,OAAOlC,OAAS,IAElGwoE,EAAYxoE,QAAUwoE,EAAYx8D,YAClCw8D,EAAYxoE,OACO,SAAdgM,EAAwBsuB,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGO,GAAK++E,EAAa/+E,EAAI,IAC9F++E,EAAa/+E,EAAI,GAAM+5B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGO,GAExF+5B,EAAat6B,OAASs6B,EAAap4B,OAAOo4B,EAAap4B,OAAOlC,OAAS,GAAGQ,EAAI8+E,EAAa9+E,EAC3F85B,EAAatuB,UAAasuB,EAAat6B,OAAS,EAAK,SAAW,MAC5DmoE,GAAc/iE,KAAM,aAAc4G,UAAWA,EAAWhM,OAAQ,IACpE0C,EAASrC,KAAK,IAAIyP,GAAkBqF,EAAW,WAAYgzD,GAAW,IACtEhzD,EAAUzS,SAAWA,EAASgjC,OAAOvwB,EAAUzS,YAO3DuxE,EAAeppC,UAAUg0C,sBAAwB,SAAU1pE,EAAWrG,EAAOgtC,EAAIC,EAAIz5C,EAAK4C,EAAOyP,GAC7F,IAAIsU,EAAS9T,EAAUzS,SAAS+kB,QAAQnlB,GACpCuB,EAAUsR,EAAUzS,SAASumB,GAC7BplB,IACc,sBAAViL,IAAkCjL,EAAQ+K,QAAQ7N,OAAS8C,EAAQ+K,QAAQC,UAC3EhL,EAAQ+K,SACJC,SAAUsG,EAAUtG,SAASsG,EAAU7K,YAAapF,GACpDnE,MAAO2N,GAAM+H,UAAUtB,EAAU7K,YAAapF,IAGnC,sBAAV4J,IAAkCjL,EAAQoL,QAAQlO,OAAS8C,EAAQoL,QAAQJ,UAChFhL,EAAQoL,SACJJ,SAAUsG,EAAUtG,SAASsG,EAAUf,YAAalP,GACpDnE,MAAO2N,GAAM+H,UAAUtB,EAAUf,YAAalP,KAGlC,uBAAV4J,IAAmCqG,EAAUnK,UAAsB,uBAAV8D,IAAmCqG,EAAUwmC,WACzGhnC,GAAU8G,GAAc5X,EAAQ+K,UAAY6M,GAAc5X,EAAQoL,UACjEP,GAAMC,aAAa9K,EAAQ4V,UAC3B5V,EAAQsrB,aAAezT,GAAgBvG,EAAU7K,YAAa6K,EAAUf,cAExE1F,GAAMC,aAAa9K,EAAQ9B,UAC3B8B,EAAQurB,aAAe1T,GAAgBvG,EAAUf,YAAae,EAAU7K,eAG7D,sBAAVwE,GAA4C,uBAAVA,IAAmC6F,GAAU8G,GAAc5X,EAAQ+K,UAC1G/K,EAAQsrB,aAAa5uB,GAAKu7C,EAC1Bj4C,EAAQsrB,aAAa3uB,GAAKu7C,EACpBrtC,GAAMC,aAAa9K,EAAQ4V,cAC7B5V,EAAQ4V,QAAWlZ,EAAGsD,EAAQsrB,aAAa5uB,EAAGC,EAAGqD,EAAQsrB,aAAa3uB,MAG3D,sBAAVsO,GAA4C,uBAAVA,IAAmC6F,GAAU8G,GAAc5X,EAAQoL,YAC1GpL,EAAQurB,aAAa7uB,GAAKu7C,EAC1Bj4C,EAAQurB,aAAa5uB,GAAKu7C,EACpBrtC,GAAMC,aAAa9K,EAAQ9B,cAC7B8B,EAAQ9B,QAAWxB,EAAGsD,EAAQurB,aAAa7uB,EAAGC,EAAGqD,EAAQurB,aAAa5uB,OAMtFyzE,EAAeppC,UAAUmzC,cAAgB,SAAUl6E,EAAKg4C,EAAIC,EAAIu/B,EAAep2E,EAAO4P,EAAUH,EAAQ9Q,GACpG,IAAIsR,EAAY5L,KAAKd,QAAQ0b,UAAUrgB,EAAIsF,IACvCm2E,EAAsBh2E,KAAK26D,yBAAyBpoB,EAAIC,EAAI5mC,EAAUkC,QAAQtM,QAClF,GAAIsS,GAAiBlI,IAA2B,sBAAbL,GAC5ByqE,GAAuBj/D,GAAgB/W,KAAKd,WAC/C0M,EAAUf,YAAY7T,GAAKu7C,EAC3B3mC,EAAUf,YAAY5T,GAAKu7C,EACV,uBAAbjnC,GAAwD,eAAnBK,EAAU/P,MAC/C+P,EAAUzS,UAAYyS,EAAUzS,SAAS1C,OAAS,GAAG,CACrD,IAAI2C,EAAOwS,EAAUzS,SAASyS,EAAUzS,SAAS1C,OAAS,GACtD2C,GAA4E,IAApEwS,EAAUzS,SAASyS,EAAUzS,SAAS1C,OAAS,GAAGkC,OAAOlC,SAC1C,SAAnB2C,EAAKqJ,WAA2C,UAAnBrJ,EAAKqJ,UAClCrJ,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,GAAGO,EAAI4U,EAAUf,YAAY7T,EAG9DoC,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,GAAGQ,EAAI2U,EAAUf,YAAY5T,EAElEmC,EAAK3C,OAAS0O,GAAM4G,eAAe3S,EAAKT,OAAO,GAAIS,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,IACpF2C,EAAKqJ,UAAY0C,GAAM1C,UAAUrJ,EAAKT,OAAO,GAAIS,EAAKT,OAAOS,EAAKT,OAAOlC,OAAS,KAI9F,GAAuB,WAAnBmV,EAAU/P,KACV,GAAIvB,EACA0F,KAAKs1E,sBAAsB/6E,EAAmB,KAAbgR,EAAmB,qBAAuBA,EAAUgnC,EAAIC,EAAIl4C,EAASqB,GAAQyP,QAG9G,IAAK,IAAI1U,EAAI,EAAGA,EAAI6D,EAAIpB,SAAS1C,OAAQC,IACrCsJ,KAAKs1E,sBAAsB/6E,EAAmB,KAAbgR,EAAmB,qBAAuBA,EAAUgnC,EAAIC,EAAIj4C,EAAIpB,SAASzC,GAAIiF,GAAQyP,GAOlI,OAHK2mE,GACD/xE,KAAKg+D,eAAepyD,GAEjBoqE,GAGXtL,EAAeppC,UAAUo8B,iBAAmB,SAAUnjE,EAAKg4C,EAAIC,EAAIu/B,EAAekE,GAC9E,IAAIrqE,EAAY5L,KAAKd,QAAQ0b,UAAUrgB,EAAIsF,IAC3C,IAAwB,aAAnB+L,EAAU/P,MAA0C,WAAnB+P,EAAU/P,OAAsB+P,EAAUzS,SAAS1C,OAAS,EAAG,CACjG,QAAsBwD,IAAlBg8E,GAA+BrqE,EAAUzS,SAAS88E,GAClDrqE,EAAUzS,SAAS88E,GAAet6E,MAAM3E,GAAKu7C,EAC7C3mC,EAAUzS,SAAS88E,GAAet6E,MAAM1E,GAAKu7C,OAG7C,IAAK,IAAI97C,EAAI,EAAGA,EAAIkV,EAAUzS,SAAS1C,OAAS,EAAGC,IAC/CkV,EAAUzS,SAASzC,GAAGiF,MAAM3E,GAAKu7C,EACjC3mC,EAAUzS,SAASzC,GAAGiF,MAAM1E,GAAKu7C,EAGpCu/B,GACD/xE,KAAKg+D,eAAepyD,GAG5B,OAAO,GAGX8+D,EAAeppC,UAAU40C,cAAgB,SAAUl4D,EAAQmK,EAAS3wB,EAAOg6B,EAAO2kD,GAC9E3kD,EAAQA,MACR,IAAI91B,EAASL,IACb0B,EAAarB,EAAQlE,EAAOg6B,EAAMx6B,EAAGw6B,EAAMv6B,GAC3C,IAAK,IAAI4F,EAAK,EAAGu5E,EAAYjuD,EAAStrB,EAAKu5E,EAAU3/E,OAAQoG,IAAM,CAC/D,IAAItC,EAAM67E,EAAUv5E,GACpB,GAAItC,aAAega,IACf,GAAIL,GAAU3Z,IAAQwc,GAAgB/W,KAAKd,SAAU,CACjD,IAAsB,IAAlBi3E,GAA2Bn4D,IAAWzjB,EAAK,CAC3CA,EAAI8R,aAAe7U,EACnB+C,EAAI8R,aAAe9R,EAAI8R,YAAc,KAAO,IAC5C,IAAIzR,EAAYa,EAAuBC,GAAU1E,EAAGuD,EAAIwB,QAAS9E,EAAGsD,EAAIyB,UACxEzB,EAAIwB,QAAUnB,EAAU5D,EACxBuD,EAAIyB,QAAUpB,EAAU3D,EACxB+I,KAAKd,QAAQwe,mBAAmBnjB,MAAWwB,QAASxB,EAAIwB,QAASC,QAASzB,EAAIyB,QAASqQ,YAAa9R,EAAI8R,cAE5G,GAAI9R,EAAIi+C,UAAW,CACf,IAAIz9B,EAAW/a,KAAKd,QAAQ0b,UAAUrgB,EAAIi+C,WACtCvwB,EAAQjoB,KAAKd,QAAQi6C,WAAWk9B,iBAAiBt7D,EAAUxgB,EAAIsF,GAAIG,KAAKd,SAC5Ec,KAAKd,QAAQi6C,WAAWm9B,oBAAoBruD,EAAO1tB,EAAKyF,KAAKd,SAE7D3E,EAAIqX,UAAYrX,EAAIqX,SAASnb,SAAW8D,EAAIud,WAC5C9X,KAAKu2E,YAAYh8E,EAAK4tB,SAK9BnoB,KAAKw2E,aAAaj8E,EAAK/C,EAAOg6B,IAAWx6B,EAAGuD,EAAIuT,QAAQ/R,QAAS9E,EAAGsD,EAAIuT,QAAQ9R,UAEpFgE,KAAKd,QAAQkc,oBAAoB7gB,GAErCyF,KAAKd,QAAQ22D,kBAGjB6U,EAAeppC,UAAUu1B,iBAAmB,SAAU1D,GAKlD,OAJKnzD,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgByyC,aACtDz2E,KAAKo0D,gBACRp0D,KAAKd,QAAQk1D,eAAeyC,iBAAiB1D,GAE1CA,GAGXuX,EAAeppC,UAAUu4B,UAAY,SAAUriE,GAC3C,OAAKwI,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgByyC,aACtDz2E,KAAKo0D,eACDp0D,KAAKo0D,eAAeyF,UAAU75D,KAAKd,QAAS1H,GAG5C,GAIfkzE,EAAeppC,UAAUk1C,aAAe,SAAUv3C,EAAMznC,EAAOg6B,GAC3D,IAAKyN,EAAKj+B,gBAAkBi+B,EAAKv9B,cAAe,CAC5C,IAAIhG,EAASL,IACb0B,EAAarB,EAAQlE,EAAOg6B,EAAMx6B,EAAGw6B,EAAMv6B,GAC3CgoC,EAAKl+B,YAActF,EAAuBC,EAAQujC,EAAKl+B,aACvDk+B,EAAKp0B,YAAcpP,EAAuBC,EAAQujC,EAAKp0B,aACvD,IAAIqxC,GAAYn7C,YAAak+B,EAAKl+B,YAAa8J,YAAao0B,EAAKp0B,aACjE7K,KAAKd,QAAQ2sE,wBAAwB5sC,KAAUid,KAGvDwuB,EAAeppC,UAAUuzC,4BAA8B,SAAUpG,GAC7D,IAEIhc,EAAgBzyD,KAAKd,QAAe,oBACxCc,KAAKd,QAAQ2qB,uBAAsB,GAEnC,IAAK,IADD6sD,EAAe12E,KAAKw5D,kBAAkBiV,MAAoB,GAAO,GAC5D/3E,EAAI,EAAGA,EAAIggF,EAAajgF,OAAQC,IAAK,CAC1C,IAAI6D,EAAMyF,KAAKd,QAAQ0b,UAAU87D,EAAahgF,GAAGmJ,IACjDtF,EAAIwB,QAAUxB,EAAIuT,QAAQ/R,QAC1BxB,EAAIyB,QAAUzB,EAAIuT,QAAQ9R,QAC1BzB,EAAIhC,MAAQgC,EAAIuT,QAAQvV,MACxBgC,EAAIjC,OAASiC,EAAIuT,QAAQxV,OAE7B0H,KAAKd,QAAQ2qB,sBAAsB4oC,IAGvCiY,EAAeppC,UAAUjmB,MAAQ,SAAU9gB,EAAKw4B,EAAIC,EAAIxB,EAAOyB,GAC3D,IAAI1yB,EAAOP,KAAKd,QAAQ0b,UAAUrgB,EAAIsF,IAClC4uE,EAAWluE,EAEXX,EAAUW,EAAKuN,QACdmlB,IACDA,EAAY14B,GAEhB,IAAIo8E,EAAa1jD,EAAUnlB,QAGvBjK,EAAW4wB,GAFPkiD,EAAW56E,QAAU46E,EAAW5oE,WAAWxV,MAAQo+E,EAAWnlD,MAAMx6B,EACpE2/E,EAAW36E,QAAU26E,EAAW5oE,WAAWzV,OAASq+E,EAAWnlD,MAAMv6B,EAC/C0/E,EAAW5oE,WAAWxV,MAAOo+E,EAAW5oE,WAAWzV,OAAQq+E,EAAWtqE,YAAasqE,EAAW56E,QAAS46E,EAAW36E,QAASw1B,GACzJ,QAAiCv3B,IAA7B2F,EAAQmO,WAAWxV,YAAqD0B,IAA9B2F,EAAQmO,WAAWzV,QAAwBye,GAAgB/W,KAAKd,SAAU,CACpH,GAAIuvE,EAAS78D,WAAc68D,EAAkB,UAAG,CAE5C,IAAK,IAAI5xE,EAAK,EAAG+5E,EADL52E,KAAKw5D,kBAAkBiV,MACD5xE,EAAK+5E,EAAQngF,OAAQoG,IAAM,CACzD,IAAIuT,EAAOwmE,EAAQ/5E,GACnBmD,KAAK62E,YAAY9jD,EAAIC,EAAInvB,EAAUuM,EAAMxQ,EAASqzB,GAEtD14B,EAAIuT,QAAQ6P,QAAQ,IAAIC,IACxBrjB,EAAIuT,QAAQ+P,QAAQtjB,EAAIuT,QAAQgQ,aAChC9d,KAAKd,QAAQ43E,kBAAkBv2E,GAC/BP,KAAK60E,4BAA4BpG,QAGjCzuE,KAAK62E,YAAY9jD,EAAIC,EAAInvB,EAAUtD,EAAMX,EAASqzB,GAEtD,IAAIzxB,EAAS4mB,GAAU7tB,EAAIuT,SAE3B,IAD+B9N,KAAK26D,8BAAyB1gE,OAAWA,EAAWuH,GAG/E,OADAxB,KAAKqb,MAAM9gB,EAAK,EAAIw4B,EAAI,EAAIC,EAAIxB,IACzB,EAEXxxB,KAAKd,QAAQkc,oBAAoB7gB,GAErC,OAAO,GAGXmwE,EAAeppC,UAAUk4B,kBAAoB,SAAUj5D,EAAMyY,EAAOm9D,EAAeY,GAG/E,IAAK,IAFD3mE,EAAO7P,EACPy2E,KACKtgF,EAAI,EAAGA,EAAI0Z,EAAKwB,SAASnb,OAAQC,KACtC6J,EAAQP,KAAKd,QAAQ0b,UAAUxK,EAAKwB,SAASlb,OAEpC6J,EAAKqR,UAIFukE,GACAn9D,EAAMliB,KAAKyJ,GAEXw2E,GACAC,EAAYlgF,KAAKyJ,GAErByY,EAAQhZ,KAAKw5D,kBAAkBj5D,EAAMyY,IATrCA,EAAMliB,KAAKyJ,IAavB,OAAO,EAAgBy2E,EAAch+D,GAGzC0xD,EAAeppC,UAAUi1C,YAAc,SAAUh2E,EAAMyY,GACnD,IAAI5I,EAAO7P,EACX,GAAIA,EAAKqR,SACL,IAAK,IAAIlb,EAAI,EAAGA,EAAI0Z,EAAKwB,SAASnb,OAAQC,IACtC6J,EAAQP,KAAKd,QAAQ0b,UAAUxK,EAAKwB,SAASlb,IAC7CsiB,EAAMliB,KAAKyJ,GAGnB,OAAOyY,GAGX0xD,EAAeppC,UAAUm4B,WAAa,SAAU55D,GAE5C,OADWG,KAAKd,QAAQ0b,UAAU/a,IAItC6qE,EAAeppC,UAAUu1C,YAAc,SAAU9jD,EAAIC,EAAIxB,EAAOj3B,EAAKqF,EAASqzB,GAC1EF,EAAKA,EAAK,EAAI,EAAIA,EAClBC,EAAKA,EAAK,EAAI,EAAIA,EAGLz4B,EAAIuT,QAAQ/R,QAAkBxB,EAAIuT,QAAQ9R,QAC5CzB,EAAIuT,QAAQC,WAAWxV,MAAegC,EAAIuT,QAAQC,WAAWzV,OAExE,GAAW,IAAPy6B,GAAmB,IAAPC,EAAU,CACtB,IAAIz6B,OAAQ,EACRD,OAAS,EACb,GAAIiC,aAAega,GAAM,CACrB,IACI0iE,OAAW,EACXhvD,OAAQ,EACY,UAHpB1nB,EAAOhG,GAGF6D,MAAMvC,MAAmB0E,EAAKnC,MAAMk7C,SAASD,WAAWE,WAC1Dh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAAS,IACrDwxB,EAAQjoB,KAAKd,QAAQi6C,WAAWk9B,iBAAiB91E,EAAMA,EAAKV,GAAIG,KAAKd,SACrE+3E,EAAW12E,EAAKuN,QAAQtM,OAAO+iB,aAAa0D,IAEhD1vB,EAAQgI,EAAKuN,QAAQC,WAAWxV,MAAQw6B,EACxCz6B,EAASiI,EAAKuN,QAAQC,WAAWzV,OAAS06B,OACpB/4B,IAAlBsG,EAAK6X,UAA4C,IAAlB7X,EAAK6X,WACpC7f,EAAQkE,KAAKqK,IAAIvG,EAAK6X,SAAU7f,SAEd0B,IAAlBsG,EAAK8c,UAA4C,IAAlB9c,EAAK8c,WACpC9kB,EAAQkE,KAAK+I,IAAIjF,EAAK8c,SAAU9kB,SAEb0B,IAAnBsG,EAAKgb,WAA8C,IAAnBhb,EAAKgb,YACrCjjB,EAASmE,KAAKqK,IAAIvG,EAAKgb,UAAWjjB,SAEf2B,IAAnBsG,EAAKgZ,WAA8C,IAAnBhZ,EAAKgZ,YACrCjhB,EAASmE,KAAK+I,IAAIjF,EAAKgZ,UAAWjhB,IAElC2+E,IACA1+E,EAAQkE,KAAK+I,IAAIjN,EAAQ0vB,EAAMplB,MAAQtC,EAAKuN,QAAQtM,OAAOxK,GAC3DsB,EAASmE,KAAK+I,IAAIlN,EAAS2vB,EAAMnlB,OAASvC,EAAKuN,QAAQtM,OAAOvK,IAElE87B,EAAKx6B,EAAQgI,EAAKwN,WAAWxV,MAC7By6B,EAAK16B,EAASiI,EAAKwN,WAAWzV,OAElC,IAAIoD,EAASL,IACTs7E,OAAa,EAQjB,GAPK1jD,IACDA,EAAY14B,GAEhBo8E,EAAa1jD,EAAUnlB,QACvB/Q,EAAarB,GAASi7E,EAAWtqE,YAAamlB,EAAMx6B,EAAGw6B,EAAMv6B,GAC7DwG,EAAY/B,EAAQq3B,EAAIC,EAAIxB,EAAMx6B,EAAGw6B,EAAMv6B,GAC3C8F,EAAarB,EAAQi7E,EAAWtqE,YAAamlB,EAAMx6B,EAAGw6B,EAAMv6B,GACxDsD,aAAega,GAAM,CACrB,IAAIhU,EAEAwM,EADAnK,OAAO,EAEPuwB,EAAc13B,EAAuBC,GAAU1E,GAH/CuJ,EAAOhG,GAGgDuT,QAAQ/R,QAAS9E,EAAGsJ,EAAKuN,QAAQ9R,UACxFk7E,EAAU32E,EAAKuN,QAAQ/R,QAAUwE,EAAKuN,QAAQC,WAAWxV,MAAQgI,EAAKixB,MAAMx6B,EAC5EmgF,EAAS52E,EAAKuN,QAAQ9R,QAAUuE,EAAKuN,QAAQC,WAAWzV,OAASiI,EAAKixB,MAAMv6B,EAChF,GAAIsB,EAAQ,EACR,GAAIgI,EAAKi4C,UAAW,CAChB,IAAI4+B,EAAWp3E,KAAKd,QAAQ0b,UAAUra,EAAKi4C,aACtC4+B,EAASh/D,UAAc7X,EAAKoC,OAAOC,KAAOrK,EAAS6+E,EAASh/D,YAC7D7X,EAAKhI,MAAQA,EACbgI,EAAKxE,QAAUo3B,EAAYn8B,QAI/BuJ,EAAKhI,MAAQA,EACbgI,EAAKxE,QAAUo3B,EAAYn8B,EAGnC,GAAIsB,EAAS,EACT,GAAIiI,EAAKi4C,UAAW,CAChB,IAAI6+B,EAAWr3E,KAAKd,QAAQ0b,UAAUra,EAAKi4C,aACtC6+B,EAAS97D,WAAehb,EAAKoC,OAAOI,IAAMzK,EAAU++E,EAAS97D,aAC9Dhb,EAAKjI,OAASA,EACdiI,EAAKvE,QAAUm3B,EAAYl8B,QAI/BsJ,EAAKjI,OAASA,EACdiI,EAAKvE,QAAUm3B,EAAYl8B,EAGnC2L,EAAOrC,EAAKuN,QAAQ/R,QAAUwE,EAAKuN,QAAQC,WAAWxV,MAAQgI,EAAKixB,MAAMx6B,EACzE+V,EAAQxM,EAAKuN,QAAQ9R,QAAUuE,EAAKuN,QAAQC,WAAWzV,OAASiI,EAAKixB,MAAMv6B,EAC5D+I,KAAKd,QAAQ0b,UAAUra,EAAKi4C,aACzBj4C,EAAKoC,OAAOI,KAAOgK,EAAQoqE,IAAY,GACpD52E,EAAKoC,OAAOC,MAAQA,EAAOs0E,IAAY,GACxCl3E,KAAKd,QAAQwe,mBAAmBnjB,MAC5BoI,QAAUI,IAAKxC,EAAKoC,OAAOI,IAAKH,KAAMrC,EAAKoC,OAAOC,QAIlD+X,GAAuB3a,KAAKd,QAAS3E,GAAK,GAC1CkjB,GAA0Bzd,KAAKd,QAAS3E,GAGxCyF,KAAKd,QAAQwe,mBAAmBnjB,MAC5BhC,MAAOgI,EAAKhI,MAAOD,OAAQiI,EAAKjI,OAAQyD,QAASwE,EAAKxE,QAASC,QAASuE,EAAKvE,QAC7E2G,QAAUI,IAAKxC,EAAKoC,OAAOI,KAAOgK,EAAQoqE,GAASv0E,KAAMrC,EAAKoC,OAAOC,MAAQA,EAAOs0E,UAK/F,CACD,IAAItrE,EAAYrR,EAChB,IAAKqR,EAAU5K,gBAAkB4K,EAAUlK,cAAe,CACtDkK,EAAU7K,YAActF,EAAuBC,EAAQkQ,EAAU7K,aACjE6K,EAAUf,YAAcpP,EAAuBC,EAAQkQ,EAAUf,aACjE,IAAIqxC,GAAYn7C,YAAa6K,EAAU7K,YAAa8J,YAAae,EAAUf,aAC3E7K,KAAKd,QAAQ2sE,wBAAwBjgE,KAAeswC,IAG5D,IAAI1+B,EAAaxd,KAAKd,QAAQ0b,UAAUrgB,EAAIi+C,WAC5C,GAAIh7B,EAAY,CACGA,EAAW1P,QAAQtM,OACtBjH,EAAIuT,QAAQtM,OACpBymB,EAAQjoB,KAAKd,QAAQi6C,WAAWk9B,iBAAiB74D,EAAYjjB,EAAIsF,GAAIG,KAAKd,SAC9Ec,KAAKd,QAAQi6C,WAAWm9B,oBAAoBruD,EAAO1tB,EAAKyF,KAAKd,YAKzEwrE,EAAeppC,UAAUg4B,SAAW,SAAU/+D,EAAK2vE,EAAa33B,EAAIC,GAChE,IAAIwjB,EACAshB,EACAn0E,EAAOnD,KAAKm2D,WAAW+T,EAAa3vE,GACpCiH,EAAS4mB,GAAU7tB,EAAIuT,SACvB3K,GAAQoU,GAAQpU,EAAMnD,KAAKd,WAC3B82D,EAAYh2D,KAAKu3E,eAAeh9E,EAAK4I,GACrCA,EAAKuM,OAAO1Y,GAAMu7C,EAAK/wC,EAAOjJ,MAC9B4K,EAAKuM,OAAOzY,GAAMu7C,EAAKhxC,EAAOlJ,OAC9Bg/E,EAAgBt3E,KAAKu3E,eAAeh9E,EAAK4I,GACzCnD,KAAKd,QAAQwe,mBAAmBnjB,EAAKy7D,EAAWshB,GAChDt3E,KAAKd,QAAQkc,oBAAoB7gB,KAIzCmwE,EAAeppC,UAAUw7B,UAAY,SAAUviE,EAAKgyB,EAAagmB,EAAIC,GACjE,IAAIwjB,EACAshB,EACAx8B,EACJA,EAAQ96C,KAAKm2D,WAAW5pC,EAAahyB,GACrC,IAAIiH,EAASD,GAA4BhH,EAAIuT,SAC7CkoD,EAAYh2D,KAAKw3E,qBAAqBj9E,EAAKugD,GACvCA,aAAiB/nC,IACjB+nC,EAAMprC,OAAO1Y,GAAMu7C,EAAK/wC,EAAOjJ,MAC/BuiD,EAAMprC,OAAOzY,GAAMu7C,EAAKhxC,EAAOlJ,SAG/B0H,KAAKy3E,2BAA2Bl9E,EAAKugD,EAAOvI,EAAIC,GAC5CsI,aAAiB9nC,KACjB8nC,EAAM7xB,UAAY,WAG1BquD,EAAgBt3E,KAAKw3E,qBAAqBj9E,EAAKugD,GAC3CvgD,aAAega,GACfvU,KAAKd,QAAQwe,mBAAmBnjB,EAAKy7D,EAAWshB,GAGhDt3E,KAAKd,QAAQ2sE,wBAAwBtxE,EAAKy7D,EAAWshB,GAEzDt3E,KAAKd,QAAQkc,oBAAoB7gB,GAC5BulC,GAAW9/B,KAAKd,QAAS47C,GAAO,EAAOvuB,IACxCvsB,KAAKu1D,YAAYh7D,EAAKgyB,IAG9Bm+C,EAAeppC,UAAUm2C,2BAA6B,SAAUvrE,EAAQ4uC,EAAOvI,EAAIC,EAAIrf,EAAa5B,GAChG,IAGI7hB,EAEAtW,EAGAs+E,EARApP,EAActoE,KAAKd,QAAQ2zC,WAAW3mC,EAAO4B,QAASgtC,EAAMj7C,IAC5D9D,EAAUusE,EAAYvsE,QACtBC,EAAUssE,EAAYtsE,QAEtB2pB,EAAqBzZ,EAAOyZ,mBAE5BgyD,EAAc,EACdC,EAAc,EAEdzkB,EAAkB,IAAgCn8D,EAAG+E,EAAUw2C,EAAIt7C,EAAG+E,EAAUw2C,GAChFqlC,EAAiB73E,KAAK83E,wBAAwB3kB,EAAiBxtC,GAC/D/qB,EAAY+qB,EAAmBA,EAAmBlvB,OAAS,GAE/D,GADAmhF,EAAczyE,GAAM89B,0BAA0Btd,GAC1CkyD,EAAephF,OAAS,EAAG,CAC3B,GAAIqkD,EAAMi9B,UAAUh1E,KAAO+3C,EAAMi9B,UAAUj1E,QAAUg4C,EAAMi9B,UAAUn1E,MAAQk4C,EAAMi9B,UAAUl1E,MAAO,CAChG,IAAIm1E,GAAgBA,YAAa,MACjCp9E,EAAYoF,KAAKi4E,kBAAkB9kB,EAAiBxtC,EAAoBqyD,GACxE,IAAI1yE,GAAa0yE,YAAa,MAE9B,GADAN,EAAqB13E,KAAKi4E,kBAAkB9kB,EAAiB0kB,EAAgBvyE,GAC1D,MAAf0yE,GAAuB1yE,EAAS0yE,YAAcA,EAAYA,YAC1Dp9E,EAAY88E,MAEX,CAED98E,EADsB4tB,GAAqBtc,EAAOyZ,mBAAoBm1B,EAAO5uC,EAAO4B,QAAQtM,QAChE7F,YAKhCf,EADA88E,EAAqBG,EAAeA,EAAephF,OAAS,GAGhE,GAAImE,EAAW,CACX,IAAIinC,OAAI,EAER,IAAKA,EAAI,EAAGA,EAAIlc,EAAmBlvB,OAAQorC,IAAK,CAC5C,GAAY,MAARzoC,EAAc,CAEd,GADSkjB,GAAKyJ,UAAU3sB,EAAMusB,EAAmBkc,KACtCr+B,cAAc5I,GAAY,CACjC+8E,GAAexyE,GAAMmI,WAAWlU,EAAMwB,GACtC,MAGA+8E,GAAexyE,GAAMmI,WAAWlU,EAAMusB,EAAmBkc,IAGjEzoC,EAAOusB,EAAmBkc,GAE9BnyB,GAAW1Y,EAAG2gF,EAAcC,EAAa3gF,EAAG,GAEhD+I,KAAKk4E,kBAAkBhsE,EAAQ4uC,EAAOprC,EAAQyjD,EAAiB5hC,EAAMghB,EAAIC,QAGzExyC,KAAKk4E,kBAAkBhsE,EAAQ4uC,EAAO,KAAMqY,EAAiB5hC,EAAMghB,EAAIC,IAG/Ek4B,EAAeppC,UAAU22C,kBAAoB,SAAU9kB,EAAiBx6D,EAAQq/E,GAC5E,IAAIp9E,EACA0K,EACA1J,EACAlF,EACJ,IAAKA,EAAI,EAAGA,EAAIiC,EAAOlC,OAAQC,IAC3BkF,EAAKjD,EAAOjC,GACZ4O,EAAW7I,KAAKC,MAAMD,KAAKmmC,KAAKnmC,KAAKomC,IAAKswB,EAAgBn8D,EAAI4E,EAAG5E,EAAI,GACjEyF,KAAKomC,IAAKswB,EAAgBl8D,EAAI2E,EAAG3E,EAAI,KACT,OAA5B+gF,EAAYA,aACZv7E,KAAKqK,IAAIrK,KAAK6G,IAAI00E,EAAYA,aAAcv7E,KAAK6G,IAAIgC,MAAe7I,KAAK6G,IAAIgC,KAC7E1K,EAAYgB,EACZo8E,EAAYA,YAAc1yE,GAGlC,OAAO1K,GAGX8vE,EAAeppC,UAAU62C,eAAiB,SAAUr9B,EAAOn/C,EAAOy8E,EAAQC,GACtE,IAAIrhF,GAAI,EACJC,GAAI,EASR,OARKmhF,EAAOphF,GAAM2E,EAAM3E,EAAI8jD,EAAMi9B,UAAUn1E,KAAQy1E,EAAiB9/E,MAAQ,GACxE6/E,EAAOphF,GAAK2E,EAAM3E,EAAI8jD,EAAMi9B,UAAUl1E,MAASw1E,EAAiB9/E,MAAQ,IACzEvB,GAAI,GAEHohF,EAAOnhF,GAAM0E,EAAM1E,EAAI6jD,EAAMi9B,UAAUh1E,IAAOs1E,EAAiB//E,OAAS,GACxE8/E,EAAOnhF,GAAK0E,EAAM1E,EAAI6jD,EAAMi9B,UAAUj1E,OAAUu1E,EAAiB//E,OAAS,IAC3ErB,GAAI,IAECD,EAAGA,EAAGC,EAAGA,IAGtByzE,EAAeppC,UAAU42C,kBAAoB,SAAU33E,EAAMu6C,EAAOprC,EAAQ0oE,EAAQ7mD,EAAMghB,EAAIC,GAE1F,GADA9iC,EAASA,IAAoB1Y,EAAG8jD,EAAMprC,OAAQzY,EAAG,GAC7C6jD,GAASprC,GAAUA,EAAO1Y,EAAI,GAAK0Y,EAAO1Y,EAAI,EAAG,CACjD,IAAI2E,OAAQ,EACRsP,EAAW9F,GAAM89B,0BAA0B1iC,EAAKolB,oBACpDhqB,EAAQqE,KAAK41B,iBAAiB3qB,EAAWyE,EAAO1Y,EAAGuJ,EAAKolB,mBAAoB,GAC5E,IAAI2yD,EAAgBt4E,KAAKd,QAAQosB,eAAe5H,YAC5Cq0D,EAAYj9B,EAAMi9B,UACtB,GAAIA,EAAUh1E,KAAOg1E,EAAUj1E,QAAUi1E,EAAUn1E,MAAQm1E,EAAUl1E,MAAO,CACtD7C,KAAKd,QAAQ2zC,WAAWtyC,EAAKuN,QAASgtC,EAAMj7C,IAA9D,IACIw4E,EAAmB,IAAI/7D,GAAK,EAAG,EAAG,EAAG,GACrCi8D,EAAqBv4E,KAAKd,QAAQ2zC,WAAWtyC,EAAKuN,QAASgtC,EAAMj7C,IACrEw4E,EAAiBrhF,EAAK,EAAqB+E,QAAUu8E,EAAiB/lC,EACtE8lC,EAAiBphF,EAAKshF,EAAmBv8E,QAAUs8E,EAAiB9lC,EACpE6lC,EAAiB9/E,MAAQggF,EAAmB/2E,OAAOjJ,MAAQ+/E,EAC3DD,EAAiB//E,OAASigF,EAAmB/2E,OAAOlJ,OAASggF,EAC7D,IAAIE,EAAkB,IAAIl8D,GAAK3gB,EAAM3E,GAAK+gF,EAAUn1E,MAAQ,GAAKy1E,EAAiB9/E,MAAQ,EAAGoD,EAAM1E,GAAK8gF,EAAUh1E,KAAO,GAAKs1E,EAAiB//E,OAAS,GAAIy/E,EAAUn1E,MAAQ,IAAMm1E,EAAUl1E,OAAS,GAAKw1E,EAAiB9/E,OAAQw/E,EAAUh1E,KAAO,IAAMg1E,EAAUj1E,QAAU,GAAKu1E,EAAiB//E,QACtS,GAAIkgF,EAAgBh1E,cAAc40E,GAC9BA,EAASA,OAMT,IAAK,IAFDK,GAAS98E,EAAOy8E,GAEXv7E,EAAK,EAAG67E,EADA14E,KAAK24E,iBAAiBF,EAAOD,GAAiB,GACX37E,EAAK67E,EAAiBjiF,OAAQoG,IAAM,CAGpFu7E,EAFQM,EAAiB77E,GAKjC,IAAI+7E,EAAc54E,KAAKm4E,eAAer9B,EAAOn/C,EAAOy8E,EAAQC,GAC5Dv9B,EAAMn4C,QACFC,KAAMg2E,EAAY5hF,EAAIohF,EAAOphF,EAAI2E,EAAM3E,EAAI8jD,EAAMn4C,OAAOC,KACxDG,IAAK61E,EAAY3hF,EAAImhF,EAAOnhF,EAAI0E,EAAM1E,EAAI6jD,EAAMn4C,OAAOI,IAAKF,MAAO,EAAGC,OAAQ,QAIlFg4C,EAAMn4C,QAAWC,KAAMw1E,EAAOphF,EAAI2E,EAAM3E,EAAG+L,IAAKq1E,EAAOnhF,EAAI0E,EAAM1E,EAAG4L,MAAO,EAAGC,OAAQ,GAE1Fg4C,EAAMprC,OAASA,EAAO1Y,EAClBu6B,IACAupB,EAAMviD,MAAQg5B,EAAKh5B,MACnBuiD,EAAMxiD,OAASi5B,EAAKj5B,UAIhCoyE,EAAeppC,UAAUq3C,iBAAmB,SAAUE,EAAUr3E,EAAQs3E,GACpE,IAAIj1C,EACJ,GAAIriC,EAAQ,CACR,IAAIu3E,IACE/hF,EAAGwK,EAAOxK,EAAGC,EAAGuK,EAAOvK,IACvBD,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAOtB,EAAGuK,EAAOvK,IACtCD,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAOtB,EAAGuK,EAAOvK,EAAIuK,EAAOlJ,SACjDtB,EAAGwK,EAAOxK,EAAGC,EAAGuK,EAAOvK,EAAIuK,EAAOlJ,SAClCtB,EAAGwK,EAAOxK,EAAGC,EAAGuK,EAAOvK,IAE7B4sC,EAAa7jC,KAAK6O,UAAUgqE,EAAUE,EAAWD,GAErD,OAAOj1C,GAGX6mC,EAAeppC,UAAUzyB,UAAY,SAAUmqE,EAAWD,EAAWD,GAEjE,IAAK,IADDjqE,KACKnY,EAAI,EAAGA,EAAIsiF,EAAUviF,OAAS,EAAGC,IACtC,IAAK,IAAIL,EAAI,EAAGA,EAAI0iF,EAAUtiF,OAAS,EAAGJ,IAAK,CAC3C,IAAIwrC,EAAI9a,GAAWiyD,EAAUtiF,GAAIsiF,EAAUtiF,EAAI,GAAIqiF,EAAU1iF,GAAI0iF,EAAU1iF,EAAI,IACnE,IAARwrC,EAAE7qC,GAAmB,IAAR6qC,EAAE5qC,GACf4X,EAAU/X,KAAK+qC,GAI3B,OAAOhzB,GAGX67D,EAAeppC,UAAU1L,iBAAmB,SAAUn/B,EAAQkC,EAAQnB,GAMlE,IAAK,IAHDyhF,EAEAr9E,EAHA8gD,EAAM,EAENw8B,GAAUliF,EAAG,EAAGC,EAAG,GAEdP,EAAI,EAAGA,EAAIiC,EAAOlC,OAAQC,IAE/B,GADAkF,EAAKjD,EAAOjC,GACPuiF,EAAL,CAKI,IAAI79E,EAAI+J,GAAMmI,WAAW2rE,EAAKr9E,GAC1BwR,OAAI,EACJ+rE,OAAM,EACNniF,OAAI,EACJC,OAAI,EACR,GAAIylD,EAAMthD,GAAK3E,EAAQ,CACnB2W,EAAI3W,EAASimD,EACby8B,EAAMh0E,GAAM+H,UAAU+rE,EAAKr9E,GAC3B5E,EAAIoW,EAAI3Q,KAAKY,IAAI87E,EAAM18E,KAAKgR,GAAK,KACjCxW,EAAImW,EAAI3Q,KAAKW,IAAI+7E,EAAM18E,KAAKgR,GAAK,KACjCyrE,GAAUliF,EAAGiiF,EAAIjiF,EAAIA,EAAGC,EAAGgiF,EAAIhiF,EAAIA,GAC3BkiF,EACR,MAGAz8B,GAAOthD,EAGf69E,EAAMr9E,OAtBFq9E,EAAMr9E,EAwBd,OAAOs9E,GAEXxO,EAAeppC,UAAUw2C,wBAA0B,SAAU3kB,EAAiBimB,GAC1E,IAGIC,EACAC,EACAC,EALAC,KACAC,KACAC,KAIJH,EAAYp0E,GAAMmI,YAAatW,EAAG,EAAGC,EAAG,IAAOD,EAAGgJ,KAAKd,QAAQwf,SAAS2E,cAAepsB,EAAG+I,KAAKd,QAAQwf,SAAS0E,iBAChH,IAAK,IAAI1sB,EAAI,EAAGA,EAAI0iF,EAAU3iF,OAAQC,IAAK,CACvCgjF,GAAWN,EAAU1iF,EAAI,GAAI0iF,EAAU1iF,IACvC+iF,KACAH,EAAW78E,KAAKC,MAAMyI,GAAM+H,UAAUwsE,EAAQ,GAAIA,EAAQ,IAAM,KAChEL,EAAW58E,KAAKC,MAAMyI,GAAM+H,UAAUwsE,EAAQ,GAAIA,EAAQ,IAAM,KAChE,IAAIC,EAAYL,EAAW,GAAKA,GAAY,IAAQA,EAAW,KAAOA,GAAY,IAAO,IAAM,GAC/FG,EAAQ3iF,KAAKqO,GAAMM,UAAU0tD,EAAiBmmB,EAAWK,EAAUJ,IACnEE,EAAQ3iF,KAAKqO,GAAMM,UAAU0tD,EAAiBkmB,EAAWM,EAAUJ,IACnE,IAEInyD,EAAQxiB,IAFM1N,GAAIwiF,EAAQ,GAAG1iF,EAAGG,GAAIuiF,EAAQ,GAAGziF,EAAGG,GAAIsiF,EAAQ,GAAG1iF,EAAGK,GAAIqiF,EAAQ,GAAGziF,IACrEC,GAAIuiF,EAAQ,GAAGziF,EAAGG,GAAIsiF,EAAQ,GAAGxiF,EAAGG,GAAIqiF,EAAQ,GAAGziF,EAAGK,GAAIoiF,EAAQ,GAAGxiF,IAEnFmwB,EAAMviB,SACN20E,EAAW1iF,KAAKswB,EAAMhB,aAG9B,OAAOozD,GAGX9O,EAAeppC,UAAUk2C,qBAAuB,SAAUtrE,EAAQ4uC,GAC9D,IACIxiC,KAWJ,OAVAA,EAFYsa,GAAgB1mB,EAAQ4uC,EAAMj7C,IAAI,KAG1CtH,MAAOuiD,EAAMviD,MAAOD,OAAQwiD,EAAMxiD,OAAQoX,OAASxD,aAAkBqI,IACjEvd,EAAG8jD,EAAMprC,OAAO1Y,EAChBC,EAAG6jD,EAAMprC,OAAOzY,GACf6jD,EAAMprC,OACXrD,YAAayuC,EAAMzuC,YACnB1J,QAAUC,KAAMk4C,EAAMn4C,OAAOC,KAAMC,MAAOi4C,EAAMn4C,OAAOE,MAAOE,IAAK+3C,EAAMn4C,OAAOI,IAAKD,OAAQg4C,EAAMn4C,OAAOG,QAC1GgW,oBAAqBgiC,EAAMhiC,oBAAqBD,kBAAmBiiC,EAAMjiC,kBACzEoQ,UAAa/c,aAAkBkH,GAAa0nC,EAAM7xB,eAAYhvB,IAEzDqe,YAAaA,IAG1BoyD,EAAeppC,UAAUi2C,eAAiB,SAAUrrE,EAAQ/I,GACxD,IACIsvB,KAEJ,OADAA,EAFYG,GAAgB1mB,EAAQ/I,EAAKtD,IAAI,KAE5B6P,OAAQvM,EAAKuM,SACrB+iB,MAAOA,IAGpBi4C,EAAeppC,UAAU/B,YAAc,SAAUrzB,EAAQ4uC,EAAOqY,EAAiBl5B,GAC7E,IAAI+7B,EACAshB,EACJthB,EAAYh2D,KAAKw3E,qBAAqBtrE,EAAQ4uC,GACjCz/C,IACKy/C,EAAMzuC,YADxB,IAEIutE,EAAe55E,KAAKd,QAAQ2zC,WAAW3mC,EAAO4B,QAASgtC,EAAMj7C,IAC7DrI,EAAQ0V,GAAYlW,EAAG4iF,EAAa79E,QAAS9E,EAAG2iF,EAAa59E,SAAWm3D,GAAmB,GAC3F0G,EAAY75D,KAAK65D,UAAUriE,GAE/B,GADAA,EAAsB,IAAdqiE,EAAkBA,EAAYriE,EAClCsjD,aAAiB9nC,IAAkB8nC,EAAMrK,aAAc,CAEvDj5C,GADmB6wB,GAAsBnc,EAAOyZ,mBAAoBm1B,EAAO5uC,EAAO4B,QAAQtM,QACpEhK,MAE1BA,GAASA,EAAQ,KAAO,IACxBsjD,EAAMzuC,aAAe7U,GAASsjD,EAAMzuC,YAAcutE,EAAattE,iBAC/DwuC,EAAMn4C,OAAOG,QAA8C,QAAnC82E,EAAa/gE,mBAAiCiiC,EAAMxiD,OAAS,EAA0C,WAAnCshF,EAAa/gE,kBAAmCiiC,EAAMxiD,OAAS,EAAK,EAChKwiD,EAAMn4C,OAAOE,OAA+C,SAArC+2E,EAAa9gE,qBAAoCgiC,EAAMviD,MAAQ,EAA4C,UAArCqhF,EAAa9gE,oBAAoCgiC,EAAMviD,MAAQ,EAAK,EAC7JuiD,aAAiB9nC,GACjB8nC,EAAM7xB,UAAY,SAGlB6xB,EAAMhiC,oBAAsBgiC,EAAMjiC,kBAAoB,SAE1DohB,EAASnsB,QAAQzB,YAAc4tB,EAAS5tB,YAAcyuC,EAAMzuC,YAC5DirE,EAAgBt3E,KAAKw3E,qBAAqBtrE,EAAQ4uC,GAC9C5uC,aAAkBqI,GAClBvU,KAAKd,QAAQwe,mBAAmBxR,EAAQ8pD,EAAWshB,GAGnDt3E,KAAKd,QAAQ2sE,wBAAwB3/D,EAAQ8pD,EAAWshB,GAE5Dt3E,KAAKd,QAAQkc,oBAAoBlP,IAGrCw+D,EAAeppC,UAAU67B,YAAc,SAAU58D,EAAMu6C,EAAO0Z,EAAYC,EAAajjC,EAAOyI,GAC1F,IAAI+7B,EACAshB,EACAjrE,EACJ2pD,EAAYh2D,KAAKw3E,qBAAqBj3E,EAAMu6C,GAC5C,IAAIvuB,EAAc0N,EAASnsB,QAAQ8D,SAAS,GAC5C,GAAK4iD,GAA6B,IAAfA,GAAsBC,GAA+B,IAAhBA,EAAoB,CACxE,IAAIolB,EAASx+E,IACTK,EAASL,IACb0B,EAAa88E,GAASt5E,EAAK8L,YAAa9L,EAAKxE,QAASwE,EAAKvE,SAE3De,EAAarB,IADb2Q,GAAgBkgB,EAAYlgB,aAAgB9L,aAAgBgU,GAAQhU,EAAK8L,YAAc,GAAM,KAAO,KACjEmlB,EAAMx6B,EAAGw6B,EAAMv6B,GAClDwG,EAAY/B,EAAQ84D,EAAYC,EAAajjC,EAAMx6B,EAAGw6B,EAAMv6B,GAC5D8F,EAAarB,EAAQ2Q,EAAamlB,EAAMx6B,EAAGw6B,EAAMv6B,GACjD,IAAIk8B,EAAc13B,EAAuBC,GAAU1E,EAAGu1B,EAAYxwB,QAAS9E,EAAGs1B,EAAYvwB,UACtF1D,EAASi0B,EAAYxe,WAAWzV,OAASm8D,EACzCl8D,EAAQg0B,EAAYxe,WAAWxV,MAAQi8D,EACvCp2D,EAAQ4B,KAAKm2D,WAAW5pC,EAAahsB,GACzC,GAAInC,aAAiB4U,GACjBhT,KAAKy3E,2BAA2Bl3E,EAAMu6C,EAAO,EAAG,EAAG3nB,EAAa,IAAIvV,GAAKrlB,EAAOD,QAE/E,CACD,IAAIkJ,EAASD,GAA4BhB,EAAKuN,UAC9CqlB,EAAc13B,EAAuBo+E,EAAQ1mD,IACjCn8B,EAAIm8B,EAAYn8B,EAAIu1B,EAAY5pB,OAAOC,KAAO2pB,EAAY5pB,OAAOE,MAC7EswB,EAAYl8B,EAAIk8B,EAAYl8B,EAAIs1B,EAAY5pB,OAAOI,IAAMwpB,EAAY5pB,OAAOG,OAC5EqwB,EAAYl8B,GAAkC,QAA5BmH,EAAMya,mBAAiCvgB,EAAS,EAAmC,WAA5B8F,EAAMya,kBAAmCvgB,EAAS,EAAK,EAChI66B,EAAYn8B,GAAoC,SAA9BoH,EAAM0a,qBAAoCvgB,EAAQ,EAAqC,UAA9B6F,EAAM0a,oBAAoCvgB,EAAQ,EAAK,EAClI,IAAIuhF,EAAUt4E,EAAOjJ,OAAS46B,EAAYn8B,EAAIwK,EAAOxK,GACjD+iF,EAAUv4E,EAAOlJ,QAAU66B,EAAYl8B,EAAIuK,EAAOvK,GAClDsB,EAAQ,IACR6F,EAAM7F,MAAQA,EACd6F,EAAMsR,OAAO1Y,EAAI,EAAI8iF,GAErBxhF,EAAS,IACT8F,EAAM9F,OAASA,EACf8F,EAAMsR,OAAOzY,EAAI,EAAI8iF,IAI7Bj/B,aAAiB9nC,KACjB8nC,EAAM7xB,UAAY,UAEtBquD,EAAgBt3E,KAAKw3E,qBAAqBj3E,EAAMu6C,GAC5Cv6C,aAAgBgU,GAChBvU,KAAKd,QAAQwe,mBAAmBnd,EAAMy1D,EAAWshB,GAGjDt3E,KAAKd,QAAQ2sE,wBAAwBtrE,EAAMy1D,EAAWshB,GAE1Dt3E,KAAKd,QAAQkc,oBAAoB7a,IAGrCmqE,EAAeppC,UAAUs2B,cAAgB,SAAUr1D,GAC/C,IACI8tE,EADAp2C,GAAajhB,SAAWkE,eAS5B,OAPI3a,aAAkBgS,GAClB87D,EAAU9tE,EAAOi2C,UAEZj2C,GAAUA,EAAOyW,OAAUzW,EAAOyW,MAAY,QAChDzW,EAAOyW,MAAM,GAAGw/B,YACnB63B,EAAU9tE,EAAOyW,MAAM,GAAGw/B,WAE1B63B,GACAp2C,EAASjhB,MAAMliB,KAAK0qC,GAAMxhC,KAAKd,QAAQ0b,UAAUy1D,KAC1Cp2C,GAEJA,GAGXywC,EAAeppC,UAAUq5B,yBAA2B,SAAUpoB,EAAIC,EAAIwnC,GAClE,IAAI5uD,EAAeprB,KAAKd,QAAQksB,aAC5B4qD,EAAsBh2E,KAAKd,QAAQksB,aAAa4qD,oBAChDt3D,EAAW1e,KAAKd,QAAQwf,SAC5B,GAA4B,SAAxBs3D,GAA0D,YAAxBA,EAAmC,CACrE,IAAIiE,EAAkBD,OAAyD//E,EAA5C+F,KAAKd,QAAQke,cAActP,QAAQtM,OAClEjJ,EAAgC,SAAxBy9E,EAAiC5qD,EAAa7yB,MAAQmmB,EAAS2E,cACvE/qB,EAAiC,SAAxB09E,EAAiC5qD,EAAa9yB,OAASomB,EAAS0E,eACzE5hB,EAASw4E,EACTn3E,GAASm3E,EAAax4E,EAAOqB,MAAQo3E,EAAep3E,QAAU0vC,GAAM,GACpE3vC,GAAQo3E,EAAax4E,EAAOoB,KAAOq3E,EAAer3E,OAAS2vC,GAAM,GACjE2nC,GAASF,EAAax4E,EAAOuB,IAAMk3E,EAAel3E,MAAQyvC,GAAM,GAChE1vC,GAAUk3E,EAAax4E,EAAOsB,OAASm3E,EAAen3E,SAAW0vC,GAAM,GAC3E,OAAI3vC,GAAStK,GAASqK,GAAQ,GACvBE,GAAUxK,GAAU4hF,GAAS,EAKxC,OAAO,GAIXxP,EAAeppC,UAAU43B,oBAAsB,SAAU3mB,EAAIC,GACzD,IAAIj4C,EAAMyF,KAAKd,QAAQke,cAOvB,OANIpd,KAAKgpB,QAAUhpB,KAAKgpB,MAAMgiD,SAC1BhrE,KAAKgpB,MAAMgiD,UACXhrE,KAAKgpB,MAAMgiD,OAAOjvE,QAAUxB,EAAIwB,QAChCiE,KAAKgpB,MAAMgiD,OAAOhvE,QAAUzB,EAAIyB,SAEpCzB,EAAMwiB,GAAsB/c,KAAKd,QAAS3E,IAAQA,IAC9CyF,KAAK26D,yBAAyBpoB,EAAIC,KAClCxyC,KAAKd,QAAQic,KAAK5gB,EAAKg4C,EAAIC,IACpB,IAKfk4B,EAAeppC,UAAUm5B,mBAAqB,SAAUtX,EAAIC,EAAI5xB,GAC5D,IAAIj3B,EAAMyF,KAAKd,QAAQke,cAUvB,OATIpd,KAAKgpB,QAAUhpB,KAAKgpB,MAAMgiD,SAC1BhrE,KAAKgpB,MAAMgiD,UACXhrE,KAAKgpB,MAAMgiD,OAAOjvE,QAAUxB,EAAIwB,QAChCiE,KAAKgpB,MAAMgiD,OAAOhvE,QAAUzB,EAAIyB,QAChCgE,KAAKgpB,MAAMgiD,OAAOzyE,MAAQgC,EAAIhC,MAC9ByH,KAAKgpB,MAAMgiD,OAAO1yE,OAASiC,EAAIjC,OAC/B0H,KAAKgpB,MAAMgiD,OAAOx5C,MAAQA,GAE9Bj3B,EAAMwiB,GAAsB/c,KAAKd,QAAS3E,IAAQA,EAC3CyF,KAAKd,QAAQmc,MAAM9gB,EAAK4oD,EAAIC,EAAI5xB,IAG3Ck5C,EAAeppC,UAAUw4B,oBAAsB,SAAUtiE,GACrD,IAAI+C,EAAMyF,KAAKd,QAAQke,cAMvB,OALIpd,KAAKgpB,QAAUhpB,KAAKgpB,MAAMgiD,SAC1BhrE,KAAKgpB,MAAMgiD,UACXhrE,KAAKgpB,MAAMgiD,OAAOxzE,MAAQ+C,EAAI8R,aAElC9R,EAAMwiB,GAAsB/c,KAAKd,QAAS3E,IAAQA,EAC3CyF,KAAKd,QAAQwiD,OAAOnnD,EAAK/C,IAGpCkzE,EAAeppC,UAAU/C,aAAe,WACpC,OAAOA,GAAav+B,KAAKd,UAG7BwrE,EAAeppC,UAAUxB,WAAa,SAAUlgC,GAC5C,OAAOkgC,GAAW9/B,KAAKd,QAASU,IAKpC8qE,EAAeppC,UAAU+6B,WAAa,SAAUt8D,GAC5C,IAAIQ,EAAQR,EAAKiD,QAAUjD,EAAKwC,OAC5ByzD,GAAc7b,WAAY55C,EAAK45C,YACnC55C,EAAK45C,YAAc55C,EAAK45C,WACxBn6C,KAAKd,QAAQwe,mBAAmBnd,EAAMy1D,GAAa7b,WAAY55C,EAAK45C,cAGxEuwB,EAAeppC,UAAU64C,WAAa,SAAU55E,EAAMrB,GAClD,IACIipB,EACAiyD,EAAS75E,EAAK45C,WAelB,OAdAn6C,KAAKq6E,eAAe95E,EAAM65E,EAAQp6E,KAAKd,SACvCqB,EAAK45C,WAAaigC,EAClBp6E,KAAKd,QAAQwrB,OAAO4vD,UAAY/5E,EAAKV,GACjCG,KAAKd,QAAQ6rE,qBAAuB/qE,KAAKd,QAAQwrB,OAAO6vD,iBAAmBv6E,KAAKd,QAAQs7E,4BACxFx6E,KAAKd,QAAQs7E,0BAA0BC,aAAc,GAEzDz6E,KAAKd,QAAQw7E,oBAAqB,EAClC16E,KAAKd,QAAQy7E,yBAA0B,EACvCxyD,EAAUnoB,KAAKd,QAAQ07E,WACvB56E,KAAKd,QAAQw7E,oBAAqB,EAClC16E,KAAKd,QAAQy7E,yBAA0B,EACnC36E,KAAKd,QAAQ6rE,qBAAuB/qE,KAAKd,QAAQwrB,OAAO6vD,iBAAmBv6E,KAAKd,QAAQs7E,2BACxFx6E,KAAK+qE,oBAAoBqP,OAAOp6E,KAAKd,QAAQs7E,0BAA0BC,YAAatyD,EAAS5nB,EAAMP,KAAKd,SAErGipB,GAEXuiD,EAAeppC,UAAUu5C,gBAAkB,SAAU73E,EAAQ9D,EAASkzB,EAAYxmB,GAE9E,IAAK,IADDkvE,EACKpkF,EAAI,EAAGA,EAAIsM,EAAO21C,QAAQliD,OAAQC,IAAK,CAC5C,IAAIs5E,EAAe9wE,EAAQ0b,UAAU5X,EAAO21C,QAAQjiD,IAChDqkF,EAAe77E,EAAQ0b,UAAUo1D,EAAavuE,UAClD,GAAIs5E,EAAa5gC,aAAe/nB,GAAc2oD,EAAal7E,KAAO+L,EAAUnK,UAAYuuE,EAAa9hD,QACjG,OAAO,EAGP4sD,GAAU,EAGlB,OAAOA,GAMXpQ,EAAeppC,UAAU+4C,eAAiB,SAAU93E,EAAQ6vB,EAAYlzB,GACpE,IAAK,IAAIxI,EAAI,EAAGA,EAAI6L,EAAOm2C,SAASjiD,OAAQC,IAAK,CAC7C,IAAIkV,EAAY1M,EAAQ0b,UAAUrY,EAAOm2C,SAAShiD,IAC9CsM,EAAS9D,EAAQ0b,UAAUhP,EAAUwmC,UACrC7sC,EAAQvF,KAAK66E,gBAAgB73E,EAAQ9D,EAASkzB,EAAYxmB,GAC9DA,EAAUsiB,QAAUkE,EACpB,IAAI4jC,GACA9nC,QAASlrB,EAAOkrB,QAChBhuB,OAASwsB,QAAS1pB,EAAO9C,MAAMwsB,UAE/ByC,GACAjB,QAASlrB,EAAOkrB,QAChBhuB,OAASwsB,QAAS1pB,EAAO9C,MAAMwsB,UAE/BnnB,IACIvC,EAAOm3C,YACPn6C,KAAKq6E,eAAer3E,EAAQovB,EAAYlzB,GAE5C8D,EAAOkrB,QAAUkE,EACjBpvB,EAAO9C,MAAMwsB,QAAW1sB,KAAKd,QAAQ6rE,qBACjC/qE,KAAKd,QAAQwrB,OAAO6vD,iBAAmBnoD,EAAc,GAAMpvB,EAAO9C,MAAMwsB,QAC5ExtB,EAAQwe,mBAAmB1a,EAAQgzD,EAAW7mC,IAElDjwB,EAAQ2sE,wBAAwBjgE,EAAWoqD,EAAW7mC,KAM9Du7C,EAAeppC,UAAUu5B,oBAAsB,SAAUtgE,EAAK8hB,GACtD9hB,aAAega,KACfha,EAAIwB,QAAUsgB,EAAKrlB,EAAIqlB,EAAK9jB,MAAQ,EACpCgC,EAAIyB,QAAUqgB,EAAKplB,EAAIolB,EAAK/jB,OAAS,EACrCiC,EAAIhC,MAAQ8jB,EAAK9jB,MACjBgC,EAAIjC,OAAS+jB,EAAK/jB,OAClBiC,EAAIuT,QAAQ8D,SAAS,GAAGqf,gBAAiB,EACzCjxB,KAAKd,QAAQwe,mBAAmBnjB,MAC5BhC,MAAO8jB,EAAK9jB,MAAOD,OAAQ+jB,EAAK/jB,OAAQyD,QAASxB,EAAIwB,QACrDC,QAASzB,EAAIyB,UAES,QAAtBgE,KAAKd,QAAQ0sB,MACb5rB,KAAKd,QAAQmuE,wBAOzB3C,EAAeppC,UAAUs7B,sBAAwB,SAAUriE,EAAK8hB,GACxD9hB,aAAe6Y,KACfpT,KAAKd,QAAQ2sE,wBAAwBtxE,MACjCsQ,YAAatQ,EAAIsQ,cAErB7K,KAAKd,QAAQkc,oBAAoB7gB,KAIzCmwE,EAAeppC,UAAUupB,uBAAyB,SAAU7zD,EAAGC,EAAGsB,EAAOD,GACrE0H,KAAKd,QAAQ2rD,uBAAuB7zD,EAAGC,EAAGsB,EAAOD,IAGrDoyE,EAAeppC,UAAU42B,iBAAmB,WACxCl4D,KAAKd,QAAQg5D,oBAGjBwS,EAAeppC,UAAUo3B,eAAiB,WACtC14D,KAAKd,QAAQw5D,kBAGjBgS,EAAeppC,UAAU03B,oBAAsB,SAAUprD,EAAOotE,EAAWC,GACvE,IAAI1gF,EAAMyF,KAAKd,QAAQ0b,UAAUhN,EAAM/N,KAAO+N,EAAMoL,MAAM,GAC1D,GAAIiiE,GACI,GAAS1gF,EAAIi+C,WAAaj+C,EAAIi+C,YAAcyiC,EAAUntE,QAAQjO,GAAI,CAClE,IAAIU,EAAOihC,GAAMjnC,GACjBgG,EAAKi4C,UAAYj+C,EAAIi+C,UACrBx4C,KAAKd,QAAQg5D,mBAGb,IAAK,IAFD2X,KAEKn5E,GADTm5E,EAAQA,EAAM1zC,OAAO5hC,EAAIm+C,SAAUn+C,EAAIo+C,UACpBliD,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACxC,IAAIkV,EAAY5L,KAAKd,QAAQ0b,UAAUi1D,EAAMn5E,IACzCkV,GACA5L,KAAKd,QAAQ48C,OAAOlwC,GAG5B,IAAIsvE,OAAiB,GACrBA,EAAkBl7E,KAAKd,QAAQ0b,UAAUrgB,EAAIi+C,WAAWp6C,MAAMk7C,SAASD,WAAoB,eAC5ElzC,OAAO+0E,EAAeh9D,QAAQ,EAAMre,IAAK,GACxDG,KAAKd,QAAQi6C,WAAWgiC,oBAAoBn7E,KAAKd,QAAQ0b,UAAUrgB,EAAIi+C,WAAW1qC,QAAS,EAAMjO,IACjGG,KAAKd,QAAQ0b,UAAU,EAAM/a,IAAI24C,UAAY,GAC7Cj+C,EAAIwB,QAAUxB,EAAIuT,QAAQ/R,QAC1BxB,EAAIyB,QAAUzB,EAAIuT,QAAQ9R,QAC1B,IACI6f,GACAhgB,KAAM,kBAAmBmgB,YAAchD,OAFzBwoB,GAAMjnC,KAE2CwhB,YAAc/C,OAAQzY,IAASub,SAAU,YAE5G9b,KAAKic,gBAAgBJ,GACrB7b,KAAKd,QAAQw5D,mBAKzBgS,EAAeppC,UAAUg3B,YAAc,SAAU/1D,EAAQ64E,GACrD,IAAI76E,EAAOP,KAAKd,QAAQ0b,UAAUrY,EAAO1C,KAAO0C,EAAOyW,MAAM,GAC7D,MAAyB,mBAArBzY,EAAKnC,MAAMA,SAGXmC,GAA4B,SAApBA,EAAKnC,MAAMvC,MACd0E,EAAKi4C,YAAc4iC,EAAYv7E,IAAQU,EAAKV,KAAOu7E,EAAY5iC,YAChE4iC,EAAYh9E,MAAMk7C,SAASD,WAAWI,YASlDixB,EAAeppC,UAAUypB,kBAAoB,SAAUhrD,EAAMs7E,EAAoB94E,GAChE,IAAI+Z,GACjB,GAAIvc,EAAKiD,kBAAkBuR,IAAS8mE,GAAsBt7E,EAAKwC,kBAAkBgS,GAAO,CACpF,IAAI+mE,EAAMD,EAAqBt7E,EAAKwC,OAASxC,EAAKiD,OAC9Cu4E,EAAUF,EAAqBt7E,EAAKiB,cAAgBjB,EAAK2B,cACzDsB,EAAShD,KAAKm2D,WAAWolB,EAASD,EAAK/4E,GAAQ,GAC/C3C,OAAU,EACd,GAAIoD,aAAkBy0C,GAIlB,IAAK,IAHDjlB,EAASxvB,EAAOnD,GAChBU,EAAOR,EAAKiD,OAEPnG,EAAK,EAAG6f,EADFnc,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAC9BA,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC3D,IAAI+Q,EAAQ8O,EAAG7f,GACf,GAAI+Q,EAAM/N,KAAOU,EAAKV,GAAK,IAAM2yB,EAAQ,CACrC5yB,EAAUgO,EAAMgE,SAAS,GACzB,YAKRhS,EAAUoD,aAAkBuR,GACxBvR,EAAO8K,QAAUutE,EAAqBt7E,EAAKiB,cAAgBjB,EAAK2B,cAExE1B,KAAKd,QAAQ6rD,kBAAkBnrD,KAKvC8qE,EAAeppC,UAAU63B,UAAY,SAAU52D,EAAQS,EAAQ3C,GAG3D,OAAO,GAKXqqE,EAAeppC,UAAU82B,UAAY,SAAU/lD,EAAY9G,EAAUgnC,EAAIC,GACrE,IACI72C,EADApB,EAAMyF,KAAKd,QAAQke,cAEnBo+D,EAAcjwE,EAASvU,EAAIqb,EAAWrb,EACtCykF,EAAalwE,EAAStU,EAAIob,EAAWpb,EAErC8hE,EADJp9D,GAAU3E,EAAGu7C,EAAIt7C,EAAGu7C,GAKpB,OAHIxyC,KAAKo0D,iBACL2E,EAAe/4D,KAAKd,QAAQk1D,eAAegE,UAAUp4D,KAAKd,QAAS3E,EAAKihF,EAAaC,EAAY9/E,EAAO0W,EAAY9G,IAEjHwtD,GAKX2R,EAAeppC,UAAUw0B,WAAa,WAC7B91D,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgB03C,cAAiB17E,KAAKo0D,gBAC/Ep0D,KAAKo0D,eAAeunB,iBAAiB37E,KAAKd,UAIlDwrE,EAAeppC,UAAUm3B,eAAiB,SAAUl2D,EAAQS,GACxD,IAAIzC,EAAQgC,aAAkBgS,GAAQhS,EAASA,EAAOyW,MAAM,GAC5D,GAAIhZ,KAAKd,QAAQi6C,YAAoC,SAAtBn2C,EAAO5E,MAAMvC,MAChB,mBAArB0E,EAAKnC,MAAMA,MAA4B,CAE1CmC,EAAc,UAAIyC,EAAOnD,GACzBU,EAAKnC,MAAMkqB,WAAW+L,OAASrxB,EAAOnD,GACjCG,KAAKd,QAAQ+e,gBACdje,KAAKd,QAAQ0tE,kBAAkBrsE,EAAKnC,MAAMkqB,WAAYtlB,GACtDzC,EAAKnC,MAAMkqB,WAAW+L,OAAS,GAC/Br0B,KAAKd,QAAQ48C,OAAOv7C,IAExBP,KAAKd,QAAQmuE,wBAKrB3C,EAAeppC,UAAUjO,KAAO,SAAU9wB,EAAQS,EAAQ3C,GAElDL,KAAKd,QAAQi6C,aACbn5C,KAAKd,QAAQi6C,WAAWyiC,cAAc54E,EAAST,aAAkBgS,GAAQhS,EAASA,EAAOyW,MAAM,GAAIhZ,KAAKd,SACxGc,KAAKd,QAAQmuE,wBAIrB3C,EAAeppC,UAAUrlB,gBAAkB,SAAUJ,GACjD7b,KAAKd,QAAQ+c,gBAAgBJ,IAGjC6uD,EAAeppC,UAAU3S,MAAQ,SAAUxG,EAASskC,EAAQ5wD,GACxD,GAAIssB,EAAQ1xB,OAAS,EAAG,CACpB,IAAIC,EAAI,EACJ8K,EAAmB,WAAT3F,EAAqBusB,GAAUD,EAAQ,GAAGra,SAAW9N,KAAKd,QAAQke,cAActP,QAAQtM,OAClGia,GAAYzC,SAAWkE,eACvB2+D,GAAY7iE,SAAWkE,eAC3B,IAAKxmB,EAAe,WAATmF,EAAsBnF,EAAI,EAAKA,EAAIA,EAAIyxB,EAAQ1xB,OAAQC,IAAK,CACnE,IAAI67C,EAAK,EACLC,EAAK,EACLspC,EAAe1zD,GAAUD,EAAQzxB,GAAGoX,SACzB,SAAX2+C,EACAla,EAAK/wC,EAAOoB,KAAOk5E,EAAavjF,MAAQ,EAAIujF,EAAa76E,OAAOjK,EAEhD,UAAXy1D,EACLla,EAAK/wC,EAAOqB,MAAQi5E,EAAavjF,MAAQ,EAAIujF,EAAa76E,OAAOjK,EAEjD,QAAXy1D,EACLja,EAAKhxC,EAAOuB,IAAM+4E,EAAaxjF,OAAS,EAAIwjF,EAAa76E,OAAOhK,EAEhD,WAAXw1D,EACLja,EAAKhxC,EAAOsB,OAASg5E,EAAaxjF,OAAS,EAAIwjF,EAAa76E,OAAOhK,EAEnD,WAAXw1D,EACLla,EAAK/wC,EAAOP,OAAOjK,EAAI8kF,EAAa76E,OAAOjK,EAE3B,WAAXy1D,IACLja,EAAKhxC,EAAOP,OAAOhK,EAAI6kF,EAAa76E,OAAOhK,GAE/CwkB,EAAUzb,KAAK+7E,YAAYtgE,EAAS0M,EAAQzxB,IAC5CsJ,KAAKmb,KAAKgN,EAAQzxB,GAAI67C,EAAIC,GAC1BxyC,KAAKd,QAAQ22D,iBACbgmB,EAAU77E,KAAK+7E,YAAYF,EAAS1zD,EAAQzxB,IAEhD+kB,EAAU+lB,GAAM/lB,GAChBogE,EAAUr6C,GAAMq6C,GAChB,IAAIhgE,GACAhgB,KAAM,QAASigB,SAAU,WACzBC,WAAYL,GAAYD,GAAUO,WAAYN,GAAYmgE,IAE9D77E,KAAKic,gBAAgBJ,KAI7B6uD,EAAeppC,UAAU06C,WAAa,SAAU7zD,EAASskC,GACrD,GAAItkC,EAAQ1xB,OAAS,EAAG,CACpB,IAAIC,EAAI,EAKJmM,GAHO,IAAIyZ,GAGH,GACR1Z,EAAO,EACPq5E,EAAQ,EACRn5E,EAAS,EACT7B,EAAS,EACT08B,EAAS,EACTu+C,EAAM,EAENC,GAAoBnjE,SAAWkE,eAC/Bk/D,GAAoBpjE,SAAWkE,eAEnC,IADAiL,EAAUD,GAAKC,GACVzxB,EAAI,EAAGA,EAAIyxB,EAAQ1xB,OAAQC,IAC5BmM,EAAQA,EAAQslB,EAAQzxB,GAAGoX,QAAQtM,OAAOgL,SAASxV,EAAImxB,EAAQzxB,EAAI,GAAGoX,QAAQtM,OAAOgL,SAASxV,EAC9F4L,EAAOA,EAAOulB,EAAQzxB,GAAGoX,QAAQtM,OAAO+K,QAAQvV,EAAImxB,EAAQzxB,EAAI,GAAGoX,QAAQtM,OAAO+K,QAAQvV,EAC1FilF,EAAQA,EAAQ9zD,EAAQzxB,GAAGoX,QAAQtM,OAAOgL,SAASvV,EAAIkxB,EAAQzxB,EAAI,GAAGoX,QAAQtM,OAAOgL,SAASvV,EAC9F6L,EAASA,EAASqlB,EAAQzxB,GAAGoX,QAAQtM,OAAO8G,YAAYrR,EAAIkxB,EAAQzxB,EAAI,GAAGoX,QAAQtM,OAAO8G,YAAYrR,EACtGgK,EAASA,EAASknB,EAAQzxB,GAAGoX,QAAQtM,OAAOP,OAAOjK,EAAImxB,EAAQzxB,EAAI,GAAGoX,QAAQtM,OAAOP,OAAOjK,EAC5F2mC,EAASA,EAASxV,EAAQzxB,GAAGoX,QAAQtM,OAAOP,OAAOhK,EAAIkxB,EAAQzxB,EAAI,GAAGoX,QAAQtM,OAAOP,OAAOhK,EAC5FilF,EAAMA,EAAM/zD,EAAQzxB,GAAGoX,QAAQtM,OAAOgL,SAASvV,EAAIkxB,EAAQzxB,EAAI,GAAGoX,QAAQtM,OAAO8G,YAAYrR,EAEjG,IAAKP,EAAI,EAAGA,EAAIyxB,EAAQ1xB,OAAS,EAAGC,IAAK,CACrC,IAAI67C,EAAK,EACLC,EAAK,EACLp5C,EAAOgvB,GAAUD,EAAQzxB,EAAI,GAAGoX,SAChClW,EAAUwwB,GAAUD,EAAQzxB,GAAGoX,SACpB,gBAAX2+C,GAAuC,WAAXA,EAC5Bla,EAAKn5C,EAAK6H,OAAOjK,EAAIY,EAAQqJ,OAAOjK,EAAKiK,GAAUknB,EAAQ1xB,OAAS,GAEpD,UAAXg2D,EACLla,EAAKn5C,EAAKoT,SAASxV,EAAIY,EAAQ4U,SAASxV,EAAK6L,GAASslB,EAAQ1xB,OAAS,GAEvD,SAAXg2D,EACLla,EAAKn5C,EAAKmT,QAAQvV,EAAIY,EAAQ2U,QAAQvV,EAAK4L,GAAQulB,EAAQ1xB,OAAS,GAEpD,WAAXg2D,EACLja,EAAKp5C,EAAK6H,OAAOhK,EAAIW,EAAQqJ,OAAOhK,EAAK0mC,GAAUxV,EAAQ1xB,OAAS,GAEpD,QAAXg2D,EACLja,EAAKp5C,EAAKoT,SAASvV,EAAIW,EAAQ4U,SAASvV,EAAKglF,GAAS9zD,EAAQ1xB,OAAS,GAEvD,WAAXg2D,EACLja,EAAKp5C,EAAKkP,YAAYrR,EAAIW,EAAQ0Q,YAAYrR,EAAK6L,GAAUqlB,EAAQ1xB,OAAS,GAE9D,gBAAXg2D,IACLja,EAAKp5C,EAAKkP,YAAYrR,EAAIW,EAAQ4U,SAASvV,EAAKilF,GAAO/zD,EAAQ1xB,OAAS,IAE5E0lF,EAAkBn8E,KAAK+7E,YAAYI,EAAiBh0D,EAAQzxB,IAC5DsJ,KAAKmb,KAAKgN,EAAQzxB,GAAI67C,EAAIC,GAC1BxyC,KAAKd,QAAQ22D,iBACbumB,EAAkBp8E,KAAK+7E,YAAYK,EAAiBj0D,EAAQzxB,IAEhEylF,EAAkB36C,GAAM26C,GACxBC,EAAkB56C,GAAM46C,GACxB,IAAIvgE,GACAhgB,KAAM,aAAcigB,SAAU,WAC9BC,WAAYL,GAAYygE,GAAkBngE,WAAYN,GAAY0gE,IAEtEp8E,KAAKic,gBAAgBJ,KAI7B6uD,EAAeppC,UAAU+6C,SAAW,SAAUl0D,EAASskC,GACnD,GAAItkC,EAAQ1xB,OAAS,EAAG,CACpB,IAAIC,EAAI,EACJ86B,OAAQ,EACZA,GAAUx6B,EAAG,GAAKC,EAAG,IACrB,IAAIuK,EAAS4mB,GAAUD,EAAQ,GAAGra,SAC9BiO,GAAe/C,SAAWkE,eAC1BlB,GAAehD,SAAWkE,eAC9B,IAAKxmB,EAAI,EAAGA,EAAIyxB,EAAQ1xB,OAAQC,IAAK,CACjC,IAAI2lB,EAAO+L,GAAUD,EAAQzxB,GAAGoX,SAC5BilB,EAAK,EACLC,EAAK,EACM,UAAXy5B,EACA15B,EAAKvxB,EAAOjJ,MAAQ8jB,EAAK9jB,MAET,WAAXk0D,EACLz5B,EAAKxxB,EAAOlJ,OAAS+jB,EAAK/jB,OAEV,SAAXm0D,IACL15B,EAAKvxB,EAAOjJ,MAAQ8jB,EAAK9jB,MACzBy6B,EAAKxxB,EAAOlJ,OAAS+jB,EAAK/jB,QAE9ByjB,EAAa/b,KAAK+7E,YAAYhgE,EAAYoM,EAAQzxB,IAClDsJ,KAAKqb,MAAM8M,EAAQzxB,GAAIq8B,EAAIC,EAAIxB,GAC/BxV,EAAahc,KAAK+7E,YAAY//D,EAAYmM,EAAQzxB,IAEtDsJ,KAAKd,QAAQ22D,iBACb95C,EAAaylB,GAAMzlB,GACnBC,EAAawlB,GAAMxlB,GACnB,IAAIH,GACAhgB,KAAM,SAAUigB,SAAU,WAC1BC,WAAYL,GAAYK,GAAaC,WAAYN,GAAYM,IAEjEhc,KAAKic,gBAAgBJ,KAG7B6uD,EAAeppC,UAAUy6C,YAAc,SAAUO,EAAgB/hF,GAO7D,OANIA,aAAega,GACf+nE,EAAetjE,MAAMliB,KAAK0qC,GAAMjnC,IAGhC+hF,EAAep/D,WAAWpmB,KAAK0qC,GAAMjnC,IAElC+hF,GAGX5R,EAAeppC,UAAUy6B,OAAS,SAAUwgB,EAASC,EAAS5gB,GAC1D,IAAI6gB,E9C1jGZ,SAAwB1mE,GACpB,OAASA,EAAM9C,YAAc2C,qBAAmB8mE,K8CyjGjCC,CAAQ38E,KAAKd,SACpB09E,E9CvjGZ,SAAwB7mE,GACpB,OAASA,EAAM9C,YAAc2C,qBAAmBinE,K8CsjGjCC,CAAQ98E,KAAKd,SACxBc,KAAKd,QAAQ69E,KAAKR,EAAUE,EAAOF,EAAU,GAAKv8E,KAAKd,QAAQwf,SAASgF,aAAc84D,EAAUI,EAAOJ,EAAU,GAAKx8E,KAAKd,QAAQwf,SAASgF,YAAak4C,IAK7J8O,EAAeppC,UAAU+3B,gBAAkB,SAAUz5D,GACjDI,KAAKd,QAAQ6rD,kBAAkBnrD,EAAQkO,UAK3C48D,EAAeppC,UAAU+2B,kBAAoB,WACzCr4D,KAAKd,QAAQ89E,oBAKjBtS,EAAeppC,UAAUvkB,sBAAwB,SAAUxc,GACvD,OAAOwc,GAAsB/c,KAAKd,QAASqB,IAK/CmqE,EAAeppC,UAAUi3B,oBAAsB,SAAUh4D,EAAMgd,GAC3D,OAAO5C,GAAuB3a,KAAKd,QAASqB,EAAMgd,IAKtDmtD,EAAeppC,UAAUk3B,qBAAuB,SAAUx6C,EAAQzd,GAC9Dwd,GAAoB/d,KAAKd,QAAS8e,EAAQzd,IAG9CmqE,EAAeppC,UAAU04B,eAAiB,SAAU//B,EAAUphC,GAC1D,IAAI0H,EACJ,GAA8B,IAA1B05B,EAASjhB,MAAMviB,QAA+C,IAA/BwjC,EAAS/c,WAAWzmB,OACnD,GAAIkkB,GAAuB3a,KAAKd,QAAS+6B,EAASjhB,MAAM,IAAI,GAAO,CAC/DzY,EAAoC,aAA5B05B,EAASjhB,MAAM,GAAG5a,MAAwB67B,EAASjhB,MAAM,GAC7DhZ,KAAKd,QAAQ0b,UAAUqf,EAASjhB,MAAM,GAAG6B,UAC7C,IAAIjN,EAAQqsB,EAASjhB,MAAM,GAC3B,GAA4B,SAAxBzY,EAAKuX,UAAUjc,KACf,GAAqC,eAA/B0E,EAAKuX,UAAUhH,aAAmD,IAAnBlD,EAAMkN,UACvB,aAA/Bva,EAAKuX,UAAUhH,aAA8BlD,EAAMkN,SAAW,GAAKlN,EAAMqN,YAAc,GACxF,GAAe,gBAAXpiB,EACA,GAAwB,aAApB0H,EAAKnC,MAAMvC,KAAqB,CAChC,IACIohF,GADAnvE,EAAUvN,EAAKuN,QAAQ8D,SAAS,IACd2K,KAAKzO,EAAQyO,KAAK9lB,OAAS,GAAG+lB,MAAM,GAC1Dxc,KAAKkc,OAAOlc,KAAKd,QAAQ0b,UAAUqiE,EAAQrrE,SAAS,GAAGA,SAAS,GAAG/R,UAGnE,IAAK,IAAInJ,EAAI,EAAGA,EAAIsJ,KAAKd,QAAQ8Z,MAAMviB,OAAQC,IAAK,CAEhD,IADI6D,EAAMyF,KAAKd,QAAQ8Z,MAAMtiB,IACrBokB,WAAava,EAAKgc,KAAK9lB,OAAS,GAAyB,IAApB8D,EAAI0gB,YAAmB,CAChEjb,KAAKkc,OAAO3hB,GACZ,aAOhB,GAAe,eAAX1B,EACA,GAAwB,aAApB0H,EAAKnC,MAAMvC,KAAqB,CAChC,IACIqhF,EADApvE,OAAU,EAGdovE,GADApvE,EAAUvN,EAAKuN,QAAQ8D,SAAS,IACd2K,KAAKzO,EAAQyO,KAAK9lB,OAAS,GAAG+lB,MAAM1O,EAAQyO,KAAKzO,EAAQyO,KAAK9lB,OAAS,GAAG+lB,MAAM/lB,OAAS,GAC3GuJ,KAAKkc,OAAOlc,KAAKd,QAAQ0b,UAAUsiE,EAAQtrE,SAAS,GAAG/R,UAGvD,IAASnJ,EAAI,EAAGA,EAAIsJ,KAAKd,QAAQ8Z,MAAMviB,OAAQC,IAAK,CAChD,IAAI6D,EACJ,GAAqB,KADjBA,EAAMyF,KAAKd,QAAQ8Z,MAAMtiB,IACrBokB,UAAkBvgB,EAAI0gB,cAAgB1a,EAAKya,QAAQvkB,OAAS,EAAG,CACnEuJ,KAAKkc,OAAO3hB,GACZ,aASxB,GAAqC,aAAjC0/B,EAASjhB,MAAM,GAAG5a,MAAMvC,KAAqB,CAC7C0E,EAAO05B,EAASjhB,MAAM,GAClBlL,OAAU,EACVF,OAAQ,EADZ,IAEI8R,OAAQ,EACI,gBAAX7mB,GAAoE,aAAxCohC,EAASjhB,MAAM,GAAG5a,MAAM0S,aAErDlD,GADAE,EAAUvN,EAAKuN,QAAQ8D,SAAS,IAChB2K,KAAKzO,EAAQyO,KAAK9lB,OAAS,GAAG+lB,MAAM,GACpDxc,KAAKkc,OAAOlc,KAAKd,QAAQ0b,UAAUhN,EAAMgE,SAAS,GAAG/R,MAErC,eAAXhH,GACLiV,EAAUvN,EAAKuN,QAAQ8D,SAAS,GAChC8N,EAASua,EAASjhB,MAAM,GAAG5a,MAAY,OAAI,EAAI,EAC/CwP,EAAQE,EAAQyO,KAAKmD,GAAOlD,MAAM1O,EAAQyO,KAAKmD,GAAOlD,MAAM/lB,OAAS,GACrEuJ,KAAKkc,OAAOlc,KAAKd,QAAQ0b,UAAUhN,EAAMgE,SAAS,GAAG/R,MAEpC,gBAAXhH,GAAoE,eAAxCohC,EAASjhB,MAAM,GAAG5a,MAAM0S,cAE1D4O,GADA5R,EAAUvN,EAAKuN,QAAQ8D,SAAS,IAChB2K,KAAK9lB,OAAS,EAC9BmX,EAAQE,EAAQyO,KAAKmD,GAAOlD,MAAM1O,EAAQyO,KAAKmD,GAAOlD,MAAM/lB,OAAS,GACrEuJ,KAAKkc,OAAOlc,KAAKd,QAAQ0b,UAAUhN,EAAMgE,SAAS,GAAG/R,QAOzE6qE,EAAeppC,UAAU65B,KAAO,SAAU9/C,EAAOkhE,EAASC,EAAS5gB,GAC/D57D,KAAKd,QAAQwf,SAASy8C,KAAK9/C,EAAOkhE,EAAUv8E,KAAKd,QAAQwf,SAASgF,YAAa84D,EAAUx8E,KAAKd,QAAQwf,SAASgF,YAAak4C,IAEzH8O,KCh6GPyS,GAAiC,WACjC,SAASA,EAAgBj+E,GAErBc,KAAKyF,WAAc8sC,GAAI,EAAGC,GAAI,EAAGn3B,MAAO,GAExCrb,KAAKo9E,wBAELp9E,KAAKq9E,oBACLr9E,KAAKs9E,WAAa,EAClBt9E,KAAKu9E,YAAc,EACnBv9E,KAAKw9E,kBAAoB,EACzBx9E,KAAK2iB,QAAU,EACf3iB,KAAK6iB,QAAU,EACf7iB,KAAK4nE,UAAW,EAChB5nE,KAAKy9E,YAAc,EACnBz9E,KAAK09E,YAAc,EACnB19E,KAAKd,QAAUA,EACfc,KAAKmoB,WACLnoB,KAAKyF,UAAYvG,EAAQwf,SAAWxf,EAAQwf,SAASjZ,WAAc8sC,GAAI,EAAGC,GAAI,EAAGn3B,MAAO,GACxFrb,KAAKs9E,WAAap+E,EAAQosB,eAAejI,cACzCrjB,KAAKu9E,YAAcr+E,EAAQosB,eAAelI,eAC1CpjB,KAAKw9E,kBAAoBt+E,EAAQosB,eAAe5H,YAChD1jB,KAAK2iB,QAAUzjB,EAAQosB,eAAe1I,iBACtC5iB,KAAK6iB,QAAU3jB,EAAQosB,eAAexI,eA2iB1C,OAziBAnG,OAAO8lB,eAAe06C,EAAgB77C,UAAW,kBAE7CgC,IAAK,WACD,OAAOtjC,KAAKu9E,aAGhBj4C,IAAK,SAAU51B,GACX1P,KAAKu9E,YAAc7tE,EACnB1P,KAAKd,QAAQosB,eAAelI,eAAiB1T,GAEjD6zB,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAe06C,EAAgB77C,UAAW,eAE7CgC,IAAK,WACD,OAAOtjC,KAAKw9E,mBAGhBl4C,IAAK,SAAU51B,GACX1P,KAAKw9E,kBAAoB9tE,EACzB1P,KAAKd,QAAQosB,eAAe5H,YAAchU,GAE9C6zB,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAe06C,EAAgB77C,UAAW,iBAE7CgC,IAAK,WACD,OAAOtjC,KAAKs9E,YAGhBh4C,IAAK,SAAU51B,GACX1P,KAAKs9E,WAAa5tE,EAClB1P,KAAKd,QAAQosB,eAAejI,cAAgB3T,GAEhD6zB,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAe06C,EAAgB77C,UAAW,oBAE7CgC,IAAK,WACD,OAAOtjC,KAAK2iB,SAGhB2iB,IAAK,SAAU51B,GACX1P,KAAK2iB,QAAUjT,EACXjT,KAAK6G,IAAItD,KAAK2iB,QAAU3iB,KAAKd,QAAQosB,eAAe1I,kBAAoB,IACxE5iB,KAAKd,QAAQy+E,YAAc39E,KAAKd,QAAQy+E,YAAct5C,aAAWu5C,gBACjE59E,KAAK4nE,UAAW,GAEpB5nE,KAAKd,QAAQosB,eAAe1I,iBAAmBlT,GAEnD6zB,YAAY,EACZC,cAAc,IAElB7mB,OAAO8lB,eAAe06C,EAAgB77C,UAAW,kBAE7CgC,IAAK,WACD,OAAOtjC,KAAK6iB,SAGhByiB,IAAK,SAAU51B,GACX1P,KAAK6iB,QAAUnT,EACXjT,KAAK6G,IAAItD,KAAK6iB,QAAU7iB,KAAKd,QAAQosB,eAAexI,gBAAkB,IACtE9iB,KAAKd,QAAQy+E,YAAc39E,KAAKd,QAAQy+E,YAAct5C,aAAWw5C,gBACjE79E,KAAK4nE,UAAW,GAEpB5nE,KAAKd,QAAQosB,eAAexI,eAAiBpT,GAEjD6zB,YAAY,EACZC,cAAc,IAGlB25C,EAAgB77C,UAAUw8C,oBAAsB,SAAUn7D,EAASE,GAC/D,IAAI9mB,EAAU,EACVC,EAAU,EACV+hF,EAAa/9E,KAAKg+E,gBACtBD,EAAW/mF,GAAKgJ,KAAK0jB,YACrBq6D,EAAW9mF,GAAK+I,KAAK0jB,YACrBq6D,EAAWxlF,OAASyH,KAAK0jB,YACzBq6D,EAAWzlF,QAAU0H,KAAK0jB,YAC1B3nB,EAAUU,KAAK+I,IAAI,EAAGmd,EAAUo7D,EAAWn7E,MAC3C5G,EAAUS,KAAK+I,IAAI,EAAGqd,EAAUk7D,EAAWh7E,UAC3B9I,IAAZ0oB,QAAqC1oB,IAAZ4oB,GACzB7iB,KAAK4iB,iBAAmB7mB,EACxBiE,KAAK8iB,eAAiB9mB,EACtBgE,KAAKd,QAAQ++E,UAAUliF,EAASC,IAGhCgE,KAAKd,QAAQ++E,WAAWj+E,KAAK4iB,iBAAmBm7D,EAAW/mF,GAAIgJ,KAAK8iB,eAAiBi7D,EAAW9mF,GAEpG+I,KAAKyF,WACD8sC,GAAI91C,KAAK+I,IAAIxF,KAAK4iB,kBAAmBm7D,EAAWn7E,MAAQ5C,KAAK0jB,YAAa8uB,GAAI/1C,KAAK+I,IAAIxF,KAAK8iB,gBAAiBi7D,EAAWh7E,KAAO/C,KAAK0jB,YACpIrI,MAAOrb,KAAK0jB,cAIpBy5D,EAAgB77C,UAAU48C,gBAAkB,SAAUv7D,EAASE,GAC3D7iB,KAAK4nE,UAAW,EAChB,IAAImW,EAAa/9E,KAAKg+E,gBACtBD,EAAW/mF,GAAKgJ,KAAK0jB,YACrBq6D,EAAW9mF,GAAK+I,KAAK0jB,YACrBq6D,EAAWxlF,OAASyH,KAAK0jB,YACzBq6D,EAAWzlF,QAAU0H,KAAK0jB,YAC1B,IAAI1sB,GAAK+mF,EAAWn7E,KAChB3L,GAAK8mF,EAAWh7E,IAChBuiC,GAAM,EACN64C,EAAYn+E,KAAKqjB,cAAgBrjB,KAAK0jB,YACtC06D,EAAap+E,KAAKojB,eAAiBpjB,KAAK0jB,YACxC26D,EAAOrnF,EAAI2rB,EACf,GAAI07D,IAASr+E,KAAK4iB,iBAAkB,CAC5B5rB,EAAIgJ,KAAK4iB,mBACL5iB,KAAK4iB,iBAAmBy7D,EACxBr+E,KAAK4iB,kBAAoBD,EAGzB3iB,KAAK4iB,iBAAmBy7D,EAE5B/4C,GAAM,GAEV,IAAIziC,EAAQpG,KAAK+I,IAAIu4E,EAAWl7E,MAAQ7C,KAAK09E,YAAaS,GAC1D,IAAK74C,GAAOziC,GAASw7E,EAAOr+E,KAAKqjB,cAAe,CAC5C,IAAIi7D,GAAeD,EAAOF,EAAYn+E,KAAK09E,YACvCa,GAAgBv+E,KAAK4iB,iBAAmBu7D,EAAYn+E,KAAK09E,YACzDY,EAAcC,EAEdv+E,KAAK4iB,iBAAmBy7D,EAGpBC,EAAcP,EAAWl7E,MAAQy7E,EAAcC,EAC/Cv+E,KAAK4iB,iBAAmBy7D,EAGxBr+E,KAAK4iB,mBAAqBm7D,EAAWl7E,MAAQ7C,KAAK09E,YAAcS,GAGxE74C,GAAM,EAELA,IACDtlC,KAAK4iB,iBAAmB5rB,EAAI2rB,GAGpC2iB,GAAM,EAEN,IAAIk5C,EAAOvnF,EAAI4rB,EACf,GAAI27D,IAASx+E,KAAK8iB,eAAgB,CAC1B7rB,EAAI+I,KAAK8iB,iBACL9iB,KAAK8iB,eAAiB07D,EACtBx+E,KAAK8iB,gBAAkBD,EAGvB7iB,KAAK8iB,eAAiB07D,EAE1Bl5C,GAAM,GAEV,IAAIxiC,EAASrG,KAAK+I,IAAIu4E,EAAWj7E,OAAS9C,KAAKy9E,YAAaW,GAC5D,IAAK94C,GAAOxiC,GAAU07E,EAAOJ,EAAY,CACrC,IAAIK,GAAgBD,EAAOJ,EAAap+E,KAAKy9E,YACzCiB,GAAiB1+E,KAAK8iB,eAAiBs7D,EAAap+E,KAAKy9E,YACzDgB,EAAeC,EAEf1+E,KAAK8iB,eAAiB07D,EAGlBC,EAAeV,EAAWj7E,OAAS27E,EAAeC,EAClD1+E,KAAK8iB,eAAiB07D,EAGtBx+E,KAAK8iB,iBAAmBi7D,EAAWj7E,OAAS9C,KAAKy9E,YAAcW,GAGvE94C,GAAM,EAELA,IACDtlC,KAAK8iB,eAAiB7rB,EAAI4rB,GAGlC7iB,KAAKyF,WACD8sC,GAAI91C,KAAK+I,IAAIxF,KAAK4iB,kBAAmBm7D,EAAWn7E,MAAQ5C,KAAK0jB,YAAa8uB,GAAI/1C,KAAK+I,IAAIxF,KAAK8iB,gBAAiBi7D,EAAWh7E,KAAO/C,KAAK0jB,YACpIrI,MAAOrb,KAAK0jB,aAEhB1jB,KAAK0hE,WAGTyb,EAAgB77C,UAAUq9C,WAAa,SAAUC,EAAOC,GAEpD,IAAK,IADD12D,KACKzxB,EAAI,EAAGA,EAAIkoF,EAAMnoF,OAAQC,IAAK,CAEnC,IAAK,IADDooF,GAAU,EACLzoF,EAAI,EAAGA,EAAIwoF,EAAMpoF,OAAQJ,IAC9B,GAAIuoF,EAAMloF,KAAOmoF,EAAMxoF,GAAI,CACvByoF,GAAU,EACV,MAGHA,GACD32D,EAAQrxB,KAAK8nF,EAAMloF,IAG3B,OAAOyxB,GAGXg1D,EAAgB77C,UAAUy9C,mBAAqB,WAK3C,IAAK,IAJDZ,EAAYn+E,KAAKqjB,cAAgBrjB,KAAK0jB,YACtC06D,EAAap+E,KAAKojB,eAAiBpjB,KAAK0jB,YACxCs7D,EAAWh/E,KAAKd,QAAQ2qE,cAAcC,YAAY,IAAIxtD,IAAMtc,KAAK4iB,iBAAmB5iB,KAAK0jB,aAAc1jB,KAAK8iB,eAAiB9iB,KAAK0jB,YAAay6D,EAAWC,IAC1Ja,KACKvoF,EAAI,EAAGA,EAAIsoF,EAASvoF,OAAQC,IACjCuoF,EAAWnoF,KAAKkoF,EAAStoF,GAAGmJ,IAEhC,IAAIq/E,EAAal/E,KAAK2+E,WAAWM,EAAYj/E,KAAKo9E,sBACT,IAArCp9E,KAAKo9E,qBAAqB3mF,SAC1BuJ,KAAKo9E,qBAAuB6B,GAEhC,IAAIE,EAAgBn/E,KAAK2+E,WAAW3+E,KAAKo9E,qBAAsB6B,GAC/Dj/E,KAAKd,QAAQkgF,qBAAqBF,GAAY,EAAOC,GACrDn/E,KAAKo9E,qBAAuB6B,GAGhC9B,EAAgB77C,UAAUogC,QAAU,WAChC,IAAIqc,EAAa/9E,KAAKg+E,gBACtBD,EAAW/mF,GAAKgJ,KAAK0jB,YACrBq6D,EAAW9mF,GAAK+I,KAAK0jB,YACrBq6D,EAAWxlF,OAASyH,KAAK0jB,YACzBq6D,EAAWzlF,QAAU0H,KAAK0jB,YAC1B,IAAI1sB,EAAIyF,KAAKqK,IAAIi3E,EAAW/mF,GAAIgJ,KAAK4iB,kBACjC3rB,EAAIwF,KAAKqK,IAAIi3E,EAAW9mF,GAAI+I,KAAK8iB,gBAGjC26D,GAFQz9E,KAAK4iB,iBAAmB5iB,KAAKqjB,cAAgB06D,EAAWl7E,MACxD7C,KAAK8iB,eAAiB9iB,KAAKojB,eAAiB26D,EAAWj7E,OACjD9C,KAAKq/E,eACnB3B,EAAc19E,KAAKq/E,eAClBr/E,KAAK8iB,gBAAkBi7D,EAAW9mF,IAAM+I,KAAK8iB,eAAiB9iB,KAAKojB,gBAAkB26D,EAAWj7E,SACjG46E,EAAc,IAEb19E,KAAK4iB,kBAAoBm7D,EAAW/mF,IAAMgJ,KAAK4iB,iBAAmB5iB,KAAKqjB,eAAiB06D,EAAWl7E,QACpG46E,EAAc,GAElBz9E,KAAKy9E,YAAcA,EACnBz9E,KAAK09E,YAAcA,EACnB,IAAI4B,EAAWt/E,KAAKu/E,aAChBC,EAAYx/E,KAAKy/E,cACrBz/E,KAAKu/E,aAAe9iF,KAAK+I,IAAIu4E,EAAWl7E,OAAQ7C,KAAK4iB,iBAAmB5iB,KAAKqjB,cAAgBq6D,GAAe1mF,EAC5GgJ,KAAKy/E,cAAgBhjF,KAAK+I,IAAIu4E,EAAWj7E,QAAS9C,KAAK8iB,eAAiB9iB,KAAKojB,eAAiBq6D,GAAexmF,EACzGqoF,IAAat/E,KAAKu/E,cAAgBC,IAAcx/E,KAAKy/E,eACrDz/E,KAAKd,QAAQwiE,QAAQ1hE,KAAKu/E,aAAcv/E,KAAKy/E,eAEjDz/E,KAAKd,QAAQ8wD,kBACbhwD,KAAKd,QAAQU,QAAQM,MAAMw/E,SAAW,UAG1CvC,EAAgB77C,UAAUkgC,gBAAkB,SAAUjpE,EAAOD,GACzD0H,KAAKqjB,cAAgB9qB,EACrByH,KAAKojB,eAAiB9qB,GAM1B6kF,EAAgB77C,UAAU08C,cAAgB,SAAUhd,EAAc38C,GAC9D,IAAIhI,EAAO,IAAIC,GACf,GACe,YAAX+H,GAA4D,OAApCrkB,KAAKd,QAAQksB,aAAa7yB,OAAuD,OAArCyH,KAAKd,QAAQksB,aAAa9yB,OAAiB,CAC/G,IAAIC,EAAQyH,KAAKd,QAAQksB,aAAa7yB,MAClCD,EAAS0H,KAAKd,QAAQksB,aAAa9yB,OACnCqnF,EAAW,EACXC,EAAY,EAChB,GAAI5/E,KAAKd,QAAQksB,aAAay0D,aAAc,CAExC,IADAxjE,EAAOrc,KAAKd,QAAQ2qE,cAAcmU,cAAc,EAAG,IAC1Cn7E,MAAQtK,EAAO,CAEpBA,GADIvB,EAAIyF,KAAKo6B,KAAKxa,EAAKxZ,MAAQtK,GAGnC,GAAI8jB,EAAKvZ,OAASxK,EAAQ,CAEtBA,GADItB,EAAIyF,KAAKo6B,KAAKxa,EAAKvZ,OAASxK,GAGpC,GAAI+jB,EAAKzZ,KAAO,GAAKnG,KAAK6G,IAAI+Y,EAAKzZ,MAAQ+8E,EAAU,CACjD,IAAI3oF,EAAIyF,KAAKo6B,KAAKp6B,KAAK6G,IAAI+Y,EAAKzZ,MAAQ5C,KAAKd,QAAQksB,aAAa7yB,OAClEonF,EAAW3/E,KAAKd,QAAQksB,aAAa7yB,MAAQvB,EAEjD,GAAIqlB,EAAKtZ,IAAM,GAAKtG,KAAK6G,IAAI+Y,EAAKtZ,KAAO68E,EAAW,CAC5C5oF,EAAIyF,KAAKo6B,KAAKp6B,KAAK6G,IAAI+Y,EAAKtZ,KAAO/C,KAAKd,QAAQksB,aAAa9yB,QACjEsnF,EAAY5/E,KAAKd,QAAQksB,aAAa9yB,OAAStB,GAGvD,OAAO,IAAIslB,IAAOqjE,GAAaC,EAAYrnF,EAAQonF,EAAUrnF,EAASsnF,GAGtE,IAAIE,EAAS9e,OAAe/mE,EAAY,EACxC,OAAO+F,KAAKd,QAAQ2qE,cAAcmU,cAAc8B,EAAQA,IAOhE3C,EAAgB77C,UAAUy+C,aAAe,SAAUhC,GAgB/C,IAfA,IAAIrnF,EAAI,EACJL,EAAI,EACJ2sD,GAAK,EACL1sD,KACAY,EAAK,EACLE,EAAK,EACLD,EAAK,EACLE,EAAK,EACLuL,EAAO5C,KAAKd,QAAQksB,aAAazoB,OAAOC,KACxCC,EAAQ7C,KAAKd,QAAQksB,aAAazoB,OAAOE,MACzCE,EAAM/C,KAAKd,QAAQksB,aAAazoB,OAAOI,IACvCD,EAAS9C,KAAKd,QAAQksB,aAAazoB,OAAOG,OAC1Ck9E,EAAa,EACbC,EAAc,EACd3lF,GAAYpD,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,GACrC0mF,EAAWxlF,MAAQ7B,IACtBA,GAASsJ,KAAKd,QAAQksB,aAAa7yB,MAAQyH,KAAKd,QAAQksB,aAAa7yB,MAAQwlF,EAAWxlF,SAC9EyH,KAAKd,QAAQksB,aAAa7yB,QAChC+B,GACIpD,GAAI6mF,EAAWn7E,KAAOA,EAAMzL,GAAI4mF,EAAWh7E,IAAMA,EACjD3L,GAAI2mF,EAAWn7E,KAAOA,EAAMvL,GAAI0mF,EAAWj7E,OAASA,GAExDxM,IAAa0sD,GAAK1oD,GAElB5D,EAAIqnF,EAAWxlF,QAKf+B,GAAYpD,GAJZA,EAAK6mF,EAAWxxE,QAAQvV,EAAIgJ,KAAKd,QAAQksB,aAAa7yB,MAAQynF,EAI1C7oF,GAHpBA,EAAK4mF,EAAWxxE,QAAQtV,EAAI8L,EAGA3L,GAF5BA,EAAK2mF,EAAW91E,WAAWjR,EAAIgJ,KAAKd,QAAQksB,aAAa7yB,MAAQynF,EAE7B3oF,GADpCA,EAAK0mF,EAAW91E,WAAWhR,EAAI6L,GAE/BxM,IAAa0sD,GAAK1oD,EAClB0lF,KAEAjC,EAAWxlF,QAAU7B,IACrB4D,GACIpD,GAAI6mF,EAAWl7E,MAAQA,EAAO1L,GAAI4mF,EAAWh7E,IAAMA,EACnD3L,GAAI2mF,EAAWl7E,MAAQA,EAAOxL,GAAI0mF,EAAWj7E,OAASA,GAE1DxM,IAAa0sD,GAAK1oD,GAG1B,KAAOyjF,EAAWzlF,OAASjC,IACvBA,GAAS2J,KAAKd,QAAQksB,aAAa9yB,OAAS0H,KAAKd,QAAQksB,aAAa9yB,OAASylF,EAAWzlF,UAChF0H,KAAKd,QAAQksB,aAAa9yB,SAChCgC,GACIpD,GAAI6mF,EAAWn7E,KAAOA,EAAMzL,GAAI4mF,EAAWh7E,IAAMA,EACjD3L,GAAI2mF,EAAWl7E,MAAQA,EAAOxL,GAAI0mF,EAAWh7E,IAAMA,GAEvDzM,IAAa0sD,GAAK1oD,GAElBjE,EAAI0nF,EAAWzlF,SAKfgC,GAAYpD,GAJZA,EAAK6mF,EAAWxxE,QAAQvV,EAAI4L,EAIRzL,GAHpBA,EAAK4mF,EAAWxxE,QAAQtV,EAAI+I,KAAKd,QAAQksB,aAAa9yB,OAAS2nF,EAGnC7oF,GAF5BA,EAAK2mF,EAAWvxE,SAASxV,EAAI6L,EAEOxL,GADpCA,EAAK0mF,EAAWvxE,SAASvV,EAAI+I,KAAKd,QAAQksB,aAAa9yB,OAAS2nF,GAEhE3pF,IAAa0sD,GAAK1oD,EAClB2lF,KAEAlC,EAAWzlF,SAAWjC,IACtBiE,GACIpD,GAAI6mF,EAAWn7E,KAAOA,EAAMzL,GAAI4mF,EAAWj7E,OAASA,EACpD1L,GAAI2mF,EAAWl7E,MAAQA,EAAOxL,GAAI0mF,EAAWj7E,OAASA,GAE1DxM,IAAa0sD,GAAK1oD,GAG1B,OAAOhE,GAGX6mF,EAAgB77C,UAAU65B,KAAO,SAAU+kB,EAAQC,EAAQC,EAAQxkB,GAC/D,G/CtKR,SAAwB7lD,GACpB,OAAOA,EAAM9C,YAAc2C,qBAAmByqE,K+CqKtCC,CAAQtgF,KAAKd,UAAuB,IAAXghF,G/ClKrC,SAAuBnqE,GACnB,OAAOA,EAAM9C,YAAc2C,qBAAmB+7C,I+CiKI4uB,CAAOvgF,KAAKd,UAAuB,IAAXghF,EAAe,CACjF,IAAIxkF,EAASL,IAKb,GAJAoC,EAAY/B,EAAQsE,KAAK0jB,YAAa1jB,KAAK0jB,aAC3C7lB,EAAgBnC,EAAQsE,KAAK4iB,iBAAkB5iB,KAAK8iB,gBACpD84C,EAAaA,IAAgB5kE,EAAGgJ,KAAKqjB,cAAgB,EAAGpsB,EAAG+I,KAAKojB,eAAiB,GACjFw4C,EAAangE,EAAuBC,EAAQkgE,GACvC57D,KAAK0jB,YAAcw8D,GAAWlgF,KAAKd,QAAQosB,eAAek1D,SAC1DxgF,KAAK0jB,YAAcw8D,GAAWlgF,KAAKd,QAAQosB,eAAem1D,QAAS,CACpEzgF,KAAK0jB,aAAew8D,EACpB,IAAInC,EAAa/9E,KAAKg+E,gBACtBD,EAAW/mF,GAAKgJ,KAAK0jB,YACrBq6D,EAAW9mF,GAAK+I,KAAK0jB,YAErB,IAAIg9D,EAAerlF,IACnBoC,EAAYijF,EAAcR,EAAQA,EAAQtkB,EAAW5kE,EAAG4kE,EAAW3kE,GACnE4G,EAAgB6iF,EAAcP,GAAU,EAAGC,GAAU,GACrDljF,EAAexB,EAAQglF,GACvB,IAAI9lF,EAAYa,EAAuBC,GAAU1E,EAAG,EAAGC,EAAG,IAC3C,IAAXipF,IACAtlF,EAAYoF,KAAK2gF,iBAAiB/lF,EAAU5D,EAAG4D,EAAU3D,IAE7D+I,KAAKyF,WACD8sC,GAAI91C,KAAK+I,IAAI5K,EAAU5D,GAAI+mF,EAAWn7E,MAAQ5C,KAAK0jB,YACnD8uB,GAAI/1C,KAAK+I,IAAI5K,EAAU3D,GAAI8mF,EAAWh7E,KAAO/C,KAAK0jB,YAClDrI,MAAOrb,KAAK0jB,aAEhB1jB,KAAK4iB,iBAAmBhoB,EAAU5D,EAClCgJ,KAAK8iB,eAAiBloB,EAAU3D,EAChC+I,KAAK0hE,UACqB,QAAtB1hE,KAAKd,QAAQ0sB,MAAkBjW,GAAa3V,KAAKd,UACjDc,KAAKd,QAAQwf,SAASqgE,qBAEA,QAAtB/+E,KAAKd,QAAQ0sB,MAAmBjW,GAAa3V,KAAKd,UAClDc,KAAKd,QAAQmuE,sBAEjBrtE,KAAKd,QAAQ++E,WAAWj+E,KAAK4iB,iBAAmBm7D,EAAW/mF,GAAIgJ,KAAK8iB,eAAiBi7D,EAAW9mF,GAChGyrB,GAAY1iB,KAAKd,YAK7Bi+E,EAAgB77C,UAAUs/C,UAAY,SAAU3oD,GAE5C,IAAIrM,GADJqM,EAAUA,OACSrM,KACfvH,EAAS4T,EAAQ5T,OACjB1hB,EAASs1B,EAAQt1B,WACjBk+E,EAAY5oD,EAAQ4oD,UACpBC,EAAe7oD,EAAQ6oD,aAC3Bn+E,EAAOG,OAASH,EAAOG,QAAU,GACjCH,EAAOI,IAAMJ,EAAOI,KAAO,GAC3BJ,EAAOC,KAAOD,EAAOC,MAAQ,GAC7BD,EAAOE,MAAQF,EAAOE,OAAS,GAC/B,IACIq9E,EADA1+E,EAASs/E,EAETX,GAAUngF,KAAK4iB,iBACfw9D,GAAUpgF,KAAK8iB,eAGnB,GAAgB,kBAFhBuB,EAASA,GAAkB,iBAEOrkB,KAAKd,QAAQksB,aAAa7yB,OAASyH,KAAKd,QAAQksB,aAAa9yB,QACvF0H,KAAKd,QAAQ8Z,MAAMviB,OAAS,GAAKuJ,KAAKd,QAAQge,WAAWzmB,OAAS,EAAI,CAC1Em1B,EAAOA,GAAc,OACN,iBAAXvH,IACA7iB,EAASxB,KAAKg+E,eAAc,EAAM35D,IAEtC,IAAIhJ,GAAUrkB,EAAG,EAAGC,EAAG,GACvBokB,EAAMrkB,GAAKgJ,KAAKqjB,eAAiB1gB,EAAOC,KAAOD,EAAOE,QAAWrB,EAAY,MAC7E6Z,EAAMpkB,GAAK+I,KAAKojB,gBAAkBzgB,EAAOI,IAAMJ,EAAOG,SAAYtB,EAAa,QAC1Eq/E,GAAer/E,EAAOjJ,MAAQyH,KAAK4iB,iBAAoB5iB,KAAKqjB,eAC5D7hB,EAAOlJ,OAAS0H,KAAK8iB,eAAkB9iB,KAAKojB,iBAC7C/H,EAAMrkB,EAAIyF,KAAKqK,IAAI,EAAGuU,EAAMrkB,GAC5BqkB,EAAMpkB,EAAIwF,KAAKqK,IAAI,EAAGuU,EAAMpkB,IAEhC,IAAI8pF,OAAa,EACb/jF,OAAU,EACVC,OAAU,EACd,OAAQ2uB,GACJ,IAAK,QAEDs0D,GADAa,EAAa1lE,EAAMrkB,GACGgJ,KAAK0jB,YAE3By8D,IADAnjF,GAAWgD,KAAKqjB,cAAiB7hB,EAAY,MAAIu/E,GAAc,EAAIv/E,EAAOxK,EAAI+pF,IACzDp+E,EAAOC,KAAOD,EAAOE,OAAS,EAAIk+E,EACvDX,IAAWpgF,KAAK8iB,eAAiBo9D,EACjCE,EAAoB,iBAAX/7D,EAA4B+7D,EAASA,EAASpgF,KAAK8iB,eAAiBo9D,EAC7E,MACJ,IAAK,SAEDA,GADAa,EAAa1lE,EAAMpkB,GACI+I,KAAK0jB,YAC5B1mB,GAAYgD,KAAKqjB,cAAiB7hB,EAAY,MAAIu/E,GAAc,EAAKv/E,EAAOxK,EAAI+pF,EAChF9jF,GAAY+C,KAAKojB,eAAkB5hB,EAAa,OAAIu/E,GAAc,EAAKv/E,EAAOvK,EAAI8pF,EAClFZ,GAAUnjF,GAAW2F,EAAOC,KAAOD,EAAOE,OAAS,EAAIk+E,EACvDX,GAAUnjF,GAAW0F,EAAOI,IAAMJ,EAAOG,QAAU,EAAIi+E,EACvD,MACJ,IAAK,OAEDb,GADAa,EAAatkF,KAAKqK,IAAIuU,EAAMrkB,EAAGqkB,EAAMpkB,IACd+I,KAAK0jB,YAC5B1mB,GAAWgD,KAAKqjB,cAAiB7hB,EAAY,MAAIu/E,GAAc,EAAIv/E,EAAOxK,EAAI+pF,EAC9E9jF,GAAW+C,KAAKojB,eAAkB5hB,EAAa,OAAIu/E,GAAc,EAAIv/E,EAAOvK,EAAI8pF,EAChFZ,GAAUnjF,GAAW2F,EAAOC,KAAOD,EAAOE,OAAS,EAAIk+E,EACvDX,GAAUnjF,GAAW0F,EAAOI,IAAMJ,EAAOG,QAAU,EAAIi+E,EAG/D/gF,KAAKm7D,KAAK+kB,EAAQC,EAAQC,GAAUppF,EAAG,EAAGC,EAAG,SAG7CipF,EAAS,EAAIlgF,KAAK0jB,YAClB1jB,KAAKm7D,KAAK+kB,EAAQC,EAAQC,GAAUppF,EAAG,EAAGC,EAAG,KAIrDkmF,EAAgB77C,UAAU0/C,cAAgB,SAAU3kE,GAChD,IAAIrlB,EAAI,EACJC,EAAI,EACJokB,EAAQrb,KAAK0jB,YACbliB,EAAS6a,EACT4kE,GAAWjhF,KAAK4iB,iBAChBs+D,GAAWlhF,KAAK8iB,eACpBthB,EAAS,IAAI8a,GAAK9a,EAAOxK,EAAIqkB,EAAO7Z,EAAOvK,EAAIokB,EAAO7Z,EAAOjJ,MAAQ8iB,EAAO7Z,EAAOlJ,OAAS+iB,GACjF,IAAIiB,GAAK2kE,EAASC,EAASlhF,KAAKqjB,cAAerjB,KAAKojB,gBACpDmB,aAAa/iB,KAChBA,EAAOqB,OAAUo+E,EAAUjhF,KAAKqjB,gBAChCrsB,EAAIwK,EAAOqB,MAAQ7C,KAAKqjB,eAExB7hB,EAAOxK,GAAKiqF,IACZjqF,EAAIwK,EAAOxK,GAEXwK,EAAOsB,QAAWo+E,EAAUlhF,KAAKojB,iBACjCnsB,EAAIuK,EAAOsB,OAAS9C,KAAKojB,gBAEzB5hB,EAAOvK,GAAKiqF,IACZjqF,EAAIuK,EAAOvK,GAEf+I,KAAKm7D,KAAK,GAAIn7D,KAAK4iB,iBAAmB5rB,GAAIgJ,KAAK8iB,eAAiB7rB,EAAG,QAI3EkmF,EAAgB77C,UAAU6/C,cAAgB,SAAU3/E,GAChD,IAAI6Z,EAAQrb,KAAK0jB,YACb09D,EAAe,IAAI9kE,GAAK9a,EAAOxK,EAAIqkB,EAAO7Z,EAAOvK,EAAIokB,EAAO7Z,EAAOjJ,MAAQ8iB,EAAO7Z,EAAOlJ,OAAS+iB,GAClG4lE,EAAUG,EAAapqF,EAAIoqF,EAAa7oF,MAAQ,EAAIyH,KAAKqjB,cAAgB,EACzE69D,EAAUE,EAAanqF,EAAImqF,EAAa9oF,OAAS,EAAI0H,KAAKojB,eAAiB,EAC/EpjB,KAAKm7D,KAAK,GAAIn7D,KAAK4iB,iBAAmBq+D,GAAUjhF,KAAK8iB,eAAiBo+D,EAAS,OAEnF/D,EAAgB77C,UAAUq/C,iBAAmB,SAAUh+D,EAASE,GAC5D,GAAgD,aAA5C7iB,KAAKd,QAAQosB,eAAe+1D,YAA4B,CACxD,IAAI7/E,OAAS,EACmC,YAA5CxB,KAAKd,QAAQosB,eAAe+1D,cAC5B7/E,EAASxB,KAAKd,QAAQosB,eAAeg2D,iBAEzC9/E,EAASA,GAAUxB,KAAKg+E,eAAc,IAC/BhnF,GAAKgJ,KAAK0jB,YACjBliB,EAAOvK,GAAK+I,KAAK0jB,YACjBliB,EAAOjJ,OAASyH,KAAK0jB,YACrBliB,EAAOlJ,QAAU0H,KAAK0jB,YACtBf,IAAY,EACZE,IAAY,EACZ,IAAI0+D,EAAe9kF,KAAK+I,IAAIhE,EAAOqB,MAAO7C,KAAKqjB,eAC/C,KAAMV,GAAWnhB,EAAOxK,IAAM2rB,EAAU3iB,KAAKqjB,eAAiB7hB,EAAOqB,OACjE8f,GAAWnhB,EAAOqB,MAAQ7C,KAAKqjB,gBAC5BV,GAAWnhB,EAAOxK,GAAM2rB,EAAU3iB,KAAKqjB,eAAiBk+D,GAE3D,GAAI5+D,GAAWnhB,EAAOxK,EAClB2rB,EAAUlmB,KAAK+I,IAAIhE,EAAOxK,EAAGyF,KAAKqK,IAAI6b,EAASA,GAAWA,EAAU3iB,KAAKqjB,cAAgBrjB,KAAK09E,YAAc6D,SAE3G,CACD,IAAIC,EAAUhgF,EAAOqB,MAAQ7C,KAAKqjB,cAClCV,EAAUlmB,KAAKqK,IAAI06E,EAAShgF,EAAOxK,GAG3C,IAAIyqF,EAAgBhlF,KAAK+I,IAAIhE,EAAOsB,OAAQ9C,KAAKojB,gBACjD,KAAMP,GAAWrhB,EAAOvK,GAAK4rB,EAAU7iB,KAAKojB,gBAAkB5hB,EAAOsB,QAC9D+f,GAAWrhB,EAAOvK,GAAK4rB,EAAU7iB,KAAKojB,gBAAkBq+D,GAE3D,GAAI5+D,GAAWrhB,EAAOvK,EAClB4rB,EAAUpmB,KAAK+I,IAAIhE,EAAOvK,EAAGwF,KAAKqK,IAAI+b,EAASA,GAAWA,EAAU7iB,KAAKojB,eAAiBpjB,KAAKy9E,YAAcgE,SAE5G,CACGD,EAAUhgF,EAAOsB,OAAS9C,KAAKojB,eACnCP,EAAUpmB,KAAKqK,IAAItF,EAAOvK,EAAGuqF,GAGrC7+D,IAAY,EACZE,IAAY,EAEhB,OAAS7rB,EAAG2rB,EAAS1rB,EAAG4rB,IAErBs6D,KCrkBPuE,GAAsB,WAEtB,SAASA,EAAK9+E,EAAMG,EAAKxK,EAAOD,EAAQqpF,GACpC3hF,KAAKmoB,WACLnoB,KAAK4C,KAAOA,EACZ5C,KAAK+C,IAAMA,EACX/C,KAAKzH,MAAQA,EACbyH,KAAK1H,OAASA,EACd0H,KAAK6pE,cAAgB8X,EAqJzB,OAlJAD,EAAKpgD,UAAUsgD,UAAY,SAAUC,EAAiBC,GAChC,MAAd9hF,KAAKiF,OAAiBjF,KAAKiF,MAAM88E,YAAYF,IAC7C7hF,KAAKiF,MAAM28E,UAAUC,EAAiBC,GAEvB,MAAf9hF,KAAKu1E,QAAkBv1E,KAAKu1E,OAAOwM,YAAYF,IAC/C7hF,KAAKu1E,OAAOqM,UAAUC,EAAiBC,GAEzB,MAAd9hF,KAAKgiF,OAAiBhiF,KAAKgiF,MAAMD,YAAYF,IAC7C7hF,KAAKgiF,MAAMJ,UAAUC,EAAiBC,GAEvB,MAAf9hF,KAAKiiF,QAAkBjiF,KAAKiiF,OAAOF,YAAYF,IAC/C7hF,KAAKiiF,OAAOL,UAAUC,EAAiBC,GAEvC9hF,KAAKmoB,QAAQ1xB,OAAS,GACtBqrF,EAAMhrF,KAAKkJ,OAGnB0hF,EAAKpgD,UAAUygD,YAAc,SAAUnvE,GACnC,QAAI5S,KAAK4C,KAAO5C,KAAKzH,MAAQqa,EAAEhQ,MAAQ5C,KAAK+C,IAAM/C,KAAK1H,OAASsa,EAAE7P,KAAO/C,KAAK4C,KAAOgQ,EAAE/P,OAAS7C,KAAK+C,IAAM6P,EAAE9P,SAMjH4+E,EAAKpgD,UAAU4gD,WAAa,WAIxB,IAHA,IAEIC,EAFAn/E,EAAS,KACTpL,EAAUoI,KAEI,MAAXpI,GAEHA,GADAuqF,EAAUvqF,EAAQwqF,QAAQp/E,IACRT,OAClBS,EAASm/E,EAAQn/E,QAAUA,EAE/B,OAAOA,GAEX0+E,EAAKpgD,UAAU8gD,QAAU,SAAUp/E,GAE/B,IAAIq/E,EAAYriF,KAAKzH,MAAQ,EACzB+pF,EAAatiF,KAAK1H,OAAS,EAC/B,GAAI+pF,GAAa,KAAQC,GAAc,IAAM,CACzC,IAAIC,EAAUviF,KAAK4C,KAAOy/E,EACtBG,EAAUxiF,KAAK+C,IAAMu/E,EACzB,GAAItiF,KAAK6pE,cAAc4Y,YAAcF,EAAS,CAC1C,GAAIviF,KAAK6pE,cAAc6Y,aAAeF,EAAS,CAC3C,IAAKxiF,KAAKiF,MAAO,EACT09E,EAAU,IAAIjB,EAAK1hF,KAAK4C,KAAM5C,KAAK+C,IAAKs/E,EAAWC,EAAYtiF,KAAK6pE,gBAChE7rD,OAAShe,KACjBA,KAAKiF,MAAQ09E,EAEjB,OAASpgF,OAAQvC,KAAKiF,OAE1B,GAAIjF,KAAK6pE,cAAc+Y,UAAYJ,EAAS,CACxC,IAAKxiF,KAAKgiF,MAAO,EACTW,EAAU,IAAIjB,EAAK1hF,KAAK4C,KAAM4/E,EAASH,EAAWC,EAAYtiF,KAAK6pE,gBAC/D7rD,OAAShe,KACjBA,KAAKgiF,MAAQW,EAEjB,OAASpgF,OAAQvC,KAAKgiF,aAGzB,GAAIhiF,KAAK6pE,cAAcgZ,WAAaN,EAAS,CAC9C,GAAIviF,KAAK6pE,cAAc6Y,aAAeF,EAAS,CAC3C,IAAKxiF,KAAKu1E,OAAQ,EACVoN,EAAU,IAAIjB,EAAKa,EAASviF,KAAK+C,IAAKs/E,EAAWC,EAAYtiF,KAAK6pE,gBAC9D7rD,OAAShe,KACjBA,KAAKu1E,OAASoN,EAElB,OAASpgF,OAAQvC,KAAKu1E,QAE1B,GAAIv1E,KAAK6pE,cAAc+Y,UAAYJ,EAAS,CACxC,IAAKxiF,KAAKiiF,OAAQ,CACd,IAAIU,GAAAA,EAAU,IAAIjB,EAAKa,EAASC,EAASH,EAAWC,EAAYtiF,KAAK6pE,gBAC7D7rD,OAAShe,KACjBA,KAAKiiF,OAASU,EAElB,OAASpgF,OAAQvC,KAAKiiF,UAMlC,OAFSjiF,KACTA,KAAKmoB,QAAQrxB,KAAKkJ,KAAK6pE,cAAcwI,YAC5BrvE,OAAQhD,OAGrB0hF,EAAKpgD,UAAUwhD,YAAc,WACzB,OAAI9iF,KAAK6pE,cAAcgZ,WAAa7iF,KAAK4C,MAAQ5C,KAAK6pE,cAAc4Y,YAAcziF,KAAK4C,KAAO5C,KAAKzH,OAC/FyH,KAAK6pE,cAAc+Y,UAAY5iF,KAAK+C,KAAO/C,KAAK6pE,cAAc6Y,aAAe1iF,KAAK+C,IAAM/C,KAAK1H,QAMrGopF,EAAKpgD,UAAUyhD,aAAe,SAAUxiF,GACpC,IAAIyiF,KACJhjF,KAAK6pE,cAAcoZ,eAAe1iF,GAElC,IADA,IAAI2iF,EAAO,MACHF,EAAaG,SAEjBD,GADAF,EAAehjF,KAAK6pE,cAAcuZ,WAAWh3D,IAAI82D,IAC7BA,KAExB,OAAOA,GAEXxB,EAAKpgD,UAAUlV,IAAM,SAAU82D,GAE3B,GADAA,EAAO,KACHljF,KAAK8iF,cAEL,OADAI,EAAOljF,KAAKkiF,cACHiB,SAAS,EAAMD,KAAMA,GAG9B,IAAIG,OAAY,EACZC,IAAkC,IAAxBtjF,KAAKmoB,QAAQ1xB,QAAiBuJ,KAAKiF,OAAUjF,KAAKu1E,QAAWv1E,KAAKgiF,OAC3EhiF,KAAKiiF,QACNsB,EAAwB,EAAbvjF,KAAKzH,MAChBirF,EAA0B,EAAdxjF,KAAK1H,OA6BrB,OA5BI0H,KAAK6pE,cAAcgZ,UAAY7iF,KAAK4C,KAChC5C,KAAK6pE,cAAc+Y,SAAW5iF,KAAK+C,KACnCsgF,EAAY,IAAI3B,EAAK1hF,KAAK4C,KAAO5C,KAAKzH,MAAOyH,KAAK+C,IAAM/C,KAAK1H,OAAQirF,EAAUC,EAAWxjF,KAAK6pE,eAC1FyZ,IACDD,EAAUpB,OAASjiF,QAIvBqjF,EAAY,IAAI3B,EAAK1hF,KAAK4C,KAAO5C,KAAKzH,MAAOyH,KAAK+C,IAAKwgF,EAAUC,EAAWxjF,KAAK6pE,eAC5EyZ,IACDD,EAAU9N,OAASv1E,OAItBA,KAAK6pE,cAAc+Y,SAAW5iF,KAAK+C,KACxCsgF,EAAY,IAAI3B,EAAK1hF,KAAK4C,KAAM5C,KAAK+C,IAAM/C,KAAK1H,OAAQirF,EAAUC,EAAWxjF,KAAK6pE,eAC7EyZ,IACDD,EAAUrB,MAAQhiF,QAItBqjF,EAAY,IAAI3B,EAAK1hF,KAAK4C,KAAM5C,KAAK+C,IAAKwgF,EAAUC,EAAWxjF,KAAK6pE,eAC/DyZ,IACDD,EAAUp+E,MAAQjF,OAG1BA,KAAKge,OAASqlE,EACdrjF,KAAK6pE,cAAcuZ,WAAaC,GACvBF,SAAS,EAAOD,KAAMA,IAIhCxB,KC5JP+B,GAA+B,WAE/B,SAASA,EAAclU,GACnBvvE,KAAK0jF,SAAW,IAChB1jF,KAAKuvE,YAAcA,EACnBvvE,KAAKojF,WAAa,IAAI1B,GAAK,EAAG,EAAmB,EAAhB1hF,KAAK0jF,SAA8B,EAAhB1jF,KAAK0jF,SAAc1jF,MACvEA,KAAK2jF,SAAWxrF,OAAO8U,UACvBjN,KAAK4jF,WAAazrF,OAAO8U,UACzBjN,KAAK6jF,QAAU1rF,OAAO8U,UACtBjN,KAAK8jF,YAAc3rF,OAAO8U,UAC1BjN,KAAK+jF,aAgVT,OA7UAN,EAAcniD,UAAU4vC,gBAAkB,SAAU3wE,GAChD,GAAIP,KAAK+jF,UAAUxjF,EAAKV,IAAK,CACzB,IAAIqjF,EAAOljF,KAAK+jF,UAAUxjF,EAAKV,IAC3B6f,EAAQ1f,KAAKgkF,YAAYd,EAAK/6D,QAAS5nB,IAC5B,IAAXmf,IACAwjE,EAAK/6D,QAAQhiB,OAAOuZ,EAAO,GAC3B1f,KAAKoL,OAAO83E,UACLljF,KAAK+jF,UAAUxjF,EAAKV,OAIvC4jF,EAAcniD,UAAUl2B,OAAS,SAAU83E,GACvC,GAAIA,EAAKllE,QAAkC,IAAxBklE,EAAK/6D,QAAQ1xB,QAAgBysF,EAAKj+E,OAASi+E,EAAK3N,QAAU2N,EAAKlB,OAASkB,EAAKjB,OAAhG,CACI,IAAIlnE,EAAWmoE,EAAKllE,OAChBjD,EAAS9V,QAAUi+E,EACnBnoE,EAAS9V,MAAQ,KAEZ8V,EAASw6D,SAAW2N,EACzBnoE,EAASw6D,OAAS,KAEbx6D,EAASinE,QAAUkB,EACxBnoE,EAASinE,MAAQ,KAEZjnE,EAASknE,SAAWiB,IACzBnoE,EAASknE,OAAS,MAEtBjiF,KAAKoL,OAAO83E,EAAKllE,aAGbklE,IAASljF,KAAKojF,YAAeF,EAAKj+E,OAAUi+E,EAAK3N,QAAW2N,EAAKlB,OAAUkB,EAAKjB,SAChFiB,EAAKtgF,KAAO,EACZsgF,EAAK3qF,MAAQ,IACb2qF,EAAKngF,IAAM,EACXmgF,EAAK5qF,OAAS,MAK1BmrF,EAAcniD,UAAUyhD,aAAe,SAAUxiF,GAC7C,IAAI2iF,EAAOljF,KAAKojF,WAAWL,aAAaxiF,GACxCP,KAAK+jF,UAAUxjF,EAAKV,IAAMqjF,GAG9BO,EAAcniD,UAAU0iD,YAAc,SAAU77D,EAAS5nB,GACrD,IAAK,IAAI7J,EAAI,EAAGA,EAAIyxB,EAAQ1xB,OAAQC,IAChC,GAAKyxB,EAAQzxB,GAAImJ,KAAOU,EAAKV,GACzB,OAAOnJ,EAGf,OAAQ,GAGZ+sF,EAAcniD,UAAU2iD,WAAa,SAAU1jF,GAC3CP,KAAKijF,eAAe1iF,GACpB,IAAI2jF,EAAY3jF,EAAK4L,YACrB,GAAOyC,MAAMs1E,EAAUltF,IAAO4X,MAAMs1E,EAAUjtF,IACzC2X,MAAMs1E,EAAU3rF,QAAWqW,MAAMs1E,EAAU5rF,QAC5C,OAAO,EAGX,GAAI0H,KAAK+jF,UAAUxjF,EAAKV,IAAK,CACdG,KAAK+jF,UAAUxjF,EAAKV,IACrBijF,gBACN9iF,KAAKkxE,gBAAgB3wE,GACrBP,KAAK+iF,aAAaxiF,SAItBP,KAAK+iF,aAAaxiF,GAEtB,IAAIP,KAAKmkF,mBAAmBD,IACxBlkF,KAAKokF,cAAgB7jF,GACrBP,KAAKqkF,aAAe9jF,GACpBP,KAAKskF,eAAiB/jF,GACtBP,KAAKukF,gBAAkBhkF,EAGtB,CACD,IAAIikF,GAAW,EAiDf,OAhDIxkF,KAAK2jF,WAAa3jF,KAAK6iF,WAAatiF,IAASP,KAAKokF,cAC9CpkF,KAAK2jF,UAAY3jF,KAAK6iF,WACtB7iF,KAAK2jF,SAAW3jF,KAAK6iF,UACrB7iF,KAAKokF,YAAc7jF,EACnBikF,GAAW,GAENjkF,IAASP,KAAKokF,cACnBpkF,KAAK2jF,SAAWxrF,OAAO8U,UACvBjN,KAAKykF,SAASzkF,KAAKojF,YACnBoB,GAAW,IAGfxkF,KAAK6jF,UAAY7jF,KAAK4iF,UAAYriF,IAASP,KAAKqkF,aAC5CrkF,KAAK6jF,SAAW7jF,KAAK4iF,UACrB5iF,KAAK6jF,QAAU7jF,KAAK4iF,SACpB5iF,KAAKqkF,WAAa9jF,EAClBikF,GAAW,GAENjkF,IAASP,KAAKqkF,aACnBrkF,KAAK6jF,QAAU1rF,OAAO8U,UACtBjN,KAAK0kF,QAAQ1kF,KAAKojF,YAClBoB,GAAW,IAGfxkF,KAAK8jF,aAAe9jF,KAAK0iF,aAAeniF,IAASP,KAAKukF,gBAClDvkF,KAAK8jF,YAAc9jF,KAAK0iF,aACxB8B,GAAW,EACXxkF,KAAK8jF,WAAa9jF,KAAK0iF,YACvB1iF,KAAKukF,cAAgBhkF,GAEhBA,IAASP,KAAKukF,gBACnBvkF,KAAK8jF,YAAc3rF,OAAO8U,UAC1BjN,KAAK2kF,WAAW3kF,KAAKojF,YACrBoB,GAAW,IAGfxkF,KAAK4jF,YAAc5jF,KAAKyiF,YAAcliF,IAASP,KAAKskF,eAChDtkF,KAAK4jF,WAAa5jF,KAAKyiF,YACvBziF,KAAK4jF,UAAY5jF,KAAKyiF,WACtBziF,KAAKskF,aAAe/jF,EACpBikF,GAAW,GAENjkF,IAASP,KAAKskF,eACnBtkF,KAAK4jF,WAAazrF,OAAO8U,UACzBjN,KAAK4kF,UAAU5kF,KAAKojF,YACpBoB,GAAW,IAGZA,EAGX,OADAxkF,KAAKijF,eAAe,OACb,GAEXQ,EAAcniD,UAAU6iD,mBAAqB,SAAU5jF,GACnD,OAAIA,EAAKqC,MAAQ5C,KAAK2jF,UAAYpjF,EAAKsC,OAAS7C,KAAK4jF,WAAarjF,EAAKwC,KAAO/C,KAAK6jF,SAC5EtjF,EAAKuC,QAAU9C,KAAK8jF,YAQ/BL,EAAcniD,UAAUsgD,UAAY,SAAUv9D,GAC1C,IAAIy9D,KAEJ,OADA9hF,KAAKojF,WAAWxB,UAAUv9D,EAAQy9D,GAC3BA,GAGX2B,EAAcniD,UAAUwoC,YAAc,SAAUzlD,GAG5C,IAAK,IADD8D,KACKtrB,EAAK,EAAGgoF,EAFL7kF,KAAK4hF,UAAUv9D,GAEOxnB,EAAKgoF,EAAQpuF,OAAQoG,IAEnD,IAAK,IAAI6f,EAAK,EAAG8O,EADNq5D,EAAQhoF,GACQsrB,QAASzL,EAAK8O,EAAG/0B,OAAQimB,IAAM,CACtD,IAAIniB,EAAMixB,EAAG9O,GACTniB,EAAI4R,YAAY03B,WAAWxf,IAC3B8D,EAAQrxB,KAAKkJ,KAAKuvE,YAAYh1E,EAAIsF,KAI9C,OAAOsoB,GAGXs7D,EAAcniD,UAAUmE,aAAe,SAAUllC,GAC7C,IAAIikF,GAAW,EAyBf,OAxBIjkF,IAASP,KAAKqkF,aACdrkF,KAAK6jF,QAAU1rF,OAAO8U,UACtBjN,KAAKqkF,WAAa,KAClBrkF,KAAK0kF,QAAQ1kF,KAAKojF,YAClBoB,GAAW,GAEXjkF,IAASP,KAAKokF,cACdpkF,KAAK2jF,SAAWxrF,OAAO8U,UACvBjN,KAAKokF,YAAc,KACnBpkF,KAAKykF,SAASzkF,KAAKojF,YACnBoB,GAAW,GAEXjkF,IAASP,KAAKskF,eACdtkF,KAAK4jF,WAAazrF,OAAO8U,UACzBjN,KAAKskF,aAAe,KACpBtkF,KAAK4kF,UAAU5kF,KAAKojF,YACpBoB,GAAW,GAEXjkF,IAASP,KAAKukF,gBACdvkF,KAAK8jF,YAAc3rF,OAAO8U,UAC1BjN,KAAKukF,cAAgB,KACrBvkF,KAAK2kF,WAAW3kF,KAAKojF,YACrBoB,GAAW,GAERA,GAEXf,EAAcniD,UAAUqjD,WAAa,SAAUzB,GAGnCA,EAAKlB,OAASkB,EAAKjB,QACfiB,EAAKlB,OACLhiF,KAAK2kF,WAAWzB,EAAKlB,OAErBkB,EAAKjB,QACLjiF,KAAK2kF,WAAWzB,EAAKjB,UAIrBiB,EAAK3N,QACLv1E,KAAK2kF,WAAWzB,EAAK3N,QAErB2N,EAAKj+E,OACLjF,KAAK2kF,WAAWzB,EAAKj+E,QAIjC,IAAK,IAAIpI,EAAK,EAAG6f,EAAKwmE,EAAK/6D,QAAStrB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtD,IAAI0D,EAAOmc,EAAG7f,GACVmD,KAAK8jF,YAAcvjF,EAAK4L,YAAYrJ,SACpC9C,KAAK8jF,WAAavjF,EAAK4L,YAAYrJ,OACnC9C,KAAKukF,cAAgBhkF,KAIjCkjF,EAAcniD,UAAUsjD,UAAY,SAAU1B,GAGlCA,EAAK3N,QAAU2N,EAAKjB,QAChBiB,EAAK3N,QACLv1E,KAAK4kF,UAAU1B,EAAK3N,QAEpB2N,EAAKjB,QACLjiF,KAAK4kF,UAAU1B,EAAKjB,UAIpBiB,EAAKj+E,OACLjF,KAAK4kF,UAAU1B,EAAKj+E,OAEpBi+E,EAAKlB,OACLhiF,KAAK4kF,UAAU1B,EAAKlB,QAIhC,IAAK,IAAInlF,EAAK,EAAG6f,EAAKwmE,EAAK/6D,QAAStrB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtD,IAAI0D,EAAOmc,EAAG7f,GACVmD,KAAK4jF,WAAarjF,EAAK4L,YAAYtJ,QACnC7C,KAAK4jF,UAAYrjF,EAAK4L,YAAYtJ,MAClC7C,KAAKskF,aAAe/jF,KAIhCkjF,EAAcniD,UAAUmjD,SAAW,SAAUvB,GAGjCA,EAAKj+E,OAASi+E,EAAKlB,OACfkB,EAAKj+E,OACLjF,KAAKykF,SAASvB,EAAKj+E,OAEnBi+E,EAAKlB,OACLhiF,KAAKykF,SAASvB,EAAKlB,SAInBkB,EAAK3N,QACLv1E,KAAKykF,SAASvB,EAAK3N,QAEnB2N,EAAKjB,QACLjiF,KAAKykF,SAASvB,EAAKjB,SAI/B,IAAK,IAAIplF,EAAK,EAAG6f,EAAKwmE,EAAK/6D,QAAStrB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtD,IAAI0D,EAAOmc,EAAG7f,GACVmD,KAAK2jF,UAAYpjF,EAAK4L,YAAYvJ,OAClC5C,KAAK2jF,SAAWpjF,EAAK4L,YAAYvJ,KACjC5C,KAAKokF,YAAc7jF,KAI/BkjF,EAAcniD,UAAUojD,QAAU,SAAUxB,GAGhCA,EAAKj+E,OAASi+E,EAAK3N,QACf2N,EAAKj+E,OACLjF,KAAK0kF,QAAQxB,EAAKj+E,OAElBi+E,EAAK3N,QACLv1E,KAAK0kF,QAAQxB,EAAK3N,UAIlB2N,EAAKlB,OACLhiF,KAAK0kF,QAAQxB,EAAKlB,OAElBkB,EAAKjB,QACLjiF,KAAK0kF,QAAQxB,EAAKjB,SAI9B,IAAK,IAAIplF,EAAK,EAAG6f,EAAKwmE,EAAK/6D,QAAStrB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtD,IAAI0D,EAAOmc,EAAG7f,GACVmD,KAAK6jF,SAAWtjF,EAAK4L,YAAYpJ,MACjC/C,KAAK6jF,QAAUtjF,EAAK4L,YAAYpJ,IAChC/C,KAAKqkF,WAAa9jF,KAK9BkjF,EAAcniD,UAAU2hD,eAAiB,SAAU1iF,GAE/C,GADAP,KAAKqyE,UAAY9xE,EACbA,EAAM,CACN,IAAI6M,EAAI7M,EAAK4L,YACbnM,KAAK6iF,UAAY1qF,OAAOiV,EAAExK,MAC1B5C,KAAK4iF,SAAWzqF,OAAOiV,EAAErK,KACzB/C,KAAKyiF,WAAatqF,OAAOiV,EAAEvK,OAC3B7C,KAAK0iF,YAAcvqF,OAAOiV,EAAEtK,aAG5B9C,KAAK6iF,UAAY1qF,OAAO8U,UACxBjN,KAAK4iF,SAAWzqF,OAAO8U,UACvBjN,KAAKyiF,YAActqF,OAAO8U,UAC1BjN,KAAK0iF,aAAevqF,OAAO8U,WAInCw2E,EAAcniD,UAAU08C,cAAgB,SAAU8G,EAASC,GACvD,GAAI/kF,KAAK2jF,WAAaxrF,OAAO8U,UACzB,OAAO,IAAIqP,GAAK,EAAG,EAAG,EAAG,GAE7B,IAAI1Z,OAAmB3I,IAAZ6qF,EAAwBroF,KAAKqK,IAAI9G,KAAK2jF,SAAU,GAAK3jF,KAAK2jF,SACjE5gF,OAAkB9I,IAAZ8qF,EAAwBtoF,KAAKqK,IAAI9G,KAAK6jF,QAAS,GAAK7jF,KAAK6jF,QACnE,OAAO,IAAIvnE,GAAK7f,KAAKC,MAAMkG,GAAOnG,KAAKC,MAAMqG,GAAMtG,KAAKC,MAAMsD,KAAK4jF,UAAYhhF,GAAOnG,KAAKC,MAAMsD,KAAK8jF,WAAa/gF,KAGvH0gF,EAAcniD,UAAU8gD,QAAU,SAAU7hF,GACxC,OAAOP,KAAK+jF,UAAUxjF,EAAKV,KAExB4jF,KC/VPhiD,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAM5D43E,GAA4B,SAAUtiD,GAEtC,SAASsiD,IACL,OAAkB,OAAXtiD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAQ/D,OAVAyhC,GAAUujD,EAAYtiD,GAItBT,IACImB,cACD4hD,EAAW1jD,UAAW,WAAO,GAChCW,IACImB,cACD4hD,EAAW1jD,UAAW,oBAAgB,GAClC0jD,GACT3hD,iBAKE4hD,GAAyB,SAAUviD,GAEnC,SAASuiD,IACL,OAAkB,OAAXviD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAiB/D,OAnBAyhC,GAAUwjD,EAASviD,GAInBT,IACImB,WAAS,KACV6hD,EAAQ3jD,UAAW,YAAQ,GAC9BW,IACImB,cACD6hD,EAAQ3jD,UAAW,kBAAc,GACpCW,IACImB,cACD6hD,EAAQ3jD,UAAW,eAAW,GACjCW,IACI8H,aAAYi7C,KACbC,EAAQ3jD,UAAW,eAAW,GACjCW,IACImB,WAAS,KACV6hD,EAAQ3jD,UAAW,iBAAa,GAC5B2jD,GACT5hD,iBAKE6hD,GAAgC,SAAUxiD,GAE1C,SAASwiD,IACL,OAAkB,OAAXxiD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAK/D,OAPAyhC,GAAUyjD,EAAgBxiD,GAI1BT,IACIgE,gBAAeg/C,KAChBC,EAAe5jD,UAAW,gBAAY,GAClC4jD,GACT7hD,iBAKE8hD,GAAqC,SAAUziD,GAE/C,SAASyiD,IACL,OAAkB,OAAXziD,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAU0jD,EAAqBziD,GAI/BT,IACImB,cACD+hD,EAAoB7jD,UAAW,YAAQ,GAC1CW,IACImB,cACD+hD,EAAoB7jD,UAAW,0BAAsB,GACxDW,IACImB,cACD+hD,EAAoB7jD,UAAW,aAAS,GACpC6jD,GACT9hD,iBC/FE5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAqE5D8e,GAAyB,SAAUwW,GAKnC,SAASxW,EAAQ+L,EAASr4B,GACtB,IAAIymC,EAAQ3D,EAAO0E,KAAKpnC,KAAMi4B,EAASr4B,IAAYI,KAEnDqmC,EAAMwqC,kBAENxqC,EAAM++C,cAEN/+C,EAAMsiC,aAAgB9oE,GAAI,GAAIgb,SAAU,GAAIwqE,SAAS,GAErDh/C,EAAMo9B,aAAc,EAEpBp9B,EAAM2/B,gBAAiB,EAEvB3/B,EAAMq0C,oBAAqB,EAE3Br0C,EAAMs0C,yBAA0B,EAEhCt0C,EAAMi/C,2BAENj/C,EAAM28B,qBAAsB,EAC5B38B,EAAMk/C,mBAENl/C,EAAMrpB,gBAAmBC,kBAAchjB,EAAWkjB,kBAAcljB,GAChEosC,EAAMm/C,YAAc,KAGpB,IAAK,IAFD53E,EACArN,EACK7J,EAAI,EAAGuhC,GAAWA,EAAQjf,OAAStiB,EAAIuhC,EAAQjf,MAAMviB,OAAQC,IAClEkX,EAAQqqB,EAAQjf,MAAMtiB,GACtB6J,EAAO8lC,EAAMrtB,MAAMtiB,GACfkX,EAAMgE,UAAYhE,EAAMgE,SAASnb,OAAS,IACrCmX,EAAM1N,OAAU0N,EAAM1N,MAAM+X,OAC7B1X,EAAKL,MAAM+X,KAAO,eAEjBrK,EAAM1N,OAAU0N,EAAM1N,MAAMgY,cAC7B3X,EAAKL,MAAMgY,YAAc,gBAG7BtK,EAAMxP,OAA8B,gBAArBwP,EAAMxP,MAAMvC,MAC3B8oB,GAAuB/W,EAAOrN,GAGtC,OAAO8lC,EAmgLX,OAhjLA5E,GAAUvV,EAASwW,GA+CnBxW,EAAQoV,UAAUmkD,gBAAkB,SAAUC,GAG1C,IAAK,IADDnrF,EADAjE,KAEKuG,EAAK,EAAG6f,EAAKC,OAAOC,KAAK5c,KAAK4a,WAAY/d,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACrE,IAAIqwB,EAAMxQ,EAAG7f,IACbtC,EAAMyF,KAAK4a,UAAUsS,MACRw4D,GAAenrF,aAAe6Y,KAAgBsyE,GAAenrF,aAAega,KACrFje,EAAWQ,KAAKyD,GAGxByF,KAAK2lF,aAAarvF,IAQtB41B,EAAQoV,UAAU2a,kBAAoB,SAAUC,EAASC,GAKrD,IAAK,IAHDypC,KACAC,GAAgB,EAChBC,GAAqB,EAChBjpF,EAAK,EAAG6f,EAAKC,OAAOC,KAAKs/B,GAAUr/C,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAE9D,OADW6f,EAAG7f,IAEV,IAAK,QACL,IAAK,SACDmD,KAAKJ,QAAQM,MAAM3H,MAAQyH,KAAKyhE,aAAazhE,KAAKzH,OAClDyH,KAAKJ,QAAQM,MAAM5H,OAAS0H,KAAKyhE,aAAazhE,KAAK1H,QACnD0H,KAAKoqE,aAAa7I,mBAAmBvhE,KAAKJ,SAC1C,IAAK,IAAI4rB,EAAK,EAAGC,EAAKzrB,KAAKgsB,MAAOR,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACpD,IAAIu6D,EAAOt6D,EAAGD,GACVpb,EAAOpQ,KAAKgsB,MAAM+5D,GAChB31E,aAAgB8b,GAClB9b,EAAK41E,WAAW51E,GAGxB,MACJ,IAAK,QACD,GAAI8rC,EAAQljC,MAAMviB,OAAS,GAA8B,IAAzB0lD,EAAQnjC,MAAMviB,OAC1CuJ,KAAKylF,kBACLK,GAAqB,MAEpB,CACD,IAAK,IAAIjwC,EAAK,EAAGC,EAAKn5B,OAAOC,KAAKs/B,EAAQljC,OAAQ68B,EAAKC,EAAGr/C,OAAQo/C,IAAM,CACpE,IAAI3oB,EAAM4oB,EAAGD,GACTn2B,EAAQvnB,OAAO+0B,GACf/P,EAAend,KAAKgZ,MAAM0G,GAC1BumE,EAAc/pC,EAAQljC,MAAM0G,GAChCmmE,EAAgBA,QAAmD5rF,IAAlCgsF,EAAYC,kBAC7ClmF,KAAK0d,mBAAmBP,EAAcg/B,EAAQnjC,MAAM0G,GAAQumE,OAAahsF,GAAW,GACpF2rF,EAAY9uF,KAAKqmB,GAEH,WAAdnd,KAAK4rB,MACL5rB,KAAKqtE,sBAGb,MACJ,IAAK,aAED,GAAInxB,EAAQh/B,WAAWzmB,OAAS,GAAmC,IAA9B0lD,EAAQj/B,WAAWzmB,OACpDuJ,KAAKylF,iBAAgB,GACrBK,GAAqB,MAEpB,CACD,IAAK,IAAI9vC,EAAK,EAAGC,EAAKt5B,OAAOC,KAAKs/B,EAAQh/B,YAAa84B,EAAKC,EAAGx/C,OAAQu/C,IAAM,CACrE9oB,EAAM+oB,EAAGD,GACTt2B,EAAQvnB,OAAO+0B,GACf/P,EAAend,KAAKkd,WAAWwC,GAC/BumE,EAAc/pC,EAAQh/B,WAAWwC,GACrC1f,KAAK6rE,wBAAwB1uD,EAAcg/B,EAAQj/B,WAAWwC,GAAQumE,GAAa,GACnFL,EAAY9uF,KAAKqmB,GACbA,GAAgBA,EAAatC,UAAiE,kBAArD7a,KAAK4a,UAAUuC,EAAatC,UAAUzc,MAAMvC,MACrFmE,KAAKwpE,qBAAqBxpE,KAAK4a,UAAUuC,EAAatC,WAAasC,GAG3End,KAAKmmF,iBACa,WAAdnmF,KAAK4rB,MACL5rB,KAAKqtE,sBAGb,MACJ,IAAK,kBACDrtE,KAAKmmF,iBACa,WAAdnmF,KAAK4rB,MACL5rB,KAAKqtE,sBAET,MACJ,IAAK,kBACDrtE,KAAKomF,uBACL,MACJ,IAAK,eACDpmF,KAAKqmF,mBACLrmF,KAAKsmF,aACL,MACJ,IAAK,gBACD,GAAIpqC,EAAQ9+B,cAAcohB,aAAex+B,KAAKod,cAActP,SAAW9N,KAAKod,cAAcohB,aAClFx+B,KAAKod,cAAcohB,YAAY/nC,OAAS,EAAG,CAC3CuJ,KAAKylE,gBAAe,GACpB,MAGR,GAAIvpB,EAAQ9+B,cAAcnK,YAAa,CACnCjT,KAAKylE,gBAAe,GACpB,MAEJ,MACJ,IAAK,eACDzlE,KAAKumF,mBAAmBrqC,GACxB,MACJ,IAAK,iBACDl8C,KAAKwmF,eACL,MACJ,IAAK,SACDX,GAAgB,EAChB,MACJ,IAAK,qBACD7lF,KAAK4pB,QACL5pB,KAAKymF,cACLZ,GAAgB,EAChB,MACJ,IAAK,UACD5mF,EAAYe,MACZ,MACJ,IAAK,gBACDA,KAAK0mF,oBAAoBxqC,GACzB,MACJ,IAAK,SACDl8C,KAAK2mF,YAAYzqC,GACjB,MACJ,IAAK,iBACDl8C,KAAK4mF,qBAAqB1qC,GAC1B,MACJ,IAAK,SACDl8C,KAAK29E,aAAet5C,aAAWwiD,gBAC/BnkD,EAAOpB,UAAUrV,QAAQmb,KAAKpnC,MAC9BA,KAAK29E,cAAgBt5C,aAAWwiD,gBAChC,MACJ,IAAK,sBAOD,QANuD5sF,IAAnDiiD,EAAQhxB,oBAAoB47D,qBAC5B9mF,KAAKkrB,oBAAoB47D,mBAAqB5qC,EAAQhxB,oBAAoB47D,yBAErC7sF,IAArCiiD,EAAQhxB,oBAAoB67D,OAC5B/mF,KAAKkrB,oBAAoB67D,KAAO7qC,EAAQhxB,oBAAoB67D,MAE5D7qC,EAAQhxB,oBAAoB87D,MAE5B,IAAK,IADDA,EAAQ9qC,EAAQhxB,oBAAoB87D,MAC/BC,EAAK,EAAGC,EAAKvqE,OAAOC,KAAKoqE,GAAQC,EAAKC,EAAGzwF,OAAQwwF,IAAM,CACxD/5D,EAAMg6D,EAAGD,GACTvnE,EAAQvnB,OAAO+0B,GACnBltB,KAAKkrB,oBAAoB87D,MAAMtnE,GAASsnE,EAAMtnE,KAM9DmmE,GACA7lF,KAAK46E,WAET,IAAI76E,GAASH,QAASgmF,EAAavU,MAAOrxE,KAAKkX,eAAgBk/C,SAAUja,EAASka,SAAUna,GAE5F,GADAl8C,KAAKy2D,aAAanyB,eAAa6iD,eAAgBpnF,IAC1C+lF,GAAuB9lF,KAAKonF,gBAAoBpnF,KAAKqnF,aAAanrC,EAASC,GAAW,CACvF,IAAItgC,GAAUhgB,KAAM,kBAAmBkgB,WAAYogC,EAASngC,WAAYkgC,EAASpgC,SAAU,YAC3F9b,KAAKic,gBAAgBJ,GAEzB7b,KAAKsnF,sBACDxB,IACA9lF,KAAKymF,aAAY,GACjBzmF,KAAKqtE,wBAIbnhD,EAAQoV,UAAUilD,mBAAqB,SAAUrqC,SACJjiD,IAArCiiD,EAAQrwB,aAAa5Y,aAA6BipC,EAAQrwB,aAAa2hC,qBACvEtR,EAAQrwB,aAAa6hC,oBACrB1tD,KAAKye,gBAAgB8vC,WAAWvuD,KAAK6rB,aAAcwN,GAAgBr5B,KAAKJ,QAAQC,IAAKG,KAAK0e,SAASjZ,UAAWzF,KAAKiiB,cAAejiB,KAAKuiB,OAAQviB,KAAKwiB,SAG5J0J,EAAQoV,UAAUolD,oBAAsB,SAAUxqC,QACJjiD,IAAtCiiD,EAAQj6B,cAAcsrC,aACtBvtD,KAAKye,gBAAgB8vC,WAAWvuD,KAAK6rB,aAAcwN,GAAgBr5B,KAAKJ,QAAQC,IAAKG,KAAK0e,SAASjZ,UAAWzF,KAAKiiB,cAAejiB,KAAKuiB,OAAQviB,KAAKwiB,aAE/GvoB,IAArCiiD,EAAQj6B,cAAcc,YACtB/iB,KAAKomF,uBACLpmF,KAAK0e,SAASgjD,UACd1hE,KAAKunF,qBAE0CttF,IAA1CiiD,EAAQj6B,cAAcC,sBACajoB,IAAxCiiD,EAAQj6B,cAAcE,qBACkCloB,IAApDiiD,EAAQj6B,cAAcC,gBAAgBiB,gBACYlpB,IAAlDiiD,EAAQj6B,cAAcE,cAAcgB,WACpCF,GAAoBjjB,MACpBA,KAAKomF,uBACLpmF,KAAK0e,SAASgjD,UACd1hE,KAAKunF,gBAGL7kE,GAAY1iB,OAGpBA,KAAKye,gBAAgB8vC,WAAWvuD,KAAK6rB,aAAcwN,GAAgBr5B,KAAKJ,QAAQC,IAAKG,KAAK0e,SAASjZ,UAAWzF,KAAKiiB,cAAejiB,KAAKuiB,OAAQviB,KAAKwiB,SAMxJ0J,EAAQoV,UAAUya,eAAiB,WAE/B,OAAO/7C,KAAKg8C,cADK,YAMrB9vB,EAAQoV,UAAUga,UAAY,WAC1Bt7C,KAAKwnF,6BACLxnF,KAAKynF,qBAAsB,EAC3BznF,KAAK0nF,eAAiB,IAAIl3B,GAC1BxwD,KAAK2nF,qBACL3nF,KAAK4nF,aAED1yD,OAAqB,iBACrBA,OAAqB,eAAI,MAE7Bl1B,KAAK6nF,cACL7nF,KAAK8nF,YACL9nF,KAAKu7C,eACLv7C,KAAKw7C,aACLx7C,KAAKJ,QAAQusB,UAAUC,IAAI,cAE/BF,EAAQoV,UAAUkmD,2BAA6B,WAC3CxnF,KAAK+nF,eACDC,KAAM,OACNC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,UAAW,aACXC,SAAU,WACVxZ,MAAO,QACPyZ,QAAS,WACTC,MAAO,QACPC,aAAc,iBACdC,YAAa,eACbC,WAAY,eACZC,aAAc,iBAElB5oF,KAAK6oF,aAAe,EACpB7oF,KAAKutE,oBACLvtE,KAAK4a,aACL5a,KAAK8oF,aACL9oF,KAAKolF,cACLplF,KAAKnI,YACAmI,KAAK8rB,YACN9rB,KAAKgsB,UAEThsB,KAAKif,eAAiB,IAAIyrD,GAAe1qE,MACzCA,KAAKoqE,aAAe,IAAIjK,GAAoBngE,KAAMA,KAAKif,gBACvDjf,KAAK6pE,cAAgB,IAAI4Z,GAAczjF,KAAK4a,WAC5C5a,KAAK0e,SAAW,IAAIy+D,GAAgBn9E,OAExCksB,EAAQoV,UAAUqmD,mBAAqB,WACnC3nF,KAAK0nF,eAAeh3B,SAAS,eAAgB1wD,KAAK+oF,UAAY,IAAIC,OAAKhpF,KAAK27C,gBAAiB37C,KAAK+nF,cAAe/nF,KAAKipF,UAK1H/8D,EAAQoV,UAAUsmD,WAAa,WAC3B5nF,KAAK+oF,UAAY,IAAIC,OAAKhpF,KAAK27C,gBAAiB37C,KAAK+nF,cAAe/nF,KAAKipF,SAK7E/8D,EAAQoV,UAAUma,OAAS,WACvB,IAAIytC,KACAlpF,KAAK+pB,mBAAmBo/D,WAAWC,MACnCppF,KAAKqpF,oBAETrpF,KAAKspF,cACLtpF,KAAKye,gBAAkB,IAAIuqC,GAAgBhpD,KAAKJ,QAAQC,GAAI,IAAIomD,GAA6B,QAAdjmD,KAAK4rB,MACpF5rB,KAAKupF,aACLvpF,KAAKwpF,0BACLxpF,KAAKye,gBAAgB6qC,YACrBtpD,KAAKymF,aAAY,GACjBzmF,KAAK46E,WACL56E,KAAKqmF,mBACLrmF,KAAKypF,mBACLzpF,KAAKye,gBAAgBouC,mBAAmB7sD,KAAK6rB,aAAcwN,GAAgBr5B,KAAKJ,QAAQC,IAAKG,KAAK0e,SAASjZ,UAAWzF,KAAKiiB,cAAejiB,KAAKuiB,OAAQviB,KAAKwiB,QAC5JxiB,KAAKif,eAAeg1D,sBAIpBj0E,KAAK67C,OAAO,mBAIZ77C,KAAK43C,QAAQ,QACb53C,KAAK0e,SAASgjD,UACd1hE,KAAK0e,SAASo/D,sBACd99E,KAAKqtE,uBACDrtE,KAAKsrB,eAAexI,eAAiB,GAAK9iB,KAAKsrB,eAAe1I,iBAAmB,IACjF5iB,KAAK6nE,qBAKLhyC,UAAQ6zD,WACR1pF,KAAKgW,KAAOC,eAAaG,QAAUH,eAAaC,cAEpDlW,KAAK67C,OAAO,kBACZ77C,KAAKynF,qBAAsB,EAC3BznF,KAAKQ,cAAgBvB,EAAYe,MACjCA,KAAKkX,eAAiBC,gBAAcwyE,OAEpC,IAAK,IADD3wE,EAAQhZ,KAAKgZ,MACRtiB,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IACzBsiB,EAAMtiB,GAAGyjD,YACV+uC,EAAcpyF,KAAKkiB,EAAMtiB,IAGjC,GAAIwyF,EAAczyF,OACd,IAASC,EAAIwyF,EAAczyF,OAAS,EAAGC,GAAK,EAAGA,IAC3CsJ,KAAKif,eAAek7D,WAAW+O,EAAcxyF,GAAIsJ,MAGzDA,KAAKwmF,eACLxmF,KAAK8rB,WAAY,GAErBI,EAAQoV,UAAU+nD,kBAAoB,WAClC,IAAIO,EAAU5pF,KACd,GAAI4pF,EAAQ7/D,mBAAmBo/D,WAAWC,KAAM,EACxCS,EAAW,IAAIC,OAAKF,EAAQ7/D,mBAAmBo/D,WAAWC,KAAM,OAAO,IAClEW,UAAY,SAAU3zF,GAC3BwzF,EAAQ7/D,mBAAmBigE,YAAcvgE,KAAKwB,MAAM70B,GACpDwzF,EAAQ/lE,YAEZgmE,EAASI,OAAOC,OAEpB,GAAIN,EAAQ7/D,mBAAmBogE,qBAAqBhB,WAAWC,KAAM,CACjE,IAAIS,GAAAA,EAAW,IAAIC,OAAKF,EAAQ7/D,mBAAmBogE,qBAAqBhB,WAAWC,KAAM,OAAO,IACvFW,UAAY,SAAU3zF,GAC3BwzF,EAAQ7/D,mBAAmBogE,qBAAqBH,YAAcvgE,KAAKwB,MAAM70B,GACzEwzF,EAAQ/lE,YAEZgmE,EAASI,OAAOC,SAMxBh+D,EAAQoV,UAAUqa,cAAgB,WAC9B,MAAO,WAOXzvB,EAAQoV,UAAU8oD,gBAAkB,WAChC,IAAIC,KA+EJ,OA9EAA,EAAQvzF,MACJmiB,OAAQ,OACRlZ,UAEJsqF,EAAQvzF,MACJmiB,OAAQ,WACRlZ,UAEJsqF,EAAQvzF,MACJmiB,OAAQ,uBACRlZ,UAEAC,KAAKiT,YAAc2C,qBAAmByzD,UACtCghB,EAAQvzF,MACJmiB,OAAQ,WACRlZ,WAGiB,wBAArBC,KAAK0qB,OAAO7uB,MAAuD,qBAArBmE,KAAK0qB,OAAO7uB,MAC1DmE,KAAK0qB,OAAO6vD,kBACZ8P,EAAQvzF,MACJmiB,OAAQ,gBACRlZ,UAGJC,KAAK6rB,aAAa5Y,aAClBo3E,EAAQvzF,MACJmiB,OAAQ,WACRlZ,MAAOC,QAGfqqF,EAAQvzF,MACJmiB,OAAQ,iBACRlZ,MAAOC,QAEPA,KAAKkrB,oBAAoB67D,MACzBsD,EAAQvzF,MACJmiB,OAAQ,cACRlZ,MAAOC,KAAMA,KAAK0nF,kBAGD,wBAArB1nF,KAAK0qB,OAAO7uB,MAAuD,qBAArBmE,KAAK0qB,OAAO7uB,MAC1DwuF,EAAQvzF,MACJmiB,OAAQ,sBACRlZ,UAGiB,4BAArBC,KAAK0qB,OAAO7uB,MACZwuF,EAAQvzF,MACJmiB,OAAQ,0BACRlZ,UAGiB,YAArBC,KAAK0qB,OAAO7uB,MACZwuF,EAAQvzF,MACJmiB,OAAQ,eACRlZ,UAGiB,eAArBC,KAAK0qB,OAAO7uB,MACZwuF,EAAQvzF,MACJmiB,OAAQ,aACRlZ,UAGiB,sBAArBC,KAAK0qB,OAAO7uB,MACZwuF,EAAQvzF,MACJmiB,OAAQ,oBACRlZ,WAGJC,KAAK+pB,mBAAmBigE,aAAehqF,KAAK+pB,mBAAmB3zB,MAC/D4J,KAAK+pB,mBAAmBo/D,WAAWC,MAAQppF,KAAK+pB,mBAAmBogE,qBAAqBhB,WAAWC,OACnGiB,EAAQvzF,MACJmiB,OAAQ,cACRlZ,UAGDsqF,GAKXn+D,EAAQoV,UAAUsa,QAAU,WAYxB,GAXAkpB,cAAc9kE,KAAKwlF,aACnBxlF,KAAKwlF,YAAc,KACfxlF,KAAKuiB,QAAUviB,KAAKwiB,SACpBxiB,KAAKuiB,OAAOq5B,UACZ57C,KAAKwiB,OAAOo5B,WAEhB57C,KAAKQ,cAAco7C,UACnB57C,KAAKsqF,UAAU1uC,UACf57C,KAAKu7C,eACLv7C,KAAK67C,OAAO,cACZnZ,EAAOpB,UAAUsa,QAAQxU,KAAKpnC,MAC1BuhB,SAASC,eAAexhB,KAAKJ,QAAQC,IAAK,CAC1CG,KAAKJ,QAAQusB,UAAU2vB,OAAO,aAE9B,IADA,IAAIyuC,EAAiBhpE,SAASwX,uBAAuB,kBAC9CwxD,EAAe9zF,OAAS,GAC3B8zF,EAAe,GAAG/sE,WAAW8R,YAAYi7D,EAAe,IAE5D,IAAItqF,EAAUshB,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,WACpDI,GACAD,KAAKJ,QAAQ0vB,YAAYrvB,GAE7B,IAAIg1B,EAAiB,iBACjBC,OAAOD,KACPC,OAAOD,GAAgBkG,YAAc,EACK,IAAtCjG,OAAOD,GAAgBkG,aACvBjG,OAAOD,GAAgBzX,WAAW8R,YAAY4F,OAAOD,IACrDC,OAAOD,GAAkB,SAQzC/I,EAAQoV,UAAUka,WAAa,WAC3B,IAAIgvC,EAAa30D,UAAQ40D,gBACrBC,EAAY70D,UAAQ80D,cACpBC,EAAY/0D,UAAQg1D,eACpBC,EAAcj1D,UAAQk1D,UAAY,eAAiB,aACnDC,EAAgBn1D,UAAQk1D,UACxBE,EAAmC,YAAtBp1D,UAAQC,KAAKvd,KACzByyE,EAAgB,aAAe,iBAAoB,aACxDE,eAAa9+D,IAAIpsB,KAAK2gE,cAAe6pB,EAAYxqF,KAAKoqE,aAAanX,UAAWjzD,KAAKoqE,cACnF8gB,eAAa9+D,IAAIpsB,KAAK2gE,cAAeiqB,EAAW5qF,KAAKoqE,aAAa9W,UAAWtzD,KAAKoqE,cAClF8gB,eAAa9+D,IAAIpsB,KAAK2gE,cAAe+pB,EAAW1qF,KAAKoqE,aAAa7W,QAASvzD,KAAKoqE,cAChF8gB,eAAa9+D,IAAIpsB,KAAK2gE,cAAemqB,EAAa9qF,KAAKoqE,aAAaxW,WAAY5zD,KAAKoqE,cACrF8gB,eAAa9+D,IAAIpsB,KAAK2gE,cAAe,UAAW3gE,KAAKoqE,aAAalE,QAASlmE,KAAKoqE,cAChF8gB,eAAa9+D,IAAIpsB,KAAK2gE,cAAe,WAAY3gE,KAAKoqE,aAAatC,YAAa9nE,KAAKoqE,cACrF8gB,eAAa9+D,IAAIpsB,KAAK2gE,cAAe,SAAU3gE,KAAKoqE,aAAaxC,SAAU5nE,KAAKoqE,cAChF8gB,eAAa9+D,IAAIpsB,KAAK2gE,cAAesqB,EAAYjrF,KAAKoqE,aAAazW,WAAY3zD,KAAKoqE,cACpF8gB,eAAa9+D,IAAI8I,OAAQ,SAAUl1B,KAAKoqE,aAAajJ,aAAcnhE,KAAKoqE,cACxEpqE,KAAKmrF,kBAKTj/D,EAAQoV,UAAUia,aAAe,WAC7B,IAAIivC,EAAa30D,UAAQ40D,gBACrBG,EAAY/0D,UAAQg1D,eACpBC,EAAcj1D,UAAQk1D,UAAY,eAAiB,aACnDC,EAAgBn1D,UAAQk1D,UACxBE,EAAmC,YAAtBp1D,UAAQC,KAAKvd,KACzByyE,EAAgB,aAAe,iBAAoB,aACpDN,EAAY70D,UAAQ80D,cACxBO,eAAapvC,OAAO97C,KAAK2gE,cAAe6pB,EAAYxqF,KAAKoqE,aAAanX,WACtEi4B,eAAapvC,OAAO97C,KAAK2gE,cAAeiqB,EAAW5qF,KAAKoqE,aAAa9W,WACrE43B,eAAapvC,OAAO97C,KAAK2gE,cAAe+pB,EAAW1qF,KAAKoqE,aAAa7W,SACrE23B,eAAapvC,OAAO97C,KAAK2gE,cAAemqB,EAAa9qF,KAAKoqE,aAAaxW,YACvEs3B,eAAapvC,OAAO97C,KAAK2gE,cAAe,UAAW3gE,KAAKoqE,aAAalE,SACrEglB,eAAapvC,OAAO97C,KAAK2gE,cAAe,WAAY3gE,KAAKoqE,aAAatC,aACtEojB,eAAapvC,OAAO97C,KAAK2gE,cAAe,SAAU3gE,KAAKoqE,aAAaxC,UACpEsjB,eAAapvC,OAAO97C,KAAK2gE,cAAesqB,EAAYjrF,KAAKoqE,aAAazW,YACtEu3B,eAAapvC,OAAO5mB,OAAQ,SAAUl1B,KAAKoqE,aAAajJ,eAQ5Dj1C,EAAQoV,UAAUplB,OAAS,SAAUiM,EAASipD,GAC3B,MAAXjpD,GACAnoB,KAAKif,eAAeq2C,cAAcntC,EAASipD,IAMnDllD,EAAQoV,UAAU8pD,UAAY,WAC1B,IAAIhuE,KACJA,EAAgBpd,KAAKqrF,kBAAkBrrF,KAAKwtE,YAAYrlD,SACxDnoB,KAAKkc,OAAOkB,IAMhB8O,EAAQoV,UAAU+zB,SAAW,SAAU96D,GAC/BA,GAAOulC,GAAW9/B,KAAMzF,IACxByF,KAAKif,eAAeo2C,SAAS96D,IAMrC2xB,EAAQoV,UAAU3lB,eAAiB,WAC/B3b,KAAKif,eAAetD,gBAAe,IAKvCuQ,EAAQoV,UAAUgqD,eAAiB,WAC/BtrF,KAAKoqE,aAAa7I,mBAAmBvhE,KAAKJ,UAE9CssB,EAAQoV,UAAUiqD,WAAa,WAC3BvrF,KAAK+sE,OAKT7gD,EAAQoV,UAAUyrC,IAAM,WACpB/sE,KAAKif,eAAe8tD,OAKxB7gD,EAAQoV,UAAUqvC,WAAa,SAAUN,EAASx1D,GAC1C7a,KAAKm5C,YACLn5C,KAAKm5C,WAAWw3B,WAAWN,EAASx1D,EAAU7a,OAMtDksB,EAAQoV,UAAUkqD,cAAgB,SAAU3rF,GACpCG,KAAKm5C,YACLn5C,KAAKm5C,WAAWqyC,cAAc3rF,EAAIG,OAG1CksB,EAAQoV,UAAUmqD,aAAe,WAC7BzrF,KAAKsuE,SAMTpiD,EAAQoV,UAAUgtC,MAAQ,SAAU/zE,GAChCyF,KAAKif,eAAeqvD,MAAM/zE,IAK9B2xB,EAAQoV,UAAUs/C,UAAY,SAAU3oD,GACpCj4B,KAAK0e,SAASkiE,UAAU3oD,IAK5B/L,EAAQoV,UAAU0/C,cAAgB,SAAU/4D,GACxCjoB,KAAK0e,SAASsiE,cAAc/4D,IAKhCiE,EAAQoV,UAAU6/C,cAAgB,SAAUl5D,GACxCjoB,KAAK0e,SAASyiE,cAAcl5D,IAEhCiE,EAAQoV,UAAUoqD,YAAc,WAC5B1rF,KAAKuuE,QAKTriD,EAAQoV,UAAUitC,KAAO,WAErB,OADUvuE,KAAKif,eAAesvD,QAMlCriD,EAAQoV,UAAU8mB,MAAQ,WACtBpoD,KAAKif,eAAempC,SAKxBl8B,EAAQoV,UAAUytC,QAAU,WACxB/uE,KAAKif,eAAe8vD,WAKxB7iD,EAAQoV,UAAUyxC,WAAa,WAC3B/yE,KAAKif,eAAe8zD,cAMxB7mD,EAAQoV,UAAU0sC,eAAiB,SAAUN,GACzC,IAAI3F,EAAQ/nE,KAAKif,eAAes1C,SAASmZ,GACzC1tE,KAAKwtE,YAAczF,GAOvB77C,EAAQoV,UAAUgsC,SAAW,SAAUvF,EAAO8F,GAC1C7tE,KAAKif,eAAequD,SAASvF,EAAO8F,IAMxC3hD,EAAQoV,UAAUqsC,YAAc,SAAUC,GACtC5tE,KAAKif,eAAe0uD,YAAYC,IAMpC1hD,EAAQoV,UAAUwsC,YAAc,SAAU3lD,EAAS4lD,GAC/C/tE,KAAKif,eAAe6uD,YAAY3lD,EAAS4lD,IAM7C7hD,EAAQoV,UAAUmxC,kBAAoB,SAAU/E,GAC5C1tE,KAAKif,eAAewzD,kBAAkB/E,IAM1CxhD,EAAQoV,UAAUuxC,kBAAoB,SAAUnF,GAC5C1tE,KAAKif,eAAe4zD,kBAAkBnF,IAM1CxhD,EAAQoV,UAAU6sC,WAAa,SAAUT,GACrC1tE,KAAKif,eAAekvD,WAAWT,IAKnCxhD,EAAQoV,UAAU4xC,aAAe,WAC7BlzE,KAAKif,eAAei0D,gBAKxBhnD,EAAQoV,UAAUqqD,YAAc,WAC5B3rF,KAAKif,eAAew0D,eAKxBvnD,EAAQoV,UAAUyyC,aAAe,WAC7B/zE,KAAKif,eAAe80D,gBAKxB7nD,EAAQoV,UAAUsqD,UAAY,SAAUrzE,GACpC,OAAOvY,KAAK4a,UAAUrC,IAK1B2T,EAAQoV,UAAUuqD,eAAiB,WAC/B,OAAO7rF,KAAKwtE,aAEhBthD,EAAQoV,UAAUwqD,aAAe,SAAUrpF,EAAWzL,EAAGC,GAC5B,iBAAdwL,GACPzC,KAAK+rF,MAAMtpF,IASnBypB,EAAQoV,UAAUyqD,MAAQ,SAAUtpF,EAAWzL,EAAGC,GAC9C,IAAIs7C,EAAK,EACLC,EAAK,EAES,SAAd/vC,GAAsC,UAAdA,EAExB8vC,GADmC,SAAd9vC,GACM,EAAI,IAAMzL,GAAQ,GAI7Cw7C,GADmC,OAAd/vC,GACM,EAAI,IAAMxL,GAAQ,GAEjD,IAAIsD,EAAMyF,KAAKod,cACXkL,EAAatoB,KAAKod,cAActP,QAAQ8D,SAAS,GACjD0W,aAAsBoF,GACtB1tB,KAAKif,eAAe69C,UAAUviE,EAAIye,MAAM,GAAIsP,EAAYiqB,EAAIC,GAG5DxyC,KAAKmb,KAAK5gB,EAAKg4C,EAAIC,IAS3BtmB,EAAQoV,UAAUnmB,KAAO,SAAU5gB,EAAKg4C,EAAIC,GACxC,GAAIxyC,KAAKm5C,YAAe5+C,aAAega,GAAO,CAE1C,GADcvU,KAAKm5C,WAAW6yC,qBAAqBzxF,EAAKyF,KAAMuyC,EAAIC,GAE9D,OAGR,GAAIj4C,aAAekZ,GAAU,CAEzB,GADAzT,KAAK26E,yBAA0B,EAC3BpgF,EAAIye,OAASze,EAAIye,MAAMviB,OACvB,IAAK,IAAIoG,EAAK,EAAG6f,EAAKniB,EAAIye,MAAOnc,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACnD,IAAI0D,EAAOmc,EAAG7f,GACdmD,KAAKmb,KAAK5a,EAAMgyC,EAAIC,GAG5B,GAAIj4C,EAAI2iB,YAAc3iB,EAAI2iB,WAAWzmB,OACjC,IAAK,IAAI+0B,EAAK,EAAGC,EAAKlxB,EAAI2iB,WAAYsO,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACxD,IAAIyT,EAAOxT,EAAGD,GACdxrB,KAAKmb,KAAK8jB,EAAMsT,EAAIC,IACgC,IAAhDxyC,KAAKslF,wBAAwBpnE,QAAQ+gB,IACrCj/B,KAAKslF,wBAAwBxuF,KAAKmoC,GAI9Cj/B,KAAK61D,sBAGDt7D,aAAega,IACXvU,KAAKm5C,YACLn5C,KAAKm5C,WAAW6yC,qBAAqBzxF,EAAKyF,KAAMuyC,EAAIC,GAG5DxyC,KAAKif,eAAe9D,KAAK5gB,EAAKg4C,EAAIC,GAEtC,GAAIj4C,aAAekZ,GAAU,CACzBzT,KAAK26E,yBAA0B,EAC/B,IAAK,IAAI9kC,EAAK,EAAGC,EAAK91C,KAAKslF,wBAAyBzvC,EAAKC,EAAGr/C,OAAQo/C,IAAM,CACtE,IAAI34B,EAAa44B,EAAGD,GACpB71C,KAAKisF,0BAA0BjsF,KAAK4a,UAAUsC,EAAWrd,KAE7DG,KAAKslF,2BAKT,GAHMtlF,KAAKkX,eAAiBC,gBAAcC,YACtCpX,KAAK61D,iBAES,WAAd71D,KAAK4rB,KACL,IAAK,IAAIoqB,EAAK,EAAGC,EAAKj2C,KAAKgsB,MAAOgqB,EAAKC,EAAGx/C,OAAQu/C,IAAM,CACpD,IAAI5lC,EAAO6lC,EAAGD,GACV+vC,OAAO,EACXA,EAAO/lF,KAAKgsB,MAAM5b,GAClBpQ,KAAKksF,0BAA0BnG,KAW3C75D,EAAQoV,UAAUjmB,MAAQ,SAAU9gB,EAAK4oD,EAAIC,EAAI5xB,GAC7C,IAAImpC,GAA2B,EAC/B,GAAIpgE,aAAekZ,GAAU,CACzB,GAAIlZ,EAAIye,OAASze,EAAIye,MAAMviB,OACvB,IAAK,IAAIoG,EAAK,EAAG6f,EAAKniB,EAAIye,MAAOnc,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACnD,IAAI0D,EAAOmc,EAAG7f,GACd89D,EAA2B36D,KAAKif,eAAe5D,MAAM9a,EAAM4iD,EAAIC,EAAI5xB,EAAOj3B,GAGlF,GAAIA,EAAI2iB,YAAc3iB,EAAI2iB,WAAWzmB,OACjC,IAAK,IAAI+0B,EAAK,EAAGC,EAAKlxB,EAAI2iB,WAAYsO,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACxD,IAAIyT,EAAOxT,EAAGD,GACdxrB,KAAKif,eAAe5D,MAAM4jB,EAAMkkB,EAAIC,EAAI5xB,EAAOj3B,GAGvDyF,KAAK61D,sBAGL71D,KAAKif,eAAe5D,MAAM9gB,EAAK4oD,EAAIC,EAAI5xB,EAAQj3B,EAAIqX,SAAWrX,OAAMN,GAExE,OAAO0gE,GAQXzuC,EAAQoV,UAAUogB,OAAS,SAAUnnD,EAAK/C,EAAOg6B,GAC7C,IAAImpC,EACJ,GAAIpgE,EAEA,GADAi3B,EAAQA,IAAWx6B,EAAGuD,EAAIuT,QAAQ/R,QAAS9E,EAAGsD,EAAIuT,QAAQ9R,SACtDzB,aAAekZ,GAAU,CACzBlZ,EAAI8R,aAAe7U,EACnB+C,EAAIuT,QAAQzB,aAAe7U,EAC3B,IAAIgK,EAAS4mB,GAAU7tB,EAAIuT,SAE3B,KADA6sD,EAA2B36D,KAAKif,eAAe07C,8BAAyB1gE,OAAWA,EAAWuH,IAI1F,OAFAjH,EAAI8R,aAAe7U,EACnB+C,EAAIuT,QAAQzB,aAAe7U,EACpBmjE,EAEX,IAAIxyC,KAEJA,GADAA,EAAUA,EAAQgU,OAAO5hC,EAAIye,QACXmjB,OAAO5hC,EAAI2iB,YAC7Bld,KAAKif,eAAei3D,cAAc37E,EAAK4tB,EAAS3wB,EAAOg6B,QAGvDxxB,KAAKif,eAAei3D,cAAc37E,GAAMA,GAAM/C,EAAOg6B,GAG7D,OAAOmpC,GAQXzuC,EAAQoV,UAAUkzC,cAAgB,SAAUj6E,EAAKg4C,EAAIC,GACjDxyC,KAAKif,eAAeu1D,cAAcj6E,EAAKg4C,EAAIC,IAQ/CtmB,EAAQoV,UAAUmzC,cAAgB,SAAUl6E,EAAKg4C,EAAIC,GACjDxyC,KAAKif,eAAew1D,cAAcl6E,EAAKg4C,EAAIC,IAO/CtmB,EAAQoV,UAAUghC,sBAAwB,SAAUjiE,EAAUkC,GAC1D,OAAOvC,KAAKoqE,aAAa9H,sBAAsBjiE,EAAUkC,IAQ7D2pB,EAAQoV,UAAUihC,qBAAuB,SAAUp6C,EAASvJ,EAAQ8zC,GAChE,OAAO1yD,KAAKoqE,aAAa7H,qBAAqBp6C,EAASvJ,EAAQ8zC,IAQnExmC,EAAQoV,UAAUynC,2BAA6B,SAAU5gD,EAASvJ,EAAQ8zC,EAAUryD,EAAUkC,GAC1F,OAAOvC,KAAKoqE,aAAalB,qBAAqB/gD,EAASvJ,EAAQ8zC,EAAUryD,EAAUkC,IAOvF2pB,EAAQoV,UAAUsiC,sBAAwB,SAAUrpE,EAAK8F,GACrD,OAAOL,KAAKoqE,aAAaxG,sBAAsBrpE,EAAK8F,IASxD6rB,EAAQoV,UAAUuiC,mBAAqB,SAAUtpE,EAAKuT,EAASzN,EAAU2C,GACrE,OAAOhD,KAAKoqE,aAAavG,mBAAmBtpE,EAAKuT,EAASzN,EAAU2C,IAMxEkpB,EAAQoV,UAAUwiC,QAAU,SAAUllD,GAClC,IAAI5I,EACAm2E,EAAgBvoE,GAAY5jB,KAAKmsF,eACrC,OAAIA,IACAn2E,EAAOm2E,EAAcvtE,IAEV5I,EAGRhW,KAAKoqE,aAAatG,QAAQllD,IAMrCsN,EAAQoV,UAAUhB,UAAY,SAAU1hB,EAAQwtE,GAC5C,IAAI7rD,EACA8rD,EAAkBzoE,GAAY5jB,KAAKqsF,iBACvC,OAAIA,IACA9rD,EAAS8rD,EAAgBztE,EAAQwtE,IAEtB7rD,EAGRvgC,KAAKoqE,aAAa9pC,UAAU1hB,IAMvCsN,EAAQoV,UAAUgoD,YAAc,WACxBtpF,KAAKitE,gBACLjtE,KAAKitE,eAAeqc,YAAYtpF,OAOxCksB,EAAQoV,UAAUrlB,gBAAkB,SAAUJ,GAC1C,GAAI7b,KAAKitE,gBAAmBjtE,KAAKiT,YAAc2C,qBAAmByzD,WAAcrpE,KAAKie,cAAe,CAChG,GAAIpC,EAAME,YAAsC,WAAxBF,EAAME,WAAWlc,GACrC,OAEJG,KAAKitE,eAAehxD,gBAAgBJ,EAAO7b,MACxB,eAAf6b,EAAMhgB,MAAwC,aAAfggB,EAAMhgB,MACrCmE,KAAKssF,qBAAqBzwE,KAKtCqQ,EAAQoV,UAAUgrD,qBAAuB,SAAUzwE,GAC/C,IAAI0+C,KACAnE,EAAW,WACXC,EAAW,WAEX9zD,KAWJ,OAVIsZ,GAASA,EAAMG,YAAgBH,EAAMG,WAAgB,iBAAa2gB,OAChE9gB,EAAMG,WAAqB,sBAAa2gB,MAC1Cp6B,EAASsZ,EAAMG,WAAWhD,MAAMmjB,OAAOtgB,EAAMG,WAAWkB,YAGpDrB,EAAMG,YACNzZ,EAAOzL,KAAK+kB,EAAMG,YAG1Bu+C,EAAW,KAAI1+C,EAAMhgB,KACbggB,EAAMhgB,MACV,IAAK,kBACD0+D,EAAOnE,IAAcr6D,QAAS8f,EAAME,WAAWhgB,QAASC,QAAS6f,EAAME,WAAW/f,SAClFu+D,EAAOlE,IAAct6D,QAAS8f,EAAMG,WAAWjgB,QAASC,QAAS6f,EAAMG,WAAWhgB,SAClF,MACJ,IAAK,kBACDu+D,EAAOnE,IAAc/pD,YAAawP,EAAME,WAAW1P,aACnDkuD,EAAOlE,IAAchqD,YAAawP,EAAMG,WAAW3P,aACnD,MACJ,IAAK,cACDkuD,EAAOnE,IACHr6D,QAAS8f,EAAME,WAAWhgB,QAASC,QAAS6f,EAAME,WAAW/f,QAC7DzD,MAAOsjB,EAAME,WAAWxjB,MAAOD,OAAQujB,EAAME,WAAWzjB,QAE5DiiE,EAAOlE,IACHt6D,QAAS8f,EAAMG,WAAWjgB,QAASC,QAAS6f,EAAMG,WAAWhgB,QAC7DzD,MAAOsjB,EAAMG,WAAWzjB,MAAOD,OAAQujB,EAAMG,WAAW1jB,QAE5D,MACJ,IAAK,oBACDiiE,EAAO1+C,EAAM0wE,YAAchqF,EAC3B,MACJ,IAAK,oBACDg4D,EAAOnE,IAAcr6D,QAAS8f,EAAME,WAAWhgB,QAASC,QAAS6f,EAAME,WAAW/f,SAClFu+D,EAAOlE,IAAct6D,QAAS8f,EAAMG,WAAWjgB,QAASC,QAAS6f,EAAMG,WAAWhgB,SAG1F,IAAIypD,GACA4rB,MAAOx1D,EAAMC,SAAUvZ,OAAQA,EAAQg4D,OAAQA,GAE/Ch4D,EAAO9L,QACPuJ,KAAKy2D,aAAanyB,eAAakoD,cAAe/mC,IAMtDv5B,EAAQoV,UAAU42B,iBAAmB,WAEjCl4D,KAAKic,iBADSpgB,KAAM,aAAcigB,SAAU,cAMhDoQ,EAAQoV,UAAUo3B,eAAiB,WAE/B14D,KAAKic,iBADSpgB,KAAM,WAAYigB,SAAU,cAM9CoQ,EAAQoV,UAAUmrD,KAAO,WACjBzsF,KAAKitE,gBAAmBjtE,KAAKiT,YAAc2C,qBAAmByzD,UAC9DrpE,KAAKitE,eAAewf,KAAKzsF,OAMjCksB,EAAQoV,UAAUorD,KAAO,WACjB1sF,KAAKitE,gBAAmBjtE,KAAKiT,YAAc2C,qBAAmByzD,UAC9DrpE,KAAKitE,eAAeyf,KAAK1sF,OAQjCksB,EAAQoV,UAAU3S,MAAQ,SAAU89B,EAAQtkC,EAAStsB,GAC5CssB,IAEDA,GADAA,MACkBgU,OAAOn8B,KAAKod,cAAcpE,MAAOhZ,KAAKod,cAAcF,aAE1Eld,KAAKkX,eAAiBlX,KAAKkX,eAAiBC,gBAAcw1E,aAC1D3sF,KAAKif,eAAe0P,MAAMxG,EAASskC,EAAS5wD,GAAc,WAO9DqwB,EAAQoV,UAAU06C,WAAa,SAAUvvB,EAAQtkC,GACxCA,IAEDA,GADAA,MACkBgU,OAAOn8B,KAAKod,cAAcpE,MAAOhZ,KAAKod,cAAcF,aAE1Eld,KAAKkX,eAAiBlX,KAAKkX,eAAiBC,gBAAcw1E,aAC1D3sF,KAAKif,eAAe+8D,WAAW7zD,EAASskC,IAO5CvgC,EAAQoV,UAAU+6C,SAAW,SAAU5vB,EAAQtkC,GACtCA,IAEDA,GADAA,MACkBgU,OAAOn8B,KAAKod,cAAcpE,MAAOhZ,KAAKod,cAAcF,aAE1Eld,KAAKkX,eAAiBlX,KAAKkX,eAAiBC,gBAAcw1E,aAC1D3sF,KAAKif,eAAeo9D,SAASl0D,EAASskC,IAO1CvgC,EAAQoV,UAAU65B,KAAO,SAAU+kB,EAAQ0M,GACvC5sF,KAAK0e,SAASy8C,KAAK+kB,EAAQ,EAAG,EAAG0M,IAOrC1gE,EAAQoV,UAAUurD,OAAS,SAAU50D,GACjC,IAAIioD,EAASjoD,EAAQ8oD,WAAa9oD,EAAQ8oD,WAAa,GACvDb,EAA0B,YAAjBjoD,EAAQp8B,KAAqB,GAAK,EAAIqkF,GAAW,EAAIA,EAC9DlgF,KAAK0e,SAASy8C,KAAK+kB,EAAQ,EAAG,EAAGjoD,EAAQ2jC,aAO7C1vC,EAAQoV,UAAUy7C,IAAM,SAAUn6D,EAAkBE,EAAgB8pE,GAChE5sF,KAAK0e,SAASy8C,KAAK,EAAGv4C,EAAkBE,EAAgB8pE,IAK5D1gE,EAAQoV,UAAU9D,MAAQ,WACtBx9B,KAAK0e,SAASy8C,KAAK,EAAIn7D,KAAK0e,SAASgF,aAAc1jB,KAAK0e,SAASkE,kBAAmB5iB,KAAK0e,SAASoE,gBAAkB9rB,EAAG,EAAGC,EAAG,KAGjIi1B,EAAQoV,UAAUm1B,aAAe,SAAUq2B,EAAW/sF,GAC9CA,GACAC,KAAK+sF,iBAAiBhtF,GAE1BC,KAAK43C,QAAQtT,eAAawoD,GAAY/sF,IAE1CmsB,EAAQoV,UAAUyrD,iBAAmB,SAAUhtF,GAC3C,IAAIH,EAAUG,EAAKH,QACfG,EAAKH,SAAWA,aAAmB6T,IAAa7T,EAAQoZ,MAAMviB,OAASmJ,EAAQsd,WAAWzmB,SAAW,IACrGsJ,EAAKH,QAAoC,IAAzBA,EAAQoZ,MAAMviB,OAAgBmJ,EAAQoZ,MAAM,GAAKpZ,EAAQsd,WAAW,KAO5FgP,EAAQoV,UAAUlV,IAAM,SAAU7xB,EAAK6tD,GACnC,IAAI/vC,EACJ,GAAI9d,EAAK,CAEL,IAAIwF,GACAH,QAFJrF,EAAMmhB,GAAYnhB,GAEA82E,MAAOrxE,KAAKkX,eAAgB8R,MAAO,WAAYntB,KAAM,WAAYy6D,QAAQ,GAE5E,WAAX/7D,EAAIsF,IACJG,KAAKy2D,aAAanyB,eAAa0oD,iBAAkBjtF,GAErDC,KACKkX,eAAiBlX,KAAKkX,eAAiBC,gBAAcw1E,aAC1DpyF,EAAIsF,GAAKtF,EAAIsF,IAAMyZ,KACnB,IAAIiS,EAASvrB,KAAKwtE,YAClB,IAAKztE,EAAKu2D,SAAW/qC,EAAO08C,KAAM,CAQ9B,GAPI18C,EAAOpD,QAAQjK,QAAQ3jB,EAAIsF,IAAM,IAAM0rB,EAAO08C,OACzC18C,EAAO2C,UACR3C,EAAO2C,SAAU,EACjBluB,KAAK6jB,YAET0H,EAAOpD,QAAQrxB,KAAKyD,EAAIsF,KAExBid,GAAcviB,KAAS6Y,IACvBiF,EAAS,IAAIjF,GAAUpT,KAAM,aAAczF,GAAK,IACzCqzC,OAAS,MAChB5tC,KAAKkd,WAAWpmB,KAAKuhB,GACrBrY,KAAK+Y,WAAWV,IACI,IAAhB9d,EAAI2zB,SACJluB,KAAK05C,wBAAwBrhC,EAAOvK,QAASuK,EAAQ9d,EAAI2zB,SAE7DluB,KAAKitF,YAAY50E,OAEhB,CAOD,GANAA,EAAS,IAAI9D,GAAKvU,KAAM,QAASzF,GAAK,GACtC8d,EAAOwC,SAAWtgB,EAAIsgB,SACtBxC,EAAOogC,SAAWl+C,EAAIk+C,SACtBpgC,EAAOu1B,OAAS,MAChB5tC,KAAKgZ,MAAMliB,KAAKuhB,GAChBrY,KAAK+Y,WAAWV,EAAQkT,OAAQtxB,EAAWmuD,GACvCpoD,KAAKm5C,WAAY,CACjB,GAAI9gC,EAAOja,MAAMka,aAAmD,IAApCD,EAAOja,MAAMka,YAAY7hB,OACrD,IAAK,IAAIoG,EAAK,EAAG6f,EAAK1c,KAAKm5C,WAAW+zC,sBAAsB70E,GAASxb,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvF,IAAI4hC,EAAQ/hB,EAAG7f,GACfmD,KAAKmtF,eAAe1uD,EAAOlT,GAAQ,GAGvClT,EAAOja,MAAMk7C,UAAYjhC,EAAOja,MAAMk7C,SAASD,WAAWE,WAC1DlhC,EAAOja,MAAMk7C,SAASD,WAAWE,UAAU9iD,QAC3CuJ,KAAKm5C,WAAWi0C,YAAY/0E,EAAQrY,MAG5C,GAAIqY,EAAOogC,UAAY,GAAKl+C,EAAIsgB,UAAY7a,KAAK4a,UAAUrgB,EAAIsgB,WACf,kBAA5C7a,KAAK4a,UAAUrgB,EAAIsgB,UAAUzc,MAAMvC,KAA0B,CAC7D,IAAIkf,EAAW/a,KAAK4a,UAAUrgB,EAAIsgB,UAClCE,EAASnJ,SAASzL,OAAOkS,EAAOogC,SAAU,EAAGpgC,EAAOxY,IACpDkb,EAASjN,QAAQ8D,SAASzL,OAAOkS,EAAOogC,SAAU,EAAGpgC,EAAOvK,SAC5DiN,EAASjN,QAAQ6P,QAAQ,IAAIC,IAC7B7C,EAASjN,QAAQ+P,QAAQ9C,EAASjN,QAAQgQ,aAC1C9d,KAAKob,oBAAoBL,IASjC,GANAhb,GACIH,QAASyY,EAAQg5D,MAAOrxE,KAAKkX,eAAgB8R,MAAO,UAAWntB,KAAM,WAAYy6D,QAAQ,GAE9E,WAAX/7D,EAAIsF,IACJG,KAAKy2D,aAAanyB,eAAa0oD,iBAAkBjtF,KAE/CC,KAAKkX,eAAiBC,gBAAckyD,UAAerpE,KAAKkX,eAAiBC,gBAAc23D,OAAQ,CACjG,IAAIjzD,GACAhgB,KAAM,oBAAqB0wF,WAAY,SAAUxwE,WAAYL,GAAYnhB,GACzEyhB,WAAYN,GAAYnhB,GAAMuhB,SAAU,YAE5C9b,KAAKic,gBAAgBJ,GAEP,QAAd7b,KAAK4rB,OACL5rB,KAAKqtF,eAAeh1E,GACpBrY,KAAKob,oBAAoB/C,GACrBA,EAAOja,MAAMk7C,UAAYjhC,EAAOja,MAAMk7C,SAASD,WAAWE,WAC1DlhC,EAAOja,MAAMk7C,SAASD,WAAWE,UAAU9iD,QAC3CuJ,KAAKstF,gBAAgBj1E,GAEzBrY,KAAKmmF,mBAKjB,OADAnmF,KAAKsnF,oBAAoBnwE,gBAAcw1E,cAChCt0E,GAEX6T,EAAQoV,UAAU+rD,eAAiB,SAAU9sF,GACzC,GAAIA,EAAKqR,SACL,IAAK,IAAI/U,EAAK,EAAG6f,EAAKnc,EAAKqR,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAIxG,EAAIqmB,EAAG7f,GACX,GAAImD,KAAK4a,UAAUvkB,IAAM2J,KAAK4a,UAAUvkB,GAAGwkB,SAAU,CACjD,IAAIjN,EAAQyhB,GAAkBh5B,EAAI,gBAAiB2J,KAAKJ,QAAQC,IAChE+N,EAAM4P,WAAW8R,YAAY1hB,MAM7Cse,EAAQoV,UAAUgsD,gBAAkB,SAAU/sF,GAC1C,GAAIP,KAAKm5C,YAAc54C,GAAQA,EAAKnC,OAASmC,EAAKnC,MAAMk7C,UACpD/4C,EAAKnC,MAAMk7C,SAASD,WAAWE,WAC/Bh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAAQ,CACjD,IAAI8iD,EAAYh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAC/Cv5C,KAAKsyE,YAAY/xE,EAAKV,IACtB,IAAK,IAAIhD,EAAK,EAAG+xE,EAAcr1B,EAAW18C,EAAK+xE,EAAYn4E,OAAQoG,IAAM,CACrE,IAAIxG,EAAIu4E,EAAY/xE,GACpBmD,KAAKsyE,YAAYj8E,GAGjB,IAAK,IAFDw5E,KAEKn5E,GADTm5E,EAAQA,EAAM1zC,OAAOn8B,KAAK4a,UAAUvkB,GAAGqiD,SAAU14C,KAAK4a,UAAUvkB,GAAGsiD,UAChDliD,OAAS,EAAGC,GAAK,EAAGA,IACnCsJ,KAAKsyE,YAAYzC,EAAMn5E,IAG/B,IAAK,IAAIgmB,EAAK,EAAG6wE,EAAch0C,EAAW78B,EAAK6wE,EAAY92F,OAAQimB,IAAM,CACjErmB,EAAIk3F,EAAY7wE,GAChB1c,KAAK4a,UAAUvkB,GAAG+H,MAAMk7C,SAASD,WAAWE,WAC5Cv5C,KAAK4a,UAAUvkB,GAAG+H,MAAMk7C,SAASD,WAAWE,UAAU9iD,QACtDuJ,KAAKstF,gBAAgBttF,KAAK4a,UAAUvkB,UAK5C2J,KAAKsyE,YAAY/xE,EAAKV,KAI9BqsB,EAAQoV,UAAUgxC,YAAc,SAAUj+C,GACtC,IAAIzmB,EAAQyhB,GAAkBgF,EAAS,gBAAiBr0B,KAAKJ,QAAQC,IACjEme,EAASpQ,EAAM2X,cACnB3X,EAAM4P,WAAW8R,YAAY1hB,GAC7BoQ,EAAOuR,YAAY3hB,IAOvBse,EAAQoV,UAAUsrC,kBAAoB,SAAUtkD,EAAY/nB,GACxD,GAAIP,KAAKm5C,WAAY,CACjB,IAAIvtC,EAAY5L,KAAKm5C,WAAWq0C,cAAcjtF,EAAM+nB,EAAYtoB,MAGhE,GAFAA,KAAKmtF,eAAevhF,EAAW5L,KAAKif,eAAe+oD,eAAeznE,EAAKV,KAAK,GAC5EG,KAAKob,oBAAoB7a,KACnBP,KAAKkX,eAAiBC,gBAAckyD,UAAerpE,KAAKkX,eAAiBC,gBAAc23D,OAAQ,CACjG,IAAIjzD,GACAhgB,KAAM,oBAAqB0wF,WAAY,SAAUxwE,WAAYL,GAAY4M,GACzEtM,WAAYN,GAAY4M,GAAaxM,SAAU,YAEnD9b,KAAKic,gBAAgBJ,MAOjCqQ,EAAQoV,UAAUmsD,qBAAuB,SAAU7hF,EAAWolC,GAC1D,IAAIzwC,EACAsvE,KAEJ,GADAtvE,EAAOywC,EAAWhxC,KAAK4a,UAAUhP,EAAUnK,UAAYzB,KAAK4a,UAAUhP,EAAUwmC,UAG5E,IAAK,IAAI17C,GADTm5E,EAAQ7+B,EAAWzwC,EAAKm4C,SAAWn4C,EAAKo4C,SACrBliD,OAAS,EAAGC,GAAK,EAAGA,IAC/Bm5E,EAAMn5E,KAAOkV,EAAU/L,IACvBgwE,EAAM1pE,OAAOzP,EAAG,IAShCw1B,EAAQoV,UAAUosD,yBAA2B,SAAUntF,GAInD,IAAK,IAHDqL,EACAikE,KAEKn5E,GADTm5E,EAAQA,EAAM1zC,OAAO57B,EAAKm4C,SAAUn4C,EAAKo4C,UACtBliD,OAAS,EAAGC,GAAK,EAAGA,KACnCkV,EAAY5L,KAAK4a,UAAUi1D,EAAMn5E,OAE7BsJ,KAAK6wE,eAAejlE,EAAU/L,IAAM6b,GAAY9P,GAChD5L,KAAK87C,OAAOlwC,KAKxBsgB,EAAQoV,UAAU6vC,uBAAyB,SAAU52E,GACjD,GAAIA,EAAIqX,SACJ,IAAK,IAAIlb,EAAI,EAAGA,EAAI6D,EAAIqX,SAASnb,OAAQC,IAAK,CAC1C,IAAIwV,EAASlM,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IACrCwV,GACAlM,KAAKmxE,uBAAuBjlE,GAIxC,IAAI67D,EAAQ/nE,KAAKurB,OAAOrN,QAAQle,KAAKif,eAAe+oD,eAAeztE,EAAIsF,KAEnE8tF,EADU3tF,KAAKurB,OAAOw8C,GAAO5/C,QACVjK,QAAQ3jB,EAAIsF,IAC/B8tF,GAAY,IACR7tD,GAAW9/B,KAAMzF,IACjByF,KAAKq1D,SAAS96D,GAElByF,KAAKurB,OAAOw8C,GAAO5/C,QAAQhiB,OAAOwnF,EAAU,UACrC3tF,KAAKurB,OAAOw8C,GAAO0C,YAAYzqE,KAAK4a,UAAUrgB,EAAIsF,IAAI0pE,UAIrEr9C,EAAQoV,UAAUssD,eAAiB,SAAUC,GACzC,GAAkB,QAAd7tF,KAAK4rB,MAAiC,WAAd5rB,KAAK4rB,MAA+C,WAA1BiiE,EAAWzvF,MAAMvC,KAAoB,CACvF,IAAIiyF,EAAkBz+D,GAAkBw+D,EAAWhuF,GAAK,gBAAiBG,KAAKJ,QAAQC,IAClFiuF,GACAA,EAAgBtwE,WAAW8R,YAAYw+D,GAG/C9tF,KAAK2sE,sBAGL,IACK,IAFD/sE,EADAgS,EAAWi8E,EAAW//E,QAAQ8D,SAGzBlb,EAAI,EAAGA,EAAIkb,EAASnb,OAAQC,IAAK,CACtC,GAAIkb,EAASlb,aAAcq4B,IAA0Bnd,EAASlb,GAAK,IAAMkb,EAASlb,GAAK,GAAEwnB,QAAQ,gBAAkB,EAAI,CAC9GtM,EAASlb,GAAK,GAAEwnB,QAAQ,gBAAkB,GAAmB,QAAdle,KAAK4rB,QACrDhsB,EAAUyvB,GAAkBzd,EAASlb,GAAGmJ,GAAK,sBAAuBG,KAAKJ,QAAQC,KACzE2d,WAAW8R,YAAY1vB,IAC/BA,EAAUyvB,GAAkBzd,EAASlb,GAAGmJ,GAAK,qBAAsBG,KAAKJ,QAAQC,KACxE2d,WAAW8R,YAAY1vB,IAEnC,IAAK,IAAI/C,EAAK,EAAG6f,EAAK1c,KAAKgsB,MAAOnvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IAAIuxB,EAAY1R,EAAG7f,GACnBqmB,GAActR,EAASlb,GAAGmJ,GAAK,gBAAiBuuB,SAGnD,GAAIxc,EAASlb,aAAcu4B,GAC5B,IAAK,IAAIzD,EAAK,EAAGC,EAAKzrB,KAAKgsB,MAAOR,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAChD4C,EAAY3C,EAAGD,GACnBtI,GAActR,EAASlb,GAAGmJ,GAAK,gBAAiBuuB,GAGxDiC,GAAeze,EAASlb,GAAGmJ,MAGnCqsB,EAAQoV,UAAUysD,cAAgB,WAC9B/tF,KAAK87C,UAOT5vB,EAAQoV,UAAUwa,OAAS,SAAUvhD,GACjC,IAAI6iB,KACJA,EAAgBA,EAAc+e,OAAOn8B,KAAKod,cAAcpE,MAAOhZ,KAAKod,cAAcF,YAClF,IAAInd,EACAuvE,GAAc,EAClB,GAAI/0E,GAEA,IADAA,EAAMyF,KAAK4a,UAAUrgB,EAAIsF,OnD98CrC,SAA0BU,GAQtB,OANIA,aAAgB6S,GACR7S,EAAK0S,YAAcI,uBAAqB26E,OAGxCztF,EAAK0S,YAAcK,kBAAgB06E,OmDy8C3BC,CAAU1zF,IAASyF,KAAKkX,eAAiBC,gBAAc+2E,SAC/DnuF,GACIH,QAASrF,EAAK82E,MAAOrxE,KAAKkX,eAC1B8R,MAAO,WAAYntB,KAAM,UAAWy6D,QAAQ,GAE1Ct2D,KAAKkX,eAAiBC,gBAAc+2E,OAAsB,WAAX3zF,EAAIsF,IACrDG,KAAKy2D,aAAanyB,eAAa0oD,iBAAkBjtF,IAEhDA,EAAKu2D,QAAQ,CACd,GAAIt2D,KAAKm5C,YACDn5C,KAAKm5C,WAAWuzB,0BAA0BnyE,EAAKyF,MAE/C,YADAA,KAAK2sE,sBAIb,KAAO3sE,KAAKkX,eAAiBC,gBAAckyD,YACtC9uE,aAAega,IAAQha,aAAe6Y,IAAY,CACnD,IAAIyI,GACAhgB,KAAM,oBAAqB0wF,WAAY,SAAUxwE,WAAYL,GAAYnhB,GACzEyhB,WAAYN,GAAYnhB,GAAMuhB,SAAU,YAEtC9b,KAAKkX,eAAiBC,gBAAc+2E,OAClC9wE,EAAc3mB,OAAS,GAAKuJ,KAAKitE,iBAAmBjtE,KAAK0qB,OAAO7uB,OAChEmE,KAAKktE,eAAehV,mBACpBoX,GAAc,GAGlB/0E,aAAega,IACfvU,KAAK0tF,yBAAyBnzF,GAE5ByF,KAAKkX,eAAiBC,gBAAc+2E,OAAWluF,KAAKmuF,aAAa5zF,IACnEyF,KAAKic,gBAAgBJ,GAGzBthB,EAAIqX,UACJ5R,KAAKouF,YAAY7zF,GAEjBA,EAAIsgB,WACJ7a,KAAK4b,YAAYrhB,GACbyF,KAAK4a,UAAUrgB,EAAIsgB,WAAyD,kBAA5C7a,KAAK4a,UAAUrgB,EAAIsgB,UAAUzc,MAAMvC,OACnEmE,KAAKob,oBAAoBpb,KAAK4a,UAAUrgB,EAAIsgB,WAC5C7a,KAAKwpE,qBAAqBxpE,KAAK4a,UAAUrgB,EAAIsgB,aAGrD,IAAI6E,OAAQ,EACZ1f,KAAKkX,eAAiBlX,KAAKkX,eAAiBC,gBAAcw1E,aAC1D,IAAIkB,EAAa7tF,KAAK4a,UAAUrgB,EAAIsF,IAChCguF,aAAsBt5E,IACQ,SAA1Bs5E,EAAWzvF,MAAMvC,MAAmBmE,KAAKm5C,YACzCn5C,KAAKm5C,WAAWk1C,oBAAoBR,EAAY7tF,OAGrC,KADf0f,EAAQ1f,KAAKgZ,MAAMkF,QAAQ2vE,MAEvB7tF,KAAKulF,gBAAgBzuF,KAAKkJ,KAAK4a,UAAUizE,EAAWhuF,KACpDG,KAAKgZ,MAAM7S,OAAOuZ,EAAO,GACzB1f,KAAKsuF,gBAAgBT,OAKV,KADfnuE,EAAQ1f,KAAKkd,WAAWgB,QAAQ2vE,MAE5B7tF,KAAKulF,gBAAgBzuF,KAAKkJ,KAAK4a,UAAUizE,EAAWhuF,KACpDG,KAAKkd,WAAW/W,OAAOuZ,EAAO,IAElC1f,KAAKitF,YAAYY,GACjB7tF,KAAKytF,qBAAqBlzF,GAAK,GAC/ByF,KAAKytF,qBAAqBlzF,GAAK,IAE/B+0E,GACAtvE,KAAKktE,eAAexU,iBAEpB54B,GAAW9/B,KAAM6tF,IACjB7tF,KAAKq1D,SAASw4B,GAElB7tF,KAAKmxE,uBAAuB52E,GACxByF,KAAKmgC,uBACLngC,KAAKmgC,qBAAqBryB,aAAU7T,UAEjC+F,KAAK4a,UAAUrgB,EAAIsF,IAC1BG,KAAK4tF,eAAeC,GACpB7tF,KAAKmmF,iBACa,QAAdnmF,KAAK4rB,MACL5rB,KAAKqtE,sBAEHrtE,KAAKkX,eAAiBC,gBAAc+2E,QACtCluF,KAAKkxE,gBAAgB2c,GACrB9tF,GACIH,QAASrF,EAAK82E,MAAOrxE,KAAKkX,eAC1B8R,MAAO,UAAWntB,KAAM,UAAWy6D,QAAQ,GAEhC,WAAX/7D,EAAIsF,IACJG,KAAKy2D,aAAanyB,eAAa0oD,iBAAkBjtF,GAErDC,KAAKgpE,mBAKhB,GAAI5rD,EAAc3mB,OAAS,EAAG,CAC3BuJ,KAAKitE,iBACLjtE,KAAKktE,eAAehV,mBACpBoX,GAAc,GAElB,IAAK,IAAI54E,EAAI,EAAGA,EAAI0mB,EAAc3mB,OAAQC,IAAK,CAChC0mB,EAAc1mB,GACzB,GAAIsJ,KAAK4a,UAAUwC,EAAc1mB,GAAGmJ,IAAK,CACrC,GAAKud,EAAc1mB,aAAc0c,IAAcpT,KAAKm5C,YAChDn5C,KAAKm5C,WAAW2vB,yBAAyB5qD,QAAQd,EAAc1mB,KAAO,EAEtE,YADAsJ,KAAK87C,OAAO97C,KAAK4a,UAAUwC,EAAc1mB,GAAG07C,WAGhDpyC,KAAK87C,OAAO1+B,EAAc1mB,KAG9B44E,GACAtvE,KAAKktE,eAAexU,iBAExB14D,KAAK2b,mBAIbuQ,EAAQoV,UAAU6sD,aAAe,SAAU5zF,GACvC,IAAIg0F,EACAvwE,EAAShe,KAAK4a,UAAUrgB,EAAIsgB,UAChC,GAAItgB,GAAOA,EAAIsgB,UAAYmD,EAAOlG,WACH,UAA1BkG,EAAOlG,UAAUjc,MAC8B,kBAA5CmE,KAAK4a,UAAUrgB,EAAIsgB,UAAUzc,MAAMvC,KAA2B,CAClE0yF,GAAU,EACV,IAII1yE,GACAhgB,KAAM,4BAA6BmgB,YAC/B+C,iBAAa9kB,EAAWsI,OAAQhI,EAChCyI,YAAQ/I,EAAW6kB,iBAAa7kB,GAEpC8hB,YARAgD,YAAaf,EAAOlQ,QAAQ8D,SAASsM,QAAQ3jB,EAAIuT,SAAUvL,OAAQhI,EACnEyI,YAAQ/I,EAAW6kB,iBAAa7kB,GAQhC6hB,SAAU,YAER9b,KAAKkX,eAAiBC,gBAAckyD,UACtCrpE,KAAKic,gBAAgBJ,GAG7B,OAAO0yE,GAGXriE,EAAQoV,UAAU1lB,YAAc,SAAUrb,EAAMid,GAC5C,IAAI3d,EAQJ,GAPA2d,EAAaA,EAAaxd,KAAK4a,UAAU4C,EAAW3d,IAAMG,KAAK4a,UAAUra,EAAKsa,UAE1Ehb,EADgB,iBAATU,EACFA,EAGAA,EAAKV,GAEV2d,GAAcA,EAAW5L,SAAU,CACnC,IAAK,IAAIlb,EAAI,EAAGA,EAAI8mB,EAAW5L,SAASnb,OAAQC,IACxC8mB,EAAW5L,SAASlb,KAAOmJ,IAC3B2d,EAAW5L,SAASzL,OAAOzP,EAAG,GAC9B8mB,EAAW1P,QAAQ8D,SAASzL,OAAOzP,EAAG,IAG9C8mB,EAAW1P,QAAQ6P,QAAQ,IAAIC,IAC/BJ,EAAW1P,QAAQ+P,QAAQL,EAAW1P,QAAQgQ,eAItDoO,EAAQoV,UAAUnjB,SAAW,SAAU5d,EAAMqN,EAAO8R,GAChD,IAAI7f,EACA2d,EAAaxd,KAAK4a,UAAUra,EAAKV,IACrC,GAAI2d,EAAW5L,WACU,iBAAVhE,EACH5N,KAAK4a,UAAUhN,KACf/N,EAAK+N,IAIT/N,EAAK+N,EAAM/N,GAAK+N,EAAM/N,IAAMyZ,KAC5BtZ,KAAKosB,IAAIxe,IAET/N,KAAQ+N,EAAM6qC,WAAgC,IAApB7qC,EAAM6qC,WAAkB,CAClD,IAAI45B,EAAYryE,KAAK4a,UAAU/a,GAC/BwyE,EAAUx3D,SAAW2C,EAAW3d,GAC5B2d,EAAW1F,WAA2C,UAA9B0F,EAAW1F,UAAUjc,MAC7CmE,KAAKwuF,oBAAoBhxE,EAAY60D,GAErC3yD,GACAlC,EAAW5L,SAASzL,OAAOuZ,EAAO,EAAG7f,GACrC2d,EAAW1P,QAAQ8D,SAASzL,OAAOuZ,EAAO,EAAG2yD,EAAUvkE,WAGvD0P,EAAW5L,SAAS9a,KAAK+I,GACzB2d,EAAW1P,QAAQ8D,SAAS9a,KAAKu7E,EAAUvkE,UAE/C0P,EAAW1P,QAAQ6P,QAAQ,IAAIC,IAC/BJ,EAAW1P,QAAQ+P,QAAQL,EAAW1P,QAAQgQ,kBACjB7jB,IAAzBujB,EAAW1F,YACXu6D,EAAUt2E,QAAUs2E,EAAUvkE,QAAQ/R,QACtCs2E,EAAUr2E,QAAUq2E,EAAUvkE,QAAQ9R,SAE1CgE,KAAKob,oBAAoBoC,KAOrC0O,EAAQoV,UAAU1X,MAAQ,WACtB5pB,KAAK2lF,gBAETz5D,EAAQoV,UAAUqkD,aAAe,SAAUrvF,GACvC,IAAI6xB,KAMAA,EALC7xB,IACD6xB,EAAUA,EAAQgU,OAAOn8B,KAAKgZ,QACZmjB,OAAOn8B,KAAKkd,YAKlCld,KAAKkX,eAAiBlX,KAAKkX,eAAiBC,gBAAc+2E,MAC1D,IAAK,IAAIrxF,EAAK,EAAGqxE,EAAY/lD,EAAStrB,EAAKqxE,EAAUz3E,OAAQoG,IAAM,CAC/D,IAAItC,EAAM2zE,EAAUrxE,GAChBmD,KAAK4a,UAAUrgB,EAAIsF,KACnBG,KAAK87C,OAAOvhD,GAGpByF,KAAKkX,eAAiBlX,KAAKkX,gBAAkBC,gBAAc+2E,MAC3DluF,KAAK6pE,cAAgB,IAAI4Z,GAAczjF,KAAK4a,WAC5C5a,KAAKspF,eAETp9D,EAAQoV,UAAUmtD,gBAAkB,WAChCzuF,KAAKimE,iBAOT/5C,EAAQoV,UAAU2kC,cAAgB,SAAU1lE,EAAMV,GAC9C,IAAKsW,GAAWnW,OAAS8V,GAAgB9V,MAAO,CAC5CA,KAAKyjE,aAAc,EACnB,IAAIh+D,EAAYzF,KAAK0e,SAASjZ,UAC1B4V,EAAQxE,GAAgB7W,MAAQyF,EAAU4V,MAAQ,EAElD1B,OAAO,EACPnY,OAAS,EAETxK,OAAI,EACJC,OAAI,EACJqxE,OAAc,EAIlB,GAHK/nE,IACDA,EAAQP,KAAKod,cAAcpE,MAAM,GAAMhZ,KAAKod,cAAcpE,MAAM,GAAKhZ,KAAKod,cAAcF,WAAW,IAEnG3c,EAAM,CACFA,EAAKnC,OAA6B,kBAApBmC,EAAKnC,MAAMvC,OACzB0E,EAAOP,KAAK4a,UAAUra,EAAKqR,SAAS,KAExC,IAAI88E,GAAiB,EAuBrB,GAtBI1uF,KAAKm5C,aACLmvB,EAActoE,KAAKm5C,WAAWw1C,yBAAyBpuF,EAAMV,MAEzDU,EAAOP,KAAK4a,UAAUra,EAAKV,GAAGyO,MAAM,oBAAoB,KAG3Dg6D,EAcDomB,GAAiB,GAbO,SAApBnuF,EAAKnC,MAAMvC,MAA+C,IAA5B0E,EAAK+X,YAAY7hB,SAC/CuJ,KAAK2oE,YAAY0c,SAAU,EAC3BrlF,KAAKk4D,mBACLl4D,KAAK4uF,UAAUruF,IAASV,GAAIyZ,KAAYrZ,QAAS,QAEhDJ,IAA4B,SAApBU,EAAKnC,MAAMvC,MAAmB0E,EAAK+X,YAAY7hB,OAAS,GAA2B,SAApB8J,EAAKnC,MAAMvC,QACnFgE,EAA0B,SAApBU,EAAKnC,MAAMvC,KAAoB0E,EAAKuN,QAAQ8D,SAAS,GAAK,GAAEtD,MAAM,KAAK,GAAK/N,EAAK+X,YAAY,GAAGzY,IAEtGA,IACAyoE,EAActoE,KAAK6yC,WAAWtyC,EAAKuN,QAASjO,KAMhDU,GAAQ+nE,KAAiBA,aAAuBr5C,OnDxhDpE,SAA+B3G,EAAY/nB,GACvC,IAAIsuF,EAAY,EAEhB,OADAA,EAAatuF,aAAgB6S,GAAaC,uBAAqBuF,SAAWtF,kBAAgBsF,SAClE,SAApBrY,EAAKnC,MAAMvC,KACJ0E,EAAK0S,YAAcK,kBAAgBsF,SAErCrY,EAAK0S,YAAc47E,EACpBvmE,EAAWrV,YAAcC,wBAAsBo3B,gBACxC,EAGA,EAGNhiB,EAAWrV,YAAcC,wBAAsB0F,SAC7C,EAEJ,EmDwgDWk2E,CAAexmB,EAAa/nE,IAASmuF,GAAiB,CACxD,IAAIxuF,EAASooE,EAAiB,MAC1BlwD,OAAW,EAEfA,EA1CO,IAyCPA,EAAWkwD,EAAY9mE,OAAOjJ,MAAQgI,EAAKuN,QAAQtM,OAAOjJ,MAAQ+vE,EAAY9mE,OAAOjJ,MAAQgI,EAAKuN,QAAQtM,OAAOjJ,OAzC1G,GA0CqC6f,EAC5C,IAAIqrD,EAAcliD,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,mBACxDkvF,EAAWxtE,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,YACzD8Z,EAAOo1E,EAAWA,EAASxpF,MAAQ+iE,EAAYroE,QAC1CwjE,GAAgBsrB,IACjBtrB,EAAc5hD,GAAkB,UAChCktE,EAAWltE,GAAkB,eAC7B7hB,KAAK2gE,cAAcpxC,YAAYk0C,GAC/BA,EAAYl0C,YAAYw/D,GACxBA,EAASx/D,YAAYhO,SAAS+Z,eAAe3hB,MAEjDnY,EAAS61B,GAAgBixC,EAAYpoE,MAAOyZ,OAAM1f,OAAWA,EAAWme,IAC7DmpB,YAEH//B,EADoB,SAApBjB,EAAKnC,MAAMvC,KACF,IAAI+hB,GAAKyU,GAAe9xB,EAAO+nE,EAAc,GAAEh6D,MAAM/N,EAAKV,GAAK,KAAK,IAAItH,OAAS,GAAI+vE,EAAYpoE,MAAMuY,UAGvG,IAAImF,GAAMrd,EAAKhI,MAAQ,GAAM,GAAKgI,EAAKhI,MAAO+vE,EAAYpoE,MAAMuY,WAG7ElY,EAAKsa,UAAyD,kBAA7C7a,KAAK4a,UAAUra,EAAKsa,UAAUzc,MAAMvC,MACrD2F,EAAOjJ,MAAQgI,EAAKuN,QAAQtM,OAAOjJ,MAAQ,GAC3CvB,GAAQuJ,EAAKuN,QAAQtM,OAAOP,OAAOjK,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MAAU7Z,EAAOjJ,MAAQ,EAAK8iB,EAAS,IACxGpkB,GAAQsJ,EAAKuN,QAAQtM,OAAOP,OAAOhK,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,MAAU7Z,EAAOlJ,OAAS,EAAK+iB,EAAS,EACzGitD,EAAYpoE,MAAM2sB,UAAY,SAG9BrrB,EAAOjJ,MAAQkE,KAAK+I,IAAIhE,EAAOjJ,MAAO,IACtCvB,GAAQsxE,EAAY9mE,OAAOP,OAAOjK,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MAAU7Z,EAAOjJ,MAAQ,EAAK8iB,EAAS,IACvGpkB,GAAQqxE,EAAY9mE,OAAOP,OAAOhK,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,MAAU7Z,EAAOlJ,OAAS,EAAK+iB,EAAS,GAO5Gse,GAAiB8pC,GAJb5jE,GAAMG,KAAKJ,QAAQC,GAAK,kBAAmBK,MAAS,2BAAkClJ,EAAI,UACtFC,EAAI,aAAgBuK,EAAOjJ,MAAQ,GAAK8iB,EAAS,aAAgB7Z,EAAOlJ,OAAS+iB,EACjF,qBAAuB9a,EAAKV,GAAK,MAUzC85B,GAAiBo1D,GANblvF,GAAMG,KAAKJ,QAAQC,GAAK,WAAYK,MAAS,UAAasB,EAAOjJ,MAAQ,GAAK8iB,EAC1E,aAAgB7Z,EAAOlJ,OAAS+iB,EAAS,+DACvBnb,EAAMysB,WACxB,cAAiBzsB,EAAMuY,SAAW4C,EAAS,iBAC1CitD,EAAYpoE,MAAM2sB,UAAUmiE,oBAAuB,IAAKr3E,MAAS,wBAG1Eo3E,EAAS7uF,MAAMo3B,WAAcp3B,EAAU,KAAI,OAAS,GACpD6uF,EAAS7uF,MAAMq3B,UAAar3B,EAAY,OAAI,SAAW,GACvD6uF,EAAS7uF,MAAM+uF,YAA+B,IAAjB/uF,EAAMuY,SAAiB,OAAOna,WAC3DywF,EAAS7uF,MAAM6sB,eAAkB7sB,EAAoB,eAAIA,EAAM6sB,eAAiB,GAChF/sB,KAAK2oE,YAAY9tD,SAAWta,EAAKV,GACjCG,KAAK2oE,YAAY9oE,GAAKA,EACtByoE,EAAYp6C,SAAU,EACtBluB,KAAKob,oBAAoB7a,GACzBP,KAAKkX,eAAiBlX,KAAKkX,eAAiBC,gBAAcypD,SACrD5gE,KAAKgmE,iBACNklB,eAAa9+D,IAAI2iE,EAAU,QAAS/uF,KAAKoqE,aAAahC,YAAapoE,KAAKoqE,cACxE8gB,eAAa9+D,IAAI2iE,EAAU,WAAY/uF,KAAKkvF,aAAclvF,MAC1D+uF,EAAS7yE,cAM7BgQ,EAAQoV,UAAU6tD,iBAAmB,SAAU5uF,EAAM6xB,GACjD,IAAK,IAAI17B,EAAI,EAAGA,EAAI6J,EAAKm4C,SAASjiD,OAAQC,IAAK,CAC3C,IAAIkV,EAAY5L,KAAK4a,UAAUra,EAAKm4C,SAAShiD,IACzCsM,EAAShD,KAAK4a,UAAUhP,EAAUwmC,UACtCxmC,EAAUsiB,QAAUkE,EACfA,IACDpyB,KAAK05C,wBAAwB9tC,EAAUkC,QAASlC,GAAW,GAC3D5I,EAAOm3C,WAAa/nB,GAExBpyB,KAAKmvF,iBAAiBnsF,EAAQA,EAAOm3C,YACrCn3C,EAAOkrB,QAAUkE,EACZA,GACDpyB,KAAK05C,wBAAwB12C,EAAO8K,QAAS9K,GAAQ,KAOjEkpB,EAAQoV,UAAUs5C,SAAW,WACzB,IACIlwD,EADAtf,GAAS,EAETgkF,EAAapvF,KAAKynF,oBACtBznF,KAAK6pB,uBAAsB,GAC3B,IAAIwlE,GAAar4F,EAAGgJ,KAAK0e,SAAS2E,cAAepsB,EAAG+I,KAAK0e,SAAS0E,gBA2BlE,GA1BIpjB,KAAKw6E,2BACL9vD,EAAS1qB,KAAKw6E,0BAA0B8U,aAAatvF,KAAKgZ,MAAOhZ,KAAK4a,UAAW5a,KAAK0qB,OAAQ2kE,EAAUrvF,KAAK+pB,mBAAmBlqB,IAChIuL,GAAS,EACLpL,KAAK+qE,qBAAuBrgD,EAAO6kE,WAAavvF,KAAKkX,gBACrDlX,KAAKmvF,iBAAiBzkE,EAAO6kE,SAAU7kE,EAAO6kE,SAASp1C,aAGtDn6C,KAAKwvF,oBACVxvF,KAAKwvF,mBAAmBF,aAAatvF,KAAKgZ,MAAOhZ,KAAK4a,UAAW5a,KAAK0qB,OAAQ2kE,EAAUrvF,KAAK+pB,mBAAmBlqB,GAAIG,KAAK+pB,mBAAmB0lE,MAC5IrkF,GAAS,GAEJpL,KAAK0vF,kBACV1vF,KAAK0vF,iBAAiBJ,aAAatvF,KAAKgZ,MAAOhZ,KAAK4a,UAAW5a,KAAK0qB,OAAQ2kE,GAC5EjkF,GAAS,GAEJpL,KAAK2vF,yBACV3vF,KAAK2vF,wBAAwBC,aAAe5vF,KAAK0qB,OAAOklE,aACxD5vF,KAAK2vF,wBAAwBE,aAAe7vF,KAAK0qB,OAAOmlE,aACxD7vF,KAAK2vF,wBAAwBG,aAAe9vF,KAAK0qB,OAAOolE,aACxD9vF,KAAK2vF,wBAAwBL,aAAatvF,KAAKgZ,MAAOhZ,KAAKkd,WAAYld,KAAK2vF,wBAAyB3vF,KAAK4a,UAAW5a,KAAK0qB,OAAQ2kE,GAClIjkF,GAAS,GAEJpL,KAAK+vF,gCACV/vF,KAAK+vF,8BAA8BnV,SAAS56E,KAAKgZ,MAAOhZ,KAAK4a,UAAW5a,KAAK0qB,OAAQ2kE,GACrFjkF,GAAS,GAETA,EAAQ,CACRpL,KAAK+xE,eAAgB,EAErB,IAAK,IADD70D,KACKrgB,EAAK,EAAG6f,EAAK1c,KAAKgZ,MAAOnc,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IACI0D,EADMmc,EAAG7f,GAUb,GARKmD,KAAK06E,qBACN16E,KAAKgwF,WAAWzvF,GAChBP,KAAKiwF,yBAAyB1vF,IAElCP,KAAK0d,mBAAmBnd,MAAYxE,QAASwE,EAAKxE,QAASC,QAASuE,EAAKvE,UAAW,GACpFuE,EAAKuN,QAAQ6P,QAAQ,IAAIC,GAAKrd,EAAKuN,QAAQvV,MAAOgI,EAAKuN,QAAQxV,SAC/DiI,EAAKuN,QAAQ+P,QAAQtd,EAAKuN,QAAQgQ,aAClC9d,KAAKob,oBAAoB7a,GACrBA,EAAKo4C,QAAQliD,OAAS,EACtB,IAAK,IAAIJ,EAAI,EAAGA,EAAIkK,EAAKo4C,QAAQliD,OAAQJ,IAAK,CAE1C6mB,GADItR,EAAY5L,KAAK4a,UAAUra,EAAKo4C,QAAQtiD,KACvBwJ,IAAM+L,EAGnC,GAAIrL,EAAKm4C,SAASjiD,OAAS,EACvB,IAAK,IAAIspB,EAAI,EAAGA,EAAIxf,EAAKm4C,SAASjiD,OAAQspB,IAAK,CAC3C,IAAImsD,EAAalsE,KAAK4a,UAAUra,EAAKm4C,SAAS34B,IAC9C7C,EAAWgvD,EAAWrsE,IAAMqsE,GAIxC,IAAK,IAAI1gD,EAAK,EAAGC,EAAK9O,OAAOC,KAAKM,GAAasO,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACjE,IACI5f,EAEJ8kB,GAFI9kB,EAAYsR,EADLuO,EAAGD,IAEDxrB,KAAKgM,UAAUJ,IAE5BA,EAAUkC,QAAQ6P,QAAQ,IAAIC,QAAK3jB,OAAWA,IAC9C2R,EAAUkC,QAAQ+P,QAAQjS,EAAUkC,QAAQgQ,aAC5C9d,KAAKikF,WAAWr4E,GAChB5L,KAAKob,oBAAoBxP,GAE7B5L,KAAK+xE,eAAgB,EACrB/xE,KAAKsmF,aACEtmF,KAAKkX,eAAiBC,gBAAcwyE,QAA0B,WAAd3pF,KAAK4rB,MACxD5rB,KAAKqtE,sBAMb,OAHK+hB,GACDpvF,KAAK6pB,sBAAsBulE,GAExB1kE,GAKXwB,EAAQoV,UAAU4uD,YAAc,WAC5B,OAAO5mE,GAAUtpB,OAMrBksB,EAAQoV,UAAU6uD,YAAc,SAAU/5F,GACtC,OAAOuzB,GAAYvzB,EAAM4J,OAM7BksB,EAAQoV,UAAU8uD,cAAgB,SAAUn4D,GACxC,GAAIj4B,KAAKqwF,qBAAsB,CAE3B,OADWrwF,KAAKqwF,qBAAqBD,cAAcn4D,GAGvD,MAAO,IAMX/L,EAAQoV,UAAUgvD,MAAQ,SAAUr4D,GAC5Bj4B,KAAKqwF,sBACLrwF,KAAKqwF,qBAAqBC,MAAMr4D,IAMxC/L,EAAQoV,UAAUivD,SAAW,SAAUh2F,EAAKk4B,GACxCzyB,KAAK6pB,uBAAsB,GAC3B,IAAIxR,EACAoa,EAAMh8B,OAAS,GACfuJ,KAAKk4D,mBAET,IAAK,IAAIxhE,EAAI,EAAGA,EAAI+7B,EAAMh8B,OAAQC,IAAK,CAGnC,GAFA2hB,EAAS,IAAIunB,GAAUrlC,EAAK,QAASk4B,EAAM/7B,IAAI,GAC/C6D,EAAIk4B,MAAM37B,KAAKuhB,GACX9d,EAAIqX,SAAU,CACd,IAAIkG,EAAYvd,EAAIuT,QACpBvT,EAAIs/C,UAAU75C,KAAKmqB,eAAgB5vB,EAAIuT,QAAQ8D,SAASkG,EAAUlG,SAASnb,OAAS,QAEnF,CACY8D,EAAIuT,QACV8D,SAAS9a,KAAKyD,EAAIw/C,gBAAgBx/C,EAAIk4B,MAAMl4B,EAAIk4B,MAAMh8B,OAAS,KAE1E,KAAMuJ,KAAKkX,eAAiBC,gBAAckyD,UAAerpE,KAAKkX,eAAiBC,gBAAc23D,OAAQ,CACjG,IAAIjzD,GACAhgB,KAAM,wBAAyB0wF,WAAY,SAAUxwE,WAAYL,GAAYrD,GAC7E2D,WAAYN,GAAYnhB,GAAMuhB,SAAU,YAE5C9b,KAAKic,gBAAgBJ,IAGzB4W,EAAMh8B,OAAS,GACfuJ,KAAK04D,iBAETn+D,EAAIuT,QAAQ6P,QAAQ,IAAIC,GAAKrjB,EAAIhC,MAAOgC,EAAIjC,SAC5CiC,EAAIuT,QAAQ+P,QAAQtjB,EAAIuT,QAAQgQ,aAChC9d,KAAKob,oBAAoB7gB,GACzByF,KAAK6pB,uBAAsB,IAK/BqC,EAAQoV,UAAUkvD,eAAiB,SAAUC,EAAiBC,GAC1D,OAAOD,EAAkBC,GAK7BxkE,EAAQoV,UAAUqvD,kBAAoB,SAAUF,EAAiBC,GAC7D,OAAOD,GAAmBC,GAK9BxkE,EAAQoV,UAAUstD,UAAY,SAAUr0F,EAAKq2F,GACzC5wF,KAAK6pB,uBAAsB,GAC3B,IACIxR,EADAshC,EAASp/C,EAAIuT,QAEb8iF,EAAOn6F,OAAS,GAChBuJ,KAAKk4D,mBAET,IAAK,IAAIxhE,EAAI,EAAGA,EAAIk6F,EAAOn6F,OAAQC,IAAK,CACpC,GAAI6D,aAAega,GAGf,GAFA8D,EAAS,IAAItF,GAAgBxY,EAAK,cAAeq2F,EAAOl6F,IAAI,GAC5D6D,EAAI+d,YAAYxhB,KAAKuhB,GACjB9d,EAAIqX,UAEJ,IAAK,IADDrR,EAAOhG,EACF+7C,EAAM,EAAGA,EAAM/1C,EAAKuN,QAAQ8D,SAASnb,OAAQ6/C,IAClD,GAAsC,oBAAlC/1C,EAAKuN,QAAQ8D,SAAS0kC,GAAKz2C,GAA0B,CACrCU,EAAKuN,QAAQ8D,SAAS0kC,GAC5B1kC,SAAS9a,KAAKyD,EAAImgD,sBAAsBngD,EAAI+d,YAAY/d,EAAI+d,YAAY7hB,OAAS,GAAIuJ,KAAKJ,QAAQC,WAKpH85C,EAAO/nC,SAAS9a,KAAKyD,EAAImgD,sBAAsBngD,EAAI+d,YAAY/d,EAAI+d,YAAY7hB,OAAS,GAAIuJ,KAAKJ,QAAQC,UAG5G,GAAItF,aAAe6Y,GAAW,CAC/BiF,EAAS,IAAIrF,GAAezY,EAAK,cAAeq2F,EAAOl6F,IAAI,GAC3D6D,EAAI+d,YAAYxhB,KAAKuhB,GACrB,IAAI/d,EAAUq/C,EAAO/nC,SAAS,GAC1BpQ,EAAS,IAAI8a,GAAKhiB,EAAQyB,QAAUzB,EAAQ/B,MAAQ,EAAG+B,EAAQ0B,QAAU1B,EAAQhC,OAAS,EAAGgC,EAAQ/B,MAAO+B,EAAQhC,QACxHqhD,EAAO/nC,SAAS9a,KAAKyD,EAAIm0C,qBAAqBn0C,EAAI+d,YAAY/d,EAAI+d,YAAY7hB,OAAS,GAAI8D,EAAIorB,mBAAoBnkB,EAAQxB,KAAKmqB,eAAgBnqB,KAAKJ,QAAQC,KAEjK,KAAMG,KAAKkX,eAAiBC,gBAAckyD,UAAerpE,KAAKkX,eAAiBC,gBAAc23D,OAAQ,CACjG,IAAIjzD,GACAhgB,KAAM,yBAA0B0wF,WAAY,SAAUxwE,WAAYL,GAAYrD,GAC9E2D,WAAYN,GAAYnhB,GAAMuhB,SAAU,YAE5C9b,KAAKic,gBAAgBJ,IAGzB+0E,EAAOn6F,OAAS,GAChBuJ,KAAK04D,iBAETn+D,EAAIuT,QAAQ6P,QAAQ,IAAIC,GAAK+7B,EAAOphD,MAAOohD,EAAOrhD,SAClDiC,EAAIuT,QAAQ+P,QAAQ87B,EAAO77B,aAC3B9d,KAAKob,oBAAoB7gB,GACzByF,KAAK6pB,uBAAsB,IAE/BqC,EAAQoV,UAAUuvD,qBAAuB,SAAUt2F,EAAKq2F,EAAQv6F,EAAGyX,GAC/D,IAAK,IAAIpX,EAAI,EAAGA,EAAIoX,EAAQ8D,SAASnb,OAAQC,IAAK,CAC9C,IAAIijD,EAAS7rC,EAAQ8D,SAASlb,GAC9B,IAAKijD,aAAkBjsB,IAAiBisB,aAAkB1qB,KAClD0qB,EAAO95C,GAAG/H,MAAM,IAAM84F,EAAOv6F,GAAGwJ,GAAK,KAAM,CAC3C,IAAK,IAAIkgB,EAAI,EAAGA,EAAIxlB,EAAI+d,YAAY7hB,OAAQspB,IACxC,GAAI45B,EAAO95C,GAAG/H,MAAM,IAAMyC,EAAI+d,YAAYyH,GAAGlgB,GAAK,KAAM,CACpD,KAAMG,KAAKkX,eAAiBC,gBAAckyD,UAAW,CACjD,IAAIxtD,GACAhgB,KAAM,yBAA0B0wF,WAAY,SAAUxwE,WAAYL,GAAYnhB,EAAI+d,YAAYyH,IAC9F/D,WAAYN,GAAYnhB,GAAMuhB,SAAU,YAE5C9b,KAAKic,gBAAgBJ,GAEzBthB,EAAI+d,YAAYnS,OAAO4Z,EAAG,GAIlC,GADAjS,EAAQ8D,SAASzL,OAAOzP,EAAG,GACT,QAAdsJ,KAAK4rB,KAAgB,CACrB,IAAIhsB,EAAUyvB,GAAkBsqB,EAAO95C,GAAIG,KAAKJ,QAAQC,IACxD,GAAID,EAAS,CACT,IAAIkxF,EAAYzhE,GAAkBsqB,EAAO95C,GAAIG,KAAKJ,QAAQC,IAC1DixF,EAAUtzE,WAAW8R,YAAYwhE,GAEnBzhE,GAAkBsqB,EAAO95C,GAAK,QAASG,KAAKJ,QAAQC,MAElED,EAAUyvB,GAAkBsqB,EAAO95C,GAAK,QAASG,KAAKJ,QAAQC,KACtD2d,WAAW8R,YAAY1vB,GAEnC,IAAI6vB,EAAcJ,GAAkBsqB,EAAO95C,GAAK,gBAAiBG,KAAKJ,QAAQC,IAC1E4vB,GACAA,EAAYjS,WAAW8R,YAAYG,QAIvCzvB,KAAK2sE,yBASzBzgD,EAAQoV,UAAU2tC,aAAe,SAAU10E,EAAKq2F,GACxCA,EAAOn6F,OAAS,GAChBuJ,KAAKk4D,mBAET,IAAK,IAAI7hE,EAAIu6F,EAAOn6F,OAAS,EAAGJ,GAAK,EAAGA,IACpC,GAAIkE,EAAIqX,UAAYrX,EAAIqX,SAASnb,OAAS,EACtC,IAAK,IAAIspB,EAAI,EAAGA,EAAIxlB,EAAIuT,QAAQ8D,SAASnb,OAAQspB,IAC7C/f,KAAK6wF,qBAAqBt2F,EAAKq2F,EAAQv6F,EAAGkE,EAAIuT,QAAQ8D,SAASmO,SAInE/f,KAAK6wF,qBAAqBt2F,EAAKq2F,EAAQv6F,EAAGkE,EAAIuT,SAGlD8iF,EAAOn6F,OAAS,GAChBuJ,KAAK04D,kBAGbxsC,EAAQoV,UAAUyvD,oBAAsB,SAAUx2F,EAAKk4B,EAAOp8B,EAAGyX,GAC7D,IAAK,IAAIpX,EAAI,EAAGA,EAAIoX,EAAQ8D,SAASnb,OAAQC,IAAK,CAC9C,IAAIijD,EAAS7rC,EAAQ8D,SAASlb,GAC9B,GAAIijD,aAAkBtrC,IACdsrC,EAAO95C,GAAG/H,MAAM,IAAM26B,EAAMp8B,GAAGwJ,GAAK,KAAM,CAC1C,IAAK,IAAIkgB,EAAI,EAAGA,EAAIxlB,EAAIk4B,MAAMh8B,OAAQspB,IAClC,GAAI45B,EAAO95C,GAAG/H,MAAM,IAAMyC,EAAIk4B,MAAM1S,GAAGlgB,GAAK,KAAM,CAC9C,KAAMG,KAAKkX,eAAiBC,gBAAckyD,UAAW,CACjD,IAAIxtD,GACAhgB,KAAM,wBAAyB0wF,WAAY,SAAUxwE,WAAYL,GAAYnhB,EAAIk4B,MAAM1S,IACvF/D,WAAYN,GAAYnhB,GAAMuhB,SAAU,YAE5C9b,KAAKic,gBAAgBJ,GAEzBthB,EAAIk4B,MAAMtsB,OAAO4Z,EAAG,GAI5B,GADAjS,EAAQ8D,SAASzL,OAAOzP,EAAG,GACT,QAAdsJ,KAAK4rB,KAAgB,CACrB,IAAIhsB,EAAUyvB,GAAkBsqB,EAAO95C,GAAIG,KAAKJ,QAAQC,IACxDD,EAAQ4d,WAAW8R,YAAY1vB,QAG/BI,KAAK2sE,yBASzBzgD,EAAQoV,UAAU0tC,YAAc,SAAUz0E,EAAKk4B,GACvCA,EAAMh8B,OAAS,GACfuJ,KAAKk4D,mBAET,IAAK,IAAI7hE,EAAIo8B,EAAMh8B,OAAS,EAAGJ,GAAK,EAAGA,IACnC,GAAIkE,EAAIqX,UAAYrX,EAAIqX,SAASnb,OAAS,EACtC,IAAK,IAAIspB,EAAI,EAAGA,EAAIxlB,EAAIuT,QAAQ8D,SAASnb,OAAQspB,IAC7C/f,KAAK+wF,oBAAoBx2F,EAAKk4B,EAAOp8B,EAAGkE,EAAIuT,QAAQ8D,SAASmO,SAIjE/f,KAAK+wF,oBAAoBx2F,EAAKk4B,EAAOp8B,EAAGkE,EAAIuT,SAGhD2kB,EAAMh8B,OAAS,GACfuJ,KAAK04D,kBAUbxsC,EAAQoV,UAAUmgC,aAAe,SAAUuvB,EAAMvvE,GAC7C,IAAIlc,EAUJ,GARIA,EADAyrF,EAAK1yF,WAAW4f,QAAQ,MAAQ,EACxB8yE,EAAK1yF,WAER0yF,EAAK1yF,WAAW4f,QAAQ,KAAO,OACdjkB,IAAdwnB,EAA0B,OAASuvE,EAAK1yF,WAGxC0yF,EAAK1yF,WAAa,KAE1BmjB,EAAW,CACIC,GAAa1hB,MAC5BuF,EAAQ,QAAUA,EAAQ,MAAQkc,EAAY,MAElD,OAAOlc,GAEX2mB,EAAQoV,UAAUimD,aAAe,WACzBvnF,KAAKiiB,cAAcc,ahD3sE/B,SAAqC7jB,GACjC,IAAIuiB,EAAYC,GAAaxiB,GAMzB+xF,EAAUpvE,GAAkB,OAJ5BhiB,GAAMX,EAAQU,QAAQC,GAAK,gBAC3BK,MAAO,UAAYuhB,EAAUnpB,OAAS,YAAcmpB,EAAUlpB,MAAQ,oCACtEof,MAAO,oBAGXzY,EAAQU,QAAQkiB,aAAamvE,EAAS/xF,EAAQU,QAAQmiB,YgDosE9CmvE,CAAqBlxF,MACrBohB,GAAYphB,MAAM,GAClBohB,GAAYphB,MAAM,IAGlBijB,GAAoBjjB,OAG5BksB,EAAQoV,UAAU8kD,qBAAuB,WACrC,IAAI/lF,EAAW,IAAIud,GACnBvd,EAAWqhB,GAAa1hB,MACxB,IAAIJ,EAAU2hB,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,WACpDtH,EAAQyH,KAAKyhE,aAAazhE,KAAKzH,MAAO8H,EAAS9H,OAC/CD,EAAS0H,KAAKyhE,aAAazhE,KAAK1H,OAAQ+H,EAAS/H,QACjD4H,EAAQF,KAAKiiB,cAAcc,WAC3B,SAAWxqB,EAAQ,YAAcD,EAAS,QAC7B+H,EAAS/H,OAAS,WAAa+H,EAAS9H,MAAQ,uDAE7D,SAAWA,EAAQ,YAAcD,EAAS,yDAE1CilD,GACA19C,GAAMG,KAAKJ,QAAQC,GAAK,UACxBsxF,SAAY,IACZjxF,MAASA,GAERN,GAKDI,KAAK2gE,cAAgB/gE,EACrBI,KAAK2gE,cAAczqC,aAAa,QAASh2B,KALzCF,KAAK2gE,cAAgB9+C,GAAkB,MAAO07B,GAC9Cv9C,KAAKJ,QAAQ2vB,YAAYvvB,KAAK2gE,gBAMlC3gE,KAAK2gE,cAAczgE,MAAM2vD,WAAa7vD,KAAK0rB,iBAE/CQ,EAAQoV,UAAUumD,YAAc,WAC5B7nF,KAAKomF,uBACLzsD,GAAiB35B,KAAKJ,SAClBM,MAAO,SAAWF,KAAKyhE,aAAazhE,KAAKzH,OAAS,YAC5CyH,KAAKyhE,aAAazhE,KAAK1H,QAAU,yCAI/C4zB,EAAQoV,UAAU8vD,sBAAwB,SAAU5vF,EAAQ6vF,GACxD,IAAIC,EAAUtxF,KAAKuxF,UAAUvxF,KAAKJ,QAAQC,GAAK,uBAAwB2B,EAAOjJ,MAAOiJ,EAAOlJ,QAC5Fg5F,EAAQp7D,aAAa,QAASm7D,GAC9B,IAAIG,EAAkB53D,GAAiB,KACnC/5B,GAAMG,KAAKJ,QAAQC,GAAK,wBACxB8X,MAAS,6BAEb25E,EAAQ/hE,YAAYiiE,GACpB,IACI3hC,EAAaj2B,GAAiB,KADrB/5B,GAAMG,KAAKJ,QAAQC,GAAK,mBAAoB8X,MAAS,uBAElE25E,EAAQ/hE,YAAYsgC,GACpB7vD,KAAK2gE,cAAcpxC,YAAY+hE,IAEnCplE,EAAQoV,UAAUmwD,gBAAkB,SAAUjwF,EAAQ6vF,GAClD,IAAIK,EAAa1xF,KAAKuxF,UAAUvxF,KAAKJ,QAAQC,GAAK,gBAAiB2B,EAAOjJ,MAAOiJ,EAAOlJ,QACxFo5F,EAAWx7D,aAAa,QAAS,gBACjC,IAAIs4B,EAAU50B,GAAiB,KAAO/5B,GAAMG,KAAKJ,QAAQC,GAAK,YAAatH,MAAS,OAAQD,OAAU,SAClG+jB,EAAOud,GAAiB,QACxB/5B,GAAMG,KAAKJ,QAAQC,GAAK,aAAc7I,EAAK,IAAKC,EAAK,IAAKsB,MAAS,OAAQD,OAAU,OACrF2f,KAAQ,QAAUjY,KAAKJ,QAAQC,GAAK,cAExC2uD,EAAQj/B,YAAYlT,GACpBq1E,EAAWniE,YAAYi/B,GACvBxuD,KAAK2gE,cAAcpxC,YAAYmiE,GAC/B53D,GAAgB43D,GAAcxxF,MAASmxF,KAE3CnlE,EAAQoV,UAAUqwD,mBAAqB,SAAUnwF,EAAQ6vF,GACrD,IAAI53E,GACA5Z,GAAMG,KAAKJ,QAAQC,GAAK,oBACxBK,MAAS,SAAWsB,EAAOjJ,MAAQ,cAAgBiJ,EAAOlJ,OAAS,MAAQ+4F,GAG/E,GADArxF,KAAK4xF,gBAAkB/vE,GAAkB,MAAOpI,GAC9B,QAAdzZ,KAAK4rB,KAAgB,CACrB,IAAIimE,EAAa7xF,KAAKuxF,UAAUvxF,KAAKJ,QAAQC,GAAK,oBAAqB2B,EAAOjJ,MAAOiJ,EAAOlJ,QAC5Fu5F,EAAW37D,aAAa,QAAS,2BACjC27D,EAAW37D,aAAa,QAAS,mBACjC,IAAIk9C,EAAex5C,GAAiB,KAAO/5B,GAAMG,KAAKJ,QAAQC,GAAK,kBAC/DiyF,EAAsBl4D,GAAiB,QAC3C55B,KAAKozE,aAAeA,EACpBA,EAAal9C,aAAa,QAAS,wBACnC47D,EAAoBviE,YAAY6jD,GAChCye,EAAWtiE,YAAYuiE,GACvB9xF,KAAK4xF,gBAAgBriE,YAAYsiE,QAGjC7xF,KAAKozE,aAAezzB,GAAeyB,aAAaphD,KAAKJ,QAAQC,GAAK,WAAY2B,EAAOjJ,MAAOiJ,EAAOlJ,QACnG0H,KAAKozE,aAAal9C,aAAa,QAAS,uCACxCl2B,KAAK4xF,gBAAgBriE,YAAYvvB,KAAKozE,cAE1CpzE,KAAK2gE,cAAcpxC,YAAYvvB,KAAK4xF,kBAExC1lE,EAAQoV,UAAUioD,WAAa,WAC3B,IAAI8H,EAAc,0EAEd7vF,EADY+f,SAASC,eAAexhB,KAAKJ,QAAQC,IAC9BgoB,wBACnBkqE,E7C/yDZ,WACI,IAAIC,EAAQnwE,GAAkB,OAAS3hB,MAAS,oCAChDqhB,SAASqW,KAAKrI,YAAYyiE,GAC1B,IAAIC,EAAgBD,EAAMnqE,wBAAwBtvB,MAElDy5F,EAAM9xF,MAAMw/E,SAAW,SAEvB,IAAIwS,EAAQrwE,GAAkB,OAAS3hB,MAAS,eAChD8xF,EAAMziE,YAAY2iE,GAClB,IAAIC,EAAkBD,EAAMrqE,wBAAwBtvB,MAGpD,OADAy5F,EAAMx0E,WAAW8R,YAAY0iE,GACtBC,EAAgBE,E6CmyDAC,GACnBpyF,KAAK0e,SAAS2gE,cAAgB0S,EAC9B/xF,KAAK0e,SAAS8iD,gBAAgBhgE,EAAOjJ,MAAOiJ,EAAOlJ,QACnD0H,KAAKunF,eACLrsD,KAEAl7B,KAAKoxF,sBAAsB5vF,EAAQ6vF,GACnCrxF,KAAKyxF,gBAAgBjwF,EAAQ6vF,GAC7BrxF,KAAK2xF,mBAAmBnwF,EAAQ6vF,GAChCrxF,KAAKqyF,gBAAgB7wF,EAAQ6vF,GAC7BrxF,KAAKsyF,uBAAuB9wF,EAAQ6vF,GACpCrxF,KAAKuyF,kBAAkB/wF,EAAQ6vF,GAC/BrxF,KAAKwyF,mBAAmBhxF,EAAQ6vF,IAEpCnlE,EAAQoV,UAAUkxD,mBAAqB,SAAUhxF,EAAQ6vF,GACrD,IAAIj2D,EAAavZ,GAAkB,OAC/BhiB,GAAMG,KAAKJ,QAAQC,GAAK,uBACxBK,MAAS,SAAWsB,EAAOjJ,MAAQ,aAAeiJ,EAAOlJ,OAAS,MAAQ+4F,IAE1EoB,EAAgBzyF,KAAKuxF,UAAUvxF,KAAKJ,QAAQC,GAAK,sBAAuB2B,EAAOjJ,MAAOiJ,EAAOlJ,QACjGm6F,EAAcv8D,aAAa,QAAS,mBACpCu8D,EAAcv8D,aAAa,QAAS,wBACpCl2B,KAAK8qD,aAAelxB,GAAiB,KAAO/5B,GAAMG,KAAKJ,QAAQC,GAAK,oBACpEG,KAAK8qD,aAAa50B,aAAa,QAAS,0BACxCu8D,EAAcljE,YAAYvvB,KAAK8qD,cAC/B1vB,EAAW7L,YAAYkjE,GACvBzyF,KAAK2gE,cAAcpxC,YAAY6L,GAC/B,IAAIs3D,EAAc94D,GAAiB,KAAO/5B,GAAMG,KAAKJ,QAAQC,GAAK,qBAClEG,KAAK8qD,aAAav7B,YAAYmjE,GAC9B54D,GAAgB24D,GAAiBvyF,MAAO,0BAE5CgsB,EAAQoV,UAAUgxD,uBAAyB,SAAU9wF,EAAQ6vF,GACzD,IAAIsB,EAAc3yF,KAAKuxF,UAAUvxF,KAAKJ,QAAQC,GAAK,oBAAqB2B,EAAOjJ,MAAOiJ,EAAOlJ,QAC7Fq6F,EAAYz8D,aAAa,QAAS,wBAClC,IAAI08D,EAAgBh5D,GAAiB,KACjC/5B,GAAMG,KAAKJ,QAAQC,GAAK,gBACxB8X,MAAS,gBACTzX,MAAS,yBAEbyyF,EAAYpjE,YAAYqjE,GACxB,IAAIC,EAAiBj5D,GAAiB,KAClC/5B,GAAMG,KAAKJ,QAAQC,GAAK,mBACxB8X,MAAS,iBACTzX,MAAS,yBAEbyyF,EAAYpjE,YAAYsjE,GACxB7yF,KAAK2gE,cAAcpxC,YAAYojE,GAC/B74D,GAAgB64D,GAAezyF,MAASmxF,KAE5CnlE,EAAQoV,UAAU+wD,gBAAkB,SAAU7wF,EAAQ6vF,GAClDrxF,KAAKslB,UAAYzD,GAAkB,OAC/BhiB,GAAMG,KAAKJ,QAAQC,GAAK,aACxBK,MAAS,SAAWsB,EAAOjJ,MAAQ,cAAgBiJ,EAAOlJ,OAAS,6EAEnEqf,MAAS,iBAEb,IAAIm7E,EAAejxE,GAAkB,OACjChiB,GAAMG,KAAKJ,QAAQC,GAAK,iBACxBK,MAAS,2DAEbF,KAAKslB,UAAUiK,YAAYujE,GAC3B9yF,KAAK2gE,cAAcpxC,YAAYvvB,KAAKslB,YAExC4G,EAAQoV,UAAUixD,kBAAoB,SAAU/wF,EAAQ6vF,GACpD,IAAI0B,EAAiB/yF,KAAKuxF,UAAUvxF,KAAKJ,QAAQC,GAAK,mBAAoB2B,EAAOjJ,MAAOiJ,EAAOlJ,QAC3Fw2D,EAAcl1B,GAAiB,KAAO/5B,GAAMG,KAAKJ,QAAQC,GAAK,eAAgBK,MAAS,wBAC3F6yF,EAAexjE,YAAYu/B,GAC3B9uD,KAAK4xF,gBAAgBriE,YAAYwjE,GACjCj5D,GAAgBi5D,GAAkBp7E,MAAS,iBAAkBzX,MAASmxF,KAG1EnlE,EAAQoV,UAAUiwD,UAAY,SAAU1xF,EAAItH,EAAOD,GAC/C,IAAI06F,EAASzxE,SAASsY,gBAAgB,6BAA8B,OAEpE,OADAC,GAAgBk5D,GAAUnzF,GAAMA,EAAItH,MAASA,EAAOD,OAAUA,IACvD06F,GAEX9mE,EAAQoV,UAAUmlD,YAAc,SAAUwM,GACjCjzF,KAAK8rB,WACN9rB,KAAKkzF,WAETlzF,KAAKmzF,mBACLnzF,KAAKmmF,eAAe8M,IAGxB/mE,EAAQoV,UAAU6xD,iBAAmB,WAQjC,IACK,IARDC,EAAYpzF,KAAKurB,OAAO90B,OAAS,EAEjCymB,KACAm2E,KACAC,KAEAC,KAEK12F,EAAK,EAAG6f,EAAK1c,KAAKgZ,MAAOnc,EAAK6f,EAAGjmB,OAAQoG,IAAM,EAChDtC,EAAMmiB,EAAG7f,IACTgD,GAAKtF,EAAIsF,IAAMyZ,KACnBtZ,KAAKwzF,WAAWj5F,EAAK64F,GACrBC,EAAU94F,EAAIsF,IAAMtF,EAExB,IAAK,IAAIixB,EAAK,EAAGC,EAAKzrB,KAAKkd,WAAYsO,EAAKC,EAAGh1B,OAAQ+0B,IAAM,EACrDjxB,EAAMkxB,EAAGD,IACT3rB,GAAKtF,EAAIsF,IAAMyZ,KACnBtZ,KAAKwzF,WAAWj5F,EAAK64F,GACrBC,EAAU94F,EAAIsF,IAAMtF,EAExB,IAAK,IAAIs7C,EAAK,EAAGC,EAAK91C,KAAKurB,OAAQsqB,EAAKC,EAAGr/C,OAAQo/C,IAAM,CAErD,IAAK,IAAIG,EAAK,EAAGC,GADb8xB,EAAQjyB,EAAGD,IACa1tB,QAAS6tB,EAAKC,EAAGx/C,OAAQu/C,IAAM,CAEvD,GAAIq9C,EADA94F,EAAM07C,EAAGD,IAET,GAAMq9C,EAAU94F,aAAgB6Y,GAa3B,CAED,IADIxH,EAAYynF,EAAU94F,IACZkH,UAAYmK,EAAUwmC,SAAU,CAC1C,IAAIlwC,EAAamxF,EAAUznF,EAAUnK,UACjCU,EAAakxF,EAAUznF,EAAUwmC,UACjClwC,GAAcA,EAAW4L,SAAW3L,GAAcA,EAAW2L,QAC7D9N,KAAKmtF,eAAekG,EAAU94F,GAAMwtE,GAGpC7qD,EAAWpmB,KAAKu8F,EAAU94F,SAI9ByF,KAAKmtF,eAAekG,EAAU94F,GAAMwtE,QAzBpCsrB,EAAU94F,GAAKqX,SACf2hF,EAAOz8F,KAAKyD,GAEN84F,EAAU94F,GAAK6D,iBAAiB04C,IACtCu8C,EAAU94F,GAAK6D,MAAMk7C,SAASD,WAAWE,WACzC85C,EAAU94F,GAAK6D,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAAS,EAC5D68F,EAAUD,EAAU94F,GAAKsF,IAAMtF,EAG/ByF,KAAKyzF,UAAUJ,EAAU94F,GAAMwtE,GAqB/C,GAAI/nE,KAAKm5C,WACL,IAAK,IAAI8tC,EAAK,EAAGC,EAAKlnF,KAAKm5C,WAAW2vB,yBAA0Bme,EAAKC,EAAGzwF,OAAQwwF,IAAM,CAClF,IAAI1sF,EAAM2sF,EAAGD,GACbjnF,KAAKmtF,eAAe5yF,EAAKwtE,GAAO,IAI5C,IAAK,IAAI2rB,EAAK,EAAGC,EAAKh3E,OAAOC,KAAK02E,GAAYI,EAAKC,EAAGl9F,OAAQi9F,IAAM,CAC5Dn5F,EAAMo5F,EAAGD,GACb1zF,KAAK+Y,WAAWs6E,EAAU94F,IAC1ByF,KAAKm5C,WAAWi0C,YAAYiG,EAAU94F,GAAMyF,MAEhD,IAAK,IAAI4zF,EAAK,EAAGC,EAAWN,EAAQK,EAAKC,EAASp9F,OAAQm9F,IAAM,CACxDr5F,EAAMs5F,EAASD,GAAnB,IACI7rB,EAAQ/nE,KAAKif,eAAe+oD,eAAeztE,GAC/CyF,KAAKyzF,UAAUJ,EAAU94F,GAAMwtE,GAEnC,IAAK,IAAI+rB,EAAK,EAAGC,EAAe72E,EAAY42E,EAAKC,EAAat9F,OAAQq9F,IAAM,CACxE,IAAIloF,EAAYmoF,EAAaD,GACzB/rB,EAAQ/nE,KAAKif,eAAe+oD,eAAep8D,EAAU/L,IACzDG,KAAKmtF,eAAevhF,EAAWm8D,KAGvC77C,EAAQoV,UAAUkyD,WAAa,SAAUj5F,EAAK64F,GAC1C,IAAIrrB,EACAqrB,IACArrB,EAAQ/nE,KAAKif,eAAe+oD,eAAeztE,EAAIsF,KAE9CuzF,GAAcrrB,IACmC,IAA9C/nE,KAAKwtE,YAAYrlD,QAAQjK,QAAQ3jB,EAAIsF,KACrCG,KAAKwtE,YAAYrlD,QAAQrxB,KAAKyD,EAAIsF,IAG1CG,KAAKg0F,UAAUjsB,GAAS/nE,KAAKwtE,YAAajzE,IAE9C2xB,EAAQoV,UAAUqlD,YAAc,SAAUzqC,GACtC,IAAK,IAAIr/C,EAAK,EAAG6f,EAAKC,OAAOC,KAAKs/B,EAAQ3wB,QAAS1uB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAGrE,IAAK,IAFDqwB,EAAMxQ,EAAG7f,GAEJ2uB,EAAK,EAAGyoE,EADCj0F,KAAKurB,OAAO2B,GAAK/E,QACWqD,EAAKyoE,EAAcx9F,OAAQ+0B,IAAM,CAC3E,IAAIjxB,EAAM05F,EAAczoE,GACpBjrB,EAAOP,KAAK4a,UAAUrgB,QACUN,IAAhCiiD,EAAQ3wB,OAAO2B,GAAKgB,QACpBluB,KAAK05C,wBAAwBn5C,EAAKuN,QAASvN,EAAM27C,EAAQ3wB,OAAO2B,GAAKgB,UAEnC,IAA7BguB,EAAQ3wB,OAAO2B,GAAK+6C,MACzBjoE,KAAKq1D,SAAS90D,QAGWtG,IAA7BiiD,EAAQ3wB,OAAO2B,GAAK+6C,OACpBjoE,KAAKurB,OAAO2B,GAAK+6C,KAAO/rB,EAAQ3wB,OAAO2B,GAAK+6C,MAGlC,QAAdjoE,KAAK4rB,MACL5rB,KAAKqtE,uBAGbnhD,EAAQoV,UAAUslD,qBAAuB,SAAU1qC,GAC/C,IAAIg4C,GAASl0F,KAAK0e,SAASkE,iBAAmBs5B,EAAQ5wB,eAAe1I,kBAAoB,EACrFuxE,EAAQn0F,KAAK0e,SAASoE,eAAiBo5B,EAAQ5wB,eAAexI,gBAAkB,EAChFszC,GACAg+B,eAAgBp0F,KAAKsrB,eAAexI,eAAgBuxE,iBAAkBr0F,KAAKsrB,eAAe1I,iBAC1F0xE,eAAgBt0F,KAAKsrB,eAAelI,eAAgBmxE,cAAev0F,KAAKsrB,eAAejI,cACvFmxE,YAAax0F,KAAK0e,SAASgF,aAElB,IAATwwE,GAAuB,IAATC,GACdn0F,KAAK+8E,IAAImX,EAAMC,GAEnB,IAKI1uC,GACA2Q,SAAUA,EAAUC,UALpB+9B,eAAgBp0F,KAAKsrB,eAAexI,eAAgBuxE,iBAAkBr0F,KAAKsrB,eAAe1I,iBAC1F0xE,eAAgBt0F,KAAKsrB,eAAelI,eAAgBmxE,cAAev0F,KAAKsrB,eAAejI,cACvFmxE,YAAax0F,KAAK0e,SAASgF,aAGanhB,OAAQvC,MAEpDA,KAAKy2D,aAAanyB,eAAamwD,aAAchvC,GAC3B,WAAdzlD,KAAK4rB,MAAsB5rB,KAAKiT,YAAc2C,qBAAmBC,gBACjE7V,KAAKqtE,uBAGbnhD,EAAQoV,UAAU4xD,SAAW,YAErBlzF,KAAK00F,mBAAuB10F,KAAK29E,YAAct5C,aAAWwiD,kBACtD7mF,KAAK+pB,mBAAmBigE,aAAehqF,KAAK+pB,mBAAmBogE,qBAAqBH,aACpFhqF,KAAKgZ,MAAQhZ,KAAK20F,aAAa30F,KAAK+pB,mBAAmBigE,aAAa,GACpEhqF,KAAKkd,WAAald,KAAK20F,aAAa30F,KAAK+pB,mBAAmBogE,qBAAqBH,aAAa,IAEzFhqF,KAAK+pB,mBAAmBigE,aAAehqF,KAAK+pB,mBAAmBigE,YAAY4K,iBACzB36F,IAAvD+F,KAAK+pB,mBAAmBigE,YAAY4K,WAAWC,IAC/C70F,KAAK00F,kBAAkBI,WAAW90F,KAAK+pB,mBAAoB/pB,MAG3DA,KAAK00F,kBAAkBxB,SAASlzF,KAAK+pB,mBAAoB/pB,QAIrEksB,EAAQoV,UAAUqzD,aAAe,SAAUC,EAAYxwB,GACnD,IACI1tE,EADAsiB,KAEJ,IAAKtiB,EAAI,EAAGA,EAAIk+F,EAAWn+F,OAAQC,IAAK,CACpC,IAAI0oB,EAAMw1E,EAAWl+F,GACjB6J,EAAO6jE,EAASpkE,KAAK+0F,SAAS31E,GAAK,GAAQpf,KAAK+0F,SAAS31E,GAAK,IAC9D7e,IAAQA,EAAKV,IAAQ2kB,GAAexL,EAAOzY,EAAKV,KAAQ2kB,GAAexL,EAAOzY,EAAKV,KACnFmZ,EAAMliB,KAAKyJ,GAGnB,UAEJ2rB,EAAQoV,UAAUyzD,SAAW,SAAU31E,EAAKglD,GACxC,IAAI1tE,EACAs+F,EAAS5wB,EAASpkE,KAAK+pB,mBAAqB/pB,KAAK+pB,mBAAmBogE,qBACpE/zF,KAcJ,GAbAA,EAAKyJ,GAAKuf,EAAI41E,EAAOn1F,IAAMuf,EAAI41E,EAAOn1F,IAAMyZ,KACxC07E,EAAOvzF,WACPrL,EAAKqL,SAAW2d,EAAI41E,EAAOvzF,WAE3BuzF,EAAO5iD,WACPh8C,EAAKg8C,SAAWhzB,EAAI41E,EAAO5iD,WAE3BhzB,EAAI41E,EAAOC,eAAiB71E,EAAI41E,EAAOE,gBACvC9+F,EAAK2K,aAAgB/J,EAAKmB,OAAOinB,EAAI41E,EAAOC,eAAgBh+F,EAAKkB,OAAOinB,EAAI41E,EAAOE,iBAEnF91E,EAAI41E,EAAOG,eAAiB/1E,EAAI41E,EAAOI,gBACvCh/F,EAAKyU,aAAgB7T,EAAKmB,OAAOinB,EAAI41E,EAAOG,eAAgBl+F,EAAKkB,OAAOinB,EAAI41E,EAAOI,iBAEnFJ,EAAO7L,WAAWkM,cAAgBL,EAAO7L,WAAWkM,aAAa5+F,OAAS,EAC1E,IAAKC,EAAI,EAAGA,EAAIs+F,EAAO7L,WAAWkM,aAAa5+F,OAAQC,IACnDN,EAAK4+F,EAAO7L,WAAWkM,aAAa3+F,IAAM0oB,EAAI41E,EAAO7L,WAAWkM,aAAa3+F,IAGrF,OAAON,GAEX81B,EAAQoV,UAAUmyD,UAAY,SAAUl5F,EAAKwtE,GACzC/nE,KAAK+xE,eAAgB,EACrB/xE,KAAK+Y,WAAWxe,EAAKwtE,GACrB/nE,KAAK+xE,eAAgB,GAEzB7lD,EAAQoV,UAAU6rD,eAAiB,SAAU5yF,EAAKwtE,EAAOutB,GACrDt1F,KAAK+xE,eAAgB,EACrB/xE,KAAK+Y,WAAWxe,EAAKwtE,EAAOutB,GAC5Bt1F,KAAKitF,YAAY1yF,GACjByF,KAAK+xE,eAAgB,GAEzB7lD,EAAQoV,UAAU0yD,UAAY,SAAUjsB,EAAOxtE,GAE3C,IAAIg7F,EAAextB,EACnB,IAAsB,IAAlB,EAAMwB,OAAe,CACrB,KAAOgsB,EAAa9qB,YAAY8qB,EAAa/qB,aAAe,IACxDzC,EAAMyC,eAEVjwE,EAAIgvE,SAAWgsB,EAAa/qB,iBAE3B,CACD,IAAI9qD,EAAQnlB,EAAIgvE,OAChB,GAAIgsB,EAAa9qB,YAAY/qD,GAEzB,IACK,IAFDyzD,EAAcx2D,OAAOC,KAAK24E,EAAa9qB,aAAah0E,OAE/CC,EAAI,EAAGA,EAAIy8E,EAAaz8E,IAC7B,GAAIA,IAAMgpB,EAAO,CACb,IAAK,IAAIwyB,EAAMihC,EAAajhC,EAAMxyB,EAAOwyB,IACrCqjD,EAAa9qB,YAAYv4B,GAAOqjD,EAAa9qB,YAAYv4B,EAAM,GAC3DlyC,KAAK4a,UAAU26E,EAAa9qB,YAAYv4B,MACxClyC,KAAK4a,UAAU26E,EAAa9qB,YAAYv4B,IAAMq3B,OAASr3B,GAG/DqjD,EAAa9qB,YAAY/zE,GAAK6D,EAAIsF,MAOtDqsB,EAAQoV,UAAUkoD,wBAA0B,WACxC,IAAK,IAAI3sF,EAAK,EAAG6f,EAAK1c,KAAKurB,OAAQ1uB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACrD,IAAIkrE,EAAQrrD,EAAG7f,GACfkrE,EAAMwB,OAASvpE,KAAKurB,OAAOrN,QAAQ6pD,GACnC/nE,KAAKutE,iBAAiBxF,EAAMwB,QAAUxB,EAAMloE,GAEhD,GAA2B,IAAvBG,KAAKurB,OAAO90B,OAAc,CAK1BuJ,KAAKif,eAAequD,UAHhBztE,GAAI,gBAAiBquB,SAAS,EAAM+5C,MAAM,EAAO9/C,WAAaohD,OAAQ,EACtEiB,cAAe,EAAGC,iBAI1BzqE,KAAKguE,eAAehuE,KAAKurB,OAAOvrB,KAAKurB,OAAO90B,OAAS,GAAGoJ,KAG5DqsB,EAAQoV,UAAU0nC,UAAY,WAC1BhpE,KAAKoqE,aAAapB,aAEtB98C,EAAQoV,UAAUk0D,iBAAmB,SAAUj7F,EAAKwtE,EAAOutB,GACvD,GAAIA,EAAgB,CAChB,IAAI36B,EAA2B36D,KAAKif,eAAe07C,8BAAyB1gE,OAAWA,EAAWM,EAAIuT,QAAQtM,QAE9G,GADAumE,EAAM0C,YAAYlwE,EAAIgvE,QAAUhvE,EAAIsF,IAC/B86D,EAA0B,CAE3B,IAAK,IADDp6D,EAAOhG,aAAega,GAAOvU,KAAKgZ,MAAQhZ,KAAKkd,WAC1CxmB,EAAI,EAAGA,GAAK6J,EAAK9J,OAAQC,IAC1B6J,EAAK7J,IAAM6D,EAAIsF,KAAOU,EAAK7J,GAAGmJ,IAC9BU,EAAK4F,OAAOzP,EAAG,UAGhBqxE,EAAM0C,YAAYlwE,EAAIgvE,WAKzCr9C,EAAQoV,UAAUvoB,WAAa,SAAUxe,EAAKwtE,EAAOutB,EAAgBltC,GAEjE,QADuB,IAAnBktC,IAA6BA,GAAiB,QACtCr7F,IAARM,EAAmB,CAWnB,GAVI+6F,IACKvtB,IACD/nE,KAAKwzF,WAAWj5F,GAAK,GACrBwtE,EAAQ/nE,KAAKwtE,cAGbjzE,aAAega,IAAQha,aAAe6Y,KACtCpT,KAAKg0F,UAAUjsB,EAAOxtE,IAG1BA,aAAega,IACf,GAAI+gF,EAAgB,CAChB,GAAe,WAAX/6F,EAAIsF,GAAiB,CAErB,GADI41F,EAAc7xE,GAAY5jB,KAAK6qB,iBAClB,EACT6qE,EAAWD,EAAYl7F,EAAKyF,QAChB01F,IAAan7F,GACzB2iC,GAAaw4D,EAAUn7F,IAInCyF,KAAK21F,SAASp7F,EAAKyF,KAAKJ,QAAQC,UAGnC,GAAItF,aAAe6Y,GAAW,CAC/B,IAAIqiF,EACJ,GADIA,EAAc7xE,GAAY5jB,KAAK+qB,sBAClB,CACb,IAAI2qE,GAAAA,EAAWD,EAAYl7F,EAAKyF,QAChB01F,IAAan7F,GACzB2iC,GAAaw4D,EAAUn7F,GAEvBA,EAAIpB,SAAS1C,QACT8D,EAAIsB,OAAStB,EAAIpB,SAAS,GAAG0C,OAC7BtB,EAAIpB,aAIhB,IAAI+I,EAAalC,KAAK4a,UAAUrgB,EAAIkH,UAChCU,EAAanC,KAAK4a,UAAUrgB,EAAI63C,UAapC,QAZmBn4C,IAAfiI,GAA4ByS,GAAczS,KAC1C3H,EAAIyG,cAAgBhB,KAAK41F,kBAAkB1zF,EAAY3H,GAAK,GACxDA,EAAI2lC,eACJ3lC,EAAI4G,kBAAoBnB,KAAK6yC,WAAW3wC,EAAW4L,QAASvT,EAAI2lC,qBAGrDjmC,IAAfkI,GAA4BmS,GAAanS,KACzC5H,EAAImH,cAAgB1B,KAAK41F,kBAAkBzzF,EAAY5H,GAAK,GACxDA,EAAI83C,eACJ93C,EAAI+H,kBAAoBtC,KAAK6yC,WAAW1wC,EAAW2L,QAASvT,EAAI83C,iBAGnEijD,EAAgB,CAEjB5kE,GAAgBn2B,EADHA,EAAIwzC,mBAAmBxzC,EAAIsB,OAGxCy5F,GACA/6F,EAAIg5B,KAAKvzB,MAEb,IAAK,IAAI+f,EAAI,EAAGA,EAAIxlB,EAAIuT,QAAQ8D,SAASnb,OAAQspB,IACzC/f,KAAK8oF,UAAUvuF,EAAIuT,QAAQ8D,SAASmO,GAAG3pB,QACvCmE,EAAIuT,QAAQ8D,SAASmO,GAAG0V,eACpBz1B,KAAK8oF,UAAUvuF,EAAIuT,QAAQ8D,SAASmO,GAAG3pB,MAAMq/B,gBAGzDl7B,EAAIuT,QAAQ6P,QAAQ,IAAIC,QAAK3jB,OAAWA,IACxCM,EAAIuT,QAAQ+P,QAAQtjB,EAAIuT,QAAQgQ,aAChC,IAAK,IAAIznB,EAAI,EAAGA,EAAIkE,EAAIuT,QAAQ8D,SAASnb,OAAQJ,IAC7C2J,KAAK8oF,UAAUvuF,EAAIuT,QAAQ8D,SAASvb,GAAGD,SACvC4J,KAAK8oF,UAAUvuF,EAAIuT,QAAQ8D,SAASvb,GAAGD,MAAMq/B,eACzCl7B,EAAIuT,QAAQ8D,SAASvb,GAAGo/B,eAGpC,GAAIl7B,aAAega,IAAQha,EAAIqX,UAAYrX,EAAIud,UAC3C,IAAK,IAAIphB,EAAI,EAAGA,EAAI6D,EAAIqX,SAASnb,OAAQC,IACrCsJ,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IAAIqF,QAAUiE,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IAAIoX,QAAQ/R,QAClFiE,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IAAIsF,QAAUgE,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IAAIoX,QAAQ9R,QAS1F,GANIgE,KAAKm5C,YAAc5+C,aAAega,IACZ,SAAnBha,EAAI6D,MAAMvC,MAAmBtB,EAAI6D,MAAMka,YAAY7hB,OAAS,GAC/DuJ,KAAKm5C,WAAW8qC,WAAW1pF,EAAKyF,MAEpCA,KAAKw1F,iBAAiBj7F,EAAKwtE,EAAOutB,GAClCt1F,KAAK4a,UAAUrgB,EAAIsF,IAAMtF,EACrBA,aAAega,IAAQha,EAAIqX,SAAU,CAChCw2C,GAAU7tD,EAAIud,WACf9X,KAAK82E,kBAAkBv8E,GAAK,GAEhCyF,KAAKolF,WAAW7qF,EAAIsF,IAAMtF,EAAIqX,SAC9B,IAASlb,EAAI,EAAGA,EAAI6D,EAAIqX,SAASnb,OAAQC,IAAK,CAC1C,IAAI6J,EAAQP,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IACpC6J,IACAA,EAAKsa,SAAWtgB,EAAIsF,IAGvBG,KAAK8rB,YAAavxB,EAAI8R,aAAgB9R,EAAIud,WAC3C9X,KAAKif,eAAei3D,cAAc37E,GAAMA,GAAMA,EAAI8R,aAAerV,EAAGuD,EAAIwB,QAAS9E,EAAGsD,EAAIyB,UAAW,GAG3GgE,KAAKikF,WAAW1pF,IAEA,IAAhBA,EAAI2zB,SACJluB,KAAK05C,wBAAwBn/C,EAAIuT,QAASvT,GAAK,IAGvD2xB,EAAQoV,UAAUu1C,YAAc,SAAUt8E,EAAKg3B,EAAMskE,GACjD,IAAI9nF,EAAa8nF,EAAUt7F,EAAIuT,QAAQC,WAAWxV,MAAQgC,EAAIuT,QAAQC,WAAWzV,OAC7Ey6B,EAAK,EAAY,GAAMxB,EAAOxjB,GAAcA,EAAc,EAC1DilB,EAAK,EAAY,EAAI,GAAMzB,EAAOxjB,GAAcA,EACjCxT,EAAIwB,QACJxB,EAAIyB,QACvBgE,KAAK29E,aAAet5C,aAAWyxD,YAC/B91F,KAAKqb,MAAM9gB,EAAKw4B,EAAIC,GAAMh8B,EAAG,GAAKC,EAAG,KACrC+I,KAAK29E,cAAgBt5C,aAAWyxD,aAEpC5pE,EAAQoV,UAAU2uD,yBAA2B,SAAU1vF,GAC1B,wBAArBP,KAAK0qB,OAAO7uB,MAAuD,qBAArBmE,KAAK0qB,OAAO7uB,MACrC,4BAArBmE,KAAK0qB,OAAO7uB,OAERmE,KAAK+1F,wBAAwBx1F,EAAMA,EAAK65C,YACxCp6C,KAAK+1F,wBAAwBx1F,EAAMA,EAAK85C,gBAIpDnuB,EAAQoV,UAAUy0D,wBAA0B,SAAUx1F,EAAMzB,GACxD,GAAmB,SAAfA,EAAKV,OAC4B,SAA7BU,EAAKga,qBAA6D,SAA3Bha,EAAK+Z,mBAC1B,KAAlB/Z,EAAK4Q,OAAO1Y,GAA8B,IAAlB8H,EAAK4Q,OAAOzY,EAAS,CAC7C,IAAI++F,EAAch2F,KAAK6yC,WAAWtyC,EAAKuN,QAAS,gBAC5C/R,OAAU,EACVC,OAAU,EACkB,gBAA5BgE,KAAK0qB,OAAO5Z,aAA6D,gBAA5B9Q,KAAK0qB,OAAO5Z,aACzD/U,EAAU,GACVC,EAAsC,gBAA5BgE,KAAK0qB,OAAO5Z,YAAgC,EAAI,GAEzB,gBAA5B9Q,KAAK0qB,OAAO5Z,aAA6D,gBAA5B9Q,KAAK0qB,OAAO5Z,cAC9D/U,EAAsC,gBAA5BiE,KAAK0qB,OAAO5Z,YAAgC,EAAI,EAC1D9U,EAAU,IAEdg6F,EAAY5wD,6BAA6BrpC,EAASC,EAAS,YAC3Dg6F,EAAYl9E,oBAAsB,SAClCk9E,EAAYn9E,kBAAoB,SAChCtY,EAAKuN,QAAQ6P,QAAQ,IAAIC,GAAKrd,EAAKuN,QAAQvV,MAAOgI,EAAKuN,QAAQxV,SAC/DiI,EAAKuN,QAAQ+P,QAAQtd,EAAKuN,QAAQgQ,eAO9CoO,EAAQoV,UAAUw1C,kBAAoB,SAAUv2E,EAAM01F,GAClD,GAAK11F,EAAKqR,UAAYrR,EAAKqR,SAASnb,OAAS,IAAO8J,EAAKuX,WAAgBvX,EAAc,UAAG,CACtF,IAAI21F,EAAQl2F,KAAK4a,UAAUra,EAAKV,IAChC,KAAMG,KAAK29E,YAAct5C,aAAW8xD,cAAmBn2F,KAAK29E,YAAct5C,aAAWyxD,aAAc,CAC/F,IAAII,EAAMn6F,SAAaiE,KAAKkX,eAAiBC,gBAAcC,YAClDpX,KAAKkX,eAAiBC,gBAAcw1E,aAQzCuJ,EAAMn6F,QAAUwE,EAAKuN,QAAQ/R,YAR2B,CACxDiE,KAAK29E,aAAet5C,aAAW8xD,aAC/B,IAAI7uF,EAAS4uF,EAAMn6F,QAAUwE,EAAKuN,QAAQ/R,QAC1Cm6F,EAAMn6F,QAAUwE,EAAKuN,QAAQ/R,QAC7BiE,KAAKmb,KAAK+6E,EAAO5uF,EAAO,GACxBtH,KAAK29E,cAAgBt5C,aAAW8xD,aAKpC,IAAID,EAAMl6F,SAAagE,KAAKkX,eAAiBC,gBAAcC,WAQvD8+E,EAAMl6F,QAAUuE,EAAKuN,QAAQ9R,YARuC,CACpEgE,KAAK29E,aAAet5C,aAAW8xD,aAC/B,IAAItvF,EAASqvF,EAAMl6F,QAAUuE,EAAKuN,QAAQ9R,QAC1Ck6F,EAAMl6F,QAAUuE,EAAKuN,QAAQ9R,QAC7BgE,KAAKmb,KAAK+6E,EAAO,EAAGrvF,GACpB7G,KAAK29E,cAAgBt5C,aAAW8xD,aAKhCn2F,KAAKkX,iBACLg/E,EAAM39F,MAAQgI,EAAKuN,QAAQC,WAAWxV,MACtC29F,EAAM59F,OAASiI,EAAKuN,QAAQC,WAAWzV,SAI/C29F,GACK11F,EAAKqR,UAAYrR,EAAKqR,SAASnb,OAAS,SACHwD,IAAlC+F,KAAK4a,UAAUra,EAAKV,IAAItH,MACxByH,KAAK62E,YAAYt2E,EAAMP,KAAK4a,UAAUra,EAAKV,IAAItH,OAAO,GAGtDyH,KAAK4a,UAAUra,EAAKV,IAAItH,MAAQgI,EAAKuN,QAAQC,WAAWxV,WAErB0B,IAAnC+F,KAAK4a,UAAUra,EAAKV,IAAIvH,OACxB0H,KAAK62E,YAAYt2E,EAAMP,KAAK4a,UAAUra,EAAKV,IAAIvH,QAAQ,GAGvD0H,KAAK4a,UAAUra,EAAKV,IAAIvH,OAASiI,EAAKuN,QAAQC,WAAWzV,SAKzE4zB,EAAQoV,UAAUq0D,SAAW,SAAUp7F,EAAKw5B,EAAWq0B,GACnD,IAEInoD,EAFA05C,EAASp/C,EAAI+4B,gBACb8iE,EAAgB,IAAIpmE,GAKxB,GAHK2pB,EAAO/nC,WACR+nC,EAAO/nC,aAEPrX,EAAIqX,SAAU,CAEd,GADA+nC,EAAOpT,iBAAkB,EACrBhsC,EAAIud,WAAqC,SAAvBvd,EAAIud,UAAUjc,KAChC,IAAK,IAAInF,EAAI,EAAGA,EAAI6D,EAAIqX,SAASnb,OAAQC,IAAK,CAC1C,IAAI2/F,EAAkB,IAAIrmE,GACtBpiB,EAAQ5N,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IACxC2/F,EAAgBzkF,YAChBykF,EAAgBzkF,SAAS9a,KAAK8W,EAAME,SAChCF,GACA+rC,EAAOv5B,UAAUxS,EAAME,QAASF,EAAMkN,SAAUlN,EAAMqN,YAAarN,EAAMumC,QAASvmC,EAAMwmC,iBAKhG,IAAS19C,EAAI,EAAGA,EAAI6D,EAAIqX,SAASnb,OAAQC,IACrC,GAAIsJ,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IAAK,CAC7BkX,EAAQ5N,KAAK4a,UAAUrgB,EAAIqX,SAASlb,IACxCsJ,KAAKwuF,oBAAoBj0F,EAAKqT,EAAOlX,GACrCijD,EAAO/nC,SAAS9a,KAAK8W,EAAME,SAIvCsoF,EAAcv2F,GAAK,kBACnBu2F,EAAcl2F,MAAM+X,KAAO,OAC3Bm+E,EAAcl2F,MAAMgY,YAAc,OAClCk+E,EAAct9E,oBAAsB,UACpCs9E,EAAcv9E,kBAAoB,UAClC8gC,EAAOz5C,MAAQ3F,EAAI2F,MACnBk2F,EAAcxkF,YACdwkF,EAAcvxD,kBAAmB,EAC7BtqC,EAAIud,YACJs+E,EAAcpuE,aAAe,UAE5BztB,EAAIud,WAAqC,SAAvBvd,EAAIud,UAAUjc,MACjC89C,EAAO/nC,SAAS9a,KAAKs/F,OAGxB,CACD,IAAIlsE,EAAkBtG,GAAY5jB,KAAKkqB,iBACnCA,IACAjqB,EAAUiqB,EAAgB3vB,EAAKyF,OAE9BC,IACDA,EAAU1F,EAAIg5B,KAAKvzB,OAEvB25C,EAAO/nC,SAAS9a,KAAKmJ,GAGzB,IAAIwuC,EACJA,EAAiB7qB,GAAY5jB,KAAKmqB,iBAE7B5vB,EAAIqX,SAAW+nC,EAAS15C,GAASs4B,YADlCkW,IAIgDl0C,EAAI+d,YAAY7hB,OAAS8D,EAAI+d,YAAY,GAAGrY,QAAU1F,EAAIsF,IAE9G,IAAIiY,EAAYvd,EAAIqX,SAAWwkF,EAAgBz8C,EAW/C,GAVAp/C,EAAIigD,gBAAgBx6C,KAAKmqB,eAAgBrS,EAAW9X,KAAKJ,QAAQC,KAAI8V,GAAa3V,OAClFzF,EAAIs/C,UAAU75C,KAAKmqB,eAAgBrS,GACnCvd,EAAI2/C,UAAUl6C,KAAKmqB,eAAgBnqB,KAAK0qB,OAAQ5S,EAAWic,GAC3D4lB,EAAOh8B,QAAQ,IAAIC,GAAKrjB,EAAIhC,MAAOgC,EAAIjC,SACnCqhD,aAAkBhG,GAClBgG,EAAO97B,QAAQ87B,EAAO77B,aAAa,GAGnC67B,EAAO97B,QAAQ87B,EAAO77B,aAEH,aAAnBvjB,EAAI6D,MAAMvC,KAAqB,CAC/B,IAAIy6F,KACAC,OAAW,EACXC,EAA0C,eAA1Bj8F,EAAI6D,MAAM0S,YAE1BylF,EADAC,GACYj8F,EAAI6D,MAAMihB,OAAS,EAAI,IAC5B9kB,EAAI6D,MAAMwhB,OAAOnpB,OAAS,EAAI,EAAI,GAG7B8D,EAAI6D,MAAMihB,OAAS,EAAI,EAEvC,IAAIo3E,OAAc,EAEdA,EADAD,EACc,EAGAj8F,EAAI6D,MAAMwhB,OAAOnpB,OAAS,EAAI,EAAI,EAEpD,IAAI0oB,EAAO5kB,EAAIuT,QAAQ8D,SAAS,GAChC,GAAIrX,EAAI6D,MAAM0hB,MAAMrpB,OAAS,EACzB,IAASC,EAAI,EAAGA,EAAI6D,EAAI6D,MAAM0hB,MAAMrpB,OAAQC,IAAK,CAC7C,IAAK,IAAIL,EAAI,EAAGA,EAAIkE,EAAI6D,MAAM0hB,MAAMppB,GAAGq/B,WAAWt/B,OAAQJ,IAAK,CAC3D,IAAIkK,EAAOhG,EAAI6D,MAAM0hB,MAAMppB,GAAGq/B,WAAW1/B,GACzCkK,EAAKsa,SAAWsE,EAAK5C,KAAKg6E,GAAU/5E,MAAMi6E,GAAa7kF,SAAS,GAAG/R,GACnEG,KAAK+Y,WAAWxY,GAChBP,KAAKgZ,MAAMliB,KAAKyJ,GAChB+1F,EAAgBx/F,KAAKyJ,GACrB,IAAIm2F,EAAWn2F,EAAKuN,QAChB0oF,IACAC,EAAc,GAEdD,GAAiBE,EAAS3oF,WAAWxV,MAAQm+F,EAAS/zF,OAAOC,KAAOuc,EAAK5C,KAAKg6E,GAAU/5E,MAAM,GAAGzO,WAAWxV,QAC5Gk+F,IACAC,EAAS/zF,OAAOC,KAAO8zF,EAAS/zF,OAAOC,KAAOuc,EAAK5C,KAAKg6E,GAAU/5E,MAAM,GAAGzO,WAAWxV,OAE1Fm+F,EAAS/4E,QAAQ,IAAIC,GAAKrd,EAAKhI,MAAOgI,EAAKjI,SAC3Co+F,EAAS74E,QAAQ64E,EAAS54E,aAC1BqB,EAAK5C,KAAKg6E,GAAU/5E,MAAMi6E,GAAa7kF,SAAS,GAAGA,SAAS9a,KAAK4/F,GAErEF,EAAgBD,IAAaE,IAGrCt3E,EAAKxB,QAAQ,IAAIC,GAAKrjB,EAAIhC,MAAOgC,EAAIjC,SACrC6mB,EAAKtB,QAAQ87B,EAAO77B,aACpB,IAASpnB,EAAI,EAAGA,EAAI4/F,EAAgB7/F,OAAQC,IACxC4/F,EAAgB5/F,GAAGqF,QAAUu6F,EAAgB5/F,GAAGoX,QAAQ/R,QACxDu6F,EAAgB5/F,GAAGsF,QAAUs6F,EAAgB5/F,GAAGoX,QAAQ9R,QAG5DzB,aAAega,IAAQha,EAAIud,YAAcvd,EAAIhC,MAAQohD,EAAOxtC,YAAY5T,OAASgC,EAAIjC,OAASqhD,EAAOxtC,YAAY7T,SACjHqhD,EAAOn4C,OAAOxK,GAAK2iD,EAAOxtC,YAAYnV,GAAK2iD,EAAOn4C,OAAOvK,GAAK0iD,EAAOxtC,YAAYlV,IACjFsD,EAAIhC,MAAQohD,EAAOphD,MAAQohD,EAAOxtC,YAAY5T,MAC9CgC,EAAIjC,OAASqhD,EAAOrhD,OAASqhD,EAAOxtC,YAAY7T,OAChDqhD,EAAOh8B,QAAQ,IAAIC,GAAKrjB,EAAIhC,MAAOgC,EAAIjC,SACvCqhD,EAAO97B,QAAQ87B,EAAO77B,cAEtBvjB,EAAIud,WAAoC,SAAvBvd,EAAIud,UAAUjc,MAAmBtB,EAAIqX,UAAYrX,EAAIqX,SAASnb,OAAS,GACxFuJ,KAAK22F,oBAAoBp8F,IAGjC2xB,EAAQoV,UAAUq1D,oBAAsB,SAAUp8F,GAC9C,IAAK,IAAI7D,EAAI,EAAGA,EAAI6D,EAAIqX,SAASnb,OAAQC,IAAK,CAC1C,IAAIkX,EAAQ5N,KAAK4rF,UAAUrxF,EAAIqX,SAASlb,IACxCkX,EAAM7R,QAAU6R,EAAME,QAAQ/R,QAC9B6R,EAAM5R,QAAU4R,EAAME,QAAQ9R,QAC1B4R,EAAMgE,UAAYhE,EAAMgE,SAASnb,OAAS,GAC1CuJ,KAAK22F,oBAAoB/oF,KAIrCse,EAAQoV,UAAUhX,WAAa,WAC3B,OAAO,GAEX4B,EAAQoV,UAAUktD,oBAAsB,SAAUj0F,EAAKqT,EAAO8R,GACtDnlB,EAAIud,WAAoC,UAAvBvd,EAAIud,UAAUjc,OAC1B+R,EAAMrV,QACPqV,EAAME,QAAQgL,oBAAsB,UACpClL,EAAMkL,oBAAsB,WAE3BlL,EAAMtV,SACPsV,EAAMiL,kBAAoB,UAC1BjL,EAAME,QAAQ+K,kBAAoB,WAElC6G,GAA4B,kBAAnBnlB,EAAI6D,MAAMvC,OACnB+R,EAAM6qC,SAAW/4B,KAI7BwM,EAAQoV,UAAUwmD,UAAY,WACrB9nF,KAAK8rB,YACN9rB,KAAKgsB,MAAMl1B,KAAKkJ,KAAKJ,QAAQC,IAC7BG,KAAKgsB,MAAMhsB,KAAKJ,QAAQC,IAAMG,OAGtCksB,EAAQoV,UAAUklD,aAAe,WAC7B,IACIoQ,EAAc52F,KAAKoqB,eAAevyB,SAClCA,GACA02E,MACIlkD,QAASrqB,KAAK0rF,YAAYmL,KAAK72F,MAAOsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MACvEqmE,SAAWn5C,IAAKkX,OAAK0yD,EAAGxwB,aAAcniC,eAAaujC,UAEvD4G,OACIjkD,QAASrqB,KAAKyrF,aAAaoL,KAAK72F,MAAOsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MACxEqmE,SAAWn5C,IAAKkX,OAAK2yD,EAAGzwB,aAAcniC,eAAaujC,UAEvDqF,KACI1iD,QAASrqB,KAAKurF,WAAWsL,KAAK72F,MAAOsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MACtEqmE,SAAWn5C,IAAKkX,OAAKmG,EAAG+7B,aAAcniC,eAAaujC,UAEvDsvB,QACI3sE,QAASrqB,KAAK+tF,cAAc8I,KAAK72F,MAAOsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MACzEqmE,SAAWn5C,IAAKkX,OAAK4pD,SAEzB5C,WACI/gE,QAASrqB,KAAKorF,UAAUyL,KAAK72F,MAAOsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MACrEqmE,SAAWn5C,IAAKkX,OAAK6yD,EAAG3wB,aAAcniC,eAAaujC,UAEvD+kB,MACIpiE,QAASrqB,KAAKysF,KAAKoK,KAAK72F,MAAOsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAChEqmE,SAAWn5C,IAAKkX,OAAK8yD,EAAG5wB,aAAcniC,eAAaujC,UAEvDglB,MACIriE,QAASrqB,KAAK0sF,KAAKmK,KAAK72F,MAAOsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAChEqmE,SAAWn5C,IAAKkX,OAAK+yD,EAAG7wB,aAAcniC,eAAaujC,UAEvD0vB,SACI/sE,QAASrqB,KAAK8rF,aAAa+K,KAAK72F,KAAM,MACtCsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAKizD,IAC7DxwB,UAAW,MAEfywB,YACIjtE,QAASrqB,KAAK8rF,aAAa+K,KAAK72F,KAAM,SACtCsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAKmzD,OAC7D1wB,UAAW,SAEf2wB,WACIntE,QAASrqB,KAAK8rF,aAAa+K,KAAK72F,KAAM,QACtCsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAKqzD,MAC7D5wB,UAAW,QAEf6wB,WACIrtE,QAASrqB,KAAK8rF,aAAa+K,KAAK72F,KAAM,QACtCsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAKuzD,MAC7D9wB,UAAW,QAEf+wB,WACIvtE,QAASrqB,KAAKyuF,gBAAgBoI,KAAK72F,MACnCsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAKyzD,KAEjEn0B,SACIr5C,QAASrqB,KAAK83F,eAAejB,KAAK72F,MAClCsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAK2zD,SAEjEC,iBAEI1tE,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAK6zD,MAEjEC,qBAEI5tE,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAK6zD,IAAK3xB,aAAcniC,eAAaujC,UAEjGywB,mBACI9tE,QAASrqB,KAAKyuF,gBAAgBoI,KAAK72F,MACnCsqB,WAAYtqB,KAAKsqB,WAAWusE,KAAK72F,MAAOqmE,SAAWn5C,IAAKkX,OAAKg0D,SAGrEp4F,KAAKq4F,mBAAmBzB,EAAa/+F,IAEzCq0B,EAAQoV,UAAUg3D,iBAAmB,SAAUC,EAAY1gG,GAEvD,IAAK,IADDd,EACK8F,EAAK,EAAG6f,EAAKC,OAAOC,KAAK/kB,GAAWgF,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC/D,IAAIqwB,EAAMxQ,EAAG7f,GAEb,GADA9F,EAAUc,EAASq1B,GACfqrE,EAAWlyB,QAAQn5C,MAAQn2B,EAAQsvE,QAAQn5C,KAAOqrE,EAAWlyB,QAAQC,eAAiBvvE,EAAQsvE,QAAQC,aAAc,QAC7GzuE,EAASq1B,GAChB,SAIZhB,EAAQoV,UAAU+2D,mBAAqB,SAAUzB,EAAa/+F,GAC1D,IAAInB,EAAI,EACR,GAAIkgG,EACA,IAAKlgG,EAAI,EAAGA,EAAIkgG,EAAYngG,OAAQC,IAC5BmB,EAAS++F,EAAYlgG,GAAG6hB,OAASq+E,EAAYlgG,IACzCkgG,EAAYlgG,GAAG4zB,aACfzyB,EAAS++F,EAAYlgG,GAAG6hB,MAAM+R,WAAassE,EAAYlgG,GAAG4zB,YAE1DssE,EAAYlgG,GAAG2zB,UACfxyB,EAAS++F,EAAYlgG,GAAG6hB,MAAM8R,QAAUusE,EAAYlgG,GAAG2zB,UAEvDusE,EAAYlgG,GAAG2vE,QAAQn5C,KAAO0pE,EAAYlgG,GAAG2vE,QAAQC,gBACrDzuE,EAAS++F,EAAYlgG,GAAG6hB,MAAM8tD,QAAUuwB,EAAYlgG,GAAG2vE,SAE1B,KAA7BuwB,EAAYlgG,GAAGmwE,YACfhvE,EAAS++F,EAAYlgG,GAAG6hB,MAAMsuD,UAAY+vB,EAAYlgG,GAAGmwE,aAI7D7mE,KAAKs4F,iBAAiB1B,EAAYlgG,GAAImB,GACtCA,EAAS++F,EAAYlgG,GAAG6hB,OACpB8R,QAASusE,EAAYlgG,GAAG2zB,QAASC,WAAYssE,EAAYlgG,GAAG4zB,WAAY+7C,QAASuwB,EAAYlgG,GAAG2vE,QAChGQ,UAAW+vB,EAAYlgG,GAAGmwE,YAK1C7mE,KAAKnI,SAAWA,GAGpBq0B,EAAQoV,UAAUgtD,gBAAkB,SAAU/tF,GAC1C,IAAK,IAAI1D,EAAK,EAAG6f,EAAKnc,EAAKo4C,QAAS97C,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtD,IAAIkzE,EAAOrzD,EAAG7f,GACVmD,KAAK4a,UAAUm1D,KACf/vE,KAAK4a,UAAUm1D,GAAM39B,SAAW,IAGxC,IAAK,IAAI5mB,EAAK,EAAGC,EAAKlrB,EAAKm4C,SAAUltB,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACnDukD,EAAOtkD,EAAGD,GACVxrB,KAAK4a,UAAUm1D,KACf/vE,KAAK4a,UAAUm1D,GAAMtuE,SAAW,IAGxClB,EAAKo4C,WACLp4C,EAAKm4C,aAGTxsB,EAAQoV,UAAUk3D,qBAAuB,SAAUj4F,EAAM6xB,GACrD,IAAK,IAAI17B,EAAI,EAAGA,EAAI6J,EAAKuN,QAAQ8D,SAASnb,OAAQC,IAAK,CACnD,IAAIkX,EAAQrN,EAAKuN,QAAQ8D,SAASlb,GAC9BmJ,EAAK+N,EAAM/N,GAAGyO,MAAM/N,EAAKV,IAAI,GAC7B+N,EAAM/N,IAAMA,GAAMA,EAAG/H,MAAM,YAC3B8V,EAAMsgB,QAAUkE,EAChBpyB,KAAKy4F,iCAAiC7qF,EAAOwkB,MAKzDlG,EAAQoV,UAAU2rD,YAAc,SAAU1yF,GACtC,QAAqBN,IAAjBM,EAAIkH,UAA2C,KAAjBlH,EAAIkH,SAAiB,EAC/ClB,EAAOP,KAAK4a,UAAUrgB,EAAIkH,YAClBlB,EAAKm4C,UAAqC,IAAzBn4C,EAAKm4C,SAASjiD,SACvC8J,EAAKm4C,aAELn4C,GAAQA,EAAKm4C,WAA+C,IAAnCn4C,EAAKm4C,SAASx6B,QAAQ3jB,EAAIsF,KACnDU,EAAKm4C,SAAS5hD,KAAKyD,EAAIsF,IAG/B,QAAqB5F,IAAjBM,EAAI63C,UAA2C,KAAjB73C,EAAI63C,SAAiB,CACnD,IAAI7xC,EAOJ,IAPIA,EAAOP,KAAK4a,UAAUrgB,EAAI63C,YAClB7xC,EAAKo4C,SAAmC,IAAxBp4C,EAAKo4C,QAAQliD,SACrC8J,EAAKo4C,YAELp4C,GAAQA,EAAKo4C,UAA6C,IAAlCp4C,EAAKo4C,QAAQz6B,QAAQ3jB,EAAIsF,KACjDU,EAAKo4C,QAAQ7hD,KAAKyD,EAAIsF,IAEtBU,GAAQA,EAAK2tB,SAAW3tB,EAAKm4C,SAAU,CACvC,IAAInzC,EAAiC,IAAzBhF,EAAKm4C,SAASjiD,OAC1BuJ,KAAKw4F,qBAAqBj4F,EAAMgF,MAK5C2mB,EAAQoV,UAAUo3D,eAAiB,WAC/B14F,KAAKmzF,mBACLnzF,KAAK46E,WACL56E,KAAKmmF,iBACLnmF,KAAK0e,SAASgjD,WAGlBx1C,EAAQoV,UAAUlmB,oBAAsB,SAAU7gB,GAE9C,IAAK,IADDwrF,EACKlpF,EAAK,EAAG6f,EAAK1c,KAAKgsB,MAAOnvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IAAIuT,EAAOsM,EAAG7f,GAEd,GADAkpF,EAAO/lF,KAAKgsB,MAAM5b,GACdpQ,KAAKkX,eACL,GAAkB,QAAd6uE,EAAKn6D,KAAgB,CACrB,IAAItG,EAAYkU,GAAax5B,KAAKJ,QAAQC,IACtCuwD,EAAuB7uC,SAASC,eAAeukE,EAAKnmF,QAAQC,GAAK,iBACrEG,KAAKye,gBAAgB0xC,WAAW51D,EAAIuT,QAASsiD,EAAsB9qC,OAAWrrB,QAG9E+F,KAAKksF,0BAA0BnG,KAM/C75D,EAAQoV,UAAUq3D,oBAAsB,SAAUx5E,GAG9C,IAAK,IAFD4mE,EACAzgE,EAAYkU,GAAax5B,KAAKJ,QAAQC,IACjChD,EAAK,EAAG6f,EAAK1c,KAAKgsB,MAAOnvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IAAIuT,EAAOsM,EAAG7f,GAEd,GAAkB,SADlBkpF,EAAO/lF,KAAKgsB,MAAM5b,IACTwb,MAAkB5rB,KAAKkX,eAAgB,CAC5C,IAAIk5C,EAAuB7uC,SAASC,eAAeukE,EAAKnmF,QAAQC,GAAK,iBACrEG,KAAKye,gBAAgB0xC,WAAWhxC,EAAMixC,EAAsB9qC,OAAWrrB,QAGvE+F,KAAKksF,0BAA0BnG,KAK3C75D,EAAQoV,UAAU+pD,kBAAoB,SAAUzF,GAE5C,IAAK,IADDrS,KACK12E,EAAK,EAAG+7F,EAAgBhT,EAAa/oF,EAAK+7F,EAAcniG,OAAQoG,IAAM,CAC3E,IAAItC,EAAMq+F,EAAc/7F,GACpBmD,KAAK4a,UAAUrgB,IACfg5E,EAAUz8E,KAAKkJ,KAAK4a,UAAUrgB,IAGtC,OAAOg5E,GAGXrnD,EAAQoV,UAAU+rC,oBAAsB,WAEpC,IAAK,IADD0Y,EACKlpF,EAAK,EAAG6f,EAAK1c,KAAKgsB,MAAOnvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IAAIuT,EAAOsM,EAAG7f,GAEd,QADAkpF,EAAO/lF,KAAKgsB,MAAM5b,IACLwb,MACT,IAAK,MACD5rB,KAAK64F,uBAAuB9S,GAC5B,MACJ,IAAK,SACD/lF,KAAK2sE,oBAAoBoZ,MAMzC75D,EAAQoV,UAAUqrC,oBAAsB,SAAUoZ,GAC9C,GAAKA,EAQD/lF,KAAKksF,0BAA0BnG,QAP/B,IAAK,IAAIlpF,EAAK,EAAG6f,EAAK1c,KAAKgsB,MAAOnvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IAAIuT,EAAOsM,EAAG7f,GACVi8F,EAAS94F,KAAKgsB,MAAM5b,GACxBpQ,KAAKksF,0BAA0B4M,KAO3C5sE,EAAQoV,UAAUy3D,mBAAqB,SAAUhT,GAE7C,IAAK,IADDzgE,EAAYkU,GAAausD,EAAKnmF,QAAQC,IACjCnJ,EAAI,EAAGA,EAAIsJ,KAAK2rB,cAAcl1B,OAAQC,IAAK,CAChD,IAAIkJ,EAAUI,KAAK2rB,cAAcj1B,GAC7BkJ,aAAmBszB,KACnBtzB,EAAQ4mC,gBAAkB,GAE9B5mC,EAAQ+d,QAAQ,IAAIC,GAAKhe,EAAQrH,MAAOqH,EAAQtH,SAChDsH,EAAQie,QAAQje,EAAQke,aACxBioE,EAAKtnE,gBAAgB2rC,cAAcxqD,EAASmmF,EAAK3S,aAAc9tD,KAGvE4G,EAAQoV,UAAU03D,gBAAkB,SAAUjT,GAC1C,IAAK/lF,KAAKi5F,YAAa,CACnBj5F,KAAKk5F,YAAYnT,GACbA,aAAgB75D,IAChB65D,EAAK3S,aAAaxzB,WAAW,MAAMu5C,aAAapT,EAAKrnE,SAASgF,YAAa,EAAG,EAAGqiE,EAAKrnE,SAASgF,YAAa,EAAG,GAC/GqiE,EAAK3S,aAAaxzB,WAAW,MAAMvkC,MAAM,IAAK,MAElD,IAAIiK,EAAYkU,GAAausD,EAAKnmF,QAAQC,IAC7BG,KAAK6pE,cAAcmU,gBAChCh+E,KAAKo5F,sBAAsBrT,EAAK3S,aAAc2S,EAAKtnE,gBAAiB6G,GACpE,IAAK,IAAI5uB,EAAI,EAAGA,EAAIsJ,KAAK2rB,cAAcl1B,OAAQC,IAAK,CAChD,IAAIkJ,EAAUI,KAAK2rB,cAAcj1B,GACjCkJ,EAAQ+d,QAAQ,IAAIC,GAAKhe,EAAQrH,MAAOqH,EAAQtH,SAChDsH,EAAQie,QAAQje,EAAQke,aACxBioE,EAAKtnE,gBAAgB2rC,cAAcxqD,EAASmmF,EAAK3S,aAAc9tD,GAE/DygE,aAAgB75D,IAChB65D,EAAK3S,aAAalzE,MAAMuF,UAAY,SAAY,EAAI,EAAK,IACzDsgF,EAAK3S,aAAalzE,MAAMm5F,gBAAkB,OAE9Cr5F,KAAKwlF,YAAc,OAI3Bt5D,EAAQoV,UAAU4qD,0BAA4B,SAAUnG,GACpD,IAAI1/C,EAAQrmC,KACM,QAAd+lF,EAAKn6D,MAAmB5rB,KAAKi5F,cACzBj5F,KAAK2rB,cAAcl1B,OAAS,GAC5BuJ,KAAK+4F,mBAAmBhT,IAEtB/lF,KAAKkX,gBAAmE,IAAhDlX,KAAKkX,eAAiBC,gBAAcwyE,SAC1DxyE,gBAAcC,WAAapX,KAAKkX,gBAAmBvB,GAAa3V,OAAwC,IAA9BA,KAAK0e,SAASgF,YAC5F1jB,KAAKg5F,gBAAgBjT,GAEf/lF,KAAKwlF,cACXxlF,KAAKwlF,YAAcj+C,WAAW,WAC1BlB,EAAM2yD,gBAAgBjT,IACvB,OAKf75D,EAAQoV,UAAU8hC,qBAAuB,SAAU7iE,EAAM4xB,EAAgBmnE,GACrE,IAAIpvB,EACAxlD,GAAkB1kB,KAAK0kB,gBAAiB1kB,KAAK0kB,cAActmB,MAC/D,GAAImC,aAAgBgU,IAAQmQ,GAAiBnR,GAAQhT,GAAO,CAGxD,IAAK,IAFDkyB,EAAQlyB,EAAKkyB,MACb8mE,GAAU,EACL7iG,EAAI,EAAGA,EAAI+7B,EAAMh8B,OAAQC,IAC9BwzE,EAAclqE,KAAK6yC,WAAWtyC,EAAKuN,QAAS2kB,EAAM/7B,GAAGmJ,KACjDsyB,EAAiB4N,iBAAeC,OAAS7N,EAAiB4N,iBAAeiK,UACrE9X,GAAqBO,EAAM/7B,GAAIy7B,KAC/B+3C,EAAYh8C,SAAWorE,EACvBC,GAAU,GAIlBA,GACAv5F,KAAKob,oBAAoB7a,KAKrC2rB,EAAQoV,UAAUu3D,uBAAyB,SAAU9S,GACjD,IAAInmF,EACAwwD,EAAuB7uC,SAASC,eAAeukE,EAAKnmF,QAAQC,GAAK,iBACjEylB,EAAYkU,GAAausD,EAAKnmF,QAAQC,IAC1C,GAAK8V,GAAa3V,MAUdA,KAAK0e,SAASqgE,yBAVO,CACrB,IAAK,IAAIroF,EAAI,EAAGA,EAAIsJ,KAAK2rB,cAAcl1B,OAAQC,KAC3CkJ,EAAUI,KAAK2rB,cAAcj1B,IACrBinB,QAAQ,IAAIC,GAAKhe,EAAQrH,MAAOqH,EAAQtH,SAChDsH,EAAQie,QAAQje,EAAQke,cAAgB9d,KAAKkX,eAAiBC,gBAAcwyE,SAC5E3pF,KAAKye,gBAAgB2rC,cAAcxqD,EAASwwD,EAAsB9qC,GAEtEtlB,KAAKo5F,sBAAsBhpC,EAAsBpwD,KAAKye,gBAAiB6G,KAO/E4G,EAAQoV,UAAUyhC,qBAAuB,SAAUy2B,GAC/C,GAAIx5F,KAAKgjE,oBAAqB,CAC1B,IAAK,IAAItsE,EAAI,EAAGA,EAAIsJ,KAAK0e,SAAS2+D,iBAAiB5mF,OAAQC,IAAK,CAC5D,IAAI6D,EAAMyF,KAAK4a,UAAU5a,KAAK0e,SAAS2+D,iBAAiB3mF,IACxDsJ,KAAK4tF,eAAerzF,GAExByF,KAAKgjE,qBAAsB,EAE/B8B,cAAc00B,IAGlBttE,EAAQoV,UAAUm4D,uBAAyB,SAAUvtF,GACjD,IAAK,IAAI7V,EAAI,EAAGA,EAAI6V,EAAO4B,QAAQ8D,SAASnb,OAAQJ,IAAK,CACrD,IAAIuJ,EAAUsM,EAAO4B,QAAQ8D,SAASvb,GAClCuJ,aAAmB8tB,KACnB9tB,EAAQqoC,YAAa,EACrBroC,EAAQ+d,QAAQ,IAAIC,GAAK1R,EAAO3T,MAAO2T,EAAO5T,SAC9CsH,EAAQie,QAAQje,EAAQke,gBAKpCoO,EAAQoV,UAAU89C,qBAAuB,SAAU9oF,EAAYwlD,EAAQ49C,GACnE,IAAItpC,EAAuB7uC,SAASC,eAAe,wBAC/C8D,EAAYkU,GAAa,WAC7B,GAAkB,QAAdx5B,KAAK4rB,KAAgB,CACrB,IAAK,IAAIl1B,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IAAK,CACxC,IAAIgpB,EAAQ1f,KAAK0e,SAAS2+D,iBAAiBn/D,QAAQ5nB,EAAWI,IAC1DgpB,GAAS,GACT1f,KAAK0e,SAAS2+D,iBAAiBl3E,OAAOuZ,EAAO,GAEjD,IAAIxT,EAASlM,KAAK4a,UAAUtkB,EAAWI,IACvCsJ,KAAKy5F,uBAAuBvtF,GAC5BlM,KAAKye,gBAAgB2rC,cAAcl+C,EAAO4B,QAASsiD,EAAsB9qC,OAAWrrB,OAAWA,OAAWA,OAAWA,EAAWiS,EAAOq9D,QAE3I,IAAK,IAAIxpD,EAAI,EAAGA,EAAI25E,EAAYjjG,OAAQspB,IACpC/f,KAAK0e,SAAS2+D,iBAAiBvmF,KAAK4iG,EAAY35E,IAElB,IAA9B/f,KAAK0e,SAASgF,aACd1jB,KAAKoqE,aAAaxH,4BAGjB5iE,KAAKkX,gBACVlX,KAAKqtE,uBAIbnhD,EAAQoV,UAAU83D,sBAAwB,SAAUz/C,EAAQwP,EAAU7jC,EAAW7f,EAAWk0F,EAAYC,QAClF,IAAdn0F,IAAwBA,GAAY,GACxC,IAAIs4E,EAAa/9E,KAAK0e,SAASs/D,gBAC/BD,EAAW/mF,GAAKgJ,KAAK0e,SAASgF,YAC9Bq6D,EAAW9mF,GAAK+I,KAAK0e,SAASgF,YAC9Bq6D,EAAWxlF,OAASyH,KAAK0e,SAASgF,YAClCq6D,EAAWzlF,QAAU0H,KAAK0e,SAASgF,YAGnC,IAAK,IAFD3b,GAAQ/H,KAAK0e,SAASkE,iBAAmBm7D,EAAW/mF,EACpD8kE,GAAQ97D,KAAK0e,SAASoE,eAAiBi7D,EAAW9mF,EAC7C4F,EAAK,EAAG6f,EAAKC,OAAOC,KAAK5c,KAAKutE,kBAAmB1wE,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC5E,IAAI+wE,EAAUlxD,EAAG7f,GACbkrE,EAAQ/nE,KAAKif,eAAes1C,SAASv0D,KAAKutE,iBAAiBK,IAC3DhrE,OAAO,EACPmK,OAAQ,EACM,WAAd/M,KAAK4rB,MAAqBjW,GAAa3V,QAAUA,KAAKkX,gBACtDlX,KAAK0e,SAASqgE,qBAKlB,IAAK,IAHDl/E,EAAoB,WAAdG,KAAK4rB,MAAqBjW,GAAa3V,OAC7CA,KAAK0e,SAAS0+D,qBAAqB3mF,OAAS,EAC5CuJ,KAAK0e,SAAS0+D,0BAAuBnjF,EAChCuxB,EAAK,EAAGC,EAAK9O,OAAOC,KAAK/c,GAAMkoE,EAAM0C,aAAcj/C,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAC9E,IAAIjrB,EAAOkrB,EAAGD,GACVquE,EAAah6F,EAAKG,KAAK4a,UAAU/a,EAAGU,IAASP,KAAK4a,UAAUmtD,EAAM0C,YAAYlqE,IAClF,IAAMs5F,EAAmB,WACnBA,EAAoB,UAAG,CACzB,IAAIC,GACAvnD,GAAIvyC,KAAK0e,SAASjZ,UAAU8sC,GAC5BC,GAAIxyC,KAAK0e,SAASjZ,UAAU+sC,GAC5Bn3B,MAAOrb,KAAK0e,SAASjZ,UAAU4V,OAEnC,GAAI1F,GAAa3V,MAAO,CACpB,GAAIA,KAAK0e,SAASgF,YAAc,EAAG,CAC/B,GAAIq6D,EAAW/mF,EAAI,GAAKgJ,KAAK0e,SAASkE,iBAAmB,EAAG,CACxD,IAAIm3E,EAAgB/5F,KAAK0e,SAASoE,eAAiB,EAAI9iB,KAAK0e,SAASoE,eAAiB,EACtFlgB,GAAQmF,EAAO,EAAIA,EAAO,GAAK,KAC/BgF,GAAU/M,KAAK29E,YAAct5C,aAAWw5C,gBAAmB,GAAKkc,GAAiB,UAGjFn3F,EAAO,MACPmK,EAAQ,MAER/M,KAAK29E,YAAct5C,aAAWu5C,kBAC9B59E,KAAK29E,YAAc39E,KAAK29E,aAAet5C,aAAWu5C,iBAElD59E,KAAK29E,YAAct5C,aAAWw5C,kBAC9B79E,KAAK29E,YAAc39E,KAAK29E,aAAet5C,aAAWw5C,sBAItDj7E,GAAQm7E,EAAW/mF,EAAI,EAAI+Q,GAAQ/H,KAAK0e,SAASkE,kBAAoB,KACrE7V,GAASgxE,EAAW9mF,EAAI,EAAI6kE,GAAQ97D,KAAK0e,SAASoE,gBAAkB,KAExE9iB,KAAKozE,aAAalzE,MAAM0C,KAAOA,EAC/B5C,KAAKozE,aAAalzE,MAAM6C,IAAMgK,EAC9B+sF,EAAevnD,GAAKvyC,KAAK0e,SAASkE,iBAAmBk3E,EAAez+E,MACpEy+E,EAAetnD,GAAKxyC,KAAK0e,SAASoE,eAAiBg3E,EAAez+E,MAEtE,IAAI2+E,GAAW,EACXL,IACAK,GAAW,GAEfh6F,KAAKy5F,uBAAuBI,GAC5B1wC,EAASiB,cAAcyvC,EAAW/rF,QAAS6rC,EAAQr0B,GAAa6jC,EAASD,WAAazjD,EAAaq0F,OAAiB7/F,OAAWA,OAAWA,EAAW+/F,KAAch6F,KAAKkX,gBAAkB0iF,QAM1M1tE,EAAQoV,UAAU6kD,eAAiB,SAAU8M,GACzC,GAAIjzF,KAAKi6F,eACL,IAAK,IAAIvjG,EAAI,EAAGA,EAAIsJ,KAAKkd,WAAWzmB,OAAQC,IAAK,CAC7C,IAAIkV,EAAY5L,KAAKkd,WAAWxmB,GAChCsJ,KAAKi6F,eAAe9T,eAAev6E,EAAW5L,MAC9C,IAAI25C,EAAS35C,KAAKkd,WAAWxmB,GAAGoX,QAChC,GAAI6rC,EAAQ,CACR,IAAIugD,EAAcvgD,EAAO/nC,SAAS,GAC9Bxb,EAAO8jG,EAAY9jG,KACvBwV,EAAUkiC,kBAAkBliC,EAAWsuF,GACnCA,EAAY9jG,OAASA,IACrBujD,EAAOh8B,QAAQ,IAAIC,IACnB+7B,EAAO97B,QAAQ87B,EAAO77B,aACJ,QAAd9d,KAAK4rB,MAAmBqnE,GACxBjzF,KAAKob,oBAAoBxP,OAQjDsgB,EAAQoV,UAAU+nB,UAAY,SAAU9oB,GACpCvgC,KAAKye,gBAAgB4qC,UAAUrpD,KAAK2gE,cAAepgC,IAGvDrU,EAAQoV,UAAU43D,YAAc,SAAUnT,GACtC,IAAIxtF,EACAD,EAGJ,GAFAC,EAAQwtF,EAAK79B,cAAgB69B,EAAK3S,aAAa76E,MAAQyH,KAAK0e,SAASgF,YACrEprB,EAASytF,EAAK59B,eAAiB49B,EAAK3S,aAAa96E,OAAS0H,KAAK0e,SAASgF,YACtD,QAAdqiE,EAAKn6D,KAAgB,CACX+zB,GAAeC,WAAWmmC,EAAK3S,cACrC+mB,UAAU,EAAG,EAAG5hG,EAAOD,KAInC4zB,EAAQoV,UAAUumC,mBAAqB,WACnC7nE,KAAK0e,SAASw/D,gBAAgBl+E,KAAK2gE,cAAcM,WAAYjhE,KAAK2gE,cAAcO,WAChFx+C,GAAY1iB,MACR2V,GAAa3V,OACbA,KAAK0e,SAASqgE,sBAItB7yD,EAAQoV,UAAU28C,UAAY,SAAUliF,EAASC,GAC7C,IAAI8b,EAAYyJ,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,WACtDiY,IACAA,EAAUmpD,WAAallE,EACvB+b,EAAUopD,UAAYllE,IAI9BkwB,EAAQoV,UAAUogC,QAAU,SAAUnpE,EAAOD,GACzC,GAAI0H,KAAKozE,eAAiBpzE,KAAK+xE,cAAe,CAC1C,IAAI1xE,EAAWqhB,GAAa1hB,MAC5BzH,GAAS8H,EAAS9H,MAClBD,GAAU+H,EAAS/H,OACnB,IAAIkJ,EAASxB,KAAK6pE,cAAcmU,gBAChCx8E,EAAOxK,GAAKgJ,KAAK0e,SAASgF,YAC1BliB,EAAOvK,GAAK+I,KAAK0e,SAASgF,YAC1BliB,EAAOjJ,OAASyH,KAAK0e,SAASgF,YAC9BliB,EAAOlJ,QAAU0H,KAAK0e,SAASgF,YAC/B,IAAIw8D,EAAuB,QAAdlgF,KAAK4rB,KAAiB,EAAI,IACnCwnD,EAA6B,QAAdpzE,KAAK4rB,KACpBiN,GAAmB74B,KAAKJ,QAAQC,IAAMG,KAAKozE,aAC3C1+C,EAAmB,WAAd10B,KAAK4rB,MACT5rB,KAAKiT,YAAc2C,qBAAmBC,eAAmB7V,KAAK0e,SAAS2E,cAAgB9qB,EACxFo8B,EAAmB,WAAd30B,KAAK4rB,MACT5rB,KAAKiT,YAAc2C,qBAAmBC,eAAmB7V,KAAK0e,SAAS0E,eAAiB9qB,EAC7F86E,EAAal9C,aAAa,SAAUgqD,EAASxrD,GAAGp2B,YAChD80E,EAAal9C,aAAa,UAAWgqD,EAASvrD,GAAGr2B,YACjD,IAAIi/C,GAAShlD,MAASA,EAAM+F,WAAYhG,OAAUA,EAAOgG,YACzD0B,KAAK4xF,gBAAgB1xF,MAAM3H,MAAQA,EAAQ,KAC3CyH,KAAK4xF,gBAAgB1xF,MAAM5H,OAASA,EAAS,KAC7CwhC,GAAgBV,GAAkBp5B,KAAKJ,QAAQC,IAAK09C,GACpDzjB,G7CtoGZ,SAAgC/F,GAM5B,OAJqB1E,GAAkB0E,GAEVgF,uBAAuB,wBACtB,G6CioGNqhE,CAAgBp6F,KAAKJ,QAAQC,IAAK09C,GAClD,IAAI88C,EAAa77E,GAAmBxe,KAAKJ,QAAQC,IACjDi6B,GAAgBugE,EAAY98C,GAC5B88C,EAAW78E,WAAWtd,MAAM3H,MAAQA,EAAQ,KAC5C8hG,EAAW78E,WAAWtd,MAAM5H,OAASA,EAAS,KAC9C,IAAIgiG,EAAYjhE,GAAgBr5B,KAAKJ,QAAQC,IAC7Ci6B,GAAgBwgE,EAAW/8C,GAC3Bv9C,KAAKye,gBAAgB8vC,WAAWvuD,KAAK6rB,aAAcyuE,EAAWt6F,KAAK0e,SAASjZ,UAAWzF,KAAKiiB,cAAejiB,KAAKuiB,OAAQviB,KAAKwiB,QAC7HsX,GAAgBR,GAAsBt5B,KAAKJ,QAAQC,IAAK09C,GACxDv9C,KAAKslB,UAAUplB,MAAM3H,MAAQA,EAAQ,KACrCyH,KAAKslB,UAAUplB,MAAM5H,OAASA,EAAS,KACrB,QAAd0H,KAAK4rB,MAAoBjW,GAAa3V,OACtCA,KAAKqtE,sBAES,QAAdrtE,KAAK4rB,MAAkBjW,GAAa3V,OACpCA,KAAK0e,SAASqgE,uBAK1B7yD,EAAQoV,UAAU0uB,gBAAkB,WAChC,IAAIxuD,EAASxB,KAAK6pE,cAAcmU,gBAChCx8E,EAAOxK,GAAKgJ,KAAK0e,SAASgF,YAC1BliB,EAAOvK,GAAK+I,KAAK0e,SAASgF,YAC1BliB,EAAOjJ,OAASyH,KAAK0e,SAASgF,YAC9BliB,EAAOlJ,QAAU0H,KAAK0e,SAASgF,YAC/B1jB,KAAKye,gBAAgB8vC,WAAWvuD,KAAK6rB,aAAcwN,GAAgBr5B,KAAKJ,QAAQC,IAAKG,KAAK0e,SAASjZ,UAAWzF,KAAKiiB,cAAejiB,KAAKuiB,OAAQviB,KAAKwiB,QACpJxiB,KAAKye,gBAAgBuxC,gBAAgBhwD,KAAK0e,SAASjZ,UAAyB,QAAdzF,KAAK4rB,MACnE5rB,KAAK61D,iBACL71D,KAAKypF,iBAAiBjoF,IAM1B0qB,EAAQoV,UAAUi5D,iBAAmB,WACjC,GAAIv6F,KAAKozE,aAAc,CACnB,IAAI9rD,EAAOiS,GAAmBv5B,KAAKJ,QAAQC,IAC3C,GAAIynB,GAAQA,EAAKyO,WAEb,IAAK,IADD9qB,EAAWqc,EAAKyO,WAAWt/B,OACtBC,EAAI,EAAGA,EAAIuU,EAAUvU,IAC1B4wB,EAAKgI,YAAYhI,EAAKyO,WAAW,MASjD7J,EAAQoV,UAAUmoD,iBAAmB,SAAUjoF,GAC3CxB,KAAKu6F,mBACL,IAAIC,EAAkBjhE,GAAmBv5B,KAAKJ,QAAQC,IACtD,GAAI26F,EAAiB,CACjB,IAAI9jG,EAAI,EACR8K,EAASxB,KAAK0e,SAASs/D,eAAc,GACrC,IAAIhnF,GAAKgJ,KAAK0e,SAASjZ,UAAU8sC,GAAK/wC,EAAOxK,GAAKgJ,KAAK0e,SAASgF,YAC5DzsB,GAAK+I,KAAK0e,SAASjZ,UAAU+sC,GAAKhxC,EAAOvK,GAAK+I,KAAK0e,SAASgF,YAC5DprB,EAASkJ,EAAOlJ,OAAS0H,KAAK0e,SAASgF,YACvCnrB,EAAQiJ,EAAOjJ,MAAQyH,KAAK0e,SAASgF,YACzCslC,GAAgB4G,yBAAyB5vD,KAAKorB,aAAaykC,WAAY7vD,KAAKJ,QAAS5I,EAAGC,EAAGsB,EAAOD,GAClG,IAAI2/B,GACAp4B,GAAI26F,EAAgB36F,GAAK,OAAQ7I,EAAGA,EACpCC,EAAGA,EACHqB,OAAQA,EACRC,MAAOA,EAAOf,MAAO,EAAG0gC,OAAQ,GAAI/f,YAAa,EACjDF,KAAMjY,KAAKorB,aAAaykC,WAAWn3C,MAAOgU,QAAS,EACnDyL,OAAQ,EAAGC,OAAQ,EAAGlK,SAAS,EAAMmK,UAAW,KAGpD,GADAr4B,KAAKye,gBAAgBkxC,SAAS6qC,EAAiBviE,GAC3Cj4B,KAAKorB,aAAaqvE,eAAgB,CAClC,IAAInkG,EAAa0J,KAAK0e,SAASqhE,aAAav+E,GAC5C,IAAK9K,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IAC/BsJ,KAAKye,gBAAgBqoC,SAAS0zC,GAC1B7iF,MAAO,uBACPM,KAAM,OAAQigB,OAAQ,UAAW/f,YAAa,EAAGkgB,UAAW,QAC5D3L,QAAS,EAAG11B,EAAG,EAAGC,EAAG,EAAGsB,MAAO,EAAGD,OAAQ,EAAGd,MAAO,EAAG2gC,OAAQ,EAAGC,OAAQ,EAAGlK,SAAS,EACtF7b,YACIrb,GAAIV,EAAWI,GAAGQ,GAAK8I,KAAK0e,SAASjZ,UAAU8sC,IAAMvyC,KAAK0e,SAASgF,YACnEzsB,GAAIX,EAAWI,GAAGS,GAAK6I,KAAK0e,SAASjZ,UAAU+sC,IAAMxyC,KAAK0e,SAASgF,aAEvEnY,UACIvU,GAAIV,EAAWI,GAAGU,GAAK4I,KAAK0e,SAASjZ,UAAU8sC,IAAMvyC,KAAK0e,SAASgF,YACnEzsB,GAAIX,EAAWI,GAAGW,GAAK2I,KAAK0e,SAASjZ,UAAU+sC,IAAMxyC,KAAK0e,SAASgF,aACpE7jB,GAAIvJ,EAAWI,GAAGS,KAAOb,EAAWI,GAAGW,GAAK,kBAAoB,qBAMvF60B,EAAQoV,UAAU+kD,iBAAmB,WACjC,IAAIj2E,EAAO,EAC2B,aAAlCpQ,KAAKorB,aAAata,YACd9Q,KAAKorB,aAAa7yB,MAAQyH,KAAKorB,aAAa9yB,SAC5C8X,EAAOpQ,KAAKorB,aAAa9yB,OACzB0H,KAAKorB,aAAa9yB,OAAS0H,KAAKorB,aAAa7yB,MAC7CyH,KAAKorB,aAAa7yB,MAAQ6X,GAI1BpQ,KAAKorB,aAAa9yB,OAAS0H,KAAKorB,aAAa7yB,QAC7C6X,EAAOpQ,KAAKorB,aAAa7yB,MACzByH,KAAKorB,aAAa7yB,MAAQyH,KAAKorB,aAAa9yB,OAC5C0H,KAAKorB,aAAa9yB,OAAS8X,IAOvC8b,EAAQoV,UAAUo5D,YAAc,SAAUC,EAAU96F,GAChD,GAAI86F,EACIA,IACA36F,KAAKgsB,MAAMl1B,KAAK6jG,EAAS96F,IACzBG,KAAKgsB,MAAM2uE,EAAS96F,IAAM86F,EAC1BA,EAASC,eAAeD,GACxBA,EAASl8E,gBAAgB6qC,YACzBqxC,EAAS3U,WAAW2U,GACpB36F,KAAK66F,YAAYF,QAGpB,CACD,IAAK,IAAIjkG,EAAI,EAAGA,EAAIsJ,KAAKgsB,MAAMv1B,OAAQC,IAC/BsJ,KAAKgsB,MAAMt1B,KAAOmJ,IAClB86F,EAAY36F,KAAKgsB,MAAMnsB,IAG/BG,KAAKgsB,MAAMnsB,QAAM5F,EACjB,IAAIylB,EAAQ1f,KAAKgsB,MAAM9N,QAAQre,GAC/BG,KAAKgsB,MAAM7lB,OAAOuZ,EAAO,KAGjCwM,EAAQoV,UAAUu5D,YAAc,SAAUF,GACtC,GAAIA,EAAU,CACV,IAAIxxC,EAAW,IAAIH,GAAgB2xC,EAAS96F,GAAI,IAAIomD,IAAe,GAC/DrI,EAAIr8B,SAASC,eAAem5E,EAAS/6F,QAAQC,GAAK,iBAClDylB,EAAYkU,GAAamhE,EAAS/6F,QAAQC,IAC9CG,KAAKo5F,sBAAsBx7C,EAAG+8C,EAASl8E,iBAAmB0qC,EAAU7jC,OAAWrrB,OAAWA,GAAW,KAG7GiyB,EAAQoV,UAAUw5D,uBAAyB,SAAUv6F,EAAM0xE,GAGvD,IAAK,IADDx7E,EAAS8J,EAAK9J,OACTC,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC7B,IAAI6D,EAAMgG,EAAK7J,GACXqkG,GAAa,EACbC,GAAa,EACbC,EAAmBhpB,EAAcngD,kBACjCv3B,aAAega,IACfwmF,EAAiC,SAAnBxgG,EAAI6D,MAAMvC,MAAwC,aAApBtB,EAAI6D,MAAMA,QACL,IAA5C7D,EAAI6D,MAAMk7C,SAASD,WAAWI,WACX,mBAApBl/C,EAAI6D,MAAMA,MACd48F,EAAiC,SAAnBzgG,EAAI6D,MAAMvC,MAAuC,mBAApBtB,EAAI6D,MAAMA,MAChD8V,GAAU3Z,IAAU0gG,EAAmBjpE,oBAAkB7d,SAAW4mF,IACrEE,IAAuCjpE,oBAAkB7d,QAExDW,GAAUva,EAAK,cAAkB0gG,EAAmBjpE,oBAAkB/c,kBAAoB+lF,IAC3FC,IAAuCjpE,oBAAkB/c,iBAExDH,GAAUva,EAAK,cAAkB0gG,EAAmBjpE,oBAAkBxc,kBAAoBwlF,IAC3FC,IAAuCjpE,oBAAkBxc,iBAExDV,GAAUva,EAAK,SAAa0gG,EAAmBjpE,oBAAkB9c,aAAe8lF,IACjFC,IAAuCjpE,oBAAkB9c,YAExDJ,GAAUva,EAAK,SAAa0gG,EAAmBjpE,oBAAkBzc,aAAeylF,IACjFC,IAAuCjpE,oBAAkBzc,YAExDT,GAAUva,EAAK,UAAc0gG,EAAmBjpE,oBAAkB3c,cAAgB2lF,IACnFC,IAAuCjpE,oBAAkB3c,aAExDP,GAAUva,EAAK,UAAc0gG,EAAmBjpE,oBAAkB5c,cAAgB4lF,IACnFC,IAAuCjpE,oBAAkB5c,aAExDN,GAAUva,EAAK,cAAkB0gG,EAAmBjpE,oBAAkB7c,kBAAoB6lF,IAC3FC,IAAuCjpE,oBAAkB7c,iBAExDL,GAAUva,EAAK,cAAkB0gG,EAAmBjpE,oBAAkB1c,kBAAoB0lF,IAC3FC,IAAuCjpE,oBAAkB1c,kBAGxD/a,aAAe6Y,IACpB6nF,GAAsCjpE,oBAAkBja,QACpDnE,GAAiBrZ,GACjB0gG,GAAsCjpE,oBAAkB85B,gBAGxDmvC,IAAuCjpE,oBAAkB85B,gBAEzDh4C,GAAiBvZ,GACjB0gG,GAAsCjpE,oBAAkB+5B,gBAGxDkvC,IAAuCjpE,oBAAkB+5B,kBAI7DkvC,GAAsCjpE,oBAAkBja,QACnDjD,GAAUva,KACX0gG,KAAwCjpE,oBAAkB/c,gBAAkB+c,oBAAkB1c,gBAC1F0c,oBAAkB5c,YAAc4c,oBAAkB9c,WAAa8c,oBAAkBzc,WACjFyc,oBAAkB3c,YAAc2c,oBAAkB7c,gBAAkB6c,oBAAkBxc,kBAEzFtB,GAAU3Z,KACX0gG,IAAuCjpE,oBAAkB7d,SAGjE89D,EAAcngD,kBAAoBmpE,IAI1C/uE,EAAQoV,UAAUmkC,eAAiB,SAAU2L,GACzC,IAAI7/C,EAAO,IAAI3T,GACXq0D,EAAgBjyE,KAAKod,cACC60D,EAAch/D,YAExC,GADAjT,KAAK20E,qBACD30E,KAAKif,eAAesf,eAAgB,CAWpC,GAVmC,IAA/B0zC,EAAcj5D,MAAMviB,QAAoD,IAApCw7E,EAAc/0D,WAAWzmB,SAC7Dw7E,EAAc5lE,YAAc4lE,EAAcj5D,MAAM,GAAG3M,YACnD4lE,EAAczgD,MAAQygD,EAAcj5D,MAAM,GAAGwY,OAEjDygD,EAAcnkE,QAAQ6P,QAAQ4T,GAC9B0gD,EAAcnkE,QAAQ+P,QAAQo0D,EAAcnkE,QAAQgQ,aACpDm0D,EAAc15E,MAAQ05E,EAAcnkE,QAAQC,WAAWxV,MACvD05E,EAAc35E,OAAS25E,EAAcnkE,QAAQC,WAAWzV,OACxD25E,EAAcl2E,QAAUk2E,EAAcnkE,QAAQ/R,QAC9Ck2E,EAAcj2E,QAAUi2E,EAAcnkE,QAAQ9R,QACZ,IAA9Bi2E,EAAc5lE,YAAmB,CACjC,IAAK,IAAIxP,EAAK,EAAG6f,EAAKu1D,EAAcj5D,MAAOnc,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC7D,IAAItC,EAAMmiB,EAAG7f,GACbtC,EAAIwB,QAAUxB,EAAIuT,QAAQ/R,QAC1BxB,EAAIyB,QAAUzB,EAAIuT,QAAQ9R,QAE9B,IAAK,IAAIwvB,EAAK,EAAGC,EAAKwmD,EAAc/0D,WAAYsO,EAAKC,EAAGh1B,OAAQ+0B,IACjDC,EAAGD,GAITxrB,KAAK6pE,cAAcmU,gBAAhC,IACIkd,OAAkB,EAUtB,GATAA,EAAkBhiE,GAAmBl5B,KAAKJ,QAAQC,IAClDoyE,EAAcngD,kBAAoBE,oBAAkBja,QAChDk6D,EAAc3pD,WACdtoB,KAAK86F,wBAAwB7oB,EAAc3pD,YAAa2pD,IAGxDjyE,KAAK86F,uBAAuB7oB,EAAcj5D,MAAOi5D,GACjDjyE,KAAK86F,uBAAuB7oB,EAAc/0D,WAAY+0D,IAEtDA,EAAc3pD,WACdtoB,KAAKm7F,4BAA4BlpB,EAAeipB,QAE/C,GAAIjpB,EAAcj5D,MAAMviB,OAASw7E,EAAc/0D,WAAWzmB,SAAW,GACtE,GAAIw7E,EAAcj5D,MAAM,aAAczE,GAAM,CACxC,GAAIoG,GAAuB3a,KAAMiyE,EAAcj5D,MAAM,IAAK,CACtD,IAAIsB,EAAQ23D,EAAcj5D,MAAM,GACP,kBAArBsB,EAAMlc,MAAMvC,MAA+Bye,EAAMO,UAAY7a,KAAK4a,UAAUN,EAAMO,WACjC,kBAA9C7a,KAAK4a,UAAUN,EAAMO,UAAUzc,MAAMvC,OACxCo2E,EAAcj5D,MAAM,GAAG/F,eAAiBK,kBAAgBa,OAASb,kBAAgB0E,YACjFi6D,EAAcngD,oBAAsBE,oBAAkB7d,QAG9DnU,KAAKye,gBAAgBusC,mBAAmBinB,EAAcnkE,QAAQ8D,SAAS,GAAIspF,EAAiBjpB,EAAcngD,kBAAmB9xB,KAAK0e,SAASgF,YAAauuD,EAAch/D,YAAajT,KAAK0e,SAASjZ,eAAWxL,EAAWsZ,GAAQ0+D,EAAcj5D,MAAM,OAAMi5D,EAAcj5D,MAAM,GAAG/F,YAAcK,kBAAgB0E,kBAE7S,GAAIi6D,EAAc/0D,WAAW,aAAc9J,GAAW,CACvD,IAAIxH,EAAYqmE,EAAc/0D,WAAW,GACzCld,KAAKye,gBAAgBitC,qBAAqB9/C,EAAWsvF,EAAiBjpB,EAAcngD,kBAAmBmgD,EAAch/D,YAAajT,KAAK0e,SAASjZ,eAAuCxL,IAA5B2R,EAAU5K,mBAAyD/G,IAA5B2R,EAAUlK,iBAA8B1B,KAAKk/B,6BAA8BlrB,GAAoBpI,WAIrS5L,KAAKye,gBAAgBusC,mBAAmBinB,EAAcnkE,QAASotF,EAAiBjpB,EAAcngD,kBAAmB9xB,KAAK0e,SAASgF,YAAauuD,EAAch/D,YAAajT,KAAK0e,SAASjZ,eAAWxL,EAAWsZ,GAAQ0+D,IAEjNA,EAAwB,YAC1BjyE,KAAKye,gBAAgB+tC,kBAAkBylB,EAAeipB,EAAiBl7F,KAAK0e,SAASjZ,aAKjGymB,EAAQoV,UAAUu0B,eAAiB,WAC/B,IAAItkC,EAAO,IAAI3T,GACXq0D,EAAgBjyE,KAAKod,cACrByU,EAAsBogD,EAAch/D,YAKxC,GAJMjT,KAAKkX,eAAiBC,gBAAcC,YAAmD,IAApCpX,KAAKod,cAAcpE,MAAMviB,SAC9EuJ,KAAKod,cAAc/Q,YAAcrM,KAAKod,cAAcpE,MAAM,GAAG3M,YAC7DrM,KAAKod,cAActP,QAAQzB,YAAcrM,KAAKod,cAAcpE,MAAM,GAAG3M,kBAE9CpS,IAAvB+F,KAAKod,gBACLpd,KAAK20E,qBACyB,OAA1B1C,EAAcnkE,SAAoBmkE,EAAcnkE,QAAQ8D,UAAYqgE,EAAcnkE,QAAQ8D,SAASnb,QAAQ,CAG3G,GAFAw7E,EAAcnkE,QAAQ6P,QAAQ4T,GAC9B0gD,EAAcnkE,QAAQ+P,QAAQo0D,EAAcnkE,QAAQgQ,aAClB,IAA9Bm0D,EAAc5lE,aAAqB4lE,EAAc5lE,cAAgB4lE,EAAcnkE,QAAQ04B,gBACvF,IAAK,IAAI3pC,EAAK,EAAG6f,EAAKu1D,EAAcj5D,MAAOnc,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC7D,IAAItC,EAAMmiB,EAAG7f,GACbtC,EAAIwB,QAAUxB,EAAIuT,QAAQ/R,QAC1BxB,EAAIyB,QAAUzB,EAAIuT,QAAQ9R,QAGlCi2E,EAAc15E,MAAQ05E,EAAcnkE,QAAQC,WAAWxV,MACvD05E,EAAc35E,OAAS25E,EAAcnkE,QAAQC,WAAWzV,OACxD25E,EAAcl2E,QAAUk2E,EAAcnkE,QAAQ/R,QAC9Ck2E,EAAcj2E,QAAUi2E,EAAcnkE,QAAQ9R,QAC9C,IAAIk/F,OAAkB,EACtBA,EAAkBhiE,GAAmBl5B,KAAKJ,QAAQC,IAClD,IAAI8hE,EAAkB3hE,KAAKoqE,aAAazI,kBAYxC,GAXAsQ,EAAcngD,kBAAoBE,oBAAkBja,QAChDk6D,EAAc3pD,WACdtoB,KAAK86F,wBAAwB7oB,EAAc3pD,YAAa2pD,IAGxDjyE,KAAK86F,uBAAuB7oB,EAAcj5D,MAAOi5D,GACjDjyE,KAAK86F,uBAAuB7oB,EAAc/0D,WAAY+0D,IAErDjyE,KAAKod,cAAcnK,YAAc8e,sBAAoB6gB,aAAkBq/B,EAAwB,YAChGjyE,KAAKye,gBAAgB+tC,kBAAkBylB,EAAeipB,EAAiBl7F,KAAK0e,SAASjZ,WAErFwsE,EAAc3pD,WACdtoB,KAAKm7F,4BAA4BlpB,EAAeipB,QAE/C,GAAIjpB,EAAcj5D,MAAMviB,OAASw7E,EAAc/0D,WAAWzmB,SAAW,GACtE,GAAIw7E,EAAc/0D,WAAW,aAAc9J,GAAW,CAClD,IAAIxH,EAAYqmE,EAAc/0D,WAAW,GACzCld,KAAKye,gBAAgBitC,qBAAqB9/C,EAAWsvF,EAAiBjpB,EAAcngD,kBAAmBD,EAAqB7xB,KAAK0e,SAASjZ,eAAuCxL,IAA5B2R,EAAU5K,mBAAyD/G,IAA5B2R,EAAUlK,iBAA8B1B,KAAKk/B,6BAA8BlrB,GAAoBpI,UAE1R,GAAIqmE,EAAcj5D,MAAM,aAAczE,GAAM,CAC7C,GAAIoG,GAAuB3a,KAAMiyE,EAAcj5D,MAAM,IAAK,CACtD,IAAIoiF,EAAanpB,EAAcj5D,MAAM,GACP,kBAA1BoiF,EAAWh9F,MAAMvC,MAA8Bu/F,EAAWvgF,UAC1D7a,KAAK4a,UAAUwgF,EAAWvgF,WAC4B,kBAAnD7a,KAAK4a,UAAUwgF,EAAWvgF,UAAUzc,MAAMvC,OAC7Co2E,EAAcj5D,MAAM,GAAG/F,eAAiBK,kBAAgB0E,WAAa1E,kBAAgBa,QACrF89D,EAAcngD,oBAAsBE,oBAAkB7d,QAG9DnU,KAAKye,gBAAgBusC,mBAAmBinB,EAAcnkE,QAAQ8D,SAAS,GAAIspF,EAAiBjpB,EAAcngD,kBAAmB9xB,KAAK0e,SAASgF,YAAauuD,EAAch/D,YAAajT,KAAK0e,SAASjZ,UAAWk8D,EAAiBpuD,GAAQ0+D,EAAcj5D,MAAM,OAAMi5D,EAAcj5D,MAAM,GAAG/F,YAAcK,kBAAgB0E,mBAIxThY,KAAKye,gBAAgBusC,mBAAmBinB,EAAcnkE,QAASotF,EAAiBjpB,EAAcngD,kBAAmB9xB,KAAK0e,SAASgF,YAAauuD,EAAch/D,YAAajT,KAAK0e,SAASjZ,UAAWk8D,EAAiBpuD,GAAQ0+D,MAMzO/lD,EAAQoV,UAAU65D,4BAA8B,SAAUlpB,EAAeipB,GACrEl7F,KAAKye,gBAAgBusC,mBAAmBinB,EAAcnkE,QAAQ8D,SAAS,GAAIspF,EAAiBjpB,EAAcngD,kBAAmB9xB,KAAK0e,SAASgF,YAAauuD,EAAch/D,YAAajT,KAAK0e,SAASjZ,eAAWxL,EAAWsZ,GAAQ0+D,EAAc3pD,cAGjP4D,EAAQoV,UAAUupB,uBAAyB,SAAU7zD,EAAGC,EAAGsB,EAAOD,GAC9D0H,KAAK20E,qBACL30E,KAAKye,gBAAgBosC,uBAAuB7zD,EAAGC,EAAGsB,EAAOD,EAAQ0H,KAAK8qD,aAAc9qD,KAAK0e,SAASjZ,YAKtGymB,EAAQoV,UAAUypB,kBAAoB,SAAUnrD,GAC5C,IAAI2e,EAAaC,GAAmBxe,KAAKJ,QAAQC,IACjDG,KAAKye,gBAAgBssC,kBAAkBnrD,EAAS2e,EAAYve,KAAK0e,SAASjZ,YAK9EymB,EAAQoV,UAAU07C,iBAAmB,WACjC,IAAIz+D,EAAaC,GAAmBxe,KAAKJ,QAAQC,IAC7C+0E,EAAcr2D,EAAWiD,eAAejD,EAAW1e,GAAK,gBACxD+0E,GACAA,EAAYp3D,WAAW8R,YAAYslD,IAI3C1oD,EAAQoV,UAAU+yC,mBAAqB,SAAUj3D,GAC7C,IAAK,IAAI1mB,EAAI,EAAGA,EAAIsJ,KAAKgZ,MAAMviB,OAAQC,IAAK,CACxC,IAAI6J,EAAOP,KAAKgZ,MAAMtiB,GACtB0mB,EAActmB,KAAKyJ,GAEvB,IAAS7J,EAAI,EAAGA,EAAIsJ,KAAKkd,WAAWzmB,OAAQC,IAAK,CAC7C,IAAIuoC,EAAOj/B,KAAKkd,WAAWxmB,GAC3B0mB,EAActmB,KAAKmoC,GAEvB,OAAO7hB,GAGX8O,EAAQoV,UAAUqzC,mBAAqB,WACnC,IAAIp2D,EAAaC,GAAmBxe,KAAKJ,QAAQC,IAE7Cw7F,GADc98E,EAAWiD,eAAejD,EAAW1e,GAAK,gBACxC0e,EAAWiD,eAAexhB,KAAK8qD,aAAajrD,GAAK,qBACjEw7F,GACAA,EAAc79E,WAAW8R,YAAY+rE,GAEzCr7F,KAAKg9E,mBAGL,IAAK,IADDpvE,EADAmoB,EAAamD,GAAmBl5B,KAAKJ,QAAQC,IAAIk2B,WAE5Cr/B,EAAIq/B,EAAWt/B,OAAQC,EAAI,EAAGA,KACnCkX,EAAQmoB,EAAWr/B,EAAI,IACjB8mB,WAAW8R,YAAY1hB,IAIrCse,EAAQoV,UAAUuR,WAAa,SAAU75B,EAAOnZ,GAC5C,IAAIiO,EACJjO,EAAKmZ,EAAMnZ,GAAK,IAAMA,EAEtB,IAAK,IADDiY,EAAYkB,aAAiBgX,GAAShX,EAAQhZ,KAAKs7F,iBAAiBt7F,KAAK4a,UAAU5B,EAAMnZ,KACpFnJ,EAAI,EAAGA,EAAIohB,EAAUlG,SAASnb,OAAQC,IACvCmJ,IAAOiY,EAAUlG,SAASlb,GAAGmJ,KAC7BiO,EAAUgK,EAAUlG,SAASlb,IAGrC,OAAOoX,GAGXoe,EAAQoV,UAAUs0D,kBAAoB,SAAUr1F,EAAMqL,EAAWrJ,GAC7D,GAAwB,SAApBhC,EAAKnC,MAAMvC,MAAmB0E,EAAKuN,QAAQ8D,SAAS,aAAcoe,GAAQ,CAC1E,GAAyB,aAArBzvB,EAAKnC,MAAMA,MAAsB,CACjC,GAAImE,GAAkD,gBAAxChC,EAAKnC,MAAMk7C,SAASD,WAAWx9C,MACtC+P,EAAUs0B,aAAc,CAC3B,IAAI1N,EAAS5mB,EAAUs0B,aACnBk3C,EAAW72E,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAC7D,GAAIwlE,EAASxlE,SACT,IAAK,IAAI/U,EAAK,EAAG6f,EAAK06D,EAASxlE,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC3D,IAAI+Q,EAAQ8O,EAAG7f,GACf,GAAI+Q,EAAMsgB,SAAWtgB,EAAM/N,KAAOU,EAAKV,GAAK,IAAM2yB,EAC9C,OAAO5kB,EAAMgE,SAAS,IAKtC,OAAOrR,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAEzD,OAAOrR,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GAE7C,OAAK5R,KAAKu7F,eAAeh7F,EAAKuN,QAAQ8D,SAAS,KACtCrR,EAAKqR,SAIPrR,EAAKuN,QAHGvN,EAAKuN,QAAQ8D,SAAS,IAKzCsa,EAAQoV,UAAUi6D,eAAiB,SAAUh7F,GACzC,OAAOA,EAAKoC,SAAgC,IAArBpC,EAAKoC,OAAOC,MAAkC,IAApBrC,EAAKoC,OAAOI,KAAmC,IAAtBxC,EAAKoC,OAAOE,OAAsC,IAAvBtC,EAAKoC,OAAOG,SAErHopB,EAAQoV,UAAU4tD,aAAe,WAC7BlvF,KAAK0jE,WAETx3C,EAAQoV,UAAUw2D,eAAiB,WAC/B93F,KAAK0jE,WAKTx3C,EAAQoV,UAAUoiC,QAAU,WACxB,GAAI1jE,KAAKkX,eAAiBC,gBAAcypD,SAAU,CAC9C,IAAImuB,EAAWxtE,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,YACrD8Z,EAAOo1E,EAASxpF,MACpB2lF,eAAapvC,OAAOizC,EAAU,QAAS/uF,KAAKoqE,aAAahC,aACzD8iB,eAAapvC,OAAOizC,EAAU,WAAY/uF,KAAKkvF,cAC/C,IAAItvF,EAAU2hB,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,mBACpDE,GAASq2D,SAAUx2D,EAAQ43B,YAAa6+B,SAAU18C,EAAM28C,QAAQ,GAChEo4B,GAAiB,EACjBnuF,OAAO,EACXX,EAAQ4d,WAAW8R,YAAY1vB,GAC/B,IAAI0oE,OAAc,EAclB,GAbItoE,KAAKm5C,aACL54C,EAAOP,KAAKm5C,WAAWqiD,qBAAqBx7F,KAAK2oE,YAAa3oE,MAC9DsoE,EAActoE,KAAKm5C,WAAWw1C,yBAAyBpuF,EAAMP,KAAK2oE,YAAY9oE,KAC9E6uF,IAAiBnuF,IAETX,EAAQ43B,cAAgB7d,IACxB3Z,KAAKy2D,aAAanyB,eAAam3D,SAAU17F,GACpCA,EAAKu2D,QACNt2D,KAAKm5C,WAAWuiD,4BAA4Bn7F,EAAMP,KAAK2oE,YAAahvD,EAAM3Z,SAKrF0uF,EAAgB,CACjBnuF,EAAOP,KAAK4a,UAAU5a,KAAK2oE,YAAY9tD,UACvC,IAAI8gF,EAAa37F,KAAKoqE,aAAaxB,cAAcroE,GAAM,GAClDo7F,GAAc/7F,EAAQ43B,cAAgB7d,GACvC3Z,KAAKy2D,aAAanyB,eAAam3D,SAAU17F,GAExCuoE,IACDA,EAActoE,KAAK6yC,WAAWtyC,EAAKuN,QAAS9N,KAAK2oE,YAAY9oE,KAEjE,IAAIyoB,EAAa+J,GAAe9xB,EAAMP,KAAK2oE,YAAY9oE,IAWvD,GAVIyoB,EAAWroB,UAAY0Z,GAAS5Z,EAAKu2D,SACjC/1D,EAAKsa,UAAyD,kBAA7C7a,KAAK4a,UAAUra,EAAKsa,UAAUzc,MAAMvC,OAC3B,IAAvB8d,EAAKuE,QAAQ,OAAsC,IAAvBvE,EAAKuE,QAAQ,OAAsC,IAAvBvE,EAAKuE,QAAQ,OAC9C,IAAvBvE,EAAKuE,QAAQ,OAAwD,IAAzC3d,EAAKV,GAAGqe,QAAQ,sBAC/CvE,EAAO,MAAQA,GAEnB2O,EAAWroB,QAAU0Z,EACrB3Z,KAAK6jB,WACL7jB,KAAK61D,kBAEL8lC,IACA37F,KAAKmxE,uBAAuB5wE,GAC5BP,KAAKkxE,gBAAgB3wE,UACdP,KAAK4a,UAAU5a,KAAK2oE,YAAY9tD,UAC1B,KAATlB,GAAa,CACb3Z,KAAK2b,iBACL,IAAI4N,EAAe7N,GAAYnb,GAC/BA,EAAOP,KAAKosB,IAAI7C,GAChBvpB,KAAKob,oBAAoB7a,GACzBP,KAAKif,eAAe/C,OAAOlc,KAAK4a,UAAUra,EAAKV,MAI3DyoE,EAAYp6C,SAAU,EACtBluB,KAAKob,oBAAoB7a,GACzBP,KAAKkX,eAAiBlX,KAAKkX,gBAAkBC,gBAAcypD,SACvD5gE,KAAK2oE,YAAY0c,SACjBrlF,KAAK04D,iBAET14D,KAAK2oE,aAAgB9oE,GAAI,GAAIgb,SAAU,GAAIwqE,SAAS,KAI5Dn5D,EAAQoV,UAAU8lD,aAAe,WAC7B,UAAKpnF,KAAKkX,eAAiBC,gBAAcwyE,SAAc3pF,KAAKkX,eAAiBC,gBAAcC,YACpFpX,KAAKkX,eAAiBC,gBAAckyD,UAAiBrpE,KAAKkX,eAAiBC,gBAAcw1E,eAOpGzgE,EAAQoV,UAAU+lD,aAAe,SAAUnrC,EAASC,GAChD,SAAID,EAAQh/B,YAAci/B,EAAQj/B,YAAcg/B,EAAQljC,OAASmjC,EAAQj/B,YAClEg/B,EAAQ9wB,cAAgB+wB,EAAQ/wB,cAAgB8wB,EAAQ/wB,iBAAmBgxB,EAAQhxB,kBAK9Fe,EAAQoV,UAAUgmD,oBAAsB,SAAU1oE,GAC9C,IAAIg9E,IAAWh9E,EACX5e,KAAKkX,eAAiBC,gBAAckyD,YAAcuyB,GAAah9E,IAAWzH,gBAAckyD,YACxFrpE,KAAKkX,eAAiBlX,KAAKkX,gBAAkBC,gBAAckyD,UAE3DrpE,KAAKkX,eAAiBC,gBAAcw1E,gBAAkBiP,GAAYh9E,IAAWzH,gBAAcw1E,gBAC3F3sF,KAAKkX,eAAiBlX,KAAKkX,gBAAkBC,gBAAcw1E,eAInEzgE,EAAQoV,UAAU4tC,WAAa,SAAU3uE,GACrCP,KAAKmxE,uBAAuB5wE,GAC5BP,KAAKkxE,gBAAgBlxE,KAAK4a,UAAUra,EAAKV,YAClCG,KAAK4a,UAAUra,EAAKV,IACvBU,EAAKqR,iBACE5R,KAAKolF,WAAW7kF,EAAKV,IAEhCG,KAAKgZ,MAAM7S,OAAOnG,KAAKgZ,MAAMkF,QAAQ3d,GAAO,IAGhD2rB,EAAQoV,UAAU8sD,YAAc,SAAU7tF,GACtC,IACIkuE,KACAluE,EAAKqR,WACL68D,EAAWzuE,KAAKif,eAAes3D,YAAYh2E,OAE/C,IAAK,IAAI1D,EAAK,EAAGg/F,EAAaptB,EAAU5xE,EAAKg/F,EAAWplG,OAAQoG,IAAM,CAClE,IAAImc,EAAQ6iF,EAAWh/F,GACnBmD,KAAK4a,UAAU5B,EAAMnZ,KACrBG,KAAK87C,OAAO9iC,KAOxBkT,EAAQoV,UAAUw6D,aAAe,SAAU3+E,EAAcmR,EAAW23D,GAChE,KAAMjmF,KAAKkX,eAAiBC,gBAAcC,YAAa,CACnD,IAAI6Q,EAAQ9K,EAAarP,QAAQ8D,SAAS,GAAGpQ,OAE7C,IAD+BxB,KAAKif,eAAe07C,8BAAyB1gE,OAAWA,EAAWguB,GAE9F,GAAI9K,aAAwB5I,GAAM,CAE9B,IAAK,IADDwnF,EAAUztE,EACLzxB,EAAK,EAAG6f,EAAKC,OAAOC,KAAKqpE,GAAcppF,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAElE,OADIqwB,EAAMxQ,EAAG7f,IAET,IAAK,QACDsgB,EAAa5kB,MAAQwjG,EAAQxjG,MAC7B,MACJ,IAAK,SACD4kB,EAAa7kB,OAASyjG,EAAQzjG,OAC9B,MACJ,IAAK,UACD6kB,EAAaphB,QAAUggG,EAAQhgG,QAC/B,MACJ,IAAK,UACDohB,EAAanhB,QAAU+/F,EAAQ//F,QAC/B,MACJ,IAAK,cACDmhB,EAAa9Q,YAAc0vF,EAAQ1vF,aAI/CrM,KAAK0d,mBAAmBP,EAAc8oE,EAAa33D,OAElD,CACD,IAAK,IAAI9C,EAAK,EAAGC,EAAK9O,OAAOC,KAAKqpE,GAAcz6D,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAClE,IAAI0B,EAAMzB,EAAGD,GACTwwE,EAAe1tE,EACf2tE,EAAoB9+E,EAAapc,YACjCm7F,EAAoB/+E,EAAatS,YACrC,OAAQqiB,GACJ,IAAK,cACD+uE,EAAkBjlG,EAAIglG,EAAaj7F,YAAY/J,GAAKilG,EAAkBjlG,EACtEilG,EAAkBhlG,EAAI+kG,EAAaj7F,YAAY9J,GAAKglG,EAAkBhlG,EACtE,MACJ,IAAK,cACDilG,EAAkBllG,EAAIglG,EAAanxF,YAAY7T,GAAKklG,EAAkBllG,EACtEklG,EAAkBjlG,EAAI+kG,EAAanxF,YAAY5T,GAAKilG,EAAkBjlG,GAGlF+I,KAAK6rE,wBAAwB1uD,EAAc8oE,EAAa33D,MAKxEpC,EAAQoV,UAAU66D,yBAA2B,SAAUh/E,EAAcmR,EAAW/tB,EAAM6K,GAoBlF,YAnBmBnR,IAAfsG,EAAKL,OAAmD,SAA5Bid,EAAa/e,MAAMvC,OAC/CwwB,GAAY9rB,EAAKL,MAAOid,EAAarP,QAAQ8D,SAAS,IACtDxG,GAAS,QAEOnR,IAAhBsG,EAAK+3B,SACLt4B,KAAKo8F,aAAaj/E,EAAamb,OAAQ/3B,EAAK+3B,QAC5CltB,GAAS,QAEYnR,IAArBsG,EAAK0S,cACAqb,EAAUrb,YAAcK,kBAAgBH,UACtC5S,EAAK0S,YAAcK,kBAAgBH,SAAY2sB,GAAW9/B,KAAMmd,GACnEnd,KAAK2b,kBAGL3b,KAAK86F,uBAAuB96F,KAAKod,cAAcpE,MAAOhZ,KAAKod,eAC3Dpd,KAAK61D,iBACLzqD,GAAS,IAGVA,GAIX8gB,EAAQoV,UAAU5jB,mBAAqB,SAAUP,EAAcmR,EAAW/tB,EAAM87F,EAAU36C,GACtF,IAOIt2C,EAPAkxF,EAAiBn/E,EAAarP,QAAQ3B,YACtC6oE,EAAsB73D,EAAarP,QAAQtM,OAC3CkvB,GAAkB,EAgHtB,QAxGmBz2B,IAAfsG,EAAKhI,QACA4kB,EAAavL,SAKRuL,EAAarF,UAInBqF,EAAarP,QAAQvV,MAAQgI,EAAKhI,MAHlCyH,KAAK62E,YAAY15D,EAAc5c,EAAKhI,OAAO,IAL3C4kB,EAAarP,QAAQ8D,SAAS,GAAGrZ,MAAQgI,EAAKhI,MAC9C6S,GAAS,EACTslB,GAAkB,SASNz2B,IAAhBsG,EAAKjI,SACA6kB,EAAavL,SAKRuL,EAAarF,UAInBqF,EAAarP,QAAQxV,OAASiI,EAAKjI,OAHnC0H,KAAK62E,YAAY15D,EAAc5c,EAAKjI,QAAQ,IAL5C6kB,EAAarP,QAAQ8D,SAAS,GAAGtZ,OAASiI,EAAKjI,OAC/C8S,GAAS,EACTslB,GAAkB,IAS1BtlB,EAASpL,KAAKm8F,yBAAyBh/E,EAAcmR,EAAW/tB,EAAM6K,QAC7CnR,IAArBsG,EAAK0S,aAA6BmB,GAAUka,KAAela,GAAU7T,KACrE4c,EAAarP,QAAQ8D,SAAS,GAAG0mB,OAASlkB,GAAU+I,GAAgBA,EAAamb,OAAS,WAEzEr+B,IAAjBsG,EAAKxE,UACLohB,EAAarP,QAAQ/R,QAAUwE,EAAKxE,QACpCqP,GAAS,EACTslB,GAAkB,QAEDz2B,IAAjBsG,EAAKvE,UACLmhB,EAAarP,QAAQ9R,QAAUuE,EAAKvE,QACpCoP,GAAS,EACTslB,GAAkB,QAEHz2B,IAAfsG,EAAKixB,QACLrU,EAAarP,QAAQ0jB,MAAQjxB,EAAKixB,MAClCpmB,GAAS,QAESnR,IAAlBsG,EAAK8c,WACLF,EAAarP,QAAQuP,SAAW9c,EAAK8c,SACrCjS,GAAS,EACTslB,GAAkB,QAECz2B,IAAnBsG,EAAKgZ,YACL4D,EAAarP,QAAQyL,UAAYhZ,EAAKgZ,UACtCnO,GAAS,EACTslB,GAAkB,QAEAz2B,IAAlBsG,EAAK6X,WACL+E,EAAarP,QAAQsK,SAAW7X,EAAK6X,SACrChN,GAAS,EACTslB,GAAkB,QAECz2B,IAAnBsG,EAAKgb,YACL4B,EAAarP,QAAQyN,UAAYhb,EAAKgb,UACtCnQ,GAAS,EACTslB,GAAkB,QAEGz2B,IAArBsG,EAAK8L,cACD8Q,EAAavL,UAAY8vC,GACzB1hD,KAAKif,eAAei3D,cAAc/4D,GAAeA,GAAeA,EAAa9Q,YAAc8Q,EAAarP,QAAQzB,aAAerV,EAAGmmB,EAAaphB,QAAS9E,EAAGkmB,EAAanhB,UAAW,GAEvLmhB,EAAarP,QAAQzB,YAAc9L,EAAK8L,YACxCjB,GAAS,EACTslB,GAAkB,QAEOz2B,IAAzBsG,EAAKmrB,kBACLvO,EAAarP,QAAQ5N,MAAM+X,KAAO1X,EAAKmrB,sBAEtBzxB,IAAjBsG,EAAK2tB,SACLluB,KAAK05C,wBAAwBv8B,EAAarP,QAASqP,EAAcA,EAAa+Q,cAE/Dj0B,IAAfsG,EAAKnC,OAAmD,SAA5B+e,EAAa/e,MAAMvC,OAC/CuP,GAAS,EACTijB,GAAY9tB,EAAM4c,EAAcmR,EAAWtuB,MAC3C0wB,GAAkB,GAElBnwB,EAAKoC,SACLyI,GAAS,EACTpL,KAAKu8F,aAAap/E,EAAc5c,GAChCmwB,GAAkB,SAEDz2B,IAAfsG,EAAKnC,YAA2CnE,IAApBsG,EAAKnC,MAAMvC,WAAsC5B,IAAfsG,EAAKhI,YAClD0B,IAAhBsG,EAAKjI,aAAuC2B,IAAfsG,EAAKL,QAAoD,SAA5Bid,EAAa/e,MAAMvC,MAAmBmE,KAAKm5C,aACxG/tC,GAAS,EACTslB,GAAkB,EAClB1wB,KAAKm5C,WAAWqjD,WAAWj8F,EAAM+tB,EAAWnR,EAAcnd,OAE9B,gBAA5Bmd,EAAa/e,MAAMvC,MAAuD,cAA7BshB,EAAa/e,MAAMA,QAChEgN,GAAS,EACTslB,GAAkB,EAClB1wB,KAAKy8F,kBAAkBl8F,EAAM+tB,EAAWnR,EAAcnd,QAErDmd,EAAa/e,OAAqC,kBAA5B+e,EAAa/e,MAAMvC,MAA8BshB,EAAatC,UACrF7a,KAAK4a,UAAUuC,EAAatC,WAAkE,kBAArD7a,KAAK4a,UAAUuC,EAAatC,UAAUzc,MAAMvC,QACrFuP,GAAS,EACTslB,GAAkB,QAEHz2B,IAAfsG,EAAKkyB,MACL,IAAK,IAAI51B,EAAK,EAAG6f,EAAKC,OAAOC,KAAKrc,EAAKkyB,OAAQ51B,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACjE,IAAIqwB,EAAMxQ,EAAG7f,GACT6iB,EAAQvnB,OAAO+0B,GACnB9hB,GAAS,EACT,IAAIkhB,EAAgB/rB,EAAKkyB,MAAMvF,GAC3BwvE,EAAav/E,EAAasV,MAAM/S,GACpC1f,KAAK28F,WAAWrwE,EAAeowE,EAAYv/E,EAAarP,SAGhE,QAAyB7T,IAArBsG,EAAK+X,kBAA4Cre,IAAfsG,EAAKhI,MACvC,IAAK,IAAIizB,EAAK,EAAGC,EAAK9O,OAAOC,KAAKrc,EAAK+X,aAAe6E,EAAa7E,aAAckT,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAC/F0B,EAAMzB,EAAGD,GACT9L,EAAQvnB,OAAO+0B,GACnB9hB,GAAS,EACLkhB,EAAgB/rB,EAAK+X,YAAc/X,EAAK+X,YAAY4U,GAAO/P,EAAa7E,YAA5E,IACIuV,EAAmB1Q,EAAa7E,YAAYoH,GAChD,GAAImO,EAAkB,CAClB,IAAImlB,IAAa71B,EAAa5kB,MAC9ByH,KAAKuwC,iBAAiBjkB,EAAeuB,EAAkB1Q,EAAarP,QAASqP,EAAc61B,IAevG,QAXwB/4C,IAApBsG,EAAK65C,iBAAkDngD,IAAtBsG,EAAK85C,mBAAkDpgD,IAApBsG,EAAK45C,aACzEn6C,KAAKgwF,WAAW7yE,GAChBnd,KAAKiwF,yBAAyB9yE,QACNljB,IAApBsG,EAAK45C,YACLn6C,KAAKif,eAAek7D,WAAWh9D,EAAcnd,MAEjDoL,GAAS,QAEQnR,IAAjBsG,EAAKjB,SACLU,KAAKM,cAAc6c,EAAc5c,GAEjC6K,EAAQ,MACgBnR,IAApB+F,KAAKm5C,YACLn5C,KAAKm5C,WAAWyjD,yBAAyBz/E,GAAgBphB,QAAUuyB,EAAUvyB,SAAWohB,EAAaphB,QAAUC,QAAUsyB,EAAUtyB,SAAWmhB,EAAanhB,SAAYgE,MAE3Kmd,EAAarP,QAAQ6P,QAAQ,IAAIC,GAAKT,EAAarP,QAAQtM,OAAOjJ,MAAO4kB,EAAarP,QAAQtM,OAAOlJ,SACrG6kB,EAAarP,QAAQ+P,QAAQV,EAAarP,QAAQgQ,aAClD9d,KAAK87F,aAAa3+E,EAAcmR,EAAW/tB,GACpCP,KAAKkX,eAAiBC,gBAAcC,cAAiBpX,KAAKkX,eAAiBC,gBAAckyD,WACxFrpE,KAAK68F,kBAAkB1/E,IACvBnd,KAAK61D,iBAGRwmC,EAOGl/E,GAAgBA,EAAa+Q,SAAW/Q,EAAau7B,UACrD14C,KAAKw4F,qBAAqBr7E,EAAgD,IAAjCA,EAAau7B,SAASjiD,SAPnEuJ,KAAKif,eAAe81D,uBAAuB53D,EAAc63D,OAA2C/6E,IAArBsG,EAAK8L,aAChFqkB,GACA1wB,KAAKwpE,qBAAqBrsD,SAQVljB,IAApB+F,KAAKm5C,YACLn5C,KAAKm5C,WAAWi0C,YAAYjwE,EAAcnd,MAE9CA,KAAK82E,kBAAkB35D,IACyD,IAA5Em/E,EAAe/4F,OAAO+4F,EAAgBn/E,EAAarP,QAAQ3B,cAC3DnM,KAAKikF,WAAW9mE,GAEpB,IAAIgL,KAEJ,GAAuB,KADvBA,EAAUA,EAAQgU,OAAOn8B,KAAKod,cAAcpE,MAAOhZ,KAAKod,cAAcF,aAC1DzmB,QACJ0mB,EAAatC,UAAY7a,KAAK4a,UAAUuC,EAAatC,UAAW,CAChE,IAAIw8D,EAAWr3E,KAAK4a,UAAUuC,EAAatC,UAC3Cw8D,EAASvpE,QAAQ6P,QAAQ,IAAIC,GAAKy5D,EAASvpE,QAAQvV,MAAO4kB,EAAarP,QAAQxV,SAC/E++E,EAASvpE,QAAQ+P,QAAQw5D,EAASvpE,QAAQgQ,aAC1Cu5D,EAASt7E,QAAUs7E,EAASvpE,QAAQ/R,QACpCs7E,EAASr7E,QAAUq7E,EAASvpE,QAAQ9R,SAGyC,IAAjFg5E,EAAoBzxE,OAAOyxE,EAAqB73D,EAAarP,QAAQtM,UACrExB,KAAK88F,gBAAgB3/E,GACjBA,EAAavL,UACb5R,KAAK82E,kBAAkB35D,IAG1Bnd,KAAK06E,qBACN16E,KAAKob,oBAAoB+B,IACpBk/E,GAAY3rE,GACb1wB,KAAKwpE,qBAAqBrsD,IAGN,QAAxBA,EAAaywB,QAAoB5tC,KAAKkX,iBACtCiG,EAAaywB,OAAS,YAIlC1hB,EAAQoV,UAAUm7D,kBAAoB,SAAUxW,EAAa33D,EAAWnR,EAAcje,GAElF,QADwCjF,IAAtBgsF,EAAY1tF,YAA8C0B,IAAvBgsF,EAAY3tF,OAChD,CACb,IAAI23B,EAAiB9S,EAAarP,QAAQ8D,SAAS,GAAGA,SAAS,GAC/Dqe,EAAe13B,MAAQ0tF,EAAY1tF,MACnC03B,EAAe33B,OAAS2tF,EAAY3tF,OACpC,IAAI43B,EAAiB/S,EAAarP,QAAQ8D,SAAS,GAAGA,SAAS,GAC/Dse,EAAe33B,MAAQ0tF,EAAY1tF,MAAQ,IAC3C23B,EAAe53B,OAAS2tF,EAAY3tF,OAAS,MAGrD4zB,EAAQoV,UAAU2qD,0BAA4B,SAAUrgF,GACpD,GAAI5L,KAAK26E,wBAAyB,EAEf,IADH36E,KAAKslF,wBAAwBpnE,QAAQtS,IAE7C5L,KAAKslF,wBAAwBxuF,KAAK8U,OAGrC,CACD,IAAIqzB,GACAl+B,YAAa6K,EAAU7K,YAAa8J,YAAae,EAAUf,YAAapJ,SAAUmK,EAAUnK,SAC5F2wC,SAAUxmC,EAAUwmC,SAAUlS,aAAct0B,EAAUs0B,aAAcmS,aAAczmC,EAAUymC,cAEhGryC,KAAK6rE,wBAAwBjgE,KAAeqzB,KAIpD/S,EAAQoV,UAAUkoC,qBAAuB,SAAUrsD,GAC/C,GAAIA,EAAaw7B,QAAQliD,OAAS,EAC9B,IAAK,IAAIJ,EAAI,EAAGA,EAAI8mB,EAAaw7B,QAAQliD,OAAQJ,IAC7C2J,KAAKisF,0BAA0BjsF,KAAK4a,UAAUuC,EAAaw7B,QAAQtiD,KAG3E,GAAI8mB,EAAau7B,SAASjiD,OAAS,EAC/B,IAAK,IAAIspB,EAAI,EAAGA,EAAI5C,EAAau7B,SAASjiD,OAAQspB,IAC9C/f,KAAKisF,0BAA0BjsF,KAAK4a,UAAUuC,EAAau7B,SAAS34B,KAGxE5C,EAAatC,UAAY7a,KAAK4a,UAAUuC,EAAatC,WACrD7a,KAAKwpE,qBAAqBxpE,KAAK4a,UAAUuC,EAAatC,YAI9DqR,EAAQoV,UAAUy7D,6BAA+B,SAAU5/E,EAAcg/B,EAASD,EAAS2Z,GAUvF,YATqB57D,IAAjBiiD,EAAQrgD,MAAsBqgD,EAAQrgD,OAASsgD,EAAQtgD,MACnDshB,EAAahkB,SAAS1C,OAAS,QAA0BwD,IAArBiiD,EAAQ/iD,WAC5CgkB,EAAahkB,kBAGEc,IAAlBiiD,EAAQ99C,YAA+CnE,IAAvBkjB,EAAa/e,OAC9C+e,EAAa/e,OAAqC,SAA5B+e,EAAa/e,MAAMvC,MAAmBmE,KAAKm5C,YACjEn5C,KAAKm5C,WAAW6jD,oBAAoB7/E,EAAcg/B,EAASD,EAASl8C,WAEvC/F,IAA7BkjB,EAAalK,aACbjT,KAAK86F,uBAAuB96F,KAAKod,cAAcF,WAAYld,KAAKod,eACzDy4C,GAAiB,GAErBA,GAGX3pC,EAAQoV,UAAUuqC,wBAA0B,SAAU1uD,EAAcg/B,EAASD,EAAS+gD,GAClF,IAAIX,EAAiBn/E,EAAarP,QAAQtM,OACtCq0D,GAAiB,EACjBl9D,KACJk9D,EAAiB71D,KAAK+8F,6BAA6B5/E,EAAcg/B,EAASD,EAAS2Z,GACnF,IAAIc,EACAC,EAIJ,QAHwB38D,IAApBiiD,EAAQhuB,SACRluB,KAAK05C,wBAAwBv8B,EAAarP,QAASqP,EAAcA,EAAa+Q,cAEtDj0B,IAAxBiiD,EAAQn7C,kBAAqD9G,IAAxBiiD,EAAQrxC,kBACrB5Q,IAArBiiD,EAAQz6C,eAA+CxH,IAArBiiD,EAAQ9J,eACpBn4C,IAAzBiiD,EAAQhc,mBAAuDjmC,IAAzBiiD,EAAQ7J,mBAC7Bp4C,IAAjBiiD,EAAQrgD,WAA2C5B,IAArBiiD,EAAQ/iD,SAAwB,CAC9D,QAA0Bc,IAArBiiD,EAAQz6C,UAA0By6C,EAAQz6C,WAAa06C,EAAQ16C,UAAay6C,EAAQhc,aAAc,CACnG,IAAIh+B,EAAalC,KAAK4a,UAAUuC,EAAa1b,UAK7C,GAJAm1D,EAAU52D,KAAKk9F,sBAAsBh7F,GAAY,KAC5CA,GAAeyS,GAAczS,IAAe2S,GAAkB+hD,MAC/Dz5C,EAAanc,cAAgBkB,EAAalC,KAAK41F,kBAAkB1zF,EAAYib,GAAc,QAAQljB,QAE9EA,IAArBiiD,EAAQz6C,eAA+CxH,IAArBkiD,EAAQ16C,UAA+C,KAArB06C,EAAQ16C,SAAiB,CAC7F,IAAI07F,EAAYn9F,KAAK4a,UAAUuhC,EAAQ16C,eACrBxH,IAAdkjG,GAA2BA,EAAUzkD,WAA6D,IAAjDykD,EAAUzkD,SAASx6B,QAAQf,EAAatd,KACzF0wB,GAAW4sE,EAAUzkD,SAAUv7B,EAAatd,IAGpDG,KAAKitF,YAAY9vE,GAErB,QAAyBljB,IAArBiiD,EAAQ9J,UAA0B8J,EAAQ9J,WAAa+J,EAAQ/J,SAAU,CACzE,IAAIjwC,EAAanC,KAAK4a,UAAUshC,EAAQ9J,UAKxC,GAJAukB,EAAS32D,KAAKk9F,sBAAsB/6F,GAAY,KAC3CA,GAAemS,GAAanS,IAAesS,GAAiBkiD,MAC7Dx5C,EAAazb,cAAgBS,EAAanC,KAAK41F,kBAAkBzzF,EAAYgb,GAAc,QAASljB,QAExFA,IAAZkiD,QAA8CliD,IAArBkiD,EAAQ/J,UAA+C,KAArB+J,EAAQ/J,SAAiB,CACpF,IAAI6oC,EAAYj7E,KAAK4a,UAAUuhC,EAAQ/J,eACrBn4C,IAAdghF,GAA2BA,EAAUtiC,UAA2D,IAAhDsiC,EAAUtiC,QAAQz6B,QAAQf,EAAatd,KACvF0wB,GAAW0qD,EAAUtiC,QAASx7B,EAAatd,IAGnDG,KAAKitF,YAAY9vE,GAErB,QAA6BljB,IAAzBiiD,EAAQhc,cAA8Bgc,EAAQhc,eAAiBic,EAAQjc,aAAc,CACrF,IAAI39B,OAAS,EACT4a,EAAa1b,UAAYzB,KAAK4a,UAAUuC,EAAa1b,YACrDc,EAASvC,KAAK4a,UAAUuC,EAAa1b,UAAUqM,SAEnDqP,EAAahc,kBAAoBoB,EAC7BvC,KAAK6yC,WAAWtwC,EAAQ25C,EAAQhc,mBAAgBjmC,EAExD,QAA6BA,IAAzBiiD,EAAQ7J,cAA8B6J,EAAQ7J,eAAiB8J,EAAQ9J,aAAc,CACrF,IAAIrvC,OAAS,EACTma,EAAai1B,UAAYpyC,KAAK4a,UAAUuC,EAAai1B,YACrDpvC,EAAShD,KAAK4a,UAAUuC,EAAai1B,UAAUtkC,SAEnDqP,EAAa7a,kBAAoBU,EAC7BhD,KAAK6yC,WAAW7vC,EAAQk5C,EAAQ7J,mBAAgBp4C,EAExDtB,EAASqH,KAAKgM,UAAUmR,GAK5B,QAHsBljB,IAAlBiiD,EAAQh8C,OACRmsB,GAAY6vB,EAAQh8C,MAAOid,EAAarP,QAAQ8D,SAAS,KAEzDjZ,EAAOlC,OAAS,QAAiCwD,IAA5BiiD,EAAQrqC,sBAA6D5X,IAA5BiiD,EAAQnqC,sBAC7C9X,IAAzBiiD,EAAQ7jD,gBACRq4B,GAAgBvT,EAAcxkB,EAAOlC,OAAS,EAAIkC,EAASwkB,EAAawI,yBACnD1rB,IAAjBiiD,EAAQrgD,OACRg6D,GAAiB,GAEjBl9D,EAAOlC,OAAS,GAAG,CAGnB,GAFA0mB,EAAarP,QAAQ6P,QAAQ,IAAIC,GAAKT,EAAarP,QAAQvV,MAAO4kB,EAAarP,QAAQxV,SACvF6kB,EAAarP,QAAQ+P,QAAQV,EAAarP,QAAQgQ,aAC9CX,EAAa7E,YAAY7hB,OACzB,IAAK,IAAIoG,EAAK,EAAG6f,EAAKS,EAAa7E,YAAazb,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAClE,IAAIyrB,EAAa5L,EAAG7f,GAChBugG,OAAoB,EACxBA,EAAoBp9F,KAAK6yC,WAAW11B,EAAarP,QAASwa,EAAWzoB,IACrEsd,EAAaozB,iBAAiBjoB,EAAYnL,EAAawI,mBAAoBxI,EAAarP,QAAQtM,OAAQ47F,GAGhHjgF,EAAarP,QAAQ6P,QAAQ,IAAIC,GAAKT,EAAarP,QAAQvV,MAAO4kB,EAAarP,QAAQxV,SACvF6kB,EAAarP,QAAQ+P,QAAQV,EAAarP,QAAQgQ,aAClD9d,KAAK87F,aAAa3+E,EAAcg/B,EAASD,IAG5CA,EAAQn7C,aAAem7C,EAAQrxC,aAAeqxC,EAAQ/iD,WACpD6G,KAAKkX,iBAAmBC,gBAAcwyE,SACzC9zB,GAAiB,GAEhBonC,GACDj9F,KAAKmmF,iBAETnmF,KAAKq9F,kBAAkBnhD,EAAS/+B,GAChCA,EAAarP,QAAQ6P,QAAQ,IAAIC,GAAKT,EAAarP,QAAQvV,MAAO4kB,EAAarP,QAAQxV,SACvF6kB,EAAarP,QAAQ+P,QAAQV,EAAarP,QAAQgQ,cACyB,IAAvEw+E,EAAe/4F,OAAO+4F,EAAgBn/E,EAAarP,QAAQtM,UAC3DxB,KAAKikF,WAAW9mE,GAChBnd,KAAK88F,gBAAgB3/E,KAEF,IAAnB04C,IAA2B71D,KAAK68F,kBAAkB1/E,IAC5Cnd,KAAKkX,eAAiBC,gBAAcC,cAAgBpX,KAAKkX,eAAiBC,gBAAckyD,WAC9FrpE,KAAK61D,iBAEJ71D,KAAK26E,yBACN36E,KAAKob,oBAAoB+B,GAEzBnd,KAAKkX,gBAA0C,QAAxBiG,EAAaywB,SACpCzwB,EAAaywB,OAAS,WAG9B1hB,EAAQoV,UAAU47D,sBAAwB,SAAU38F,EAAM+8F,GACtD,IAAIn6F,KAIJ,OAHI5C,IACA4C,EAAOuvB,GAAqBnyB,EAAM+8F,IAE/Bn6F,GAEX+oB,EAAQoV,UAAUt1B,UAAY,SAAUmR,EAAcxkB,GAIlD,OAFMwkB,EAAa4wB,mBAAmB5wB,EAAathB,KAAMlD,EAA6B,4BAArBqH,KAAK0qB,OAAO7uB,MAA2D,qBAArBmE,KAAK0qB,OAAO7uB,KAC3HmE,KAAK0qB,OAAO5Z,iBAAc7W,IAOlCiyB,EAAQoV,UAAUi8D,mBAAqB,SAAU39F,EAASsuB,EAASxB,GAC/D,QAAgBzyB,IAAZi0B,EACAluB,KAAK05C,wBAAwB95C,EAASI,KAAK4a,UAAUhb,EAAQC,IAAKquB,OAEjE,CACDtuB,EAAQM,MAAMwsB,QAAUA,EACxB,IAAK,IAAIh2B,EAAI,EAAGA,EAAIkJ,EAAQgS,SAASnb,OAAQC,IACrCkJ,EAAQgS,SAASlb,aAAcw8B,IAC/BlzB,KAAKu9F,mBAAmB39F,EAAQgS,SAASlb,QAAIuD,EAAWyyB,GAE5D9sB,EAAQgS,SAASlb,GAAGwJ,MAAMwsB,QAAUA,IAQhDR,EAAQoV,UAAUu7D,kBAAoB,SAAU1/E,GAC5C,IAAI80D,EAAgBjyE,KAAKod,cACrB0iB,GAAa,EACb09D,KAOJ,OANAA,EAAWA,EAASrhE,OAAO81C,EAAcj5D,MAAOi5D,EAAc/0D,aACjDzmB,OAAS,GACd0mB,EAAatd,KAAO29F,EAASA,EAAS/mG,OAAS,GAAGoJ,KAClDigC,GAAa,GAGdA,GAMX5T,EAAQoV,UAAUm3D,iCAAmC,SAAU74F,EAASsuB,GACpE,GAAItuB,aAAmBszB,GACnB,IAAK,IAAIx8B,EAAI,EAAGA,EAAIkJ,EAAQgS,SAASnb,OAAQC,IACzCsJ,KAAKy4F,iCAAiC74F,EAAQgS,SAASlb,GAAIw3B,GAGnEtuB,EAAQsuB,QAAUA,GAMtBhC,EAAQoV,UAAUoY,wBAA0B,SAAU95C,EAASrF,EAAK2zB,GAChE,QAAgBj0B,IAAZi0B,EAAuB,CAEvB,GADAtuB,EAAQsuB,QAAUA,EACd3zB,aAAega,GAAM,CAErB,GAAKha,EAAIqX,SAQL,IAAK,IAAI/U,EAAK,EAAG6f,EAAKniB,EAAIqX,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtD,IAAI+Q,EAAQ8O,EAAG7f,GACfmD,KAAK05C,wBAAwB15C,KAAK4a,UAAUhN,GAAOE,QAAS9N,KAAK4a,UAAUhN,GAAQsgB,QATvFtuB,EAAQgS,SAAS,GAAGsc,QAAUA,EAC9BluB,KAAKy4F,iCAAiC74F,EAAQgS,SAAS,GAAIsc,GACpC,SAAnB3zB,EAAI6D,MAAMvC,MAAmBmE,KAAKm5C,YAClCn5C,KAAKm5C,WAAWO,wBAAwBn/C,EAAK2zB,EAASluB,MAU9D,GAAIzF,EAAIk4B,MACJ,IAAK,IAAIjH,EAAK,EAAGC,EAAKlxB,EAAIk4B,MAAOjH,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACnD,IAAIroB,EAAOsoB,EAAGD,GACd,GAAIroB,EAAKivB,WAAa2N,iBAAeE,QAAS,EACtCnyB,EAAU9N,KAAK6yC,WAAWjzC,EAASuD,EAAKtD,KACpCquB,QAAUA,GAI9B,GAAI3zB,EAAI+d,YACJ,IAAK,IAAIu9B,EAAK,EAAGC,EAAKv7C,EAAI+d,YAAau9B,EAAKC,EAAGr/C,OAAQo/C,IAAM,CACzD,IAAIvtB,EAAawtB,EAAGD,IAChB/nC,EAAU9N,KAAK6yC,WAAWjzC,EAAS0oB,EAAWzoB,KAC1CquB,QAAUA,QAM1B,IAAK,IAAIx3B,EAAI,EAAGA,EAAI,EAAGA,IACnBkJ,EAAQgS,SAASlb,GAAGw3B,QAAUA,EAGtC,GAAI3zB,EAAI+d,YAEJ,IAAK,IAAI09B,EAAK,EAAGC,EAAK17C,EAAI+d,YAAa09B,EAAKC,EAAGx/C,OAAQu/C,IAAM,CACrD1tB,EAAa2tB,EAAGD,IAChBloC,EAAU9N,KAAK6yC,WAAWjzC,EAAS0oB,EAAWzoB,KAC1CquB,QAAUA,EAG1B,GAAI3zB,EAAI6/C,YAAc7/C,EAAI8/C,aAAc,CACpC,IAAIvsC,EACJ,GADIA,EAAU9N,KAAK6yC,WAAWjzC,EAAS,gBAC1B,CACT,IAASlJ,EAAI,EAAGA,EAAIoX,EAAQ8D,SAASnb,OAAQC,IACzCoX,EAAQ8D,SAASlb,GAAGw3B,QAAUA,EAElCpgB,EAAQogB,QAAUA,EAElB3zB,GAAOA,EAAI2zB,SAAW3zB,EAAIm+C,UAC1B14C,KAAKw4F,qBAAqBj+F,EAA8B,IAAxBA,EAAIm+C,SAASjiD,SAGrC,IAAZy3B,GACAluB,KAAKq1D,SAASr1D,KAAK4a,UAAUhb,EAAQC,MAEpCtF,aAAega,KAASvU,KAAK06E,oBAAwBngF,aAAe6Y,KAAcpT,KAAK26E,0BAEpF36E,KAAKkX,gBACLlX,KAAKob,oBAAoBpb,KAAK4a,UAAUhb,EAAQC,OAKhEqsB,EAAQoV,UAAU+7D,kBAAoB,SAAUnhD,EAAS/+B,GACrD,QAA4BljB,IAAxBiiD,EAAQ5jC,YACR,IAAK,IAAIzb,EAAK,EAAG6f,EAAKC,OAAOC,KAAKs/B,EAAQ5jC,aAAczb,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC1E,IAAIqwB,EAAMxQ,EAAG7f,GACT6iB,EAAQvnB,OAAO+0B,GACfZ,EAAgB4vB,EAAQ5jC,YAAY4U,GACpCW,EAAmB1Q,EAAa7E,YAAYoH,GAChD1f,KAAKuwC,iBAAiBjkB,EAAeuB,EAAkB1Q,EAAarP,QAASqP,KAKzF+O,EAAQoV,UAAUiP,iBAAmB,SAAUjkB,EAAeuB,EAAkB7U,EAAOmE,EAAcsgF,GACjG,IAAIL,EACAM,GAAY,EAEhB,QAA0BzjG,KAD1BmjG,EAAoBp9F,KAAK6yC,WAAW75B,EAAO6U,EAAiBhuB,KACvB,CAejC,QAd4B5F,IAAxBqyB,EAAc/zB,YAAgD0B,IAAzBqyB,EAAch0B,SACnD8kG,EAAkB7kG,MAAQ+zB,EAAc/zB,MACxC6kG,EAAkB9kG,OAASg0B,EAAch0B,OACzColG,GAAY,QAEkBzjG,IAA9BqyB,EAAcjgB,cACd+wF,EAAkB/wF,YAAcigB,EAAcjgB,cAE9CoxF,GAAmBL,aAA6BnuE,IAChDmuE,EAAkBzvE,qBAElBE,aAA4B7a,SAAiD/Y,IAA/BqyB,EAAcmkB,eAC5D2sD,EAAkB/wF,YAAcwhB,EAAiBxhB,aAEjDwhB,aAA4B9a,SACH9Y,IAAzBqyB,EAAc5c,OAAsB,CACpC,IAAIA,EAAS4c,EAAc5c,OAC3BguF,GAAY,EACZ,IAAI3hG,OAAuB9B,IAAbyV,EAAO1Y,EAAkB0Y,EAAO1Y,EAC1C62B,EAAiBne,OAAO1Y,EACxBgF,OAAuB/B,IAAbyV,EAAOzY,EAAkByY,EAAOzY,EAC1C42B,EAAiBne,OAAOzY,EAC5BmmG,EAAkBh4D,6BAA6BrpC,EAASC,EAAS,YACjEohG,EAAkBp1E,aAAe,aAE5B6F,aAA4B7a,UACP/Y,IAAzBqyB,EAAc5c,aACoBzV,IAA/BqyB,EAAcmkB,eAClBtzB,EAAaozB,iBAAiB1iB,EAAkB1Q,EAAawI,mBAAoBxI,EAAarP,QAAQtM,OAAQ47F,GA0ClH,GAxCKvvE,aAA4B7a,IAAmBsZ,EAAcskB,oBACzB32C,IAAjCqyB,EAAcskB,aAAa55C,QACMiD,IAAjCqyB,EAAcskB,aAAa35C,IAC3BymG,GAAY,SAGSzjG,IAAzBqyB,EAAc3pB,SACd+6F,GAAY,OACwBzjG,IAAhCqyB,EAAc3pB,OAAOG,SACrBs6F,EAAkBz6F,OAAOG,OAASwpB,EAAc3pB,OAAOG,aAE1B7I,IAA7BqyB,EAAc3pB,OAAOI,MACrBq6F,EAAkBz6F,OAAOI,IAAMupB,EAAc3pB,OAAOI,UAEtB9I,IAA9BqyB,EAAc3pB,OAAOC,OACrBw6F,EAAkBz6F,OAAOC,KAAO0pB,EAAc3pB,OAAOC,WAEtB3I,IAA/BqyB,EAAc3pB,OAAOE,QACrBu6F,EAAkBz6F,OAAOE,MAAQypB,EAAc3pB,OAAOE,SAG1D66F,GAAaD,KACbL,EAAkB7kG,MAASs1B,EAAiBt1B,OAAS4kB,EAAa5kB,MAC9Ds1B,EAAiB6Z,WACjB01D,EAAkB7kG,MAAS6kG,EAAkB7kG,OAAS6kG,EAAkBrvF,WAAWxV,MACnF6kG,EAAkB9kG,OAAUu1B,EAAiBv1B,QAAU6kB,EAAa7kB,QAChE8kG,EAAkBrvF,WAAWzV,cAGC2B,IAAtCqyB,EAAcxT,sBACdskF,EAAkBtkF,oBAAsBwT,EAAcxT,oBACtD4kF,GAAY,QAEwBzjG,IAApCqyB,EAAczT,oBACdukF,EAAkBvkF,kBAAoByT,EAAczT,kBACpD6kF,GAAY,QAEiBzjG,IAA7BqyB,EAAc8F,aACdgrE,EAAkBlvE,WAAWlV,EAAMkV,UAAW5B,EAAc8F,kBAE9Bn4B,IAA9BqyB,EAAcrZ,YAA2B,CACzC,IAAI4iD,GAAiB,EAChBunC,EAAkBnqF,YAAcC,wBAAsBC,UACpDmZ,EAAcrZ,YAAcC,wBAAsBC,SACrD2sB,GAAW9/B,KAAMmd,GAAc,EAAOigF,KACtCvnC,GAAiB,GAErBunC,EAAkBnqF,YAAcqZ,EAAcrZ,YAC1C4iD,GACA71D,KAAK2b,sBAGe1hB,IAAxBqyB,EAAcpsB,OACdmsB,GAAYC,EAAcpsB,MAAOk9F,QAELnjG,IAA5BqyB,EAAcwB,WACdF,GAAgBtB,EAAcwB,UAAWsvE,EAAmBvvE,GAEhE7tB,KAAK29F,wBAAwBrxE,EAAeoxE,EAAWN,EAAmBjgF,EAAc0Q,EAAkB7U,IACxF,IAAd0kF,IACAN,EAAkBz/E,QAAQ,IAAIC,GAAKw/E,EAAkB7kG,MAAO6kG,EAAkB9kG,SAC9E8kG,EAAkBv/E,QAAQu/E,EAAkBt/E,cAE1Cs/E,aAA6BnuE,IAC/BmuE,EAAkBzvE,uBAK9BzB,EAAQoV,UAAUq8D,wBAA0B,SAAUrxE,EAAeoxE,EAAWN,EAAmBjgF,EAAc0Q,EAAkB7U,QACjG/e,IAA1BqyB,EAAcrsB,UACVm9F,KACY,EACqB,gBAA5BjgF,EAAa/e,MAAMvC,MACS,mBAA7BshB,EAAa/e,MAAMA,MACnBg/F,EAAkBn9F,QAAU,KAAOqsB,EAAcrsB,QAAU,KAG3Dm9F,EAAkBn9F,QAAUqsB,EAAcrsB,SAG9Cm9F,aAA6BnuE,IAC7BjvB,KAAK49F,wBAAwBR,EAAmBjgF,EAAc0Q,EAAkB7U,SAGzD/e,IAA3BqyB,EAAcob,WACd01D,EAAkBn9F,QAAUqsB,EAAcob,SAC1C1nC,KAAK49F,wBAAwBR,EAAmBjgF,EAAc0Q,EAAkB7U,KAGxFkT,EAAQoV,UAAUs8D,wBAA0B,SAAUR,EAAmBjgF,EAAc0Q,EAAkB7U,GACrG,IAAK,IAAInc,EAAK,EAAG6f,EAAK1c,KAAKgsB,MAAOnvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IAAIuxB,EAAY1R,EAAG7f,GACnBqmB,GAAck6E,EAAkBv9F,GAAK,gBAAiBuuB,GACtDlL,GAAck6E,EAAkBv9F,GAAK,gBAAiBuuB,GAE1D,GAAIjR,aAAwB5I,GACxB6oF,EACIjgF,EAAau9B,sBAAsB7sB,EAAkB7tB,KAAKJ,QAAQC,SAErE,GAAIsd,aAAwB/J,GAAW,CACxC,IACI9Y,EADS6iB,EAAarP,QACL8D,SAAS,GAC1BpQ,EAAS,IAAI8a,GAAKhiB,EAAQyB,QAAUzB,EAAQ/B,MAAQ,EAAG+B,EAAQ0B,QAAU1B,EAAQhC,OAAS,EAAGgC,EAAQ/B,MAAO+B,EAAQhC,QACxH8kG,EACIjgF,EAAauxB,qBAAqBvxB,EAAa7E,YAAY6E,EAAa7E,YAAY7hB,OAAS,GAAI0mB,EAAawI,mBAAoBnkB,EAAQxB,KAAKmqB,eAAgBnqB,KAAKJ,QAAQC,IAEpL,IAAK,IAAInJ,EAAI,EAAGA,EAAIsiB,EAAMpH,SAASnb,OAAQC,IACnC0mG,EAAkBv9F,KAAOmZ,EAAMpH,SAASlb,GAAGmJ,IAC3CmZ,EAAMpH,SAASzL,OAAOzP,EAAG,EAAG0mG,IAKxClxE,EAAQoV,UAAUq7D,WAAa,SAAUrwE,EAAeowE,EAAY1jF,GAChE,IAAI6kF,EACAH,GAAY,EAEhB,QAAoBzjG,KADpB4jG,EAAc79F,KAAK6yC,WAAW75B,EAAO0jF,EAAW78F,KACjB,CAC3B,QAA6B5F,IAAzBqyB,EAAc5c,OAAsB,CACpCguF,GAAY,EACZ,IAAI3hG,OAAqC9B,IAA3BqyB,EAAc5c,OAAO1Y,EAAkBs1B,EAAc5c,OAAO1Y,EACtE0lG,EAAWhtF,OAAO1Y,EAClBgF,OAAqC/B,IAA3BqyB,EAAc5c,OAAOzY,EAAkBq1B,EAAc5c,OAAOzY,EACtEylG,EAAWhtF,OAAOzY,EACtB4mG,EAAYz4D,6BAA6BrpC,EAASC,EAAS,YAC3D6hG,EAAY71E,aAAe,QAqD/B,QAnD4B/tB,IAAxBqyB,EAAc/zB,QACdmlG,GAAY,EACZG,EAAYtlG,MAAQ+zB,EAAc/zB,YAET0B,IAAzBqyB,EAAch0B,SACdolG,GAAY,EACZG,EAAYvlG,OAASg0B,EAAch0B,aAEN2B,IAA7BqyB,EAAc8F,aACdyrE,EAAY3vE,WAAWlV,EAAMkV,UAAWgE,GAAqBwqE,EAAY38D,iBAAeE,gBAE/DhmC,IAAzBqyB,EAAc3pB,SACd+6F,GAAY,OACwBzjG,IAAhCqyB,EAAc3pB,OAAOG,SACrB+6F,EAAYl7F,OAAOG,OAASwpB,EAAc3pB,OAAOG,aAEpB7I,IAA7BqyB,EAAc3pB,OAAOI,MACrB86F,EAAYl7F,OAAOI,IAAMupB,EAAc3pB,OAAOI,UAEf9I,IAA/BqyB,EAAc3pB,OAAOE,QACrBg7F,EAAYl7F,OAAOE,MAAQypB,EAAc3pB,OAAOE,YAElB5I,IAA9BqyB,EAAc3pB,OAAOC,OACrBi7F,EAAYl7F,OAAOC,KAAO0pB,EAAc3pB,OAAOC,YAGb3I,IAAtCqyB,EAAcxT,sBACd4kF,GAAY,EACZG,EAAY/kF,oBAAsBwT,EAAcxT,0BAEZ7e,IAApCqyB,EAAczT,oBACd6kF,GAAY,EACZG,EAAYhlF,kBAAoByT,EAAczT,wBAEtB5e,IAAxBqyB,EAAcpsB,aACmBjG,IAA7BqyB,EAAcpsB,MAAM+X,OACpB4lF,EAAY39F,MAAM+X,KAAOqU,EAAcpsB,MAAM+X,WAEbhe,IAAhCqyB,EAAcpsB,MAAMwsB,UACpBmxE,EAAY39F,MAAMwsB,QAAUJ,EAAcpsB,MAAMwsB,cAEZzyB,IAApCqyB,EAAcpsB,MAAMgY,cACpB2lF,EAAY39F,MAAMgY,YAAcoU,EAAcpsB,MAAMgY,kBAEhBje,IAApCqyB,EAAcpsB,MAAMiY,cACpB0lF,EAAY39F,MAAMiY,YAAcmU,EAAcpsB,MAAMiY,kBAEZle,IAAxCqyB,EAAcpsB,MAAMod,kBACpBugF,EAAY39F,MAAMod,gBAAkBgP,EAAcpsB,MAAMod,uBAGpCrjB,IAAxBqyB,EAAcluB,OACVy/F,EAAa,CACb,IAAIjjD,EAAWr8C,EAAa+tB,EAAcluB,OAC1Cy/F,EAAYznG,KAAOwkD,OAGI3gD,IAA3BqyB,EAAc3tB,WACdk/F,EAAYznG,KAAO0nG,OAAOxxE,EAAc3tB,UACxC++F,GAAY,IAEE,IAAdA,IACAG,EAAYlgF,QAAQ,IAAIC,GAAKigF,EAAYtlG,MAAOslG,EAAYvlG,SAC5DulG,EAAYhgF,QAAQggF,EAAY//E,gBAM5CoO,EAAQoV,UAAU0uD,WAAa,SAAU7yE,GACrC,IAAIm9B,EAAgBt6C,KAAK6yC,WAAW11B,EAAarP,QAAS,gBACtDimB,EAAa/zB,KAAKkX,eAAiBC,gBAAcwyE,OAAU3pF,KAAKJ,QAAQC,QAAK5F,EACjF,GAAIqgD,EAAe,CACf,GAAkB,QAAdt6C,KAAK4rB,KAAgB,CACrB,IAAI9sB,EAAOuwB,GAAkBlS,EAAarP,QAAQjO,GAAK,gBAAiBk0B,GACxE,GAAIj1B,EAAM,CACN,IAAIi/F,EAAW1uE,GAAkBvwB,EAAKe,GAAK,QAASk0B,GAChDiqE,EAAY3uE,GAAkBvwB,EAAKe,GAAK,SAAUk0B,GAClDjF,EAAgBO,GAAkB2uE,EAAUn+F,GAAK,kBAAmBk0B,GACpEjF,GACAA,EAActR,WAAW8R,YAAYR,GAEzCkvE,EAAUxgF,WAAW8R,YAAY0uE,GACjCD,EAASvgF,WAAW8R,YAAYyuE,GAChCj/F,EAAK0e,WAAW8R,YAAYxwB,IAGpC,IAAI4gB,EAAQvC,EAAarP,QAAQ8D,SAASsM,QAAQo8B,GAClDn9B,EAAarP,QAAQ8D,SAASzL,OAAOuZ,EAAO,GAEhD,IAAI02E,EAAgBp2F,KAAKs7F,iBAAiBn+E,GAC1CA,EAAa+8B,UAAUl6C,KAAKmqB,eAAgBnqB,KAAK0qB,OAAQ0rE,EAAep2F,KAAKJ,QAAQC,KAEzFqsB,EAAQoV,UAAUg6D,iBAAmB,SAAUn+E,GAC3C,GAAIA,EAAavL,SACb,IAAK,IAAIlb,EAAI,EAAGA,EAAIymB,EAAarP,QAAQ8D,SAASnb,OAAQC,IACtD,GAA4C,oBAAxCymB,EAAarP,QAAQ8D,SAASlb,GAAGmJ,GACjC,OAAOsd,EAAarP,QAAQ8D,SAASlb,GAIjD,OAAOymB,EAAarP,SAExBoe,EAAQoV,UAAUhhC,cAAgB,SAAU6c,EAAc5c,QACzBtG,IAAzBsG,EAAKjB,QAAQW,UACbkd,EAAa7d,QAAQW,QAAUM,EAAKjB,QAAQW,cAElBhG,IAA1BsG,EAAKjB,QAAQe,WACb8c,EAAa7d,QAAQe,SAAWE,EAAKjB,QAAQe,eAErBpG,IAAxBsG,EAAKjB,QAAQhH,SACb6kB,EAAa7d,QAAQhH,OAASiI,EAAKjB,QAAQhH,aAEpB2B,IAAvBsG,EAAKjB,QAAQ/G,QACb4kB,EAAa7d,QAAQ/G,MAAQgI,EAAKjB,QAAQ/G,YAEV0B,IAAhCsG,EAAKjB,QAAQmB,iBACb0c,EAAa7d,QAAQmB,eAAiBF,EAAKjB,QAAQmB,iBAI3DyrB,EAAQoV,UAAU2iD,WAAa,SAAU1pF,GACtByF,KAAK6pE,cAAcoa,WAAW1pF,EAAIuT,WAChC9N,KAAK+xE,eAClB/xE,KAAKsmF,cAIbp6D,EAAQoV,UAAU4vC,gBAAkB,SAAU32E,GAC1CyF,KAAK6pE,cAAcqH,gBAAgB32E,EAAIuT,SAKvC,GAJe9N,KAAK6pE,cAAcpkC,aAAalrC,EAAIuT,WAClC9N,KAAK+xE,eAClB/xE,KAAKsmF,aAEL/rF,EAAIqX,SAGJ,IAAK,IAFDhE,OAAQ,EACRgE,EAAWrX,EAAIqX,SACVlb,EAAI,EAAGA,EAAIkb,EAASnb,OAAQC,KACjCkX,EAAQ5N,KAAK4a,UAAUhJ,EAASlb,MAE5BsJ,KAAKkxE,gBAAgBtjE,IAMrCse,EAAQoV,UAAUw7D,gBAAkB,SAAUv8F,GAC1C,IAAIkuE,EACAluE,EAAKsa,WACL4zD,EAAWzuE,KAAK4a,UAAUra,EAAKsa,aAEvB4zD,EAAS5zD,SACT7a,KAAK88F,gBAAgBruB,IAGrBA,EAAS3gE,QAAQ6P,QAAQ,IAAIC,IAC7B6wD,EAAS3gE,QAAQ+P,QAAQ4wD,EAAS3gE,QAAQgQ,aAC1C9d,KAAK82E,kBAAkBrI,GACvBzuE,KAAKob,oBAAoBqzD,MAKzCviD,EAAQoV,UAAUglD,WAAa,WAC3B,GAAItmF,KAAKkX,eAAiBC,gBAAcwyE,OAAQ,CAC5C3pF,KAAK0e,SAASo/D,sBACd99E,KAAK0e,SAASgjD,UAEd,IAAK,IAAI7kE,EAAK,EAAG6f,EAAK1c,KAAKgsB,MAAOnvB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IAAIuT,EAAOsM,EAAG7f,GACVkpF,EAAO/lF,KAAKgsB,MAAM5b,GAChB21E,aAAgB75D,GAClB65D,EAAKC,WAAWD,MAMhC75D,EAAQoV,UAAUzX,sBAAwB,SAAUo0E,GAChDj+F,KAAKynF,oBAAsBwW,GAG/B/xE,EAAQoV,UAAU86D,aAAe,SAAU8B,EAAYC,QACvBlkG,IAAxBkkG,EAAc3mG,QACd0mG,EAAW1mG,MAAQ2mG,EAAc3mG,YAETyC,IAAxBkkG,EAAczlF,QACdwlF,EAAWxlF,MAAQylF,EAAczlF,YAENze,IAA3BkkG,EAAc74F,WACd44F,EAAW54F,SAAW64F,EAAc74F,eAEVrL,IAA1BkkG,EAAczxE,UACdwxE,EAAWxxE,QAAUyxE,EAAczxE,UAI3CR,EAAQoV,UAAUi7D,aAAe,SAAUh8F,EAAM85D,QAClBpgE,IAAvBogE,EAAQ13D,OAAOI,MACfxC,EAAKoC,OAAOI,IAAMs3D,EAAQ13D,OAAOI,UAEP9I,IAA1BogE,EAAQ13D,OAAOG,SACfvC,EAAKoC,OAAOG,OAASu3D,EAAQ13D,OAAOG,aAEZ7I,IAAxBogE,EAAQ13D,OAAOC,OACfrC,EAAKoC,OAAOC,KAAOy3D,EAAQ13D,OAAOC,WAET3I,IAAzBogE,EAAQ13D,OAAOE,QACftC,EAAKoC,OAAOE,MAAQw3D,EAAQ13D,OAAOE,QAK3CqpB,EAAQoV,UAAU6pD,eAAiB,WAC/B,IAII9rE,EACA++E,EALA/3D,EAAQrmC,KAER4zC,KACAyqD,KAGJr+F,KAAKsqF,UAAY,IAAIgU,YAAUt+F,KAAKJ,SACpCI,KAAKsqF,UAAUiU,OAAS,eAExBv+F,KAAKsqF,UAAUkU,KAAO,SAAUz+F,GAC5B,GAAKsmC,EAAMpoB,cA0JHle,EAAK43C,MAAMpd,SAAWx6B,EAAK43C,MAAMpd,QAAQ9jC,QACzC4vC,EAAM+jC,aAAa9W,UAAUvzD,EAAK43C,MAAO53C,EAAK43C,MAAMpd,cA1JxD,GAAIx6B,EAAK0+F,SAAU,CACf,IAAIpmF,OAAS,EACTgJ,OAAe,EACfhhB,EAAWgmC,EAAM+jC,aAAavJ,iBAAiB9gE,EAAK43C,OACpDpuB,OAAe,EACfm1E,EAAiB3+F,EAAK0+F,SAASE,OAC/BC,EAAYF,EAAeG,aAAa,aAC5C,GAAID,EAAW,CACX,IAAIj7B,EAAgBpiD,SAASC,eAAeo9E,GAAWE,cAAc,GAErEz4D,EAAMikD,UAAgB,cAAI3mB,EAC1B,IAAIo7B,EAAkB,kBAEtB,GAAIp7B,EAAe,CACf,IAAIppE,EAAMopE,EAAco7B,GACxBx1E,EAAe7N,GAAYioD,EAAco7B,IACzCnrD,EAAa+vB,EAAwB,WACrC,IAAI71D,EAAUvT,EAAIuT,QAAQ8D,SAAS,GAAGA,SAAS,GAC/C,GAAI+xD,EAAco7B,aAA4BxqF,GAAM,CAChDgV,EAAaxtB,QAAUsE,EAASrJ,EAAI,GAAKuyB,EAAahxB,OAASuV,EAAQC,WAAWxV,OAAS,EAC3FgxB,EAAavtB,QAAUqE,EAASpJ,GAAKsyB,EAAajxB,QAAUwV,EAAQC,WAAWzV,QAAU,EACzF,IAAIs3E,EAAU,IAAIr7D,GAAK8xB,EAAO,QAAS9c,GAAc,GAKrD,GAJ2B,SAAvBqmD,EAAQxxE,MAAMvC,MAAmB+zE,EAAQxxE,MAAMk7C,SAASD,WAAWE,WAChEq2B,EAAQxxE,MAAMk7C,SAASD,WAAWE,UAAU9iD,SAC/Cm5E,EAAQxxE,MAAMk7C,SAASD,WAAWE,cAEX,aAAvBq2B,EAAQxxE,MAAMvC,MACV+zE,EAAQxxE,MAAMw6C,OAAQ,CACtBg3B,EAAQh+D,aACRyN,GACIxf,GAAI,SAAWyZ,OAEZpZ,MAAQ0vE,EAAQxxE,MAAM0hB,MAAM,GAAGT,OAAOnf,MAC7Cmf,EAASgnB,EAAMja,IAAI/M,IACnB++E,GACIv+F,GAAI,OAASyZ,OAEZpZ,MAAQ0vE,EAAQxxE,MAAM0hB,MAAM,GAAG5f,MACpCk+F,EAAO/3D,EAAMja,IAAIgyE,GACjB,IAAIh2C,GACAvoD,GAAI,QAAUyZ,KACd1H,UAAWyN,EAAOxf,GAAIu+F,EAAKv+F,KAE/BuoD,EAAMhqD,MAAQwxE,EAAQxxE,MACtBwxE,EAAUvpC,EAAMja,IAAIg8B,GAmB5B,GAhBIwnB,EAAQxxE,MAAMy6C,WACdx3B,EAA8C,eAA9BuuD,EAAQxxE,MAAM0S,cAE1B8+D,EAAQxxE,MAAMhI,KACV,OAAkBw5E,EAAQt3E,OAAS,EAAK,MAAQs3E,EAAQr3E,MAAQ,IAAM,IACjEq3E,EAAQt3E,OAAS,EAAK,IAC/Bs3E,EAAQt3E,OAAS,IAGjBs3E,EAAQxxE,MAAMhI,KACV,IAAOw5E,EAAQr3E,MAAQ,EAAK,QAAmBq3E,EAAQr3E,MAAQ,EAC3D,KAAOq3E,EAAQt3E,OAAS,IAAM,IACtCs3E,EAAQr3E,MAAQ,IAGxB8f,EAASu3D,EACLrmD,EAAa3X,SAAU,CACvB,IAAI4L,EAAa+L,EAEjB80E,EAAah4D,EAAMkwC,YAAY/4D,KAAuBo2B,GACtDxgB,GAAa5V,GAAaA,EAAWzhB,SAAUyhB,EAAWxhB,QAASqiG,GAAY,EAAMh4D,SAGxF,GAAIs9B,EAAco7B,aAA4B3rF,GAAW,CAC1DiF,EAAS,IAAIjF,GAAUizB,EAAO,aAAc9c,GAAc,GAC1D,IAAI/nB,EAAS8a,GAAKyJ,UAAU1N,EAAOtX,YAAasX,EAAOxN,cACnD0nC,EAAKlyC,EAASrJ,EAAIwK,EAAOP,OAAOjK,EAChCw7C,EAAKnyC,EAASpJ,EAAIuK,EAAOP,OAAOhK,EACpCohB,EAAOtX,YAAY/J,GAAKu7C,EACxBl6B,EAAOtX,YAAY9J,GAAKu7C,EACxBn6B,EAAOxN,YAAY7T,GAAKu7C,EACxBl6B,EAAOxN,YAAY5T,GAAKu7C,EAEvBn6B,EAAOja,MAAMw6C,SACdvgC,EAAOxY,IAAMyZ,MAEjB,IAAImsC,GACAljD,OAAQohE,EAAe/jE,QAASyY,EAAQi+C,QAAQ,EAChDp3D,QAASmnC,GAKb,GAHAA,EAAmB,YAAIhuB,EACvBguB,EAAkB,WAAIg4D,EACtBh4D,EAAMowB,aAAanyB,eAAa06D,UAAWv5C,GACtCptC,aAAkB9D,IAA+B,aAAtB8D,EAAOja,MAAMvC,MAAuBwc,EAAOja,MAAMw6C,OAAQ,CACrF,IAAIqmD,EAAcx5C,EAAI7lD,QAClBs/F,EAAUD,EAAY7gG,MAAM0hB,MAAM,GAClCq/E,OAAS,EACTC,OAAS,EACb/9E,EAAkD,eAAlC49E,EAAY7gG,MAAM0S,YAClCquF,EAAS94D,EAAMzrB,UAAUvC,EAAOzG,SAAS,IACzCwtF,EAAS/4D,EAAMzrB,UAAUvC,EAAOzG,SAAS,IACrCyP,GACAhC,EAAO9mB,MAAQ2mG,EAAQ7/E,OAAO9mB,MAC9B8mB,EAAO/mB,OAAS4mG,EAAQ5mG,OACxB8lG,EAAK7lG,MAAQ2mG,EAAQ3mG,MAAQ8mB,EAAO9mB,MACpC6lG,EAAK9lG,OAAS4mG,EAAQ5mG,OACtB8lG,EAAKriG,QAAWmjG,EAAQ7/E,OAAO9mB,MAAS6mG,EAAO7mG,MAAQ,EACvD6lG,EAAKpiG,QAAUojG,EAAO9mG,OAAS,IAG/B+mB,EAAO9mB,MAAQ2mG,EAAQ3mG,MACvB8mB,EAAO/mB,OAAS4mG,EAAQ7/E,OAAO/mB,OAC/B8lG,EAAK7lG,MAAQ2mG,EAAQ3mG,MACrB6lG,EAAK9lG,OAAS4mG,EAAQ5mG,OAAS+mB,EAAO/mB,OACtC8lG,EAAKriG,QAAUqjG,EAAO7mG,MAAQ,EAC9B6lG,EAAKpiG,QAAWkjG,EAAQ7/E,OAAO/mB,OAAU8mG,EAAO9mG,OAAS,GAE7D+mB,EAAOtjB,QAAUojG,EAAO5mG,MAAQ,EAChC8mB,EAAOrjB,QAAUmjG,EAAO7mG,OAAS,EACjC+f,EAAO9f,MAAQ2mG,EAAQ3mG,MACvB8f,EAAO/f,OAAS4mG,EAAQ5mG,OAEvB+f,aAAkB9D,IAAS8D,EAAOja,MAAMy6C,UACrCx3B,EACAhJ,EAAO/f,OAAS,EAGhB+f,EAAO9f,MAAQ,GAGlB8tC,EAAMmnC,YAAYvF,MAASxiB,EAAI6Q,SAChCjwB,EAAM0rC,eAAgB,EAClB15D,EAAOzG,UACPy0B,EAAMg5D,UAAUhnF,EAAQgmF,GAE5Bh4D,EAAM0rC,eAAgB,EACtB1rC,EAAMttB,WAAWV,OAAQpe,OAAWA,GAAW,GAC/CosC,EAAMpoB,cAAgB5F,EACH,QAAfguB,EAAMza,MACNya,EAAMgnC,sBAEVhnC,EAAMpnB,eAAe/C,OAAO7D,GAC5BguB,EAAM+jC,aAAanX,UAAUlzD,EAAK43C,OAClCtR,EAAM+jC,aAAa9W,UAAUvzD,EAAK43C,MAAO53C,GACzCsmC,EAAM0rC,eAAgB,EACtB1rC,EAAMigD,aACNoY,EAAex+F,MAAMwsB,QAAU,YAE5B2Z,EAAmB,mBACnBA,EAAkB,WAE7BA,EAAMikD,UAAUyU,GAAmBL,KAWnD1+F,KAAKsqF,UAAUj3D,KAAO,SAAUtzB,GAC5B,GAAIsmC,EAAMpoB,cAAe,CACjBle,EAAK43C,MAAMpd,SACX8L,EAAM+jC,aAAa7W,QAAQxzD,EAAK43C,OAEpC,IAAIt/B,OAAS,EAITotC,GACAljD,OAAQ8jC,EAAMikD,UAAgB,cAC9B1qF,QAASymC,EAAMpoB,cACfjb,OAAQqjC,EAAM+jC,aAAwB,WAAK/jC,EAAOiwB,QAAQ,EAC1Dj2D,UAAYrJ,EAAGqvC,EAAMpoB,cAAcnQ,QAAQ/R,QAAS9E,EAAGovC,EAAMpoB,cAAcnQ,QAAQ9R,UAEvFqqC,EAAMowB,aAAanyB,eAAajR,KAAMoyB,GACtC,IAAIl8B,OAAe,EAanB,GAXAA,EAAe7N,GAAY2qB,EAAMpoB,eACjCsL,EAAwB,UAAI8c,EAAMpoB,cAAyB,UAC3DooB,EAAM6qC,gBAAgB7qC,EAAMpoB,eAC5BooB,EAAM8qC,uBAAuB9qC,EAAMzrB,UAAUyrB,EAAMpoB,cAAcpe,KACjEwmC,EAAMunD,eAAevnD,EAAMpoB,eACvBwnC,EAAI6Q,QACJjwB,EAAMi5D,iBAAiBj5D,EAAMpoB,sBAE1BooB,EAAMzrB,UAAUyrB,EAAMpoB,cAAcpe,IAC3CwmC,EAAMpoB,cAAgB,KACtBooB,EAAMxc,uBAAsB,IACvB47B,EAAI6Q,OAAQ,CAEb,GADAjwB,EAAM6xB,mBAC0B,SAA5B3uC,EAAanrB,MAAMvC,MAAmB0tB,EAAanrB,MAAMkqB,YACtDiB,EAAwB,UAAG,CAC9B,IAAI8K,EAAS9K,EAAanrB,MAAMkqB,WAAW+L,OAC3C9K,EAAanrB,MAAMkqB,WAAWzoB,GAAK0pB,EAAa1pB,GAChDwmC,EAAMumC,kBAAkBrjD,EAAanrB,MAAMkqB,WAAY+d,EAAMzrB,UAAUyZ,IACvE9K,EAAa8K,OAAS,GAEtB9K,EAAa3X,UACby0B,EAAMk5D,cAAch2E,GAEpBk8B,EAAIziD,QAAWyiD,EAAIziD,kBAAkBuR,IAASoG,GAAuB0rB,EAAOof,EAAIziD,SAC7EyS,GAAagwC,EAAIziD,QACpB+a,GAAoBsoB,EAAOof,EAAIziD,OAAQumB,GAGvC8c,EAAMja,IAAI7C,GAAc,GAExBzT,GAAgBuwB,IAChBA,EAAMnqB,QAAQmqB,EAAMzrB,UAAU2O,EAAe,MAGrD8c,EAAMxc,uBAAsB,GAC5BxR,EAASguB,EAAMzrB,UAAU2O,EAAe,IACpCA,EAAwB,YACxBA,EAAa8K,OAAS9K,EAAwB,UAC9C8c,EAAMyV,OAAOvyB,IAEb8c,EAAM8S,YAAc9gC,aAAkB9D,IAAQgV,EAAaivB,YAC3DngC,EAAOmgC,UAAYjvB,EAAaivB,UAChCnS,EAAM8S,WAAWyiC,cAAcv1C,EAAMzrB,UAAUvC,EAAOmgC,WAAYngC,EAAQguB,IAE9EA,EAAMqyB,iBACa,QAAfryB,EAAMza,MACNya,EAAMgnC,6BAEHhnC,EAAMikD,UAAgB,cAGjCxuC,SAAOzV,EAAMikD,UAAyB,kBAE1CtqF,KAAKsqF,UAAUkV,IAAM,SAAUz/F,GAC3B,GAAIsmC,EAAMpoB,gBAAkBooB,EAAM+jC,aAAa5N,MAAO,CAClDn2B,EAAMgvB,SAAShvB,EAAMpoB,eACrBooB,EAAM6qC,gBAAgB7qC,EAAMpoB,eACT,QAAfooB,EAAMza,MAAqD,WAAnCya,EAAMpoB,cAAc7f,MAAMvC,MAClDwqC,EAAMunD,eAAevnD,EAAMpoB,eAE/BooB,EAAM8qC,uBAAuB9qC,EAAMzrB,UAAUyrB,EAAMpoB,cAAcpe,YAC1DwmC,EAAMzrB,UAAUyrB,EAAMpoB,cAAcpe,IAC3CwmC,EAAMowB,aAAanyB,eAAam7D,WAAa7/F,QAASymC,EAAMpoB,cAAe/e,QAASmnC,IACjE,QAAfA,EAAMza,KACNya,EAAMgnC,sBAGNhnC,EAAMunD,eAAevnD,EAAMpoB,eAE/BooB,EAAMpoB,cAAgB,KAEtBooB,EAAMikD,UAAyB,gBAAEpqF,MAAMwsB,QAAU,WAE1C2Z,EAAMikD,UAAgB,iBAIzCp+D,EAAQoV,UAAUg+D,iBAAmB,SAAU/+F,GAC3C,GAAIA,aAAgBgU,IAAQhU,EAAKqR,SAC7B,IAAK,IAAIlb,EAAI,EAAGA,EAAI6J,EAAKqR,SAASnb,OAAQC,IAClCsJ,KAAK4a,UAAUra,EAAKqR,SAASlb,IAAIkb,UACjC5R,KAAKs/F,iBAAiB/+F,GAE1BP,KAAKkxE,gBAAgBlxE,KAAK4a,UAAUra,EAAKqR,SAASlb,KAClDsJ,KAAKmxE,uBAAuBnxE,KAAK4a,UAAUra,EAAKqR,SAASlb,YAClDsJ,KAAK4a,UAAUra,EAAKqR,SAASlb,KAIhDw1B,EAAQoV,UAAU+9D,UAAY,SAAU9+F,EAAMqzC,GAG1C,IAAK,IAFDwU,EACAwnB,EACKl5E,EAAI,EAAGA,EAAI6J,EAAKqR,SAASnb,OAAQC,KACtC0xD,EAAQxU,EAAWrzC,EAAKqR,SAASlb,OAEzB0xD,EAAMx2C,UACN5R,KAAKq/F,UAAUj3C,EAAOxU,GAE1BwU,EAAMvoD,GAAKuoD,EAAMvoD,GAAKyZ,KACtBs6B,EAAWwU,EAAMvoD,IAAMuoD,EACvB7nD,EAAKqR,SAASlb,GAAK0xD,EAAMvoD,GACzB+vE,EAAU,IAAIr7D,GAAKvU,KAAM,QAASooD,GAAO,GACzCpoD,KAAK+Y,WAAW62D,OAAS31E,OAAWA,GAAW,KAK3DiyB,EAAQoV,UAAUi1C,YAAc,SAAUh2E,EAAM89F,EAAYzqD,GAExD,IAAK,IADDxjC,EACK1Z,EAAI,EAAGA,EAAI6J,EAAKqR,SAASnb,OAAQC,KACtC0Z,EAAQwjC,EAAWrzC,EAAKqR,SAASlb,OAEzB0Z,EAAKwB,WACLysF,EAAar+F,KAAKu2E,YAAYnmE,EAAMiuF,EAAYzqD,IAEpDyqD,EAAWjuF,EAAKvQ,IAAM6b,GAAYtL,IAG1C,OAAOiuF,GAEXnyE,EAAQoV,UAAUi+D,cAAgB,SAAUh/F,GAExC,IAAK,IADD6P,EACK1Z,EAAI,EAAGA,EAAI6J,EAAKqR,SAASnb,OAAQC,KACtC0Z,EAAQpQ,KAAK4a,UAAUra,EAAKqR,SAASlb,OAE7B0Z,EAAKwB,UACL5R,KAAKu/F,cAAcnvF,GAEvBpQ,KAAKosB,IAAIhc,GAAM,KAO3B8b,EAAQoV,UAAUo+D,WAAa,SAAUn/F,GACrC,OAAOP,KAAK2/F,cAAcp/F,EAAM,SAAUP,KAAK4/F,kBAAkB,SAKrE1zE,EAAQoV,UAAUu+D,WAAa,SAAUt/F,GACrC,OAAOP,KAAK2/F,cAAcp/F,EAAM,SAAUP,KAAK4/F,kBAAkB,YAKrE1zE,EAAQoV,UAAUw+D,WAAa,SAAUv/F,GACrC,OAAOP,KAAK2/F,cAAcp/F,EAAM,UAAWP,KAAK+/F,oBAEpD7zE,EAAQoV,UAAUq+D,cAAgB,SAAUp/F,EAAMy/F,EAAMC,GACpD,GAAI1/F,EAAM,CACN,IAAInK,EAAO4J,KAAKkgG,aAAa3/F,IAAMA,aAAgB6S,KACnD,GAAIhd,EAAM,CACN,IAAIy+F,EAAMt0F,aAAgB6S,GAAYpT,KAAK+pB,mBAAmBogE,qBAAqBhB,WAAW6W,GAAQhgG,KAAK+pB,mBAAmBo/D,WAAW6W,GACzIhgG,KAAKmgG,cAAc12E,KAAKC,UAAUtzB,GAAOy+F,GAE7C,OAAOz+F,EAGP,IAAI8oF,EAAa+gB,EAEjB,OADAjgG,KAAKogG,sBAAsBlhB,EAAYl/E,KAAK+pB,mBAAmBo/D,WAAW6W,GAAOhgG,KAAK+pB,mBAAmBogE,qBAAqBhB,WAAW6W,IAClI9gB,GAGfhzD,EAAQoV,UAAU8+D,sBAAwB,SAAUlhB,EAAYmhB,EAAgBC,GAC5E,GAAIphB,EAAWlmE,MAAO,CAClB,IAAI5iB,KACAM,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAIwoF,EAAWlmE,MAAMviB,OAAQC,IACrCN,EAAKU,KAAKkJ,KAAKkgG,aAAahhB,EAAWlmE,MAAMtiB,IAAI,IAEjDN,GAAQA,EAAKK,OAAS,GACtBuJ,KAAKmgG,cAAc12E,KAAKC,UAAUtzB,GAAOiqG,GAEjD,GAAInhB,EAAWhiE,WAAY,CACnB9mB,KACAM,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAIwoF,EAAWhiE,WAAWzmB,OAAQC,IAC1CN,EAAKU,KAAKkJ,KAAKkgG,aAAahhB,EAAWhiE,WAAWxmB,IAAI,IAEtDN,GAAQA,EAAKK,OAAS,GACtBuJ,KAAKmgG,cAAc12E,KAAKC,UAAUtzB,GAAOkqG,KAGrDp0E,EAAQoV,UAAU4+D,aAAe,SAAUh0F,EAAQk4D,GAC/C,IACI1tE,EADA6pG,KAEAvL,EAAS5wB,EAASpkE,KAAK+pB,mBAAqB/pB,KAAK+pB,mBAAmBogE,qBAexE,GAdI6K,EAAOn1F,KACP0gG,EAAWvL,EAAOn1F,IAAMqM,EAAOrM,IAC/Bm1F,EAAOC,cAAgBD,EAAOE,eAC9BqL,EAAWvL,EAAOC,cAAgB/oF,EAAOnL,YAAY/J,EACrDupG,EAAWvL,EAAOE,cAAgBhpF,EAAOnL,YAAY9J,GAErD+9F,EAAOG,cAAgBH,EAAOI,eAC9BmL,EAAWvL,EAAOG,cAAgBjpF,EAAOrB,YAAY7T,EACrDupG,EAAWvL,EAAOI,cAAgBlpF,EAAOrB,YAAY5T,GAErD+9F,EAAOvzF,WACP8+F,EAAWvL,EAAOvzF,UAAYyK,EAAOzK,UACrCuzF,EAAO5iD,WACPmuD,EAAWvL,EAAO5iD,UAAYlmC,EAAOkmC,UACrC4iD,EAAO7L,YAAc6L,EAAO7L,WAAWkM,cAAgBL,EAAO7L,WAAWkM,aAAa5+F,OAAS,EAC/F,IAAKC,EAAI,EAAGA,EAAIs+F,EAAO7L,WAAWkM,aAAa5+F,OAAQC,IACnD6pG,EAAWvL,EAAO7L,WAAWkM,aAAa3+F,IAAMwV,EAAO8oF,EAAO7L,WAAWkM,aAAa3+F,IAE9F,OAAO6pG,GAEXr0E,EAAQoV,UAAUs+D,kBAAoB,SAAUhyD,GAC5C,IAAI50B,KACAkE,KACJ,IAAK,IAAIsjF,KAAUxgG,KAAK4a,UAAW,CAC/B,IAAIra,EAAOP,KAAK4a,UAAU4lF,GACtBjgG,EAAKqtC,QAAUA,IACXrtC,GAAQA,aAAgB6S,IACxB7S,EAAKqtC,OAAS,OACd1wB,EAAWpmB,KAAKyJ,KAGhBA,EAAKqtC,OAAS,OACd50B,EAAMliB,KAAKyJ,KAIvB,OAASyY,MAAOA,EAAOkE,WAAYA,IAEvCgP,EAAQoV,UAAUy+D,gBAAkB,WAChC,IAEIrpG,EAFAsiB,KACAkE,KAEJ,IAAKxmB,EAAI,EAAGA,EAAIsJ,KAAKulF,gBAAgB9uF,OAAQC,IAAK,CAC9C,IAAI6J,EAAOP,KAAKulF,gBAAgB7uF,GAC5B6J,GAAQA,EAAKpH,SACb+jB,EAAWpmB,KAAKyJ,GACXA,GACLyY,EAAMliB,KAAKyJ,GAInB,OADAP,KAAKulF,oBACIvsE,MAAOA,EAAOkE,WAAYA,IAEvCgP,EAAQoV,UAAU6+D,cAAgB,SAAU56F,EAAOsvF,GAC/C,IAAIhL,EAAW,IAAIC,OAAK+K,EAAK,QAAQ,EAAM,oBACvCz+F,EAAOqzB,KAAKC,UAAUD,KAAKwB,MAAM1lB,IACrCskF,EAASI,KAAK7zF,GAAM8zF,OACpBL,EAASE,UAAY,SAAU3zF,MAGnC6rC,IACImB,WAAS,SACVlX,EAAQoV,UAAW,aAAS,GAC/BW,IACImB,WAAS,QACVlX,EAAQoV,UAAW,YAAQ,GAC9BW,IACImB,WAAS,SACVlX,EAAQoV,UAAW,cAAU,GAChCW,IACI8H,aAAYo7C,KACbj5D,EAAQoV,UAAW,2BAAuB,GAC7CW,IACImB,WAASxtB,qBAAmBmC,UAC7BmU,EAAQoV,UAAW,mBAAe,GACrCW,IACImB,WAASntB,eAAa8B,UACvBmU,EAAQoV,UAAW,YAAQ,GAC9BW,IACImB,WAAS,QACVlX,EAAQoV,UAAW,uBAAmB,GACzCW,IACImB,WAAS,gBACVlX,EAAQoV,UAAW,uBAAmB,GACzCW,IACI8H,aAAY8mB,KACb3kC,EAAQoV,UAAW,oBAAgB,GACtCW,IACI8H,aAAYgnB,KACb7kC,EAAQoV,UAAW,qBAAiB,GACvCW,IACI8H,aAAYumB,KACbpkC,EAAQoV,UAAW,oBAAgB,GACtCW,IACIgE,gBAAe1xB,KAChB2X,EAAQoV,UAAW,aAAS,GAC/BW,IACImB,cACDlX,EAAQoV,UAAW,qBAAiB,GACvCW,IACIgE,gBAAe7yB,KAChB8Y,EAAQoV,UAAW,kBAAc,GACpCW,IACImB,gBACDlX,EAAQoV,UAAW,qBAAiB,GACvCW,IACI8H,aAAY+C,KACb5gB,EAAQoV,UAAW,eAAW,GACjCW,IACI8H,aAAYmnB,KACbhlC,EAAQoV,UAAW,0BAAsB,GAC5CW,IACImB,cACDlX,EAAQoV,UAAW,eAAW,GACjCW,IACImB,cACDlX,EAAQoV,UAAW,sBAAkB,GACxCW,IACImB,cACDlX,EAAQoV,UAAW,uBAAmB,GACzCW,IACImB,cACDlX,EAAQoV,UAAW,4BAAwB,GAC9CW,IACImB,cACDlX,EAAQoV,UAAW,uBAAmB,GACzCW,IACImB,cACDlX,EAAQoV,UAAW,sBAAkB,GACxCW,IACImB,cACDlX,EAAQoV,UAAW,yBAAqB,GAC3CW,IACImB,cACDlX,EAAQoV,UAAW,qBAAiB,GACvCW,IACImB,cACDlX,EAAQoV,UAAW,uBAAmB,GACzCW,IACI8H,aAAYt2B,KACbyY,EAAQoV,UAAW,qBAAiB,GACvCW,IACI8H,aAAYwmB,KACbrkC,EAAQoV,UAAW,sBAAkB,GACxCW,IACI8H,aAAYonB,KACbjlC,EAAQoV,UAAW,cAAU,GAChCW,IACI8H,aAAYm7C,KACbh5D,EAAQoV,UAAW,sBAAkB,GACxCW,IACIw+D,WACDv0E,EAAQoV,UAAW,kBAAc,GACpCW,IACIw+D,WACDv0E,EAAQoV,UAAW,iBAAa,GACnCW,IACIw+D,WACDv0E,EAAQoV,UAAW,iBAAa,GACnCW,IACIw+D,WACDv0E,EAAQoV,UAAW,gBAAY,GAClCW,IACIw+D,WACDv0E,EAAQoV,UAAW,aAAS,GAC/BW,IACIw+D,WACDv0E,EAAQoV,UAAW,qBAAiB,GACvCW,IACIw+D,WACDv0E,EAAQoV,UAAW,mBAAe,GACrCW,IACIw+D,WACDv0E,EAAQoV,UAAW,gBAAY,GAClCW,IACIw+D,WACDv0E,EAAQoV,UAAW,oBAAgB,GACtCW,IACIw+D,WACDv0E,EAAQoV,UAAW,uBAAmB,GACzCW,IACIw+D,WACDv0E,EAAQoV,UAAW,kBAAc,GACpCW,IACIw+D,WACDv0E,EAAQoV,UAAW,wBAAoB,GAC1CW,IACIw+D,WACDv0E,EAAQoV,UAAW,yBAAqB,GAC3CW,IACIw+D,WACDv0E,EAAQoV,UAAW,yBAAqB,GAC3CW,IACIw+D,WACDv0E,EAAQoV,UAAW,sBAAkB,GACxCW,IACIw+D,WACDv0E,EAAQoV,UAAW,sBAAkB,GACxCW,IACIw+D,WACDv0E,EAAQoV,UAAW,yBAAqB,GAC3CW,IACIw+D,WACDv0E,EAAQoV,UAAW,oBAAgB,GACtCW,IACIw+D,WACDv0E,EAAQoV,UAAW,wBAAoB,GAC1CW,IACIw+D,WACDv0E,EAAQoV,UAAW,eAAW,GACjCW,IACIw+D,WACDv0E,EAAQoV,UAAW,kBAAc,GACpCW,IACIw+D,WACDv0E,EAAQoV,UAAW,kBAAc,GACpCW,IACIw+D,WACDv0E,EAAQoV,UAAW,iBAAa,GACnCW,IACIw+D,WACDv0E,EAAQoV,UAAW,uBAAmB,GACzCW,IACIw+D,WACDv0E,EAAQoV,UAAW,mCAA+B,GACrDW,IACIw+D,WACDv0E,EAAQoV,UAAW,wBAAoB,GAC1CW,IACIgE,gBAAeskC,KAChBr+C,EAAQoV,UAAW,cAAU,GAChCW,IACIw+D,WACDv0E,EAAQoV,UAAW,YAAQ,GACvBpV,GACT6yB,aC3nLE2hD,GAAgC,WAChC,SAASA,EAAexhG,GACpBc,KAAKd,QAAUA,EAgmBnB,OA1lBAwhG,EAAep/D,UAAU8uD,cAAgB,SAAUn4D,GAC/C,IAAI0oE,EACA7f,EACA7gF,EAGA2rB,EADAx1B,EAAO,OAEPwqG,KACAj+F,EAASs1B,EAAQt1B,WACjB0hB,EAAS4T,GAAWA,EAAQ5T,OAAS4T,EAAQ5T,OAAS,UAC1DuH,EAAOqM,GAAWA,EAAQrM,KAAOqM,EAAQrM,KAAO,WAChD,IAAIpqB,EAASxB,KAAK6gG,iBAAiBx8E,EAAQ4T,GACvCA,EAAQz2B,SACRs/E,GAAe,EACft/E,EAAOxK,EAAIihC,EAAQz2B,OAAOxK,EAAIihC,EAAQz2B,OAAOxK,EAAIwK,EAAOxK,EACxDwK,EAAOvK,EAAIghC,EAAQz2B,OAAOvK,EAAIghC,EAAQz2B,OAAOvK,EAAIuK,EAAOvK,EACxDuK,EAAOjJ,MAAQ0/B,EAAQz2B,OAAOjJ,OAASiJ,EAAOjJ,MAC9CiJ,EAAOlJ,OAAS2/B,EAAQz2B,OAAOlJ,QAAUkJ,EAAOlJ,QAEpDqK,GACII,SAAoB9I,IAAf0I,EAAOI,IAAoBJ,EAAOI,IAAM,GAC7CD,YAA0B7I,IAAlB0I,EAAOG,OAAuBH,EAAOG,OAAS,GACtDD,WAAwB5I,IAAjB0I,EAAOE,MAAsBF,EAAOE,MAAQ,GACnDD,UAAsB3I,IAAhB0I,EAAOC,KAAqBD,EAAOC,KAAO,IAExC5C,KAAKd,QAAQ8Z,MACV,iBAAXqL,IACA7iB,EAAOxK,GAAK2L,EAAOC,KACnBpB,EAAOvK,GAAK0L,EAAOI,IACnBvB,EAAOjJ,OAASoK,EAAOC,KAAOD,EAAOE,MACrCrB,EAAOlJ,QAAUqK,EAAOI,IAAMJ,EAAOG,QAEzC,IAAIg+F,EAAW7oE,EAAQ6oE,UAAY,UACnC,GAAuB,QAAnB7oE,EAAQ8oE,QAER,GAAa,QADb3qG,EAAO4J,KAAKghG,UAAU/oE,EAASz2B,EAAQmB,EAAQipB,EAAMk1D,EAAcz8D,EAAQy8E,IAEvE,OAAO1qG,MAGV,CACDuqG,EAAW1oE,EAAQ8oE,OACnB9oE,EAAQz2B,OAASA,EACjBy2B,EAAQt1B,OAASA,EACjB,IAAIs4B,EAAMh7B,EAAUD,KAAKihG,aAAahpE,EAASt1B,GAC/C,GAAa,SAATipB,EACA,OAAO3rB,EAEX,IAAIihG,GAAS,IAAIC,eAAgBC,kBAAkBnmE,GACnD2lE,EAAQ9pG,KAAKoqG,GAEjB,GAAa,aAATt1E,GAAgC,OAATx1B,EACvB,IAOK,IAAI6Z,EAAI,EAAGA,EAAI2wF,EAAQnqG,OAAQwZ,IAAK,CACrC,IAAIoxF,EAAO,IAAIC,MAAMV,EAAQ3wF,KAAOpU,KAAM,6BAC1C,GAA0B,SAAtBg6B,UAAQC,KAAKvd,KACb2c,OAAOgtC,UAAUq/B,iBAAiBF,EAAMP,EAAW,IAAMH,OAExD,CACD,IAAIa,EAAM3/E,GAAkB,KAAO4/E,SAAYX,EAAW,IAAMH,IAC5D9L,EAAM6M,IAAIC,gBAAgBN,GAC9BG,EAAII,KAAO/M,EACX,IAAI1nF,EAAIoU,SAASsgF,YAAY,eAC7B10F,EAAE20F,eAAe,SAAS,GAAM,EAAM5sE,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,MAC5FssE,EAAIO,cAAc50F,IAI9B,OAAO,MAEXuzF,EAAep/D,UAAU0/D,UAAY,SAAU/oE,EAASz2B,EAAQmB,EAAQipB,EAAMk1D,EAAcz8D,EAAQy8E,GAChG,IACIH,EACA1gG,EAFAomC,EAAQrmC,KAGZi4B,EAAQz2B,OAASA,EACjBy2B,EAAQ5T,OAASA,EACjB,IAEI29E,KACJhiG,KAAKiiG,uBAAuBhqE,EAASz2B,GACrC,IAAIm4C,EAAS35C,KAAKkiG,iBACd1gG,OAAQA,EAAQmB,OAAQA,EAAQ0hB,OAAQA,EAAQ3mB,OAAQu6B,EAAc,OACtEt6B,OAAQs6B,EAAc,QACvB6oD,GACH6f,EAAW1oE,EAAQ8oE,QAAU,MAC7B,IAAIj9C,EAAQ7jD,EAAU05C,EAAOwoD,YAC7B,GAAa,SAATv2E,EACA,OAAO3rB,EAEX,GAAIg4B,EAAQ4nD,aAAc,CAMtB,GALA5nD,EAAQmqE,WAAanqE,EAAQmqE,WAAanqE,EAAQmqE,WAAapiG,KAAKd,QAAQksB,aAAa9yB,OACzF2/B,EAAQoqE,UAAYpqE,EAAQoqE,UAAYpqE,EAAQoqE,UAAYriG,KAAKd,QAAQksB,aAAa7yB,MACtF0/B,EAAQmqE,WAAanqE,EAAQmqE,WAAanqE,EAAQmqE,WAAazoD,EAAOphD,MACtE0/B,EAAQoqE,UAAYpqE,EAAQoqE,UAAYpqE,EAAQoqE,UAAY1oD,EAAOrhD,OACnEqK,EAASs1B,EAAQt1B,WACbs1B,EAAQqqE,kBACyB,cAA5BrqE,EAAQqqE,iBAAmCrqE,EAAQmqE,WAAanqE,EAAQoqE,WAC7C,aAA5BpqE,EAAQqqE,iBAAkCrqE,EAAQoqE,UAAYpqE,EAAQmqE,YAAY,CAClF,IAAIhyF,EAAO6nB,EAAQoqE,UACnBpqE,EAAQoqE,UAAYpqE,EAAQmqE,WAC5BnqE,EAAQmqE,WAAahyF,EAG7B6nB,EAAQt1B,QACJI,IAAM6L,MAAMjM,EAAOI,KAAoB,EAAbJ,EAAOI,IACjCD,OAAS8L,MAAMjM,EAAOG,QAA0B,EAAhBH,EAAOG,OACvCF,KAAOgM,MAAMjM,EAAOC,MAAsB,EAAdD,EAAOC,KACnCC,MAAQ+L,MAAMjM,EAAOE,OAAwB,EAAfF,EAAOE,OAEzC,IAII0/F,EAAQ1gF,GAAkB,OAH1BhiB,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,cAChC4I,IAAOq7C,IAGXy+C,EAAMj+C,OAAS,WACX09C,EAAS37D,EAAMm8D,iBAAiBD,EAAOtqE,GAAS,GAChDoO,EAAMo8D,YAAYT,EAAQlB,EAAUH,EAAU78C,SAIlDk+C,GAAUl+C,GACV9jD,KAAKyiG,YAAYT,EAAQlB,EAAUH,EAAU78C,GAEjD,OAAO,MAEX48C,EAAep/D,UAAUmhE,YAAc,SAAUT,EAAQlB,EAAUH,EAAU78C,GAGzE,IAAK,IAFD88C,KACAnqG,EAAYurG,aAAkBnlE,YAAgC,EAAhBmlE,EAAOvrG,OAChDmnD,EAAI,EAAGA,EAAInnD,EAAQmnD,IAAK,CAO7B,IAAK,IAJD8kD,EAFIV,EAAOpkD,GACDhnB,QAAQ,iBAAkB,IACrBtoB,MAAM,KACrBq0F,EAAaC,KAAKF,EAAO,IACzBxB,EAAS,IAAI2B,YAAYF,EAAWlsG,QACpCqsG,EAAW,IAAIC,WAAW7B,GACrBxqG,EAAI,EAAGA,EAAIisG,EAAWlsG,OAAQC,IACnCosG,EAASpsG,GAAKisG,EAAWK,WAAWtsG,GAExCkqG,EAAQ9pG,KAAKoqG,GAwBjB,IAAK,IAtBD+B,EAAU,SAAU5sG,GACpB,IAAI4Z,EAAI,IAAIqxF,MAAMV,EAAQvqG,KAAOwF,KAAM,6BACvC,GAA0B,SAAtBg6B,UAAQC,KAAKvd,KACb2c,OAAOgtC,UAAUq/B,iBAAiBtxF,EAAG6wF,EAAW,IAAMH,OAErD,CACD,IAAIuC,EAAgBrhF,GAAkB,KAAO4/E,SAAYX,EAAW,IAAMH,IACtEwC,EAAUzB,IAAIC,gBAAgB1xF,GAClCizF,EAActB,KAAOuB,EACrB,IAAIC,EAAe7hF,SAASsgF,YAAY,eACxCuB,EAAatB,eAAe,SAAS,GAAM,EAAM5sE,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,MACvGqS,WAAW,WACP27D,EAAcnB,cAAcqB,IAClB,GAAT/sG,EAAI,MASRA,EAAI,EAAGA,EAAIuqG,EAAQnqG,OAAQJ,IAChC4sG,EAAQ5sG,IAIhBqqG,EAAep/D,UAAU+hE,gBAAkB,SAAUprE,GAGjD,IAAK,IADDqrE,EACKzmG,EAAK,EAAG+5E,EAFL52E,KAAKd,QAAQ8Z,MAESnc,EAAK+5E,EAAQngF,OAAQoG,IAAM,CACzD,IAAI0D,EAAOq2E,EAAQ/5E,GACf0D,EAAK2tB,WACoB,QAAnB+J,EAAQ8oE,QAAsBxgG,aAAgBwuB,IAA2BxuB,aAAgB0uB,MACpE,QAAnBgJ,EAAQ8oE,QAAsBxgG,aAAgB0uB,MAK9Cq0E,EAJCA,EAIYA,EAAWxxF,UAAUvR,EAAKuN,QAAQ3B,aAHlC5L,EAAKuN,QAAQ3B,cAS1C,IAAK,IAAIuQ,EAAK,EAAGq3E,EADA/zF,KAAKd,QAAQge,WACcR,EAAKq3E,EAAat9F,OAAQimB,IAAM,CACxE,IAAI9Q,EAAYmoF,EAAar3E,GACzB9Q,EAAUsiB,UAKNo1E,EAJCA,EAIYA,EAAWxxF,UAAUlG,EAAUkC,QAAQ3B,aAHvCP,EAAUkC,QAAQ3B,aAO3C,OAAOm3F,GAAc,IAAIhnF,GAAK,EAAG,EAAG,EAAG,IAE3CokF,EAAep/D,UAAUu/D,iBAAmB,SAAUj1E,EAAMqM,GACxD,IAAI5b,EAAOrc,KAAKqjG,gBAAgBprE,GAC5Br1B,EAAOyZ,EAAKzZ,KACZG,EAAMsZ,EAAKtZ,IACXF,EAAQwZ,EAAKxZ,MAAQwZ,EAAKzZ,KAC1BE,EAASuZ,EAAKvZ,OAASuZ,EAAKtZ,IACnB,YAAT6oB,IACI5rB,KAAKd,QAAQksB,cAAgBprB,KAAKd,QAAQksB,aAAay0D,cACvDj9E,EAAOyZ,EAAKzZ,KACZG,EAAMsZ,EAAKtZ,IACP/C,KAAKd,QAAQksB,aAAa7yB,QAC1BqK,EAAOnG,KAAKm3B,MAAMhxB,EAAO5C,KAAKd,QAAQksB,aAAa7yB,OAASyH,KAAKd,QAAQksB,aAAa7yB,MACtFsK,EAAQpG,KAAKo6B,KAAKxa,EAAKxZ,MAAQ7C,KAAKd,QAAQksB,aAAa7yB,OAASyH,KAAKd,QAAQksB,aAAa7yB,MAAQqK,GAEpG5C,KAAKd,QAAQksB,aAAa9yB,SAC1ByK,EAAMtG,KAAKm3B,MAAM7wB,EAAM/C,KAAKd,QAAQksB,aAAa9yB,QAAU0H,KAAKd,QAAQksB,aAAa9yB,OACrFwK,EAASrG,KAAKo6B,KAAKxa,EAAKvZ,OAAS9C,KAAKd,QAAQksB,aAAa9yB,QAAU0H,KAAKd,QAAQksB,aAAa9yB,OAASyK,GAExF,IAAfsZ,EAAK9jB,OAAoD,OAApCyH,KAAKd,QAAQksB,aAAa7yB,QAChDsK,EAAQ7C,KAAKd,QAAQksB,aAAa7yB,OAEjB,IAAhB8jB,EAAK/jB,QAAsD,OAArC0H,KAAKd,QAAQksB,aAAa9yB,SACjDwK,EAAS9C,KAAKd,QAAQksB,aAAa9yB,UAInC0H,KAAKd,QAAQksB,aAAa7yB,QAC1BqK,EAAO,EACPC,EAAQ7C,KAAKd,QAAQksB,aAAa7yB,OAElCyH,KAAKd,QAAQksB,aAAa9yB,SAC1ByK,EAAM,EACND,EAAS9C,KAAKd,QAAQksB,aAAa9yB,UAI/C,IAAI89B,EAAY,IAAI9Z,GAKpB,OAJA8Z,EAAUp/B,EAAI4L,EACdwzB,EAAUn/B,EAAI8L,EACdqzB,EAAU79B,MAAQsK,EAClBuzB,EAAU99B,OAASwK,EACZszB,GAEXsqE,EAAep/D,UAAU2gE,uBAAyB,SAAUhqE,EAASz2B,GAGjEy2B,EAAc,OAAI,EAClBA,EAAc,OAAI,EAClBA,EAAQmqE,WAAanqE,EAAQmqE,YAAcpiG,KAAKd,QAAQksB,aAAa9yB,OACrE2/B,EAAQoqE,UAAYpqE,EAAQoqE,WAAariG,KAAKd,QAAQksB,aAAa7yB,MACnE,IAAID,EAAS2/B,EAAQmqE,YAAc5gG,EAAOlJ,OACtCC,EAAQ0/B,EAAQoqE,WAAa7gG,EAAOjJ,MAChB,YAApB0/B,EAAQoQ,SAA6C,SAApBpQ,EAAQoQ,SAA0C,UAApBpQ,EAAQoQ,UACvEpQ,EAAc,OAAI1/B,EAAQiJ,EAAOjJ,MACjC0/B,EAAc,OAAI3/B,EAASkJ,EAAOlJ,OACV,SAApB2/B,EAAQoQ,QACRpQ,EAAc,OAAIA,EAAc,OAAIx7B,KAAKqK,IAAImxB,EAAc,OAAGA,EAAc,QAEnD,UAApBA,EAAQoQ,UACbpQ,EAAc,OAAIA,EAAc,OAAIx7B,KAAK+I,IAAIyyB,EAAc,OAAGA,EAAc,SAEhFz2B,EAAOjJ,MAAQA,EACfiJ,EAAOlJ,OAASA,GAEpBkJ,EAAOxK,GAAKihC,EAAc,OAC1Bz2B,EAAOvK,GAAKghC,EAAc,QAE9ByoE,EAAep/D,UAAU2/D,aAAe,SAAUhpE,EAASt1B,GACvD,IAAIs4B,EAAMj7B,KAAKd,QAAQqyF,UAAUvxF,KAAKd,QAAQU,QAAQC,GAAK,eAAgBo4B,EAAQz2B,OAAOjJ,MAAO0/B,EAAQz2B,OAAOlJ,QAChHipB,SAASqW,KAAKrI,YAAY0L,GAC1B,IAAI2iB,EAAIhkB,GAAiB,KAAO/5B,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,oBAC5DwkB,EAAS4T,GAAWA,EAAQ5T,OAAS4T,EAAQ5T,OAAS,UACtD7iB,EAASxB,KAAK6gG,iBAAiBx8E,EAAQ4T,GACvCr1B,EAAOpB,EAAOxK,EACd+L,EAAMvB,EAAOvK,EACbsB,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OACpB2iC,EAAI1L,YAAYquB,GAChB,IAAIL,GACAvmD,EAAK8mG,OAAOl7F,GACZ3L,EAAK6mG,OAAO/6F,GAAMxK,MAASulG,OAAOvlG,GAAQD,OAAUwlG,OAAOxlG,IAE/DwhC,GAAgB8jB,EAAGL,GACnBv9C,KAAKm5F,aAAav7C,EAAG3lB,EAAQz2B,OAAQmB,GACrC,IAAI8qB,EAAWlM,SAASC,eAAexhB,KAAKd,QAAQU,QAAQC,GAAK,oBAC7D4tB,GACAwN,EAAI1L,YAAY9B,GAEpB8vB,GACIvmD,EAAK,EACLC,EAAK,EAAGsB,MAASulG,OAAOvlG,EAAQoK,EAAOC,KAAOD,EAAOE,OAAQvK,OAAUwlG,OAAOxlG,EAASqK,EAAOI,IAAMJ,EAAOG,SAE/G,IAAIygG,EAAYhiF,SAASC,eAAexhB,KAAKd,QAAQU,QAAQC,GAAK,yBAAyBm7B,WAAU,GACrGlB,GAAgBypE,EAAWhmD,GAC3BtiB,EAAI1L,YAAYg0E,GAChBvjG,KAAKm5F,aAAaoK,EAAW/hG,EAAQmB,GACrC,IAAI6gG,EAAWjiF,SAASC,eAAexhB,KAAKd,QAAQU,QAAQC,GAAK,wBAAwBm7B,WAAU,GAInG,GAHAlB,GAAgB0pE,EAAUjmD,GAC1BtiB,EAAI1L,YAAYi0E,GAChBxjG,KAAKm5F,aAAaqK,EAAUhiG,EAAQmB,GACV,QAAtB3C,KAAKd,QAAQ0sB,KAAgB,CAC7B,IAAIhsB,OAAU,EACVlJ,OAAI,EACJ+sG,EAAkB5qE,GAAmB74B,KAAKd,QAAQU,QAAQC,IAE9D,IADAo7B,EAAI1L,YAAYk0E,EAAgBjiF,eAAexhB,KAAKd,QAAQk0E,aAAavzE,IAAIm7B,WAAU,IAClFtkC,EAAI,EAAGA,EAAIukC,EAAIlF,WAAWt/B,OAAQC,KACnCkJ,EAAUq7B,EAAIlF,WAAWr/B,IACbmJ,KAAOG,KAAKd,QAAQU,QAAQC,GAAK,iBACzCG,KAAKm5F,aAAav5F,EAAS4B,EAAQmB,OAI1C,CACDi7C,EAAIhkB,GAAiB,KAAO/5B,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,kBAC5Do7B,EAAI1L,YAAYquB,GAChB59C,KAAKm5F,aAAav7C,EAAG3lB,EAAQz2B,OAAQmB,GAErC,IAAIwmD,EAAW,IAAIH,GAAgB,GAAI,MAAM,GACzC1jC,EAAYkU,GAAax5B,KAAKd,QAAQU,QAAQC,IAClDG,KAAKd,QAAQk6F,sBAAsBn+D,EAAKkuB,EAAU7jC,GAAW,GAGjE,OADA/D,SAASqW,KAAKtI,YAAY2L,GACnBA,GAEXylE,EAAep/D,UAAU63D,aAAe,SAAUv5F,EAAS4B,EAAQmB,GAC/D/C,EAAQs2B,aAAa,YAAa,eAAiB10B,EAAOxK,EAAI2L,EAAOC,MAAQ,OACvEpB,EAAOvK,EAAI0L,EAAOI,KAAO,MAEnC29F,EAAep/D,UAAU4gE,gBAAkB,SAAUjqE,EAAS6oD,GAC1D,IAIIz8D,EAAS4T,EAAQz2B,OACjBmB,EAASs1B,EAAQt1B,OACjBipB,EAAOqM,GAAWA,EAAQ5T,OAAS4T,EAAQ5T,OAAS,UACpD05D,EAAa/9E,KAAK6gG,iBAAiBj1E,EAAMqM,GACzCyrE,EAAU1jG,KAAKd,QAAQksB,aAAaykC,WAAWn3C,MAC/CihC,EAASgG,GAAeyB,aAAaphD,KAAKd,QAAQU,QAAQC,GAAK,WAAYo4B,EAAQz2B,OAAOjJ,MAAO0/B,EAAQz2B,OAAOlJ,QAEhHqrG,EAAUhqD,EAAOiG,WAAW,MAChC+jD,EAAQxmD,WAAW94B,EAAOrtB,GAAIqtB,EAAOptB,GACrC0sG,EAAQljD,OACRkjD,EAAQpjD,UAAYvgD,KAAKd,QAAQksB,aAAaykC,WAAWn3C,MACzD2L,EAAkB,YAATuH,EAAqBmyD,EAAa15D,EAC3Cs/E,EAAQ1iD,SAAS58B,EAAOrtB,EAAGqtB,EAAOptB,EAAGotB,EAAO9rB,MAAO8rB,EAAO/rB,QAC1D,IAAIsrG,EAAQ5jG,KAAKd,QAAQksB,aAAaykC,WACtC,GAAI+zC,GAASA,EAAMrhG,OAAQ,CACvBw7E,EAAa/9E,KAAK6gG,iBAAiBj1E,EAAMqM,GACzC,IAAI6rB,EAAQ,IAAIjN,MAChBiN,EAAMr7C,IAAMm7F,EAAMrhG,OAClB,IAAIshG,EAAc9lB,EAAWxlF,MAAQurD,EAAMvrD,MACvCurG,EAAc/lB,EAAWzlF,OAASwrD,EAAMxrD,OACxCtB,EAAI+mF,EAAW/mF,EACfC,EAAI8mF,EAAW9mF,EACfsB,EAAQwlF,EAAWxlF,MACnBD,EAASylF,EAAWzlF,OACpByrG,EAAa/jG,KAAKgkG,kBAAkBJ,GACxC,GAAoB,SAAhBA,EAAMvoF,OAAoC,SAAhBuoF,EAAMj1E,MAAkB,CAClD,IAAIs1E,EAA6B,SAAhBL,EAAMvoF,MAAmB5e,KAAKqK,IAAI+8F,EAAaC,GAAernG,KAAK+I,IAAIq+F,EAAaC,GACrGvrG,EAAQ0rG,EAAangD,EAAMvrD,MAC3BD,EAAS2rG,EAAangD,EAAMxrD,OACxBsrG,EAAMj1E,MAAMzQ,QAAQ,SAAW,EAC/BlnB,IAAM+mF,EAAWxlF,MAAQA,GAAS,EAE7BqrG,EAAMj1E,MAAMzQ,QAAQ,SAAW,IACpClnB,EAAIA,EAAI+mF,EAAWxlF,MAAQA,GAE3BqrG,EAAMj1E,MAAMzQ,QAAQ,SAAW,EAC/BjnB,IAAM8mF,EAAWzlF,OAASA,GAAU,EAE/BsrG,EAAMj1E,MAAMzQ,QAAQ,SAAW,IACpCjnB,EAAIA,EAAI8mF,EAAWzlF,OAASA,GAEmB,SAA/C0H,KAAKd,QAAQksB,aAAaykC,WAAWn3C,OAAmE,gBAA/C1Y,KAAKd,QAAQksB,aAAaykC,WAAWn3C,QAC9FirF,EAAQpjD,UAAY,QACpBojD,EAAQ1iD,SAAS88B,EAAW/mF,EAAIihC,EAAc,OAAG8lD,EAAW9mF,EAAIghC,EAAc,OAAG8lD,EAAWxlF,MAAQ0/B,EAAc,OAAG8lD,EAAWzlF,OAAS2/B,EAAc,SAEvJ8rE,GACAJ,EAAQ5/C,UAAUD,EAAO9sD,EAAGC,EAAGgtG,EAAangD,EAAMvrD,MAAO0rG,EAAangD,EAAMxrD,aAG3EyrG,GACLJ,EAAQ5/C,UAAUD,EAAO9sD,EAAGC,EAAG8mF,EAAWxlF,MAAOwlF,EAAWzlF,aAIhEqrG,EAAQpjD,UAAwB,gBAAZmjD,EAA4B,QAAUA,EAC1DC,EAAQ1iD,SAAU88B,EAAW/mF,EAAIihC,EAAc,OAAKt1B,EAAOC,KAAOm7E,EAAW9mF,EAAIghC,EAAc,OAAKt1B,EAAOI,IAAMg7E,EAAWxlF,MAAQ0/B,EAAc,OAAKt1B,EAAOC,KAAOD,EAAOE,MAAQo1B,EAAc,OAAI8lD,EAAWzlF,OAAUqK,EAAOI,IAAMJ,EAAOG,QAEnP,IAAIohG,EAAUlkG,KAAKd,QAAQksB,aAAaykC,WAAWn3C,MAC/CyrF,EAAUnkG,KAAKd,QAAQksB,aAAa7yB,MACpC4rG,IACAR,EAAQhjD,YAA0B,SAAZujD,EAAqB,cAAgBA,EAC3DP,EAAQpiD,UAAY4iD,EACpBR,EAAQS,WAAWrmB,EAAW/mF,EAAIihC,EAAc,OAAG8lD,EAAW9mF,EAAIghC,EAAc,OAAG8lD,EAAWxlF,MAAQ0/B,EAAc,OAAG8lD,EAAWzlF,OAAS2/B,EAAc,SAE7J0rE,EAAQxiD,UACR,IAAI77B,EAAYkU,GAAax5B,KAAKd,QAAQU,QAAQC,IAC9CspD,EAAW,IAAIH,GAAgB,GAAI,MAAM,GAE7C,OADAhpD,KAAKd,QAAQk6F,sBAAsBz/C,EAAQwP,EAAU7jC,GAAW,GAAO,GAChEq0B,GAEX+mD,EAAep/D,UAAU0iE,kBAAoB,SAAUxS,GACnD,IAEI73C,EAFA3wB,GAAQ,EAGZ,GAAIwoE,EAAgBjvF,OAChB,IAEI,IAAIw9C,GADJpG,EAASgG,GAAeyB,aAAaphD,KAAKd,QAAQU,QAAQC,GAAK,cAAe,IAAK,MAClE+/C,WAAW,MAC5BG,EAAIU,OACJ,IAAIqD,EAAQ,IAAIjN,MAChBiN,EAAMr7C,IAAM+oF,EAAgBjvF,OAC5Bw9C,EAAIgE,UAAUD,EAAO,EAAG,EAAG,IAAK,KAChC/D,EAAIoB,UACMxH,EAAOwoD,YAErB,MAAOh1F,GACH6b,GAAQ,EAGhB,OAAOA,GAEX03E,EAAep/D,UAAU+iE,oBAAsB,SAAUC,EAAKrsE,GAC1D,IAAI1/B,EAAQ,EACRD,EAAS,EACTi5B,EAAO,IAAI3T,GAOf,GANArlB,EAAQ+rG,EAAI/rG,MACZD,EAASgsG,EAAIhsG,QACT2/B,EAAQmqE,YAAcnqE,EAAQoqE,aAC9B/pG,EAAS2/B,EAAQmqE,WAAanqE,EAAQmqE,WAAa9pG,EACnDC,EAAQ0/B,EAAQoqE,UAAYpqE,EAAQoqE,UAAY9pG,GAEhD0/B,EAAQqqE,kBACyB,cAA5BrqE,EAAQqqE,iBAAmChqG,EAASC,GAAsC,aAA5B0/B,EAAQqqE,iBAAkC/pG,EAAQD,GAAQ,CACzH,IAAI8X,EAAO7X,EACXA,EAAQD,EACRA,EAAS8X,EAKjB,OAFAmhB,EAAKj5B,OAASA,EACdi5B,EAAKh5B,MAAQA,EACNg5B,GAEXmvE,EAAep/D,UAAUkhE,iBAAmB,SAAU8B,EAAKrsE,EAASssE,GAChE,IAGIlC,EACAD,EAJAoC,KACAljF,EAAMO,GAAkB,UACxB4iF,EAAWzkG,KAAKqkG,oBAAoBC,EAAKrsE,GAGzCt1B,EAASs1B,EAAQt1B,OACjB+hG,EAAQ/hG,EAAOC,KACf+hG,EAAOhiG,EAAOI,IACd6hG,EAASjiG,EAAOE,MAChBgiG,EAAUliG,EAAOG,OACjB9L,EAAI,EAERqrG,EAAYoC,EAASlsG,MAAQvB,EAC7BorG,EAAaqC,EAASnsG,OAFd,EAGR,IAAIwsG,EAAS,EACTC,EAAS,EACb,GAAI9sE,GAAWA,EAAQ4nD,cAAqC,YAAnB5nD,EAAQ5T,OAAuB,CACpE/C,EAAIphB,MAAM5H,OAAS,OACnBgpB,EAAIphB,MAAM3H,MAAQ,OAClB,IAAIysG,EAAYV,EAAIhsG,OAChB2sG,EAAWX,EAAI/rG,MAEf7B,EAAI,EACJL,EAAI,EACJw+F,OAAM,EACNxsC,EAAY,EACZC,EAAa,EACbvI,OAAM,EACNpG,OAAS,EACb,EAAG,CACC,GACI0O,EAAYo8C,EAASlsG,MACrB+vD,EAAam8C,EAASnsG,OACjBwsG,EAASL,EAASlsG,OAAU0sG,IAC7B58C,EAAa48C,EAAWH,GAEvBC,EAASN,EAASnsG,QAAW0sG,IAC9B18C,EAAc08C,EAAYD,IAG9BhlD,GADApG,EAASgG,GAAeyB,aAAaphD,KAAKd,QAAQU,QAAQC,GAAK,iBAAkB4kG,EAASlsG,MAAOksG,EAASnsG,SAC7FsnD,WAAW,OACpBmE,UAAUugD,EAAKttG,EAAI8tG,EAASJ,EA9BpC,EA8B+CK,EAASJ,EAAMt8C,EAAYu8C,EAASF,EAAOp8C,EAAau8C,EAAUF,EAAM,EAAID,EAAO,EAAIC,EAAMt8C,EAAYu8C,EAASF,EAAOp8C,EAAau8C,EAAUF,GACtLG,EAASL,EAASlsG,OAAU0sG,IAC7BH,GAAWA,EAASG,GAExBpQ,EAAMl7C,EAAOwoD,YACbpiD,EAAIoB,UACJ2jD,GAAUzC,EACNkC,EACAC,EAAW1tG,KAAK+9F,GAGhB70F,KAAKklG,WAAW5jF,EAAKuzE,EAAKn+F,EAAI,GAAKL,EAAGgsG,EAAY,MAAOD,EAAa,OAE1E1rG,UACKouG,EAASG,GAClB5uG,IACAK,EAAIM,EAAI8tG,EAAS,EACZC,EAASN,EAASnsG,QAAW0sG,IAC9BD,GAAWA,EAASC,GAExBD,GAAU3C,QACL2C,EAASC,OAGjB,CACD,IAGIG,EACAC,EAFAC,EAAarlG,KAAKqkG,oBAAoBC,EAAKrsE,GAG/CktE,EAAcE,EAAW9sG,MACzB6sG,EAAeC,EAAW/sG,OACtBynD,OAAM,EACNpG,OAAS,EACTk7C,OAAM,GAEV90C,GADApG,EAASgG,GAAeyB,aAAaphD,KAAKd,QAAQU,QAAQC,GAAK,WAAYslG,EAAaC,IAC3ExlD,WAAW,OACpBmE,UAAUugD,EAZJ,EAYeI,EAXf,EAW4BC,EAAML,EAAI/rG,OAASqsG,EAASF,GAAQJ,EAAIhsG,QAAUqsG,EAAOE,GAAU,EAAIH,EAAO,EAAIC,EAAMQ,GAAeP,EAASF,GAAQU,GAAgBT,EAAOE,IACrLhQ,EAAMl7C,EAAOwoD,YACbpiD,EAAIoB,UACAojD,EACAC,EAAW1tG,KAAK+9F,GAGhB70F,KAAKklG,WAAW5jF,EAAKuzE,EAAK,GAGlC,OAAI0P,EACOC,EAGAljF,GAGfo/E,EAAep/D,UAAU4jE,WAAa,SAAU5jF,EAAKuzE,EAAKn+F,EAAG2rG,EAAWD,GACpE,IAAI7kD,GAAS5lC,MAAS,uBAAwBzX,MAAS,SAAWmiG,EAAY,UAAYD,GACtFkC,EAAMziF,GAAkB,MAAO07B,GAC/B+nD,EAAWzjF,GAAkB,MAAO07B,GAExC5jB,GAAiB2qE,EADjB/mD,GAAS19C,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,qBAAuBnJ,EAAGwJ,MAAS,aAAcuI,IAAOosF,IAEjGyQ,EAAS/1E,YAAY+0E,GACrBhjF,EAAIiO,YAAY+1E,IAMpB5E,EAAep/D,UAAUgvD,MAAQ,SAAUr4D,GACvC,IAAIoO,EAAQrmC,KACZi4B,EAAQrM,KAAO,OACfqM,EAAQt1B,QAAWI,IAAK,EAAGD,OAAQ,EAAGD,MAAO,EAAGD,KAAM,GACtD,IAAIiyF,EAAM70F,KAAKowF,cAAcn4D,GAKzBqsE,EAAMziF,GAAkB,OAHxBhiB,GAAMG,KAAKd,QAAQU,QAAQC,GAAK,cAChC4I,IAAOosF,IAGXyP,EAAIhgD,OAAS,WACT,IAAIhjC,EAAM+kB,EAAMm8D,iBAAiB8B,EAAKrsE,GAElCstE,EAAYrwE,OAAOqnC,KAAK,IACX,MAAbgpC,GACKjkF,aAAeub,cAChB0oE,EAAUhkF,SAASikF,MAAM,mMAGzBD,EAAUhkF,SAASikF,MAAM,gEACzBD,EAAUhkF,SAASikF,MAAM,WAAalkF,EAAImkF,UAAY,aACtDF,EAAUhkF,SAASzhB,WAUnC4gG,EAAep/D,UAAUsa,QAAU,aAQnC8kD,EAAep/D,UAAUqa,cAAgB,WAIrC,MAAO,kBAEJ+kD,KCxmBPgF,GAA6B,WAK7B,SAASA,IAEL1lG,KAAK2lG,aAiOT,OAzNAD,EAAYpkE,UAAUsa,QAAU,aAQhC8pD,EAAYpkE,UAAUqa,cAAgB,WAIlC,MAAO,eAQX+pD,EAAYpkE,UAAU4xD,SAAW,SAAU98F,EAAM8I,GAC7C,IAAI01F,EAGA5K,EAAc5zF,EAAK4zF,iBACvB4K,EAAax+F,EAAKA,MAAQ4zF,EAAoB,MAAKA,EAAoB,OAClEA,EAAY4K,WAAa5K,EAAY4K,WAAWgR,UAAO3rG,KAC1C26F,EAAWn+F,QACzBuJ,KAAK6lG,gBAAgBzvG,EAAMw+F,EAAY11F,IAS/CwmG,EAAYpkE,UAAUwzD,WAAa,SAAU1+F,EAAM8I,GAC/C,IAEI/B,EAFAkpC,EAAQrmC,KAGR8lG,EAAS1vG,EACb,GAHiBA,EAGF4zF,uBAAuB+b,cAAa,CAC/C,IAAIC,EAAQF,EAAO9b,YAAYic,aAC/B7vG,EAAK4zF,YAAYkc,aAAaF,GAAO9b,KAAK,SAAU/8E,GAEhDhQ,EAASgQ,EAAM,OACVjO,EAAQ+5F,cACT5yD,EAAMw/D,gBAAgBzvG,EAAM+G,EAAQ+B,GACpCA,EAAQw5F,iBACRx5F,EAAQ04C,QAAQ,cAAgB14C,QAASA,SAKzDwmG,EAAYpkE,UAAUukE,gBAAkB,SAAUC,EAAQ1vG,EAAM8I,GAC5Dc,KAAK2lG,aACL,IAAIprG,EACA4rG,EAGA11E,EACA21E,EAHAC,KACAhmE,KAGJ,QAAapmC,IAAT7D,EAAoB,CACpB,IAAK,IAAIgX,EAAI,EAAGA,EAAIhX,EAAKK,OAAQ2W,SAEAnT,KAD7BM,EAAMnE,EAAKgX,IACH04F,EAAOjrF,WAAoD,OAAzBtgB,EAAIurG,EAAOjrF,WACjB,iBAAzBtgB,EAAIurG,EAAOjrF,eACsB5gB,IAApCosG,EAAU9rG,EAAIurG,EAAOjrF,WACrBwrF,EAAU9rG,EAAIurG,EAAOjrF,WAAWmsE,MAAMlwF,KAAKyD,GAG3C8rG,EAAU9rG,EAAIurG,EAAOjrF,YAAemsE,OAAQzsF,IAIhD8rG,EAAYrmG,KAAKsmG,wBAAwB/rG,EAAK8rG,EAAWP,EAAQ1vG,GAEjE0vG,EAAOrW,OAASl1F,EAAIurG,EAAOjmG,MAC3BsmG,GAAcnf,OAAQzsF,KAG9B,GAAI4rG,EACA9lE,EAAWvpC,KAAKqvG,QAGhB,IAAK,IAAItpG,EAAK,EAAG6f,EAAKC,OAAOC,KAAKypF,GAAYxpG,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAChE,IAAI60C,EAAIh1B,EAAG7f,GACN60C,GAAW,cAANA,GAA2B,OAANA,GAAsB,SAANA,GAC3CrR,EAAWvpC,KAAKuvG,EAAU30D,IAItC,IAAK,IAAIh7C,EAAI,EAAGA,EAAI2pC,EAAW5pC,OAAQC,IACnC,IAAK,IAAIL,EAAI,EAAGA,EAAIgqC,EAAW3pC,GAAGswF,MAAMvwF,OAAQJ,IAAK,CACjDo6B,EAAO4P,EAAW3pC,GAAGswF,MAAM3wF,GAC3B,IAAIkK,EAAOP,KAAKumG,kBAAkBT,EAAQr1E,EAAMvxB,GAChDA,EAAQ8Z,MAAMliB,KAAKyJ,GACnBP,KAAK2lG,UAAUl1E,EAAKq1E,EAAOjmG,KAAOU,OAEhBtG,KADlBmsG,EAAYC,EAAU9lG,EAAKnK,KAAK0vG,EAAOjmG,OAEnCG,KAAKwmG,iBAAiBV,EAAQM,EAAW7lG,EAAKV,GAAIwmG,EAAWnnG,IAK7Ec,KAAK2lG,UAAY,MASrBD,EAAYpkE,UAAUglE,wBAA0B,SAAU/rG,EAAK8rG,EAAWP,EAAQ1vG,GAG9E,IAAK,IADD4nB,EADAyoF,EAAUlsG,EAAIurG,EAAOjrF,UAEhBnkB,EAAI,EAAGA,EAAI+vG,EAAQhwG,OAAQC,IAE5B2vG,EADJroF,EAASyoF,EAAQ/vG,IAEb2vG,EAAUroF,GAAQgpE,MAAMlwF,KAAKyD,GAG7B8rG,EAAUroF,IAAYgpE,OAAQzsF,IAGtC,OAAO8rG,GAQXX,EAAYpkE,UAAUilE,kBAAoB,SAAUT,EAAQr1E,EAAMvxB,GAC9D,IAEIwnG,GAAc7mG,GADTyZ,KACiBljB,KAAMq6B,GAC5BzG,EAAYpG,GAAYkiF,EAAO97E,WAC/BA,GACAA,EAAU08E,EAAWj2E,EAAMvxB,GAE/B,IAAI3E,EAAM,IAAIga,GAAKrV,EAAS,QAASwnG,GAAW,GAChD,OAAK1mG,KAAKohC,mBAAmB7mC,EAAK2E,EAAS4mG,EAAOjmG,GAAIimG,EAAOjrF,UAIlD7a,KAAK2lG,UAAUl1E,EAAKq1E,EAAOjmG,KAH3BtF,GAMfmrG,EAAYpkE,UAAUklE,iBAAmB,SAAUV,EAAQ9nF,EAAQzY,EAAOohG,EAASznG,GAI/E,IAAK,IAHD0O,EACAw4F,EACA7lG,EACKlK,EAAI,EAAGA,EAAI2nB,EAAOgpE,MAAMvwF,OAAQJ,IAAK,CAC1CuX,EAAQoQ,EAAOgpE,MAAM3wF,GACrBkK,EAAOP,KAAKumG,kBAAkBT,EAAQl4F,EAAO1O,GAC7C,IAAI0nG,GAAW,EACV5mG,KAAKohC,mBAAmB7gC,EAAMrB,EAAS4mG,EAAOjmG,GAAIimG,EAAOjrF,UAK1D+rF,GAAW,GAJX5mG,KAAK2lG,UAAU/3F,EAAMk4F,EAAOjmG,KAAOU,EACnCrB,EAAQ8Z,MAAMliB,KAAKyJ,IAKlBP,KAAK6mG,kBAAkB3nG,EAASqG,EAAOhF,EAAKV,KAC7CX,EAAQge,WAAWpmB,KAAKkJ,KAAK8mG,uBAAuBvhG,EAAOhF,EAAKV,GAAIX,IAEnE0nG,QAEiB3sG,KADlBmsG,EAAYO,EAAQpmG,EAAKnK,KAAK0vG,EAAOjmG,OAEjCG,KAAKwmG,iBAAiBV,EAAQM,EAAW7lG,EAAKV,GAAI8mG,EAASznG,KAK3EwmG,EAAYpkE,UAAUulE,kBAAoB,SAAU3nG,EAASgD,EAAYC,GACrE,GAAmB,KAAfD,GAAoC,KAAfC,EACrB,IAAK,IAAIzL,EAAI,EAAGA,EAAIwI,EAAQge,WAAWzmB,OAAQC,IAAK,CAChD,IAAIkV,EAAY1M,EAAQge,WAAWxmB,GACnC,QAAkBuD,IAAd2R,GAA4BA,EAAUnK,WAAaS,GAAc0J,EAAUwmC,WAAajwC,EACxF,OAAO,EAInB,OAAO,GASXujG,EAAYpkE,UAAUF,mBAAqB,SAAU7gC,EAAMrB,EAASW,EAAIgb,GACpE,IAAItgB,EAAMyF,KAAK2lG,UAAUplG,EAAKnK,KAAKyJ,IACnC,YAAY5F,IAARM,GAAqBA,EAAInE,KAAKyJ,KAAQU,EAAKnK,KAAKyJ,IAAOtF,EAAInE,KAAKykB,KAActa,EAAKnK,KAAKykB,IAahG6qF,EAAYpkE,UAAUwlE,uBAAyB,SAAUC,EAAOC,EAAO9nG,GACnE,IAAI+nG,GACApnG,GAAIyZ,KAAY7X,SAAUslG,EAAO30D,SAAU40D,GAG/C,OADU,IAAI5zF,GAAUlU,EAAS,aAAc+nG,GAAW,IAGvDvB,KCxOAwB,IACPjnG,QAAS,oBACTsuE,KAAM,SACND,MAAO,UACPme,KAAM,SACNC,KAAM,SACN3f,IAAK,QACLqe,UAAW,cACX+b,SAAU,aACV/+C,MAAO,UACP2mB,QAAS,YACTmE,aAAc,eACdH,WAAY,aACZ4Y,YAAa,iBACb5X,aAAc,iBACdqzB,MAAO,WAMPC,GAAoC,WACpC,SAASA,EAAmBrpF,EAAQspF,GAChCtnG,KAAKunG,gBAILvnG,KAAKwnG,gBAILxnG,KAAKynG,eACLznG,KAAK0nG,WAAa1nG,KAAK2nG,eACvB3nG,KAAKge,OAASA,EACdhe,KAAK0nF,eAAiB4f,EACtBtnG,KAAK4nG,mBAuUT,OAjUAP,EAAmB/lE,UAAUsmE,iBAAmB,WACxC5nG,KAAKge,OAAOi7E,aAGhBj5F,KAAKge,OAAO6pF,GAAG,eAAgB7nG,KAAKy7C,OAAQz7C,OAMhDqnG,EAAmB/lE,UAAUwmE,oBAAsB,WAC3C9nG,KAAKge,OAAOi7E,aAGhBj5F,KAAKge,OAAO+pF,IAAI,eAAgB/nG,KAAKy7C,SAEzC4rD,EAAmB/lE,UAAUma,OAAS,WAClCz7C,KAAKgoG,KAAOhoG,KAAK0nF,eAAe/2B,WAAW,gBAC3C3wD,KAAKJ,QAAUiiB,GAAkB,MAAQhiB,GAAIG,KAAKge,OAAOpe,QAAQC,GAAK,iBACtEG,KAAKge,OAAOpe,QAAQ2vB,YAAYvvB,KAAKJ,SACrC,IAAIoD,EAAS,IAAMhD,KAAKge,OAAOpe,QAAQC,GACvCG,KAAKioG,YAAc,IAAIC,eACnBlhB,MAAOhnF,KAAKmoG,eACZC,UAAWpoG,KAAKge,OAAOoqF,UACvBC,kBAAmBroG,KAAKge,OAAOqqF,kBAC/Bpf,OAAQjpF,KAAKge,OAAOirE,OACpBjmF,OAAQA,EACRkZ,OAAQlc,KAAKsoG,qBAAqBzR,KAAK72F,MACvCR,WAAYQ,KAAKuoG,sBAAsB1R,KAAK72F,MAC5CwoG,OAAQxoG,KAAKwkC,gBAAgBqyD,KAAK72F,MAClCyoG,iBAAkBzoG,KAAK0oG,iBAAiB7R,KAAK72F,MAC7C2oG,QAAS3oG,KAAK4oG,mBAAmB/R,KAAK72F,MACtCP,SAAU,mBAEdO,KAAKioG,YAAYtoG,SAASK,KAAKJ,UAEnCynG,EAAmB/lE,UAAU6mE,aAAe,WACxC,IAAIU,KACAC,KACAC,KACJ,IAAK/oG,KAAKge,OAAOkN,oBAAoB47D,mBAAoB,CACrD,IAAK,IAAIjqF,EAAK,EAAG6f,EAAK1c,KAAKgpG,kBAAmBnsG,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAChE,IAAI4zB,EAAO/T,EAAG7f,IACqC,IAA/C4zB,EAAKu+D,oBAAoB9wE,QAAQ,SACA,aAA7BuS,EAAKu+D,qBACL+Z,EAAWjyG,KAAKkJ,KAAKipG,kBAAkBx4E,KAGS,IAA/CA,EAAKu+D,oBAAoB9wE,QAAQ,SACL,UAA7BuS,EAAKu+D,qBACL8Z,EAAWhyG,KAAKkJ,KAAKipG,kBAAkBx4E,IAI3Co4E,EAAU/xG,KAAKkJ,KAAKipG,kBAAkBx4E,IAG9C,GAAIs4E,EAAWtyG,OAAS,EAAG,EACnByyG,EAAalpG,KAAKipG,kBAAkB,aAC7BjiB,MAAQ+hB,EACnBF,EAAU/xG,KAAKoyG,GAEnB,GAAIJ,EAAWryG,OAAS,EAAG,CACvB,IAAIyyG,GAAAA,EAAalpG,KAAKipG,kBAAkB,UAC7BjiB,MAAQ8hB,EACnBD,EAAU/xG,KAAKoyG,IAGvB,GAAIlpG,KAAKge,OAAOkN,oBAAoB87D,MAChC,IAAK,IAAIx7D,EAAK,EAAGC,EAAKzrB,KAAKge,OAAOkN,oBAAoB87D,MAAOx7D,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAC/E,IAAI29E,EAAa19E,EAAGD,GACpBq9E,EAAU/xG,KAAKqyG,GAGvB,OAAON,GAEXxB,EAAmB/lE,UAAUkD,gBAAkB,WAC3CxkC,KAAKopG,QAAS,GAElB/B,EAAmB/lE,UAAUonE,iBAAmB,SAAU3oG,GACtDC,KAAKge,OAAO45B,QAAQnT,GAA6B1kC,IAErDsnG,EAAmB/lE,UAAUgnE,qBAAuB,SAAUvoG,GAC1DwhB,SAASC,eAAexhB,KAAKge,OAAOpe,QAAQC,GAAK,WAAW28D,QAC5Dx8D,KAAKge,OAAO45B,QAAQrT,GAAkBxkC,GACtC,IAAI0wB,EAAOzwB,KAAKqpG,aAAatpG,EAAK0wB,KAAK5wB,IACvC,IAAKE,EAAKu2D,OACN,OAAQ7lC,GACJ,IAAK,MACDzwB,KAAKge,OAAO+uD,MACZ,MACJ,IAAK,OACD/sE,KAAKge,OAAOuwD,OACZ,MACJ,IAAK,OACDvuE,KAAKge,OAAOyuE,OACZ,MACJ,IAAK,OACDzsF,KAAKge,OAAO0uE,OACZ,MACJ,IAAK,QACD1sF,KAAKge,OAAOswD,QACZ,MACJ,IAAK,YACDtuE,KAAKge,OAAOotE,YACZ,MACJ,IAAK,QACDprF,KAAKge,OAAOoqC,QACZ,MACJ,IAAK,UACDpoD,KAAKge,OAAO+wD,UACZ,MACJ,IAAK,oBACD/uE,KAAKge,OAAOk1D,eACZ,MACJ,IAAK,mBACDlzE,KAAKge,OAAO2tE,cACZ,MACJ,IAAK,kBACD3rF,KAAKge,OAAO+0D,aACZ,MACJ,IAAK,oBACD/yE,KAAKge,OAAO+1D,iBAK5BszB,EAAmB/lE,UAAUsnE,mBAAqB,SAAU7oG,GAEpDA,EAAKinF,MAAMvwF,OAAS,GAAKsJ,EAAKinF,MAAM,GAAS,qBAAakhB,eAC1DloG,KAAKspG,oBAGbjC,EAAmB/lE,UAAUioE,cAAgB,SAAU94E,GACnD,OAAOzwB,KAAKgoG,KAAKwB,YAAYxpG,KAAK0nG,WAAWj3E,KAEjD42E,EAAmB/lE,UAAUgoE,iBAAmB,WAC5CtpG,KAAKioG,YAAYwB,UAAUzpG,KAAKynG,aAAa,GAC7CznG,KAAKioG,YAAYyB,YAAY1pG,KAAKwnG,cAAc,GAAO,GACvDxnG,KAAKynG,eACLznG,KAAKwnG,gBACLxnG,KAAKopG,QAAS,GAElB/B,EAAmB/lE,UAAUqoE,YAAc,SAAUl5E,EAAMknB,GACvD,IAAIzqB,EAAMltB,KAAKqpG,aAAa54E,EAAK5wB,IACrBG,KAAKunG,aAAar6E,IACe,IAAzCltB,KAAKgpG,kBAAkB9qF,QAAQgP,IAC3BuD,EAAKztB,QAAU20C,IACd33C,KAAK4pG,aAAan5E,IACnBzwB,KAAKynG,YAAY3wG,KAAK25B,EAAK5wB,KAIvCwnG,EAAmB/lE,UAAUinE,sBAAwB,SAAUxoG,GAC3D,IAAI8pG,EAAc9pG,EAClB8pG,EAAYpC,eACZ,IAAK,IAAI5qG,EAAK,EAAG6f,EAAK3c,EAAKinF,MAAOnqF,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpD,IAAI4zB,EAAO/T,EAAG7f,GAEd,GADAmD,KAAK2pG,YAAYl5E,EAAM1wB,EAAK43C,OACxBlnB,EAAKu2D,MAAMvwF,OACX,IAAK,IAAI+0B,EAAK,EAAGC,EAAKgF,EAAKu2D,MAAOx7D,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACpD,IAAIs+E,EAAUr+E,EAAGD,GACjBxrB,KAAK2pG,YAAYG,EAAS/pG,EAAK43C,QAM3C,GAFA33C,KAAKygE,UAAY1gE,EAAK43C,MACtB33C,KAAKge,OAAO45B,QAAQpT,GAAiBqlE,GACjCA,EAAY7iB,MAAMvwF,SAAWozG,EAAYpC,YAAYhxG,OACrDozG,EAAYvzC,QAAS,EACrBuzC,EAAYpC,mBAEX,CACDznG,KAAKynG,YAAcznG,KAAKynG,YAAYtrE,OAAO0tE,EAAYpC,aACvDznG,KAAKioG,YAAYyB,YAAY1pG,KAAKwnG,cAAc,GAAO,GACvD,IAAIuC,EAAiB/pG,KACrBD,EAAKinF,MAAMgjB,QAAQ,SAAUv5E,GACrBs5E,EAAetC,YAAYvpF,QAAQuS,EAAK5wB,KAAO,GAC/CkqG,EAAe9B,YAAYgC,WAAWx5E,EAAK5wB,KAAK,OAKhEwnG,EAAmB/lE,UAAUsoE,aAAe,SAAUn5E,GAClD,IAAIy5E,EAAiBlqG,KAAKge,OAAOZ,cAAcpE,MAAMviB,OACjDuJ,KAAKge,OAAOZ,cAAcF,WAAWzmB,OAErCuM,GAAS,EACb,OAFehD,KAAKqpG,aAAa54E,EAAK5wB,KAGlC,IAAK,OACDmD,KAAShD,KAAKge,OAAOkvD,iBAAkBltE,KAAKge,OAAOkvD,eAAei9B,SAClE,MACJ,IAAK,OACDnnG,KAAShD,KAAKge,OAAOkvD,iBAAkBltE,KAAKge,OAAOkvD,eAAek9B,SAClE,MACJ,IAAK,QACDpnG,IAAShD,KAAKge,OAAOiB,eAAe0rD,cAAcwC,WAClD,MACJ,IAAK,YACDnqE,KAAShD,KAAKge,OAAOhF,MAAMviB,OAASuJ,KAAKge,OAAOd,WAAWzmB,QAC3D,MACJ,IAAK,WACDuM,KAAWknG,EAAiB,GAAOlqG,KAAKge,OAAOZ,cAAcpE,MAAM,IAAMhZ,KAAKge,OAAOZ,cAAcpE,MAAM,GAAGpH,UACrG5R,KAAKge,OAAOZ,cAAcpE,MAAM,GAAGpH,SAASnb,OAAS,GAC5D,MACJ,IAAK,QACDuM,EAASknG,EAAiB,EAC1B,MACJ,IAAK,UACDlnG,KAAWhD,KAAKge,OAAOZ,cAAcpE,MAAM,IAAMhZ,KAAKge,OAAOZ,cAAcpE,MAAM,GAAGpH,UAC7E5R,KAAKge,OAAOZ,cAAcpE,MAAM,GAAGpH,SAASnb,OAAS,GAC5D,MACJ,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,oBACL,IAAK,mBACL,IAAK,kBACL,IAAK,oBACDuM,IAASknG,EAGjB,OAAOlnG,GAQXqkG,EAAmB/lE,UAAUsa,QAAU,WACnC57C,KAAKioG,YAAYrsD,UACjBE,SAAO97C,KAAKJ,SACZI,KAAK8nG,uBAETT,EAAmB/lE,UAAUqa,cAAgB,WACzC,MAAO,eAEX0rD,EAAmB/lE,UAAU+oE,WAAa,SAAU55E,GAChD,OAAOzwB,KAAKge,OAAOpe,QAAQC,GAAK,gBAAkB4wB,GAEtD42E,EAAmB/lE,UAAU+nE,aAAe,SAAUxpG,GAClD,OAAOA,EAAG+2B,QAAQ52B,KAAKge,OAAOpe,QAAQC,GAAK,gBAAiB,KAEhEwnG,EAAmB/lE,UAAU2nE,kBAAoB,SAAUx4E,GACvD,IAAI65E,EACJ,OAAQ75E,GACJ,IAAK,OACD65E,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAU34B,MAC3D,MACJ,IAAK,MACD+7B,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUn6B,KAC3D,MACJ,IAAK,QACDu9B,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAU54B,OAC3D,MACJ,IAAK,OACDg8B,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUza,MAC3D,MACJ,IAAK,OACD6d,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUxa,MAC3D,MACJ,IAAK,WACD4d,GAAatnG,OAAQkkG,GAAUjnG,SAC/B,MACJ,IAAK,QACDqqG,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAU9+C,OAC3D,MACJ,IAAK,UACDkiD,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUn4B,SAC3D,MACJ,IAAK,QACDu7B,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUE,OAC3D,MACJ,IAAK,oBACDkD,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUh0B,cAC3D,MACJ,IAAK,mBACDo3B,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUvb,aAC3D,MACJ,IAAK,kBACD2e,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUn0B,YAC3D,MACJ,IAAK,oBACDu3B,GAAatnG,OAAQkkG,GAAUjnG,QAASsqG,QAASrD,GAAUnzB,cAC3D,MACJ,IAAK,YACDu2B,GAAatnG,OAAQkkG,GAAUjnG,SAOvC,OAJAD,KAAKunG,aAAa92E,IACd9W,KAAM3Z,KAAKupG,cAAc94E,GAAO5wB,GAAIG,KAAKqqG,WAAW55E,GACpDztB,OAAQsnG,EAAStnG,OAAQunG,QAASD,EAASC,QAAU,WAAaD,EAASC,QAAU,IAElFvqG,KAAKunG,aAAa92E,IAE7B42E,EAAmB/lE,UAAU0nE,gBAAkB,WAC3C,OACI,OACA,MAAO,QAAS,OAAQ,OAAQ,YAAa,WAAY,QAAS,UAAW,QAC7E,oBAAqB,mBAAoB,kBAAmB,sBAGpE3B,EAAmB/lE,UAAUqmE,aAAe,WACxC,OACIp5B,KAAQ,OACRxB,IAAO,MACPuB,MAAS,QACTme,KAAQ,OACRC,KAAQ,OACRtB,UAAa,YACb+b,SAAY,WACZ/+C,MAAS,QACT2mB,QAAW,UACXq4B,MAAS,QACToD,kBAAqB,eACrBC,iBAAoB,cACpBC,gBAAmB,aACnBC,kBAAqB,iBAGtBtD,K7C7VPuD,GAA8B,WAM9B,SAASA,IAIL5qG,KAAK6qG,qBA2uET,OAxuEAluF,OAAO8lB,eAAemoE,EAAatpE,UAAW,4BAE1CgC,IAAK,WAED,IAAK,IADDpmB,KACKrgB,EAAK,EAAG6f,EAAKC,OAAOC,KAAK5c,KAAK6qG,mBAAoBhuG,EAAK6f,EAAGjmB,OAAQoG,IAGvE,IAAK,IAFDqwB,EAAMxQ,EAAG7f,GACTgf,EAAQ7b,KAAK6qG,kBAAkB39E,GAC1B1B,EAAK,EAAGC,EAAK9O,OAAOC,KAAKf,GAAQ2P,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAC5D,IAAIlD,EAAamD,EAAGD,GAEpBtO,EAAWpmB,KAAK+kB,EAAMyM,GAAiB,WAG/C,OAAOpL,GAEXqmB,YAAY,EACZC,cAAc,IAGlBonE,EAAatpE,UAAU4rD,sBAAwB,SAAU3yF,GACrD,IAAI2iB,KACJ,GAAuB,SAAnB3iB,EAAI6D,MAAMvC,MAAoD,IAAjCtB,EAAI6D,MAAMka,YAAY7hB,OAEnD,IAAK,IADDolB,EAAQ7b,KAAK6qG,kBAAkBtwG,EAAIsF,IAC9BhD,EAAK,EAAG6f,EAAKC,OAAOC,KAAKf,GAAQhf,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC5D,IAAIyrB,EAAa5L,EAAG7f,GAEpBqgB,EAAWpmB,KAAK+kB,EAAMyM,GAAe,WAG7C,OAAOpL,GAGX0tF,EAAatpE,UAAUwpE,QAAU,SAAUvqG,EAAMN,GAC7C,IAAIsxB,EAAO,IAAI3T,GAAKrd,EAAKhI,MAAOgI,EAAKjI,QACrC,QAAmB2B,IAAfs3B,EAAKh5B,YAAuC0B,IAAhBs3B,EAAKj5B,OAAsB,CAKvD,GAJM2H,aAAmBoO,KACrBkjB,EAAKh5B,MAAQg5B,EAAKh5B,OAAS,GAC3Bg5B,EAAKj5B,OAASi5B,EAAKj5B,QAAU,IAE7B2H,EAAQ8N,WAAWxV,OAAS0H,EAAQ8N,WAAWzV,OAC/C,OAAO2H,EAAQ8N,WAGf9N,EAAQ0d,QAAQ,IAAIC,IACpB2T,EAAKh5B,MAAQg5B,EAAKh5B,OAAS0H,EAAQ6d,YAAYvlB,MAC/Cg5B,EAAKj5B,OAASi5B,EAAKj5B,QAAU2H,EAAQ6d,YAAYxlB,YAE/B2B,IAAlBsG,EAAK6X,WACLmZ,EAAKh5B,MAAQkE,KAAKqK,IAAIyqB,EAAKh5B,MAAOgI,EAAK6X,gBAEpBne,IAAnBsG,EAAKgb,YACLgW,EAAKj5B,OAASmE,KAAKqK,IAAIyqB,EAAKj5B,OAAQiI,EAAKgb,iBAEvBthB,IAAlBsG,EAAK8c,WACLkU,EAAKh5B,MAAQkE,KAAK+I,IAAI+rB,EAAKh5B,MAAOgI,EAAK8c,gBAEpBpjB,IAAnBsG,EAAKgZ,YACLgY,EAAKj5B,OAASmE,KAAK+I,IAAI+rB,EAAKj5B,OAAQiI,EAAKgZ,YAGjD,OAAOgY,GAGXq5E,EAAatpE,UAAU8X,gBAAkB,SAAUn5C,EAASM,EAAMrB,GAC9D,IAAId,EAAQmC,EAAKnC,MAyBjB,GAxBoB,UAAhBA,EAAMA,QACN6B,EAAUD,KAAK+qG,kBAAkBxqG,EAAMnC,EAAMu5C,QAE7B,YAAhBv5C,EAAMA,QACN6B,EAAUD,KAAKgrG,oBAAoBzqG,IAEnB,eAAhBnC,EAAMA,QACN6B,EAAUD,KAAKirG,uBAAuB1qG,IAEtB,YAAhBnC,EAAMA,OAAuC,eAAhBA,EAAMA,QACnC6B,EAAUD,KAAKkrG,cAAc3qG,IAQb,aAAhBnC,EAAMA,QACN6B,EAAUD,KAAKmrG,qBAAqB5qG,IAEpB,mBAAhBnC,EAAMA,QACN6B,EAAUD,KAAKorG,yBAAyBlsG,EAASqB,EAAMN,IAGvD7B,EAAMka,YAAY7hB,OAAS,EAAG,CAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAI0H,EAAMka,YAAY7hB,QAAU2H,EAAMka,YAAY5hB,GAAGijB,KAAMjjB,IACvEuJ,EAAQ2R,SAAS9a,KAAKkJ,KAAKqrG,sBAAsB9qG,EAAMrB,EAASd,EAAMka,YAAY5hB,GAAIuJ,IAE1FA,EAAQC,MAAMod,gBAAkB,UAEpC,OAAOrd,GAGX2qG,EAAatpE,UAAU4pE,cAAgB,SAAU3qG,GAC7C,IAAI+qG,EAAY,IAAIj9F,GAEpBrO,KAAKshD,SAASgqD,EAAW/qG,GAC2B,IAA/CA,EAAK0S,YAAcK,kBAAgBe,UACpCi3F,EAAUhzE,OAAS/3B,EAAK+3B,QAE5B,IAAIizE,EAAgB9qE,GAAqBlgC,EAAKnC,MAAMA,OAOpD,OANAktG,EAAUl1G,KAAOm1G,EACjBD,EAAUzrG,GAAKU,EAAKV,GAAK,IAAMU,EAAKnC,MAAMA,WACvBnE,IAAfsG,EAAKhI,YAAuC0B,IAAhBsG,EAAKjI,SACjCgzG,EAAU/yG,MAAQgI,EAAKhI,MACvB+yG,EAAUhzG,OAASiI,EAAKjI,QAErBgzG,GAkBXV,EAAatpE,UAAU0pE,oBAAsB,SAAUzqG,GACnD,IAAIirG,EAAe,IAAIx7E,GAEnBy7E,EAAc,IAAIp9F,GACtBo9F,EAAY5rG,GAAKU,EAAKV,GAAK,aAC3B4rG,EAAY1vG,QAAUwE,EAAKxE,QAC3B0vG,EAAYzvG,QAAUuE,EAAKvE,QAC3ByvG,EAAYr1G,KAAO,0CACnB4J,KAAKshD,SAASmqD,EAAalrG,GAE3B,IAAImrG,EAAkB,IAAIr9F,GAC1Bq9F,EAAgB7rG,GAAKU,EAAKV,GAAK,iBAE/B6rG,EAAgBxrG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QAC3Cg/E,EAAgB5yF,oBAAsB,SACtC4yF,EAAgB7yF,kBAAoB,SACpC6yF,EAAgB1jF,aAAe,SAC/B,IACI2jF,EADAC,EAAYrrG,EAAKnC,MAAMytG,QAE3BF,EAA2B9qE,GAA4B+qE,EAAU/vG,MAC1C,eAAnB+vG,EAAU/vG,MAA4C,wBAAnB+vG,EAAU/vG,MAAqD,uBAAnB+vG,EAAU/vG,KACzF6vG,EAAgBxrG,MAAM+X,KAAO,QAG7ByzF,EAAgBxrG,MAAM+X,KAAO,QAEjCyzF,EAAgBt1G,KAAOu1G,EAEvBH,EAAatrG,MAAM+X,KAAO,cAC1BuzF,EAAatrG,MAAMgY,YAAc,cACjCszF,EAAatrG,MAAMiY,YAAc,EACjCqzF,EAAa55F,UAAY65F,EAAaC,GACtC,IAAIn6E,EAAOvxB,KAAK8qG,QAAQvqG,EAAMkrG,GAE9B,OADAzrG,KAAK8rG,sBAAsBvrG,EAAKnC,MAAMytG,QAASL,EAAcj6E,EAAKh5B,MAAOg5B,EAAKj5B,QACvEkzG,GAGXZ,EAAatpE,UAAU2pE,uBAAyB,SAAU1qG,GACtD,IAAIwrG,EAAkB,IAAI/7E,GACtB5xB,EAAQmC,EAAKnC,MAAM4tG,WAEnBC,EAAc,IAAI59F,GACtB49F,EAAYpsG,GAAKU,EAAKV,GAAK,aAC3BosG,EAAY71G,KAAO,iGACnB,IAAIm7B,EAAOvxB,KAAK8qG,QAAQvqG,EAAM0rG,GAC9BA,EAAY1zG,MAAQg5B,EAAKh5B,MACzB0zG,EAAY3zG,OAASi5B,EAAKj5B,OAC1B0H,KAAKshD,SAAS2qD,EAAa1rG,GAE3B,IAAI2rG,EAAkB,IAAI79F,GAC1B69F,EAAgBrsG,GAAKU,EAAKV,GAAK,UAC/BqsG,EAAgB3zG,MAAQ,GACxB2zG,EAAgB5zG,OAAS,GACzB4zG,EAAgBvpG,OAAOC,KAAO,EAC9BspG,EAAgBvpG,OAAOI,IAAM,EAC7BmpG,EAAgB91G,KAAO,uDAEvB81G,EAAgBhsG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QAE3C,IAAIy/E,EAAwB,IAAI99F,GAYhC,OAXA89F,EAAsBtsG,GAAKU,EAAKV,GAAK,gBACrCssG,EAAsB5zG,MAAQ,IAC9B4zG,EAAsB7zG,OAAS,GAC/B6zG,EAAsBjsG,MAAM+X,KAAO,QACnCk0F,EAAsBj+E,SAAU,EAChCi+E,EAAsBrzF,oBAAsB,SAC5CqzF,EAAsBtzF,kBAAoB,SAC1CszF,EAAsBnkF,aAAe,SAErCmkF,EAAsBjsG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QACjDy/E,EAAsB/1G,KAAO,+FACrBgI,EAAMvC,MACV,IAAK,OACDqwG,EAAgBh+E,SAAU,EAC1B,MACJ,IAAK,QACDg+E,EAAgBhsG,MAAM+X,KAAO,QAC7B,MACJ,IAAK,SACDi0F,EAAgBhsG,MAAM+X,KAAO,QAWrC,OARyB,IAArB7Z,EAAM9H,aACN61G,EAAsBj+E,SAAU,GAGpC69E,EAAgB7rG,MAAM+X,KAAO,cAC7B8zF,EAAgB7rG,MAAMgY,YAAc,cACpC6zF,EAAgB7rG,MAAMiY,YAAc,EACpC4zF,EAAgBn6F,UAAYq6F,EAAaC,EAAiBC,GACnDJ,GAGXnB,EAAatpE,UAAU8qE,iBAAmB,SAAU7rG,GAChD,IACI8rG,EADQ9rG,EAAKnC,MAAMk7C,SACN+yD,KACbC,EAAa,IAAIt8E,GAEjBu8E,EAAW,IAAIrsF,GACnBqsF,EAASl0G,aAAe,GACxB,IAAIk5B,EAAOvxB,KAAK8qG,QAAQvqG,EAAMgsG,GAC9BA,EAAS1sG,GAAKU,EAAKV,GAAK,UACxB0sG,EAASh0G,MAAQg5B,EAAKh5B,MACtBg0G,EAASj0G,OAASi5B,EAAKj5B,OACvB0H,KAAKshD,SAASirD,EAAUhsG,QAELtG,IAAdoyG,EAAKjlE,OAAqC,IAAdilE,EAAKjlE,OAClCmlE,EAASrsG,MAAMiY,YAAc,GAEjCm0F,EAAW/zG,MAAQg5B,EAAKh5B,MACxB+zG,EAAWh0G,OAASi5B,EAAKj5B,OACzB,IACItB,EADAw1G,EAAaxsG,KAAKysG,kBAAkBlsG,GAEpCmsG,EAA0B,GAAbF,EACbG,EAAOp7E,EAAKh5B,MAAQ,EAAIm0G,EAExB11G,EADe,IAAfw1G,EACIG,EAAO,EAGPA,EAA0B,GAAlBH,EAAa,GAG7B,IACII,EADAC,EAAe,IAAIx+F,GAEL,YAAdg+F,EAAKxwG,MAAoC,SAAdwwG,EAAKxwG,MAChCgxG,EAAat0G,MAAQ,GACrBs0G,EAAav0G,OAAS,KAGtBu0G,EAAat0G,MAAQ,GACrBs0G,EAAav0G,OAAS,IAE1Bu0G,EAAahtG,GAAKU,EAAKV,GAAK,eAC5BgtG,EAAalqG,OAAOC,KAAO,EAC3BiqG,EAAalqG,OAAOI,IAAM,EAC1B6pG,EAAmB7rE,GAAyBsrE,EAAKxwG,MACjDgxG,EAAaz2G,KAAOw2G,EACpBC,EAAa3sG,MAAM+X,KAAO,cAC1B40F,EAAa3sG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QAExC4/E,EAAWpsG,MAAM+X,KAAO,cACxBq0F,EAAWpsG,MAAMgY,YAAc,cAC/Bo0F,EAAWpsG,MAAMiY,YAAc,EAC/Bm0F,EAAW16F,UAAY26F,EAAUM,GAEjC,IAEIC,EAFAC,EAAWV,EAAKW,KAChBC,EAAe,IAAI5+F,GAEvBy+F,EAAiB7rE,GAAyB8rE,GAC1CE,EAAa72G,KAAO02G,EACpBG,EAAa/sG,MAAM+X,KAAO,QAEtBg1F,EAAa/+E,QADA,SAAb6+E,EAMe,IAAfP,IACAx1G,EAAI21G,EAAO,GAEfM,EAAatqG,OAAOC,KAAO5L,GACE,IAAzBi2G,EAAa/+E,UACbl3B,GAAK,IAETi2G,EAAa10G,MAAQ,GACrB00G,EAAa30G,OAAS,GACtB20G,EAAatqG,OAAOG,OAAS,EAC7BmqG,EAAaptG,GAAKU,EAAKV,GAAK,UAC5BotG,EAAan0F,oBAAsB,OACnCm0F,EAAap0F,kBAAoB,SACjCo0F,EAAa7nE,6BAA6B,EAAG,EAAG,YAChD6nE,EAAajlF,aAAe,QAC5BilF,EAAa/sG,MAAM+X,KAAO,cAC1B40F,EAAa3sG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QACxC4/E,EAAW16F,SAAS9a,KAAKm2G,GAEzB,IAAIC,EAAe,IAAI7+F,GAcvB,OAbA6+F,EAAeltG,KAAKmtG,yBAAyB5sG,EAAM2sG,IACzB,IAAtBb,EAAKe,aACLF,EAAah/E,SAAU,EAGvBg/E,EAAah/E,SAAU,EAER,IAAfs+E,IACAx1G,EAAI21G,EAAO,GAEfO,EAAavqG,OAAOC,KAAO5L,EAAI,EAC/BA,GAAK,GACLs1G,EAAW16F,SAAS9a,KAAKo2G,GAClBZ,GAGX1B,EAAatpE,UAAUypE,kBAAoB,SAAUxqG,EAAM8sG,EAAUC,EAAKztG,GACtE,IACI83C,EACAC,EACAr/C,EACAD,EAJAi1G,EAAa,IAAIv9E,GAKrBnwB,EAAKA,GAAMU,EAAKV,GAChB,IAAI+6C,EAAW,qVAGX4yD,EAAajtG,EAAKnC,MAAMu5C,MAO5B,GANyB,UAArBp3C,EAAKnC,MAAMA,QACXu5C,EAAQ61D,EAAW71D,MACnBC,EAAU41D,EAAW51D,SAEzBr/C,EAAQ80G,EAAS90G,MACjBD,EAAS+0G,EAAS/0G,OACdg1G,EACA/0G,EAAQA,GAAS,GACjBD,EAASA,GAAU,QAElB,QAAuB2B,IAAnBozG,EAAS90G,YAA2C0B,IAApBozG,EAAS/0G,OAAsB,CACpE,IAAIm1G,EAAc,IAAIp/F,GACtBo/F,EAAYr3G,KAAOwkD,EACnB,IAAIrpB,EAAOvxB,KAAK8qG,QAAQvqG,EAAMktG,GAC9Bl1G,EAAQg5B,EAAKh5B,MACbD,EAASi5B,EAAKj5B,OAElB,IAAIo1G,EAAgBntG,EAAKnC,MAAMk7C,SAC/B,GAAyB,aAArB/4C,EAAKnC,MAAMA,MAAsB,CAChBsvG,EAAcr0D,WAC/B1B,EAAQ01D,EAAS11D,MACjBC,EAAUy1D,EAASz1D,QAGvB,IAAI+1D,EAAe,IAAIt/F,GACvBs/F,EAAav3G,KAAOwkD,EACpB+yD,EAAa9tG,GAAKA,EAAK,WACvB8tG,EAAap1G,MAAQA,EACrBo1G,EAAar1G,OAASA,EACtBq1G,EAAa70F,oBAAsB,SACnC60F,EAAa90F,kBAAoB,SACjC80F,EAAa3lF,aAAe,SAC5BhoB,KAAKshD,SAASqsD,EAAcptG,GAE5B,IAAIqtG,EAAe,IAAIv/F,GACvBu/F,EAAax3G,KAAOwkD,EACpBgzD,EAAa/tG,GAAKA,EAAK,WACvB+tG,EAAa1tG,MAAMutB,SAAWltB,EAAKL,MAAMutB,SACzCmgF,EAAa90F,oBAAsB,SACnC80F,EAAa/0F,kBAAoB,SACjC+0F,EAAa5lF,aAAe,SAE5B4lF,EAAa1tG,MAAMgY,YAAc3X,EAAKL,MAAMgY,YAC5C01F,EAAa1tG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QAExC,IAAImhF,EAAc,IAAIx/F,GAClBy/F,EAAkBntE,GAA4BiX,GASlD,OARAi2D,EAAYz3G,KAAO03G,EACnBD,EAAYhuG,GAAKA,EAAK,aACtBguG,EAAY/0F,oBAAsB,SAClC+0F,EAAYh1F,kBAAoB,SAChCg1F,EAAY7lF,aAAe,SAE3B6lF,EAAY3tG,MAAMgY,YAAc3X,EAAKL,MAAMgY,YAC3C21F,EAAY3tG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QAC/BirB,GACJ,IAAK,QACDi2D,EAAa1/E,SAAU,EACvB,MACJ,IAAK,uBACDy/E,EAAaztG,MAAMod,gBAAkB,MACrCswF,EAAa1/E,SAAU,EACvB,MACJ,IAAK,eACDy/E,EAAaztG,MAAM+X,KAAO,QAC1B01F,EAAaztG,MAAMutB,SAAW,KAC9B,MACJ,IAAK,8BACDkgF,EAAaztG,MAAM+X,KAAO,QAC1B01F,EAAaztG,MAAMutB,SAAW,KAC9BkgF,EAAaztG,MAAMod,gBAAkB,MACrCswF,EAAa1tG,MAAMod,gBAAkB,MACrC,MACJ,IAAK,uBACL,IAAK,MACDqwF,EAAaztG,MAAM+X,KAAiB,QAAV0/B,EAAkB,QAAU,QACtDg2D,EAAaztG,MAAMutB,SAAW,KAC9BogF,EAAY3tG,MAAM+X,KAAO,QACzB41F,EAAY3tG,MAAMgY,YAAc3X,EAAKL,MAAM+X,KASnD,OALAs1F,EAAWrtG,MAAM+X,KAAO,cACxBs1F,EAAWrtG,MAAMgY,YAAc,cAC/Bq1F,EAAWrtG,MAAMiY,YAAc,EAC/Bo1F,EAAW37F,UAAY+7F,EAAcC,EAAcC,GACnD7tG,KAAK+tG,qBAAqBP,EAAYD,EAAYh1G,EAAOD,GAClDi1G,GAEX3C,EAAatpE,UAAU0sE,mBAAqB,SAAUztG,EAAMo5C,GACxD,IAAIhC,EAAQp3C,EAAKnC,MAAMu5C,MAAMA,MACzBg2D,EAAeh0D,EAAO,GACtBi0D,EAAej0D,EAAO,GACRA,EAAO,GACzB,OAAQhC,GACJ,IAAK,QACDi2D,EAAa1/E,SAAU,EACvB,MACJ,IAAK,uBACDy/E,EAAaztG,MAAMod,gBAAkB,MACrCswF,EAAa1/E,SAAU,IAInC08E,EAAatpE,UAAU2sE,wBAA0B,SAAU1tG,GACvD,IAAI84C,EAAa94C,EAAKnC,MAAMk7C,SAASD,WACjC60D,EAAc70D,EAAW80D,OAAO13G,OAChCipB,EAAiD,gBAAxCnf,EAAKnC,MAAMk7C,SAASD,WAAWx9C,KAA0B,EAAI,EACtEuyG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GAOvD,IANyB,IAArBynC,EAAWg1D,QACXD,EAAex8F,SAAS,EAAI8N,EAAQwuF,GAAahgF,SAAU,IAE/B,IAA5BmrB,EAAW+zD,eACXgB,EAAex8F,SAAS,EAAI8N,EAAQwuF,GAAahgF,SAAU,GAE3DggF,EAAc,EACd,IAAK,IAAIx3G,EAAI,EAAGA,EAAIw3G,EAAax3G,IAC7BsJ,KAAKguG,mBAAmBztG,EAAM6tG,EAAex8F,SAAS,EAAIlb,GAAGkb,WAKzEg5F,EAAatpE,UAAUgtE,uBAAyB,SAAU/tG,GACtD,IAEI4tG,EACAx2D,EAOA3gD,EAVAu3G,EAAmB,IAAIv+E,GAIvBw+E,EAAkB,IAAIngG,GAEtBogG,GADyB,IAAIz+E,GACN,IAAI3hB,IAC3BjQ,EAAQmC,EAAKnC,MAAMk7C,SACnBD,EAAaj7C,EAAMi7C,WACnBq1D,EAAgB1uG,KAAK2uG,wBAAwBpuG,GAE7CquG,EAAiB,IAAI1uF,GACzB0uF,EAAe/uG,GAAKU,EAAKV,GAAK,gBAC9B+uG,EAAe1uG,MAAM+X,KAAO,cAC5B22F,EAAev2G,aAAe,GAC9B,IAAIk5B,EAAOvxB,KAAK8qG,QAAQvqG,EAAMquG,GAC9BA,EAAer2G,MAAQg5B,EAAKh5B,MAC5Bq2G,EAAet2G,OAASi5B,EAAKj5B,OAC7Bi2G,EAAiB38F,UAAYg9F,GACC,gBAA1BxwG,EAAMi7C,WAAWx9C,MACjBmE,KAAK6uG,6BAA6BtuG,EAAMA,EAAKnC,MAAOmwG,GAExD,IAEI7B,EADgB,GACHgC,EACb/B,EAAOp7E,EAAKh5B,MAAQ,EAEpBvB,EADkB,IAAlB03G,EACI/B,IAGAA,EAAQD,EAAa,EARb,GAQoBgC,EAAgB,GAAkB,EAGtE1uG,KAAKshD,SAASstD,EAAgBruG,GACsB,IAA/CA,EAAK0S,YAAcK,kBAAgBe,UACpCk6F,EAAiBj2E,OAAS/3B,EAAK+3B,QAEnC,IAAIw2E,EAAiB,IAAIzgG,GAsBzB,GArBAygG,EAAejvG,GAAKU,EAAKV,GAAK,eAC9BivG,EAAev2G,MAAQ,GACvBu2G,EAAex2G,OAAS,GACxBw2G,EAAe5uG,MAAM+X,KAAO,QAC5B62F,EAAensG,OAAOG,OAAS,EAC/BgsG,EAAeh2F,oBAAsB,OACrCg2F,EAAej2F,kBAAoB,SACnCi2F,EAAe1pE,6BAA6B,EAAG,EAAG,YAClD0pE,EAAe9mF,aAAe,QAC9B8mF,EAAe14G,KAAOqqC,GAAqB,kBAC3CquE,EAAensG,OAAOC,KAAO5L,GACA,IAAzBqiD,EAAWI,WAAuBJ,EAAWE,UAI7Cu1D,EAAe5gF,SAAU,EAHzB4gF,EAAe5gF,SAAU,GAKE,IAA3B4gF,EAAe5gF,UACfl3B,GAAK,IAETu3G,EAAiB38F,SAAS9a,KAAKg4G,GACP,UAApBz1D,EAAWx9C,KAAkB,CAC7B+yG,EAAe1uG,MAAMiY,YAAc,EACnCy2F,EAAe1uG,MAAMod,gBAAkB,MACvC6wF,EAAS90D,EAAW80D,OACpB,IAAK,IAAIz3G,EAAI,EAAGA,EAAIy3G,EAAO13G,OAAQC,IAC/BihD,EAAQw2D,EAAOz3G,GACfsJ,KAAK+uG,gBAAgBp3D,EAAOp3C,EAAMguG,GAI1CE,EAAuBzuG,KAAKgvG,2BAA2BzuG,GACjC,IAAlBmuG,IACA13G,EAAI21G,EAAO,GAEf8B,EAAqB9rG,OAAOC,KAAO5L,GACE,IAAjCy3G,EAAqBvgF,UACrBl3B,GAAKi4G,IAETV,EAAiB38F,SAAS9a,KAAK23G,GAE/BG,EAAe/uG,GAAKU,EAAKV,GAAK,YACF,YAAxBw5C,EAAW61D,WACXN,EAAe1uG,MAAMiY,YAAc,EACnCy2F,EAAe1uG,MAAMod,gBAAkB,OAEf,SAAxB+7B,EAAW61D,WACXN,EAAe1uG,MAAMiY,YAAc,EACnCy2F,EAAe1uG,MAAMod,gBAAkB,OAEf,UAAxB+7B,EAAW61D,WACXN,EAAe1uG,MAAMiY,YAAc,EACnCy2F,EAAe1uG,MAAMod,gBAAkB,OAG3CkxF,EAAkBxuG,KAAKmvG,kBAAkB5uG,EAAMiuG,EAAiBn1D,GAC1C,IAAlBq1D,IACA13G,EAAI21G,EAAO,GAEf6B,EAAgB7rG,OAAOC,KAAO5L,GACE,IAA5Bw3G,EAAgBtgF,UAChBl3B,GAAKi4G,IAETV,EAAiB38F,SAAS9a,KAAK03G,GAE/B,IAAIY,EAAiB,IAAI/gG,GAoBzB,OAnBgC,IAA5BgrC,EAAW+zD,aACXgC,EAAelhF,SAAU,EAGzBkhF,EAAelhF,SAAU,EAE7BkhF,EAAiBpvG,KAAKmtG,yBAAyB5sG,EAAM6uG,GAC/B,IAAlBV,IACA13G,EAAI21G,EAAO,GAEfyC,EAAezsG,OAAOC,KAAO5L,GACE,IAA3Bo4G,EAAelhF,UACfl3B,GAAKi4G,IAETV,EAAiB38F,SAAS9a,KAAKs4G,GAE/Bb,EAAiBruG,MAAMgY,YAAc,cACrCq2F,EAAiBruG,MAAMiY,YAAc,EACrCo2F,EAAiBruG,MAAM+X,KAAO,cACvBs2F,GAEX3D,EAAatpE,UAAUytE,gBAAkB,SAAUp3D,EAAOp3C,EAAMuX,EAAWjY,GACvEiY,EAAUlG,SAAWkG,EAAUlG,aAC/B,IAAIy9F,EACJA,EAAiBrvG,KAAK+qG,kBAAkBxqG,EAAMo3C,GAAO,EAAM93C,GAC3DG,KAAKsvG,uBAAuB/uG,EAAM8uG,EAAgB13D,GAClD03D,EAAexvG,GAAKA,GAAOU,EAAKV,GAAK,oBACrCwvG,EAAe92G,MAAQo/C,EAAMp/C,OAAS,GACtC82G,EAAe/2G,OAASq/C,EAAMr/C,QAAU,GAExC+2G,EAAejqE,6BAA6BuS,EAAMjoC,OAAO1Y,EAAG2gD,EAAMjoC,OAAOzY,EAAG,YAC5Eo4G,EAAernF,aAAe,QAE9BqnF,EAAe1sG,OAASg1C,EAAMh1C,OAE9B0sG,EAAev2F,oBAAsB6+B,EAAM7+B,oBAC3Cu2F,EAAex2F,kBAAoB8+B,EAAM9+B,kBAEzCw2F,EAAenvG,MAAM+X,KAAO,cAC5Bo3F,EAAenvG,MAAMgY,YAAc,cACnCm3F,EAAenvG,MAAMiY,YAAc,EACnCL,EAAUlG,SAAS9a,KAAKu4G,IAE5BzE,EAAatpE,UAAUutE,6BAA+B,SAAUtuG,EAAMnC,EAAO0Z,GACzE,IAAIy3F,EAAaz3F,EAAUlG,SAAS,GAAGrZ,MACnCi3G,EAAc13F,EAAUlG,SAAS,GAAGtZ,OACpCm3G,EAAY,IAAIvvF,GACpBuvF,EAAU9sG,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GACxD2sG,EAAU5vG,GAAKU,EAAKV,GAAK,2BACzB4vG,EAAUp3G,aAAe,GACzBo3G,EAAUl3G,MAAQg3G,EAAa,EAC/BE,EAAUn3G,OAASk3G,EAAc,EACjC13F,EAAUlG,SAAS9a,KAAK24G,GACxB,IAAIC,EAAoB,IAAI1/E,GAC5B0/E,EAAkB7vG,GAAKU,EAAKV,GAAK,sBACjC6vG,EAAkBxvG,MAAMutB,SAAWltB,EAAKL,MAAMutB,SAC9C,IAAI0+C,EAAc/tE,EAAMk7C,SAASD,WAAW8yB,YAC5CnsE,KAAK+uG,gBAAgB5iC,EAAYC,QAAS7rE,EAAMmvG,EAAmBnvG,EAAKV,GAAK,YAC7EG,KAAK+uG,gBAAgB5iC,EAAY7V,OAAQ/1D,EAAMmvG,EAAmBnvG,EAAKV,GAAK,WAC5EG,KAAK+uG,gBAAgB5iC,EAAYE,QAAS9rE,EAAMmvG,EAAmBnvG,EAAKV,GAAK,YAC7EG,KAAKy4F,iCAAiCiX,EAAkB99F,SAAS,GAAIu6D,EAAYC,QAAQl+C,SACzFluB,KAAKy4F,iCAAiCiX,EAAkB99F,SAAS,GAAIu6D,EAAY7V,OAAOpoC,SACxFluB,KAAKy4F,iCAAiCiX,EAAkB99F,SAAS,GAAIu6D,EAAYE,QAAQn+C,SACzFwhF,EAAkBxqE,OAAQ,EAC1BwqE,EAAkBn3G,MAAQg3G,EAC1BG,EAAkBp3G,OAASk3G,EAC3BE,EAAkBxvG,MAAM+X,KAAOy3F,EAAkBxvG,MAAMgY,YAAc,cACrEJ,EAAUlG,SAAS9a,KAAK44G,IAG5B9E,EAAatpE,UAAU0tE,2BAA6B,SAAUzuG,GAC1D,IACIwsG,EAEA4C,EAHAvxG,EAAQmC,EAAKnC,MAAMk7C,SAEnBs2D,EAAiB,IAAIvhG,GAsBzB,OAnBA0+F,EADiB3uG,EAAMi7C,WACD2zD,KACtB2C,EAAqB1uE,GAAyB8rE,GAE1C6C,EAAe1hF,QADF,SAAb6+E,EAMJ6C,EAAe/vG,GAAKU,EAAKV,GAAK,QAC9B+vG,EAAex5G,KAAOu5G,EACtBC,EAAe1vG,MAAM+X,KAAO,QAC5B23F,EAAer3G,MAAQ,GACvBq3G,EAAet3G,OAAS,GACxBs3G,EAAe92F,oBAAsB,OACrC82F,EAAe/2F,kBAAoB,SACnC+2F,EAAexqE,6BAA6B,EAAG,EAAG,YAClDwqE,EAAe5nF,aAAe,QAC9B4nF,EAAejtG,OAAOG,OAAS,EAC/B8sG,EAAe1vG,MAAM+X,KAAO,cACrB23F,GAGXhF,EAAatpE,UAAUnmB,KAAO,SAAU5gB,EAAKg4C,EAAIC,EAAItzC,GACjD,IAAIqB,EAAOrB,EAAQ0b,UAAU,EAAM49B,WAC/Bj+C,EAAIoI,OAAOI,IAAMyvC,GAAM,GACvBtzC,EAAQwe,mBAAmBnjB,MAAWoI,QAAUI,IAAKxI,EAAIoI,OAAOI,IAAMyvC,KAEtEj4C,EAAIoI,OAAOC,KAAO2vC,GAAM,GACxBrzC,EAAQwe,mBAAmBnjB,MAAWoI,QAAUC,KAAMrI,EAAIoI,OAAOC,KAAO2vC,KAE5E,IAEItqB,EAAQjoB,KAAKq2E,iBAAiB91E,EAAMhG,EAAIsF,GAAIX,GAChDc,KAAKs2E,oBAAoBruD,EAAO1tB,EAAK2E,GACrCqB,EAAKuN,QAAQ6P,QAAQ,IAAIC,QAAK3jB,OAAWA,IACzCsG,EAAKuN,QAAQ+P,QAAQtd,EAAKuN,QAAQgQ,aAClC5e,EAAQytE,sBACRztE,EAAQ22D,iBACR71D,KAAKotF,YAAY7yF,EAAK2E,IAG1B0rG,EAAatpE,UAAUs6C,cAAgB,SAAU54E,EAAQT,EAAQrD,GAC7D,GAAIqD,GAAgC,SAAtBA,EAAOnE,MAAMvC,MAA0C,mBAAvB0G,EAAOnE,MAAMA,MAA4B,CACnF,IAAIi7C,EAAan6C,EAAQ0b,UAAU5X,EAAOnD,IAAIzB,MAAMk7C,SAASD,WAC7D,GAAIn6C,EAAQ+e,eAAuC,SAAtBjb,EAAO5E,MAAMvC,OAAoBw9C,EAAWI,UAErE,YADAl3C,EAAOi2C,UAAYx1C,EAAOnD,IAI9B,GADAw5C,EAAWE,UAAYF,EAAWE,cAC9BF,EAAWE,YAA0D,IAA7CF,EAAWE,UAAUr7B,QAAQ3b,EAAO1C,MAAew5C,EAAWI,UAAW,CACjGJ,EAAWE,UAAUziD,KAAKyL,EAAO1C,IACjC,IAAIgwG,EAAcn0F,GAAYnZ,GAC1ButG,EAAU5wG,EAAQ0b,UAAUrY,EAAO1C,IAAIiO,QACvCpM,EAAgBxC,EAAQ0b,UAAU5X,EAAOnD,IAAIiO,QACjDgiG,EAAQntG,OAAOI,IAAO+sG,EAAQ9zG,QAAW8zG,EAAQ/hG,WAAWzV,OAAS,GAC9D0K,EAAOhH,QAAWgH,EAAO+K,WAAWzV,OAAS,GACpDw3G,EAAQntG,OAAOC,KAAQktG,EAAQ/zG,QAAW+zG,EAAQ/hG,WAAWxV,MAAQ,GAC9DyK,EAAOjH,QAAWiH,EAAO+K,WAAWxV,MAAQ,GACnDu3G,EAAQntG,OAAOI,IAAO+sG,EAAQntG,OAAOI,IAAM,EAAK,EAAI+sG,EAAQntG,OAAOI,IACnE+sG,EAAQntG,OAAOC,KAAQktG,EAAQntG,OAAOC,KAAO,EAAK,EAAIktG,EAAQntG,OAAOC,KACrE1D,EAAQ0b,UAAUrY,EAAO1C,IAAI24C,UAAYx1C,EAAOnD,GAChD6B,EAAckQ,SAAS9a,KAAKoI,EAAQ0b,UAAUrY,EAAO1C,IAAIiO,SACzD,IAAIma,EAAQjoB,KAAKq2E,iBAAiBrzE,EAAQT,EAAO1C,GAAIX,GACrDc,KAAKs2E,oBAAoBruD,EAAO1lB,EAAQrD,GACxCwC,EAAcic,QAAQ,IAAIC,QAAK3jB,OAAWA,IAC1CyH,EAAcmc,QAAQnc,EAAcoc,aACpC5e,EAAQytE,sBACRztE,EAAQ22D,iBAGR,IAAK,IAFDga,KAEKn5E,GADTm5E,EAAQA,EAAM1zC,OAAO55B,EAAOm2C,SAAUn2C,EAAOo2C,UAC1BliD,OAAS,EAAGC,GAAK,EAAGA,KACuD,IAAtFwI,EAAQi6C,WAAW2vB,yBAAyB5qD,QAAQhf,EAAQ0b,UAAUi1D,EAAMn5E,MAC5EwI,EAAQ48C,OAAO58C,EAAQ0b,UAAUi1D,EAAMn5E,KAG/C,IACImlB,GACAhgB,KAAM,kBAAmBkgB,YAAc/C,OAAQ62F,IAC/C7zF,YAAchD,OAHR0C,GAAYnZ,KAGYuZ,SAAU,YAE5C5c,EAAQ+c,gBAAgBJ,GACH,QAAjB3c,EAAQ0sB,MACJrpB,EAAOgnE,OAASvmE,EAAOumE,QACvBrqE,EAAQouF,gBAAgB/qF,GAGhCvC,KAAKotF,YAAY7qF,EAAQrD,MAKrC0rG,EAAatpE,UAAU8rD,YAAc,SAAU7yF,EAAK2E,GAChD,GAAuB,SAAnB3E,EAAI6D,MAAMvC,MAAmBtB,EAAI6D,MAAMk7C,SAASD,WAAWE,YAC1Dh/C,EAAI6D,MAAMk7C,SAASD,WAAWI,UAE/B,IAAK,IAAI58C,EAAK,EAAGkzG,EADEx1G,EAAI6D,MAAMk7C,SAASD,WAAWE,UACD18C,EAAKkzG,EAAet5G,OAAQoG,IAAM,CAC9E,IAAInG,EAAIq5G,EAAelzG,GACnBsgB,EAAeje,EAAQ0b,UAAUlkB,GACjCymB,IACAje,EAAQsqE,qBAAqBrsD,GAC7BA,EAAarP,QAAQ6P,QAAQ,IAAIC,GAAKT,EAAarP,QAAQvV,MAAO4kB,EAAarP,QAAQxV,SACvF6kB,EAAarP,QAAQ+P,QAAQV,EAAarP,QAAQgQ,aAC9CX,EAAa/e,MAAMk7C,SAASD,WAAWE,WACpCp8B,EAAa/e,MAAMk7C,SAASD,WAAWE,UAAU9iD,QACpDuJ,KAAKotF,YAAYjwE,EAAcje,MAOnD0rG,EAAatpE,UAAU+sD,oBAAsB,SAAUR,EAAY3uF,GAC/D,IAAIU,EAAUV,EAAQ0b,UAAUizE,EAAWr1C,WAC3C,GAA8B,SAA1Bq1C,EAAWzvF,MAAMvC,MAAmBgyF,EAAWzvF,MAAMk7C,SAASD,WAAWE,WACzEs0C,EAAWzvF,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAAS,EAExD,IAAK,IAAIJ,GADLkjD,EAAYs0C,EAAWzvF,MAAMk7C,SAASD,WAAWE,WAC9B9iD,OAAS,EAAGJ,GAAK,EAAGA,IACvC6I,EAAQ48C,OAAO58C,EAAQ0b,UAAU2+B,EAAUljD,KAGnD,GAAIuJ,EAAS,CACTV,EAAQwuF,yBAAyBG,GACjC,IAAIt0C,EAAY35C,EAAQxB,MAAMk7C,SAASD,WAAWE,UAClDv5C,KAAKm7E,oBAAoBv7E,EAAQkO,QAAS+/E,EAAWhuF,IACrD,IAAImwG,EAAez2D,EAAUr7B,QAAQ2vE,EAAWhuF,IAChD05C,EAAUpzC,OAAO6pG,EAAc,KAIvCpF,EAAatpE,UAAU65C,oBAAsB,SAAUrtE,EAASyK,GAC5D,IAAK,IAAI1b,EAAK,EAAG6f,EAAK5O,EAAQ8D,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC1D,IAAInG,EAAIgmB,EAAG7f,GACPnG,EAAEmJ,KAAO0Y,EACTzK,EAAQ8D,SAASzL,OAAO2H,EAAQ8D,SAASsM,QAAQxnB,GAAI,GAEhDA,EAAEkb,UACP5R,KAAKm7E,oBAAoBzkF,EAAG6hB,KAKxCqyF,EAAatpE,UAAUkqD,cAAgB,SAAU3rF,EAAIX,GACjD,IAAIqB,EAAOrB,EAAQ0b,UAAU/a,GAC7B,GAAIU,EAAM,CACN,IAAIwa,EAAW7b,EAAQ0b,UAAUra,EAAKi4C,WACtC,GAAIz9B,GAAoC,SAAxBA,EAAS3c,MAAMvC,KAAiB,CAC5C,IAAI09C,EAAYx+B,EAAS3c,MAAMk7C,SAASD,WAAWE,UACnDr6C,EAAQwuF,yBAAyBntF,GACjCP,KAAKm7E,oBAAoBpgE,EAASjN,QAASjO,GAC3C,IAAImwG,EAAez2D,EAAUr7B,QAAQre,GACrC05C,EAAUpzC,OAAO6pG,EAAc,GAC/BzvG,EAAKi4C,UAAY,GACjBt5C,EAAQmuE,sBACRnuE,EAAQ22D,oBAKpB+0C,EAAatpE,UAAUqvC,WAAa,SAAUN,EAASx1D,EAAU3b,GAC7D,IAAIW,EACJwwE,EAAQxwE,GAAKwwE,EAAQxwE,IAAMyZ,KAC3BzZ,EAAKwwE,EAAQxwE,GACb,IAAIU,EAAOrB,EAAQ0b,UAAU/a,GACxBU,GACDrB,EAAQktB,IAAIikD,GAEhBA,EAAQ73B,UAAY39B,EACpB,IAAI2C,EAAate,EAAQ0b,UAAUC,GAC/Bw+B,EAAa77B,EAAWpf,MAAMk7C,SAASD,WAC3C,GAAI94C,GAAQid,GAAwC,SAA1BA,EAAWpf,MAAMvC,MAAuC,SAApB0E,EAAKnC,MAAMvC,MACrEw9C,EAAWE,UAAW,CACtBh5C,EAAKi4C,UAAY39B,EACjB,IAAI0+B,EAAY/7B,EAAWpf,MAAMk7C,SAASD,WAAWE,UASrD,GARIA,EAAUr7B,QAAQre,GAAM,GACxB05C,EAAUziD,KAAK+I,GAEnB2d,EAAW1P,QAAQ8D,SAAS9a,KAAKyJ,EAAKuN,SACtC0P,EAAW1P,QAAQ6P,QAAQ,IAAIC,IAC/BJ,EAAW1P,QAAQ+P,QAAQL,EAAW1P,QAAQgQ,aAC9C5e,EAAQi6C,WAAWi0C,YAAY5vE,EAAYte,GAC3CA,EAAQmuE,sBACa,QAAjBnuE,EAAQ0sB,MAAmBrrB,EAAKnC,OAASmC,EAAKnC,MAAMk7C,WAChD/4C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAAY,CACnClqB,GAAkBxU,EAAW,iBACnC0U,YAAYF,GAAkBghD,EAAQxwE,GAAK,qBAK7D+qG,EAAatpE,UAAU+0C,iBAAmB,SAAU91E,EAAM0vG,EAAc/wG,GACpE,IACI+oB,EADAsxB,EAAYh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAE/C,GAAIA,GAAaA,EAAU9iD,OACvB,IAAK,IAAIoG,EAAK,EAAG+xE,EAAcr1B,EAAW18C,EAAK+xE,EAAYn4E,OAAQoG,IAAM,CACrE,IAAInG,EAAIk4E,EAAY/xE,GAChBozG,IAAiBv5G,IAKbuxB,EAJCA,EAIO/oB,EAAQ0b,UAAUlkB,GAAGoX,QAAQtM,OAAOsQ,UAAUmW,GAH9C/oB,EAAQ0b,UAAUlkB,GAAGoX,QAAQtM,QAQrD,OAAOymB,GAAS/oB,EAAQ0b,UAAUq1F,GAAcniG,QAAQtM,QAG5DopG,EAAatpE,UAAUg1C,oBAAsB,SAAUruD,EAAO1tB,EAAK2E,GAC/D,IAAIoI,EACAT,EAEAhE,EACAC,EAFAvC,EAAOrB,EAAQ0b,UAAUrgB,EAAIi+C,WAG7BhnB,GAAUx6B,EAAG,GAAKC,EAAG,IACpBsJ,EAAKuN,QAAQtM,OAAOoB,KAAOrI,EAAIoI,OAAOC,KAAOrI,EAAIhC,MAAUgI,EAAKuN,QAAQtM,OAAY,QACrFqB,GAAQ,GAEPtC,EAAKuN,QAAQtM,OAAOuB,IAAMxI,EAAIoI,OAAOI,IAAMxI,EAAIjC,OAAWiI,EAAKuN,QAAQtM,OAAa,SACrFsB,GAAS,GAETD,IACA2uB,EAAMx6B,EAAI,GAEV8L,IACA0uB,EAAMv6B,EAAI,GAEd,IAAI8W,EAAaxN,EAAKuN,QAAQC,WAC1BlL,IACAyE,GAAS/M,EAAIuT,QAAQnL,OAAOC,KAAOrI,EAAIuT,QAAQtM,OAAOjJ,OAASwV,EAAWxV,OAE1EuK,IACA+D,GAAStM,EAAIuT,QAAQnL,OAAOI,IAAMxI,EAAIuT,QAAQtM,OAAOlJ,QAAUyV,EAAWzV,SAE1EgP,EAAQ,GAAKT,EAAQ,IACrB3H,EAAQ+f,eAAe5D,MAAMnc,EAAQ0b,UAAUrgB,EAAIi+C,WAAYlxC,GAAS,EAAGT,GAAS,EAAG2qB,IAI/Fo5E,EAAatpE,UAAU6rE,yBAA2B,SAAU5sG,EAAM2vG,GAe9D,OAdAA,EAAiBrwG,GAAKU,EAAKV,GAAK,kBAChCqwG,EAAiB33G,MAAQ,GACzB23G,EAAiB53G,OAAS,GAC1B43G,EAAiBvtG,OAAOG,OAAS,EACjCotG,EAAiBhwG,MAAM+X,KAAO,cAC9Bi4F,EAAiBp3F,oBAAsB,OACvCo3F,EAAiBr3F,kBAAoB,SACrCq3F,EAAiBloF,aAAe,SAChCkoF,EAAiB95G,KAAO,8iBAMjB85G,GAGXtF,EAAatpE,UAAU6pE,qBAAuB,SAAU5qG,GACpD,IACIN,EADAstG,EAAa,IAAIv9E,GAEjB5xB,EAAQmC,EAAKnC,MAAMk7C,SACnB+yD,EAAOjuG,EAAMk7C,SACbD,EAAaj7C,EAAMi7C,WACJj7C,EAAMk7C,SAWzB,MAVa,SAAT+yD,IACApsG,EAAUD,KAAKosG,iBAAiB7rG,IAEvB,eAAT8rG,GAAyBhzD,IACzBp5C,EAAUD,KAAKsuG,uBAAuB/tG,IAE1CgtG,EAAW37F,UAAY3R,GACvBstG,EAAWrtG,MAAM+X,KAAO,cACxBs1F,EAAWrtG,MAAMgY,YAAc,cAC/Bq1F,EAAWrtG,MAAMiY,YAAc,EACxBo1F,GAGX3C,EAAatpE,UAAUguE,uBAAyB,SAAU/uG,EAAM4vG,EAAwBhC,GACpF,IAAI71F,EACAma,EACJ,GAAkC,IAA9B07E,EAAO71F,YAAY7hB,OACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIy3G,EAAO71F,YAAY7hB,OAAQC,IAAK,CAChD,IAAI05G,EAAQjC,EAAO71F,YAAY5hB,IAC/B4hB,EAAc/X,EAAKm6C,sBAAsB01D,IAC7B73G,MAAQ41G,EAAO51G,MAC3B+f,EAAYhgB,OAAS61G,EAAO71G,OAC5B63G,EAAuBv+F,SAAS9a,KAAKwhB,GAG7C,GAA4B,IAAxB61F,EAAO17E,MAAMh8B,OACb,IAASC,EAAI,EAAGA,EAAIy3G,EAAO17E,MAAMh8B,OAAQC,IAAK,CAC1C,IAAIyM,EAAOgrG,EAAO17E,MAAM/7B,GACxB+7B,EAAQlyB,EAAKw5C,gBAAgB52C,GAC7BgtG,EAAuBv+F,SAAS9a,KAAK27B,KAKjDm4E,EAAatpE,UAAU6tE,kBAAoB,SAAU5uG,EAAM8vG,EAAWh3D,GAkBlE,OAjBAg3D,EAAUxwG,GAAKU,EAAKV,GAAK,WACzBwwG,EAAU93G,MAAQ,GAClB83G,EAAU/3G,OAAS,EACnB+3G,EAAUnwG,MAAM+X,KAAO,QACvBo4F,EAAU1tG,OAAOG,OAAS,EAC1ButG,EAAUv3F,oBAAsB,OAChCu3F,EAAUx3F,kBAAoB,SAC9Bw3F,EAAUroF,aAAe,SACzBqoF,EAAUj6G,KAAO,mUAGbijD,IAAmC,IAArBA,EAAWg1D,MACzBgC,EAAUniF,SAAU,EAGpBmiF,EAAUniF,SAAU,EAEjBmiF,GAGXzF,EAAatpE,UAAU+pE,sBAAwB,SAAU9qG,EAAMrB,EAASopB,EAAYroB,GAChFqoB,EAAWzoB,GAAKyoB,EAAWzoB,IAAMyZ,KACjCgP,EAAW+L,OAAS9zB,EAAKV,GACzB,IAAIywG,EAAsB,IAAItgF,GAC1BugF,EAAiB,IAAIliG,GACrBke,EAAc,IAAImB,GAEtB6iF,EAAe1wG,GAAKU,EAAKV,GAAK,IAAMyoB,EAAWzoB,GAAK,QACpD0wG,EAAeh4G,MAAQ+vB,EAAW/vB,MAClCg4G,EAAej4G,OAASgwB,EAAWhwB,OACnCi4G,EAAevoF,aAAe,SAC9BuE,EAAY1sB,GAAKU,EAAKV,GAAK,IAAMyoB,EAAWzoB,GAAK,QACjD0sB,EAAYtsB,QAAUqoB,EAAW3O,KACjC,IAAIzZ,EAAQK,EAAKL,MACjBqsB,EAAYrsB,OACRuY,SAAUvY,EAAMuY,SAAUmU,OAAQ1sB,EAAM0sB,OAAQa,SAAU,KAAMf,QAASxsB,EAAMwsB,QAC/ElU,KAAMtY,EAAMsY,KAAMG,aAAczY,EAAMyY,aAAcD,MAAOxY,EAAMwY,MAAOT,KAAM,QAC9E0U,WAAYzsB,EAAMysB,WAAYG,WAAY5sB,EAAM4sB,WAAYL,aAAc,OAC1EvU,YAAa,OAAQC,YAAa,EAClCmF,gBAAiBpd,EAAMod,gBAAiBuP,UAAW3sB,EAAM2sB,UAAWE,eAAgB7sB,EAAM6sB,gBAE9FR,EAAYzT,oBAAsB,SAClCyT,EAAY1T,kBAAoB,SAChC0T,EAAYvE,aAAe,SAC3BuE,EAAY5pB,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAC1DwtG,EAAoBv0G,QAAUwE,EAAKxE,QAAUusB,EAAW7xB,OACpDgG,KAAKY,IAAIirB,EAAW9wB,OAASiF,KAAKgR,GAAK,MAC3C6iG,EAAoBt0G,QAAUuE,EAAKvE,QAAUssB,EAAW7xB,OACpDgG,KAAKW,IAAIkrB,EAAW9wB,OAASiF,KAAKgR,GAAK,MAC3C6iG,EAAoBprE,OAAQ,EAC5BorE,EAAoB7qG,UAAYw+B,YAAUU,KAC1C2rE,EAAoBzwG,GAAKU,EAAKV,GAAK,mBAAqByoB,EAAWzoB,GACnEywG,EAAoBpwG,MAAMgY,YAAc,cACxCo4F,EAAoB3tG,QAAWC,KA3BlB,GA2BgCC,MA3BhC,GA2B+CE,IA3B/C,GA2B4DD,OA3B5D,IA4BbwtG,EAAoBtoF,aAAe,SACnCsoF,EAAoBjkG,YAAc,EAClCikG,EAAoB1+F,UAAY2+F,EAAgBhkF,GAChD,IAAIigD,EAAiB,IAAIj4D,GAAKhU,EAAKnC,MAAO,eAAiByB,GAAIywG,EAAoBzwG,GAAIzB,OAASvC,KAAM,OAAQuC,MAAO,oBAAsB,GAC3IouE,EAAe/5C,QAEP5yB,GAAI0wG,EAAe1wG,GAAK,QAASzB,MAAO,SACxCsR,QAAU1Y,EAAG,EAAGC,EAAG,MAG3Bu1E,EAAezwE,QAAUu0G,EAAoBv0G,QAC7CywE,EAAexwE,QAAUs0G,EAAoBt0G,QAC7CwwE,EAAe7yD,KAAO2O,EAAW3O,KACjC6yD,EAAeh1E,MAAQ8wB,EAAW9wB,MAClCg1E,EAAe/1E,OAAS6xB,EAAW7xB,OACnC+1E,EAAej0E,MAAQ+vB,EAAW/vB,MAClCi0E,EAAel0E,OAASgwB,EAAWhwB,OACnCk0E,EAAe1+D,QAAUwiG,EACzBA,EAAoB1+F,SAAS9a,KAAK01E,EAAezyB,gBAAgByyB,EAAe/5C,MAAM,KACtF,IAAIjxB,EAAS,IAAI8a,GAAK,EAAG,EAAG,EAAG,GAC3B/jB,EAAQgI,EAAKhI,OAASgI,EAAK8c,UAAY,EACvC/kB,EAASiI,EAAKjI,QAAUiI,EAAKgZ,WAAa,OAChCtf,IAAV1B,QAAkC0B,IAAX3B,IACvBkJ,EAAS,IAAI8a,GAAK/b,EAAKxE,QAAUxD,EAAQ,EAAGgI,EAAKvE,QAAU1D,EAAS,EAAGC,EAAOD,IAElF0H,KAAKwwG,kBAAkBhvG,EAAQ8uG,GAAuBt5G,EAAGw1E,EAAezwE,QAAS9E,EAAGu1E,EAAexwE,SAAWwwE,EAAgBlkD,EAAW7xB,OAAQ6xB,EAAW9wB,OAC5J,IAAIoU,GACA/L,GAAIU,EAAKV,GAAK,IAAMyoB,EAAWzoB,GAAK,aACpCoT,YAAaI,uBAAqB0E,UAAY1E,uBAAqBU,cAAgBV,uBAAqBG,MACxG/R,SAAUlB,EAAKV,GAAIuyC,SAAUk+D,EAAoBzwG,GACjDkS,iBAAmB3T,MAAO,SAE1BqyG,EAAsB,IAAIr9F,GAAU7S,EAAKnC,MAAO,cAAewN,GAAW,GAC9E6kG,EAAoBp+D,aAAem6B,EAAe/5C,MAAM,GAAG5yB,GAC3D4wG,EAAoBl9E,KAAKr0B,GACzBuxG,EAAoB3iG,QAAQo3B,OAAQ,EACpCurE,EAAoB3iG,QAAQrI,UAAYw+B,YAAUU,KAClD1kC,EAAQ2R,SAAS9a,KAAK25G,EAAoB3iG,SAC1C2iG,EAAoBlnC,OAAS,IAC7B,IAAI1tD,EAAQ7b,KAAK6qG,kBAAkBtqG,EAAKV,IACnCgc,IACDA,MAECA,EAAMyM,EAAWzoB,MAClBgc,EAAMyM,EAAWzoB,QASrB,OALAgc,EAAMyM,EAAWzoB,IAAW,KAAI2sE,EAChC3wD,EAAMyM,EAAWzoB,IAAW,UAAI4wG,EAChCzwG,KAAK6qG,kBAAkBtqG,EAAKV,IAAMgc,EAClC3c,EAAQ6Z,WAAWyzD,OAAgBvyE,GAAW,GAC9CuyE,EAAejD,OAAS,IACjB+mC,GAGX1F,EAAatpE,UAAU8pE,yBAA2B,SAAUlsG,EAASopB,EAAYroB,GAC7EqoB,EAAWzoB,GAAKyoB,EAAWzoB,IAAMyZ,KACjC,IAAIo3F,EAAuB,IAAI1gF,GAC3BugF,EAAiB,IAAIliG,GACrBsiG,EAAa,IAAIjjF,GAErB6iF,EAAe1wG,GAAK,IAAMyoB,EAAWzoB,GAAK,QAC1C0wG,EAAeh4G,MAAQ+vB,EAAW/vB,MAClCg4G,EAAej4G,OAASgwB,EAAWhwB,OACnCi4G,EAAevoF,aAAe,SAC9B2oF,EAAW9wG,GAAKyoB,EAAWzoB,GAAK,QAChC8wG,EAAW1wG,QAAUqoB,EAAWlqB,MAAMkqB,WAAW3O,KACjD,IAAIo/B,EAAYzwB,EAAWpoB,MAC3BywG,EAAWzwG,OACPuY,SAAUsgC,EAAUtgC,SAAUmU,OAAQmsB,EAAUnsB,OAAQa,SAAU,KAAMf,QAASqsB,EAAUrsB,QAC3FlU,KAAMugC,EAAUvgC,KAAMG,aAAcogC,EAAUpgC,aAAcD,MAAOqgC,EAAUrgC,MAAOT,KAAM,QAC1F0U,WAAYosB,EAAUpsB,WAAYG,WAAYisB,EAAUjsB,WAAYL,aAAc,OAClFvU,YAAa,OAAQC,YAAa,EAClCmF,gBAAiBy7B,EAAUz7B,gBAAiBuP,UAAWksB,EAAUlsB,UAAWE,eAAgBgsB,EAAUhsB,gBAE1G4jF,EAAW73F,oBAAsB,OACjC63F,EAAW93F,kBAAoB,SAC/B83F,EAAW3oF,aAAe,SAC1B2oF,EAAWhuG,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GACzD4tG,EAAqB30G,QAAUusB,EAAWvsB,QAAUusB,EAAWlqB,MAAMkqB,WAAW7xB,OAC5EgG,KAAKY,IAAIirB,EAAWlqB,MAAMkqB,WAAW9wB,OAASiF,KAAKgR,GAAK,MAC5DijG,EAAqB10G,QAAUssB,EAAWtsB,QAAUssB,EAAWlqB,MAAMkqB,WAAW7xB,OAC5EgG,KAAKW,IAAIkrB,EAAWlqB,MAAMkqB,WAAW9wB,OAASiF,KAAKgR,GAAK,MAC5DijG,EAAqBxrE,OAAQ,EAE7BwrE,EAAqB7wG,GAAKyoB,EAAWzoB,GAAK,mBAAqByoB,EAAWzoB,GAC1E6wG,EAAqBxwG,MAAMgY,YAAc,cACzCw4F,EAAqB/tG,QAAWC,KA3BnB,GA2BiCC,MA3BjC,GA2BgDE,IA3BhD,GA2B6DD,OA3B7D,IA4Bb4tG,EAAqB1oF,aAAe,SACpC0oF,EAAqBrkG,YAAc,EACnCqkG,EAAqB9+F,UAAY2+F,EAAgBI,GACjD,IAAIC,EAAmB,IAAIr8F,GAAK+T,EAAWlqB,MAAO,eAAiByB,GAAI6wG,EAAqB7wG,GAAIzB,OAASvC,KAAM,OAAQuC,MAAO,oBAAsB,GACpJwyG,EAAiBn+E,QAET5yB,GAAI0wG,EAAe1wG,GAAK,QAASzB,MAAO,SACxCsR,QAAU1Y,EAAG,EAAGC,EAAG,MAG3B25G,EAAiB70G,QAAU20G,EAAqB30G,QAChD60G,EAAiB50G,QAAU00G,EAAqB10G,QAC5C40G,EAAiBxyG,OAASwyG,EAAiBxyG,MAAMkqB,aACjDsoF,EAAiBj3F,KAAO2O,EAAWlqB,MAAMkqB,WAAW3O,KACpDi3F,EAAiBp5G,MAAQ8wB,EAAWlqB,MAAMkqB,WAAW9wB,MACrDo5G,EAAiBn6G,OAAS6xB,EAAWlqB,MAAMkqB,WAAW7xB,QAE1Dm6G,EAAiBr4G,MAAQ+vB,EAAW/vB,MACpCq4G,EAAiBt4G,OAASgwB,EAAWhwB,OACrCs4G,EAAiB9iG,QAAU4iG,EAC3BA,EAAqB9+F,SAAS9a,KAAK85G,EAAiB72D,gBAAgB62D,EAAiBn+E,MAAM,KAC3F,IAAIjxB,EAAS,IAAI8a,GAAK,EAAG,EAAG,EAAG,GAC3B/jB,EAAQ+vB,EAAW/vB,OAAS,EAC5BD,EAASgwB,EAAWhwB,QAAU,EAKlC,YAJc2B,IAAV1B,QAAkC0B,IAAX3B,IACvBkJ,EAAS,IAAI8a,GAAKgM,EAAWvsB,QAAUxD,EAAQ,EAAG+vB,EAAWtsB,QAAU1D,EAAS,EAAGC,EAAOD,IAE9F0H,KAAKwwG,kBAAkBhvG,EAAQkvG,GAAwB15G,EAAG45G,EAAiB70G,QAAS9E,EAAG25G,EAAiB50G,SAAW40G,EAAkBtoF,EAAW7xB,OAAQ6xB,EAAW9wB,OAC5Jk5G,GAGX9F,EAAatpE,UAAUqtD,yBAA2B,SAAUpuF,EAAMV,GAC9D,GAAIU,GAA4B,SAApBA,EAAKnC,MAAMvC,KAAiB,CAEpC,GAAoB,mBADR0E,EAAKnC,MACPA,MACN,OAAOmC,EAAKuN,QAAQ8D,SAAS,GAE5B,GAAI5R,KAAK6qG,kBAAkBtqG,EAAKV,KAAOG,KAAK6qG,kBAAkBtqG,EAAKV,IAAIA,GAAK,CAC7E,IAAI2sE,EAAiBxsE,KAAK6qG,kBAAkBtqG,EAAKV,IAAIA,GAAIU,KACzD,OAAOP,KAAK2uF,yBAAyBniB,EAAgB3sE,IAG7D,OAAO,MAGX+qG,EAAatpE,UAAUksD,cAAgB,SAAUjtF,EAAM+nB,EAAYppB,GAC/D,IAAI2xG,EAAmBtwG,EAAKuN,QAAQ8D,SAAS,GACzCxT,EAAQmC,EAAKnC,MACjBkqB,EAAW+L,OAAS9zB,EAAKV,GACzB,IAAI4sE,EAAgB,IAAI10B,GAAe35C,EAAO,cAAekqB,GAAY,GAKzE,OAJAlqB,EAAMka,YAAYxhB,KAAK21E,GACvBokC,EAAiBj/F,SAAS9a,KAAKkJ,KAAKqrG,sBAAsB9qG,EAAMrB,EAASopB,EAAYuoF,IACrFtwG,EAAKuN,QAAQ6P,QAAQ,IAAIC,IACzBrd,EAAKuN,QAAQ+P,QAAQtd,EAAKuN,QAAQgQ,aAC3B9d,KAAK6qG,kBAAkBtqG,EAAKV,IAAIyoB,EAAWzoB,IAAI+L,WAE1Dg/F,EAAatpE,UAAUwvE,iBAAmB,SAAUv2G,EAAK2E,GACrD,IAAIosG,EAAY/wG,EAAI6D,MACpB,GAAIktG,EAAUhzF,YAAY7hB,OACtB,IAAK,IAAIC,EAAI40G,EAAUhzF,YAAY7hB,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACxD,IAAI4xB,EAAagjF,EAAUhzF,YAAY5hB,GACvCsJ,KAAK+wG,wBAAwBx2G,EAAK+tB,EAAYppB,UAG/Cc,KAAK6qG,kBAAkBtwG,EAAIsF,KAGtC+qG,EAAatpE,UAAUorC,0BAA4B,SAAUnsE,EAAMrB,GAI/D,GAAwB,SAApBqB,EAAKnC,MAAMvC,KACX,GAAyB,mBAArB0E,EAAKnC,MAAMA,MAMX,IAAK,IALDyB,EAAKU,EAAKV,GAAGyO,MAAM,KACnBgkB,EAAezyB,EAAGA,EAAGpJ,OAAS,GAC9B49B,EAASx0B,EAAGA,EAAGpJ,OAAS,IAAMoJ,EAAG,GACjC2d,EAAate,EAAQ0b,UAAUyZ,GAC/Bi3E,EAAY9tF,EAAWpf,MAClBvB,EAAK,EAAG6f,EAAK4uF,EAAUhzF,YAAazb,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC/D,IAAIyrB,EAAa5L,EAAG7f,GACpB,GAAIyrB,EAAWzoB,KAAOyyB,EAAc,CAEhC,IAAe,IADHg5E,EAAUhzF,YAAY4F,QAAQoK,GAItC,OAFAppB,EAAQwuF,yBAAyBntF,GACjCP,KAAK+wG,wBAAwBvzF,EAAY8K,EAAYppB,IAC9C,QAKdqB,EAAKnC,MAAMka,aAAe/X,EAAKnC,MAAMka,YAAY7hB,QACtDuJ,KAAK8wG,iBAAiBvwG,EAAMrB,GAGpC,OAAO,GAEX0rG,EAAatpE,UAAUyvE,wBAA0B,SAAUvzF,EAAY8K,EAAYppB,GAC/E,IAAIosG,EAAY9tF,EAAWpf,MACvBshB,EAAQ4rF,EAAUhzF,YAAY4F,QAAQoK,GAC1C,IAAe,IAAX5I,EAAc,CACd,KAAMxgB,EAAQgY,eAAiBC,gBAAckyD,UAAenqE,EAAQgY,eAAiBC,gBAAc23D,OAAQ,CACvG,IAAI3W,GACAt8D,KAAM,oBAAqB0wF,WAAY,SAAUxwE,WAAYL,GAAY4M,GACzEtM,WAAYN,GAAY4M,GAAaxM,SAAU,YAEnD5c,EAAQ+c,gBAAgBk8C,GAE5BmzC,EAAUhzF,YAAYnS,OAAOuZ,EAAO,GACpC,IAAI7D,EAAQ7b,KAAK6qG,kBAAkBrtF,EAAW3d,IAC9C,GAAIgc,GAASA,EAAMyM,EAAWzoB,IAAK,CAC/B,IAAI2sE,EAAiB3wD,EAAMyM,EAAWzoB,IAAIU,KACtCkwG,EAAsB50F,EAAMyM,EAAWzoB,IAAI+L,UAC/C1M,EAAQ0uF,eAAephB,GACvBttE,EAAQ0uF,eAAe6iB,GACvB,IAAIO,EAAcxzF,EAAW1P,QAAQ8D,SAAS,GAC9C8N,EAAQsxF,EAAYp/F,SAASsM,QAAQsuD,EAAe1+D,SACpDkjG,EAAYp/F,SAASzL,OAAOuZ,EAAO,GACnCA,EAAQsxF,EAAYp/F,SAASsM,QAAQuyF,EAAoB3iG,SACzDkjG,EAAYp/F,SAASzL,OAAOuZ,EAAO,GACnCxgB,EAAQgyE,gBAAgB1E,GACxBttE,EAAQgyE,gBAAgBu/B,UACjBvxG,EAAQ0b,UAAU4xD,EAAe3sE,WACjCX,EAAQ0b,UAAU61F,EAAoB5wG,WACtCgc,EAAMyM,EAAWzoB,OAIpC+qG,EAAatpE,UAAUkvE,kBAAoB,SAAUS,EAAcnjG,EAASzN,EAAUE,EAAM9J,EAAQe,GAChG,IAAI6U,EAAcrM,KAAKkxG,uBAAuB7wG,EAAU4wG,GACpD76G,EAAO,GACPq3G,EAAc3/F,EAAQ8D,SAAS,GAC/Bs4D,EAAcp8D,EAAQ8D,SAAS,GAC/B2a,EAAcze,EAAQ8D,SAAS,GACnC67F,EAAY30F,oBAAsB,UAClC20F,EAAY50F,kBAAoB,UAChC0T,EAAY5pB,OAAOC,KAAO2pB,EAAY5pB,OAAOE,MAAQ,EACrD0pB,EAAY5pB,OAAOI,IAAMwpB,EAAY5pB,OAAOG,OAAS,EACrD,IAAInH,EACArB,EACgB,IAAhB+R,GACAjW,EAAO,0BACPq3G,EAAYl1G,MAAQ,GACpBk1G,EAAY30F,oBAAsB,OAClCoxD,EAAY9kC,6BAA6B,EAAG,GAAK,YACjD7Y,EAAY5pB,OAAOI,IAAMwpB,EAAY5pB,OAAOG,OAAS,GACrDnH,EAAQs1G,EAAa1pG,YACrBjN,GACIpD,GAAI+5G,EAAapuG,MAAO1L,GAAI85G,EAAaluG,IACzC3L,GAAI65G,EAAapuG,MAAOxL,GAAI45G,EAAanuG,SAGxB,MAAhBuJ,GACLjW,EAAO,0BACPq3G,EAAYl1G,MAAQ,GACpBk1G,EAAY30F,oBAAsB,QAClCoxD,EAAY9kC,6BAA6B,EAAG,GAAK,YACjD7Y,EAAY5pB,OAAOI,IAAMwpB,EAAY5pB,OAAOG,OAAS,GACrDnH,EAAQs1G,EAAa/oG,WACrB5N,GACIpD,GAAI+5G,EAAaruG,KAAMzL,GAAI85G,EAAaluG,IACxC3L,GAAI65G,EAAaruG,KAAMvL,GAAI45G,EAAanuG,SAGvB,KAAhBuJ,GACLjW,EAAO,0BACPq3G,EAAYn1G,OAAS,GACrBm1G,EAAY50F,kBAAoB,MAChCqxD,EAAY9kC,6BAA6B,GAAK,EAAG,YACjD7Y,EAAY5pB,OAAOC,KAAO2pB,EAAY5pB,OAAOE,MAAQ,GACrDlH,EAAQs1G,EAAarpG,aACrBtN,GACIpD,GAAI+5G,EAAapuG,MAAO1L,GAAI85G,EAAanuG,OACzC1L,GAAI65G,EAAaruG,KAAMvL,GAAI45G,EAAanuG,UAI5C1M,EAAO,0BACPq3G,EAAYn1G,OAAS,GACrBm1G,EAAY50F,kBAAoB,SAChCqxD,EAAY9kC,6BAA6B,GAAK,EAAG,YACjD7Y,EAAY5pB,OAAOC,KAAO2pB,EAAY5pB,OAAOE,MAAQ,GACrDlH,EAAQs1G,EAAaxtG,UACrBnJ,GACIpD,GAAI+5G,EAAapuG,MAAO1L,GAAI85G,EAAaluG,IACzC3L,GAAI65G,EAAaruG,KAAMvL,GAAI45G,EAAaluG,MAGhD,IAAI9B,EAASgwG,EAAahwG,OAE1BtF,EAAQ4S,GAAsBjU,GAAU2G,EADzBkE,GAAMM,UAAUpF,EAAU7I,EAAOiF,KAAK+I,IAAIyrG,EAAa14G,MAAO04G,EAAa34G,UAC/B,EAAO2I,GAClEwsG,EAAYr3G,KAAOA,OACJ6D,IAAXxD,QAAkCwD,IAAVzC,IACxBmE,EAAQwJ,GAAMM,UAAU9J,EAAOnE,EAAOf,GACtCqX,EAAQ/R,QAAUwE,EAAKxE,QAAUJ,EAAM3E,EACvC8W,EAAQ9R,QAAUuE,EAAKvE,QAAUL,EAAM1E,IAI/C2zG,EAAatpE,UAAUk6D,qBAAuB,SAAU7yB,EAAazpE,GACjE,GAAIc,KAAK6qG,kBAAmB,CACxB,IAAIsG,EAAexoC,EAAY9tD,SAC3ByX,EAAeq2C,EAAY9oE,GAC3B2d,EAAate,EAAQ0b,UAAUu2F,GACnC,OAAI3zF,GAAwC,SAA1BA,EAAWpf,MAAMvC,MAAmBmE,KAAK6qG,kBAAkBsG,IACzEnxG,KAAK6qG,kBAAkBsG,GAAc7+E,GAC9B9U,EAEJ,KAEX,OAAO,MAGXotF,EAAatpE,UAAUo6D,4BAA8B,SAAUl+E,EAAYmrD,EAAahvD,EAAMza,GAC1F,IAAIiyG,EAAexoC,EAAY9tD,SAC3ByX,EAAeq2C,EAAY9oE,GAC/B,GAAIG,KAAK6qG,kBAAkBsG,IAAiBnxG,KAAK6qG,kBAAkBsG,GAAc7+E,GAC7E,IAAK,IAAIz1B,EAAK,EAAG6f,EAAKc,EAAWpf,MAAMka,YAAazb,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACtE,IAAIyrB,EAAa5L,EAAG7f,GACpB,GAAIyrB,EAAWzoB,KAAOyyB,EAAc,CAChChK,EAAW3O,KAAOA,EAClB,IAAI7L,EAAU9N,KAAK6qG,kBAAkBsG,GAAc7+E,GAAc/xB,KAAKuN,QAAQ8D,SAAS,GACvF9D,EAAQ7N,QAAU0Z,EAClB7L,EAAQogB,SAAU,EAClB1Q,EAAW1P,QAAQ6P,QAAQ,IAAIC,IAC/BJ,EAAW1P,QAAQ+P,QAAQL,EAAW1P,QAAQgQ,gBAM9D8sF,EAAatpE,UAAU2iD,WAAa,SAAU9mE,EAAcje,GACxD,IACIstE,EADAlkD,EAAanL,EAAa/e,MAAMka,YAEpC,GAAIgQ,GAAcA,EAAW7xB,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAI4xB,EAAW7xB,OAAQC,IACnC81E,EAAiBxsE,KAAK6qG,kBAAkB1tF,EAAatd,IAAIyoB,EAAW5xB,GAAGmJ,IAAIU,KAC3ErB,EAAQ+kF,WAAWzX,IAK/Bo+B,EAAatpE,UAAUs7D,yBAA2B,SAAUz/E,EAAcmR,EAAWpvB,GACjF,GAAgC,SAA5Bie,EAAa/e,MAAMvC,KAAiB,CACpC,IAAIysB,EAAanL,EAAa/e,MAAMka,YACpC,GAAIgQ,GAAcA,EAAW7xB,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIymB,EAAarP,QAAQ8D,SAAS,GAAGA,SAASnb,OAAQC,IAClE,IAAK,IAAIL,EAAI,EAAGA,EAAIiyB,EAAW7xB,OAAQJ,IAAK,CACxC,IAAIi8B,EAAenV,EAAarP,QAAQ8D,SAAS,GAAGA,SAASlb,GAAGmJ,GAAGyO,MAAM,KAEzE,GADSgkB,EAAaA,EAAa77B,OAAS,KACjC6xB,EAAWjyB,GAAGwJ,GAAI,CACzB,IAAI2sE,EAAiBxsE,KAAK6qG,kBAAkB1tF,EAAatd,IAAIyoB,EAAWjyB,GAAGwJ,IAAIU,KAC3EqL,EAAY5L,KAAK6qG,kBAAkB1tF,EAAatd,IAAIyoB,EAAWjyB,GAAGwJ,IAAI+L,UAEtEvL,GADYiB,GAAiBsK,EAAUf,YAAasS,EAAarP,QAAQtM,OAAQ2b,EAAarP,QAAQtM,QAC3FoK,EAAU7K,aACzBV,GACIrJ,EAAG4U,EAAU7K,YAAY/J,EAAImmB,EAAaphB,QAAWuyB,EAAiB,QACtEr3B,EAAG2U,EAAU7K,YAAY9J,EAAIkmB,EAAanhB,QAAWsyB,EAAiB,SAE1EjuB,EAAW8E,GAAMM,UAAUpF,EAAUioB,EAAWjyB,GAAGmB,MAAO8wB,EAAWjyB,GAAGI,QACxE0mB,EAAarP,QAAQ8D,SAAS,GAAGA,SAASlb,GAAGqF,QACzCywE,EAAezwE,QAAUsE,EAASrJ,EACtCmmB,EAAarP,QAAQ8D,SAAS,GAAGA,SAASlb,GAAGsF,QACzCwwE,EAAexwE,QAAUqE,EAASpJ,EACtCiI,EAAQ+kF,WAAWzX,OAkB3Co+B,EAAatpE,UAAUqtE,wBAA0B,SAAUpuG,GACvD,IAEIwsG,EAFArxE,EAAQ,EAGR2d,EAFQ94C,EAAKnC,MAAMk7C,SAEAD,WAiBvB,YAfiBp/C,KADjB8yG,EAAW1zD,EAAW2zD,OACqB,SAAbD,GAC1BrxE,SAE6BzhC,IAA5Bo/C,EAAW+zD,eACgB,IAA5B/zD,EAAW+zD,cACX1xE,SAE0BzhC,IAAzBo/C,EAAWI,YACa,IAAzBJ,EAAWI,WACX/d,SAEsBzhC,IAArBo/C,EAAWg1D,QACS,IAArBh1D,EAAWg1D,OACX3yE,IAEGA,GAGXkvE,EAAatpE,UAAUmrE,kBAAoB,SAAUlsG,GACjD,IAAIm7B,EAAQ,EAER2wE,EADQ9rG,EAAKnC,MAAMk7C,SACN+yD,KAUjB,YAR2BpyG,IAAtBoyG,EAAKe,eACgB,IAAtBf,EAAKe,cACL1xE,SAEezhC,IAAdoyG,EAAKW,MACQ,SAAdX,EAAKW,MACLtxE,IAEGA,GAGXkvE,EAAatpE,UAAUggB,SAAW,SAAU1zC,EAAOrN,GAE/CqN,EAAM1N,MAAM+X,KAAO1X,EAAKL,MAAM+X,KAC9BrK,EAAM1N,MAAMgY,YAAc3X,EAAKL,MAAMgY,YACrCtK,EAAM1N,MAAMiY,YAAc5X,EAAKL,MAAMiY,YACrCvK,EAAM1N,MAAMod,gBAAkB/c,EAAKL,MAAMod,gBACzC1P,EAAM1N,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QACjC9e,EAAM1N,MAAMutB,SAAWltB,EAAKL,MAAMutB,SACkB,IAA/CltB,EAAK0S,YAAcK,kBAAgBe,UACpCzG,EAAM0qB,OAAS/3B,EAAK+3B,SAO5BsyE,EAAatpE,UAAUk7D,WAAa,SAAUvW,EAAa33D,EAAWnR,EAAcje,GAChF,IAAIkyG,EAAWnrB,EAAY7nF,UACvBgwG,EAAiBjxF,EAAarP,QAAQ8D,SAAS,GAC/Cy/F,EAAcl0F,EAAa/e,MAAMA,MACjCkzG,OAAoCr3G,IAAtBgsF,EAAY1tF,YAA8C0B,IAAvBgsF,EAAY3tF,OACjE,GAAuB,YAAnB84G,EAAShzG,OAAuBgzG,EAASvF,QACzC1uF,EAAarP,QAAQ8D,SAAS,GAAK5R,KAAKgrG,oBAAoB7tF,QAE3D,GAAuB,eAAnBi0F,EAAShzG,OAA0BgzG,EAASpF,WACjD7uF,EAAarP,QAAQ8D,SAAS,GAAK5R,KAAKirG,uBAAuB9tF,QAE9D,GAAuB,aAAnBi0F,EAAShzG,OAAwBgzG,EAAS93D,SAC/Cn8B,EAAarP,QAAQ8D,SAAS,GAAK5R,KAAKmrG,qBAAqBhuF,QAE5D,GAAuB,UAAnBi0F,EAAShzG,OAAqBgzG,EAASz5D,MAAO,CACnD,IAAI61D,EAAa4D,EAASz5D,MAC1Bx6B,EAAarP,QAAQ8D,SAAS,GAAK5R,KAAK+qG,kBAAkB5tF,EAAcqwF,OAEhD,YAAnB4D,EAAShzG,OAA0C,eAAnBgzG,EAAShzG,MAC9C+e,EAAarP,QAAQ8D,SAAS,GAAK5R,KAAKkrG,cAAc/tF,QAK5BljB,IAArBm3G,EAASvF,SAA0C,YAAhBwF,GAA6BC,EACrEtxG,KAAKuxG,kBAAkBp0F,EAAc8oE,QAERhsF,IAAxBm3G,EAASpF,YAA6C,eAAhBqF,GAAgCC,EAC3EtxG,KAAKwxG,qBAAqBr0F,EAAc8oE,EAAa33D,QAE1Br0B,IAAtBm3G,EAAS93D,UAA2C,aAAhB+3D,GAA8BC,EACvEtxG,KAAKyxG,mBAAmBt0F,EAAc8oE,EAAa33D,EAAWpvB,SAEtCjF,IAAnBm3G,EAASz5D,OAAwC,UAAhB05D,GAA2BC,IACjEtxG,KAAK0xG,gBAAgBv0F,EAAc8oE,EAAa33D,GAEhD23D,EAAY/lF,OACZmsB,GAAY45D,EAAY/lF,MAAOkuG,aAA0Bl7E,GAA0C,aAA7B/V,EAAa/e,MAAMA,MACrFgwG,EAAex8F,SAAS,GAAGA,SAAS,GACpCw8F,EAAex8F,SAAS,GAAKw8F,IAIzCxD,EAAatpE,UAAUiwE,kBAAoB,SAAUhxG,EAAM0lF,GACvD,IAAIqlB,EAAY/qG,EAAKnC,MACjBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAC3C,GAAI05F,EAAW,CACXj/E,GAAY9rB,EAAKL,MAAOkuG,EAAex8F,SAAS,IAChD,IAAI+/F,EAAuB9wE,GAA4ByqE,EAAUO,QAAQhwG,MACzEuyG,EAAex8F,SAAS,GAAGxb,KAAOu7G,OAEZ13G,IAAtBgsF,EAAY1tF,YAA8C0B,IAAvBgsF,EAAY3tF,QAC/C0H,KAAK8rG,sBAAsBvrG,EAAKnC,MAAMytG,QAASuC,EAAgBnoB,EAAY1tF,OAASgI,EAAKhI,MAAO0tF,EAAY3tF,QAAUiI,EAAKjI,SAInIsyG,EAAatpE,UAAUkwE,qBAAuB,SAAUjxG,EAAMy7B,EAAW1N,GACrE,IAAIg9E,EAAYtvE,EAAU59B,MACtBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAC3C,GAAI05F,EAAW,CACX,IAAIsG,EAAuBxD,EAAex8F,SAAS,GAC/CigG,EAAuBzD,EAAex8F,SAAS,GAMnD,QALwB3X,IAApB+hC,EAAU97B,QACVmsB,GAAY2P,EAAU97B,MAAOkuG,EAAex8F,SAAS,IACrDggG,EAAqB1xG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QAChDmlF,EAAqB3xG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,SAEhD4+E,EAAUU,WAAY,CACtB,OAAQV,EAAUU,WAAWnwG,MACzB,IAAK,OACD+1G,EAAqB1jF,SAAU,EAC/B,MACJ,IAAK,QACD0jF,EAAqB1xG,MAAM+X,KAAO,QAClC,MACJ,IAAK,SACD25F,EAAqB1xG,MAAM+X,KAAO,QAGF,SAApCqW,EAAUlwB,MAAM4tG,WAAWnwG,OAC3B+1G,EAAqB1jF,SAAU,QAEWj0B,IAA1C+hC,EAAU59B,MAAM4tG,WAAW11G,aAC3Bu7G,EAAqB3jF,QAAUo9E,EAAUU,WAAW11G,kBAIxC2D,IAApB+hC,EAAUzjC,YAA4C0B,IAArB+hC,EAAU1jC,QAC3C0H,KAAK8xG,0BAA0BvxG,EAAKnC,MAAM4tG,WAAYoC,EAAgBpyE,EAAUzjC,OAASgI,EAAKhI,MAAOyjC,EAAU1jC,QAAUiI,EAAKjI,SAItIsyG,EAAatpE,UAAUywE,SAAW,SAAUxxG,EAAM+tB,EAAWqpB,EAAOq6D,EAAQ7S,EAAQC,GAChF,OAAQznD,GACJ,IAAK,QACDwnD,EAAOjxE,SAAU,EACjB8jF,EAAO9xG,MAAMod,gBAAkB,GAC/B8hF,EAAOl/F,MAAM+X,KAAO,QACpBmnF,EAAOl/F,MAAMgY,YAAc,QAC3B85F,EAAO9xG,MAAM+X,KAAO,QACpB,MACJ,IAAK,uBACD+5F,EAAO9xG,MAAMod,gBAAkB,MAC/B8hF,EAAOl/F,MAAM+X,KAAO,QACpB+5F,EAAO9xG,MAAM+X,KAAO,QACpBmnF,EAAOl/F,MAAMgY,YAAc,QAC3BinF,EAAOjxE,SAAU,EACjB,MACJ,IAAK,eACD8jF,EAAO9xG,MAAMod,gBAAkB,GAC/B00F,EAAO9xG,MAAM+X,KAAO,QACpBknF,EAAOj/F,MAAMod,gBAAkB,GAC/B00F,EAAO9xG,MAAMutB,SAAW,KACxB2xE,EAAOl/F,MAAM+X,KAAO,QACpBmnF,EAAOl/F,MAAMgY,YAAc,QAC3BlY,KAAKiyG,sBAAsB3jF,EAAW6wE,GACtC,MACJ,IAAK,8BACD6S,EAAO9xG,MAAM+X,KAAO,QACpB+5F,EAAO9xG,MAAMutB,SAAW,KACxB2xE,EAAOl/F,MAAM+X,KAAO,QACpBmnF,EAAOl/F,MAAMgY,YAAc,QAC3B85F,EAAO9xG,MAAMod,gBAAkB,MAC/B6hF,EAAOj/F,MAAMod,gBAAkB,MAC/Btd,KAAKiyG,sBAAsB3jF,EAAW6wE,GACtC,MACJ,IAAK,uBACL,IAAK,MACD6S,EAAO9xG,MAAM+X,KAAiB,QAAV0/B,EAAkB,QAAU,QAChDq6D,EAAO9xG,MAAMod,gBAAkB,GAC/B6hF,EAAOj/F,MAAMod,gBAAkB,GAC/B00F,EAAO9xG,MAAMutB,SAAW,KACxB2xE,EAAOl/F,MAAM+X,KAAO,QACpBjY,KAAKiyG,sBAAsB3jF,EAAW6wE,GACtCC,EAAOl/F,MAAMgY,YAAc3X,EAAKL,MAAM+X,OAKlD2yF,EAAatpE,UAAU2wE,sBAAwB,SAAU3jF,EAAW6wE,GAC5D7wE,EAAUlwB,MAAMk7C,UAAYhrB,EAAUlwB,MAAMk7C,SAASD,YACrD/qB,EAAUlwB,MAAMk7C,SAASD,WAAW80D,aACcl0G,IAAlDq0B,EAAUlwB,MAAMk7C,SAASD,WAAW80D,OAAO,SACal0G,IAAxDq0B,EAAUlwB,MAAMk7C,SAASD,WAAW80D,OAAO,GAAGx2D,MACc,yBAAxDrpB,EAAUlwB,MAAMk7C,SAASD,WAAW80D,OAAO,GAAGx2D,OACU,UAAxDrpB,EAAUlwB,MAAMk7C,SAASD,WAAW80D,OAAO,GAAGx2D,QAC9CwnD,EAAOjxE,SAAU,QAGUj0B,IAA1Bq0B,EAAUlwB,MAAMu5C,QACe,yBAAhCrpB,EAAUlwB,MAAMu5C,MAAMA,OACU,UAAhCrpB,EAAUlwB,MAAMu5C,MAAMA,QACtBwnD,EAAOjxE,SAAU,KAK7B08E,EAAatpE,UAAUowE,gBAAkB,SAAUnxG,EAAMy7B,EAAW1N,GAChE,IAAIg9E,EAAYtvE,EAAU59B,MACtBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAC3C,GAAI05F,EAAW,CACX,IAGI4G,EAHAC,EAAuB/D,EAAex8F,SAAS,GAC/CggG,EAAuBxD,EAAex8F,SAAS,GAC/CigG,EAAuBzD,EAAex8F,SAAS,GAE/CgmC,OAAU,OACU39C,IAApB+hC,EAAU97B,QACVmsB,GAAY9rB,EAAKL,MAAOkuG,EAAex8F,SAAS,SAChB3X,IAA5B+hC,EAAU97B,MAAMwsB,cAAyDzyB,IAAhC+hC,EAAU97B,MAAMgY,cACzD05F,EAAqB1xG,MAAMwsB,QAAUnsB,EAAKL,MAAMwsB,QAChDklF,EAAqB1xG,MAAMgY,YAAc3X,EAAKL,MAAMgY,cAG5Dg6F,EAAU5G,EAAU3zD,MAAMA,MAC1BC,EAAU0zD,EAAU3zD,MAAMC,aACV39C,IAAZi4G,GACAlyG,KAAK+xG,SAASxxG,EAAM+tB,EAAW4jF,EAASC,EAAsBP,EAAsBC,QAExE53G,IAAZ29C,GACA53C,KAAKoyG,uBAAuB7xG,EAAMy7B,QAGlB/hC,IAApB+hC,EAAUzjC,YAA4C0B,IAArB+hC,EAAU1jC,QAC3C0H,KAAK+tG,qBAAqBxtG,EAAKnC,MAAMu5C,MAAOy2D,EAAgBpyE,EAAUzjC,OAASgI,EAAKhI,MAAOyjC,EAAU1jC,QAAUiI,EAAKjI,SAI5HsyG,EAAatpE,UAAU8wE,uBAAyB,SAAU7xG,EAAMy7B,GAC5D,IAAIsvE,EAAY/qG,EAAKnC,MACjBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,IACnDoqB,EAAU97B,YACuBjG,IAAhC+hC,EAAU97B,MAAMgY,kBAAyDje,IAA5B+hC,EAAU97B,MAAMwsB,SAC9DL,GAAY9rB,EAAKL,MAAOkuG,GAE5B,IAAIiE,EAAuB1xE,GAA4B2qE,EAAU3zD,MAAMC,SACvEw2D,EAAeh4G,KAAOi8G,GAG1BzH,EAAatpE,UAAUmwE,mBAAqB,SAAUlxG,EAAMy7B,EAAW1N,EAAWpvB,GAC9E,IAAIosG,EAAYtvE,EAAU59B,MACtBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GACvC2f,EAAOvxB,KAAK8qG,QAAQvqG,EAAM6tG,EAAex8F,SAAS,GAAGA,SAAS,IAClE,GAAI05F,EAAW,CACX,IAAInvD,EAAU7tB,EAAUlwB,MAAMk7C,SAASA,SACnCg5D,EAAmB/xG,EAAKnC,MAAMk7C,SAASA,SAC3C,GAAiB,eAAZ6C,GAAwC,SAAZA,GAA6C,eAArBm2D,GAA0D,SAArBA,EAIzF,CACD,GAAyB,SAArBA,QAA2Dr4G,IAA5BqxG,EAAUhyD,SAAS+yD,KAAoB,CACtErsG,KAAKuyG,uBAAuBhyG,EAAMy7B,GAClC,IAAI0yE,EAAgB1uG,KAAKysG,kBAAkBlsG,GACvCvJ,OAAI,EACJ01G,EAA6B,GAAhBgC,EACb/B,EAAOp7E,EAAKh5B,MAAQ,EAAIm0G,EAExB11G,EADkB,IAAlB03G,EACI/B,EAAO,EAGPA,EAA6B,GAArB+B,EAAgB,QAEKz0G,IAAjCqxG,EAAUhyD,SAAS+yD,KAAKW,MACxBhtG,KAAKwyG,2BAA2BjyG,EAAMy7B,EAAWhlC,EAAG03G,EAAe/B,EAAM,GAGxD,eAArB2F,QAAuEr4G,IAAlCqxG,EAAUhyD,SAASD,YACxDr5C,KAAKyyG,6BAA6BlyG,EAAMy7B,EAAW1N,EAAWpvB,QArBlEA,EAAQ0uF,eAAertF,GACvBA,EAAKuN,QAAQ8D,SAAS,GAAK5R,KAAKmrG,qBAAqB5qG,GAuBzDP,KAAK0yG,uBAAuBnyG,EAAKnC,MAAMk7C,SAAU80D,EAAgBpyE,EAAUzjC,OAASg5B,EAAKh5B,MAAOyjC,EAAU1jC,QAAUi5B,EAAKj5B,OAAQiI,QAE7GtG,IAApB+hC,EAAUzjC,YAA4C0B,IAArB+hC,EAAU1jC,QAC3C0H,KAAK0yG,uBAAuBnyG,EAAKnC,MAAMk7C,SAAU80D,EAAgBpyE,EAAUzjC,OAASg5B,EAAKh5B,MAAOyjC,EAAU1jC,QAAUi5B,EAAKj5B,OAAQiI,IAIzIqqG,EAAatpE,UAAUixE,uBAAyB,SAAUhyG,EAAMy7B,GAC5D,IAAIsvE,EAAYtvE,EAAU59B,MACtBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GACnDy6F,EAAOf,EAAUhyD,SAAS+yD,KAO9B,GANkB,YAAdA,EAAKxwG,MAAoC,SAAdwwG,EAAKxwG,KAChCuyG,EAAex8F,SAAS,GAAGtZ,OAAS,GAGpC81G,EAAex8F,SAAS,GAAGtZ,OAAS,QAEtB2B,IAAdoyG,EAAKxwG,KAAoB,CACzB,IAAI82G,EAAoB5xE,GAAyBsrE,EAAKxwG,MACtDuyG,EAAex8F,SAAS,GAAGxb,KAAOu8G,OAED14G,IAAjCqxG,EAAUhyD,SAAS+yD,KAAKjlE,QACa,IAAjCkkE,EAAUhyD,SAAS+yD,KAAKjlE,KACxBgnE,EAAex8F,SAAS,GAAG1R,MAAMiY,YAAc,EAG/Ci2F,EAAex8F,SAAS,GAAG1R,MAAMiY,YAAc,QAGVle,IAAzCqxG,EAAUhyD,SAAS+yD,KAAKe,gBACqB,IAAzC9B,EAAUhyD,SAAS+yD,KAAKe,aACxBgB,EAAex8F,SAAS,GAAGsc,SAAU,EAGrCkgF,EAAex8F,SAAS,GAAGsc,SAAU,IAKjD08E,EAAatpE,UAAUkxE,2BAA6B,SAAUjyG,EAAMy7B,EAAWhlC,EAAG03G,EAAe/B,EAAM5nF,GACnG,IAGIioF,EAEA4F,EALAtH,EAAYtvE,EAAU59B,MACtBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GACnD0nC,EAAWgyD,EAAUhyD,SAErB55B,EAAQ,EAEZ,QAA4BzlB,IAAxBq/C,EAASD,WAA0B,CACnC,IAAIA,EAAaC,EAASD,WAC1B35B,EAAsC,gBAA7B45B,EAASD,WAAWx9C,KAA0B,EAAI,EAE3D+2G,EAAoB3xE,GADpB+rE,EAAO3zD,EAAW2zD,MAElBoB,EAAex8F,SAAS,EAAI8N,GAAOtpB,KAAOw8G,EAC1CxE,EAAex8F,SAAS,EAAI8N,GAAOwO,QAAoB,SAAT8+E,YAEvB/yG,IAAlBq/C,EAAS+yD,WAA6CpyG,IAAvBq/C,EAAS+yD,KAAKW,OAClD4F,EAAoB3xE,GAAyBqY,EAAS+yD,KAAKW,MAC3DoB,EAAex8F,SAAS,GAAGxb,KAAOw8G,EAClCxE,EAAex8F,SAAS,GAAGsc,QAAkC,SAAvBorB,EAAS+yD,KAAKW,MAExDhtG,KAAK6yG,kBAAkBzE,EAAgBM,EAAe/B,EAAM31G,EAAG+tB,EAAQrF,IAG3EkrF,EAAatpE,UAAUuxE,kBAAoB,SAAUzE,EAAgBM,EAAe/B,EAAM31G,EAAG+tB,GACzF,GAAsB,IAAlB2pF,EACA,IAAK,IAAIh4G,EAAIquB,EAAOruB,EAAI03G,EAAex8F,SAASnb,OAAQC,IAC1C,IAANA,IAAkD,IAAvC03G,EAAex8F,SAASlb,GAAGw3B,UACtCkgF,EAAex8F,SAASlb,GAAGiM,OAAOC,KAAO5L,EACzCA,EAAI21G,EAAO,OAIlB,CACD31G,EAAI21G,EAA6B,GAArB+B,EAAgB,GAC5B,IAASh4G,EAAIquB,EAAOruB,EAAI03G,EAAex8F,SAASnb,OAAQC,IAC1C,IAANA,IAAkD,IAAvC03G,EAAex8F,SAASlb,GAAGw3B,UACtCkgF,EAAex8F,SAASlb,GAAGiM,OAAOC,KAAO5L,EACzCA,GAAK,MAMrB4zG,EAAatpE,UAAUmxE,6BAA+B,SAAUlyG,EAAMy7B,EAAW1N,EAAWpvB,GACxF,IAKIlI,EALAs0G,EAAYtvE,EAAU59B,MACtBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GACvC2f,EAAOvxB,KAAK8qG,QAAQvqG,EAAM6tG,EAAex8F,SAAS,GAAGA,SAAS,IAC9DynC,EAAaiyD,EAAUhyD,SAASD,WAChCq1D,EAAgB1uG,KAAK2uG,wBAAwBpuG,GAE7CmsG,EAA6B,GAAhBgC,EACb/B,EAAOp7E,EAAKh5B,MAAQ,EAAIm0G,EAExB11G,EADkB,IAAlB03G,EACI/B,EAAO,EAGPA,EAA6B,GAArB+B,EAAgB,GAEhCriF,GAAY9rB,EAAKL,MAAOkuG,EAAex8F,SAAS,GAAGA,SAAS,SAClC3X,IAAtBo/C,EAAW80D,QACXnuG,KAAK8yG,0BAA0BvyG,EAAMy7B,EAAW1N,EAAWpvB,QAEtCjF,IAArBo/C,EAAWg1D,OACXruG,KAAK+yG,0BAA0BxyG,EAAM+tB,EAAW+qB,EAAYriD,EAAG03G,EAAe/B,QAEtD1yG,IAAxBo/C,EAAW61D,UACXlvG,KAAKgzG,6BAA6BzyG,EAAM84C,QAEfp/C,IAAzBo/C,EAAWI,WACXz5C,KAAKizG,8BAA8B1yG,EAAM+tB,EAAW+qB,EAAYriD,EAAG03G,EAAe/B,EAAMztG,QAE5DjF,IAA5Bo/C,EAAW+zD,cACXptG,KAAKkzG,iCAAiC3yG,EAAM+tB,EAAW+qB,EAAYriD,EAAG03G,EAAe/B,QAEjE1yG,IAApBo/C,EAAW2zD,MACXhtG,KAAKmzG,yBAAyB5yG,EAAM+tB,EAAW+qB,EAAYriD,EAAG03G,EAAe/B,QAElD1yG,IAA3Bo/C,EAAW8yB,aACXnsE,KAAKozG,gCAAgC7yG,EAAMy7B,EAAW1N,EAAWpvB,IAIzE0rG,EAAatpE,UAAUwxE,0BAA4B,SAAUvyG,EAAMy7B,EAAW1N,EAAWpvB,GAUrF,IAAK,IATDosG,EAAYtvE,EAAU59B,MACtBgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GACvCo/F,EAAc5C,EAAex8F,SAAS,GAItCynC,GADyB+0D,EAAex8F,SAAS,GAAGA,SAASnb,OAChD60G,EAAUhyD,SAASD,YAG3Bx8C,EAAK,EAAG6f,EAAKC,OAAOC,KAAKy8B,EAAW80D,QAAStxG,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACxE,IAAIqwB,EAAMxQ,EAAG7f,GACTw2G,EAAal7G,OAAO+0B,GACpBomF,EAAetC,EAAYp/F,SAASyhG,EAJhC,GAKJE,EAAchzG,EAAKnC,MAAMk7C,SAASD,WAAW80D,OAAOkF,GACxDrzG,KAAKwzG,mBAAmBjzG,EAAM84C,EAAW80D,OAAOkF,GAAaE,EAAaD,EAAct3E,EAAW1N,EAAWpvB,KAGtH0rG,EAAatpE,UAAUkyE,mBAAqB,SAAUjzG,EAAMkzG,EAAUF,EAAaD,EAAct3E,EAAW1N,EAAWpvB,GACnH,IAKIw0G,EACA97D,EANAw2D,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GACvC05F,EAAYtvE,EAAU59B,MACtB4zG,EAASsB,EAAa1hG,SAAS,GAC/ButF,EAASmU,EAAa1hG,SAAS,GAC/BwtF,EAASkU,EAAa1hG,SAAS,GAgBnC,GAbIoqB,EAAU97B,aAC0BjG,IAAhC+hC,EAAU97B,MAAMgY,kBAAyDje,IAA5B+hC,EAAU97B,MAAMwsB,UAC7D0hF,EAAex8F,SAAS,GAAGA,SAAS,GAAG1R,MAAMgY,YAAc8jB,EAAU97B,MAAMgY,YAC3Ek2F,EAAex8F,SAAS,GAAGA,SAAS,GAAG1R,MAAMwsB,QAAUsP,EAAU97B,MAAMwsB,eAGzCzyB,IAAlCqxG,EAAUhyD,SAASD,aACnBq6D,EAAYD,EAAS97D,MACrBC,EAAU67D,EAAS77D,cAEL39C,IAAdy5G,GACA1zG,KAAK+xG,SAAS/1E,EAAW1N,EAAWolF,EAAW1B,EAAQ7S,EAAQC,QAEnDnlG,IAAZ29C,EAAuB,CACnB5b,EAAU97B,OACVmsB,GAAY2P,EAAU97B,MAAOkuG,EAAex8F,SAAS,IAEzD,IAAIygG,EAAuB1xE,GAA4BiX,GACvD07D,EAAa1hG,SAAS,GAAGxb,KAAOi8G,EAqBpC,QAnBwBp4G,IAApBw5G,EAASn7G,aAA2C2B,IAAnBw5G,EAASl7G,OAC1CyH,KAAK2zG,aAAaF,EAAUH,QAEZr5G,IAAhBw5G,EAAS5zG,KACTyzG,EAAazzG,GAAK4zG,EAAS5zG,SAEP5F,IAApBw5G,EAAS9wG,SACT2wG,EAAa3wG,OAAS8wG,EAAS9wG,aAEE1I,IAAjCw5G,EAAS36F,sBACTw6F,EAAax6F,oBAAsB26F,EAAS36F,0BAEb7e,IAA/Bw5G,EAAS56F,oBACTy6F,EAAaz6F,kBAAoB46F,EAAS56F,wBAEtB5e,IAApBw5G,EAAS/jG,SACT4jG,EAAaluE,6BAA6BmuE,EAAY7jG,OAAO1Y,EAAGu8G,EAAY7jG,OAAOzY,EAAG,YACtFq8G,EAAatrF,aAAe,cAEH/tB,IAAzBw5G,EAASn7F,YAA2B,CACpC,IAAIA,OAAc,EACdgQ,EAAa8lF,EAAex8F,SAAS,GAAGA,SAAS,GACjD0hG,EAAa1hG,SAAS,IAAM0hG,EAAa1hG,SAASnb,OAAS,IAC3D6hB,EAAcg7F,EAAa1hG,SAAS,GACpC1S,EAAQqxC,iBAAiBkjE,EAASn7F,YAAY,GAAIA,EAAagQ,IAGvE,QAAuBruB,IAAnBw5G,EAAShhF,MAAqB,CAC9B,IAAIA,OAAQ,EACRtvB,EAAOirG,EAAex8F,SAAS,GAAGA,SAAS,GAC3C0hG,EAAa1hG,SAAS,IAAM0hG,EAAa1hG,SAASnb,OAAS,IAC3Dg8B,EAAQ6gF,EAAa1hG,SAAS,GAC9B1S,EAAQy9F,WAAW8W,EAAShhF,MAAM,GAAIA,EAAOtvB,SAG5BlJ,IAArBw5G,EAASvlF,SACTluB,KAAKy4F,iCAAiC6a,EAAcG,EAASvlF,UAGrE08E,EAAatpE,UAAU8xE,gCAAkC,SAAU7yG,EAAMy7B,EAAW1N,EAAWpvB,GAC3F,IAEIq0G,EAFApnC,EAAcnwC,EAAU59B,MAAMk7C,SAASD,WAAW8yB,YAClDkjC,EAAiB9uG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GAAGA,SAAS,QAEvC3X,IAAxBkyE,EAAYC,UACZmnC,EAAchzG,EAAKnC,MAAMk7C,SAASD,WAAW8yB,YAAYC,QACzDpsE,KAAKwzG,mBAAmBjzG,EAAM4rE,EAAYC,QAASmnC,EAAalE,EAAez9F,SAAS,GAAIoqB,EAAW1N,EAAWpvB,SAE3FjF,IAAvBkyE,EAAY7V,SACZi9C,EAAchzG,EAAKnC,MAAMk7C,SAASD,WAAW8yB,YAAY7V,OACzDt2D,KAAKwzG,mBAAmBjzG,EAAM4rE,EAAY7V,OAAQi9C,EAAalE,EAAez9F,SAAS,GAAIoqB,EAAW1N,EAAWpvB,SAEzFjF,IAAxBkyE,EAAYE,UACZknC,EAAchzG,EAAKnC,MAAMk7C,SAASD,WAAW8yB,YAAYE,QACzDrsE,KAAKwzG,mBAAmBjzG,EAAM4rE,EAAYE,QAASknC,EAAalE,EAAez9F,SAAS,GAAIoqB,EAAW1N,EAAWpvB,IAEtH,IAAK,IAAIrC,EAAK,EAAG6f,EAAKnc,EAAKm4C,SAAU77C,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAIkzE,EAAOrzD,EAAG7f,GACV+O,EAAY1M,EAAQ0b,UAAUm1D,GAClC,OAAQnkE,EAAUs0B,cACd,IAAK,UACGisC,EAAYC,cAA2CnyE,IAAhCkyE,EAAYC,QAAQl+C,SAC3ChvB,EAAQ2sE,wBAAwBjgE,MAAiBs0B,aAAc,YAEnE,MACJ,IAAK,SACGisC,EAAY7V,aAAyCr8D,IAA/BkyE,EAAY7V,OAAOpoC,SACzChvB,EAAQ2sE,wBAAwBjgE,MAAiBs0B,aAAc,WAEnE,MACJ,IAAK,UACGisC,EAAYE,cAA2CpyE,IAAhCkyE,EAAYE,QAAQn+C,SAC3ChvB,EAAQ2sE,wBAAwBjgE,MAAiBs0B,aAAc,eAOnF0qE,EAAatpE,UAAUqyE,aAAe,SAAUxF,EAAQyF,QAC9B35G,IAAlBk0G,EAAO71G,SACPs7G,EAAat7G,OAAS61G,EAAO71G,OAC7Bs7G,EAAahiG,SAAS,GAAGtZ,OAAS61G,EAAO71G,OACzCs7G,EAAahiG,SAAS,GAAGtZ,OAAyB,IAAhB61G,EAAO71G,OACzCs7G,EAAahiG,SAAS,GAAGtZ,OAAyB,IAAhB61G,EAAO71G,aAExB2B,IAAjBk0G,EAAO51G,QACPq7G,EAAar7G,MAAQ41G,EAAO51G,MAC5Bq7G,EAAahiG,SAAS,GAAGrZ,MAAQ41G,EAAO51G,MACxCq7G,EAAahiG,SAAS,GAAGrZ,MAAuB,IAAf41G,EAAO51G,MACxCq7G,EAAahiG,SAAS,GAAGrZ,MAAuB,IAAf41G,EAAO51G,QAIhDqyG,EAAatpE,UAAUyxE,0BAA4B,SAAUxyG,EAAM+tB,EAAW+qB,EAAYriD,EAAG03G,EAAe/B,GAC5FpsG,EAAKnC,MAAjB,IACIgwG,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GACnD8N,EAAiD,gBAAxCnf,EAAKnC,MAAMk7C,SAASD,WAAWx9C,KAA0B,EAAI,GACjD,IAArBw9C,EAAWg1D,MACXD,EAAex8F,SAAS,EAAI8N,GAAOwO,SAAU,EAG7CkgF,EAAex8F,SAAS,EAAI8N,GAAOwO,SAAU,EAEjDluB,KAAK6yG,kBAAkBzE,EAAgBM,EAAe/B,EAAM31G,EAAG,EAAI0oB,IAGvEkrF,EAAatpE,UAAU0xE,6BAA+B,SAAUzyG,EAAM84C,GACtD94C,EAAKnC,MAAjB,IACIgwG,EAAkB7tG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GACxC,YAAxBynC,EAAW61D,WACXd,EAAeluG,MAAMiY,YAAc,EACnCi2F,EAAeluG,MAAMod,gBAAkB,OAEf,SAAxB+7B,EAAW61D,WACXd,EAAeluG,MAAMiY,YAAc,EACnCi2F,EAAeluG,MAAMod,gBAAkB,OAEf,UAAxB+7B,EAAW61D,WACXd,EAAeluG,MAAMiY,YAAc,EACnCi2F,EAAeluG,MAAMod,gBAAkB,QAI/CstF,EAAatpE,UAAUoY,wBAA0B,SAAUn5C,EAAM2tB,EAAShvB,GACtE,GAAIqB,EAAKnC,MAAMk7C,SAASD,WAAWE,WAC5Bh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UAAU9iD,OAAS,EAErD,IAAK,IADD8iD,EAAYh5C,EAAKnC,MAAMk7C,SAASD,WAAWE,UACtCljD,EAAIkjD,EAAU9iD,OAAS,EAAGJ,GAAK,EAAGA,IAAK,CAC5C,IAAIw9G,EAAc30G,EAAQ0b,UAAU2+B,EAAUljD,IAC9Cw9G,EAAY3lF,QAAUA,EACtBhvB,EAAQw6C,wBAAwBm6D,EAAY/lG,QAAS+lG,EAAa3lF,GAC9DA,IACgC,UAA5B2lF,EAAYz1G,MAAMA,OAClB4B,KAAKguG,mBAAmB6F,EAAaA,EAAY/lG,QAAQ8D,SAAS,GAAGA,UAE7B,eAAxCiiG,EAAYz1G,MAAMk7C,SAASA,UAC3Bt5C,KAAKiuG,wBAAwB4F,IAIrC,IAAK,IADD32F,EAAa22F,EAAYl7D,QAAQxc,OAAO03E,EAAYn7D,UAC/ChiD,EAAIwmB,EAAWzmB,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC7C,IAAIkV,EAAY1M,EAAQ0b,UAAUsC,EAAWxmB,IAC7CkV,EAAUsiB,QAAUA,EACpBhvB,EAAQw6C,wBAAwB9tC,EAAUkC,QAASlC,EAAWsiB,IAItEA,IACyB,UAArB3tB,EAAKnC,MAAMA,OACX4B,KAAKguG,mBAAmBztG,EAAMA,EAAKuN,QAAQ8D,SAAS,GAAGA,UAEtB,eAAjCrR,EAAKnC,MAAMk7C,SAASA,UACpBt5C,KAAKiuG,wBAAwB1tG,GAEI,SAAjCA,EAAKnC,MAAMk7C,SAASA,UACC,aAArB/4C,EAAKnC,MAAMA,OAAgE,SAAxCmC,EAAKnC,MAAMk7C,SAASD,WAAW2zD,OAClEzsG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGsc,SAAU,KAKvE08E,EAAatpE,UAAU2xE,8BAAgC,SAAU1yG,EAAM+tB,EAAW+qB,EAAYriD,EAAG03G,EAAe/B,EAAMztG,GAClH,IAAIgvG,EAAc3tG,EAAKnC,MAAMk7C,SAASD,WAAW80D,OAAO13G,OACpD23G,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GACnD8N,EAAiD,gBAAxCnf,EAAKnC,MAAMk7C,SAASD,WAAWx9C,KAA0B,EAAI,GAC7C,IAAzBw9C,EAAWI,WACXz5C,KAAK05C,wBAAwBn5C,GAAM,EAAMrB,GACzCkvG,EAAex8F,SAAS8N,EAAQwuF,GAAahgF,SAAU,IAGvDluB,KAAK05C,wBAAwBn5C,GAAM,EAAOrB,GAC1CkvG,EAAex8F,SAAS8N,EAAQwuF,GAAahgF,SAAU,GAE3DluB,KAAK6yG,kBAAkBzE,EAAgBM,EAAe/B,EAAM31G,EAAG,EAAIk3G,IAGvEtD,EAAatpE,UAAU4xE,iCAAmC,SAAU3yG,EAAM+tB,EAAW+qB,EAAYriD,EAAG03G,EAAe/B,GAC/G,IAAIyB,EAAiB7tG,EAAKuN,QAAQ8D,SAAS,GAAGA,SAAS,GACnD8N,EAAiD,gBAAxCnf,EAAKnC,MAAMk7C,SAASD,WAAWx9C,KAA0B,EAAI,GAC1C,IAA5Bw9C,EAAW+zD,aACXgB,EAAex8F,SAAS,EAAI8N,GAAOwO,SAAU,EAG7CkgF,EAAex8F,SAAS,EAAI8N,GAAOwO,SAAU,EAEjDluB,KAAK6yG,kBAAkBzE,EAAgBM,EAAe/B,EAAM31G,EAAG,EAAI0oB,IAGvEkrF,EAAatpE,UAAU6xE,yBAA2B,SAAU5yG,EAAM+tB,EAAW+qB,EAAYriD,EAAG03G,EAAe/B,GACvG3sG,KAAKwyG,2BAA2BjyG,EAAMA,EAAMvJ,EAAG03G,EAAe/B,EAAM,IAGxE/B,EAAatpE,UAAU07D,oBAAsB,SAAU7/E,EAAcmR,EAAW49C,EAAYhtE,GACxF,IAAI40G,EAAW5nC,EAAW9tE,MAU1B,YAT0BnE,IAAtB65G,EAASC,WACT52F,EAAend,KAAKg0G,YAAY72F,EAAcmR,EAAW49C,EAAYhtE,SAE5CjF,IAAzB65G,EAASG,cACT92F,EAAend,KAAKk0G,eAAe/2F,EAAcmR,EAAW49C,EAAYhtE,SAEnDjF,IAArB65G,EAASK,UACTh3F,EAAend,KAAKo0G,WAAWj3F,EAAcmR,EAAW49C,EAAYhtE,IAEjEie,GAGXytF,EAAatpE,UAAU0yE,YAAc,SAAU72F,EAAcmR,EAAW49C,EAAYhtE,GAQhF,GAPoC,WAA/BgtE,EAAW9tE,MAAc,WAC1Bc,EAAQ2sE,wBAAwB1uD,EAAcmR,GAC1CzyB,KAAM,WACNkW,iBAAmB3T,MAAO,QAAS8B,OAAS+X,KAAM,YAEtDkF,EAAarP,QAAQ8D,SAAS,GAAGsc,SAAU,GAEX,YAA/Bg+C,EAAW9tE,MAAc,SAAiB,CAC3Cc,EAAQ2sE,wBAAwB1uD,EAAcmR,GAC1CzyB,KAAM,WACNkW,iBAAmB3T,MAAO,QAAS8B,OAAS+X,KAAM,UAClDpG,iBAAmBzT,MAAO,UAE9B,IAAI9D,EAAU,IAAI+T,GAEdihC,GADU,IAAIjhC,QACA,GAClB/T,EAAU6iB,EAAa2wB,kBAAkB3wB,EAAc7iB,GAEvD,IAAK,IADDi0C,EAAcpxB,EAAawI,mBACtBtvB,EAAI,EAAGA,EAAIk4C,EAAY93C,OAAS,EAAGJ,IACxCI,QAAkB0mB,EAAa7X,SAASipC,EAAYl4C,GAAIk4C,EAAYl4C,EAAI,IACxEi5C,EAAcnyB,EAAaqyB,SAASjB,EAAYl4C,GAAIk4C,EAAYl4C,EAAI,IAExE8mB,EAAarP,QAAQ8D,SAAS,GAAGxb,KAAOk5C,EAAY,GACpDnyB,EAAarP,QAAQ8D,SAAS,GAAG/R,GAAKsd,EAAatd,GAAK,IAAOqsE,EAAW9tE,MAAc,SACxF+e,EAAarP,QAAQ8D,SAAS,GAAG7V,QAAUuzC,EAAY,GAAGt4C,EAC1DmmB,EAAarP,QAAQ8D,SAAS,GAAG5V,QAAUszC,EAAY,GAAGr4C,EAC1DkmB,EAAarP,QAAQ8D,SAAS,GAAGvF,YAAc,GAC/C8Q,EAAarP,QAAQ8D,SAAS,GAAGnM,UAAYw+B,YAAUU,KAU3D,MARoC,gBAA/BunC,EAAW9tE,MAAc,WAC1Bc,EAAQ2sE,wBAAwB1uD,EAAcmR,GAC1CzyB,KAAM,WACNkW,iBAAmB3T,MAAO,QAAS8B,OAAS+X,KAAM,UAClDpG,iBAAmBzT,MAAO,UAAW7F,MAAO,GAAID,OAAQ,GAAI4H,OAAS+X,KAAM,YAE/EkF,EAAarP,QAAQ8D,SAAS,GAAGsc,SAAU,GAExC/Q,GAGXytF,EAAatpE,UAAU4yE,eAAiB,SAAU/2F,EAAcmR,EAAW49C,EAAYhtE,GAsBnF,MArBuC,YAAlCgtE,EAAW9tE,MAAiB,aAC7Bc,EAAQ2sE,wBAAwB1uD,EAAcmR,GAC1CzyB,KAAM,WAAYqE,OAASod,gBAAiB,QAC5CvL,iBAAmB3T,MAAO,QAAS8B,OAAS+X,KAAM,UAClDpG,iBAAmBzT,MAAO,UAGK,gBAAlC8tE,EAAW9tE,MAAiB,aAC7Bc,EAAQ2sE,wBAAwB1uD,EAAcmR,GAC1CzyB,KAAM,WAAYqE,OAASod,gBAAiB,OAC5CvL,iBAAmB3T,MAAO,QAAS8B,OAAS+X,KAAM,UAClDpG,iBAAmBzT,MAAO,UAGK,kBAAlC8tE,EAAW9tE,MAAiB,aAC7Bc,EAAQ2sE,wBAAwB1uD,EAAcmR,GAC1CzyB,KAAM,WAAYqE,OAASod,gBAAiB,OAC5CvL,iBAAmB3T,MAAO,QAAS8B,OAAS+X,KAAM,UAClDpG,iBAAmBzT,MAAO,QAAS7F,MAAO,EAAGD,OAAQ,GAAI4H,OAAS+X,KAAM,YAGzEkF,GAGXytF,EAAatpE,UAAU8yE,WAAa,SAAUj3F,EAAcmR,EAAW49C,EAAYhtE,GAC/E,IACI1H,EACAoE,EACJ,GAAkC,YAA7B0yB,EAAUlwB,MAAa,SACxB,QAAmCnE,IAA9BiyE,EAAW9tE,MAAa,QAAiB,CAC1C,GAAoC,sBAA9B8tE,EAAW9tE,MAAa,SACM,yBAA9B8tE,EAAW9tE,MAAa,QAA+B,CACzD,IAAI9D,EAAU,IAAI+T,GAClB/T,EAAU6iB,EAAa2wB,kBAAkB3wB,EAAc7iB,GAEvD,IAAK,IADDi0C,EAAcpxB,EAAawI,mBACtBtvB,EAAI,EAAGA,EAAIk4C,EAAY93C,OAAS,EAAGJ,IAAK,CAC7CI,QAAkB0mB,EAAa7X,SAASipC,EAAYl4C,GAAIk4C,EAAYl4C,EAAI,IACxE,IAAIg+G,EAZA,GAYY59G,OACZA,QAAU49G,IACV78G,EAAQ0V,EAAUqhC,EAAYl4C,GAAIk4C,EAAYl4C,EAAI,IAClDuF,EAAKuJ,GAAMM,UAAU8oC,EAAYl4C,GAAImB,EAAO68G,KAIxDl3F,EAAarP,QAAQ8D,SAAS,GAAG/R,GAAKsd,EAAatd,GAAK,IAAOqsE,EAAW9tE,MAAa,QACvF+e,EAAarP,QAAQ8D,SAAS,GAAGrZ,MAAQ,GACzC4kB,EAAarP,QAAQ8D,SAAS,GAAGtZ,OAAS,GAC1C6kB,EAAarP,QAAQ8D,SAAS,GAAGxb,KAAO,yDACxC+mB,EAAarP,QAAQ8D,SAAS,GAAGkH,oBAAsB,SACvDqE,EAAarP,QAAQ8D,SAAS,GAAGiH,kBAAoB,SACrDsE,EAAarP,QAAQ8D,SAAS,GAAGnM,UAAYw+B,YAAUU,KACvDxnB,EAAarP,QAAQ8D,SAAS,GAAG1R,MAAM+X,KAAsC,yBAA9Bi0D,EAAW9tE,MAAa,QACnE,YAAc,QAClB+e,EAAarP,QAAQ8D,SAAS,GAAG7V,QAAUH,EAAG5E,EAC9CmmB,EAAarP,QAAQ8D,SAAS,GAAG5V,QAAUJ,EAAG3E,OAGf,yBAA7Bq3B,EAAUlwB,MAAa,SACC,sBAA7BkwB,EAAUlwB,MAAa,UACW,YAA9B8tE,EAAW9tE,MAAa,QACzB+e,EAAarP,QAAQ8D,SAAS,GAAG1R,MAAM+X,KAAsC,yBAA9Bi0D,EAAW9tE,MAAa,QACnE,YAAc,QAGlB+e,EAAarP,QAAQ8D,SAAS,GAAGsc,SAAU,GAGnD,OAAO/Q,GAIXytF,EAAatpE,UAAUysE,qBAAuB,SAAUp2D,EAAO7pC,EAASvV,EAAOD,GAC3EwV,EAAQ8D,SAAS,GAAGrZ,MAAQA,EAC5BuV,EAAQ8D,SAAS,GAAGtZ,OAASA,EAE7B,IAAIg8G,EAAYxmG,EAAQ8D,SAAS,GACjC0iG,EAAU/7G,MAAgB,IAARA,EAClB+7G,EAAUh8G,OAAkB,IAATA,EACnB,IAAIu1G,EAAc//F,EAAQ8D,SAAS,GACb,YAAlB+lC,EAAMC,SACNi2D,EAAYt1G,MAAgB,IAARA,EACpBs1G,EAAYv1G,OAAkB,GAATA,IAGrBu1G,EAAYt1G,MAAgB,GAARA,EACpBs1G,EAAYv1G,OAAkB,GAATA,IAI7BsyG,EAAatpE,UAAU0qD,qBAAuB,SAAUzrF,EAAMrB,EAASqzC,EAAIC,GACvE,IAAI89B,EAAkB/vE,EAAKV,GAAGyO,MAAM,KACpC,GAA2B,mBAAvBgiE,EAAgB,GAEhB,IAAK,IADD9yD,OAAa,EACRnnB,EAAI,EAAGA,EAAIkK,EAAKo4C,QAAQliD,OAAQJ,IAAK,CAC1C,IAAIuV,EAAY1M,EAAQ0b,UAAUra,EAAKo4C,QAAQtiD,IAC3CuV,IACA4R,EAAate,EAAQ0b,UAAUhP,EAAUnK,WAE7C,IAAIsjB,GAAU/tB,EAAGuJ,EAAKxE,QAAUw2C,EAAIt7C,EAAGsJ,EAAKvE,QAAUw2C,GAClDxtB,EAAMpZ,EAAU7K,YAChBkK,EAAW9F,GAAMmI,WAAWyX,EAAOC,GACnCxtB,EAAQ2N,GAAM+H,UAAU8X,EAAKD,GACjC,GAAIvH,EAAWpf,MAAMka,YACjB,IAAK,IAAIthB,EAAI,EAAGA,EAAKwmB,EAAWpf,MAAiB,YAAE3H,OAAQO,IACvD,GAAKwmB,EAAWpf,MAAiB,YAAEpH,GAAG6I,KAAOywE,EAAgBA,EAAgB75E,OAAS,GAIlF,OAHC+mB,EAAWpf,MAAMka,YAAYthB,GAAIP,OAASwU,EAC1CuS,EAAWpf,MAAMka,YAAYthB,GAAIQ,MAAQA,EAC1CwI,KAAKwwG,kBAAkBhzF,EAAW1P,QAAQtM,OAAQjB,EAAKuN,QAASiX,EAAOxkB,IAChE,EAM3B,QAAIA,EAAKi4C,YACLx4C,KAAKmb,KAAK5a,EAAMgyC,EAAIC,EAAItzC,IACjB,IAIf0rG,EAAatpE,UAAU4vE,uBAAyB,SAAUv1G,EAAO6F,GAC7D,IACI6K,EAAc,EAClB,OAFgB/K,GAAiB3F,EAAO6F,EAAQA,IAG5C,IAAK,QACD6K,EAAc,EACd,MACJ,IAAK,OACDA,EAAc,IACd,MACJ,IAAK,SACDA,EAAc,GACd,MACJ,IAAK,MACDA,EAAc,IAGtB,OAAOA,GAEXu+F,EAAatpE,UAAUwqE,sBAAwB,SAAUn0D,EAAO7pC,EAASvV,EAAOD,GAC5EwV,EAAQ8D,SAAS,GAAGrZ,MAAQA,EAC5BuV,EAAQ8D,SAAS,GAAGtZ,OAASA,EAC7BwV,EAAQ8D,SAAS,GAAGrZ,MAAgB,IAARA,EAC5BuV,EAAQ8D,SAAS,GAAGtZ,OAAkB,IAATA,GAEjCsyG,EAAatpE,UAAUwwE,0BAA4B,SAAUn6D,EAAO7pC,EAASvV,EAAOD,GAChFwV,EAAQ8D,SAAS,GAAGrZ,MAAQA,EAC5BuV,EAAQ8D,SAAS,GAAGtZ,OAASA,GAEjCsyG,EAAatpE,UAAUoxE,uBAAyB,SAAUp5D,EAAUxrC,EAASvV,EAAOD,EAAQiI,GAExFuN,EAAQ8D,SAAS,GAAGrZ,MAAQA,EAC5BuV,EAAQ8D,SAAS,GAAGtZ,OAASA,EAC7BwV,EAAQ8D,SAAS,GAAGA,SAAS,GAAGrZ,MAAQA,EACxCuV,EAAQ8D,SAAS,GAAGA,SAAS,GAAGtZ,OAASA,EACR,gBAA7BghD,EAASD,WAAWx9C,OACpBiS,EAAQ8D,SAAS,GAAGA,SAAS,GAAGrZ,MAAQkE,KAAK+I,IAAIjN,EAAQ,EAAG,GAC5DuV,EAAQ8D,SAAS,GAAGA,SAAS,GAAGtZ,OAASmE,KAAK+I,IAAIlN,EAAS,EAAG,GAC9DwV,EAAQ8D,SAAS,GAAGA,SAAS,GAAGrZ,MAAQA,EACxCuV,EAAQ8D,SAAS,GAAGA,SAAS,GAAGtZ,OAASA,GAE7C,IACItB,EAEAw1G,EAHAD,EAAW,IAAIrsF,GAEfqR,EAAOvxB,KAAK8qG,QAAQvqG,EAAMgsG,GAS1BG,EAA0B,IAL1BF,EADsB,SAAtBlzD,EAASA,SACIt5C,KAAKysG,kBAAkBlsG,GAGvBP,KAAK2uG,wBAAwBpuG,IAG1CosG,GAAQp0G,GAASg5B,EAAKh5B,OAAS,EAE/BvB,EADe,IAAfw1G,EACIG,EAAO,EAGPA,EAAQD,EAAa,EAbb,GAaoBF,EAAa,GAAkB,EAEnE,IAAK,IAAI91G,EAAI,EAAGA,EAAIoX,EAAQ8D,SAAS,GAAGA,SAASnb,OAAQC,IACjDoX,EAAQ8D,SAAS,GAAGA,SAASlb,GAAGw3B,UAC/BpgB,EAAQ8D,SAAS,GAAGA,SAASlb,GAAGmJ,GAAGqe,QAAQ,UAAY,GACpDpQ,EAAQ8D,SAAS,GAAGA,SAASlb,GAAGmJ,GAAGqe,QAAQ,oBAAsB,GACjEpQ,EAAQ8D,SAAS,GAAGA,SAASlb,GAAGmJ,GAAGqe,QAAQ,aAAe,GAC1DpQ,EAAQ8D,SAAS,GAAGA,SAASlb,GAAGmJ,GAAGqe,QAAQ,iBAAmB,KAClEpQ,EAAQ8D,SAAS,GAAGA,SAASlb,GAAGiM,OAAOC,KAAO5L,EAC9CA,GAAK8W,EAAQ8D,SAAS,GAAGA,SAASlb,GAAGqX,WAAWxV,MAtBxC,IA0BpBqyG,EAAatpE,UAAUm3D,iCAAmC,SAAU74F,EAASsuB,GACzE,GAAItuB,aAAmBszB,GACnB,IAAK,IAAIx8B,EAAI,EAAGA,EAAIkJ,EAAQgS,SAASnb,OAAQC,IACzCsJ,KAAKy4F,iCAAiC74F,EAAQgS,SAASlb,GAAIw3B,GAGnEtuB,EAAQsuB,QAAUA,GAOtB08E,EAAatpE,UAAUsa,QAAU,aAQjCgvD,EAAatpE,UAAUqa,cAAgB,WAInC,MAAO,QAEJivD,KAkBPlqE,IACA+/D,MAAS,sKAET8T,QAAW,+CACXrjD,WAAc,sVAIdsjD,WAAc,mHAEd1F,eAAkB,4OAIlBluE,IAEA2zE,QAAW,yDACXE,MAAS,4qBAOTC,MAAS,iHACTC,WAAc,oFACdC,OAAU,0HACVC,aAAgB,iFAChBC,YAAe,qGACfC,KAAQ,yFACRC,OAAU,oCACVC,UAAa,4GACbC,SAAY,2FACZC,SAAY,8IAGZr0E,IACAmJ,KAAQ,GAERmrE,UAAa,2KAGbC,UAAa,sSAIbF,SAAY,wHAEZprE,QAAW,iVAIXurE,WAAc,qZAKdC,oBAAuB,6HAGvBC,mBAAsB,mMAGtBx0E,IACAiJ,KAAQ,GACRwrE,QAAW,yvBAOXC,QAAW,gLAEXC,KAAQ,gJAERC,qBAAwB,6eAKxBC,OAAU,g5FA2BVC,aAAgB,+XAIhBC,KAAQ,osDAeRC,OAAU,0zBAQV90E,IACA+I,KAAQ,GACRgsE,SAAY,2fAKZC,sBAAyB,iJAEzBC,sBAAyB,0O8Cn6EzBC,GAAmC,WAKnC,SAASA,KA8YT,OA1YAA,EAAkB90E,UAAU6kD,eAAiB,SAAUlnD,EAAM//B,GACzD,IACIsC,EADA60G,KAGJ,GADAp3E,EAAK0O,WvDiDb,SAA0B/hC,EAAW1M,GAWjC,OATI0M,EAAUqH,YAAcI,uBAAqBijG,SACrC1qG,EAAUqH,YAAcI,uBAAqBijG,SAEhD1qG,EAAUqH,YAAcI,uBAAqBkjG,gBAC1Cr3G,EAAQ+T,YAAc2C,qBAAmB0gG,SAGzC,EuDzDJE,CAAUv3E,EAAM//B,GAAU,CAE1B,IAAIu3G,EAAUz2G,KAAKgM,UAAUizB,GAC7Bz9B,EAAS8a,GAAKyJ,SAAS0wF,GAKvB,IAAK,IAJDC,EAAgBz3E,EAAK03E,YACrBC,EAAS13G,EAAQisB,gBACjBuQ,GAAS,EACTomD,EAAQ5iF,EAAQge,WACX25F,EAAI,EAAGA,EAAI/0B,EAAMrrF,OAAQogH,IAAK,CACnC,IAAIC,EAAah1B,EAAM+0B,GACvB,GAAI53E,GAAQ63E,GAAc73E,EAAKp/B,KAAOi3G,EAAWj3G,GAAI,CACjD,IAAIk3G,EAAU/2G,KAAKgM,UAAU8qG,GACzBtgF,EAAUla,GAAKyJ,SAASgxF,GAC5B,GAAI/2G,KAAKg3G,eAAex1G,EAAQg1B,GAAU,CACtC,IAAIygF,EAAej3G,KAAK6O,UAAU4nG,EAASM,GAAS,EAAOH,GAAQ,GACnE,GAAIK,EAAaxgH,OAAS,EACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIugH,EAAaxgH,OAAQC,IAAK,CAC1C,IACIuU,EAAW,EACXuyD,EAAe,EACf/rB,EAAa,EACbl3C,EAAMyF,KAAKk3G,yBAAyBj4E,EAAMg4E,EAAavgH,IAC3D,IAAwB,IAApB6D,EAAIk3C,WAAmB,CACvBxmC,EAAW1Q,EAAI48G,oBACF58G,EAAI68G,WACjB55C,EAAejjE,EAAIijE,aACnB/rB,EAAal3C,EAAIk3C,WACjB,IAAI4lE,EAAWr3G,KAAK41B,iBAAkB3qB,EAAYyrG,EAAgB,EAAKD,GACnEa,EAAWt3G,KAAK41B,iBAAkB3qB,EAAYyrG,EAAgB,EAAKD,GAGnEz2G,KAAKoF,aAAakyG,KAClBA,EAAWD,GAEf,IAAItyF,OAAQ,EACRC,OAAM,EACVD,EAAQka,EAAKl+B,YAETikB,EADc,aAAdia,EAAKpjC,KACCojC,EAAKp0B,YAGLo0B,EAAKtZ,mBAAmB8rB,GAElC,IAAIj6C,EAAQwI,KAAKu3G,iBAAiBxyF,EAAOC,GACzC,GAAIqxF,EAAW5/G,OAAQ,CACnB,IAAIqT,OAAa,EACjBA,EAAam1B,EAAKl+B,YAClB,IAAIy2G,EAAM/6G,KAAK6G,IAAItD,KAAKy3G,kBAAkB3tG,EAAYwtG,IAClDI,EAAO,EACPC,GAAY,EAChBj8E,GAAS,EACT,IAAK,IAAI3b,EAAI,EAAGA,EAAIs2F,EAAW74C,GAAc7vB,QAAQl3C,OAAQspB,IAAK,CAC9D2b,IACA,IAAIk8E,EAASvB,EAAW74C,GAAc7vB,QAAQ5tB,GAE9C,GADA23F,EAAOj7G,KAAK6G,IAAItD,KAAKy3G,kBAAkB3tG,EAAY8tG,EAAOrsG,WACtDisG,EAAME,EAAM,CACZC,EAAWj8E,EACX,OAGR,GAAIi8E,GAAY,EAAG,CACf,IAAIE,OAAQ,GACZA,EAAQ73G,KAAK83G,cAAcT,EAAUC,EAAU9/G,EAAOo/G,EAAQnlE,EAAYxS,EAAM//B,IAC1E8D,OAAS8zG,EAAWj3G,GAC1Bw2G,EAAW74C,GAAc7vB,QAAQxnC,OAAOwxG,EAAU,EAAGE,GACrDxB,EAAW74C,GAAc7vB,QAAQoqE,OACjC1B,EAAW74C,GAAcw6C,iBAAiB7xG,OAAOwxG,EAAU,EAAGN,GAC9DhB,EAAW74C,GAAcw6C,iBAAiBD,OAC1C1B,EAAW74C,GAAcA,aAAeA,MAEvC,CACGq6C,OAAQ,GACZA,EAAQ73G,KAAK83G,cAAcT,EAAUC,EAAU9/G,EAAOo/G,EAAQnlE,EAAYxS,EAAM//B,IAC1E8D,OAAS8zG,EAAWj3G,GAC1Bw2G,EAAW74C,GAAc7vB,QAAQ72C,KAAK+gH,GACtCxB,EAAW74C,GAAcw6C,iBAAiBlhH,KAAKugH,GAC/ChB,EAAW74C,GAAcA,aAAeA,QAI5C,IAAK5uD,MAAMyoG,EAASrgH,KAAO4X,MAAMyoG,EAASpgH,KAAO+I,KAAKoF,aAAakyG,GAAW,CAC1E,IAAIW,OAAO,EAIPC,GACAvqE,WAAeqqE,oBAAyBx6C,aAAcA,IAF1Dy6C,EAAOj4G,KAAK83G,cAAcT,EAAUC,EAAU9/G,EAAOo/G,EAAQnlE,EAAYxS,EAAM//B,IAI1E8D,OAAS8zG,EAAWj3G,GACzB,IAAIs4G,KAEJA,EAASrhH,KAAKugH,MACLvgH,KAAKwgH,GACdjB,EAAW74C,GAAgB06C,EAC3B7B,EAAW74C,GAAc7vB,QAAQ72C,KAAKmhH,GACtC5B,EAAW74C,GAAcw6C,iBAAmBG,EAC5C9B,EAAW74C,GAAcA,aAAeA,OAS9C,IAAtB64C,EAAW5/G,QACXuJ,KAAKo4G,YAAY/B,EAAYp3E,EAAMy3E,KAK/CN,EAAkB90E,UAAU82E,YAAc,SAAUC,EAAYzsG,EAAW8qG,GACvE,IAAK,IAAIhgH,EAAI,EAAGA,EAAI2hH,EAAW5hH,OAAQC,IAAK,CAExC,IAAK,IADDi7C,EAAS0mE,EAAW3hH,GACfqpB,EAAI,EAAGA,EAAI4xB,EAAOhE,QAAQl3C,OAAQspB,IACvC,GAAI5a,GAAMmI,WAAWqkC,EAAOhE,QAAQ5tB,GAAGxU,SAAUomC,EAAOhE,QAAQ5tB,EAAI,GAAGxU,UAAYmrG,EAAe,CAC9F/kE,EAAOhE,QAAQ5tB,EAAI,GAAGxU,SAAWomC,EAAOhE,QAAQ5tB,GAAGxU,SACnD,IAAI+sG,EAAY3mE,EAAOhE,QAAQ5tB,EAAI,GAC/BsjC,EAAMrjD,KAAKu4G,oBAAoBD,EAAUjmG,WAAYimG,EAAU/sG,SAAU+sG,EAAU9gH,MAAOk/G,EAAe4B,EAAU5gH,OACvHi6C,EAAOhE,QAAQ5tB,EAAI,GAAGrnB,KAAO2qD,EAC7B1R,EAAOhE,QAAQxnC,OAAO4Z,EAAG,GACzB4xB,EAAOqmE,iBAAiB7xG,OAAO4Z,EAAG,GAClCA,IAGEnU,EAAU7K,YACpB,IAAK,IAAI1K,EAAI,EAAGA,EAAIs7C,EAAOhE,QAAQl3C,OAAQJ,IAAK,EACxCiiH,EAAY3mE,EAAOhE,QAAQt3C,IAEfkV,SAChBK,EAAU+hC,QAAQ72C,KAAKwhH,MAKnClC,EAAkB90E,UAAUw2E,cAAgB,SAAU9lE,EAAIhtB,EAAKxtB,EAAOiL,EAAWid,EAAOuf,EAAM//B,GAC1F,IAAImkD,EACA3rD,EACAgB,GACAlB,MAAO,EAAG+T,UAAYvU,EAAG,EAAGC,EAAG,GAAK+L,OAAQ,GAAItK,KAAM,GACtDm5C,mBAAoB,EAAGx/B,YAAcrb,EAAG,EAAGC,EAAG,GAAKS,MAAO,EAAGk6C,UAAU,GAU3E,OARAl6C,EAAQsI,KAAKw4G,eAAehhH,EAAOiL,EAAWw8B,EAAM//B,GACpDmkD,EAAMrjD,KAAKu4G,oBAAoBvmE,EAAIhtB,EAAKxtB,EAAOynC,EAAK03E,YAAaj/G,GACjEgB,EAAKA,KAAO2qD,EACZ3qD,EAAK2Z,WAAa2/B,EAClBt5C,EAAK6S,SAAWyZ,EAChBtsB,EAAKlB,MAAQA,EACbkB,EAAKm5C,kBAAoBnyB,EACzBhnB,EAAKhB,MAAQA,EACNgB,GAGX09G,EAAkB90E,UAAUi3E,oBAAsB,SAAUE,EAASC,EAAOlhH,EAAOm/G,EAAaj/G,GAE5F,MADW,KAAOi/G,EAAc,EAAI,IAAMA,EAAc,EAAI,IAAMn/G,EAAQ,QAAUE,EAAQ,IAAMghH,EAAM1hH,EAAI,IAAM0hH,EAAMzhH,GAI5Hm/G,EAAkB90E,UAAUk3E,eAAiB,SAAUhhH,EAAO2zB,EAAiBvf,EAAW1M,GACtF,IACIxH,EADAihH,EAASl8G,KAAK6G,IAAI9L,GAEtB,OAAQ2zB,GACJ,IAAK,MACL,IAAK,SACDzzB,EAAQ,EACJihH,GAAU,GAAKA,GAAU,KACzBjhH,EAAQ,GAEZ,MACJ,IAAK,OACL,IAAK,QACDA,EAAQ,EACJF,EAAQ,GAAKA,IAAU,MACvBE,EAAQ,GAYpB,MARwB,UAApByzB,GAAmD,WAApBA,IAE3BzzB,EADU,IAAVA,EACQ,EAGA,GAGTA,GAGX0+G,EAAkB90E,UAAU1L,iBAAmB,SAAUn/B,EAAQmQ,GAI7D,IAAK,IAFDqyE,EADAv8B,EAAM,EAENw8B,GAAUliF,EAAG,EAAGC,EAAG,GACdP,EAAI,EAAGA,EAAIkQ,EAAInQ,OAAQC,IAAK,CACjC,IAAIkF,EAAKgL,EAAIlQ,GACb,GAAKuiF,EAAL,CAKI,IAAI79E,EAAI4E,KAAKy3G,kBAAkBx+B,EAAKr9E,GACpC,GAAI8gD,EAAMthD,EAAI3E,EAAQ,CAClB,IAAI2W,EAAI3W,EAASimD,EACby8B,EAAMh0E,GAAM+H,UAAU+rE,EAAKr9E,GAC3B5E,EAAIoW,EAAI3Q,KAAKY,IAAI87E,EAAM18E,KAAKgR,GAAK,KACjCxW,EAAImW,EAAI3Q,KAAKW,IAAI+7E,EAAM18E,KAAKgR,GAAK,KACrCyrE,GAAUliF,EAAGiiF,EAAIjiF,EAAIA,EAAGC,EAAGgiF,EAAIhiF,EAAIA,GACnC,MAGAylD,GAAOthD,EAGf69E,EAAMr9E,OAjBFq9E,EAAMr9E,EAmBd,OAAOs9E,GAGXk9B,EAAkB90E,UAAUt1B,UAAY,SAAUJ,GAC9C,IAAIjT,KACJ,GAAIiT,EAAU+Z,qBAA0C,aAAnB/Z,EAAU/P,MAA0C,eAAnB+P,EAAU/P,MAC5E,IAAK,IAAIxF,EAAI,EAAGA,EAAIuV,EAAU+Z,mBAAmBlvB,OAAQJ,IACrDsC,EAAO7B,KAAK8U,EAAU+Z,mBAAmBtvB,IAGjD,OAAOsC,GAEXy9G,EAAkB90E,UAAU01E,eAAiB,SAAUvzE,EAAOC,GAC1D,OAAWA,EAAM1sC,EAAKysC,EAAMzsC,EAAIysC,EAAMlrC,OAAYkrC,EAAMzsC,EAAK0sC,EAAM1sC,EAAI0sC,EAAMnrC,OACrEmrC,EAAMzsC,EAAKwsC,EAAMxsC,EAAIwsC,EAAMnrC,QAAcmrC,EAAMxsC,EAAKysC,EAAMzsC,EAAIysC,EAAMprC,QAGhF89G,EAAkB90E,UAAUzyB,UAAY,SAAU4nG,EAASM,EAASj+B,EAAM3tD,EAAiBytF,GACnF9/B,GAAQi+B,EAAQtgH,QAAU,IAC1BsgH,EAAQ5wG,OAAO,EAAG,GAClB4wG,EAAQ5wG,OAAO,EAAG,IAGtB,IAAK,IADDxN,KACKjC,EAAI,EAAGA,EAAI+/G,EAAQhgH,OAAS,EAAGC,IAAK,CACzC,IAAIkF,EAAKoE,KAAK64G,OAAOpC,EAAQ//G,GAAI+/G,EAAQ//G,EAAI,GAAIqgH,EAAS6B,EAAQztF,GAClE,GAAIvvB,EAAGnF,OAAS,EACZ,IAAK,IAAIspB,EAAI,EAAGA,EAAInkB,EAAGnF,OAAQspB,IAC3BpnB,EAAO7B,KAAK8E,EAAGmkB,IAGnB+4D,GAAQi+B,EAAQtgH,QAAU,GAC1BsgH,EAAQ5wG,OAAO,EAAG,GAG1B,OAAOxN,GAGXy9G,EAAkB90E,UAAUu3E,OAAS,SAAUJ,EAASC,EAAO9xG,EAAKgyG,EAAQztF,GAExE,IAAK,IADDsrF,KACK//G,EAAI,EAAGA,EAAIkQ,EAAInQ,OAAS,EAAGC,IAAK,CACrC,IAAIiF,EAAQorB,GAAW0xF,EAASC,EAAO9xG,EAAIlQ,GAAIkQ,EAAIlQ,EAAI,IACvD,IAAKsJ,KAAKoF,aAAazJ,GAAQ,CAC3B,IAAInE,EAAQwI,KAAKu3G,iBAAiBkB,EAASC,GACvCC,EAAS34G,KAAKu3G,iBAAiB3wG,EAAIlQ,GAAIkQ,EAAIlQ,EAAI,IAGnD,OAFAc,EAAQwI,KAAK84G,uBAAuBthH,GACpCmhH,EAAS34G,KAAK84G,uBAAuBH,GAC7BxtF,GACJ,IAAK,OACL,IAAK,QACG3zB,EAAQmhH,GACRlC,EAAQ3/G,KAAK6E,GAEjB,MACJ,IAAK,MACL,IAAK,SACGnE,EAAQmhH,GACRlC,EAAQ3/G,KAAK6E,GAIrBnE,IAAUmhH,GAAUC,GACpBnC,EAAQ3/G,KAAK6E,IAIzB,OAAO86G,GAEXL,EAAkB90E,UAAUw3E,uBAAyB,SAAUthH,GAC3D,IACIuhH,EAAet8G,KAAK6G,IAAI9L,GAO5B,OANIuhH,EAAe,GACR,IAAMA,EAGNA,GAIf3C,EAAkB90E,UAAUl8B,aAAe,SAAUzJ,GACjD,OAAmB,IAAZA,EAAM3E,GAAuB,IAAZ2E,EAAM1E,GAElCm/G,EAAkB90E,UAAU41E,yBAA2B,SAAUtrG,EAAWotG,GAWxE,IAAK,IATDC,EAAU,IACVxnE,GAAc,EACd2lE,EAAa,EACb55C,GAAgB,EAChB9hC,EAAQ,EACRw9E,EAAqB,EACrBn2E,EAAMn3B,EAAU7K,YAChBo4G,EAAcp2E,EACdpqC,KACKjC,EAAI,EAAGA,EAAIkV,EAAU+Z,mBAAmBlvB,OAAQC,IAAK,CAC1D,IAAI8B,EAASoT,EAAU+Z,mBAAmBjvB,GAC1CiC,EAAO7B,KAAK0B,GAEhB,IAAK,IAAInC,EAAI,EAAGA,EAAIsC,EAAOlC,OAAQJ,IAAK,CACpC,IAAI2sC,EAAMrqC,EAAOtC,GACb+iH,EAAUp5G,KAAKq5G,SAASr2E,EAAKD,EAAKi2E,EAASptG,GAC3CwtG,EAAUH,IACVA,EAAUG,EACVF,EAAqB9B,EAAap3G,KAAKy3G,kBAAkBuB,EAASG,GAClE37C,EAAe9hC,EACf+V,EAAap7C,GAEjB+gH,GAAcjyG,GAAMmI,WAAW01B,EAAKD,GACpCA,EAAMC,EACNm2E,EAAcn2E,EAOlB,OALAtH,KAEIy7E,oBAAqB+B,EAAoB9B,WAAYA,EACrD55C,aAAcA,EAAc/rB,WAAYA,IAIhD2kE,EAAkB90E,UAAU+3E,SAAW,SAAUZ,EAASC,EAAO/8G,EAAOiQ,GACpE,IACI0tG,EAAO78G,KAAK6G,IAAIm1G,EAAQzhH,EAAI0hH,EAAM1hH,GAClCuiH,EAAO98G,KAAK6G,IAAIm1G,EAAQxhH,EAAIyhH,EAAMzhH,GAClCuiH,GAAQ79G,EAAM1E,EAAIwhH,EAAQxhH,IAAMyhH,EAAMzhH,EAAIwhH,EAAQxhH,GAClDwiH,GAAQ99G,EAAM3E,EAAIyhH,EAAQzhH,IAAM0hH,EAAM1hH,EAAIyhH,EAAQzhH,GACtD,IAAK0iH,SAASF,KAASE,SAASD,IAAQ7qG,MAAM4qG,IAAQ5qG,MAAM6qG,IACxD,GAAIhB,EAAQzhH,IAAM0hH,EAAM1hH,EAAG,CACvB,GAAIyhH,EAAQxhH,IAAMyhH,EAAMzhH,EACpB,OAAO,IAEN,GAAMwhH,EAAQxhH,EAAI0E,EAAM1E,GAAO0E,EAAM1E,EAAIyhH,EAAMzhH,GAASwhH,EAAQxhH,EAAI0E,EAAM1E,GAAO0E,EAAM1E,EAAIyhH,EAAMzhH,EAClG,OAAOwF,KAAK6G,IAAIm1G,EAAQzhH,EAAI2E,EAAM3E,QAGrC,GAAIyhH,EAAQxhH,IAAMyhH,EAAMzhH,IACnBwhH,EAAQzhH,EAAI2E,EAAM3E,GAAO2E,EAAM3E,EAAI0hH,EAAM1hH,GAASyhH,EAAQzhH,EAAI2E,EAAM3E,GAAO2E,EAAM3E,EAAI0hH,EAAM1hH,GAC7F,OAAOyF,KAAK6G,IAAIm1G,EAAQxhH,EAAI0E,EAAM1E,QAK1C,IAAKwhH,EAAQzhH,GAAK2E,EAAM3E,GAAK2E,EAAM3E,GAAK0hH,EAAM1hH,GAAOyhH,EAAQzhH,GAAK2E,EAAM3E,GAAK2E,EAAM3E,GAAK0hH,EAAM1hH,GAAMsiH,EArB5F,KAsBCb,EAAQxhH,GAAK0E,EAAM1E,GAAK0E,EAAM1E,GAAKyhH,EAAMzhH,GAAOwhH,EAAQxhH,GAAK0E,EAAM1E,GAAK0E,EAAM1E,GAAKyhH,EAAMzhH,GAAMsiH,EAtBhG,GAuBA,OAAO98G,KAAK6G,IAAIk2G,EAAMC,GAIlC,OAAO,KAGXrD,EAAkB90E,UAAUi2E,iBAAmB,SAAUkB,EAASC,GAC9D,IAAIiB,EAAQlB,EAAQzhH,EAAI0hH,EAAM1hH,EAC1B4iH,EAAQnB,EAAQxhH,EAAIyhH,EAAMzhH,EAC9B,OAAOwF,KAAKqmC,MAAM82E,EAAOD,IAAU,IAAMl9G,KAAKgR,KAElD2oG,EAAkB90E,UAAUm2E,kBAAoB,SAAUgB,EAASC,GAG/D,OADUj8G,KAAKmmC,MAAO61E,EAAQzhH,EAAI0hH,EAAM1hH,IAAMyhH,EAAQzhH,EAAI0hH,EAAM1hH,IAAQyhH,EAAQxhH,EAAIyhH,EAAMzhH,IAAMwhH,EAAQxhH,EAAIyhH,EAAMzhH,KAQtHm/G,EAAkB90E,UAAUsa,QAAU,aAQtCw6D,EAAkB90E,UAAUqa,cAAgB,WAIxC,MAAO,YAEJy6D,KC9YPyD,GAA0B,WAC1B,SAASA,EAAS36G,GACdc,KAAKsnB,QACLtnB,KAAKd,QAAUA,EA6vCnB,OA1vCA26G,EAASv4E,UAAU+yB,QAAU,WACzB,OACwE,IADhEr0D,KAAKd,QAAQ2sB,aAAa5Y,aAC3B+wB,kBAAgB03C,aAAe13C,kBAAgByyC,eAM1DojC,EAASv4E,UAAU82B,UAAY,SAAUl5D,EAAS8d,EAAgBw+D,EAAaC,EAAYq+B,EAAOznG,EAAY9G,GAC1G,IAAIsgB,EAAe7rB,KAAKd,QAAQ2sB,aAE5Bnc,GAAW1Y,EAAG,EAAGC,EAAG,GACpBuK,EAAS4mB,GAAUpL,EAAelP,SAClCisG,GAAwBhmD,SAAS,EAAOrkD,OAAQ,GAChDsqG,GAAsBjmD,SAAS,EAAOrkD,OAAQ,GAClD,GAAI1P,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgB03C,aAAc,CACtE,IAAIpnB,OAAW,GACfA,EAAW/yC,SAASsY,gBAAgB,6BAA8B,MACzD3D,aAAa,KAAM,kBAC5Bo+B,EAASp+B,aAAa,iBAAkB,cACxCl2B,KAAKwe,qBAAqB+Q,YAAY+kC,GACtCt0D,KAAKi6G,WAAW/6G,EAAS8d,EAAgBs3C,EAAUylD,EAAqBC,EAAmBF,EAAOznG,IAAe9G,GAGrH,IAAI3I,EAAOpB,EAAOxK,EAAI8iH,EAAM9iH,EACxB+L,EAAMvB,EAAOvK,EAAI6iH,EAAM7iH,EACvB4L,EAAQrB,EAAOxK,EAAIwK,EAAOjJ,MAAQuhH,EAAM9iH,EACxC8L,EAAStB,EAAOvK,EAAIuK,EAAOlJ,OAASwhH,EAAM7iH,EAC1Cw2D,EAAkB5hC,EAAa6hC,kBAAkBD,gBAEjDysD,EAAel6G,KAAKtD,MAAMmG,EAAO4qD,EApBpB,GAqBb0sD,EAAcn6G,KAAKtD,MAAMkG,EAAM6qD,EArBlB,GAsBjBA,EAAkB5hC,EAAa2hC,oBAAoBC,gBACnD,IAAI2sD,EAAap6G,KAAKtD,MAAMqG,EAAK0qD,EAvBhB,GAwBb4sD,EAAgBr6G,KAAKtD,MAAMoG,EAAQ2qD,EAxBtB,GA0Bb6sD,EAAe94G,EAAOxK,EAAIwK,EAAOjJ,MACjCgiH,EAAgB/4G,EAAOvK,EAAIuK,EAAOlJ,OA8DtC,OA7DKyhH,EAAoBhmD,QA0BjB/zD,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgB03C,aACxDhsE,EAAO1Y,EAAI+iH,EAAoBrqG,OAG/BA,EAAO1Y,EAAIuU,EAASvU,EAAIqb,EAAWrb,EA7BnCgJ,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgBw2E,oBACpD/9G,KAAK6G,IAAIw2G,EAAM9iH,IAAM,IACjBwkF,EACI/+E,KAAK6G,IAAI42G,EAAeI,GAAgB79G,KAAK6G,IAAI62G,EAAc34G,EAAOxK,GACtE0Y,EAAO1Y,GAAKmjH,EAAc34G,EAAOxK,EAGjC0Y,EAAO1Y,GAAKkjH,EAAeI,EAI3B79G,KAAK6G,IAAI42G,EAAeI,GAAgB79G,KAAK6G,IAAI62G,EAAc34G,EAAOxK,GACtE0Y,EAAO1Y,GAAKkjH,EAAeI,EAG3B5qG,EAAO1Y,GAAKmjH,EAAc34G,EAAOxK,GAM7C0Y,EAAO1Y,EAAIuU,EAASvU,EAAIqb,EAAWrb,EAWtCgjH,EAAkBjmD,QA0BnBrkD,EAAOzY,EAAI+iH,EAAkBtqG,OAzBzB1P,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgBy2E,sBACpDh+G,KAAK6G,IAAIw2G,EAAM7iH,IAAM,IACjBwkF,EACIh/E,KAAK6G,IAAI+2G,EAAgBE,GAAiB99G,KAAK6G,IAAI82G,EAAa54G,EAAOvK,GACvEyY,EAAOzY,GAAKmjH,EAAa54G,EAAOvK,EAGhCyY,EAAOzY,GAAKojH,EAAgBE,EAI5B99G,KAAK6G,IAAI+2G,EAAgBE,GAAiB99G,KAAK6G,IAAI82G,EAAa54G,EAAOvK,GACvEyY,EAAOzY,GAAKojH,EAAgBE,EAG5B7qG,EAAOzY,GAAKmjH,EAAa54G,EAAOvK,GAM5CyY,EAAOzY,EAAIsU,EAAStU,EAAIob,EAAWpb,EAMpCyY,GAKXmqG,EAASv4E,UAAU5kC,MAAQ,SAAU6I,EAAOmpD,EAAerzC,GAEnDA,EADAA,EAAQ,EACA5e,KAAKomC,IAAI,EAAGpmC,KAAKm3B,MAAMn3B,KAAK2hD,IAAI/iC,GAAS5e,KAAK2hD,IAAI,KAGlD3hD,KAAKomC,IAAI,EAAGpmC,KAAKo6B,KAAKp6B,KAAK2hD,IAAI/iC,GAAS5e,KAAK2hD,IAAI,KAE7D,IAAIs8D,EAAS,EACThkH,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAIg4D,EAAcj4D,OAAQC,IAClCgkH,GAAUhsD,EAAch4D,GAG5B,IACIikH,EAAMp1G,GAFVm1G,GAAUr/F,GAGNjiB,EAFWqD,KAAKm3B,MAAMn3B,KAAK6G,IAAIiC,GAASm1G,GAEtBA,EACtB,GAAIthH,IAASmM,EACT,GAAIA,GAAS,EACT,IAAK7O,EAAI,EAAGA,EAAIg4D,EAAcj4D,OAAQC,IAAK,CACvC,GAAIikH,GAAOjsD,EAAch4D,GAAK2kB,EAC1B,OAAOjiB,GAAQuhH,EAAOjsD,EAAch4D,IAAM,EAAI2kB,GAAU,EAAIqzC,EAAch4D,GAAK2kB,GAG/EjiB,GAAQs1D,EAAch4D,GAAK2kB,EAC3Bs/F,GAAOjsD,EAAch4D,GAAK2kB,OAMlC,IADAjiB,IAAe,EACV1C,EAAIg4D,EAAcj4D,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC5C,GAAI+F,KAAK6G,IAAIq3G,IAAQjsD,EAAch4D,GAAK2kB,EACpC,OAAOjiB,GAAQqD,KAAK6G,IAAIq3G,GAAQjsD,EAAch4D,IAAM,EAAI2kB,GAAU,EAAIqzC,EAAch4D,GAAK2kB,GAGzFjiB,GAAQs1D,EAAch4D,GAAK2kB,EAC3Bs/F,GAAOjsD,EAAch4D,GAAK2kB,EAK1C,OAAO9V,GAKXs0G,EAASv4E,UAAU24E,WAAa,SAAU/6G,EAAS8d,EAAgB4gC,EAAGg9D,EAAgBC,EAAcf,EAAOgB,GACvG,IACIC,EACAC,EACAC,EAHAC,EAAU,KAIVx8F,EAAW1e,KAAKd,QAAQwf,SACxBmN,EAAe7rB,KAAKd,QAAQ2sB,aAC5BsvF,KACAC,KACAC,KACAC,KACA95G,EAAS4mB,GAAUpL,EAAelP,SAClCuN,EAAQnc,EAAQwf,SAASgF,YACzBu9D,GAAWviE,EAASkE,iBACpBs+D,GAAWxiE,EAASoE,eACpBy4F,EAAkB1vF,EAAa2vF,mBAAqBngG,EACpDg0E,EAAW,IAAI/yE,GAAK,EAAG,EAAGoC,EAAS2E,cAAe3E,EAAS0E,gBAC3Dq4F,EAAiB,IAAIn/F,GAAK2kE,EAAU5lE,EAAQ7Z,EAAOvK,EAAIskH,EAAkB,EAAIlsB,EAAS92F,MAAQ8iB,EAAQ7Z,EAAOlJ,OAAS,EAAIijH,EAAkB,IAC5IG,EAAiB,IAAIp/F,GAAM9a,EAAOxK,EAAIukH,EAAkB,EAAIr6B,EAAU7lE,EAAQ7Z,EAAOjJ,MAAQ,EAAIgjH,EAAkB,GAAKlsB,EAAS/2F,OAAS+iB,GAC9Ig0E,EAAW,IAAI/yE,GAAK2kE,EAAU5lE,EAAO6lE,EAAU7lE,EAAOg0E,EAAS92F,MAAQ8iB,EAAOg0E,EAAS/2F,OAAS+iB,GAChG,IACI3kB,EACAsM,EACA24G,EAHA3iG,EAAQhZ,KAAK47G,UAAU18G,EAAQ2qE,cAAe7sD,EAAgB0+F,EAAgBrsB,GAI9Ez0E,EAAY1b,EAAQ0b,UACxB,IAAKlkB,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAC1BsM,EAASgW,EAAMtiB,GACXsJ,KAAK67G,YAAY38G,EAAS8D,KACpBhD,KAAKd,QAAQ0b,UAAU5X,EAAOnD,cAAeuT,KAAcpT,KAAK87G,YAAYlhG,EAAWoC,EAAgBha,MACzG24G,EAAe34G,EAAOxB,QACLlJ,OAASqjH,EAAa1kH,EAAI6iH,EAAM7iH,EAAIuK,EAAOvK,EACxDokH,EAAavkH,MACTyD,IAAKyI,EAAQsC,SAAU7I,KAAK6G,IAAI9B,EAAOvK,EAAI6iH,EAAM7iH,EAAI0kH,EAAa1kH,EAAI0kH,EAAarjH,UAGlFqjH,EAAa1kH,EAAIuK,EAAOvK,EAAI6iH,EAAM7iH,EAAIuK,EAAOlJ,QAClDgjH,EAAgBxkH,MAAOyD,IAAKyI,EAAQsC,SAAU7I,KAAK6G,IAAI9B,EAAOvK,EAAI6iH,EAAM7iH,EAAIuK,EAAOlJ,OAASqjH,EAAa1kH,MAE9F,MAAXikH,GAAmBA,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,EAAI6iH,EAAM7iH,MACpEwF,KAAK6G,IAAIq4G,EAAa3kH,EAAI2kH,EAAapjH,MAAQ,GAAKiJ,EAAOxK,EAAIwK,EAAOjJ,MAAQ,EAAIuhH,EAAM9iH,KACxFukH,GACAP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,WACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAIq4G,EAAa3kH,EAAI2kH,EAAapjH,OAASiJ,EAAOxK,EAAIwK,EAAOjJ,MAAQuhH,EAAM9iH,KAAOukH,GAC5FP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,SACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAIq4G,EAAa3kH,GAAKwK,EAAOxK,EAAI8iH,EAAM9iH,KAAOukH,GACxDP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,QACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAIq4G,EAAa3kH,GAAKwK,EAAOxK,EAAIwK,EAAOjJ,MAAQuhH,EAAM9iH,KAAOukH,GACvEP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,aACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAIq4G,EAAa3kH,EAAI2kH,EAAapjH,OAASiJ,EAAOxK,EAAI8iH,EAAM9iH,KAAOukH,IAC7EP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,aACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,OAM/D+hB,EAAQhZ,KAAK47G,UAAU18G,EAAQ2qE,cAAe7sD,EAAgBy+F,EAAgBpsB,GAC9E,IAAK,IAAIh5F,EAAI,EAAGA,EAAI2iB,EAAMviB,OAAQJ,IAC9B2M,EAASgW,EAAM3iB,GACX2J,KAAK67G,YAAY38G,EAAS8D,KACpBhD,KAAKd,QAAQ0b,UAAU5X,EAAOnD,cAAeuT,KAAcpT,KAAK87G,YAAYlhG,EAAWoC,EAAgBha,MACzG24G,EAAe34G,EAAOxB,QACLxK,EAAI2kH,EAAapjH,MAAQiJ,EAAOxK,EAAI8iH,EAAM9iH,IACvDmkH,EAAcA,EAAc1kH,SACxB8D,IAAKyI,EAAQsC,SAAU7I,KAAK6G,IAAK9B,EAAOxK,EAAI8iH,EAAM9iH,EAAK2kH,EAAa3kH,EAAI2kH,EAAapjH,SAGzFojH,EAAa3kH,EAAIwK,EAAOxK,EAAI8iH,EAAM9iH,EAAIwK,EAAOjJ,QAC7C6iH,EAAeA,EAAe3kH,SAC1B8D,IAAKyI,EAAQsC,SAAU7I,KAAK6G,IAAI9B,EAAOxK,EAAI8iH,EAAM9iH,EAAIwK,EAAOjJ,MAAQojH,EAAa3kH,MAG1E,MAAX+jH,GAAmBA,EAAUt+G,KAAK6G,IAAIq4G,EAAa3kH,EAAIwK,EAAOxK,EAAI8iH,EAAM9iH,MACpEyF,KAAK6G,IAAIq4G,EAAa1kH,EAAI0kH,EAAarjH,OAAS,GAAKkJ,EAAOvK,EAAIuK,EAAOlJ,OAAS,EAAIwhH,EAAM7iH,KACvFskH,GACHN,EAAUj7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,WACtDu5G,EAAUt+G,KAAK6G,IAAIq4G,EAAa3kH,EAAIwK,EAAOxK,IAEtCyF,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,EAAI6iH,EAAM7iH,IAAMskH,GACtDN,EAAUj7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,OACtDu5G,EAAUt+G,KAAK6G,IAAIq4G,EAAa3kH,EAAIwK,EAAOxK,IAEtCyF,KAAK6G,IAAIq4G,EAAa1kH,EAAI0kH,EAAarjH,QAAUkJ,EAAOvK,EAAIuK,EAAOlJ,OAASwhH,EAAM7iH,KACvFskH,GACAN,EAAUj7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,UACtDu5G,EAAUt+G,KAAK6G,IAAIq4G,EAAa3kH,EAAIwK,EAAOxK,IAEtCyF,KAAK6G,IAAIq4G,EAAa1kH,EAAI0kH,EAAarjH,OAASkJ,EAAOvK,EAAI6iH,EAAM7iH,IAAMskH,GAC5EN,EAAUj7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,aACtDu5G,EAAUt+G,KAAK6G,IAAIq4G,EAAa3kH,EAAIwK,EAAOxK,IAEtCyF,KAAK6G,IAAIq4G,EAAa1kH,GAAKuK,EAAOvK,EAAIuK,EAAOlJ,OAASwhH,EAAM7iH,KAAOskH,IACxEN,EAAUj7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,aACtDu5G,EAAUt+G,KAAK6G,IAAIq4G,EAAa3kH,EAAIwK,EAAOxK,OAM/DgJ,KAAKg8G,iBAAiB98G,EAAS87G,EAASC,EAASr9D,EAAGg9D,EAAgBC,EAAcC,GAC7EF,EAAe7mD,SAChB/zD,KAAKi8G,oBAAoB/8G,EAAS0+C,EAAG5gC,EAAgBm+F,EAAeC,EAAgBR,EAAgBC,EAAcC,EAAOhB,EAAOyB,GAE/HV,EAAa9mD,SACd/zD,KAAKk8G,oBAAoBh9G,EAAS0+C,EAAG5gC,EAAgBq+F,EAAcC,EAAiBV,EAAgBC,EAAcC,EAAOhB,EAAOyB,IAMxI1B,EAASv4E,UAAUu1B,iBAAmB,SAAUl7D,GAC5C,IAAIkwB,EAAe7rB,KAAKd,QAAQ2sB,aAMhC,OAJIA,EAAa5Y,YAAc+wB,kBAAgByyC,cAC3C96E,EAAM3E,EAAIgJ,KAAKtD,MAAMf,EAAM3E,EAAG60B,EAAa6hC,kBAAkBD,gBAFhD,GAGb9xD,EAAM1E,EAAI+I,KAAKtD,MAAMf,EAAM1E,EAAG40B,EAAa2hC,oBAAoBC,gBAHlD,IAKV9xD,GAEXk+G,EAASv4E,UAAUu6E,YAAc,SAAU38G,EAASqB,GAEhD,OADAA,EAAOP,KAAKd,QAAQ0b,UAAUra,EAAKV,KAC1BigC,GAAW9/B,KAAKd,QAASqB,GAAM,IAE5Cs5G,EAASv4E,UAAU66E,SAAW,SAAUj9G,EAAS07G,EAAgBC,EAAcvmD,EAAU6rB,EAAQC,EAAQpjE,EAAgB89F,GACrH,IAAII,EACAH,EAGAC,EACAC,EAHApvF,EAAe7rB,KAAKd,QAAQ2sB,aAC5BnN,EAAW1e,KAAKd,QAAQwf,SAGxBld,EAAS4mB,GAAUpL,EAAelP,SAClC8M,EAAY1b,EAAQ0b,UACpBwhG,KACAC,KACAhhG,EAAQnc,EAAQwf,SAASgF,YACzBu9D,GAAWviE,EAASkE,iBACpBs+D,GAAWxiE,EAASoE,eACpBy4F,EAAkB1vF,EAAa2vF,mBAAqBngG,EACpDg0E,EAAW,IAAI/yE,GAAK,EAAG,EAAGoC,EAAS2E,cAAe3E,EAAS0E,gBAC3Dk5F,EAAmB,IAAIhgG,GAAK2kE,EAAU5lE,GAAQ7Z,EAAOvK,EAAI,GAAKokB,EAAOg0E,EAAS92F,MAAQ8iB,GAAQ7Z,EAAOlJ,OAAS,IAAM+iB,GACpHkhG,EAAmB,IAAIjgG,IAAM9a,EAAOxK,EAAI,GAAKqkB,EAAO6lE,EAAU7lE,GAAQ7Z,EAAOjJ,MAAQ,IAAM8iB,EAAOg0E,EAAS/2F,OAAS+iB,GACxHg0E,EAAW,IAAI/yE,GAAK2kE,EAAU5lE,EAAO6lE,EAAU7lE,EAAOg0E,EAAS92F,MAAQ8iB,EAAOg0E,EAAS/2F,OAAS+iB,GAChG,IAEI3kB,EACAsM,EACA24G,EAJAa,KACAxjG,EAAQhZ,KAAK47G,UAAU18G,EAAQ2qE,cAAe7sD,EAAgBu/F,EAAkBltB,EAAUmtB,GAI9F,IAAK9lH,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAC1BsM,EAASgW,EAAMtiB,IACXsJ,KAAK87G,YAAYlhG,EAAWoC,EAAgBha,IAAahD,KAAKd,QAAQ0b,UAAU5X,EAAOnD,cAAeuT,KACtGuoG,EAAe34G,EAAOxB,QACP,MAAX05G,GAAmBA,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,MAC1D2jH,EAAeh4G,KACXnG,KAAK6G,IAAI9B,EAAOxK,EAAImpF,EAASw7B,EAAa3kH,IAAMukH,GAChDP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,QACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAI9B,EAAOxK,EAAImpF,EAASw7B,EAAa3kH,EAAI2kH,EAAapjH,QAAUgjH,IAC1EP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,aACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,IAG1C2jH,EAAe/3G,QAChBpG,KAAK6G,IAAI9B,EAAOxK,EAAImpF,EAAS3+E,EAAOjJ,MAAQojH,EAAa3kH,EAAI2kH,EAAapjH,QAAUgjH,GACpFP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,SACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,IAEtCwF,KAAK6G,IAAI9B,EAAOxK,EAAImpF,EAAS3+E,EAAOjJ,MAAQojH,EAAa3kH,IAAMukH,IACpEP,EAAUh7G,KAAK+7G,iBAAiBJ,EAAcn6G,EAAQ,aACtD05G,EAAUz+G,KAAK6G,IAAIq4G,EAAa1kH,EAAIuK,EAAOvK,OAM/D+hB,EAAQhZ,KAAK47G,UAAU18G,EAAQ2qE,cAAe7sD,EAAgBs/F,EAAkBjtB,GAChF,IAAK,IAAI/4C,EAAM,EAAGA,EAAMt9B,EAAMviB,OAAQ6/C,IAAO,CACzC,IAAInsC,EAAW6O,EAAMs9B,GACrB,GAAIt2C,KAAK87G,YAAYlhG,EAAWoC,EAAgB7S,MAAenK,KAAKd,QAAQ0b,UAAUzQ,EAAStK,cAAeuT,IAAY,CACtH,IAAIqpG,EAAiBtyG,EAAS3I,QACf,MAAXu5G,GAAmBA,EAAUt+G,KAAK6G,IAAIm5G,EAAezlH,EAAIwK,EAAOxK,MAC5D6jH,EAAa93G,IACTtG,KAAK6G,IAAI9B,EAAOvK,EAAImpF,EAASq8B,EAAexlH,IAAMskH,GAClDN,EAAUj7G,KAAK+7G,iBAAiBU,EAAgBj7G,EAAQ,OACxDu5G,EAAUt+G,KAAK6G,IAAIm5G,EAAezlH,EAAIwK,EAAOxK,IAExCyF,KAAK6G,IAAI9B,EAAOvK,EAAImpF,EAASq8B,EAAexlH,EAAIwlH,EAAenkH,SAAWijH,IAC/EN,EAAUj7G,KAAK+7G,iBAAiBU,EAAgBj7G,EAAQ,aACxDu5G,EAAUt+G,KAAK6G,IAAIm5G,EAAezlH,EAAIwK,EAAOxK,IAG5C6jH,EAAa/3G,SACdrG,KAAK6G,IAAI9B,EAAOvK,EAAIuK,EAAOlJ,OAAS8nF,EAASq8B,EAAexlH,EAAIwlH,EAAenkH,SAAWijH,GAC1FN,EAAUj7G,KAAK+7G,iBAAiBU,EAAgBj7G,EAAQ,UACxDu5G,EAAUt+G,KAAK6G,IAAIm5G,EAAezlH,EAAIwK,EAAOxK,IAExCyF,KAAK6G,IAAI9B,EAAOvK,EAAIuK,EAAOlJ,OAAS8nF,EAASq8B,EAAexlH,IAAMskH,IACvEN,EAAUj7G,KAAK+7G,iBAAiBU,EAAgBj7G,EAAQ,aACxDu5G,EAAUt+G,KAAK6G,IAAIm5G,EAAezlH,EAAIwK,EAAOxK,OAMjE,IAAKN,EAAI,EAAGA,EAAI8lH,EAAY/lH,OAAQC,IAEhC,GADAsM,EAASw5G,EAAY9lH,GACjBsJ,KAAK87G,YAAYlhG,EAAWoC,EAAgBha,GAAS,CACrD,IAAI05G,EAAiB15G,EAAOxB,OACxBs4G,EAAQc,EAAeh4G,MAAQu9E,EAASA,EACxCw8B,EAAalgH,KAAK6G,IAAI9B,EAAOjJ,MAAQuhH,EAAQ4C,EAAenkH,OAC5DqkH,OAAa,EACbD,GAAcpB,IACdqB,EAAahC,EAAeh4G,MAAQ85G,EAAenkH,MAAQiJ,EAAOjJ,MAAQmkH,EAAenkH,MAAQiJ,EAAOjJ,MACxG6jH,EAAUA,EAAU3lH,SAAY8L,OAAQS,EAAQ25G,WAAYA,EAAYjtG,OAAQktG,IAEpF9C,EAAQe,EAAa93G,KAAOq9E,EAASA,EACrC,IAAIlsB,EAAOz3D,KAAK6G,IAAI9B,EAAOlJ,OAASwhH,EAAQ4C,EAAepkH,QACvD47D,GAAQqnD,IACRqB,EAAa/B,EAAa93G,KAAO25G,EAAepkH,OAASkJ,EAAOlJ,OAASokH,EAAepkH,OAASkJ,EAAOlJ,OACxG+jH,EAAWA,EAAW5lH,SAAY8L,OAAQS,EAAQ25G,WAAYzoD,EAAMxkD,OAAQktG,IAIxF,IACK19G,EAAQ4kE,QACC9jE,KAAKg8G,iBAAiB98G,EAAS87G,EAASC,EAAS3mD,EAAUsmD,EAAgBC,EAAcC,IAElGF,EAAe7mD,SAAWqoD,EAAU3lH,OAAS,IAAMmkH,EAAeh4G,MAAQg4G,EAAe/3G,QAC1F7C,KAAK68G,kBAAkB39G,EAASo1D,EAAU8nD,EAAWxB,EAAgBE,EAAO99F,IAE3E69F,EAAa9mD,SAAWsoD,EAAW5lH,OAAS,IAAMokH,EAAa93G,KAAO83G,EAAa/3G,SACpF9C,KAAK88G,mBAAmB59G,EAASo1D,EAAU+nD,EAAYxB,EAAcC,EAAO99F,IAOpF68F,EAASv4E,UAAUszB,QAAU,SAAUgmD,EAAgBC,EAAcvmD,EAAU6rB,EAAQC,EAAQhiF,EAAO08G,EAAOiC,GACzG,IAAI7oD,EAAOksB,EACXy6B,EAAa93G,KAAM,EACnB,IAAI9L,EACJ2jH,EAAeh4G,KAAOg4G,EAAe/3G,OAAQ,EAQ7C,GALI7C,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgB03C,eAAiBt9E,EAAMiO,cAE/EpV,EAAI8lH,EAAe9lH,EAAI8lH,EAAezkH,OAAS8F,EAAMozB,MAAMv6B,EAAImpF,GAAUhiF,EAAMpC,QAAUoC,EAAM9F,OAAS8F,EAAMozB,MAAMv6B,GACpH+I,KAAKm8G,SAASn8G,KAAKd,QAAS07G,EAAgBC,EAAcvmD,EAAU6rB,EAAQlpF,EAAG+I,KAAKd,QAAQke,cAAe09F,IAE1GD,EAAa9mD,QASdG,EAAQksB,EAASnpF,EAAK4jH,EAAanrG,YARnC,GAAI1P,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgBy2E,sBAAuB,CAC/E,IAAI1tG,EAAQgwG,EAAe9lH,EAAI8lH,EAAezkH,OAAS8F,EAAMozB,MAAMv6B,EAC/D+lH,EAAYjwG,EAAQqzE,EAExBlsB,EADiBl0D,KAAKtD,MAAMsgH,EAAWh9G,KAAKd,QAAQ2sB,aAAa2hC,oBAAoBC,gBAX5E,GAYW1gD,EAM5B,OAAOmnD,GAMX2lD,EAASv4E,UAAUqzB,UAAY,SAAUimD,EAAgBC,EAAcvmD,EAAU6rB,EAAQC,EAAQhiF,EAAO08G,EAAOmC,GAC3G,IACIjmH,EADAi9D,EAAOksB,EAEXy6B,EAAe/3G,OAAQ,EACvBg4G,EAAa93G,IAAM83G,EAAa/3G,QAAS,EAQzC,GALI9C,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgB03C,eAAiBt9E,EAAMiO,cAE/ErV,EAAIimH,EAAajmH,EAAIimH,EAAa1kH,OAAS,EAAI6F,EAAMozB,MAAMx6B,GAAKmpF,GAAU/hF,EAAMrC,QAAUqC,EAAM7F,OAAS,EAAI6F,EAAMozB,MAAMx6B,IACzHgJ,KAAKm8G,SAASn8G,KAAKd,QAAS07G,EAAgBC,EAAcvmD,EAAUt9D,EAAGopF,EAAQpgF,KAAKd,QAAQke,cAAe09F,IAE1GF,EAAe7mD,QAShBE,EAAQksB,EAASnpF,EAAK4jH,EAAelrG,YARrC,GAAI1P,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgBw2E,oBAAqB,CAC7E,IAAI33G,EAAQo6G,EAAajmH,EAAIimH,EAAa1kH,OAAS,EAAI6F,EAAMozB,MAAMx6B,GAC/DsnF,EAAcz7E,EAAQs9E,EAE1BlsB,EADmBj0D,KAAKtD,MAAM4hF,EAAat+E,KAAKd,QAAQ2sB,aAAa6hC,kBAAkBD,gBAX9E,GAYa5qD,EAM9B,OAAOoxD,GAMX4lD,EAASv4E,UAAUozB,SAAW,SAAUkmD,EAAgBC,EAAcvmD,EAAU6rB,EAAQC,EAAQhiF,EAAO08G,EAAOoC,GAC1G,IAAIjpD,EAAOksB,EACPnpF,EAAI,EACR4jH,EAAeh4G,MAAO,EACtBi4G,EAAa93G,IAAM83G,EAAa/3G,QAAS,EAQzC,GALI9C,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgB03C,eAAiBt9E,EAAMiO,cAE/ErV,EAAIkmH,EAAelmH,EAAIkmH,EAAe3kH,MAAQ6F,EAAMozB,MAAMx6B,EAAImpF,GAAU/hF,EAAMrC,QAAUqC,EAAM7F,MAAQ6F,EAAMozB,MAAMx6B,GAClHgJ,KAAKm8G,SAASn8G,KAAKd,QAAS07G,EAAgBC,EAAcvmD,EAAUt9D,EAAGopF,EAAQpgF,KAAKd,QAAQke,cAAe09F,IAE1GF,EAAe7mD,QAShBE,EAAQksB,EAASnpF,EAAK4jH,EAAelrG,YARrC,GAAI1P,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgBw2E,oBAAqB,CAC7E,IAAI53G,EAAOs6G,EAAelmH,EAAIkmH,EAAe3kH,MAAQ6F,EAAMozB,MAAMx6B,EAC7DmmH,EAAav6G,EAAOu9E,EAExBlsB,EADkBj0D,KAAKtD,MAAMygH,EAAYn9G,KAAKd,QAAQ2sB,aAAa2hC,oBAAoBC,gBAX9E,GAYY7qD,EAM7B,OAAOqxD,GAMX4lD,EAASv4E,UAAUuzB,WAAa,SAAU+lD,EAAgBC,EAAcvmD,EAAU6rB,EAAQC,EAAQhiF,EAAO08G,EAAOsC,GAC5G,IAAIlpD,EAAOksB,EACXy6B,EAAa/3G,QAAS,EACtB83G,EAAeh4G,KAAOg4G,EAAe/3G,OAAQ,EAC7C,IACI5L,EAAI,EAEJ+I,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgB03C,eAAiBt9E,EAAMiO,cAE/EpV,EAAImmH,EAAYnmH,EAAImmH,EAAY9kH,QAAU,EAAI8F,EAAMozB,MAAMv6B,GAAKmpF,GAAUhiF,EAAMpC,QAAUoC,EAAM9F,QAAU,EAAI8F,EAAMozB,MAAMv6B,IACzH+I,KAAKm8G,SAASn8G,KAAKd,QAAS07G,EAAgBC,EAAcvmD,EAAU6rB,EAAQlpF,EAAG+I,KAAKd,QAAQke,cAAe09F,IAK/G,GAFqF1yF,GAA1EhqB,aAAiBsvB,IAAiBtvB,aAAiB6wB,GAAiC7wB,EACjFA,EAAM0P,SACf+sG,EAAa9mD,QASdG,EAAQksB,EAASnpF,EAAK4jH,EAAanrG,YARnC,GAAI1P,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgBy2E,sBAAuB,CAC/E,IAAI33G,EAASs6G,EAAYnmH,EAAImmH,EAAY9kH,QAAU,EAAI8F,EAAMozB,MAAMv6B,GAC/DwnF,EAAe37E,EAASs9E,EAE5BlsB,EADoBl0D,KAAKtD,MAAM+hF,EAAcz+E,KAAKd,QAAQ2sB,aAAa2hC,oBAAoBC,gBAflF,GAgBc3qD,EAM/B,OAAOoxD,GAKX2lD,EAASv4E,UAAU06E,iBAAmB,SAAU98G,EAAS87G,EAASC,EAAS3mD,EAAUsmD,EAAgBC,EAAcC,GAyB/G,OAxBIE,IACAJ,EAAelrG,OAASsrG,EAAQj/G,QAChC6+G,EAAe7mD,SAAU,EACpB+mD,IACGE,EAAQn/G,KACRmE,KAAKq9G,qBAAqBrC,EAAQj2F,MAAOi2F,EAAQh2F,IAAKsvC,EAAUp1D,EAAQwf,SAASjZ,aAOzFw1G,IACAJ,EAAanrG,OAASurG,EAAQj/G,QAC9B6+G,EAAa9mD,SAAU,EAClB+mD,IACGG,EAAQp/G,KACRmE,KAAKq9G,qBAAqBpC,EAAQl2F,MAAOk2F,EAAQj2F,IAAKsvC,EAAUp1D,EAAQwf,SAASjZ,aAOtF6uD,GAKXulD,EAASv4E,UAAU+7E,qBAAuB,SAAUt4F,EAAOC,EAAKiW,EAAKx1B,GACjEsf,GACI/tB,GAAI+tB,EAAM/tB,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MACxCpkB,GAAI8tB,EAAM9tB,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,OAE5C2J,GACIhuB,GAAIguB,EAAIhuB,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MACtCpkB,GAAI+tB,EAAI/tB,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,OAE1C,IAAIo9D,GACAvgD,OAAQ,UAAW/f,YAAa,EAAG9F,YAAcrb,EAAG+tB,EAAM/tB,EAAGC,EAAG8tB,EAAM9tB,GACtEsU,UAAYvU,EAAGguB,EAAIhuB,EAAGC,EAAG+tB,EAAI/tB,GAAKghB,KAAM,UAAWogB,UAAW,GAAI9/B,MAAO,EACzEvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAG2gC,OAAQ,EACzCC,OAAQ,EAAGlK,SAAS,EAAMxB,QAAS,EAAG7sB,GAAIyZ,MAE1C5iB,EAAI,EAER,IADAsJ,KAAKsnB,KAAKxwB,KAAK2hF,GACV/hF,EAAI,EAAGA,EAAIsJ,KAAKsnB,KAAK7wB,OAAQC,IAC9BsJ,KAAKd,QAAQuf,gBAAgBqoC,SAAS7rB,EAAKj7B,KAAKsnB,KAAK63C,QAM7D06C,EAASv4E,UAAU26E,oBAAsB,SAAU/8G,EAAS0+C,EAAGx/C,EAAO+8G,EAAeC,EAAgBR,EAAgBC,EAAcC,EAAOhB,EAAOyB,GAC7I,IAAIx4G,EAAM,EACV/C,KAAKs9G,eAAenC,EAAe,YAAY,GAC/Cn7G,KAAKs9G,eAAelC,EAAgB,YAAY,GAChD,IAEImC,EACAC,EACA7B,EACA8B,EALAC,KACAl8G,EAAS4mB,GAAUhqB,EAAM0P,SA0B7B,GArBIqtG,EAAc1kH,OAAS,IACvBinH,EAAcA,EAAcjnH,QAAU0kH,EAAc,GAEpDp4G,GADAw6G,EAAgBpC,EAAc,GAAM,IAAQ,QAC1BlkH,EACdkkH,EAAc1kH,OAAS,GACvBklH,EAAiBR,EAAc,GAAM,IAAQ,OAC7CsC,EAAgBF,EAAYvmH,EAAI2kH,EAAa3kH,EAAI2kH,EAAapjH,MAC1DkE,KAAK6G,IAAIm6G,EAAgBtC,EAAc,GAAG71G,WAAai2G,EACvDx4G,EAAM/C,KAAK29G,6BAA6BxC,EAAesC,EAAe16G,EAAK26G,GAG3ED,EAAgBtC,EAAc,GAAG71G,UAIrCm4G,EAAgBtC,EAAc,GAAG71G,UAGzCtF,KAAKs9G,eAAeI,EAAe,YACnCA,EAAcA,EAAcjnH,SAAY8D,IAAK6D,EAAOkH,SAAU,GAC9DvC,EAAMvB,EAAOvK,EAAI8L,IAAQA,EAAMvB,EAAOvK,EAAI8L,EACtCq4G,EAAe3kH,OAAS,EAAG,CAC3B,IAAIqY,OAAO,EAOX,GANA0uG,EAAiBpC,EAAe,GAAM,IAAQ,OAC9Cr4G,EAAMy6G,EAAavmH,EAAI8L,EAAMy6G,EAAavmH,EAAI8L,EAC1Cq4G,EAAe3kH,OAAS,IAExBqY,GADA6sG,EAAiBP,EAAe,GAAM,IAAQ,QAC1BpkH,EAAIwmH,EAAaxmH,EAAIwmH,EAAajlH,OAEtD4iH,EAAc1kH,OAAS,EACvB,GAAIgG,KAAK6G,IAAI83G,EAAe,GAAG91G,SAAW61G,EAAc,GAAG71G,WAAai2G,EAAiB,CACrF,IAAIqC,EAAkBnhH,KAAK6G,IAAI83G,EAAe,GAAG91G,SAAW61G,EAAc,GAAG71G,UAAY,EACxF81G,EAAe,GAAG91G,SAAW61G,EAAc,GAAG71G,SAC3Cm4G,GAAiBG,EAAkBH,GAAiBG,EACxDF,EAAcA,EAAcjnH,QAAU2kH,EAAe,QAEvB,IAAzBD,EAAc1kH,SACnB8mH,OAActjH,EACdyjH,EAAcv3G,OAAO,EAAG,GACxBu3G,EAAcA,EAAcjnH,QAAU2kH,EAAe,GACrDqC,EAAgB3uG,QAIpB2uG,EAAgB3uG,EAChB4uG,EAAcA,EAAcjnH,QAAU2kH,EAAe,GAErDA,EAAe3kH,OAAS,GAAK+mH,EAAaxmH,EAAIwmH,EAAajlH,MAAQojH,EAAa3kH,IAChF+L,EAAM/C,KAAK69G,8BAA8BzC,EAAgBtsG,EAAM/L,EAAK26G,EAAenC,IAG3F,GAAImC,EAAcjnH,OAAS,EAAG,CAC1BuJ,KAAK89G,iBAAiB5+G,EAAS0+C,EAAG8/D,EAAe5C,EAAO/3G,GACxD,IAAIg7G,EAAkB,EAClBjD,IACAiD,EAAkBjE,EAAM9iH,GAExBumH,EACA3C,EAAelrG,OAAS+tG,EAAgBhhH,KAAK6G,IAAI9B,EAAOxK,EAAI+mH,EAAkBR,EAAYvmH,EAAIumH,EAAYhlH,OACpGwlH,EAEDP,IACL5C,EAAelrG,OAASjT,KAAK6G,IAAI9B,EAAOxK,EAAIwK,EAAOjJ,MAAQwlH,EAAkBP,EAAaxmH,GACpFymH,EAAgBM,GAE1BnD,EAAe7mD,SAAU,IAMjC8lD,EAASv4E,UAAU46E,oBAAsB,SAAUh9G,EAAS0+C,EAAGx/C,EAAOi9G,EAAcC,EAAiBV,EAAgBC,EAAcC,EAAOhB,EAAOyB,GAC7I,IAAI14G,EAAQ,EACZ7C,KAAKs9G,eAAejC,EAAc,YAAY,GAC9Cr7G,KAAKs9G,eAAehC,EAAiB,YAAY,GACjD,IAEI0C,EACAC,EACAtC,EACA8B,EALAC,KACAl8G,EAAS4mB,GAAUhqB,EAAM0P,SAKzButG,EAAa5kH,OAAS,IACtBinH,EAAcA,EAAcjnH,QAAU4kH,EAAa,GAEnDx4G,GADAm7G,EAAe3C,EAAa,GAAM,IAAQ,QACvBrkH,EAAIgnH,EAAWzlH,MAC9B8iH,EAAa5kH,OAAS,GACtBklH,EAAiBN,EAAa,GAAM,IAAQ,OAC5CoC,EAAgBO,EAAW/mH,EAAI0kH,EAAa1kH,EAAI0kH,EAAarjH,OACzDmE,KAAK6G,IAAIm6G,EAAgBpC,EAAa,GAAG/1G,WAAai2G,EACtD14G,EAAQ7C,KAAKk+G,4BAA4B7C,EAAcoC,EAAe56G,EAAO66G,GAG7ED,EAAgBpC,EAAa,GAAG/1G,UAIpCm4G,EAAgBpC,EAAa,GAAG/1G,UAGxCtF,KAAKs9G,eAAeI,EAAe,YACnCA,EAAcA,EAAcjnH,SAAY8D,IAAK6D,EAAOkH,SAAU,GAC9DzC,EAAQrB,EAAOxK,EAAIwK,EAAOjJ,MAAQsK,IAAUA,EAAQrB,EAAOxK,EAAIwK,EAAOjJ,MAAQsK,EAC9E,IAAIiM,EACJ,GAAIwsG,EAAgB7kH,OAAS,EAAG,CAO5B,GANAwnH,EAAkB3C,EAAgB,GAAM,IAAQ,OAChDz4G,EAAQo7G,EAAcjnH,EAAIinH,EAAc1lH,MAAQsK,EAAQo7G,EAAcjnH,EAAIinH,EAAc1lH,MAAQsK,EAC5Fy4G,EAAgB7kH,OAAS,IAEzBqY,GADA6sG,EAAiBL,EAAgB,GAAM,IAAQ,QAC3BrkH,EAAIgnH,EAAchnH,EAAIgnH,EAAc3lH,QAExD+iH,EAAa5kH,OAAS,EACtB,GAAIgG,KAAK6G,IAAIg4G,EAAgB,GAAGh2G,SAAW+1G,EAAa,GAAG/1G,WAAai2G,EAAiB,CACrF,IAAIqC,EAAkBnhH,KAAK6G,IAAIg4G,EAAgB,GAAGh2G,SAAW+1G,EAAa,GAAG/1G,UAAY,EACxFg2G,EAAgB,GAAGh2G,SAAW+1G,EAAa,GAAG/1G,SAC3Cm4G,GAAiBG,EAAkBH,GAAiBG,EACxDF,EAAcA,EAAcjnH,QAAU6kH,EAAgB,QAEzB,IAAxBD,EAAa5kH,SAClBunH,OAAa/jH,EACbyjH,EAAcv3G,OAAO,EAAG,GACxBu3G,EAAcA,EAAcjnH,QAAU6kH,EAAgB,GACtDmC,EAAgB3uG,QAIpB2uG,EAAgB3uG,EAChB4uG,EAAcA,EAAcjnH,QAAU6kH,EAAgB,GAEtDA,EAAgB7kH,OAAS,GAAKklH,EAAa1kH,EAAIgnH,EAAchnH,EAAIgnH,EAAc3lH,SAC/EuK,EAAQ7C,KAAKm+G,+BAA+B7C,EAAiBxsG,EAAMjM,EAAO66G,EAAenC,IAGjG,GAAImC,EAAcjnH,OAAS,EAAG,CAC1BuJ,KAAKo+G,iBAAiBl/G,EAAS0+C,EAAG8/D,EAAe5C,EAAOj4G,GACxD,IAAIw7G,EAAgB,EAChBvD,IACAuD,EAAgBvE,EAAM7iH,GAEtB+mH,EACAnD,EAAanrG,OAAS+tG,EAAgBhhH,KAAK6G,IAAI9B,EAAOvK,EAAIonH,EAAgBL,EAAW/mH,EAAI+mH,EAAW1lH,QAAU+lH,EAEzGJ,IACLpD,EAAanrG,OAASjT,KAAK6G,IAAI9B,EAAOvK,EAAIuK,EAAOlJ,OAAS+lH,EAAgBJ,EAAchnH,GAAKwmH,EAAgBY,GAEjHxD,EAAa9mD,SAAU,IAM/B8lD,EAASv4E,UAAUw8E,iBAAmB,SAAU5+G,EAAS0+C,EAAG8/D,EAAe5C,EAAO/3G,GAC9E,IAAIrM,EACAquB,EACAC,EACJ,IAAK81F,EACD,IAAKpkH,EAAI,EAAGA,EAAIgnH,EAAcjnH,OAAS,EAAGC,IAAK,CAC3C,IAAI4nH,EAAOZ,EAAchnH,GAAG6D,eAAekZ,GACvC2U,GAAWs1F,EAAchnH,GAAM,IAAEoX,SAAa4vG,EAAchnH,GAAM,IAAQ,OAC1E+B,EAAOilH,EAAchnH,EAAI,GAAG6D,eAAekZ,GAC3C2U,GAAWs1F,EAAchnH,EAAI,GAAM,IAAEoX,SAAa4vG,EAAchnH,EAAI,GAAM,IAAQ,OACtFquB,GAAU/tB,EAAGsnH,EAAKtnH,EAAIsnH,EAAK/lH,MAAOtB,EAAG8L,EAAM,IAC3CiiB,GAAQhuB,EAAGyB,EAAKzB,EAAGC,EAAG8L,EAAM,IAC5B/C,KAAKu+G,mBAAmBx5F,EAAOC,EAAK44B,EAAG59C,KAAKwe,qBAAsBtf,EAAQwf,SAASjZ,aAO/Fo0G,EAASv4E,UAAU88E,iBAAmB,SAAUl/G,EAAS0+C,EAAG4gE,EAAsB1D,EAAOj4G,GACrF,IAAIkiB,EACAC,EACJ,IAAK81F,EACD,IAAK,IAAIpkH,EAAI,EAAGA,EAAI8nH,EAAqB/nH,OAAS,EAAGC,IAAK,CACtD,IAAI4nH,EAAOE,EAAqB9nH,GAAG6D,eAAekZ,GAC9C2U,GAAWo2F,EAAqB9nH,GAAM,IAAEoX,SAAa0wG,EAAqB9nH,GAAM,IAAQ,OACxF+B,EAAO+lH,EAAqB9nH,EAAI,GAAG6D,eAAekZ,GAClD2U,GAAWo2F,EAAqB9nH,EAAI,GAAM,IAAEoX,SAC1C0wG,EAAqB9nH,EAAI,GAAM,IAAQ,OAC7CquB,GAAU/tB,EAAG6L,EAAQ,GAAI5L,EAAGqnH,EAAKrnH,EAAIqnH,EAAKhmH,QAC1C0sB,GAAQhuB,EAAG6L,EAAQ,GAAI5L,EAAGwB,EAAKxB,GAC/B+I,KAAKu+G,mBAAmBx5F,EAAOC,EAAK44B,EAAG59C,KAAKwe,qBAAsBtf,EAAQwf,SAASjZ,aAO/Fo0G,EAASv4E,UAAUu7E,kBAAoB,SAAU39G,EAASo1D,EAAUmqD,EAAY7D,EAAgBE,EAAO18G,GACnG4B,KAAKs9G,eAAemB,EAAY,UAChC,IAEIhG,EACAC,EAHAl3G,EAAS4mB,GAAUhqB,EAAM0P,SACzB9K,EAASy7G,EAAW,GAGpB9C,EAAgB34G,EAAa,OAAExB,OAC/Bk9G,KACJA,EAAU5nH,KAAK2nH,EAAW,IAC1B,IAAI/nH,EAEJ,IAAKA,EAAI,EAAGA,EAAI+nH,EAAWhoH,OAAQC,IACjB+nH,EAAW/nH,GAAS,OAAE8K,OACrBjJ,QAAUojH,EAAapjH,OAClCmmH,EAAU5nH,KAAK2nH,EAAW/nH,IAGlC,IAAKokH,EAID,IAHArC,GAAYzhH,EAAGwK,EAAOxK,EAAIgM,EAAO0M,OAAQzY,EAAGuK,EAAOvK,EAAI,IACvDyhH,GAAU1hH,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAQyK,EAAO0M,OAAQzY,EAAGuK,EAAOvK,EAAI,IACpE+I,KAAKu+G,mBAAmB9F,EAASC,EAAOpkD,EAAUt0D,KAAKwe,qBAAsBtf,EAAQwf,SAASjZ,WACzF/O,EAAI,EAAGA,EAAIgoH,EAAUjoH,OAAQC,IAE9B+hH,GAAYzhH,GADZwK,EAAUk9G,EAAUhoH,GAAS,OAAE8K,QACTxK,EAAGC,EAAGuK,EAAOvK,EAAI,IACvCyhH,GAAU1hH,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAOtB,EAAGuK,EAAOvK,EAAI,IACpD+I,KAAKu+G,mBAAmB9F,EAASC,EAAOpkD,EAAUt0D,KAAKwe,qBAAsBtf,EAAQwf,SAASjZ,WAGtGm1G,EAAelrG,OAAS1M,EAAO0M,OAC/BkrG,EAAe7mD,SAAU,GAK7B8lD,EAASv4E,UAAUw7E,mBAAqB,SAAU59G,EAASo1D,EAAUqqD,EAAa9D,EAAcC,EAAO18G,GACnG4B,KAAKs9G,eAAeqB,EAAa,UACjC,IAGI55F,EACAC,EAJAxjB,EAAS4mB,GAAUhqB,EAAM0P,SACzB9K,EAAS27G,EAAY,GACrBhD,EAAgB34G,EAAa,OAAExB,OAG/Bk9G,KACJA,EAAU5nH,KAAK6nH,EAAY,IAC3B,IAAIjoH,EAEJ,IAAKA,EAAI,EAAGA,EAAIioH,EAAYloH,OAAQC,IAClBioH,EAAYjoH,GAAS,OAAE8K,OACtBlJ,SAAWqjH,EAAarjH,QACnComH,EAAU5nH,KAAK6nH,EAAYjoH,IAGnC,IAAKokH,EAID,IAHA/1F,GAAU/tB,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAQ,GAAItB,EAAGuK,EAAOvK,EAAI+L,EAAO0M,QAChEsV,GAAQhuB,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAQ,GAAItB,EAAGuK,EAAOvK,EAAI+L,EAAO0M,OAASlO,EAAOlJ,QAC9E0H,KAAKu+G,mBAAmBx5F,EAAOC,EAAKsvC,EAAUt0D,KAAKwe,qBAAsBtf,EAAQwf,SAASjZ,WACrF/O,EAAI,EAAGA,EAAIgoH,EAAUjoH,OAAQC,IAE9BquB,GAAU/tB,GADVwK,EAAUk9G,EAAUhoH,GAAS,OAAE8K,QACXxK,EAAIwK,EAAOjJ,MAAQ,GAAItB,EAAGuK,EAAOvK,GACrD+tB,GAAQhuB,EAAGwK,EAAOxK,EAAIwK,EAAOjJ,MAAQ,GAAItB,EAAGuK,EAAOvK,EAAIuK,EAAOlJ,QAC9D0H,KAAKu+G,mBAAmBx5F,EAAOC,EAAKsvC,EAAUt0D,KAAKwe,qBAAsBtf,EAAQwf,SAASjZ,WAGlGo1G,EAAanrG,OAAS1M,EAAO0M,OAC7BmrG,EAAa9mD,SAAU,GAK3B8lD,EAASv4E,UAAUi9E,mBAAqB,SAAUx5F,EAAOC,EAAKsvC,EAAUr5B,EAAKx1B,GACzE,IAAIihB,EAEA+xD,EACA74E,EAAU,IAAIyO,GACd4pB,KACJlT,GACI/tB,GAAI+tB,EAAM/tB,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MACxCpkB,GAAI8tB,EAAM9tB,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,OAE5C2J,GACIhuB,GAAIguB,EAAIhuB,EAAIyO,EAAU8sC,IAAM9sC,EAAU4V,MACtCpkB,GAAI+tB,EAAI/tB,EAAIwO,EAAU+sC,IAAM/sC,EAAU4V,OAEtC0J,EAAM/tB,IAAMguB,EAAIhuB,GAChB0vB,EAAI,KAAO3B,EAAM/tB,EAAI,GAAK,KAAO+tB,EAAM9tB,EAAI,GAAK,IAAM8tB,EAAM/tB,EAAI,IAAM+tB,EAAM9tB,EACxE,KAAO8tB,EAAM/tB,EAAI,GAAK,KAAO+tB,EAAM9tB,EAAI,GAAK,MAAa+tB,EAAIhuB,EAAI,GAAK,KACrEguB,EAAI/tB,EAAI,GAAK,KAAO+tB,EAAIhuB,EAAI,IAAMguB,EAAI/tB,EAAI,MAC1C+tB,EAAIhuB,EAAI,GAAK,KAAOguB,EAAI/tB,EAAI,GAAK,IACtCwhF,GACIpmE,YAAcrb,EAAG+tB,EAAM/tB,EAAI,EAAGC,EAAG8tB,EAAM9tB,EAAI,GAC3CsU,UAAYvU,EAAG+tB,EAAM/tB,EAAI,EAAGC,EAAG8tB,EAAM9tB,EAAI,GACzCihC,OAAQ,UACR/f,YAAa,EAAGF,KAAM,UAAWogB,UAAW,GAAI9/B,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAG2gC,OAAQ,EACnGC,OAAQ,EAAGlK,SAAS,EAAMxB,QAAS,EAAG7sB,GAAIyZ,MAE9C1Z,EAAQxJ,KAAOswB,EACfuR,EAAQ7hC,KAAOwJ,EAAQxJ,KACvB6hC,EAAQzgC,MAAQ,EAChBygC,EAAQE,OAAS,EACjBF,EAAQG,OAAS,EACjBH,EAAQjhC,EAAI,EACZihC,EAAQhhC,EAAI,EACZghC,EAAQ3/B,OAAS,EACjB2/B,EAAQ1/B,MAAQ,EAChB0/B,EAAQp4B,GAAKyZ,KACbtZ,KAAKd,QAAQuf,gBAAgBwjC,SAASqS,EAAUr8B,GAChDj4B,KAAKsnB,KAAKxwB,KAAK2hF,GACfz4E,KAAKd,QAAQuf,gBAAgBqoC,SAASwN,EAAUt0D,KAAKsnB,KAAK63C,OAC1DsZ,GACIpmE,YAAcrb,EAAGguB,EAAIhuB,EAAI,EAAGC,EAAG+tB,EAAI/tB,EAAI,GACvCsU,UAAYvU,EAAGguB,EAAIhuB,EAAI,EAAGC,EAAG+tB,EAAI/tB,EAAI,GACrCihC,OAAQ,UACR/f,YAAa,EAAGF,KAAM,UAAWogB,UAAW,GAAI9/B,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAG2gC,OAAQ,EACnGC,OAAQ,EAAGlK,SAAS,EAAMxB,QAAS,EAAG7sB,GAAIG,KAAKwe,qBAAqB3e,GAAK,WAE7EG,KAAKsnB,KAAKxwB,KAAK2hF,GACfz4E,KAAKd,QAAQuf,gBAAgBqoC,SAASwN,EAAUt0D,KAAKsnB,KAAK63C,SAG1Dz4C,EAAI,KAAO3B,EAAM/tB,EAAI,GAAK,KAAO+tB,EAAM9tB,EAAI,GAAK,KAAO8tB,EAAM/tB,EAAI,IAAM+tB,EAAM9tB,EACzE,MAAQ8tB,EAAM/tB,EAAI,GAAK,KAAO+tB,EAAM9tB,EAAI,GAAK,MAAa+tB,EAAIhuB,EAAI,GAAK,KACtEguB,EAAI/tB,EAAI,GAAK,KAAO+tB,EAAIhuB,EAAI,IAAMguB,EAAI/tB,EACvC,MAAQ+tB,EAAIhuB,EAAI,GAAK,KAAOguB,EAAI/tB,EAAI,GAAK,IAC7C2I,EAAQxJ,KAAOswB,EACfuR,EAAQ7hC,KAAOswB,EACfuR,EAAQzgC,MAAQ,EAChBygC,EAAQE,OAAS,EACjBF,EAAQG,OAAS,EACjBH,EAAQjhC,EAAI,EACZihC,EAAQhhC,EAAI,EACZghC,EAAQ3/B,OAAS,EACjB2/B,EAAQ1/B,MAAQ,EAChB0/B,EAAQp4B,GAAKyZ,KACbtZ,KAAKd,QAAQuf,gBAAgBwjC,SAASqS,EAAUr8B,GAChDwgD,GACIvqD,SAAS,EAAMxB,QAAS,EAAG7sB,GAAIyZ,KAC/BjH,YAAcrb,EAAG+tB,EAAM/tB,EAAI,EAAGC,EAAG8tB,EAAM9tB,EAAI,GAC3CsU,UAAYvU,EAAG+tB,EAAM/tB,EAAI,EAAGC,EAAG8tB,EAAM9tB,EAAI,GACzCihC,OAAQ,UACR/f,YAAa,EAAGF,KAAM,UAAWogB,UAAW,IAAK9/B,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAG2gC,OAAQ,EACpGC,OAAQ,GAEZp4B,KAAKsnB,KAAKxwB,KAAK2hF,GACfz4E,KAAKd,QAAQuf,gBAAgBqoC,SAASwN,EAAUt0D,KAAKsnB,KAAK63C,OAC1DsZ,GACIlgF,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAG2gC,OAAQ,EACnDC,OAAQ,EAAGlK,SAAS,EAAMxB,QAAS,EAAG7sB,GAAIyZ,KAC1CjH,YAAcrb,EAAGguB,EAAIhuB,EAAI,EAAGC,EAAG+tB,EAAI/tB,EAAI,GACvCsU,UAAYvU,EAAGguB,EAAIhuB,EAAI,EAAGC,EAAG+tB,EAAI/tB,EAAI,GACrCihC,OAAQ,UACR/f,YAAa,EAAGF,KAAM,UAAWogB,UAAW,KAEhDr4B,KAAKsnB,KAAKxwB,KAAK2hF,GACfz4E,KAAKd,QAAQuf,gBAAgBqoC,SAASwN,EAAUt0D,KAAKsnB,KAAK63C,QAE9DsZ,GACIpmE,YAAcrb,EAAG+tB,EAAM/tB,EAAGC,EAAG8tB,EAAM9tB,GACnCsU,UAAYvU,EAAGguB,EAAIhuB,EAAGC,EAAG+tB,EAAI/tB,GAAKihC,OAAQ,UAAW/f,YAAa,EAAGF,KAAM,UAC3EogB,UAAW,IAAK9/B,MAAO,EAAGvB,EAAG,EAAGC,EAAG,EAAGqB,OAAQ,EAAGd,MAAO,EAAG2gC,OAAQ,EACnEC,OAAQ,EAAGlK,SAAS,EAAMxB,QAAS,EAAG7sB,GAAIyZ,MAE9CtZ,KAAKsnB,KAAKxwB,KAAK2hF,GACfz4E,KAAKd,QAAQuf,gBAAgBqoC,SAASwN,EAAUt0D,KAAKsnB,KAAK63C,QAM9D06C,EAASv4E,UAAUy6E,iBAAmB,SAAUJ,EAAcn6G,EAAQo9G,GAClE,IAAI3E,EACJ,OAAQ2E,GACJ,IAAK,OACD3E,GACIl1F,OAAS/tB,EAAI2kH,EAAc,EAAG1kH,EAAGwF,KAAKqK,IAAI60G,EAAa1kH,EAAGuK,EAAOvK,IACjE+tB,KAAOhuB,EAAI2kH,EAAc,EAAG1kH,EAAGwF,KAAK+I,IAAIm2G,EAAa1kH,EAAI0kH,EAAarjH,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,SAChGyD,QAAS4/G,EAAa3kH,EAAIwK,EAAOxK,EAAGgF,QAAS,EAAGH,KAAM,aAE1D,MACJ,IAAK,QACDo+G,GACIp+G,KAAM,YACNkpB,OAAS/tB,EAAI2kH,EAAa3kH,EAAI2kH,EAAapjH,MAAQtB,EAAGwF,KAAKqK,IAAI60G,EAAa1kH,EAAGuK,EAAOvK,IACtF8E,QAAS4/G,EAAa3kH,EAAI2kH,EAAapjH,MAAQiJ,EAAOxK,EAAIwK,EAAOjJ,MACjEyD,QAAS,EACTgpB,KACIhuB,EAAI2kH,EAAa3kH,EAAI2kH,EAAapjH,MAClCtB,EAAGwF,KAAK+I,IAAIm2G,EAAa1kH,EAAI0kH,EAAarjH,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,UAG5E,MACJ,IAAK,MACD2hH,GACIj+G,QAAS2/G,EAAa1kH,EAAIuK,EAAOvK,EAAG8E,QAAS,EAAGF,KAAM,YACtDkpB,OAAS/tB,EAAIyF,KAAKqK,IAAI60G,EAAa3kH,EAAGwK,EAAOxK,GAAKC,EAAG0kH,EAAa1kH,GAClE+tB,KAAOhuB,EAAIyF,KAAK+I,IAAIm2G,EAAa3kH,EAAI2kH,EAAapjH,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OAAStB,EAAG0kH,EAAa1kH,IAExG,MACJ,IAAK,SACDgjH,GACIp+G,KAAM,YAAaG,QAAS2/G,EAAa1kH,EAAI0kH,EAAarjH,OAASkJ,EAAOvK,EAAIuK,EAAOlJ,OAAQyD,QAAS,EACtGipB,KACIhuB,EAAIyF,KAAK+I,IAAIm2G,EAAa3kH,EAAI2kH,EAAapjH,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OACpEtB,EAAG0kH,EAAa1kH,EAAI0kH,EAAarjH,QAErCysB,OAAS/tB,EAAIyF,KAAKqK,IAAI60G,EAAa3kH,EAAGwK,EAAOxK,GAAKC,EAAG0kH,EAAa1kH,EAAI0kH,EAAarjH,SAEvF,MACJ,IAAK,YACD2hH,GACIl1F,OAAS/tB,EAAIyF,KAAKqK,IAAI60G,EAAa3kH,EAAGwK,EAAOxK,GAAKC,EAAG0kH,EAAa1kH,EAAI0kH,EAAarjH,QACnF0sB,KACIhuB,EAAIyF,KAAK+I,IAAIm2G,EAAa3kH,EAAI2kH,EAAapjH,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OACpEtB,EAAG0kH,EAAa1kH,EAAI0kH,EAAarjH,QAErC0D,QAAS2/G,EAAa1kH,EAAI0kH,EAAarjH,OAASkJ,EAAOvK,EAAG8E,QAAS,EAAGF,KAAM,aAEhF,MACJ,IAAK,YACDo+G,GACIl1F,OAAS/tB,EAAIyF,KAAKqK,IAAI60G,EAAa3kH,EAAGwK,EAAOxK,GAAKC,EAAG0kH,EAAa1kH,GAClE+tB,KAAOhuB,EAAIyF,KAAK+I,IAAIm2G,EAAa3kH,EAAI2kH,EAAapjH,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OAAStB,EAAG0kH,EAAa1kH,GACpG+E,QAAS2/G,EAAa1kH,EAAIuK,EAAOvK,EAAIuK,EAAOlJ,OAAQyD,QAAS,EAAGF,KAAM,aAE1E,MACJ,IAAK,YACDo+G,GACIl1F,OAAS/tB,EAAI2kH,EAAa3kH,EAAI2kH,EAAapjH,MAAQtB,EAAGwF,KAAKqK,IAAI60G,EAAa1kH,EAAGuK,EAAOvK,IACtF+tB,KACIhuB,EAAI2kH,EAAa3kH,EAAI2kH,EAAapjH,MAClCtB,EAAGwF,KAAK+I,IAAIm2G,EAAa1kH,EAAI0kH,EAAarjH,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,SAExEyD,QAAS4/G,EAAa3kH,EAAI2kH,EAAapjH,MAAQiJ,EAAOxK,EAAGgF,QAAS,EAAGH,KAAM,aAE/E,MACJ,IAAK,YACDo+G,GACIl1F,OAAS/tB,EAAI2kH,EAAc,EAAG1kH,EAAIwF,KAAKqK,IAAI60G,EAAa1kH,EAAGuK,EAAOvK,IAClE+tB,KAAOhuB,EAAI2kH,EAAc,EAAG1kH,EAAGwF,KAAK+I,IAAIm2G,EAAa1kH,EAAI0kH,EAAarjH,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,SAChGyD,QAAS4/G,EAAa3kH,EAAIwK,EAAOxK,EAAIwK,EAAOjJ,MAAOyD,QAAS,EAAGH,KAAM,aAEzE,MACJ,IAAK,UACDo+G,GACIl1F,OAAS/tB,EAAI2kH,EAAa3kH,EAAI2kH,EAAapjH,MAAQ,EAAItB,EAAIwF,KAAKqK,IAAI60G,EAAa1kH,EAAGuK,EAAOvK,IAC3F+tB,KACIhuB,EAAI2kH,EAAa3kH,EAAI2kH,EAAapjH,MAAQ,EAC1CtB,EAAGwF,KAAK+I,IAAIm2G,EAAa1kH,EAAI0kH,EAAarjH,OAAQkJ,EAAOvK,EAAIuK,EAAOlJ,SAExEyD,QAAS4/G,EAAa3kH,EAAI2kH,EAAapjH,MAAQ,GAAKiJ,EAAOxK,EAAIwK,EAAOjJ,MAAQ,GAAIyD,QAAS,EAAGH,KAAM,eAExG,MACJ,IAAK,UACDo+G,GACIl1F,OAAS/tB,EAAIyF,KAAKqK,IAAI60G,EAAa3kH,EAAGwK,EAAOxK,GAAKC,EAAG0kH,EAAa1kH,EAAI0kH,EAAarjH,OAAS,GAC5F0sB,KACIhuB,EAAIyF,KAAK+I,IAAIm2G,EAAa3kH,EAAI2kH,EAAapjH,MAAOiJ,EAAOxK,EAAIwK,EAAOjJ,OACpEtB,EAAG0kH,EAAa1kH,EAAI0kH,EAAarjH,OAAS,GAE9C0D,QAAS2/G,EAAa1kH,EAAI0kH,EAAarjH,OAAS,GAAKkJ,EAAOvK,EAAIuK,EAAOlJ,OAAS,GAAIyD,QAAS,EAAGF,KAAM,eAIlH,OAAOo+G,GAMXJ,EAASv4E,UAAUu4B,UAAY,SAAU36D,EAAS1H,GAC9C,IACIqiE,EADe75D,KAAKd,QAAQ2sB,aACHguC,UACzBthE,EAAQf,GAASqiE,GAAa,GAClC,OAAIthE,GAAUshE,EAAY,EACfriE,EAAQqiE,EAAYthE,EAGpBf,EAAQe,GAMvBshH,EAASv4E,UAAUw6E,YAAc,SAAUlhG,EAAWoC,EAAgBha,GAClE,OACIhD,KAAKd,QAAQke,cAAcpE,MAAMviB,QAAUuJ,KAAKd,QAAQke,cAAcpE,MAAM,GAAGnZ,KAAOmD,EAAOnD,IAUrGg6G,EAASv4E,UAAUs6E,UAAY,SAAU/xC,EAAetpE,EAAMqN,EAAOyhF,EAAUmtB,GAK3E,IAAK,IAHDqC,EACAr9G,EAFAwX,KAGA8oE,EAAQjY,EAAc+X,UAAU46B,EAAcntB,EAAWzhF,GACpDlX,EAAI,EAAGA,EAAIorF,EAAMrrF,OAAQC,IAAK,CACnC,IAAIwsF,EAAOpB,EAAMprF,GACjB,GAAIwsF,EAAK/6D,QAAQ1xB,OAAS,EACtB,IAAK,IAAIJ,EAAI,EAAGA,EAAI6sF,EAAK/6D,QAAQ1xB,OAAQJ,IACrCwoH,EAAK37B,EAAK/6D,QAAQ9xB,GACZ2J,KAAKd,QAAQ0b,UAAUikG,EAAGh/G,cAAeuT,KAAcyrG,EAAG3wF,UAC5D1sB,EAAS4mB,GAAUy2F,IACQ,IAAvB7lG,EAAMkF,QAAQ2gG,IAAc7+G,KAAKg3G,eAAeppG,EAAOpM,IACvDwX,EAAMliB,KAAK+nH,GAEXrC,GAAeA,EAAYt+F,QAAQ2gG,IAAO7+G,KAAKg3G,eAAe3nB,EAAU7tF,IACxEg7G,EAAY1lH,KAAK+nH,IAMrC,OAAO7lG,GAEX6gG,EAASv4E,UAAU01E,eAAiB,SAAUppG,EAAOpM,GACjD,OAAWA,EAAOxK,EAAK4W,EAAM5W,EAAI4W,EAAMrV,OAAYqV,EAAM5W,EAAKwK,EAAOxK,EAAIwK,EAAOjJ,OACxEiJ,EAAOvK,EAAK2W,EAAM3W,EAAI2W,EAAMtV,QAAcsV,EAAM3W,EAAKuK,EAAOvK,EAAIuK,EAAOlJ,QAEnFuhH,EAASv4E,UAAU9iB,mBAAqB,WACpC,OAAOxe,KAAKd,QAAQuf,gBAAgB+qC,iBAMxCqwD,EAASv4E,UAAUq6C,iBAAmB,SAAUz8E,GAC5C,IAAIm8F,EAAgBr7F,KAAKwe,qBAAqBgD,eAAe,kBACzD8F,EAAOtnB,KAAKwe,qBAAqBgD,eAAe,aAChD65E,GACAA,EAAc79E,WAAW8R,YAAY+rE,GAErC/zE,GACAA,EAAK9J,WAAW8R,YAAYhI,IAMpCuyF,EAASv4E,UAAUg8E,eAAiB,SAAU/iH,EAAKgL,EAAOu5G,GACtD,IAAIpoH,EACAL,EACA+Z,EACJ,GAAI0uG,EACA,IAAKpoH,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IACxB,IAAKL,EAAIK,EAAI,EAAGL,EAAIkE,EAAI9D,OAAQJ,IACxBkE,EAAI7D,GAAG6O,GAAShL,EAAIlE,GAAGkP,KACvB6K,EAAO7V,EAAI7D,GACX6D,EAAI7D,GAAK6D,EAAIlE,GACbkE,EAAIlE,GAAK+Z,QAMrB,IAAK1Z,EAAI,EAAGA,EAAI6D,EAAI9D,OAAQC,IACxB,IAAKL,EAAIK,EAAI,EAAGL,EAAIkE,EAAI9D,OAAQJ,IACxBkE,EAAI7D,GAAG6O,GAAShL,EAAIlE,GAAGkP,KACvB6K,EAAO7V,EAAI7D,GACX6D,EAAI7D,GAAK6D,EAAIlE,GACbkE,EAAIlE,GAAK+Z,IAS7BypG,EAASv4E,UAAUq8E,6BAA+B,SAAUxC,EAAe4D,EAAeh8G,EAAK26G,GAC3F,IAAIsB,EACArD,EACA7sG,EACApY,EACJ,IAAKA,EAAI,EAAGA,EAAIykH,EAAc1kH,SAC1BuoH,EAAe7D,EAAczkH,EAAI,GAAM,IAAQ,OAC/CilH,EAAiBR,EAAczkH,GAAM,IAAQ,OAC7CoY,EAAOkwG,EAAWhoH,EAAI2kH,EAAa3kH,EAAI2kH,EAAapjH,MAChDkE,KAAK6G,IAAIwL,EAAOiwG,IAAkB,GAJJroH,IAK9BgnH,EAAcA,EAAcjnH,QAAU0kH,EAAczkH,GAChDilH,EAAa1kH,EAAI8L,IACjBA,EAAM44G,EAAa1kH,GAO/B,OAAO8L,GAKX82G,EAASv4E,UAAUu8E,8BAAgC,SAAUzC,EAAgB2D,EAAeh8G,EAAK26G,EAAenC,GAC5G,IACIv4G,EACA24G,EACAqD,EACAlwG,EAJAmwG,EAAiB7D,EAAe,GAAG91G,SAKvC,GAAI7I,KAAK6G,IAAIy7G,EAAgBE,IAAmB1D,EAC5C,IAAK,IAAI7kH,EAAI,EAAGA,EAAI0kH,EAAe3kH,OAAS,IACxCuM,EAASo4G,EAAe1kH,GAAG6D,IAC3BohH,EAAiBP,EAAe1kH,EAAI,GAAM,IAAQ,OAClDsoH,EAAch8G,EAAa,OAC3B8L,EAAO6sG,EAAa3kH,EAAIgoH,EAAWhoH,EAAIgoH,EAAWzmH,MAC9CkE,KAAK6G,IAAIwL,EAAOiwG,IAAkB,GALKroH,IAMvCgnH,EAAcA,EAAcjnH,QAAU2kH,EAAe1kH,EAAI,GACrDsoH,EAAW/nH,EAAI8L,IACfA,EAAMi8G,EAAW/nH,GAQjC,OAAO8L,GAEX82G,EAASv4E,UAAU48E,4BAA8B,SAAU7C,EAAc0D,EAAel8G,EAAO66G,GAI3F,IAAK,IAHDsB,EACArD,EACA7sG,EACKpY,EAAI,EAAGA,EAAI2kH,EAAa5kH,SAC7BuoH,EAAe3D,EAAa3kH,EAAI,GAAM,IAAQ,OAC9CilH,EAAiBN,EAAa3kH,GAAM,IAAQ,OAC5CoY,EAAOkwG,EAAW/nH,EAAI0kH,EAAa1kH,EAAI0kH,EAAarjH,OAChDmE,KAAK6G,IAAIwL,EAAOiwG,IAAkB,GAJDroH,IAKjCgnH,EAAcA,EAAcjnH,QAAU4kH,EAAa3kH,GAC/CilH,EAAa3kH,EAAI2kH,EAAapjH,MAAQsK,IACtCA,EAAQ84G,EAAa3kH,EAAI2kH,EAAapjH,OAOlD,OAAOsK,GAKXg3G,EAASv4E,UAAU68E,+BAAiC,SAAU7C,EAAiByD,EAAel8G,EAAO66G,EAAenC,GAChH,IACIv4G,EACA24G,EACAqD,EACAlwG,EAJAmwG,EAAiB3D,EAAgB,GAAGh2G,SAKxC,GAAI7I,KAAK6G,IAAIy7G,EAAgBE,IAAmB1D,EAC5C,IAAK,IAAI7kH,EAAI,EAAGA,EAAI4kH,EAAgB7kH,OAAS,IACzCuM,EAASs4G,EAAgB5kH,GAAG6D,IAC5BohH,EAAiBL,EAAgB5kH,EAAI,GAAM,IAAQ,OACnDsoH,EAAch8G,EAAa,OAC3B8L,EAAO6sG,EAAa1kH,EAAI+nH,EAAW/nH,EAAI+nH,EAAW1mH,OAC9CmE,KAAK6G,IAAIwL,EAAOiwG,IAAkB,GALMroH,IAMxCgnH,EAAcA,EAAcjnH,QAAU6kH,EAAgB5kH,EAAI,GACtDsoH,EAAWhoH,EAAIgoH,EAAWzmH,MAAQsK,IAClCA,EAAQm8G,EAAWhoH,EAAIgoH,EAAWzmH,OAQlD,OAAOsK,GAMXg3G,EAASv4E,UAAUizB,SAAW,WAC1B,IAAID,EAOJ,OANIt0D,KAAKd,QAAQ2sB,aAAa5Y,YAAc+wB,kBAAgB03C,gBACxDpnB,EAAW/yC,SAASsY,gBAAgB,6BAA8B,MACzD3D,aAAa,KAAM,kBAC5Bo+B,EAASp+B,aAAa,iBAAkB,cACxCl2B,KAAKwe,qBAAqB+Q,YAAY+kC,IAEnCA,GAcXulD,EAASv4E,UAAUsa,QAAU,aAQ7Bi+D,EAASv4E,UAAUqa,cAAgB,WAI/B,MAAO,YAEJk+D,KCpwCPxwC,GAA0B,WAK1B,SAASA,IACLrpE,KAAKk/G,WAAY,EACjBl/G,KAAK4zC,cAuvBT,OAnvBAy1B,EAAS/nC,UAAUgoD,YAAc,SAAUpqF,GACvCA,EAAQguE,gBACJk9B,SAAS,EAAOD,SAAS,EAAOgV,aAAc,KAC9CroH,KAAMoI,EAAQ+c,gBAAgB46E,KAAK33F,GAAUutF,KAAM2yB,SAAU1yB,KAAM0yB,SACnElnD,iBAAkBh5D,EAAQg5D,iBAAiB2+B,KAAK33F,GAAUw5D,eAAgBx5D,EAAQw5D,eAAem+B,KAAK33F,GACtGmgH,OAAQ,KAAMC,aAAeC,eAIrCl2C,EAAS/nC,UAAUrlB,gBAAkB,SAAUJ,EAAO3c,GAClD,IAAIo+D,EAAc,KAElB,GAAIp+D,EAAQguE,eAAemyC,OAAQ,CAE/B,IAAsB,IADTngH,EAAQguE,eAAemyC,OAAOxjG,GAChCy6C,OACP,OAGJp3D,EAAQguE,gBAAkBhuE,EAAQguE,eAAei9B,SAAWjrG,EAAQguE,eAAeiyC,gBACnF7hD,EAAcp+D,EAAQguE,eAAeiyC,cACrB1mH,KACR6kE,EAAYa,WACAb,EAAY7kE,KACd0lE,SAAW,KACrBb,EAAY7kE,KAAOojB,EACnBA,EAAMsiD,SAAWb,IAIrBA,EAAY7kE,KAAOojB,EACnBA,EAAMsiD,SAAWb,IAGzBp+D,EAAQguE,eAAeiyC,aAAetjG,EACtC7b,KAAKw/G,eAAetgH,GACpBA,EAAQguE,eAAei9B,SAAU,EACjCjrG,EAAQguE,eAAek9B,SAAU,GAGrC/gC,EAAS/nC,UAAUmrD,KAAO,SAAUvtF,GAChC,IAAI2c,EAAQ7b,KAAKy/G,aAAavgH,GAC1BwgH,EAAsB,EACtB7jG,IACuB,aAAnBA,EAAMC,UACa,aAAfD,EAAMhgB,MACN6jH,IACA1/G,KAAKk/G,WAAY,GAGjBl/G,KAAK2/G,UAAU9jG,EAAO3c,GAEtBc,KAAKk/G,YACLl/G,KAAK4/G,gBAAgB/jG,EAAO3c,EAASwgH,GACrC1/G,KAAKk/G,WAAY,IAIrBhgH,EAAQguE,eAAeuf,KAAK5wE,KAIxCwtD,EAAS/nC,UAAUk+E,eAAiB,SAAUtgH,GAC1C,IAGIuc,EACAogE,EAJAyjC,KACAC,KACAM,EAAY3gH,EAAQguE,eAAeiyC,aAUvC,IAPAU,EAAY3gH,EAAQguE,eAAeiyC,aAC/BjgH,EAAQguE,eAAei9B,SAAuD,IAA5CjrG,EAAQguE,eAAeoyC,UAAU7oH,OACnEuJ,KAAK8/G,iBAAiBR,EAAWO,GAGjC7/G,KAAK8/G,iBAAiBP,EAAWM,GAE9BA,GAAaA,EAAU1hD,UAC1B1iD,EAAUokG,EAAU1hD,SACpBn+D,KAAK8/G,iBAAiBR,EAAW7jG,GACjCokG,EAAYA,EAAU1hD,SAG1B,IADA0hD,EAAY3gH,EAAQguE,eAAeiyC,aAC5BU,GAAaA,EAAUpnH,MAC1BojF,EAAUgkC,EAAUpnH,KACpBuH,KAAK8/G,iBAAiBP,EAAW1jC,GACjCgkC,EAAYA,EAAUpnH,KAE1ByG,EAAQguE,eAAeoyC,UAAYA,EACnCpgH,EAAQguE,eAAeqyC,UAAYA,GAEvCl2C,EAAS/nC,UAAUw+E,iBAAmB,SAAUj+C,EAAMtnE,GAC9CA,GAAoB,eAAbA,EAAIsB,MAAsC,aAAbtB,EAAIsB,MACxCgmE,EAAK/qE,MACDklB,WAAYzhB,EAAIyhB,WAAazhB,EAAIyhB,WAAa,KAC9CD,WAAYxhB,EAAIwhB,WAAaxhB,EAAIwhB,WAAa,KAC9ClgB,KAAMtB,EAAIsB,KAAOtB,EAAIsB,KAAO,KAC5BigB,SAAUvhB,EAAIuhB,SAAWvhB,EAAIuhB,SAAW,QAIpDutD,EAAS/nC,UAAUs+E,gBAAkB,SAAU/jG,EAAO3c,EAASwgH,GAC3D,KAA+B,IAAxBA,GACH1/G,KAAK2/G,UAAU9jG,EAAO3c,GAEH,gBADnB2c,EAAQ7b,KAAKy/G,aAAavgH,IAChBrD,KACN6jH,IAEoB,aAAf7jG,EAAMhgB,MACX6jH,IAGRA,EAAsB,GAE1Br2C,EAAS/nC,UAAUq+E,UAAY,SAAU9jG,EAAO3c,GAC5C,IAAI3E,EAIJ,GAHmB,oBAAfshB,EAAMhgB,MAA6C,sBAAfggB,EAAMhgB,MAA+C,2BAAfggB,EAAMhgB,OAChFtB,EAAOshB,EAAgB,YAER,eAAfA,EAAMhgB,MAAwC,aAAfggB,EAAMhgB,MACjCqD,EAAQguE,eAAeoyC,UAAU7oH,OAAS,EAAG,CAC7C,IAAI2pB,EAAYlhB,EAAQguE,eAAeoyC,UAAUn5G,OAAO,EAAG,GAC3DjH,EAAQguE,eAAeqyC,UAAUp5G,OAAO,EAAG,EAAGia,EAAU,IAKhE,OAFAlhB,EAAQ2qB,uBAAsB,GAC9B3qB,EAAQgY,gBAAkBC,gBAAckyD,SAChCxtD,EAAMhgB,MACV,IAAK,kBACL,IAAK,QACL,IAAK,aACDmE,KAAK+/G,sBAAsBxlH,EAAK2E,GAChC,MACJ,IAAK,cACL,IAAK,SACDc,KAAKggH,kBAAkBzlH,EAAK2E,EAAS2c,GACrC,MACJ,IAAK,kBACD7b,KAAKigH,sBAAsB1lH,EAAK2E,EAAS2c,GACzC,MACJ,IAAK,oBACD7b,KAAKkgH,wBAAwB3lH,EAAK2E,GAClC,MACJ,IAAK,kBACDc,KAAKmgH,sBAAsBtkG,EAAO3c,GAAS,GAC3C,MACJ,IAAK,oBACD2c,EAAMukG,QAAS,EACfpgH,KAAKqgH,wBAAwBxkG,EAAO3c,GACpC2c,EAAMukG,QAAS,EACf,MACJ,IAAK,yBACDvkG,EAAMukG,QAAS,EACfpgH,KAAKsgH,6BAA6BzkG,EAAO3c,GACzC2c,EAAMukG,QAAS,EACf,MACJ,IAAK,wBACDvkG,EAAMukG,QAAS,EACfpgH,KAAKugH,4BAA4B1kG,EAAO3c,GACxC2c,EAAMukG,QAAS,EACf,MACJ,IAAK,QACDpgH,KAAK+uE,QAAQlzD,EAAO3c,GACpB,MACJ,IAAK,UACDc,KAAKooD,MAAMvsC,EAAO3c,GAClB,MACJ,IAAK,iBACDc,KAAKwgH,qBAAqBjmH,EAAK2E,GAC/B,MACJ,IAAK,sBACDc,KAAKygH,kBAAkB5kG,EAAO3c,GAAS,GACvC,MACJ,IAAK,4BACDc,KAAK0gH,wBAAwB7kG,EAAO3c,GAAS,GAC7C,MACJ,IAAK,yBACDc,KAAK2gH,6BAA6B9kG,EAAO3c,GAAS,GAClD,MACJ,IAAK,4BACDc,KAAK4gH,2BAA2B/kG,EAAO3c,GAAS,GAGxDA,EAAQgY,iBAAmBC,gBAAckyD,SACzCnqE,EAAQ2qB,uBAAsB,GAC9B3qB,EAAQotF,qBAAqBzwE,IAEjCwtD,EAAS/nC,UAAU8mB,MAAQ,SAAUy4D,EAAc3hH,GAC/CA,EAAQktB,IAAIy0F,EAAa9kG,aAE7BstD,EAAS/nC,UAAUytC,QAAU,SAAUlzD,EAAO3c,GAC1C2c,EACMG,WAAaN,GAAYG,EAAME,YACrC,IAAIxb,EAAOsb,EAAME,WACjB7c,EAAQ+f,eAAe8vD,QAAQxuE,IAEnC8oE,EAAS/nC,UAAUw/E,eAAiB,SAAU5zF,GAC1C,MAAY,WAARA,GAA4B,YAARA,GAK5Bm8C,EAAS/nC,UAAUy/E,YAAc,SAAUzqH,EAAYmmC,GACnD,IAAK,IAAI5/B,EAAK,EAAG6f,EAAKC,OAAOC,KAAK6f,GAAW5/B,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC/D,IAAIqwB,EAAMxQ,EAAG7f,GACRmD,KAAK8gH,eAAe5zF,KACjBuP,EAASvP,aAAgBvQ,OACzB3c,KAAK+gH,YAAYzqH,EAAW42B,GAAMuP,EAASvP,IAG3C52B,EAAW42B,GAAOuP,EAASvP,MAK3Cm8C,EAAS/nC,UAAUo/E,wBAA0B,SAAU7kG,EAAO3c,EAAS8hH,GACnE,IAAI1jD,EAAe,EAAWzhD,EAAMG,WAAaH,EAAME,WACnDklG,EAAa5uF,GAAeirC,EAAazhD,EAAM88C,UAC/CuoD,EAAchiH,EAAQ+f,eAAeu4D,qBAAqBt4E,EAAQ0b,UAAU0iD,EAAYz9D,IAAKohH,GAC7FntC,EAAgB50E,EAAQ0b,UAAU0iD,EAAYz9D,IAC9C+yD,EAAiBvgC,GAAeyhD,EAAej4D,EAAM88C,UACzD/F,EAAeljD,OAASuxG,EAAWvxG,OACnCkjD,EAAejwD,OAASs+G,EAAWt+G,OACnCiwD,EAAer6D,MAAQ0oH,EAAW1oH,MAClCq6D,EAAet6D,OAAS2oH,EAAW3oH,OACnCs6D,EAAevmD,YAAc40G,EAAW50G,YACxCumD,EAAejwD,OAASs+G,EAAWt+G,OAC/BmxE,aAAyBv/D,GACzBrV,EAAQwe,mBAAmBo2D,KAAmBotC,GAG9ChiH,EAAQ2sE,wBAAwBiI,KAAmBotC,IAG3D73C,EAAS/nC,UAAUq/E,6BAA+B,SAAU9kG,EAAO3c,EAAS8hH,GACxE,IACIxjG,EADA8/C,EAAe,EAAWzhD,EAAMG,WAAaH,EAAME,WAEnDoB,EAAeje,EAAQ0b,UAAU0iD,EAAYz9D,IAC7Csd,EAAatC,YACb2C,EAAate,EAAQ0b,UAAUuC,EAAatC,WACjCjJ,SAASzL,OAAOqX,EAAW5L,SAASsM,QAAQf,EAAatd,IAAK,GACzE2d,EAAW1P,QAAQ8D,SAASzL,OAAOqX,EAAW1P,QAAQ8D,SAASsM,QAAQf,EAAarP,SAAU,IAErE,KAAzBwvD,EAAYziD,YACZ2C,EAAate,EAAQ0b,UAAU0iD,EAAYziD,WAChCjJ,SAAS9a,KAAKwmE,EAAYz9D,IACrC2d,EAAW1P,QAAQ8D,SAAS9a,KAAKqmB,EAAarP,UAElDqP,EAAatC,SAAWyiD,EAAYziD,SACpC3b,EAAQkc,oBAAoB+B,IAEhCksD,EAAS/nC,UAAUs/E,2BAA6B,SAAU/kG,EAAO3c,EAAS8hH,GACtE,IAAI1jD,EAAe,EAAWzhD,EAAMG,WAAaH,EAAME,WACvD,GAAIuhD,EAAY/6D,OAAQ,CACpB,IAAIwY,EAAW7b,EAAQ0b,UAAU0iD,EAAY/6D,OAAOsY,UAChDE,IACIuiD,EAAYt6D,QACZ+X,EAASjN,QAAQ8D,SAASzL,OAAOm3D,EAAYx+C,YAAa,GAC1D/D,EAASjN,QAAQ8D,SAASzL,OAAOm3D,EAAYv+C,YAAa,EAAGu+C,EAAY/6D,OAAOuL,eAGhD7T,IAA5BqjE,EAAYv+C,aACP7f,EAAQ0b,UAAU0iD,EAAY/6D,OAAO1C,KACtCX,EAAQktB,IAAIkxC,EAAY/6D,QAE5BwY,EAASjN,QAAQ8D,SAASzL,OAAOm3D,EAAYv+C,YAAa,EAAG7f,EAAQ0b,UAAU0iD,EAAY/6D,OAAO1C,IAAIiO,SACtG5O,EAAQ0b,UAAU0iD,EAAY/6D,OAAO1C,IAAIgb,SAAWE,EAASlb,KAG7Dkb,EAASjN,QAAQ8D,SAASzL,OAAO4U,EAASjN,QAAQ8D,SAASsM,QAAQhf,EAAQ0b,UAAU0iD,EAAY/6D,OAAO1C,IAAIiO,SAAU,GACtH5O,EAAQ0b,UAAU0iD,EAAY/6D,OAAO1C,IAAIgb,SAAW,IAGxDmmG,GAAkC,kBAAxBjmG,EAAS3c,MAAMvC,MACzBqD,EAAQ48C,OAAOwhB,EAAY/6D,QAE/BwY,EAASjN,QAAQ6P,QAAQ,IAAIC,IAC7B7C,EAASjN,QAAQ+P,QAAQ9C,EAASjN,QAAQgQ,aAC1C5e,EAAQkc,oBAAoBL,GAC5B7b,EAAQ22D,oBAIpBwT,EAAS/nC,UAAUm/E,kBAAoB,SAAU5kG,EAAO3c,EAAS8hH,GAC7D,IAAI1jD,EAAe,EAAWzhD,EAAMG,WAAWhD,MAAM,GACjD6C,EAAME,WAAW/C,MAAM,GACvBioG,EAAa1uF,GAAS+qC,EAAazhD,EAAM88C,UACzCuoD,EAAchiH,EAAQ+f,eAAes4D,eAAer4E,EAAQ0b,UAAU0iD,EAAYz9D,IAAKohH,GACvFntC,EAAgB50E,EAAQ0b,UAAU0iD,EAAYz9D,IAC7B0yB,GAASuhD,EAAej4D,EAAM88C,UACpCjpD,OAASuxG,EAAWvxG,OACnCxQ,EAAQwe,mBAAmBo2D,KAAmBotC,GAC1CptC,EAAcj5D,UACd3b,EAAQsqE,qBAAqBtqE,EAAQ0b,UAAUk5D,EAAcj5D,YAGrEwuD,EAAS/nC,UAAU6+E,sBAAwB,SAAUtkG,EAAO3c,EAAS8hH,GACjE,IAAIhlG,EAAaH,EAAMG,WACnBD,EAAaF,EAAME,WACvB/b,KAAK+gH,YAAY7hH,EAAU8hH,EAAShlG,EAAaD,GACjDilG,EAAS9hH,EAAQ+8C,kBAAkBjgC,EAAYD,GAAc7c,EAAQ+8C,kBAAkBlgC,EAAYC,GACnG9c,EAAQgY,eAAiBhY,EAAQgY,eAAiBC,gBAAckyD,UAEpEA,EAAS/nC,UAAUk/E,qBAAuB,SAAUjmH,EAAK2E,GACrD,IAEI0M,EAFAlV,EAAI,EAGR,GAAI6D,EAAI2iB,YAAc3iB,EAAI2iB,WAAWzmB,OAAS,EAC1C,IAAKC,EAAI,EAAGA,EAAI6D,EAAI2iB,WAAWzmB,OAAQC,IACnCkV,EAAYrR,EAAI2iB,WAAWxmB,GAC3BsJ,KAAKmhH,eAAev1G,EAAW1M,IAI3CmqE,EAAS/nC,UAAU6/E,eAAiB,SAAUv1G,EAAW1M,GACrD,IAAI+/B,EAAO//B,EAAQ0b,UAAUhP,EAAU/L,IACvCo/B,EAAK9lC,SAAWyS,EAAUzS,SAC1B+F,EAAQ+f,eAAe++C,eAAe/+B,IAE1CoqC,EAAS/nC,UAAUy+E,sBAAwB,SAAUxlH,EAAK2E,GACtD,IACIqB,EACAqL,EAFAlV,EAAI,EAGR,GAAI6D,EAAIye,OAASze,EAAIye,MAAMviB,OAAS,EAChC,IAAKC,EAAI,EAAGA,EAAI6D,EAAIye,MAAMviB,OAAQC,IAC9B6J,EAAOhG,EAAIye,MAAMtiB,GACjBsJ,KAAKohH,gBAAgB7gH,EAAMrB,GAGnC,GAAI3E,EAAI2iB,YAAc3iB,EAAI2iB,WAAWzmB,OAAS,EAC1C,IAAKC,EAAI,EAAGA,EAAI6D,EAAI2iB,WAAWzmB,OAAQC,IACnCkV,EAAYrR,EAAI2iB,WAAWxmB,GAC3BsJ,KAAKqhH,kBAAkBz1G,EAAW1M,IAI9CmqE,EAAS/nC,UAAU8/E,gBAAkB,SAAU7mH,EAAK2E,EAAS2c,GACzD,IAAItb,EAAOrB,EAAQ0b,UAAUrgB,EAAIsF,IAOjC,GANItF,EAAIi+C,YAAcj4C,EAAKi4C,WACvBt5C,EAAQyxE,WAAWp2E,EAAKA,EAAIi+C,YAE3Bj+C,EAAIi+C,WAAaj4C,EAAKi4C,WACvBt5C,EAAQssF,cAAcjxF,EAAIsF,IAE1BU,EAAKi4C,UAAW,CAChB,IAAIjG,EAAKh4C,EAAIoI,OAAOC,KAAOrC,EAAKoC,OAAOC,KACnC4vC,EAAKj4C,EAAIoI,OAAOI,IAAMxC,EAAKoC,OAAOI,IACtC7D,EAAQic,KAAK5a,EAAMgyC,EAAIC,OAEtB,CACGD,EAAKh4C,EAAIwB,QAAUwE,EAAKuN,QAAQ/R,QAChCy2C,EAAKj4C,EAAIyB,QAAUuE,EAAKuN,QAAQ9R,QACpCkD,EAAQic,KAAK5a,EAAMgyC,EAAIC,GAEvBtzC,EAAQi6C,YACRj6C,EAAQi6C,WAAWi0C,YAAY7sF,EAAMrB,IAG7CmqE,EAAS/nC,UAAU0+E,kBAAoB,SAAUzlH,EAAK2E,EAAS2c,GAC3D,IACIjQ,EACArL,EAFA7J,EAAI,EAGR,GAAI6D,GAAOA,EAAIye,OAASze,EAAIye,MAAMviB,OAAS,EACvC,IAAKC,EAAI,EAAGA,EAAI6D,EAAIye,MAAMviB,OAAQC,IAE9B,IADA6J,EAAOhG,EAAIye,MAAMtiB,IACRkb,WAAarR,EAAKuX,UAGvB,IAAK,IADDkB,EAAQ9Z,EAAQ+f,eAAeu6C,kBAAkBj5D,MAC5C+1C,EAAM,EAAGA,EAAMt9B,EAAMviB,OAAQ6/C,IAAO,CACzC,IAAIm4B,EAAW5yD,EAAM+3B,WAAW56B,EAAMs9B,GAAKz2C,IACtCid,GAAc2xD,KAAcl6D,IAC7BvU,KAAKsxG,YAAY7iC,EAAUvvE,EAAS2c,GACpC7b,KAAKohH,gBAAgB3yC,EAAUvvE,EAAS2c,IAGxC7b,KAAKqhH,kBAAkB5yC,EAAUvvE,EAAS2c,QAKlD7b,KAAKsxG,YAAY/wG,EAAMrB,GACvBc,KAAKohH,gBAAgB7gH,EAAMrB,GAIvC,GAAI3E,GAAOA,EAAI2iB,YAAc3iB,EAAI2iB,WAAWzmB,OAAS,EAAG,CACpD,IAAIymB,EAAa3iB,EAAI2iB,WACrB,IAAKxmB,EAAI,EAAGA,EAAIwmB,EAAWzmB,OAAQC,IAC/BkV,EAAYsR,EAAWxmB,GACvBsJ,KAAKqhH,kBAAkBz1G,EAAW1M,KAI9CmqE,EAAS/nC,UAAUgwE,YAAc,SAAU/2G,EAAK2E,EAAS2c,GACrD,IAAItb,EAAOrB,EAAQ0b,UAAUrgB,EAAIsF,IAC7ByhH,EAAa/mH,EAAIuT,QAAQC,WAAWxV,MAAQgI,EAAKuN,QAAQC,WAAWxV,MACpEgpH,EAAchnH,EAAIuT,QAAQC,WAAWzV,OAASiI,EAAKuN,QAAQC,WAAWzV,OACtEujB,GAASA,EAAM+3B,aACf/3B,EAAM+3B,WAAWr5C,EAAIsF,IAAM6b,GAAYnb,IAE3CrB,EAAQmc,MAAM9a,EAAM+gH,EAAYC,GAC5BvqH,EAAGuD,EAAIuT,QAAQ/R,QAAUwE,EAAKuN,QAAQ/R,QACtC9E,EAAGsD,EAAIuT,QAAQ9R,QAAUuE,EAAKuN,QAAQ9R,WAG9CqtE,EAAS/nC,UAAU2+E,sBAAwB,SAAU1lH,EAAK2E,EAAS2c,GAC/D,IACItb,EACAqL,EAFAlV,EAAI,EAGJ8qH,EAActiH,EAAQke,cAK1B,GAJAokG,EAAYn1G,YAAc9R,EAAI8R,YAC1Bm1G,GAAeA,EAAY1zG,UAC3B0zG,EAAY1zG,QAAQzB,YAAc9R,EAAI8R,aAEtC9R,GAAOA,EAAIye,OAASze,EAAIye,MAAMviB,OAAS,EACvC,IAAKC,EAAI,EAAGA,EAAI6D,EAAIye,MAAMviB,OAAQC,IAC9B6J,EAAOhG,EAAIye,MAAMtiB,GACjBsJ,KAAKyhH,gBAAgBlhH,EAAMrB,GAC3Bc,KAAKohH,gBAAgB7gH,EAAMrB,GAGnC,GAAI3E,GAAOA,EAAI2iB,YAAc3iB,EAAI2iB,WAAWzmB,OAAS,EACjD,IAAKC,EAAI,EAAGA,EAAI6D,EAAI2iB,WAAWzmB,OAAQC,IACnCkV,EAAYrR,EAAI2iB,WAAWxmB,GAC3BsJ,KAAKqhH,kBAAkBz1G,EAAW1M,IAI9CmqE,EAAS/nC,UAAUmgF,gBAAkB,SAAUlnH,EAAK2E,GAChD,IAAIqB,EAAOrB,EAAQ0b,UAAUrgB,EAAIsF,IACjCX,EAAQwiD,OAAOnhD,EAAMhG,EAAI8R,YAAc9L,EAAK8L,cAEhDg9D,EAAS/nC,UAAU4+E,wBAA0B,SAAU3lH,EAAK2E,GACxD,IAAI0M,EAAYrR,EAAI2iB,WAAW,GAC/Bld,KAAKqhH,kBAAkBz1G,EAAW1M,IAEtCmqE,EAAS/nC,UAAU+/E,kBAAoB,SAAU9mH,EAAK2E,EAAS2c,GAC3D,IAAIjQ,EAAY1M,EAAQ0b,UAAUrgB,EAAIsF,IAElCtF,EAAI2lC,eAAiBt0B,EAAUs0B,eAC/Bt0B,EAAUs0B,aAAe3lC,EAAI2lC,aAC7BhhC,EAAQ2sE,wBAAwBjgE,MAAiBs0B,aAAc3lC,EAAI2lC,gBAEnE3lC,EAAI83C,eAAiBzmC,EAAUymC,eAC/BzmC,EAAUymC,aAAe93C,EAAI83C,aAC7BnzC,EAAQ2sE,wBAAwBjgE,MAAiBymC,aAAc93C,EAAI83C,gBAEnE93C,EAAIkH,WAAamK,EAAUnK,WACN,KAAjBlH,EAAIkH,SAEJ8uB,GADOrxB,EAAQ0b,UAAUhP,EAAUnK,UACnBi3C,SAAUn+C,EAAIsF,IAGvBX,EAAQ0b,UAAUrgB,EAAIkH,UACxBi3C,SAAS5hD,KAAKyD,EAAIsF,IAE3B+L,EAAUnK,SAAWlH,EAAIkH,SACzBvC,EAAQ2sE,wBAAwBjgE,MAAiBnK,SAAUlH,EAAIkH,YAE/DlH,EAAI63C,WAAaxmC,EAAUwmC,WACN,KAAjB73C,EAAI63C,SAEJ7hB,GADOrxB,EAAQ0b,UAAUhP,EAAUwmC,UACnBuG,QAASp+C,EAAIsF,IAGtBX,EAAQ0b,UAAUrgB,EAAI63C,UACxBuG,QAAQ7hD,KAAKyD,EAAIsF,IAE1B+L,EAAUwmC,SAAW73C,EAAI63C,SACzBlzC,EAAQ2sE,wBAAwBjgE,MAAiBwmC,SAAU73C,EAAI63C,YAE/Dv2B,GAASA,EAAM+3B,aACf/3B,EAAM+3B,WAAWr5C,EAAIsF,IAAM6b,GAAY9P,IAE3C,IAAIu3C,EAAK5oD,EAAIwG,YAAY/J,EAAI4U,EAAU7K,YAAY/J,EAC/CosD,EAAK7oD,EAAIwG,YAAY9J,EAAI2U,EAAU7K,YAAY9J,EACxC,IAAPksD,GAAmB,IAAPC,GACZlkD,EAAQs1E,cAAc5oE,EAAWu3C,EAAIC,GAEzC,IAAI7Q,EAAKh4C,EAAIsQ,YAAY7T,EAAI4U,EAAUf,YAAY7T,EAC/Cw7C,EAAKj4C,EAAIsQ,YAAY5T,EAAI2U,EAAUf,YAAY5T,EACxC,IAAPs7C,GAAmB,IAAPC,GACZtzC,EAAQu1E,cAAc7oE,EAAW2mC,EAAIC,GAEzCtzC,EAAQ22D,iBACa,QAAjB32D,EAAQ0sB,MACR1sB,EAAQmuE,uBAGhBhE,EAAS/nC,UAAU++E,wBAA0B,SAAUxkG,EAAO3c,GAC1D,IAAI3E,EAAMshB,EAAME,WAChB,GAAIF,GAASA,EAAM0wE,WAAY,CAa3B,GAAmB,YAXf1wE,EAAMukG,OACmB,WAArBvkG,EAAM0wE,WACO,SAGA,SAIJ1wE,EAAM0wE,YAGfhyF,EAAI85B,OACJn1B,EAAQ48C,OAAO58C,EAAQ0b,UAAUrgB,EAAI85B,OAAS,mBAAqB95B,EAAIsF,MAGvEX,EAAQ48C,OAAOvhD,GACf2E,EAAQy1E,0BAGX,CAED,GADAz1E,EAAQy1E,qBACJp6E,EAAIsgB,SAAU,CACd,IAAI2C,EAAate,EAAQ0b,UAAUrgB,EAAIsgB,UACnC2C,EACAte,EAAQif,SAASX,EAAYjjB,GAG7B2E,EAAQktB,IAAI7xB,QAGXA,EAAI85B,OACTn1B,EAAQ0tE,kBAAkBryE,EAAK2E,EAAQ0b,UAAUrgB,EAAI85B,SAGhDn1B,EAAQ0b,UAAUrgB,EAAIsF,KACvBX,EAAQktB,IAAI7xB,GAGhBA,EAAIi+C,WAAat5C,EAAQ0b,UAAUrgB,EAAIi+C,YACvCt5C,EAAQyxE,WAAWp2E,EAAKA,EAAIi+C,WAGf,QAAjBt5C,EAAQ0sB,MACR1sB,EAAQmuE,wBAIpBhE,EAAS/nC,UAAUg/E,6BAA+B,SAAUzkG,EAAO3c,GAC/D,IAAI47C,EAAQj/B,EAAME,WACdxhB,EAAMshB,EAAMG,WACZzb,EAAOrB,EAAQ0b,UAAUrgB,EAAIsF,IACjC,GAAIgc,GAASA,EAAM0wE,WAAY,CAQR,YANf1wE,EAAMukG,OAC6B,WAArBvkG,EAAM0wE,WAA2B,SAAW,SAG7C1wE,EAAM0wE,aAGnBrtF,EAAQ+vE,aAAa1uE,GAAOu6C,IAC5B57C,EAAQy1E,uBAGRz1E,EAAQy1E,qBACRz1E,EAAQ0vF,UAAUruF,GAAOu6C,KAER,QAAjB57C,EAAQ0sB,MACR1sB,EAAQmuE,wBAIpBhE,EAAS/nC,UAAUi/E,4BAA8B,SAAU1kG,EAAO3c,GAC9D,IAAIiE,EAAO0Y,EAAME,WACbxhB,EAAMshB,EAAMG,WACZzb,EAAOrB,EAAQ0b,UAAUrgB,EAAIsF,IACjC,GAAIgc,GAASA,EAAM0wE,WAAY,CAQR,YANf1wE,EAAMukG,OAC6B,WAArBvkG,EAAM0wE,WAA2B,SAAW,SAG7C1wE,EAAM0wE,aAGnBrtF,EAAQ8vE,YAAYzuE,GAAO4C,IAC3BjE,EAAQy1E,uBAGRz1E,EAAQy1E,qBACRz1E,EAAQqxF,SAAShwF,GAAO4C,KAEP,QAAjBjE,EAAQ0sB,MACR1sB,EAAQmuE,wBAKpBhE,EAAS/nC,UAAUorD,KAAO,SAAUxtF,GAChC,IAAI2c,EAAQ7b,KAAK0hH,aAAaxiH,GAC1ByiH,EAAwB,EACxB9lG,IACuB,aAAnBA,EAAMC,UACa,eAAfD,EAAMhgB,MACN8lH,IACA3hH,KAAKk/G,WAAY,GAGjBl/G,KAAKq9D,UAAUxhD,EAAO3c,GAEtBc,KAAKk/G,YACLl/G,KAAK4hH,gBAAgB/lG,EAAO3c,EAASyiH,GACrC3hH,KAAKk/G,WAAY,IAIrBhgH,EAAQguE,eAAewf,KAAK7wE,KAIxCwtD,EAAS/nC,UAAUsgF,gBAAkB,SAAU/lG,EAAO3c,EAASyiH,GAC3D,KAAiC,IAA1BA,GACH3hH,KAAKq9D,UAAUxhD,EAAO3c,GAEH,cADnB2c,EAAQ7b,KAAK0hH,aAAaxiH,IAChBrD,KACN8lH,IAEoB,eAAf9lG,EAAMhgB,MACX8lH,IAGRA,EAAwB,GAE5Bt4C,EAAS/nC,UAAU+7B,UAAY,SAAUwjD,EAAc3hH,GACnD,IAAI8c,EAKJ,GAJ0B,oBAAtB6kG,EAAahlH,MAAoD,sBAAtBglH,EAAahlH,OACxDmgB,EAAc6kG,EAAuB,YAEzC3hH,EAAQgY,gBAAkBC,gBAAckyD,SACd,eAAtBw3C,EAAahlH,MAA+C,aAAtBglH,EAAahlH,MAC/CqD,EAAQguE,eAAeqyC,UAAU9oH,OAAS,EAAG,CAC7C,IAAI2pB,EAAYlhB,EAAQguE,eAAeqyC,UAAUp5G,OAAO,EAAG,GAC3DjH,EAAQguE,eAAeoyC,UAAUn5G,OAAO,EAAG,EAAGia,EAAU,IAIhE,OADAlhB,EAAQ2qB,uBAAsB,GACtBg3F,EAAahlH,MACjB,IAAK,kBACL,IAAK,QACL,IAAK,aACDmE,KAAK+/G,sBAAsB/jG,EAAY9c,GACvC,MACJ,IAAK,cACL,IAAK,SACDc,KAAKggH,kBAAkBhkG,EAAY9c,EAAS2hH,GAC5C,MACJ,IAAK,kBACD7gH,KAAKigH,sBAAsBjkG,EAAY9c,EAAS2hH,GAChD,MACJ,IAAK,oBACD7gH,KAAKkgH,wBAAwBlkG,EAAY9c,GACzC,MACJ,IAAK,kBACDc,KAAKmgH,sBAAsBU,EAAc3hH,GAAS,GAClD,MACJ,IAAK,oBACDc,KAAKqgH,wBAAwBQ,EAAc3hH,GAC3C,MACJ,IAAK,yBACDc,KAAKsgH,6BAA6BO,EAAc3hH,GAChD,MACJ,IAAK,wBACDc,KAAKugH,4BAA4BM,EAAc3hH,GAC/C,MACJ,IAAK,QACDc,KAAKooD,MAAMy4D,EAAc3hH,GACzB,MACJ,IAAK,UACDc,KAAK+uE,QAAQ8xC,EAAc3hH,GAC3B,MACJ,IAAK,iBACDc,KAAKwgH,qBAAqBxkG,EAAY9c,GACtC,MACJ,IAAK,sBACDc,KAAKygH,kBAAkBI,EAAc3hH,GAAS,GAC9C,MACJ,IAAK,4BACDc,KAAK0gH,wBAAwBG,EAAc3hH,GAAS,GACpD,MACJ,IAAK,yBACDc,KAAK2gH,6BAA6BE,EAAc3hH,GAAS,GACzD,MACJ,IAAK,4BACDc,KAAK4gH,2BAA2BC,EAAc3hH,GAAS,GAG/DA,EAAQ2qB,uBAAsB,GAC9B3qB,EAAQgY,iBAAmBC,gBAAckyD,SACzCnqE,EAAQotF,qBAAqBu0B,IAEjCx3C,EAAS/nC,UAAUm+E,aAAe,SAAUvgH,GACxC,IACI40E,EADA6rC,EAAY,KAEZkC,EAAQ3iH,EAAQguE,eAepB,OAdI20C,EAAM1X,UACNwV,EAAYkC,EAAM1C,cAClBrrC,EAAgB+tC,EAAM1C,aAAahhD,WAE/B0jD,EAAM1C,aAAerrC,EAChB+tC,EAAMzX,UACPyX,EAAMzX,SAAU,KAIpByX,EAAMzX,SAAU,EAChByX,EAAM1X,SAAU,IAGjBwV,GAEXt2C,EAAS/nC,UAAUogF,aAAe,SAAUxiH,GACxC,IACI4iH,EADAzkD,EAAY,KAEZwkD,EAAQ3iH,EAAQguE,eAoBpB,OAnBI20C,EAAMzX,WAKF0X,EAJCD,EAAM1C,aAAahhD,UAAa0jD,EAAM1X,QAIxB0X,EAAM1C,aAAa1mH,KAHnBopH,EAAM1C,gBAMrB0C,EAAM1C,aAAe2C,EAChBD,EAAM1X,UACP0X,EAAM1X,SAAU,GAEf2X,EAAarpH,OACdopH,EAAMzX,SAAU,EAChByX,EAAM1X,SAAU,IAGxB9sC,EAAYwkD,EAAM1C,cAEf9hD,GAOXgM,EAAS/nC,UAAUsa,QAAU,aAQ7BytB,EAAS/nC,UAAUqa,cAAgB,WAI/B,MAAO,YAEJ0tB,KClwBP04C,GAAiC,WACjC,SAASA,IACL/hH,KAAKyyD,eAAgB,EAwFzB,OAnFAsvD,EAAgBzgF,UAAU84C,OAAS,SAAU15E,EAAWynB,EAAS5nB,EAAMrB,GACnE,IAAImnC,EAAQrmC,KACRgiH,KAEA3rH,EAAI,EAKR,GAJA2rH,EAFQ,GAEel/C,YAAY,WAE/B,OADAzsE,IACOgwC,EAAM47E,gBAAgB95F,EAAS65F,EAAyB,IAAN3rH,EAAS6I,IACnE,IACCqB,EAAK45C,WAAY,CACjB,IAAI+nE,EAAY,GAEhBliH,KAAKyyD,cAAgBvzD,EAAe,oBACpCA,EAAQ2qB,uBAAsB,GAE9B,IAAIs4F,KAEJniH,KAAKoiH,cAAc7hH,EAAM2hH,EAAWhjH,GACpCijH,EAFQ,GAGkBr/C,YAAY,WAClCo/C,GAAa,EAAI77E,EAAM+7E,cAAc7hH,EAAM2hH,EAAWhjH,GAAW4lE,cAAcq9C,EAAqB,IACpGD,GAAa,IACd,MAOXH,EAAgBzgF,UAAU2gF,gBAAkB,SAAUI,EAAUC,EAAaC,EAAMrjH,GAC/E,IAAKqjH,EACD,IAAK,IAAIxiG,EAAI,EAAGA,EAAIsiG,EAASl6F,QAAQ1xB,OAAQspB,IAAK,CAC9C,IAAIxf,EAAOrB,EAAQ0b,UAAUynG,EAASl6F,QAAQpI,GAAGlgB,IACjDU,EAAKxE,SAAWsmH,EAASl6F,QAAQpI,GAAGyiG,YAAc,EAClDjiH,EAAKvE,SAAWqmH,EAASl6F,QAAQpI,GAAG0iG,YAAc,EAGtDF,IACAz9C,cAAcw9C,EAAY,IAC1BpjH,EAAQ2qB,uBAAsB,GAC9B3qB,EAAQu3D,aAAanyB,eAAao+E,uBAAmBzoH,GACrDiF,EAAQs7E,0BAA0BC,aAAc,EAChDv7E,EAAQwrB,OAAO4vD,UAAY,GAC3Bp7E,EAAQ2qB,sBAAsB7pB,KAAKyyD,iBAM3CsvD,EAAgBzgF,UAAU8gF,cAAgB,SAAU7/G,EAAQgD,EAAOrG,GAC/D,IAAK,IAAIxI,EAAI,EAAGA,EAAI6L,EAAOm2C,SAASjiD,OAAQC,IAAK,CAC7C,IAAIkV,EAAY1M,EAAQ0b,UAAUrY,EAAOm2C,SAAShiD,IAC9CsM,EAAS9D,EAAQ0b,UAAUhP,EAAUwmC,UACzCxmC,EAAU1L,MAAMwsB,QAAUnnB,EAC1B,IAAK,IAAIlP,EAAI,EAAGA,EAAIuV,EAAUkC,QAAQ8D,SAASnb,OAAQJ,IACnDuV,EAAUkC,QAAQ8D,SAASvb,GAAG6J,MAAMwsB,QAAUnnB,EAC9CvC,EAAO9C,MAAMwsB,QAAUnnB,EACnBvC,EAAO8K,mBAAmBolB,IAC1Bh0B,EAAQq+F,mBAAmBv6F,EAAO8K,aAAS7T,EAAWsL,GAG9DvF,KAAKoiH,cAAcp/G,EAAQuC,EAAOrG,KAQ1C6iH,EAAgBzgF,UAAUsa,QAAU,aAQpCmmE,EAAgBzgF,UAAUqa,cAAgB,WAItC,MAAO,iBAEJomE,KCxFPY,GAAkC,WAKlC,SAASA,IAKL3iH,KAAKy6E,aAAc,EAkmDvB,OA1lDAkoC,EAAiBrhF,UAAUsa,QAAU,aAQrC+mE,EAAiBrhF,UAAUqa,cAAgB,WAIvC,MAAO,uBAGXgnE,EAAiBrhF,UAAUguD,aAAe,SAAUt2E,EAAO4B,EAAWgoG,EAAYC,EAAUC,GACxF,IAAIp4F,GACA7uB,KAAM+mH,EAAW/mH,KACjB+e,UAAWA,EAAWmoG,QAAS,EAAGC,QAAS,EAC3CC,mBAAqBC,WAAY,KAAMC,UAAYC,SAAU,EAAGC,cAChEvyG,YAAa8xG,EAAW9xG,YACxBwyG,kBAAmBV,EAAWU,kBAAmBC,gBAAiBX,EAAWW,gBAC7E1qG,kBAAmB+pG,EAAW/pG,kBAAmBC,oBAAqB8pG,EAAW9pG,oBACjFwhE,UAAWsoC,EAAWtoC,UAAW7vD,cAAe7G,GAAYg/F,EAAWn4F,eAAgB9nB,OAAQigH,EAAWjgH,OAC1GnB,OAAQohH,EAAWphH,OAAQ2mB,WAAasnE,KAAMmzB,EAAWnzB,MAG7D,OADAzvF,KAAK46E,SAASlwD,EAAQ1R,EAAO6pG,EAAUC,GAChCp4F,GAEXi4F,EAAiBrhF,UAAUs5C,SAAW,SAAUlwD,EAAQ1R,EAAO6pG,EAAUC,GACrE,IAAIviH,EACA7J,EAGA2vG,KAIJ,IAHI37E,EAAO9P,UAAU8P,EAAO+kE,OACxB/kE,EAAOu4F,gBAAgBnsH,KAAK4zB,EAAO9P,UAAU8P,EAAO+kE,OAEnD/4F,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,KAC1B6J,EAAOyY,EAAMtiB,IACHwvF,qBACOx7D,EAAO24F,WAAW9iH,EAAKV,IAAMG,KAAKwjH,gBAAgB94F,EAAQnqB,IAC5DkjH,KAAKC,YAAa,EACxBh5F,EAAO9P,UAAU8P,EAAO+kE,OACpBlvF,EAAKo4C,SAAYp4C,EAAKo4C,QAAQliD,SAC/B4vG,EAAUvvG,KAAKyJ,GACXA,EAAKnK,MAAQ0nG,OAAOv9F,EAAKnK,KAAK0sH,MAAep4F,EAAO+kE,MACpD/kE,EAAOu4F,gBAAgBnsH,KAAKyJ,KAUhD,IAJsC,IAAlCmqB,EAAOu4F,gBAAgBxsH,SACvBi0B,EAAOu4F,gBAAkB5c,GAGxB3vG,EAAI,EAAGA,EAAIg0B,EAAOu4F,gBAAgBxsH,OAAQC,IAC3C6J,EAAOmqB,EAAOu4F,gBAAgBvsH,GAC9BsJ,KAAKitF,YAAYviE,EAAQnqB,EAAM,GAEnC,GAAImqB,EAAOu4F,gBAAgBxsH,OAAS,EAAG,CACnCi0B,EAAO6kE,SAAW7kE,EAAOu4F,gBAAgB,GACzC,IAAIjsH,EAAI,EACJC,EAAI,EACJ6mC,OAAO,EACPG,OAAO,EACPD,OAAO,EACPD,OAAO,EAEPv8B,OAAS,EACb,IAAK9K,EAAI,EAAGA,EAAIg0B,EAAOu4F,gBAAgBxsH,OAAQC,IAAK,CAChD8K,EAASxB,KAAK2jH,WAAWj5F,EAAQ1zB,EAAGC,EAAGyzB,EAAOu4F,gBAAgBvsH,GAAI,EAAGg0B,EAAOu4F,gBAAgBvsH,EAAI,IAChG,IAAIktH,EAAWl5F,EAAO24F,WAAW34F,EAAOu4F,gBAAgBvsH,GAAGmJ,IAC3D2B,EAAOvK,EAAIwF,KAAKqK,IAAItF,EAAOvK,EAAG2sH,EAAS3sH,GACvCuK,EAAOxK,EAAIyF,KAAKqK,IAAItF,EAAOxK,EAAG4sH,EAAS5sH,IACK,IAAxC0zB,EAAO5Z,YAAYoN,QAAQ,QAC3BjnB,EAAIuK,EAAOqB,MAAQ6nB,EAAO44F,kBAG1BtsH,EAAIwK,EAAOqB,MAAQ6nB,EAAO44F,kBAEpB,IAAN5sH,GACAonC,EAAOt8B,EAAOxK,EACd+mC,EAAOv8B,EAAOvK,EACd+mC,EAAOx8B,EAAOqB,MACdo7B,EAAOz8B,EAAOsB,SAGdg7B,EAAOrhC,KAAKqK,IAAIg3B,EAAMt8B,EAAOxK,GAC7B+mC,EAAOthC,KAAKqK,IAAIi3B,EAAMv8B,EAAOvK,GAC7B+mC,EAAOvhC,KAAK+I,IAAIw4B,EAAMx8B,EAAOqB,OAC7Bo7B,EAAOxhC,KAAK+I,IAAIy4B,EAAMz8B,EAAOsB,SAIrC,IADA9C,KAAK6jH,aAAan5F,GAAU1zB,EAAG8mC,EAAM7mC,EAAG8mC,EAAMl7B,MAAOm7B,EAAMl7B,OAAQm7B,GAAQ4kF,GACtEnsH,EAAI,EAAGA,EAAIg0B,EAAOu4F,gBAAgBxsH,OAAQC,IAC3CsJ,KAAK8jH,YAAYp5F,EAAQA,EAAOu4F,gBAAgBvsH,GAAI,GAExD,IAAKA,EAAI,EAAGA,EAAIg0B,EAAOu4F,gBAAgBxsH,OAAQC,IAC3CsJ,KAAK+jH,iBAAiBr5F,EAAQA,EAAOu4F,gBAAgBvsH,GAAI,KAIrEisH,EAAiBrhF,UAAUlZ,UAAY,SAAU7nB,GAC7C,IAAIvJ,EAAIuJ,EAAKxE,QAAUwE,EAAKwN,WAAWxV,MAAQgI,EAAKixB,MAAMx6B,EACtDC,EAAIsJ,EAAKvE,QAAUuE,EAAKwN,WAAWzV,OAASiI,EAAKixB,MAAMv6B,EAC3D,OAAO,IAAIqlB,GAAKtlB,EAAGC,EAAGsJ,EAAKwN,WAAWxV,MAAOgI,EAAKwN,WAAWzV,SAEjEqqH,EAAiBrhF,UAAUqiF,WAAa,SAAUj5F,EAAQ1zB,EAAGC,EAAGmH,EAAO4lH,EAAO5qH,EAAM6qH,GAChF,IAAIC,EAEAC,EACA5pH,EACA6pH,EAHAtuF,KAWJ,GAPAouF,EAAalkH,KAAKqkH,cAAc35F,EAAQtsB,EAAOpH,EAAGC,EAAG+sH,GACrDluF,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAC/B6qB,EAEO04F,SAAW3mH,KAAK+I,IAAIklB,EAAO04F,SAAUY,GAC5CG,EAAMH,GACNI,EAAWpkH,KAAKokH,SAAS15F,EAAQtsB,KACf03B,EAAK2tF,KAAKa,WAAW7tH,OAKlC,CACD,IAAI8tH,OAAa,EAEbC,OAAc,EACd99F,OAAI,EACJ+9F,OAAa,EACbx2D,OAAQ,EACRnrD,OAAS,EACbA,EAASohH,EAAWjtH,EAAIitH,EAAW5rH,OAASoyB,EAAO64F,gBAC/CztF,EAAK2tF,KAAKa,WAAW7tH,SAGrB0tH,GADA5pH,EAAMyF,KAAK0kH,0BAA0Bh6F,EAAQtsB,EAAO0E,EAAQohH,EAAW5rH,OAAQ0rH,EAAOt5F,EAAO64F,kBACnFS,MACVlhH,EAASvI,EAAIuI,QAEZgzB,EAAK2tF,KAAKa,WAAW7tH,QAAoC,eAA1Bq/B,EAAK2tF,KAAK3yG,cAC1ChO,EAASohH,EAAWjtH,EAAIitH,EAAW5rH,OAASoyB,EAAO64F,gBAAkB,GAErEztF,EAAK2tF,KAAK7xG,SAASnb,SAKf8tH,EAJ0B,eAA1BzuF,EAAK2tF,KAAK3yG,aAAoD,aAAnBglB,EAAK2tF,KAAK5nH,MAAqD,IAA9Bi6B,EAAK2tF,KAAK7xG,SAASnb,OAGvE,aAAnBq/B,EAAK2tF,KAAK5nH,KACFmE,KAAK2kH,qCAAqCj6F,EAAQtsB,EAAOhF,EAAM8qH,EAAWltH,EAAG8L,EAAQqhH,GAGrFnkH,KAAK4kH,mBAAmBl6F,EAAQtsB,EAAO8lH,EAAWltH,EAAG8L,EAAQqhH,EAAKF,GANlEjkH,KAAK6kH,qBAAqBn6F,EAAQtsB,EAAOhF,EAAM8qH,EAAWltH,EAAG8L,EAAQqhH,IASpFruF,EAAK7+B,GAAK6+B,EAAK7+B,EAAIitH,EAAWjtH,IAChC6+B,EAAK7+B,EAAIitH,EAAWjtH,GAElBD,GAAKA,EAAI8+B,EAAKnC,MAChB38B,EAAI8+B,EAAKnC,KAETmC,EAAK2tF,KAAKa,WAAW7tH,SAErBw3D,OAAch0D,IAANjD,EAAkBA,EAAIktH,EAAWltH,EACzCytH,EAAazkH,KAAK8kH,6BAA6Bp6F,EAAQtsB,EAAO8lH,EAAYj2D,EAAOnrD,EAAQkhH,GACpFI,IAEDptH,IADAwtH,EAAcD,EAAaE,GACVztH,EAAIwtH,EAAY3hH,OAAS,EAAIqhH,EAAW3rH,MAAQ,EACjEgsH,EAAaC,GAEjB99F,EAAI+9F,EAAaA,EAAWM,eAAY9qH,GAE5C67B,EAAK9+B,EAAIA,EACJ8+B,EAAKqnB,YACNrnB,EAAKkvF,UAAYT,EAAW1hH,MAAQ0hH,EAAWvtH,GAKnD,IAAIiuH,GACAv6F,OAAQA,EAAQtsB,MAAOA,EAAO8mH,aAHdluH,EAAGA,EAAGC,EAAGitH,EAAWjtH,EAAG4L,MAAO7L,EAAIktH,EAAW3rH,MAAOuK,OAAQohH,EAAWjtH,EAAIitH,EAAW5rH,QAG9CisH,WAAYA,EACpEY,IAAKjB,EAAYF,MAAOA,GAO5B,OALAhkH,KAAKolH,iBAAiBH,EAAev+F,OAAYzsB,IAATb,EAAoB6qH,GACxDnuF,EAAK/T,YAAyC,iBAApB+T,EAAK/T,aAC/B+T,EAAK/T,WAAW/qB,GAAK8+B,EAAKuvF,oBAE9BjnH,EAAMmmH,WAAaA,EACZA,EAhEP,OADAnmH,EAAMmmH,WAAavkH,KAAKslH,eAAe56F,EAAQtsB,EAAOhF,EAAM8qH,EAAYF,EAAOC,GACxE7lH,EAAMmmH,YAmErB5B,EAAiBrhF,UAAUgkF,eAAiB,SAAU56F,EAAQtsB,EAAOhF,EAAM8qH,EAAYF,EAAOC,GAC1F,IAAIziH,EACAs0B,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IACnCi2B,EAAK9+B,EAAIktH,EAAWltH,EACd8+B,EAAK7+B,GAAK6+B,EAAK7+B,EAAIitH,EAAWjtH,IAChC6+B,EAAK7+B,EAAIitH,EAAWjtH,EACpB6+B,EAAKstF,SAAW3mH,KAAK+I,IAAIw+G,EAAOluF,EAAKstF,UAAY,IAErD5hH,GAAWxK,EAAGktH,EAAWltH,EAAGC,EAAGitH,EAAWjtH,EAAG4L,MAAOqhH,EAAWltH,EAAIktH,EAAW3rH,MAAOuK,OAAQohH,EAAWjtH,EAAIitH,EAAW5rH,QACvHw9B,EAAKstF,SAAW3mH,KAAK+I,IAAIswB,EAAKstF,UAAY,EAAGY,GAC7C,IAAIiB,GACAv6F,OAAQA,EAAQtsB,MAAOA,EAAO8mH,YAAa1jH,EAAQ+iH,WAAY/iH,EAC/D2jH,IAAKjB,EAAYF,MAAOA,GAG5B,OADAhkH,KAAKolH,iBAAiBH,OAAehrH,OAAoBA,IAATb,EAAoB6qH,IAC3DjtH,EAAG8+B,EAAK9+B,EAAGC,EAAG6+B,EAAK7+B,EAAG4L,MAAOizB,EAAK9+B,EAAIktH,EAAW3rH,MAAOuK,OAAQgzB,EAAK7+B,EAAIitH,EAAW5rH,SAEjGqqH,EAAiBrhF,UAAUkiF,gBAAkB,SAAU94F,EAAQ+F,GAC3D,IAAIqF,KAYJ,OAXAA,EAAKuvF,mBAAqB,EACN,wBAAhB36F,EAAO7uB,KACPi6B,EAAK2tF,MAAS3yG,YAAa,WAAYjV,KAAM,YAAa6T,OAAQ,GAAI61G,eAAe,GAGrFzvF,EAAK2tF,MAAS3yG,YAAa,aAAcjV,KAAM,SAAU0pH,eAAe,GAE5EzvF,EAAK2tF,KAAK7xG,YACVkkB,EAAK2tF,KAAKa,cACVxuF,EAAK2tF,KAAKO,MAAQ,EAClBluF,EAAKqnB,WAAY,EACVrnB,GAEX6sF,EAAiBrhF,UAAU8jF,iBAAmB,SAAUH,EAAeO,EAASroE,EAAW8mE,GACvF,IAAIv5F,EAASu6F,EAAcv6F,OACvBtsB,EAAQ6mH,EAAc7mH,MACtB8mH,EAAcD,EAAcC,YAC5BX,EAAaU,EAAcV,WAC3BP,EAAQiB,EAAcjB,MACtBmB,EAAMF,EAAcE,IACpBrvF,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAC/BkiB,EAAa2I,EAAO9P,UAAUkb,EAAK/T,WAAa+T,EAAK/T,WAAWnU,MAAQkoB,EAAK2tF,KAAK7xG,SAAS,IAC3F6zG,EAAiB1jG,EAAa2I,EAAO24F,WAAWthG,EAAWliB,IAAM,KACjEukH,EAAWpkH,KAAKokH,SAAS15F,EAAQtsB,GACjCyQ,EAAY7O,KAAK0lH,uBAAuBh7F,EAAQw6F,EAAalB,EAAOluF,EAAK6vF,aACzEC,EAAgB5lH,KAAK0lH,uBAAuBh7F,EAAQ65F,EAAYP,EAAOluF,EAAK6vF,aAC5EnB,KAEA31G,EAAUpY,QAAUq/B,EAAKqnB,WACzBrnB,EAAKjnB,UAAYA,EACjB7O,KAAK6lH,yBAAyBn7F,EAAQtsB,EAAO8mH,GAC7CpvF,EAAKivF,UAAYjvF,EAAK2oB,UACNxkD,IAAZurH,IACA1vF,EAAKivF,UAAYtoH,KAAKqK,IAAI0+G,EAAS1vF,EAAKivF,YAExChjG,QAA2C9nB,IAA7BwrH,EAAeV,YACzBU,EAAeV,WAAajvF,EAAKivF,YACjCjvF,EAAKgwF,YAAa,GAEtBhwF,EAAKivF,UAAYtoH,KAAKqK,IAAIgvB,EAAKivF,UAAWU,EAAeV,YAEzD5nE,IACArnB,EAAK9+B,GAAK8+B,EAAKivF,UACfjvF,EAAKuvF,oBAAsBvvF,EAAKivF,UAC5BX,IACApkH,KAAK+lH,kBAAkBr7F,EAAQk7F,EAAe9vF,EAAKivF,WACnDR,EAAWvtH,EAAIyF,KAAKqK,IAAIy9G,EAAWvtH,EAAG8+B,EAAK9+B,GAC3CutH,EAAW1hH,MAAQpG,KAAK+I,IAAI++G,EAAW1hH,MAAOizB,EAAK9+B,EAAImuH,EAAI5sH,OAC3DgsH,EAAWzhH,OAASrG,KAAK+I,IAAI++G,EAAWzhH,OAAQgzB,EAAK7+B,EAAIkuH,EAAI7sH,QAC7DisH,EAAWvtH,GAAK8+B,EAAKivF,UACrBR,EAAW1hH,OAASizB,EAAKivF,WAEzBhjG,GAAc0jG,EAAeV,UAAYjvF,EAAKivF,UAC9CjvF,EAAKivF,UAAYU,EAAeV,UAAYjvF,EAAKivF,UAE5ChjG,QAAiC9nB,IAAnB67B,EAAKivF,YACxBjvF,EAAKivF,UAAY,MAKrBX,IACAG,EAAWvtH,EAAIyF,KAAKqK,IAAIy9G,EAAWvtH,EAAGkuH,EAAYluH,GAClDutH,EAAW1hH,MAAQpG,KAAK+I,IAAI++G,EAAW1hH,MAAOqiH,EAAYluH,EAAImuH,EAAI5sH,OAClEgsH,EAAWzhH,OAASrG,KAAK+I,IAAI++G,EAAWzhH,OAAQgzB,EAAK7+B,EAAIkuH,EAAI7sH,SAE5Dw9B,EAAKqnB,YACNrnB,EAAKivF,UAAY,EACjBjvF,EAAKuvF,mBAAqB,IAG7BpB,IACDiB,GAAgBluH,EAAG8+B,EAAK9+B,EAAGC,EAAGkuH,EAAIluH,EAAG4L,MAAOizB,EAAK9+B,EAAImuH,EAAI5sH,MAAOuK,OAAQqiH,EAAIluH,EAAIkuH,EAAI7sH,QACpFksH,EAAY1tH,MAAOkvH,QAASd,IAC5BllH,KAAKimH,iBAAiBv7F,EAAQtsB,EAAOomH,EAAaR,KAG1DrB,EAAiBrhF,UAAU2kF,iBAAmB,SAAUv7F,EAAQtsB,EAAOomH,EAAaR,EAAOn1G,GACvF,IAAIq3G,EACAxmG,EAEAhpB,EAEA2pC,EACA8lF,EACArjH,EALAsjH,GAAa,EAEbtwF,KAWJ,GAPI13B,IAEAyQ,GADAinB,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,KACdgP,UACjBu3G,GAActwF,EAAK2tF,KAAK7xG,SAASnb,SAAWq/B,EAAK2tF,KAAKa,WAAW7tH,QAErE4pC,EAAamkF,EAAY,GAAGwB,QAC5BG,EAAY3B,EAAYA,EAAY/tH,OAAS,GAAGuvH,QAC5Cn3G,GAAaA,EAAUpY,OAAQ,CAkB/B,IAhBAqM,GADAojH,EAAOx7F,EAAOy4F,OAAOt0G,EAAU,IAAIm3G,SACrBljH,OACVojH,EAAKjvH,EAAIopC,EAAWppC,IACpBivH,EAAKpjH,OAASu9B,EAAWppC,EACzButH,EAAYr+G,OAAO,EAAG,GAAK6/G,QAASE,KAEpCpjH,EAASqjH,EAAUrjH,OACnB0hH,EAAY1tH,MAAOkvH,SAAWhvH,EAAGkvH,EAAKlvH,EAAG6L,MAAOqjH,EAAKrjH,MAAO5L,EAAGopC,EAAWv9B,OAAQA,OAAQA,MAG1FojH,EAAOx7F,EAAOy4F,OAAOt0G,EAAUA,EAAUpY,OAAS,IAAIuvH,QAClDI,GAAcF,EAAKpjH,OAASqjH,EAAUrjH,SACtCojH,EAAKjvH,EAAIkvH,EAAUrjH,OACnB0hH,EAAY1tH,MAAOkvH,QAASE,MAGpCxmG,EAAQ7Q,EAAU,GACbnY,EAAI8tH,EAAY/tH,OAAS,EAAGC,GAAK,EAAGA,IACrCg0B,EAAOy4F,OAAOh9G,OAAOuZ,EAAO,EAAG8kG,EAAY9tH,IAE/CgpB,GAAS8kG,EAAY/tH,OACrBi0B,EAAOy4F,OAAOh9G,OAAOuZ,EAAO7Q,EAAUpY,aAItC,IADAipB,EAAQ1f,KAAKqmH,UAAU37F,EAAQ85F,EAAYA,EAAY/tH,OAAS,GAAGuvH,QAAShC,GACvEttH,EAAI8tH,EAAY/tH,OAAS,EAAGC,GAAK,EAAGA,IACrCg0B,EAAOy4F,OAAOh9G,OAAOuZ,EAAO,EAAG8kG,EAAY9tH,KAIvDisH,EAAiBrhF,UAAUykF,kBAAoB,SAAUr7F,EAAQ7b,EAAW4vC,GACxE,IAAI/nD,EAEJ,GAAa,IAAT+nD,EACA,IAAK/nD,EAAI,EAAGA,EAAImY,EAAUpY,OAAQC,IAC1Bg0B,EAAOy4F,OAAOt0G,EAAUnY,IAAIsvH,UAC5Bt7F,EAAOy4F,OAAOt0G,EAAUnY,IAAIsvH,QAAQhvH,GAAKynD,EACzC/zB,EAAOy4F,OAAOt0G,EAAUnY,IAAIsvH,QAAQnjH,OAAS47C,IAK7DkkE,EAAiBrhF,UAAUojF,0BAA4B,SAAUh6F,EAAQtsB,EAAO0E,EAAQxK,EAAQ6rH,EAAKmC,GACjG,IAEIC,EACA7vH,EACA8vH,EACAhhH,EALAswB,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAC/B4mH,KAOJ,IAFAjhH,EAAM1C,EAEDpM,EAAI,EAAGA,EAAIo/B,EAAK2tF,KAAKa,WAAW7tH,OAAQC,KACzC+vH,EAAO/7F,EAAO24F,WAAWvtF,EAAK2tF,KAAKa,WAAW5tH,OAE1C+vH,EAAKhD,KAAK7xG,SAAW60G,EAAKhD,KAAKa,cAC/BmC,EAAKxvH,EAAI6L,EAETyjH,GADAC,EAAc97F,EAAO9P,UAAUkb,EAAK2tF,KAAKa,WAAW5tH,KAC3BqX,WAAWzV,QACQ,IAAxCoyB,EAAO5Z,YAAYoN,QAAQ,UAC3BqoG,EAAaC,EAAYz4G,WAAWxV,OAExCiN,EAAM1C,EAASyjH,EAAaD,EAAS,EACrC57F,EAAO04F,SAAWe,EAAM,EACpBztH,EAAI,GAAM,GAAKA,IAAMo/B,EAAK2tF,KAAKa,WAAW7tH,OAAS,IACnDqM,EAAS0C,EACT2+G,MAIZ,OAASH,MAAOt5F,EAAO04F,SAAUtgH,OAAQA,EAASyjH,EAAaD,IAEnE3D,EAAiBrhF,UAAUwjF,6BAA+B,SAAUp6F,EAAQtsB,EAAO+mH,EAAKl3D,EAAOnrD,EAAQkhH,GACnG,IACI0C,EAEAllH,EACAglH,EACA9vH,EAIAkM,EACA67C,EACA5vC,EACA21G,EAZAiC,KAMA3wF,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAE/BskH,EAAMH,EAKV,IAAKttH,EAAI,EAAGA,EAAIo/B,EAAK2tF,KAAKa,WAAW7tH,OAAQC,KACzC+vH,EAAO/7F,EAAO24F,WAAWvtF,EAAK2tF,KAAKa,WAAW5tH,OAM1CgwH,GADAF,EAAc97F,EAAO9P,UAAUkb,EAAK2tF,KAAKa,WAAW5tH,KAC5BqX,WAAWxV,OACS,IAAxCmyB,EAAO5Z,YAAYoN,QAAQ,UAC3BwoG,EAAYF,EAAYz4G,WAAWzV,QAGnCsK,EADAlM,EAAI,GAAM,EACHu3D,EAAQk3D,EAAI5sH,MAAQ,EAAI,GAAKmuH,EAG7Bz4D,EAAQk3D,EAAI5sH,MAAQ,EAAI,GAGnCiJ,EAASxB,KAAK2jH,WAAWj5F,EAAQ9nB,EAAM6jH,EAAKxvH,EAAGyzB,EAAO9P,UAAUkb,EAAK2tF,KAAKa,WAAW5tH,IAAKytH,EAAM,GAC3FnkH,KAAKokH,SAAS15F,EAAQtsB,KACb,IAAN1H,EACA8tH,EAAchjH,EAGdxB,KAAK2mH,WAAWnC,EAAahjH,IAGjC9K,EAAI,GAAM,GAAK+vH,EAAKzH,aAEhBvgE,OADSxkD,IAATwkD,EACOgoE,EAAK1B,UAGLtoH,KAAKqK,IAAI23C,EAAMgoE,EAAK1B,YAG/BruH,EAAI,GAAM,GAAKA,IAAMo/B,EAAK2tF,KAAKa,WAAW7tH,OAAS,IACnDoY,EAAY7O,KAAK0lH,uBAAuBh7F,EAAQlpB,EAAQ2iH,EAAM,GAE9DnkH,KAAKimH,iBAAiBv7F,EAAQ,OAASs7F,QAASxkH,IAAW2iH,EAAM,EAAGt1G,GACpEs1G,MAOZ,OAHIK,IACAA,EAAYO,UAAYtmE,GAErB+lE,GAEX7B,EAAiBrhF,UAAU+iF,cAAgB,SAAU35F,EAAQtsB,EAAOpH,EAAGC,EAAG+sH,GACtE,IAAIzrH,EACJA,EAAQ6F,EAAM2P,WAAWxV,MACzB,IAAID,EAEJ,GADAA,EAAS8F,EAAM2P,WAAWzV,QACkB,IAAxCoyB,EAAO5Z,YAAYoN,QAAQ,QAAgB,CAC3C,IAAK8lG,EAAO,CACR,IAAI5zG,OAAO,EACXA,EAAOpZ,EACPA,EAAIC,EACJA,EAAImZ,EAER9X,EAAS8F,EAAM2P,WAAWxV,MAC1BA,EAAQ6F,EAAM2P,WAAWzV,OAE7B,OAAStB,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOA,EAAOD,OAAQA,IAE/CqqH,EAAiBrhF,UAAU8iF,SAAW,SAAU15F,EAAQtsB,GAEpD,IAAIwoH,EAASl8F,EAAO24F,WAAWjlH,EAAMyB,IACrC,OAAO+mH,EAAOnD,KAAK7xG,UAAYg1G,EAAOnD,KAAK7xG,SAASnb,QAExDksH,EAAiBrhF,UAAUujF,qBAAuB,SAAUn6F,EAAQtsB,EAAOhF,EAAMpC,EAAGC,EAAG+sH,GAEnF,IAAIE,EACJA,EAAalkH,KAAKqkH,cAAc35F,EAAQtsB,EAAOpH,EAAGC,EAAG+sH,GACrD,IAGIG,EAHAruF,KAEArE,GADJqE,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,KACf4jH,KAAK5nH,KAErBsoH,EAAMH,EACN,IAAInhH,EAAQ,EACZA,EAAQ7L,EACR,IAAI8L,EACJA,EAAS7L,EACT,IAAIsB,EACAD,EACAsV,EACA84B,EACAmgF,EACAC,EAEAtlH,EACAulH,EACA3D,EAEA2B,EACAiC,EACAtwH,EACAuwH,EAEAxB,EAEJ,GADmB/6F,EAAOy4F,OAAOryE,MAAM,EAAGpmB,EAAOy4F,OAAO1sH,QACpDuJ,KAAKokH,SAAS15F,EAAQtsB,GAAQ,CAC9B,IAAIu2B,OAAI,EAER,IADAA,GAA4C,IAAxCjK,EAAO5Z,YAAYoN,QAAQ,QAC1BxnB,EAAI,EAAGA,EAAIo/B,EAAK2tF,KAAK7xG,SAASnb,OAAQC,IAAK,CAqC5C,GApCAkX,EAAQ8c,EAAO9P,UAAUkb,EAAK2tF,KAAK7xG,SAASlb,IAC5C6B,EAAQqV,EAAMG,WAAWxV,MACzBD,EAASsV,EAAMG,WAAWzV,OAC1BuuH,EAAalyF,EAAIr8B,EAASC,EAC1BuuH,EAAcnyF,EAAIp8B,EAAQD,EACboyB,EAAOy4F,OAAOgB,EAAM,GAAKz5F,EAAOy4F,OAAOgB,EAAM,GAAG6B,QAAU,KAEvEt/E,EAAc1mC,KAAK2jH,WAAWj5F,EAAQ7nB,EAAOC,EAAQ8K,EAAOu2G,EAAM,EAAGz5F,EAAO9P,UAAUkb,EAAK2tF,KAAK7xG,SAASlb,EAAI,KAC7GuwH,EAAYv8F,EAAO24F,WAAWz1G,EAAM/N,IACpCi2B,EAAKstF,SAAW3mH,KAAK+I,IAAIswB,EAAKstF,UAAY,EAAG6D,EAAU7D,UAAY,GACnE2D,GAAc/vH,EAAGiwH,EAAUjwH,EAAGC,EAAGgwH,EAAUhwH,EAAG4L,MAAOokH,EAAUjwH,EAAI6vH,EAAY/jH,OAAQmkH,EAAUhwH,EAAI6vH,GAC3F,IAANpwH,IAEA8K,GACIxK,EAAGyF,KAAKqK,IAAImgH,EAAUjwH,EAAG0vC,EAAY1vC,GAAIC,EAAGwF,KAAKqK,IAAImgH,EAAUhwH,EAAGyvC,EAAYzvC,GAC9E4L,MAAO6jC,EAAY7jC,MAAOC,OAAQ4jC,EAAY5jC,QAElD2iH,EAAiBwB,GAEhBD,GAIDA,EAAahwH,EAAI+vH,EAAU/vH,EAC3BgwH,EAAa/vH,EAAI8vH,EAAU9vH,EACvB8vH,EAAUlkH,MAAQmkH,EAAankH,QAC/BmkH,EAAankH,MAAQkkH,EAAUlkH,OAEnCmkH,EAAalkH,OAASikH,EAAUjkH,QARhCkkH,EAAeD,EAaT,IAANrwH,IACAo/B,EAAK/T,YAAe/qB,EAAGiwH,EAAUjwH,EAAG+tH,UAAWkC,EAAUlC,UAAWn3G,MAAOA,EAAM/N,KAEjFG,KAAKokH,SAAS15F,EAAQ9c,GACtB,IAAKkoB,EAAK/T,YAAc+T,EAAK/T,WAAW/qB,GAAKiwH,EAAUllG,WAAW/qB,EAAG,CAC7DiwH,EAAUllG,YAAc+T,EAAK/T,WAAWgjG,UAAYkC,EAAUlC,YAC9DjvF,EAAK/T,WAAWgjG,UAAYA,EAC5BkC,EAAUlC,UAAYA,EACtBA,EAAYjvF,EAAK/T,WAAWgjG,UAC5Br6F,EAAO24F,WAAWvtF,EAAK/T,WAAWnU,OAAOm3G,UAAYA,GAEzD,IAAImC,OAA6BjtH,IAAd8qH,EAA0BA,EAAYkC,EAAUlC,UACnEjvF,EAAK/T,YAAe/qB,EAAGiwH,EAAUllG,WAAW/qB,EAAG+tH,UAAWmC,EAAct5G,MAAOA,EAAM/N,SAEhFonH,EAAUllG,YAAcklG,EAAUnB,YAAchwF,EAAK/T,WAAWgjG,UAAYkC,EAAUlC,YAC3FjvF,EAAK/T,WAAWgjG,UAAYr6F,EAAO24F,WAAWvtF,EAAK/T,WAAWnU,OAAOm3G,UAAYkC,EAAUlC,WAGnG3B,EAAWA,EAAW3mH,KAAK+I,IAAIyhH,EAAU7D,SAAUA,GAAY6D,EAAU7D,SACzEpjH,KAAK2mH,WAAWnlH,EAAQklC,GAEpB7jC,EADM,IAANnM,IAAYsJ,KAAKokH,SAAS15F,EAAQ9c,IAAUq5G,EAAU5B,mBAAqB,EACnE3+E,EAAY7jC,MAAQokH,EAAU5B,mBAAqB36F,EAAO44F,kBAG1D58E,EAAY7jC,MAAQ6nB,EAAO44F,kBAGtC10G,WAxELu4G,KAyEI1B,EAAeV,eAzEnBoC,GA2EArxF,EAAKnC,KAAO8xF,EAAezuH,EAAIgwH,EAAankH,OAAS,EAAIqhH,EAAW3rH,MAAQ,EAE/D,SAATk5B,EACAqE,EAAKnC,IAAMozF,EAAUlkH,MAAQqhH,EAAW3rH,MAE1B,UAATk5B,IACLqE,EAAKnC,IAAM38B,GAGnB,OAAOwK,GAEXmhH,EAAiBrhF,UAAUqjF,qCAAuC,SAAUj6F,EAAQtsB,EAAOhF,EAAMpC,EAAGC,EAAG+sH,GAEnG,IAAIp2G,EACAq5G,EACAvgF,EACAmgF,EAIArlH,EAEAjJ,EACAD,EAKAjC,EACAK,EAGA0wH,EACAC,EAEAnD,EAAalkH,KAAKqkH,cAAc35F,EAAQtsB,EAAOpH,EAAGC,EAAG+sH,GACrDluF,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAE/BskH,GADOruF,EAAK2tF,KAAK5nH,KACXmoH,GACNnhH,EAAQ7L,EACR8L,EAAS7L,EAETqwH,GADmB58F,EAAOy4F,OAAOryE,MAAM,EAAGpmB,EAAOy4F,OAAO1sH,QACvC,GACrB,GAAIuJ,KAAKokH,SAAS15F,EAAQtsB,GAAQ,CAC9B,IAAIu2B,GAA4C,IAAxCjK,EAAO5Z,YAAYoN,QAAQ,QAC/ByQ,OAAQ,EACRpS,EAAOvc,KAAKunH,oBAAoB78F,EAAQtsB,GACxCopH,EAAuC,IAA9B1xF,EAAK2tF,KAAK7xG,SAASnb,QAAmC,IAAnB8lB,EAAK,GAAG9lB,OACpDgxH,KACAC,KACCF,EAIDE,EAAYnrG,EAHZvc,KAAK2nH,UAAUprG,EAAMkrG,EAAUC,GAKnC,IAAIE,GAAaH,SAAUA,EAAUlrG,KAAMA,EAAMmrG,UAAWA,EAAWxD,WAAYA,GAC/E2D,EAAY7nH,KAAK8nH,eAAep9F,EAAQk9F,EAAUxpH,EAAOpH,EAAG8L,EAAQqhH,GACxE3iH,EAASomH,EAASpmH,OAClB,IAAIumH,OAAS,EACT9mH,GAAU4mH,GAAa,SAAoB5tH,IAAd4tH,EAA2Bn9F,EAAO44F,kBAAoB,EAAK,QAC1ErpH,IAAd4tH,IACA/xF,EAAKnC,IAAM1yB,EAASijH,EAAW3rH,MAAQ,EACvCwvH,EAASF,EAAYn9F,EAAO44F,mBAEhCxgH,EAAS7L,EACT,IAAI+wH,OAAc,EAElB,IADAA,KACKtxH,EAAI,EAAGA,EAAIgxH,EAAUjxH,OAAQC,IAU9B,IARImM,EADA0Z,EAAK7lB,GAAGD,OAAS,GAAM,GAAKC,IAAMgxH,EAAUjxH,OAAS,GAAK+wH,EAClDxwH,EAGA+wH,GAAU/wH,EAEZ,IAANN,IACAoM,EAASklH,EAAYtxH,EAAI,GAAGoM,OAAS4nB,EAAO64F,iBAE3CltH,EAAI,EAAGA,EAAIqxH,EAAUhxH,GAAGD,OAAQJ,IAEjCkC,GADAqV,EAAQ8c,EAAO9P,UAAU8sG,EAAUhxH,GAAGL,KACxB0X,WAAWxV,MACzBD,EAASsV,EAAMG,WAAWzV,OAC1BuuH,EAAalyF,EAAIr8B,EAASC,GAC1B0uH,EAEYv8F,EAAO24F,WAAWz1G,EAAM/N,KAC1B8lH,YAAcxB,EAAM,EAAIztH,EACxB,IAANL,GAAWoxH,EAAS/wH,IAAM+wH,EAAS/wH,GAAGD,SACtCwwH,EAAU9pE,WAAY,GAEtBqqE,GAAgB,IAAN9wH,IACA,IAANL,GAAW+wH,EAAaP,EAAan8F,EAAO44F,mBAAqB+D,IACjE14F,GAAQ,EACR9rB,EAAQukH,EAAaP,EAAa,GAElCl4F,GAAe,IAANt4B,IACTwM,EAAQwkH,EAAcR,EAAa,IAG3CngF,EAAc1mC,KAAK2jH,WAAWj5F,EAAQ7nB,EAAOC,EAAQ8K,EAAOu2G,EAAM,EAAGz5F,EAAO9P,UAAU8sG,EAAUhxH,GAAGL,EAAI,KACnGmxH,GAAUnxH,GAAK,GAAW,IAANK,GACV,IAANL,IACA+wH,EAAa1gF,EAAY1vC,EAAI0zB,EAAO44F,kBAAoB,EACxD+D,EAAc3gF,EAAY1vC,EAAI6vH,EAAan8F,EAAO44F,kBAAoB,GAGpE,IAANjtH,EACA2xH,EAAYtxH,IAAOM,EAAG0vC,EAAY1vC,EAAGC,EAAGyvC,EAAYzvC,EAAG4L,MAAO6jC,EAAY7jC,MAAOC,OAAQ4jC,EAAY5jC,QAGrG9C,KAAK2mH,WAAWqB,EAAYtxH,GAAIgwC,GAE/BllC,IACDA,GACIxK,EAAGgxH,EAAYtxH,GAAGM,EAAGC,EAAG+wH,EAAYtxH,GAAGO,EAAG4L,MAAOmlH,EAAYtxH,GAAGmM,MAChEC,OAAQklH,EAAYtxH,GAAGoM,SAG/B9C,KAAK2mH,WAAWnlH,EAAQwmH,EAAYtxH,IACpCmM,EAAQ6jC,EAAY7jC,MAAQ6nB,EAAO44F,oBAC9BxtF,EAAK/T,aAAgBrrB,IAAMgxH,EAAUjxH,OAAS,GAAK8lB,EAAK7lB,GAAGD,OAAS,GAAM,GAAM+wH,IACxE,IAANnxH,QAAmC4D,IAAxBgtH,EAAUlC,WAA2BuC,EAAiBL,EAAUlC,aAC9EuC,EAAiB7qH,KAAKqK,IAAIwgH,EAAgBL,EAAUlC,WAAa,GACjEjvF,EAAK/T,YAAe/qB,EAAGiwH,EAAUjwH,EAAG4W,MAAOA,EAAM/N,GAAIklH,UAAWkC,EAAUlC,YAE9E6C,EAASR,WAAaA,EACtBQ,EAASP,YAAcA,EACvBO,EAASj5F,MAAQA,EACjBi5F,EAAS5D,MAAQG,EACjByD,EAASI,YAAcA,EACvBhoH,KAAKioH,kBAAkBv9F,EAAQh0B,EAAG0H,EAAOwpH,EAAUG,GAI/D,OAAOvmH,GAEXmhH,EAAiBrhF,UAAUwmF,eAAiB,SAAUp9F,EAAQk9F,EAAUxpH,EAAOpH,EAAG8L,EAAQqhH,GAWtF,IAAK,IARDthH,EAEAykH,EACAO,EACAnhF,EACAllC,EAPAimH,EAAWG,EAASH,SACpB3xF,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAE/BqoH,KAKAvzF,GAA4C,IAAxCjK,EAAO5Z,YAAYoN,QAAQ,QAE1BxnB,EAAI,EAAGA,EAAI+wH,EAAShxH,QAAUgxH,EAAS/wH,GAAGD,OAAQC,IAAK,CAC5DmM,EAAQ7L,EACJkxH,EAAWxxH,EAAI,KACfoM,EAASolH,EAAWxxH,EAAI,GAAGoM,OAAS4nB,EAAO64F,iBAE/C,IAAK,IAAIltH,EAAI,EAAGA,EAAIoxH,EAAS/wH,GAAGD,OAAQJ,IAAK,CACzC,IAAIuX,EAAQ8c,EAAO9P,UAAU6sG,EAAS/wH,GAAGL,IAIrC4wH,GAHatyF,EAAI/mB,EAAMG,WAAWzV,OAASsV,EAAMG,WAAWxV,MAC9Co8B,EAAI/mB,EAAMG,WAAWxV,MAAQqV,EAAMG,WAAWzV,OAEhDoyB,EAAO24F,WAAWz1G,EAAM/N,KACxConH,EAAUtB,YAAcxB,EAAM,EAAIztH,EAClCgwC,EAAc1mC,KAAK2jH,WAAWj5F,EAAQ7nB,EAAOC,EAAQ8K,EAAOu2G,EAAM,EAAGz5F,EAAO9P,UAAU6sG,EAAS/wH,GAAGL,EAAI,KAC5F,IAANA,EACA6xH,EAAWxxH,IAAOM,EAAG0vC,EAAY1vC,EAAGC,EAAGyvC,EAAYzvC,EAAG4L,MAAO6jC,EAAY7jC,MAAOC,OAAQ4jC,EAAY5jC,QAGpG9C,KAAK2mH,WAAWuB,EAAWxxH,GAAIgwC,GAEzB,IAANhwC,GAAiB,IAANL,GACXixH,EAAiBL,EAAUlC,UAC3BjvF,EAAK/T,YAAe/qB,EAAGiwH,EAAUjwH,EAAG4W,MAAOA,EAAM/N,GAAIklH,UAAWkC,EAAUlC,YAE/D,IAAN1uH,QAAmC4D,IAAxBgtH,EAAUlC,WAA2BuC,EAAiBL,EAAUlC,YAChFuC,EAAiB7qH,KAAKqK,IAAIwgH,EAAgBL,EAAUlC,WAAa,GACjEjvF,EAAK/T,YAAe/qB,EAAGiwH,EAAUjwH,EAAG4W,MAAOA,EAAM/N,GAAIklH,UAAWkC,EAAUlC,YAE9EliH,EAAQ6jC,EAAY7jC,MAAQ6nB,EAAO44F,kBAGnCuE,EADM,IAANnxH,EACYwxH,EAAWxxH,GAAGmM,MAGdpG,KAAK+I,IAAIqiH,EAAWK,EAAWxxH,GAAGmM,OAItD,IAASnM,EAAI,EAAGA,EAAI+wH,EAAShxH,QAAUgxH,EAAS/wH,GAAGD,OAAQC,IAAK,CAC5D,GAAImxH,IAAcK,EAAWxxH,GAAGmM,MAEvB,CAAA,IADD47C,EAAOopE,EAAYK,EAAWxxH,GAAGmM,MACrC,IAASxM,EAAI,EAAGA,EAAIoxH,EAAS/wH,GAAGD,OAAQJ,IAAK,CAC3Bq0B,EAAO9P,UAAU6sG,EAAS/wH,GAAGL,IACzBq0B,EAAO24F,WAAWoE,EAAS/wH,GAAGL,IACpCW,GAAKynD,GAKf,IAAN/nD,EACA8K,GAAWxK,EAAGkxH,EAAW,GAAGlxH,EAAGC,EAAGixH,EAAW,GAAGjxH,EAAG4L,MAAOqlH,EAAW,GAAGrlH,MAAOC,OAAQolH,EAAW,GAAGplH,QAGrG9C,KAAK2mH,WAAWnlH,EAAQ0mH,EAAWxxH,IAI3C,OADAkxH,EAASpmH,OAASA,EACXqmH,GAEXlF,EAAiBrhF,UAAU2mF,kBAAoB,SAAUv9F,EAAQh0B,EAAG0H,EAAOwpH,EAAUG,GACjF,IAAIviH,EACA2iH,EACA1pE,EACA3oB,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAC/B0c,EAAOqrG,EAASrrG,KAChBmrG,EAAYE,EAASF,UACrBN,EAAaQ,EAASR,WACtBC,EAAcO,EAASP,YACvB14F,EAAQi5F,EAASj5F,MACjBq5F,EAAcJ,EAASI,YACvB9D,EAAa0D,EAAS1D,WACtBC,EAAMyD,EAAS5D,MACfwD,EAAuC,IAA9B1xF,EAAK2tF,KAAK7xG,SAASnb,QAAmC,IAAnB8lB,EAAK,GAAG9lB,OAIxD,GAHI+wH,GAAgB,IAAN9wH,IACV8O,EAAOwiH,EAAY,GAAGnlH,MAAQmlH,EAAY,GAAGhxH,GAAOgxH,EAAY,GAAGnlH,MAAQmlH,EAAY,GAAGhxH,EAAK,EAAI,GAEnGN,IAAM6lB,EAAK9lB,OAAS,IAChB8lB,EAAK7lB,GAAGD,OAAS,GAAM,GAAK+wH,GAAgB,IAAN9wH,GAAS,CAC/CyxH,EAAWT,EAAUhxH,GAAG+F,KAAKm3B,MAAM8zF,EAAUhxH,GAAGD,OAAS,IACzD,IAAI2xH,OAAc,EAClBA,EAAc19F,EAAO9P,UAAUutG,GAC/B,IAAIE,OAAiB,EACjBC,EAAY59F,EAAO24F,WAAW8E,GAAUnxH,EACxCuxH,EAAY79F,EAAO24F,WAAW8E,GAAUlxH,EAC5CoxH,EAAiBroH,KAAKqkH,cAAc35F,EAAQ09F,EAAaE,EAAWC,EAAWpE,EAAM,GACrF1lE,OAAOxkD,GACF00B,GAAS64F,GACE,IAARhiH,IACA9O,EAAI,GAER+nD,GAAQupE,EAAYxiH,GAAKxO,EAAIgxH,EAAYxiH,GAAK3C,OAAS,GAAKmlH,EAAYtxH,GAAGM,EAAIgxH,EAAYtxH,GAAGmM,OAAS,EAC7F,IAANnM,IACAo/B,EAAKnC,KAAO8qB,IAGV+oE,QAAqBvtH,IAAX8tH,IAChBtpE,EAAOspE,EAASr9F,EAAO44F,kBAAoB,GAAKgF,EAAYD,EAAe9vH,MAAQ,SAE1E0B,IAATwkD,GACAz+C,KAAKwoH,uBAAuB99F,EAAQg9F,EAAUhxH,GAAI+nD,EAAMylE,GAExDsD,IACA1xF,EAAKnC,KAAO0zF,EAAcD,GAAc,GAAW,IAAN1wH,EAAU+nD,EAAO,GAAKylE,EAAW3rH,MAAQ,QAEzE0B,IAAb67B,EAAKnC,KAAqBjJ,EAAO24F,WAAW8E,KAC5CryF,EAAKnC,IAAM20F,GAEf35F,GAAQ,EACRj4B,MAIZisH,EAAiBrhF,UAAUknF,uBAAyB,SAAU99F,EAAQg9F,EAAWjpE,EAAMylE,GACnF,IAAK,IAAI7tH,EAAI,EAAGA,EAAIqxH,EAAUjxH,OAAQJ,IAAK,CACvC,IAAI4wH,EAAYv8F,EAAO24F,WAAWqE,EAAUrxH,IAChCq0B,EAAO9P,UAAU8sG,EAAUrxH,IAGvC,GAFA4wH,EAAUjwH,GAAKynD,EACfwoE,EAAUlC,WAAatmE,EACnBpoD,IAAMqxH,EAAUjxH,OAAS,EAAG,CAE5B,IAAIgyH,GACAzxH,EAAGiwH,EAAUjwH,EAAGC,EAAGgwH,EAAUhwH,EAAG4L,MAAOokH,EAAUjwH,EAC7CktH,EAAW3rH,MAAOuK,OAAQmkH,EAAUhwH,EAAIitH,EAAW5rH,QAEvDuW,EAAY7O,KAAK0lH,uBAAuBh7F,EAAQ+9F,EAAWxB,EAAUtB,aACzE3lH,KAAKimH,iBAAiBv7F,EAAQ,OAASs7F,QAASyC,IAAcxB,EAAUtB,YAAa92G,MAIjG8zG,EAAiBrhF,UAAUqmF,UAAY,SAAUprG,EAAMkrG,EAAUC,GAC7D,IAAK,IAAIhxH,EAAI,EAAGA,EAAI6lB,EAAK9lB,OAAQC,IAAK,CAClC+wH,EAAS/wH,MACTgxH,EAAUhxH,MACV,IAAIgyH,OAAO,EAEX,GADAA,EAAOnsG,EAAK7lB,GAAGD,OACX8lB,EAAK7lB,GAAGD,OAAS,GAAM,EAAG,CAC1BiyH,EAAOjsH,KAAKo6B,KAAKta,EAAK7lB,GAAGD,OAAS,GAClC,IAAK,IAAIspB,EAAI,EAAGA,EAAI2oG,EAAM3oG,IACtB0nG,EAAS/wH,GAAGI,KAAKylB,EAAK7lB,GAAGqpB,IAGjC,IAAK,IAAI1pB,EAAIoxH,EAAS/wH,GAAGD,OAAQJ,EAAIkmB,EAAK7lB,GAAGD,OAAQJ,IACjDqxH,EAAUhxH,GAAGI,KAAKylB,EAAK7lB,GAAGL,MAItCssH,EAAiBrhF,UAAUsjF,mBAAqB,SAAUl6F,EAAQtsB,EAAOpH,EAAGC,EAAG+sH,EAAO2E,GAYjE3oH,KAAKqkH,cAAc35F,EAAQtsB,EAAOpH,EAAGC,EAAG+sH,GAVzD,IAAIp2G,EACAq5G,EACAvgF,EACAmgF,EACAC,EACA9H,EACAx9G,EACAulH,EACA6B,EACAC,EAQA1E,EANAruF,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAC/BkiB,EAAa2I,EAAO9P,UAAUkb,EAAK2tF,KAAK7xG,SAAS,IACjD+iB,GAA4C,IAAxCjK,EAAO5Z,YAAYoN,QAAQ,QAC/BgiE,EAA4B,SAAnBpqD,EAAK2tF,KAAK5nH,MAAmB,EAAI,EAC1CgH,EAAQ7L,EACR8L,EAAS7L,EAEbktH,EAAMH,EACN,IAAIttH,EACAmY,EACAhT,EAGAkpH,EAFA5B,KACA2F,KAEJ,IACKpyH,EAAI,EAAGA,EAAIo/B,EAAK2tF,KAAK7xG,SAASnb,OAAQC,IAAK,CA+D5C,GA9DuB,cAAnBo/B,EAAK2tF,KAAK5nH,OAEVA,EAAQnF,EAAI,GAAM,GAAKo/B,EAAK2tF,KAAK7xG,SAASnb,OAAS,EAAK,OAAS,QACjEypF,EAAUxpF,EAAI,GAAM,GAAKo/B,EAAK2tF,KAAK7xG,SAASnb,OAAS,GAAM,EAAI,GAEnEoM,EAAQ7L,EAAIgJ,KAAK+oH,WAAWr+F,EAAQtsB,EAAO03B,EAAMj6B,GACjD+R,EAAQ8c,EAAO9P,UAAUkb,EAAK2tF,KAAK7xG,SAASlb,IAC5CmwH,EAAalyF,EAAI/mB,EAAMG,WAAWzV,OAASsV,EAAMG,WAAWxV,MAC5DuuH,EAAcnyF,EAAI/mB,EAAMG,WAAWxV,MAAQqV,EAAMG,WAAWzV,OAE5DouC,EAAc1mC,KAAK2jH,WAAWj5F,EAAQ7nB,EAAQq9E,EAAS2mC,EAAY/jH,EAAQ8K,EAAOo2G,EAAQ,OAAG/pH,GAAW,GACxGgtH,EAAYv8F,EAAO24F,WAAWz1G,EAAM/N,IACpCknH,GAAc/vH,EAAGiwH,EAAUjwH,EAAGC,EAAGgwH,EAAUhwH,EAAG4L,MAAOokH,EAAUjwH,EAAI6vH,EAAY/jH,OAAQmkH,EAAUhwH,EAAI6vH,GAC3F,IAANpwH,GACAsJ,KAAK2mH,WAAWjgF,EAAaqgF,GAC7BvlH,EAASklC,GAGT1mC,KAAK2mH,WAAWnlH,EAAQklC,IAGxBugF,EAAUjI,YAAmC,cAAnBlpF,EAAK2tF,KAAK5nH,MAAwBnF,EAAI,GAAM,GAAKo/B,EAAK2tF,KAAK7xG,SAASnb,OAAS,IACvGsuH,OAA0B9qH,IAAd8qH,EAA0BtoH,KAAKqK,IAAImgH,EAAUlC,UAAWA,GAAakC,EAAUlC,WAG/FjvF,EAAKstF,SAAW3mH,KAAK+I,IAAIswB,EAAKstF,UAAY,EAAG6D,EAAU7D,UAAY,GAC1C,cAAnBttF,EAAK2tF,KAAK5nH,MAAwBi6B,EAAK2tF,KAAK7xG,SAASnb,OAAS,GAAKC,EAAI,GAAM,GAyBrE,IAANA,IACAoM,EAASk8G,EAAWl8G,OAAS4nB,EAAO64F,gBAAkB,GAE1DuF,EAAUhyH,MAAOkvH,QAASe,IACtBE,EAAUzC,cACVsE,EAAYA,EAAU3sF,OAAO8qF,EAAUzC,gBA3BvC1hH,EAFmB,cAAnBgzB,EAAK2tF,KAAK5nH,MAAwBi6B,EAAK2tF,KAAK7xG,SAASnb,OAAS,EAErDgG,KAAK+I,IAAIkhC,EAAY5jC,OAAQk8G,EAAWl8G,QAAU4nB,EAAO64F,gBAAkB,EAI3E78E,EAAY5jC,OAAS4nB,EAAO64F,gBAAkB,EAE3DS,EAAQluF,EAAKstF,SACbD,EAAOrsH,MAAOkvH,QAASe,IAClB8B,EAOD7oH,KAAK2mH,WAAWkC,EAAY9B,GAN5B8B,GACI7xH,EAAGiwH,EAAUjwH,EAAGC,EAAGgwH,EAAUhwH,EAAG4L,MAAOokH,EAAUjwH,EAAI6vH,EACrD/jH,OAAQmkH,EAAUhwH,EAAI6vH,GAM1BG,EAAUzC,cACVrB,EAASA,EAAOhnF,OAAO8qF,EAAUzC,eAY/B,IAAN9tH,IACAo/B,EAAK/T,YAAe/qB,EAAGiwH,EAAUjwH,EAAG+tH,UAAWkC,EAAUlC,UAAWn3G,MAAOA,EAAM/N,KAEjFG,KAAKokH,SAAS15F,EAAQ9c,GACtB,IAAKkoB,EAAK/T,YAAc+T,EAAK/T,WAAW/qB,GAAKiwH,EAAUllG,WAAW/qB,EAAG,CACjE,GAAIiwH,EAAUllG,YAAc+T,EAAK/T,WAAWgjG,UAAYkC,EAAUlC,UAAW,CACzE,IAAIiE,EAAclzF,EAAK/T,WAAWgjG,UAClCkC,EAAUlC,UAAYiE,EACtBt+F,EAAO24F,WAAWvtF,EAAK/T,WAAWnU,OAAOm3G,UAAYiE,EACrDlzF,EAAK/T,WAAWgjG,UAAYiE,EAEhClzF,EAAK/T,YACD/qB,EAAGiwH,EAAUllG,WAAW/qB,EAAG+tH,eAAyB9qH,IAAd8qH,EAA0BA,EAAYkC,EAAUlC,UACtFn3G,MAAOA,EAAM/N,SAGZonH,EAAUllG,YAAcklG,EAAUnB,YAAchwF,EAAK/T,WAAWgjG,UAAYkC,EAAUlC,YAC3FjvF,EAAK/T,WAAWgjG,UAAYr6F,EAAO24F,WAAWvtF,EAAK/T,WAAWnU,OAAOm3G,UAAYkC,EAAUlC,WAGnG/F,EAAa+H,EAuBjB,OApBK4B,EAaD7yF,EAAK0uF,YAAcrB,GAZI,cAAnBrtF,EAAK2tF,KAAK5nH,MAAwBi6B,EAAK2tF,KAAK7xG,SAASnb,OAAS,IAC9DmyH,GACI5xH,EAAG8xH,EAAU,GAAG9C,QAAQhvH,EAAGC,EAAG6xH,EAAU,GAAG9C,QAAQ/uH,EACnD4L,MAAOimH,EAAUA,EAAUryH,OAAS,GAAGuvH,QAAQnjH,MAAOC,OAAQgmH,EAAUA,EAAUryH,OAAS,GAAGuvH,QAAQljH,QAE1G+L,EAAY7O,KAAK0lH,uBAAuBh7F,EAAQk+F,EAAWzE,EAAM,GACjEnkH,KAAKimH,iBAAiBv7F,EAAQ,KAAMo+F,EAAW3E,EAAM,EAAGt1G,IAE5DA,EAAY7O,KAAK0lH,uBAAuBh7F,EAAQm+F,GAAcrnH,EAAQ2iH,EAAM,GAC5EnkH,KAAKimH,iBAAiBv7F,EAAQ,KAAMm+F,EAAa1F,IAAY6C,QAASxkH,IAAW2iH,EAAM,EAAGt1G,IAKzFD,MAAMm2G,KACPr6F,EAAO24F,WAAWthG,EAAWliB,IAAIklH,UAAYA,GAEjDjvF,EAAK4Q,YAAcllC,EACnBs0B,EAAKnC,IAAM38B,EACJwK,GAEXmhH,EAAiBrhF,UAAUimF,oBAAsB,SAAU78F,EAAQtsB,GAC/D,IAAI03B,EAEAmzF,EACJA,EAAS,EACT,IACIlzF,EADAxZ,KAEJwZ,GALAD,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,KAKb4jH,KAAK7xG,SAASnb,OAChC,IAAImb,EAAW5R,KAAKkpH,OAAOpzF,EAAK2tF,KAAK7xG,UACrC,GAAIkkB,EAAK2tF,KAAKlnG,KAAM,CAChB,IAAImf,OAAQ,EACZA,EAAQ5F,EAAK2tF,KAAK7xG,SAASnb,OAC3B,IAAIukB,OAAU,EAGViuG,GAFJjuG,EAAUve,KAAKo6B,KAAK6E,EAAQ5F,EAAK2tF,KAAKlnG,OACxB,GAAM,EACPvB,EAGAA,EAAU,OAGY,IAA9B8a,EAAK2tF,KAAK7xG,SAASnb,QAA8C,IAA9Bq/B,EAAK2tF,KAAK7xG,SAASnb,OAC3DwyH,EAAS,EAE0B,IAA9BnzF,EAAK2tF,KAAK7xG,SAASnb,SACxBwyH,EAAS,GAEb,KAAOlzF,EAAa,GAChBxZ,EAAKA,EAAK9lB,QAAUmb,EAASzL,OAAO,EAAG8iH,IACvClzF,GAAckzF,GACGA,IACbA,EAASlzF,GAGjB,OAAOxZ,GAEXomG,EAAiBrhF,UAAU4nF,OAAS,SAAU94G,GAC1C,IAAI1Z,EACAyyH,KACJ,IAAKzyH,EAAI,EAAGA,EAAI0Z,EAAK3Z,OAAQC,IACzByyH,EAAMzyH,GAAK0Z,EAAK1Z,GAEpB,OAAOyyH,GAEXxG,EAAiBrhF,UAAUynF,WAAa,SAAUr+F,EAAQtsB,EAAO03B,EAAMj6B,GACnE,IAAI6T,EAAS,EACTu+C,GAAiD,IAAxCvjC,EAAO5Z,YAAYoN,QAAQ,QAAkB9f,EAAM2P,WAAWzV,OACvE8F,EAAM2P,WAAWxV,MACjB6wH,EAAWvtH,GAAci6B,EAAK2tF,KAAK5nH,KAOvC,OANA6T,EAASomB,EAAK2tF,KAAK/zG,QAAU,GACN,cAAnBomB,EAAK2tF,KAAK5nH,MACN6T,GAAUgb,EAAO44F,oBACjB5zG,EAASgb,EAAO44F,kBAAoB,GAGpC8F,GACJ,IAAK,OACD15G,EAASu+C,EAAQ,EAAIv+C,EACrB,MACJ,IAAK,QACDA,GAAkBu+C,EAAQ,EAGlC,OAAOv+C,GAEXizG,EAAiBrhF,UAAUqlF,WAAa,SAAUljF,EAAOC,GAErDD,EAAMzsC,EAAIyF,KAAKqK,IAAI28B,EAAMzsC,EAAG0sC,EAAM1sC,GAClCysC,EAAM5gC,MAAQpG,KAAK+I,IAAIi+B,EAAM5gC,MAAO6gC,EAAM7gC,OAC1C4gC,EAAM3gC,OAASrG,KAAK+I,IAAIi+B,EAAM3gC,OAAQ4gC,EAAM5gC,SAEhD6/G,EAAiBrhF,UAAUukF,yBAA2B,SAAUn7F,EAAQtsB,EAAOoD,GAC3E,IAAIs0B,EACJA,EAAOpL,EAAO24F,WAAWjlH,EAAMyB,IAC/B,IAAIwpH,EACArK,EAEAj/F,EACAkuC,EAGJ,IAFAA,EAAQvjC,EAAO44F,kBAEVvjG,EAAI,EAAGA,EAAI+V,EAAKjnB,UAAUpY,OAAQspB,IACnCi/F,EAAat0F,EAAOy4F,OAAOrtF,EAAKjnB,UAAUkR,IAAIimG,QAC9CqD,EAAM7nH,EAAOxK,GAAKgoH,EAAWn8G,MAAQorD,SACnBh0D,IAAd67B,EAAK2oB,MAAsB4qE,EAAMvzF,EAAK2oB,QACtC3oB,EAAK2oB,KAAO4qE,EACZvzF,EAAKkpF,WAAat0F,EAAOy4F,OAAOrtF,EAAKjnB,UAAUkR,IAAIimG,UAI/DrD,EAAiBrhF,UAAUokF,uBAAyB,SAAUh7F,EAAQlpB,EAAQwiH,EAAO2B,GAEjF,IAAIO,GACJA,GAASlvH,EAAGwK,EAAOxK,EAAGC,EAAGuK,EAAOvK,EAAG4L,MAAOrB,EAAOqB,MAAOC,OAAQtB,EAAOsB,SAClE7L,GAAKyzB,EAAO64F,gBAAkB,EACnC2C,EAAKpjH,QAAU4nB,EAAO64F,gBAAkB,EACxC,IAAI+F,EACJA,KACA,IAAItD,EACA5qH,EACJA,OAAoBnB,IAAhB0rH,EAA4BA,EAAc3B,EAC9CgC,EAAUt7F,EAAOy4F,OAAO/nH,GAAKsvB,EAAOy4F,OAAO/nH,GAAG4qH,QAAU,KAExD,EAAG,CACC,GAAIA,IAAaE,EAAKjvH,EAAI+uH,EAAQ/uH,GAAKivH,EAAKpjH,OAASkjH,EAAQ/uH,GACrDivH,EAAKjvH,EAAI+uH,EAAQljH,QAAUkjH,EAAQljH,OAASojH,EAAKpjH,QACrDojH,EAAKjvH,GAAK+uH,EAAQ/uH,GACdivH,EAAKpjH,QAAUkjH,EAAQljH,QAAUojH,EAAKjvH,EAAI+uH,EAAQ/uH,GAAKivH,EAAKpjH,OAASkjH,EAAQljH,QAAS,CAE1FwmH,EAAmBnjH,OADP,EACqB,EAAG/K,QAEnC,GAAI4qH,GAAWA,EAAQljH,OAASojH,EAAKjvH,EACtC,MAEJmE,IACA4qH,EAAUt7F,EAAOy4F,OAAO/nH,GAAKsvB,EAAOy4F,OAAO/nH,GAAG4qH,QAAU,WACnD5qH,GAAK,GACdA,QAAqBnB,IAAhB0rH,EAA4BA,EAAc3B,GAAS,EACxDgC,EAAUt7F,EAAOy4F,OAAO/nH,GAAKsvB,EAAOy4F,OAAO/nH,GAAG4qH,QAAU,KACxD,EAAG,CACC,GAAIA,IAAaE,EAAKjvH,EAAI+uH,EAAQ/uH,GAAKivH,EAAKpjH,OAASkjH,EAAQ/uH,GACxDivH,EAAKjvH,EAAI+uH,EAAQljH,QAAUkjH,EAAQljH,OAASojH,EAAKpjH,QAClDojH,EAAKjvH,GAAK+uH,EAAQ/uH,GAAKivH,EAAKpjH,QAAUkjH,EAAQljH,QAAUojH,EAAKjvH,EAAI+uH,EAAQ/uH,GAAKivH,EAAKpjH,OAASkjH,EAAQljH,QACpGwmH,EAAmBxyH,KAAKsE,QAEvB,GAAI4qH,GAAWA,EAAQ/uH,EAAIivH,EAAKpjH,OACjC,MAEJ1H,IACA4qH,EAAUt7F,EAAOy4F,OAAO/nH,GAAKsvB,EAAOy4F,OAAO/nH,GAAG4qH,QAAU,WACnD5qH,GAAKsvB,EAAOy4F,OAAO1sH,QAC5B,OAAO6yH,GAEX3G,EAAiBrhF,UAAU+kF,UAAY,SAAU37F,EAAQlpB,EAAQwiH,GAC7D,IAAIkC,EACJA,EAAO1kH,EACP,IAAIpG,EACJA,EAAI,EACJ,IAAI4qH,EAEJ,IADAA,EAAUt7F,EAAOy4F,OAAO/nH,GAAKsvB,EAAOy4F,OAAO/nH,GAAG4qH,QAAU,KACjD5qH,EAAIsvB,EAAOy4F,OAAO1sH,QAAQ,CAC7B,GAAIuvH,GAAWE,EAAKpjH,OAASkjH,EAAQ/uH,EACjC,OAAOmE,EAGPA,IAEJ4qH,EAAUt7F,EAAOy4F,OAAO/nH,GAAKsvB,EAAOy4F,OAAO/nH,GAAG4qH,QAAU,KAE5D,OAAO5qH,GAEXunH,EAAiBrhF,UAAUioF,cAAgB,SAAU7+F,EAAQnqB,GAEzD,OAAOmqB,EAAO9P,UAAU8P,EAAO9P,UAAUra,EAAKo4C,QAAQ,IAAIl3C,WAE9DkhH,EAAiBrhF,UAAU2rD,YAAc,SAAUviE,EAAQnqB,EAAMipH,GAC7D,IAAIC,EACJA,EAAa/+F,EAAO24F,WAAW9iH,EAAKV,IACpC,IAAIxJ,EACJ,GAAIkK,EAAKm4C,UAAYn4C,EAAKm4C,SAASjiD,SAAW8J,EAAK45C,aAAen6C,KAAKy6E,aACnE,IAAKpkF,EAAI,EAAGA,EAAIkK,EAAKm4C,SAASjiD,OAAQJ,IAAK,CACvC,IAAI05E,OAAO,GACXA,EAAOrlD,EAAO9P,UAAU8P,EAAO9P,UAAUra,EAAKm4C,SAASriD,IAAI+7C,WACjD8zC,qBAC6C,IAA/CujC,EAAWhG,KAAK7xG,SAASsM,QAAQ6xD,EAAKlwE,KACtC4pH,EAAWhG,KAAK7xG,SAAS9a,KAAKi5E,EAAKlwE,IAEnCkwE,EAAKr3B,UAAYq3B,EAAKr3B,SAASjiD,QAAUs5E,EAAK51B,aAC9CsvE,EAAWhG,KAAKC,YAAa,GAEjC1jH,KAAKitF,YAAYviE,EAAQqlD,EAAMy5C,EAAQ,IAKnDC,EAAWhG,KAAKO,MAAQwF,EAEpBC,EAAWhG,KAAKC,aAChB+F,EAAWhG,KAAK3yG,YAAc,aAC9B24G,EAAWhG,KAAK5nH,KAAO,UAIvB6uB,EAAOD,eAAiC,wBAAhBC,EAAO7uB,OAC/B6uB,EAAOD,cAAclqB,EAAMkpH,EAAWhG,MACT,aAAzBgG,EAAWhG,KAAK5nH,MAAuB4tH,EAAWhG,KAAKC,aACvD+F,EAAWhG,KAAK5nH,KAAO,SACvB4tH,EAAWhG,KAAK3yG,YAAc,eAGlC4Z,EAAOs5F,OAAkC,cAAzByF,EAAWhG,KAAK5nH,MAAwB2tH,GAAS9+F,EAAOs5F,QACxEyF,EAAWhG,KAAKC,YAAa,IAGrCf,EAAiBrhF,UAAUuiF,aAAe,SAAUn5F,EAAQlpB,EAAQ6tF,GAChE,IAAI9uF,EACA+5E,EAKAovC,EAJAnxH,EAAQ,EACRD,EAAS,EACTqxH,EAAM,EACNC,EAAiB,IAAIttG,GAAK,EAAG,EAAG+yE,EAASr4F,EAAGq4F,EAASp4F,GAEzDyyH,EAAeh/F,EAAOlpB,OAASkpB,EAAOlpB,OAASooH,EAC/C,IAAI94G,EAAc4Z,EAAO5Z,YAEzB,GAAI4Z,EAAO4vD,UAAW,CAElB/hF,GADA+hF,EAAY5vD,EAAO9P,UAAU8P,EAAO4vD,YAClBvsE,WAAWxV,MAC7BD,EAASgiF,EAAUvsE,WAAWzV,OAC9BoyB,EAAOq4F,QAAUzoC,EAAUv+E,QAC3B2uB,EAAOs4F,QAAU1oC,EAAUt+E,QAC3B,IAAIw1B,EAAQ8oD,EAAU9oD,MAKtB,IAJA9G,EAAOq4F,SAAkC,gBAAvBr4F,EAAO5Z,YAAgCvY,EAAQi5B,EAAMx6B,GAAKuB,EAAQi5B,EAAMx6B,EAC1F0zB,EAAOs4F,SAAkC,gBAAvBt4F,EAAO5Z,YAAgCxY,EAASk5B,EAAMv6B,GAAKqB,EAASk5B,EAAMv6B,EAC5FsJ,EAAO+5E,EACPqvC,EAAM,EACCppH,EAAKo4C,QAAQliD,QAChB8J,EAAOP,KAAKupH,cAAc7+F,EAAQnqB,GAClCopH,GAAOj/F,EAAO24F,WAAW9iH,EAAKV,IAAIwlH,oBAAsB,GAEhB,IAAxC36F,EAAO5Z,YAAYoN,QAAQ,SAC3BwM,EAAOq4F,SAAWr4F,EAAO24F,WAAW/oC,EAAUz6E,IAAI5I,EAClDyzB,EAAOs4F,SAAWt4F,EAAO24F,WAAW/oC,EAAUz6E,IAAI7I,EAAI2yH,IAGtDj/F,EAAOq4F,SAAWr4F,EAAO24F,WAAW/oC,EAAUz6E,IAAI7I,EAAI2yH,EACtDj/F,EAAOs4F,SAAWt4F,EAAO24F,WAAW/oC,EAAUz6E,IAAI5I,QAItD,GAAoB,gBAAhB6Z,GAAiD,gBAAhBA,EAA+B,CAChE,OAAQ4Z,EAAO5R,qBACX,IAAK,OACD4R,EAAOq4F,QAAW2G,EAAa1yH,EAAIwK,EAAOxK,EAAK0zB,EAAO/nB,OAAOC,KAC7D,MACJ,IAAK,QACD8nB,EAAOq4F,QAAU2G,EAAa1yH,EAAI0yH,EAAanxH,MAAQmyB,EAAO/nB,OAAOE,MAAQrB,EAAOqB,MACpF,MACJ,IAAK,OACL,IAAK,SACD6nB,EAAOq4F,QAAU2G,EAAa1yH,EAAI0yH,EAAanxH,MAAQ,GAAKiJ,EAAOxK,EAAIwK,EAAOqB,OAAS,EAG/F,OAAQ6nB,EAAO7R,mBACX,IAAK,OACL,IAAK,MACD,IAAI9L,EACJA,EAAQ28G,EAAazyH,EAAIyzB,EAAO/nB,OAAOI,IACvC2nB,EAAOs4F,QAA0B,gBAAhBlyG,EAAgC/D,EAAQvL,EAAOsB,OAASiK,EACzE,MACJ,IAAK,SACD,IAAIjK,OAAS,EACbA,EAAS4mH,EAAazyH,EAAIyyH,EAAapxH,OAASoyB,EAAO/nB,OAAOG,OAC9D4nB,EAAOs4F,QAA0B,gBAAhBlyG,EAAgChO,EAAStB,EAAOsB,OAASA,EAC1E,MACJ,IAAK,SACD,IAAI7B,OAAS,EACbA,EAASyoH,EAAazyH,EAAIyyH,EAAapxH,OAAS,EAChDoyB,EAAOs4F,QAAiC,gBAAvBt4F,EAAO5Z,YACpB7P,GAAUO,EAAOvK,EAAIuK,EAAOsB,QAAU,EAAI7B,GAAUO,EAAOvK,EAAIuK,EAAOsB,QAAU,OAI3F,CACD,OAAQ4nB,EAAO5R,qBACX,IAAK,OACL,IAAK,OACD,IAAIlW,OAAO,EACXA,EAAO8mH,EAAa1yH,EAAI0zB,EAAO/nB,OAAOC,KACtC8nB,EAAOq4F,QAA0B,gBAAhBjyG,EAAgClO,EAAOpB,EAAOsB,OAASF,EACxE,MACJ,IAAK,QACD,IAAIC,OAAQ,EACZA,EAAQ6mH,EAAa1yH,EAAI0yH,EAAanxH,MAAQmyB,EAAO/nB,OAAOE,MAC5D6nB,EAAOq4F,QAA0B,gBAAhBjyG,EAAgCjO,EAAQrB,EAAOsB,OAASD,EACzE,MACJ,IAAK,SACG5B,OAAS,EACbA,EAASyoH,EAAanxH,MAAQ,EAAImxH,EAAa1yH,EAC/C0zB,EAAOq4F,QAAiC,gBAAvBr4F,EAAO5Z,YACpB7P,GAAUO,EAAOvK,EAAIuK,EAAOsB,QAAU,EAAI7B,GAAUO,EAAOvK,EAAIuK,EAAOsB,QAAU,EAG5F,OAAQ4nB,EAAO7R,mBACX,IAAK,MACD6R,EAAOs4F,QAAU0G,EAAazyH,EAAIyzB,EAAO/nB,OAAOI,IAAMvB,EAAOxK,EAC7D,MACJ,IAAK,OACL,IAAK,SACD0zB,EAAOs4F,QAAU0G,EAAazyH,EAAIyyH,EAAapxH,OAAS,GAAKkJ,EAAOqB,MAAQrB,EAAOxK,GAAK,EACxF,MACJ,IAAK,SACD0zB,EAAOs4F,QAAU0G,EAAazyH,EAAIyyH,EAAapxH,OAASoyB,EAAO/nB,OAAOG,OAAStB,EAAOqB,SAM1G8/G,EAAiBrhF,UAAUyiF,iBAAmB,SAAUr5F,EAAQnqB,EAAMyjH,GAClE,IAAIttH,EACAo/B,EASA9yB,EACAi8B,EAMJ,GALAnJ,EAIOpL,EAAO24F,WAAW9iH,EAAKV,IAE1BU,EAAKm4C,SAASjiD,OACd,IAAKC,EAAI,EAAGA,EAAI6J,EAAKm4C,SAASjiD,OAAQC,KAClCuoC,EAAOvU,EAAO9P,UAAUra,EAAKm4C,SAAShiD,KACjCiC,UACLqK,EAAS0nB,EAAO9P,UAAUqkB,EAAKmT,UAC3BnT,EAAK/Q,UACL+Q,EAAK4qF,SAAU,EACXn/F,EAAOo/F,qBACIp/F,EAAOo/F,qBAAqB7qF,GAGnCnJ,IAAuD,IAA/CA,EAAK2tF,KAAK7xG,SAASsM,QAAQ+gB,EAAKmT,YACxCnT,EAAK9lC,YACe,wBAAhBuxB,EAAO7uB,MAAgD,eAAdojC,EAAKpjC,MAC9CmE,KAAKy8C,eAAe/xB,EAAQuU,EAAM1+B,EAAMyC,EAAQtM,IAIxDsM,IAAWA,EAAOm3C,YAAcn6C,KAAKokH,SAAS15F,EAAQ1nB,KACtDhD,KAAK+jH,iBAAiBr5F,EAAQ1nB,EAAQghH,EAAQ,IAK9D,GAAIluF,GAAQA,EAAK2tF,KAAKa,WAAW7tH,OAE7B,IAAKC,EAAI,EAAGA,EAAIo/B,EAAK2tF,KAAKa,WAAW7tH,OAAQC,IACzCsM,EAAS0nB,EAAO9P,UAAUkb,EAAK2tF,KAAKa,WAAW5tH,IAC/CuoC,EAAOvU,EAAO9P,UAAU5X,EAAO21C,QAAQ,IACvC34C,KAAK+pH,WAAWr/F,EAAQnqB,EAAMyC,EAAQi8B,IAClCj8B,EAAOm3C,YAAcn6C,KAAKokH,SAAS15F,EAAQ1nB,KAC3ChD,KAAK+jH,iBAAiBr5F,EAAQ1nB,EAAQghH,EAAQ,IAK9DrB,EAAiBrhF,UAAUmb,eAAiB,SAAU/xB,EAAQuU,EAAM1+B,EAAMyC,EAAQtM,GAC9E,IAAIo/B,EAAOpL,EAAO24F,WAAW9iH,EAAKV,IAE9Bi2B,EAAK2tF,KAAKa,WAAW7tH,OAErBuJ,KAAKgqH,uCAAuCt/F,EAAQnqB,EAAMyC,EAAQi8B,GAIpC,eAA1BnJ,EAAK2tF,KAAK3yG,aAAmD,aAAnBglB,EAAK2tF,KAAK5nH,KACpDmE,KAAKiqH,8BAA8Bv/F,EAAQuU,EAAM1+B,EAAMyC,EAAQtM,GAGjC,eAA1Bo/B,EAAK2tF,KAAK3yG,YACV9Q,KAAKgqH,uCAAuCt/F,EAAQnqB,EAAMyC,EAAQi8B,GAG9DnJ,EAAK2tF,KAAK/zG,OAAS,EACnB1P,KAAKkqH,WAAWx/F,EAAQnqB,EAAMyC,EAAQi8B,GAGtCj/B,KAAK+pH,WAAWr/F,EAAQnqB,EAAMyC,EAAQi8B,IAM1D0jF,EAAiBrhF,UAAU2oF,8BAAgC,SAAUv/F,EAAQ9e,EAAWrL,EAAMyC,EAAQtM,GAClG,IAEIyzH,EAFAr0F,EAAOpL,EAAO24F,WAAW9iH,EAAKV,IAGlC,GAAkC,IAA9Bi2B,EAAK2tF,KAAK7xG,SAASnb,QAAgBC,EAAI,EAAG,CAC1CyzH,EAAWr0F,EAAK2tF,KAAK7xG,SAAS,GAC1BhD,MAAM8b,EAAO24F,WAAW8G,GAAUnF,aAClCt6F,EAAO24F,WAAW8G,GAAUnF,UAAYt6F,EAAO9P,UAAUuvG,GAAUp8G,WAAWxV,OAElF,IAAI2nF,EAAe,IAANxpF,EAAU,GAAK,GACgB,IAAxCg0B,EAAO5Z,YAAYoN,QAAQ,QAClBwM,EAAO9P,UAAUuvG,GAAUnuH,QAAU0uB,EAAO24F,WAAW8G,GAAUnF,UAAY,EACjFt6F,EAAO64F,gBAAkBrjC,EAAS,EAG9Bx1D,EAAO9P,UAAUuvG,GAAUpuH,QAChC2uB,EAAO24F,WAAW8G,GAAUnF,UAAY,EAAKt6F,EAAO44F,kBAAoBpjC,EAAU,EAE1FlgF,KAAKoqH,2BAA2B1/F,EAAQnqB,EAAMyC,EAAQ4I,QAGlDkqB,EAAK2tF,KAAK7xG,SAASnb,OAAS,EACxBC,EAAI,EACJsJ,KAAKoqH,2BAA2B1/F,EAAQnqB,EAAMyC,EAAQ4I,GAGtD5L,KAAKgqH,uCAAuCt/F,EAAQnqB,EAAMyC,EAAQ4I,GAGnC,IAA9BkqB,EAAK2tF,KAAK7xG,SAASnb,OACpBC,EAAI,EACJsJ,KAAKoqH,2BAA2B1/F,EAAQnqB,EAAMyC,EAAQ4I,GAGtD5L,KAAKgqH,uCAAuCt/F,EAAQnqB,EAAMyC,EAAQ4I,GAItE5L,KAAKoqH,2BAA2B1/F,EAAQnqB,EAAMyC,EAAQ4I,IAIlE+2G,EAAiBrhF,UAAUyoF,WAAa,SAAUr/F,EAAQnqB,EAAMyC,EAAQ4I,GACpE,IAAIjT,KACAqhF,EAAah6E,KAAKooB,UAAU7nB,GAC5Bo7G,EAAe37G,KAAKooB,UAAUplB,GAClC,IAA2C,IAAvC0nB,EAAO5Z,YAAYoN,QAAQ,OAAe,CAC1C,IAAImsG,EAAsD,IAAtC3/F,EAAO5Z,YAAYoN,QAAQ,OAAe87D,EAAWpyE,aACrEoyE,EAAWv2E,UACX8H,EAAWhL,EAAKxE,QAAUiH,EAAOjH,QAAU4/G,EAAap0G,YAAco0G,EAAazzG,WACvFvP,EAAO7B,KAAKuzH,GAAiBrzH,EAAGgjF,EAAWpyE,aAAa5Q,EAAGC,EAAGsU,EAAStU,GAAKsU,OAE3E,CACG8+G,EAAuD,IAAvC3/F,EAAO5Z,YAAYoN,QAAQ,QAAgB87D,EAAWzyE,YACtEyyE,EAAW9xE,WACXqD,EAAWhL,EAAKvE,QAAUgH,EAAOhH,QAAU2/G,EAAa/zG,aAAe+zG,EAAal4G,UACxF9K,EAAO7B,KAAKuzH,GAAiBrzH,EAAG2kH,EAAa/zG,aAAa5Q,EAAGC,EAAG+iF,EAAWzyE,YAAYtQ,GAAKsU,GAEhGvL,KAAKsqH,sBAAsB3xH,EAAQiT,IAEvC+2G,EAAiBrhF,UAAU4oF,WAAa,SAAUx/F,EAAQnqB,EAAMyC,EAAQ4I,GACpE,IAKIy+G,EACA9+G,EACA+3G,EACAC,EARA5qH,KAEAqhF,EAAah6E,KAAKooB,UAAU7nB,GAC5Bo7G,EAAe37G,KAAKooB,UAAUplB,GACvB0nB,EAAO24F,WAAW9iH,EAAKV,KAKS,IAAvC6qB,EAAO5Z,YAAYoN,QAAQ,QAC3BmsG,EAAiB9pH,EAAKvE,QAAUgH,EAAOhH,QAAWg+E,EAAWpyE,aAAeoyE,EAAWv2E,UACvF8/G,EAAkB74F,EAAO64F,gBAAkB,GAAMhjH,EAAKvE,QAAUgH,EAAOhH,QAAW,GAAK,GACvFsnH,EAAoB54F,EAAO44F,kBAAoB,GAAM/iH,EAAKxE,QAAUiH,EAAOjH,QAAW,GAAK,GAC3FwP,EAAYhL,EAAKxE,QAAUiH,EAAOjH,QAAW4/G,EAAap0G,YAAco0G,EAAazzG,WACrFvP,EAAO7B,KAAKuzH,GAAiBrzH,EAAGqzH,EAAcrzH,EAAGC,EAAGozH,EAAcpzH,EAAIssH,IAAqBvsH,EAAGuU,EAASvU,EAAIssH,EAAmBrsH,EAAGozH,EAAcpzH,EAAIssH,IAAqBvsH,EAAGuU,EAASvU,EAAIssH,EAAmBrsH,EAAGsU,EAAStU,GAAKsU,KAG5N8+G,EAAiB9pH,EAAKxE,QAAUiH,EAAOjH,QAAWi+E,EAAW9xE,WAAa8xE,EAAWzyE,YACrFgE,EAAWhL,EAAKvE,QAAUgH,EAAOhH,QAAU2/G,EAAa/zG,aAAe+zG,EAAal4G,UACpF6/G,EAAoB54F,EAAO44F,kBAAoB,GAAM/iH,EAAKxE,QAAUiH,EAAOjH,QAAW,GAAK,GAC3FwnH,EAAkB74F,EAAO64F,gBAAkB,GAAMhjH,EAAKvE,QAAUgH,EAAOhH,QAAW,GAAK,GACvFrD,EAAO7B,KAAKuzH,GAAiBrzH,EAAGqzH,EAAcrzH,EAAIssH,EAAmBrsH,EAAGozH,EAAcpzH,IAAOD,EAAGqzH,EAAcrzH,EAAIssH,EAAmBrsH,EAAGozH,EAAcpzH,EAAIssH,IAAqBvsH,EAAGuU,EAASvU,EAAGC,EAAGozH,EAAcpzH,EAAIssH,GAAmBh4G,IAE1OvL,KAAKsqH,sBAAsB3xH,EAAQiT,IAEvC+2G,EAAiBrhF,UAAUgpF,sBAAwB,SAAU3xH,EAAQiT,GAGjE,IAAK,IADDtR,EADAnB,KAEKzC,EAAI,EAAGA,EAAIiC,EAAOlC,OAAS,EAAGC,KACnC4D,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAU9J,EAAOjC,GAAIiC,EAAOjC,EAAI,IAC1D4D,EAAQ7D,OAAS0O,GAAM4G,eAAepT,EAAOjC,GAAIiC,EAAOjC,EAAI,IAC5DyC,EAASrC,KAAKwD,GAElBsR,EAAUzS,SAAWA,GAEzBwpH,EAAiBrhF,UAAU8oF,2BAA6B,SAAU1/F,EAAQnqB,EAAMyC,EAAQ4I,GACpF,IAEIjQ,EACArB,EAFAnB,KAGAwiH,EAAe37G,KAAKooB,UAAUplB,GAC9Bg3E,EAAah6E,KAAKooB,UAAU7nB,GAChC,OAAQmqB,EAAO5Z,aACX,IAAK,cACDnV,GAAU3E,EAAGgjF,EAAWpyE,aAAa5Q,EAAGC,EAAI+iF,EAAWpyE,aAAa3Q,EAAIyzB,EAAO64F,gBAAkB,IACjGjpH,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAUu3E,EAAWpyE,aAAcjM,GAC7DrB,EAAQ7D,OAAS0O,GAAM4G,eAAeiuE,EAAWpyE,aAAcjM,GAC/DxC,EAASrC,KAAKwD,GACd,MACJ,IAAK,cACDqB,GAAU3E,EAAGgjF,EAAWpyE,aAAa5Q,EAAGC,EAAI+iF,EAAWv2E,UAAUxM,EAAIyzB,EAAO64F,gBAAkB,IAC9FjpH,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAUu3E,EAAWv2E,UAAW9H,GAC1DrB,EAAQ7D,OAAS0O,GAAM4G,eAAeiuE,EAAWv2E,UAAW9H,GAC5DxC,EAASrC,KAAKwD,GACd,MACJ,IAAK,cAMD,GALAqB,GAAU3E,EAAIgjF,EAAWzyE,YAAYvQ,EAAI0zB,EAAO64F,gBAAkB,EAAItsH,EAAG+iF,EAAWzyE,YAAYtQ,GAChGqD,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,GAC/EvB,EAAQmI,UAAY0C,GAAM1C,UAAUu3E,EAAWzyE,YAAa5L,GAC5DrB,EAAQ7D,OAAS0O,GAAM4G,eAAeiuE,EAAWzyE,YAAa5L,GAC9DxC,EAASrC,KAAKwD,GACVqhH,EAAa16G,OAAOhK,IAAM+iF,EAAW/4E,OAAOhK,EAAG,CAC/C,IAAI8Z,GAAW/Z,EAAIgjF,EAAWzyE,YAAYvQ,EAAI0zB,EAAO64F,gBAAkB,EAAItsH,EAAG0kH,EAAazzG,WAAWjR,IACtGqD,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAU9G,EAAOoV,GAC3CzW,EAAQ7D,OAAS0O,GAAM4G,eAAepQ,EAAOoV,GAC7C5X,EAASrC,KAAKwD,GAElB,MACJ,IAAK,cAMD,GALAqB,GAAU3E,EAAIgjF,EAAW9xE,WAAWlR,EAAI0zB,EAAO64F,gBAAkB,EAAItsH,EAAG+iF,EAAWzyE,YAAYtQ,GAC/FqD,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,GAC/EvB,EAAQmI,UAAY0C,GAAM1C,UAAUu3E,EAAW9xE,WAAYvM,GAC3DrB,EAAQ7D,OAAS0O,GAAM4G,eAAeiuE,EAAW9xE,WAAYvM,GAC7DxC,EAASrC,KAAKwD,GACVqhH,EAAa16G,OAAOhK,IAAM+iF,EAAW/4E,OAAOhK,EAAG,CAC/C,IAAIszH,GAAYvzH,EAAIgjF,EAAW9xE,WAAWlR,EAAI0zB,EAAO64F,gBAAkB,EAAItsH,EAAG0kH,EAAazzG,WAAWjR,IACtGqD,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAU8nH,EAASA,GAC7CjwH,EAAQ7D,OAAS0O,GAAM4G,eAAew+G,EAASA,GAC/CpxH,EAASrC,KAAKwD,IAI1BsR,EAAUzS,SAAWA,GAEzBwpH,EAAiBrhF,UAAU0oF,uCAAyC,SAAUt/F,EAAQnqB,EAAMyC,EAAQ4I,GAChG,IACIpT,EACA8B,EACAnB,KACA6gF,EAAah6E,KAAKooB,UAAU7nB,GAC5Bo7G,EAAe37G,KAAKooB,UAAUplB,GAClC,OAAQ0nB,EAAO5Z,aACX,IAAK,cACDtY,GAAWxB,EAAGgjF,EAAWpyE,aAAa5Q,EAAGC,EAAI0kH,EAAal4G,UAAUxM,EAAIyzB,EAAO64F,gBAAkB,IACjGjpH,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAUu3E,EAAWpyE,aAAcpP,GAC7D8B,EAAQ7D,OAAS0O,GAAM4G,eAAeiuE,EAAWpyE,aAAcpP,GAC/DW,EAASrC,KAAKwD,GACd,MACJ,IAAK,cACD9B,GAAWxB,EAAGgjF,EAAWv2E,UAAUzM,EAAGC,EAAI0kH,EAAa/zG,aAAa3Q,EAAIyzB,EAAO64F,gBAAkB,IACjGjpH,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAUu3E,EAAWv2E,UAAWjL,GAC1D8B,EAAQ7D,OAAS0O,GAAM4G,eAAeiuE,EAAWv2E,UAAWjL,GAC5DW,EAASrC,KAAKwD,GACd,MACJ,IAAK,cAMD,GALA9B,GAAWxB,EAAI2kH,EAAazzG,WAAWlR,EAAI0zB,EAAO64F,gBAAkB,EAAItsH,EAAG+iF,EAAWzyE,YAAYtQ,GAClGqD,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,GAC/EvB,EAAQmI,UAAY0C,GAAM1C,UAAUu3E,EAAWzyE,YAAa/O,GAC5D8B,EAAQ7D,OAAS0O,GAAM4G,eAAeiuE,EAAWzyE,YAAa/O,GAC9DW,EAASrC,KAAKwD,GACVqhH,EAAa16G,OAAOhK,IAAM+iF,EAAW/4E,OAAOhK,EAAG,CAC/C,IAAI8Z,GAAW/Z,EAAI2kH,EAAazzG,WAAWlR,EAAI0zB,EAAO64F,gBAAkB,EAAItsH,EAAG0kH,EAAazzG,WAAWjR,IACvGqD,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAUjK,EAAQuY,GAC5CzW,EAAQ7D,OAAS0O,GAAM4G,eAAevT,EAAQuY,GAC9C5X,EAASrC,KAAKwD,GAElB,MACJ,IAAK,cAMD,GALA9B,GAAWxB,EAAI2kH,EAAap0G,YAAYvQ,EAAI0zB,EAAO64F,gBAAkB,EAAItsH,EAAG+iF,EAAWzyE,YAAYtQ,GACnGqD,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,GAC/EvB,EAAQmI,UAAY0C,GAAM1C,UAAUu3E,EAAW9xE,WAAY1P,GAC3D8B,EAAQ7D,OAAS0O,GAAM4G,eAAeiuE,EAAW9xE,WAAY1P,GAC7DW,EAASrC,KAAKwD,GACVqhH,EAAa16G,OAAOhK,IAAM+iF,EAAW/4E,OAAOhK,EAAG,CAC/C,IAAI0E,GAAU3E,EAAI2kH,EAAap0G,YAAYvQ,EAAI0zB,EAAO64F,gBAAkB,EAAItsH,EAAG0kH,EAAazzG,WAAWjR,IACvGqD,EAAU,IAAIiM,GAAkBqF,EAAW,YAAc/P,KAAM,eAAgB,IACvE4G,UAAY0C,GAAM1C,UAAUjK,EAAQmD,GAC5CrB,EAAQ7D,OAAS0O,GAAM4G,eAAevT,EAAQmD,GAC9CxC,EAASrC,KAAKwD,IAK1B,OADAsR,EAAUzS,SAAWA,MAGzBwpH,EAAiBrhF,UAAUwiF,YAAc,SAAUp5F,EAAQnqB,EAAMopH,EAAKv+G,EAAQo/G,EAAI7zF,GAC9E,IAAIjgC,EACAkX,EACArV,EACAD,EACAyD,EACAC,EAGJ,GAFAzD,EAAQgI,EAAKwN,WAAWxV,MACxBD,EAASiI,EAAKwN,WAAWzV,QACpBiI,EAAK2lF,kBAAmB,CACzBnqF,EAAU2uB,EAAOq4F,QACjB/mH,EAAU0uB,EAAOs4F,QAGU,gBAAvBt4F,EAAO5Z,aACP/U,GAAW2uB,EAAO24F,WAAW9iH,EAAKV,IAAI5I,EAAIsB,EAAQ,EAClDyD,GAAW0uB,EAAO24F,WAAW9iH,EAAKV,IAAI7I,EAAI2yH,EAAMrxH,EAAS,GAE7B,gBAAvBoyB,EAAO5Z,aACZ/U,GAAW2uB,EAAO24F,WAAW9iH,EAAKV,IAAI5I,EAAIsB,EAAQ,EAClDyD,GAAW0uB,EAAO24F,WAAW9iH,EAAKV,IAAI7I,EAAI2yH,EAAMrxH,EAAS,GAE7B,gBAAvBoyB,EAAO5Z,aACZ/U,GAAW2uB,EAAO24F,WAAW9iH,EAAKV,IAAI7I,EAAI2yH,EAAMpxH,EAAQ,EACxDyD,GAAW0uB,EAAO24F,WAAW9iH,EAAKV,IAAI5I,EAAIqB,EAAS,IAGnDyD,GAAW2uB,EAAO24F,WAAW9iH,EAAKV,IAAI7I,EAAI2yH,EAAMpxH,EAAQ,EACxDyD,GAAW0uB,EAAO24F,WAAW9iH,EAAKV,IAAI5I,EAAIqB,EAAS,GAEnDoyB,EAAO24F,aAGPtnH,GAFAyuH,EAAKA,GAAU,EAGfxuH,GAFA26B,EAAKA,GAAU,EAGV32B,KAAKy6E,cACNl6E,EAAKxE,QAAUA,EACfwE,EAAKvE,QAAUA,IAGvB,IAAImsB,GAAYtoB,GAAIU,EAAKV,GAAI2iH,YAAazmH,EAAUwE,EAAKxE,QAAS0mH,YAAazmH,EAAUuE,EAAKvE,SAC9F0uB,EAAOvC,QAAQrxB,KAAKqxB,GACpB,IAAI05C,OAAO,EAEX,GADAA,KACI7hE,KAAKokH,SAAS15F,EAAQnqB,GACtB,IAAK7J,EAAI,EAAGA,EAAIg0B,EAAO24F,WAAW9iH,EAAKV,IAAI4jH,KAAK7xG,SAASnb,OAAQC,IAC7DkX,EAAQ8c,EAAO9P,UAAU8P,EAAO24F,WAAW9iH,EAAKV,IAAI4jH,KAAK7xG,SAASlb,IAClEsJ,KAAK8jH,YAAYp5F,EAAQ9c,EAAO+7G,GAAOj/F,EAAO24F,WAAW9iH,EAAKV,IAAIwlH,oBAAsB,GAAIj6G,EAAQo/G,EAAI7zF,GACxGkrC,EAAK/qE,KAAK8W,GAGlB,GAAI8c,EAAO24F,WAAW9iH,EAAKV,IAAI4jH,KAAKa,WAAW7tH,OAC3C,IAAKC,EAAI,EAAGA,EAAIg0B,EAAO24F,WAAW9iH,EAAKV,IAAI4jH,KAAKa,WAAW7tH,OAAQC,IAC/DkX,EAAQ8c,EAAO9P,UAAU8P,EAAO24F,WAAW9iH,EAAKV,IAAI4jH,KAAKa,WAAW5tH,IACpEsJ,KAAK8jH,YAAYp5F,EAAQ9c,EAAO+7G,GAAOj/F,EAAO24F,WAAW9iH,EAAKV,IAAIwlH,oBAAsB,GAAI,KAAMmF,EAAI7zF,KAK/GgsF,KC7mDP8H,GAAyB,WAKzB,SAASA,IAKLzqH,KAAKy6E,aAAc,EAwHvB,OAhHAgwC,EAAQnpF,UAAUsa,QAAU,aAQ5B6uE,EAAQnpF,UAAUqa,cAAgB,WAI9B,MAAO,gBAGX8uE,EAAQnpF,UAAUguD,aAAe,SAAUt2E,EAAO4B,EAAWgoG,EAAYvzB,EAAUyzB,EAAUrzB,GACzF,IAAIi7B,EAEJ,GADAA,EAAS1qH,KAAK2qH,UAAU3xG,EAAO4pG,EAAYE,EAAUrzB,EAAM70E,GAEvDgoG,EAAWtoC,UAAYowC,OAGvB,IAAK,IAAI7tH,EAAK,EAAG+5E,EAAU59D,EAAOnc,EAAK+5E,EAAQngF,OAAQoG,IAAM,CAEzD,MADI0D,EAAOq2E,EAAQ/5E,IACTqpF,mBACD3lF,EAAKo4C,SAAYp4C,EAAKo4C,QAAQliD,QAAQ,CACvCmsH,EAAWtoC,UAAY/5E,EAAKV,GAC5B,OAKhB,IAAI0vF,EAAW30E,EAAUgoG,EAAWtoC,WAChCswC,EAAiB5qH,KAAK6qH,oBAAoBt7B,EAAUqzB,EAAYhoG,GAChEkwG,KACAC,KACAC,EAAmBpnG,GAAYg/F,EAAWj4F,WAC9CqgG,EAAmBA,GAAoBpnG,GAAY5jB,KAAK2qB,WACxD,IAAK,IAAIjO,EAAK,EAAGuuG,EAAmBL,EAAgBluG,EAAKuuG,EAAiBx0H,OAAQimB,IAAM,CACpF,IAAInc,EAEO,SADCyqH,EADRzqH,EAAO0qH,EAAiBvuG,GACOkuG,GACdE,EAAUh0H,KAAKyJ,GAAQwqH,EAAWj0H,KAAKyJ,GAEhE,IAAIqpH,EAAiB,IAAIttG,GAAK,EAAG,EAAG+yE,EAASr4F,EAAGq4F,EAASp4F,GACzD2jB,EAAUgoG,EAAWtoC,WAAWv+E,QAAU6tH,EAAe5yH,EAAI4yH,EAAerxH,MAAQ,EACpFqiB,EAAUgoG,EAAWtoC,WAAWt+E,QAAU4tH,EAAe3yH,EAAI2yH,EAAetxH,OAAS,EACjFwyH,EAAUr0H,QACVuJ,KAAKkrH,oBAAoBlyG,EAAO+xG,EAAYnwG,EAAWgoG,EAAYvzB,EAAUyzB,EAAU,QAEvFiI,EAAWt0H,QACXuJ,KAAKkrH,oBAAoBlyG,EAAO8xG,EAAWlwG,EAAWgoG,EAAYvzB,EAAUyzB,EAAU,UAG9F2H,EAAQnpF,UAAUqpF,UAAY,SAAU3xG,EAAO4pG,EAAYE,EAAUrzB,EAAM70E,GACvE,IAAK,IAAI/d,EAAK,EAAGsuH,EAAUnyG,EAAOnc,EAAKsuH,EAAQ10H,OAAQoG,IAAM,CACzD,IAAI0D,EAAO4qH,EAAQtuH,GACnB,IAAK0D,EAAK2lF,kBAAmB,CACzB,GAAI3lF,EAAKnK,OAASmK,EAAKnK,KAAK0sH,GAAUxkH,aAAemxF,GAAQlvF,EAAKnK,KAAK0sH,GAAUxkH,aACzEskH,EAAWnzB,MACf,OAAOlvF,EAAKV,GAEX,IAAKU,EAAKnK,MAAQmK,EAAKV,KAAO+iH,EAAWnzB,KAC1C,OAAOlvF,EAAKV,IAIxB,MAAO,IAEX4qH,EAAQnpF,UAAU4pF,oBAAsB,SAAUlyG,EAAOoyG,EAAcxwG,EAAWgoG,EAAYvzB,EAAUyzB,EAAUrxF,GAC9G,IAAI/G,GACJA,GACI7uB,KAAM,mBACNynH,kBAAmBV,EAAWW,gBAAiBA,gBAAiBX,EAAWU,kBAC3EzqG,kBAAmB+pG,EAAW/pG,kBAAmBC,oBAAqB8pG,EAAW9pG,oBACjFwhE,UAAWsoC,EAAWtoC,UAAW7vD,cAAe7G,GAAYg/F,EAAWn4F,eAAgB9nB,OAAQigH,EAAWjgH,OAC1G8sF,KAAMmzB,EAAWtoC,YAEdxpE,YAAwB,SAAT2gB,EAAmB,cAAgB,cACzDzxB,KAAKkmF,kBAAkBklC,EAAcxwG,GAAW,IAChC,IAAI+nG,IACVrzB,aAAat2E,EAAO4B,EAAW8P,EAAQ2kE,EAAUyzB,GAC3D9iH,KAAKkmF,kBAAkBklC,EAAcxwG,GAAW,IAEpD6vG,EAAQnpF,UAAU3W,UAAY,SAAUpwB,EAAK0oH,GASzC,OAPQA,EAAgB/kG,QAAQ3jB,GACxB,GAAM,EACH,OAGA,SAIfkwH,EAAQnpF,UAAU4kD,kBAAoB,SAAUmlC,EAAezwG,EAAW0wG,GACtE,IAAK,IAAIzuH,EAAK,EAAG0uH,EAAkBF,EAAexuH,EAAK0uH,EAAgB90H,OAAQoG,IAAM,CAEtE+d,EADE2wG,EAAgB1uH,GACDgD,IACvBqmF,kBAAoBolC,IAGjCb,EAAQnpF,UAAUupF,oBAAsB,SAAUtqH,EAAMmqB,EAAQ9P,GAC5D,IACIgwG,KACJ,GAAIrqH,GAAQA,EAAKm4C,SAASjiD,OACtB,IAAK,IAAIoG,EAAK,EAAG6f,EAAKnc,EAAKm4C,SAAU77C,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACvD,IAAI2uH,EAAU9uG,EAAG7f,GACjB+tH,EAAe9zH,KAAK8jB,EAAUA,EAAU4wG,GAASp5E,WAGzD,OAAOw4E,GAEJH,KCrIPgB,GAA4B,WAK5B,SAASA,KA4NT,OApNAA,EAAWnqF,UAAUsa,QAAU,aAQ/B6vE,EAAWnqF,UAAUqa,cAAgB,WAIjC,MAAO,cAGX8vE,EAAWnqF,UAAUguD,aAAe,SAAUt2E,EAAO4B,EAAWgoG,EAAYC,GACxE,IAAIn4F,GACA7uB,KAAM+mH,EAAW/mH,KACjB+e,UAAWA,EAAWmoG,QAAS,EAAGC,QAAS,EAC3CC,mBAAqBC,WAAY,KAAMC,UAAYC,SAAU,EAAGC,cAAgBqI,eAChF56G,YAAa8xG,EAAW9xG,YACxBwyG,kBAAmBV,EAAWU,kBAAmBC,gBAAiBX,EAAWW,gBAC7E1qG,kBAAmB+pG,EAAW/pG,kBAAmBC,oBAAqB8pG,EAAW9pG,oBACjFwhE,UAAWsoC,EAAWtoC,UAAW33E,OAAQigH,EAAWjgH,OACpDnB,OAAQohH,EAAWphH,OAAQ2mB,WAAasnE,KAAMmzB,EAAWnzB,MAE7DzvF,KAAK46E,SAASlwD,EAAQ1R,EAAO4B,EAAWioG,IAE5C4I,EAAWnqF,UAAUs5C,SAAW,SAAUlwD,EAAQ1R,EAAO4B,EAAWioG,GAEhE,IAAK,IADDtiH,EACK7J,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,KAC9B6J,EAAOyY,EAAMtiB,IACHwvF,oBACNx7D,EAAO24F,WAAW9iH,EAAKV,IAAMG,KAAKwjH,gBAAgB94F,EAAQnqB,GACrDA,EAAKo4C,SAAYp4C,EAAKo4C,QAAQliD,QAC/Bi0B,EAAOu4F,gBAAgBnsH,KAAKyJ,IAIpCmqB,EAAO+kE,MAAQ70E,EAAU8P,EAAO+kE,MAChC/kE,EAAOw4F,WAAatoG,EAAU8P,EAAO+kE,MAEhC/kE,EAAOu4F,gBAAgBxsH,SAC5Bi0B,EAAOw4F,WAAax4F,EAAOu4F,gBAAgB,GAC3Cv4F,EAAO+kE,KAAO/kE,EAAOw4F,WAAWrjH,IAEhC6qB,EAAOw4F,aACPljH,KAAKitF,YAAYviE,EAAQA,EAAOw4F,WAAY,EAAGtoG,GAC/C5a,KAAK2rH,qBAAqBjhG,EAAQA,EAAOw4F,WAAY,EAAG,GACxDljH,KAAK4rH,eAAelhG,GACpB1qB,KAAK6rH,wBAAwBnhG,GAC7B1qB,KAAK6jH,aAAan5F,EAAQm4F,GAC1B7iH,KAAK8jH,YAAYp5F,EAAQA,EAAOw4F,WAAYtoG,KAGpD6wG,EAAWnqF,UAAU2rD,YAAc,SAAUviE,EAAQnqB,EAAMipH,EAAO5uG,GAC9D,IAAIkxG,EAAWphG,EAAO24F,WAAW9iH,EAAKV,IACtC6qB,EAAOghG,YAAY50H,KAAKg1H,GACxBA,EAAS9H,MAAQwF,EACjBsC,EAASjC,SAAU,EACnBn/F,EAAO04F,SAAW3mH,KAAK+I,IAAIklB,EAAO04F,SAAUoG,GAC5C,IAAK,IAAInzH,EAAI,EAAGA,EAAIkK,EAAKm4C,SAASjiD,OAAQJ,IAAK,CAC3C,IAAI05E,EAAOn1D,EAAUA,EAAUra,EAAKm4C,SAASriD,IAAI+7C,UAC5C29B,EAAKmW,mBAAsBnW,EAAK85C,UACjCiC,EAASl6G,SAAS9a,KAAKi5E,GACvB/vE,KAAKitF,YAAYviE,EAAQqlD,EAAMy5C,EAAQ,EAAG5uG,MAItD6wG,EAAWnqF,UAAUqqF,qBAAuB,SAAUjhG,EAAQnqB,EAAMvJ,EAAGC,GACnE,IAAIo/D,EACAy1D,EAAWphG,EAAO24F,WAAW9iH,EAAKV,IACtC,GAAIisH,EAASl6G,SAASnb,OAAQ,CAC1BQ,GAAK,IACL,IAAK,IAAIP,EAAI,EAAGA,EAAIo1H,EAASl6G,SAASnb,OAAQC,IAE1CM,GADAq/D,EAAWr2D,KAAK2rH,qBAAqBjhG,EAAQohG,EAASl6G,SAASlb,GAAIM,EAAGC,IACzDD,EACbC,EAAIo/D,EAASp/D,EAEjB60H,EAASl6G,SAAWk6G,EAASl6G,SAASsW,KAAK,SAAU6jG,EAAMC,GACvD,OAAOthG,EAAO24F,WAAW0I,EAAKlsH,IAAI7I,EAAI0zB,EAAO24F,WAAW2I,EAAKnsH,IAAI7I,IAErE,IAAI8P,EAAM4jB,EAAO24F,WAAWyI,EAASl6G,SAAS,GAAG/R,IAAIiH,IACjDtB,EAAMklB,EAAO24F,WAAWyI,EAASl6G,SAASk6G,EAASl6G,SAASnb,OAAS,GAAGoJ,IAAI2F,IAQhF,GAPAsmH,EAAS90H,EAAI8P,GAAOtB,EAAMsB,GAAO,EACjC9P,EAAIwO,EAAMklB,EAAO44F,kBACjBwI,EAASG,cAAgBzmH,EAAMklB,EAAO44F,kBACtCwI,EAAS90H,GAAK80H,EAASvzH,MAAQ,EAC/BuzH,EAAS70H,GAAK60H,EAASxzH,OAAS,EAChCwzH,EAAShlH,IAAMA,EACfglH,EAAStmH,IAAMA,EACXsmH,EAAS90H,EAAI8P,GAAOglH,EAASjC,QAAS,CACtCiC,EAAS90H,EAAI8P,EACb9P,EAAI80H,EAAS90H,EAAI80H,EAASvzH,MAAQ,GAAKiN,EAAMsB,GAAO,EACpDglH,EAASjC,SAAU,EACnB,IAASnzH,EAAI,EAAGA,EAAIo1H,EAASl6G,SAASnb,OAAQC,IAC1C2/D,EAAWr2D,KAAK2rH,qBAAqBjhG,EAAQohG,EAASl6G,SAASlb,GAAIM,EAAGC,GAE1E60H,EAASjC,SAAU,EACnB7yH,EAAI80H,EAAS90H,EAAI80H,EAASvzH,MAAQmyB,EAAO44F,kBAG7CtsH,EAAIA,GADJwO,EAAMklB,EAAO24F,WAAWyI,EAASl6G,SAASk6G,EAASl6G,SAASnb,OAAS,GAAGoJ,IAAIosH,eAC9DzmH,EAAMxO,EACpBC,GAAK,IACL60H,EAAS70H,EAAIA,OAGb60H,EAAS90H,EAAIA,EACb80H,EAAS70H,EAAIA,EACb60H,EAAShlH,IAAM9P,EACf80H,EAAStmH,IAAMxO,EAAI80H,EAASvzH,MAC5BvB,GAAK80H,EAASvzH,MAAQmyB,EAAO44F,kBAEjC,OAAStsH,EAAGA,EAAGC,EAAGA,IAEtBw0H,EAAWnqF,UAAUsqF,eAAiB,SAAUlhG,GAC5C,IAAIwhG,KACAplH,EAAMrK,KAAKqK,IAAI67B,MAAMlmC,KAAMiuB,EAAOghG,YAAY5hG,IAAI,SAAUgiG,GAAY,OAAOA,EAAS90H,KAIxFm1H,EAHM1vH,KAAK+I,IAAIm9B,MAAMlmC,KAAMiuB,EAAOghG,YAAY5hG,IAAI,SAAUgiG,GAC5D,OAAOA,EAAS90H,EAAI80H,EAASvzH,MAAQmyB,EAAO44F,qBAE/Bx8G,EACjB4jB,EAAOy4F,UA0CP,IAAK,IAzCDlgB,EAAU,SAAUvsG,GASpB,IAAI01H,KACJF,GATAA,EAASxhG,EAAOghG,YAAYW,OAAO,SAAUP,GACzC,OAAIA,EAAS9H,QAAUttH,EACZo1H,EAGA,QAIC5jG,KAAK,SAAUokG,EAAWC,GAAa,OAAOD,EAAUt1H,EAAIu1H,EAAUv1H,IACtFo1H,EAAStlH,IAAMolH,EAAO,GAAGl1H,EACzBo1H,EAAS5mH,IAAM0mH,EAAOA,EAAOz1H,OAAS,GAAGO,EAAIk1H,EAAOA,EAAOz1H,OAAS,GAAG8B,MAAQmyB,EAAO44F,kBACtF8I,EAASI,oBAAsB,EAC/BJ,EAAS9zH,OAAS,EAClB,IAAK,IAAIynB,EAAI,EAAGA,EAAImsG,EAAOz1H,OAAQspB,IAC3BmsG,EAAOnsG,GAAGznB,OAAS8zH,EAAS9zH,SAC5B8zH,EAAS9zH,OAAS4zH,EAAOnsG,GAAGznB,QAEhC8zH,EAASI,qBAAuB/vH,KAAK+I,IAAI0mH,EAAOnsG,GAAGxnB,MAAO2zH,EAAOnsG,GAAGznB,QAChEynB,IAAMmsG,EAAOz1H,OAAS,IACtB21H,EAASI,qBAAuB9hG,EAAO44F,mBAG/C8I,EAASK,cAAgBL,EAAS5mH,IAAM4mH,EAAStlH,IAC7CslH,EAASI,oBAAsBJ,EAASK,gBACxCL,EAASK,eAAiBL,EAASK,cAAgBL,EAASI,qBAAuB,GAEvFJ,EAASjlE,OAASilE,EAASK,eAAiB,EAAIhwH,KAAKgR,IAAM2+G,EAAS9zH,OACpE8zH,EAASpzG,SACLtiB,EAAI,GACAg0B,EAAOy4F,OAAOzsH,EAAI,GAAGywD,OAASz8B,EAAOy4F,OAAOzsH,EAAI,GAAG4B,QAAU8zH,EAASjlE,SACtEilE,EAASjlE,OAASz8B,EAAOy4F,OAAOzsH,EAAI,GAAGywD,OAASz8B,EAAOy4F,OAAOzsH,EAAI,GAAG4B,QAG7E,IAAK,IAAIjC,EAAI,EAAGA,EAAI61H,EAAOz1H,OAAQJ,IAC/B61H,EAAO71H,GAAGg5D,MAAQ5yD,KAAK6G,IAAI4oH,EAAO71H,GAAGW,EAAIk1H,EAAO71H,GAAGkC,MAAQ,EAAIuO,GAAOqlH,EACtEC,EAASpzG,MAAMliB,KAAKo1H,EAAO71H,IAE/Bq0B,EAAOy4F,OAAOrsH,KAAKs1H,IAEd11H,EAAI,EAAGA,GAAKg0B,EAAO04F,SAAU1sH,IAClCusG,EAAQvsG,IAGhB+0H,EAAWnqF,UAAUuqF,wBAA0B,SAAUnhG,GACrD,IAAI+kE,EAAO/kE,EAAO24F,WAAW34F,EAAOw4F,WAAWrjH,IAC/C4vF,EAAKz4F,EAAI,EACTy4F,EAAKx4F,EAAI,EACT,IAAK,IAAIP,EAAI,EAAGA,EAAIg0B,EAAOy4F,OAAO1sH,OAAQC,IACtC,IAAK,IAAIL,EAAI,EAAGA,EAAIq0B,EAAOy4F,OAAOzsH,GAAGsiB,MAAMviB,OAAQJ,IAAK,CACpD,IAAIy1H,EAAWphG,EAAOy4F,OAAOzsH,GAAGsiB,MAAM3iB,GACtCy1H,EAAS90H,EAAIyF,KAAKY,IAAqB,IAAjByuH,EAASz8D,MAAc5yD,KAAKgR,GAAK,MAAQid,EAAOy4F,OAAOzsH,GAAGywD,OAASz8B,EAAO64F,gBAAkB7sH,GAClHo1H,EAAS70H,EAAIwF,KAAKW,IAAqB,IAAjB0uH,EAASz8D,MAAc5yD,KAAKgR,GAAK,MAAQid,EAAOy4F,OAAOzsH,GAAGywD,OAASz8B,EAAO64F,gBAAkB7sH,GAClHg0B,EAAOq4F,QAAUtmH,KAAKqK,IAAI4jB,EAAOq4F,QAAS+I,EAAS90H,GACnD0zB,EAAOs4F,QAAUvmH,KAAKqK,IAAI4jB,EAAOs4F,QAAS8I,EAAS70H,KAI/Dw0H,EAAWnqF,UAAUuiF,aAAe,SAAUn5F,EAAQ2kE,GAClD3kE,EAAOq4F,QAAUr4F,EAAOw4F,WAAWnnH,SAAWszF,EAASr4F,EAAI,EAC3D0zB,EAAOs4F,QAAUt4F,EAAOw4F,WAAWlnH,SAAWqzF,EAASp4F,EAAI,GAE/Dw0H,EAAWnqF,UAAUwiF,YAAc,SAAUp5F,EAAQnqB,EAAMqa,GACvD,IAAIkxG,EAAWphG,EAAO24F,WAAW9iH,EAAKV,IAClC9D,EAAU+vH,EAAS90H,EAAI0zB,EAAOq4F,QAC9B/mH,EAAU8vH,EAAS70H,EAAIyzB,EAAOs4F,QAClCziH,EAAKxE,SAAWA,EAChBwE,EAAKvE,SAAWA,EAChB,IAAK,IAAItF,EAAI,EAAGA,EAAIo1H,EAASl6G,SAASnb,OAAQC,IAAK,CAC/C,IAAIuwH,EAAY6E,EAASl6G,SAASlb,GAClCsJ,KAAK8jH,YAAYp5F,EAAQ9P,EAAUqsG,EAAUpnH,IAAK+a,KAG1D6wG,EAAWnqF,UAAUkiF,gBAAkB,SAAU94F,EAAQ+F,GACrD,IAAIqF,KAYJ,OAXAA,EAAKvd,KAAOkY,EAAK5wB,GACjBi2B,EAAK9+B,EAAI,EACT8+B,EAAK7+B,EAAI,EACT6+B,EAAKhvB,IAAM,EACXgvB,EAAKtwB,IAAM,EACXswB,EAAKv9B,MAAQk4B,EAAK1iB,WAAWxV,MAC7Bu9B,EAAKx9B,OAASm4B,EAAK1iB,WAAWzV,OAC9Bw9B,EAAKlkB,YACLkkB,EAAKkuF,MAAQ,EACbluF,EAAKu5B,MAAQ,EACbv5B,EAAK+zF,SAAU,EACR/zF,GAEJ21F,KnDlOPiB,GAAgC,WAChC,SAASA,EAAeC,GAIpB3sH,KAAK4sH,UAAY,EAIjB5sH,KAAK6sH,UAAY,EAIjB7sH,KAAKgZ,SACLhZ,KAAK8sH,UAAYH,EACjB,IACInrH,EAAS2/B,GADDnhC,KAAK8sH,WAEjB9sH,KAAK+sH,SAAWvrH,EAAOP,OACvBjB,KAAKgZ,SACA2zG,EAAO/E,SAASnhB,UACjBkmB,EAAO/E,SAASnhB,YAEfkmB,EAAO/E,SAASh2G,WACjB+6G,EAAO/E,SAASh2G,aAEpB5R,KAAKgZ,MAAS2zG,EAAO/E,SAAgB,QAAEzrF,OAAOwwF,EAAO/E,SAASh2G,UAQlE,OAHA86G,EAAeprF,UAAU0rF,aAAe,WACpChtH,KAAK8sH,UAAUlF,SAAS3mH,OAASjB,KAAK+sH,UAEnCL,KAMPO,GAAiC,WACjC,SAASA,IACLjtH,KAAKktH,OAAS,KACdltH,KAAKmtH,cAAgB,GACrBntH,KAAKotH,gBAAkB,IACvBptH,KAAKqtH,eAAiB,IACtBrtH,KAAKstH,qBAAwB/0H,MAAOyH,KAAKmtH,cAAe70H,OAAQ0H,KAAKmtH,eAIrEntH,KAAK6vF,aAAe,EAIpB7vF,KAAK8vF,aAAe9vF,KAAKktH,OAIzBltH,KAAK4vF,aAAe5vF,KAAKotH,gBACzBptH,KAAK6vF,aAAe7vF,KAAKqtH,eAmO7B,OA9NAJ,EAAgB3rF,UAAUsa,QAAU,aAKpCqxE,EAAgB3rF,UAAUqa,cAAgB,WACtC,MAAO,qBAEXsxE,EAAgB3rF,UAAUisF,cAAgB,SAAUC,GAChD,IAAIC,EAAQztH,KAAK0tH,aACjBD,EAAM7F,SAAS+F,OAASH,EAAmBI,eAAeJ,EAAmBx0G,OAC7E,IAAI60G,EAAgBJ,EAAM7F,SAASkG,WAC/BC,EAAW/tH,KAAKguH,kBAAkBH,GAClCnyF,EAAQqyF,EAASt3H,OACrBilC,EAAQj/B,KAAKqK,IAAI9G,KAAK4vF,aAAcl0D,EAAQA,EAAQA,GACpD17B,KAAKiuH,eAAeF,EAAUN,EAAM7F,SAAS+F,QAC7C,IAAK,IAAIj3H,EAAI,EAAGw3H,EAAUxyF,EAAOhlC,EAAIw3H,EAASx3H,IAC1CsJ,KAAKmuH,oBAAoBJ,GACzB/tH,KAAKouH,aAAaL,GAEtB/tH,KAAKquH,mBAAmBN,EAAUN,IAEtCR,EAAgB3rF,UAAU2sF,eAAiB,SAAUF,EAAUO,GAK3D,IAAK,IAJDC,EAAW9xH,KAAK+I,IAAI8oH,EAAWA,EAAS/1H,MAAQ,GAAI+1H,EAAWA,EAASh2H,OAAS,IACjFk2H,EAAgBD,EAAW,EAA3BC,EAAiCD,EAAW,EAC5CE,EAAe,EAAIhyH,KAAKgR,GAAKsgH,EAASt3H,OACtCi4H,EAASD,EACJ/3H,EAAI,EAAGA,EAAIq3H,EAASt3H,OAAQC,IAAK,CACtC,IAAIi2H,EAASoB,EAASr3H,GACNsJ,KAAK2uH,aAAahC,GACxBI,UACN/1H,EAAGw3H,EAAaD,EAAWp2H,OAAQsE,KAAKY,IAAIqxH,GAASv0H,QAAQ,IAC7DlD,EAAGu3H,EAAaD,EAAWp2H,OAAOsE,KAAKW,IAAIsxH,GAAQv0H,QAAQ,KAE/Du0H,GAAUD,IAMlBxB,EAAgB3rF,UAAUs5C,SAAW,SAAU4yC,GAC3CxtH,KAAK0tH,aAAeF,EAAmBE,aACvC1tH,KAAKutH,cAAcC,IAEvBP,EAAgB3rF,UAAU6sF,oBAAsB,SAAUJ,GAGtD,IAAK,IAFDa,EACAhoF,EACK7mB,EAAI,EAAGA,EAAIguG,EAASt3H,OAAQspB,IAAK,CAItC,IAAK,IAHD4sG,EAASoB,EAAShuG,GAElB/G,GADJ41G,EAAY5uH,KAAK2uH,aAAahC,IACR3zG,MACb5d,EAAI,EAAGA,EAAI4d,EAAMviB,OAAQ2E,IAAK,CAE/BgmC,IADAytF,EAAU71G,EAAM5d,IACWyE,GAAIkuH,IAC/B/tH,KAAK8uH,eAAeF,EAAW5uH,KAAK2uH,aAAaE,IAGzD,IAAK,IAAIn4H,EAAI,EAAGuU,EAAW+N,EAAMviB,OAAQC,EAAIuU,KACrCA,EAAW,GADoCvU,IAAK,CAIxD,IAAIq4H,EAAO/uH,KAAK2uH,aAAa31G,EAAMtiB,IAC/Bs4H,EAAQt4H,EAAI,GAAKuU,EAAYjL,KAAK2uH,aAAa31G,EAAM,IAAMhZ,KAAK2uH,aAAc31G,EAAMtiB,EAAI,IACxFc,EAAS,IAAMwhB,EAAMviB,OAAS,EAAKgG,KAAKgR,GAAK,IAC7CwhH,EAAiB,EAAIjvH,KAAK6vF,aAAepzF,KAAKW,IAAI5F,GACtDwI,KAAKkvH,iBAAiBH,EAAMC,EAAMC,GAEtC,IAAK,IAAIr1H,EAAI,EAAGA,EAAIm0H,EAASt3H,OAAQmD,IAAK,CACtC,IAAIi1H,EACCztF,IADDytF,EAAUd,EAASn0H,IACSiG,GAAImZ,IAAU61G,EAAQhvH,KAAO8sH,EAAO9sH,KAChE+mC,EAAQ5mC,KAAK2uH,aAAaE,GAC1B7uH,KAAKmvH,eAAeP,EAAWhoF,OAK/CqmF,EAAgB3rF,UAAU8sF,aAAe,SAAUL,GAE/C,IAAK,IADDqB,EAAU,KACLrvG,EAAI,EAAGA,EAAIguG,EAASt3H,OAAQspB,IAAK,CACtC,IAAI4sG,EAASoB,EAAShuG,GAElBsvG,GADJD,EAAUpvH,KAAK2uH,aAAahC,IACNI,SACtBsC,EAAQr4H,GAAKyF,KAAKqK,IAAIsoH,EAAQxC,UAAW5sH,KAAKstH,oBAAoB/0H,OAClE82H,EAAQp4H,GAAKwF,KAAKqK,IAAIsoH,EAAQvC,UAAW7sH,KAAKstH,oBAAoBh1H,QAClE82H,EAAQxC,UAAY,EACpBwC,EAAQvC,UAAY,EACpBuC,EAAQrC,SAAWsC,IAG3BpC,EAAgB3rF,UAAU+sF,mBAAqB,SAAUN,EAAUN,GAI/D,IAAK,IADDd,EAFA2C,GAAU/2H,MAAOJ,OAAO8U,UAAW3U,OAAQH,OAAO8U,WAClDmiH,EAAU,KAELrvG,EAAI,EAAGA,EAAIguG,EAASt3H,OAAQspB,IAAK,CACtC4sG,EAASoB,EAAShuG,GAElB,IAAIwvG,GACAv4H,GAFJo4H,EAAUpvH,KAAK2uH,aAAahC,IAEbI,SAAS/1H,EAAI21H,EAAO5+G,WAAWxV,MAAQ,EAClDtB,EAAGm4H,EAAQrC,SAAS91H,EAAI01H,EAAO5+G,WAAWzV,OAAS,GAEvDg3H,EAAM/2H,MAAQkE,KAAKqK,IAAIwoH,EAAM/2H,MAAOg3H,EAAWv4H,GAC/Cs4H,EAAMh3H,OAASmE,KAAKqK,IAAIwoH,EAAMh3H,OAAQi3H,EAAWt4H,GAErD,IAAS8oB,EAAI,EAAGA,EAAIguG,EAASt3H,OAAQspB,IAAK,CACtC4sG,EAASoB,EAAShuG,IAEdwvG,GADJH,EAAUpvH,KAAK2uH,aAAahC,IACHI,UACd/1H,GAAKs4H,EAAM/2H,OAASk1H,EAAM7F,SAASmF,SAAWU,EAAM7F,SAASmF,SAAS/1H,EAAI,GACrFu4H,EAAWt4H,GAAKq4H,EAAMh3H,QAAUm1H,EAAM7F,SAASmF,SAAWU,EAAM7F,SAASmF,SAAS91H,EAAI,GACtFm4H,EAAQrC,SAAWwC,EACnBH,EAAQpC,iBAGhBC,EAAgB3rF,UAAU0sF,kBAAoB,SAAUD,GAGpD,IAAK,IAFDyB,KAEK3yH,EAAK,EAAG4yH,EADN9yG,OAAOC,KAAKmxG,GACSlxH,EAAK4yH,EAAOh5H,OAAQoG,IAAM,CACtD,IAAIkjB,EAAI0vG,EAAO5yH,GACf,GAAIkxH,EAAShuG,GAAI,CACb,IAAI4sG,EAASoB,EAAShuG,GAClB6uG,EAAY,IAAIlC,GAAeC,GACnCA,EAAO/E,SAAS8H,IAAMd,EACtBY,EAAY14H,KAAK61H,IAGzB,OAAO6C,GAKXvC,EAAgB3rF,UAAUqtF,aAAe,SAAUhC,GAC/C,OAAOA,EAAO/E,SAAS8H,KAE3BzC,EAAgB3rF,UAAU6tF,eAAiB,SAAUQ,EAAUC,GAC3D,GAAgB,MAAZA,GAAgC,MAAZD,EAAxB,CAGA,IAAIrqH,EAAWtF,KAAK6vH,cAAcF,EAAS5C,SAAU6C,EAAS7C,UAC1Dv1H,EAAQwI,KAAK8vH,UAAUH,EAAS5C,SAAU6C,EAAS7C,UACnDkC,EAAsC,GAApBjvH,KAAK6vF,aACvBvqF,EAAW2pH,GACXjvH,KAAK+vH,UAAUzqH,EAAU2pH,EAAgBz3H,EAAOo4H,KAGxD3C,EAAgB3rF,UAAUwuF,UAAY,SAAU/sF,EAAKC,GACjD,IAAIgtF,EAAU,EACVC,EAAKjtF,EAAIhsC,EAAI+rC,EAAI/rC,EACjBk5H,EAAKltF,EAAI/rC,EAAI8rC,EAAI9rC,EA6BrB,OA5BW,IAAPg5H,EAEID,EADAE,GAAM,EACK,EAAMzzH,KAAKgR,GAAM,EAGlBhR,KAAKgR,GAAK,EAGZ,IAAPyiH,EAEDF,EADAC,EAAK,EACKxzH,KAAKgR,GAGL,GAIduiH,EAAUvzH,KAAK0zH,KAAKD,EAAKD,GACrBA,EAAK,GAAKC,EAAK,EACfF,EAAUvzH,KAAKgR,GAAKuiH,EAEfC,EAAK,GAAKC,EAAK,EACpBF,EAAUvzH,KAAKgR,GAAKuiH,EAEfC,EAAK,GAAKC,EAAK,IACpBF,EAAU,EAAMvzH,KAAKgR,GAAKuiH,IAG3BA,GAEX/C,EAAgB3rF,UAAUuuF,cAAgB,SAAU9sF,EAAKC,GACrD,IAAItc,EAAI,EACJ8jG,EAAKxnF,EAAIhsC,EAAI+rC,EAAI/rC,EACjB2/B,EAAKqM,EAAI/rC,EAAI8rC,EAAI9rC,EACjB2b,EAAK43G,EAAKA,EAAO7zF,EAAKA,EAI1B,OAHI/jB,EAAI,IACJ8T,EAAIjqB,KAAKmmC,KAAKhwB,IAEX8T,GAEXumG,EAAgB3rF,UAAU4tF,iBAAmB,SAAUS,EAAUC,EAAUX,GACvE,IAAI3pH,EAAWtF,KAAK6vH,cAAcF,EAAS5C,SAAU6C,EAAS7C,UAC1Dv1H,EAAQwI,KAAK8vH,UAAUH,EAAS5C,SAAU6C,EAAS7C,UACnDznH,EAAW2pH,GACXjvH,KAAK+vH,UAAUzqH,EAAU2pH,EAAgBz3H,EAAOo4H,IAMxD3C,EAAgB3rF,UAAUguD,aAAe,SAAUpU,EAAgBh+D,EAAYkzG,EAAiBx1G,EAAW8P,EAAQ2kE,IAC3F,IAAIghC,IACV/gC,aAAapU,EAAgBh+D,EAAYkzG,EAAiBx1G,EAAW8P,EAAQ2kE,IAE/F49B,EAAgB3rF,UAAUwtF,eAAiB,SAAUa,EAAUC,GAC3D,IAAItqH,EAAWtF,KAAK6vH,cAAcF,EAAS5C,SAAU6C,EAAS7C,UAC1Dv1H,EAAQwI,KAAK8vH,UAAUH,EAAS5C,SAAU6C,EAAS7C,WACnDznH,EAAWtF,KAAK6vF,cAAgBvqF,EAAWtF,KAAK6vF,eAChD7vF,KAAK+vH,UAAUzqH,EAAUtF,KAAK6vF,aAAcr4F,EAAOo4H,IAG3D3C,EAAgB3rF,UAAUyuF,UAAY,SAAUzqH,EAAUgrH,EAAS94H,EAAOo4H,GACtE,IAAIl0F,EAAQk0F,EAAS52G,MAAMviB,OACvBA,EAAS6O,EAAWgrH,EACpBpwC,EAASlgF,KAAK8vF,cAAgBp0D,EAAQA,GAASj/B,KAAKmmC,KAAKlH,GAC7D,GAAe,IAAXjlC,EAAc,CACd,IACI85H,EADY95H,EAASypF,EAErBnkF,EAAUU,KAAKY,IAAI7F,GAAS+4H,EAC5Bv0H,EAAUS,KAAKW,IAAI5F,GAAS+4H,EAChCX,EAAShD,WAAa7wH,EACtB6zH,EAAS/C,WAAa7wH,IAGvBixH,KAGPoD,GAAoC,WACpC,SAASA,IACLrwH,KAAKwwH,gBACLxwH,KAAKywH,wBACLzwH,KAAK0wH,gBACL1wH,KAAK2wH,eA4aT,OAvaAN,EAAmB/uF,UAAUguD,aAAe,SAAUpU,EAAgBh+D,EAAYkzG,EAAiBx1G,EAAW8P,EAAQ2kE,GAClHrvF,KAAK4a,UAAYA,EACjB5a,KAAKgZ,MAAQkiE,EACbl7E,KAAKkd,WAAaA,EAClB,IAAI0zG,EAAgB11C,EAChB01C,EAAcn6H,OAAS,IACvBuJ,KAAK6wH,oBAAsBn1G,GAAYk1G,EAAc,KAEzD,IAAK,IAAI/zH,EAAK,EAAGi0H,EAAmB51C,EAAgBr+E,EAAKi0H,EAAiBr6H,OAAQoG,IAAM,CACpF,IACIk0H,OAAkB,GACtBA,EAFIxwH,EAAOuwH,EAAiBj0H,IAGZ+qH,YAChBmJ,EAAgBnJ,SAASoJ,UAAY,OACrChxH,KAAK0wH,aAAa55H,KAAKi6H,GAE3B,IAAK,IAAIr0G,EAAK,EAAGq3E,EAAe72E,EAAYR,EAAKq3E,EAAat9F,OAAQimB,IAAM,CACxE,IACIu0G,OAAuB,GAC3BA,EAFgBl9B,EAAar3E,IAGRkrG,YACrBqJ,EAAqBrJ,SAASoJ,UAAY,YAC1ChxH,KAAK0wH,aAAa55H,KAAKm6H,GAE3BjxH,KAAKkxH,cAAclxH,KAAK0wH,aAAcN,GAEtC,IAAK,IADDe,EAAcnxH,KAAK4tH,eAAegD,GAC7Bl6H,EAAI,EAAGA,EAAIk6H,EAAcn6H,OAAQC,IAAK,CAC3C,IAAI6J,EAAOqwH,EAAcl6H,GACrB06H,GAAS/hC,EAASr4F,EAAIm6H,EAAY54H,OAAS,EAC3CoK,EAAS+nB,EAAO/nB,WACpBA,EAEOC,KAAOD,EAAOC,MAAQ,EAC7BD,EAAOE,MAAQF,EAAOE,OAAS,EAC/BF,EAAOI,IAAMJ,EAAOI,KAAO,EAC3BJ,EAAOG,OAASH,EAAOG,QAAU,EAC7B4nB,EAAO/nB,OAAOC,OACdD,EAAOC,KAAO8nB,EAAO/nB,OAAOC,MAE5B8nB,EAAO/nB,OAAOI,MACdJ,EAAOI,IAAM2nB,EAAO/nB,OAAOI,KAE/B,IAAIynH,EAAMjqH,EAAKqnH,SAAS8H,IAAI3C,SAAS/1H,GAAKuJ,EAAKxE,QAAWwE,EAAKwN,WAAWxV,MAAQ,GAC9E44H,EAAYn6H,EAAIo6H,EAAQzuH,EAAOC,KAC/B+zB,EAAMp2B,EAAKqnH,SAAS8H,IAAI3C,SAAS91H,GAAKsJ,EAAKvE,QAAWuE,EAAKwN,WAAWzV,OAAS,GAAM64H,EAAYl6H,EAAI0L,EAAOI,IAChHxC,EAAKxE,SAAWyuH,EAChBjqH,EAAKvE,SAAW26B,SACTp2B,EAAKqnH,SAEhB,OAAO,GAKXyI,EAAmB/uF,UAAUssF,eAAiB,SAAUyD,GACpDA,EAASA,EAAOvgF,QAIhB,IAAK,IADDvwC,EAFA8b,EAAO,KACPonB,EAAQ,KAEH/sC,EAAI,EAAGA,EAAI26H,EAAO56H,OAAQC,IAAK,CAEpC,IAAI8K,EAAS2/B,GADb5gC,EAAO8wH,EAAO36H,IAEd2lB,EAAO,IAAIC,GAAK/b,EAAKqnH,SAAS8H,IAAMnvH,EAAKqnH,SAAS8H,IAAI3C,SAAS/1H,EAAIwK,EAAOxK,EAAGuJ,EAAKqnH,SAAS8H,IAAMnvH,EAAKqnH,SAAS8H,IAAI3C,SAAS91H,EAAIuK,EAAOvK,EAAGsJ,EAAKwN,WAAWxV,MAAOgI,EAAKwN,WAAWzV,QAE7KmrC,EADAA,EACQA,EAAM3xB,UAAUuK,GAGhBA,EAGhB,OAAOonB,GAEX4sF,EAAmB/uF,UAAU4vF,cAAgB,SAAUI,EAAelB,GAClEpwH,KAAKuxH,oBAAoBD,GACzB,IAAIE,EAAaF,EAAc76H,OAC/B,GAAI+6H,EAAa,EAAG,CAIhB,IAAK,IAHDC,KACAz4G,KACA04G,KACK93H,EAAI,EAAGA,EAAI03H,EAAc76H,OAAQmD,IAAK,CAC3C,IAAIilH,EAAKyS,EAAc13H,QACSK,IAA5B4kH,EAAG+I,SAAS+J,cACZ9S,EAAG+I,SAAS+J,aAAc,GAEA,cAA1B9S,EAAG+I,SAASoJ,WAA8BnS,EAAG+I,SAAS+J,YAGvB,cAA1B9S,EAAG+I,SAASoJ,UACjBS,EAAe36H,KAAK+nH,GAGpB6S,EAAY56H,KAAK+nH,GANjB7lG,EAAMliB,KAAK+nH,GAWnB,IAFA7lG,EAAQA,EAAMmjB,OAAOu1F,GACrB14G,EAAQy4G,EAAet1F,OAAOnjB,GACvBw4G,EAAaxxH,KAAK4xH,iBAAiB5xH,KAAK2wH,cAE3C,GADA3wH,KAAK6xH,mBAAmB74G,GACC,MAArBhZ,KAAK0tH,aAAT,CAGA0C,EAAgBx1C,SAAS56E,MACzBA,KAAK0tH,aAAe,KACpB1tH,KAAKwwH,gBACL,IAAK,IAAI3zH,EAAK,EAAG6f,EAAK1c,KAAKywH,qBAAsB5zH,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACnD6f,EAAG7f,GACT+qH,SAAS+J,aAAc,GAGzC3xH,KAAK2wH,YAAc,KACnB3wH,KAAK0tH,aAAe,KAExB,OAAO,GAEX2C,EAAmB/uF,UAAUuwF,mBAAqB,SAAU74G,GACxD,IAAK,IAAItiB,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAAK,CACnC,IAAI6J,EAAOyY,EAAMtiB,GACjB,IAAK0qC,GAAmB7gC,EAAKV,GAAIG,KAAK2wH,aAAc,CAC5CpwH,GACAP,KAAK8xH,YAAYvxH,GAErB,SAIZ8vH,EAAmB/uF,UAAUwwF,YAAc,SAAUvxH,GACjD,IAAIwxH,EAAYxxH,EACgB,cAA5BA,EAAKqnH,SAASoJ,UACdhxH,KAAKgyH,iBAAiBzxH,GAEJ,MAAbwxH,GACD/xH,KAAKiyH,QAAQ1xH,EAAM,YACnBP,KAAKiyH,QAAQ1xH,EAAM,YACfP,KAAKkyH,yBAAyBH,IAC9B/xH,KAAK0tH,cAAiB9F,aACtB5nH,KAAK0tH,aAAa9F,SAASuK,WAAa,GACxCnyH,KAAK0tH,aAAa9F,SAASwK,UAAY,GACvCpyH,KAAKqyH,qBAAqBN,IAG1B/xH,KAAK0tH,aAAentH,IAKpC8vH,EAAmB/uF,UAAU+wF,qBAAuB,SAAUN,GAC1D,IAAItE,EAAQztH,KAAK0tH,aACZD,EAAM7F,SAASkG,aAChBL,EAAM7F,SAASkG,eAEnB,IAAIvtH,EAAOwxH,EACX,GAAY,MAARxxH,GAAgBP,KAAKiyH,QAAQ1xH,EAAM,UAAW,CAC9C,IAAI+xH,EAAW/xH,EAAKV,GACpB,GAAKG,KAAKuyH,mBAAmB9E,EAAM7F,SAASkG,WAAYvtH,GAKnD,CACD,IAAIusH,EAAYW,EAAM7F,SAASkG,WAAWwE,GACtCxF,EAAUlF,SAAS4K,QACnB1F,EAAUlF,SAAS4K,OAAQ,EAC3BxyH,KAAKyyH,sBAAsB3F,GAC3B9sH,KAAK0yH,iBAAiBX,QAViC,CAC3D,IAAIpF,EAAS3sH,KAAK2yH,aAAapyH,GAC/BP,KAAKyyH,sBAAsB9F,GAC3B3sH,KAAK0yH,iBAAiBX,MAYlC1B,EAAmB/uF,UAAUoxF,iBAAmB,SAAUX,GACtD/xH,KAAK4yH,kBAAkBb,EAAW,WAClC/xH,KAAK4yH,kBAAkBb,EAAW,aAEtC1B,EAAmB/uF,UAAUsxF,kBAAoB,SAAUb,EAAWc,GAClE,IAAIhjD,KACuB,YAAvBgjD,EACAhjD,EAAQkiD,EAAUp5E,QAEU,aAAvBk6E,IACLhjD,EAAQkiD,EAAUr5E,UAEtB,IAAK,IAAIhiD,EAAI,EAAGA,EAAIm5E,EAAMp5E,OAAQC,IAAK,CACnC,IAAIq5E,EAAO/vE,KAAK4a,UAAUi1D,EAAMn5E,IAChC,GAAIsJ,KAAKiyH,QAAQliD,EAAM,UAAW,CAC9B,IAAI+iD,EAAW9yH,KAAK4a,UAAUm1D,EAAKtuE,UAC/BsxH,EAAS/yH,KAAK4a,UAAUm1D,EAAK39B,UACN,YAAvBygF,GAAgD,MAAZC,GACpC1xF,GAAmB0xF,EAASjzH,GAAIG,KAAKgZ,OACrChZ,KAAKqyH,qBAAqBryH,KAAK4a,UAAUm1D,EAAKtuE,WAElB,aAAvBoxH,GAA+C,MAAVE,GAC1C3xF,GAAmB2xF,EAAOlzH,GAAIG,KAAKgZ,QACnChZ,KAAKqyH,qBAAqBryH,KAAK4a,UAAUm1D,EAAK39B,cAK9Di+E,EAAmB/uF,UAAUmxF,sBAAwB,SAAU3F,GAC3D9sH,KAAKgzH,oBAAoBlG,GACzB9sH,KAAKizH,qBAAqBnG,IAE9BuD,EAAmB/uF,UAAUixF,mBAAqB,SAAUh4H,EAAK24H,GAE7D,IAAK,IADDt2G,EAAOD,OAAOC,KAAKriB,GACd7D,EAAI,EAAGA,EAAIkmB,EAAKnmB,OAAQC,IAC7B,GAAIkmB,EAAKlmB,KAAOw8H,EAAOrzH,GACnB,OAAO,EAGf,OAAO,GAEXwwH,EAAmB/uF,UAAUswF,iBAAmB,SAAUr3H,GAEtD,OADWoiB,OAAOC,KAAKriB,GACX9D,QAEhB45H,EAAmB/uF,UAAU2xF,qBAAuB,SAAUnG,GAG1D,IAAK,IAFDW,EAAQztH,KAAK0tH,aACbqE,EAAYjF,EACPlzH,EAAI,EAAGA,EAAIm4H,EAAUr5E,SAASjiD,OAAQmD,IAAK,CAChD,IAAIm2E,EAAO/vE,KAAK4a,UAAUm3G,EAAUr5E,SAAS9+C,IAC7C,IAAKm2E,EAAK63C,SAAS+J,YAAa,CAC5B,IAAIpxH,EAAOP,KAAK4a,UAAUm1D,EAAK39B,UAC/B,GAAIhR,GAAmB7gC,EAAKV,GAAIG,KAAKgZ,QAAkB,MAARzY,GAAgBA,EAAK2tB,QAAS,CACzE,IAAIilG,OAAiB,EAChBnzH,KAAKuyH,mBAAmB9E,EAAM7F,SAASkG,WAAYvtH,GAKpD4yH,EAAiB1F,EAAM7F,SAASkG,WAAWvtH,EAAKV,KAJhDszH,EAAiBnzH,KAAK2yH,aAAapyH,IACpBqnH,SAAS4K,OAAQ,EAK/B1F,EAAUlF,SAASh2G,WACpBk7G,EAAUlF,SAASh2G,aAElBuhH,EAAevL,SAASnhB,UACzB0sB,EAAevL,SAASnhB,YAE5BzmG,KAAKozH,QAAQD,EAAevL,SAASnhB,QAASqmB,GAC1C9sH,KAAKqzH,SAASvG,EAAUlF,SAASh2G,SAAUuhH,EAAetzH,IAAM,GAChEitH,EAAUlF,SAASh2G,SAAS9a,KAAKq8H,OAMrD9C,EAAmB/uF,UAAU0xF,oBAAsB,SAAUlG,GAGzD,IAAK,IAFDW,EAAQztH,KAAK0tH,aACbqE,EAAYjF,EACPlzH,EAAI,EAAGA,EAAIm4H,EAAUp5E,QAAQliD,OAAQmD,IAAK,CAC/C,IAAIm2E,EAAO/vE,KAAK4a,UAAUm3G,EAAUp5E,QAAQ/+C,IAC5C,IAAKm2E,EAAK63C,SAAS+J,YAAa,CAC5B,IAAIpxH,EAAOP,KAAK4a,UAAUm1D,EAAKtuE,UAC/B,GAAI2/B,GAAmB7gC,EAAKV,GAAIG,KAAKgZ,QAAkB,MAARzY,GAAgBA,EAAK2tB,QAAS,CACzE,IAAIy+F,OAAS,EACR3sH,KAAKuyH,mBAAmB9E,EAAM7F,SAASkG,WAAYvtH,GAKpDosH,EAASc,EAAM7F,SAASkG,WAAWvtH,EAAKV,KAJxC8sH,EAAS3sH,KAAK2yH,aAAapyH,IACpBqnH,SAAS4K,OAAQ,EAKvB1F,EAAUlF,SAASnhB,UACpBqmB,EAAUlF,SAASnhB,YAElBkmB,EAAO/E,SAASh2G,WACjB+6G,EAAO/E,SAASh2G,aAEpB5R,KAAKozH,QAAQzG,EAAO/E,SAASh2G,SAAUk7G,GACnC9sH,KAAKqzH,SAASvG,EAAUlF,SAASnhB,QAASkmB,EAAO9sH,IAAM,GACvDitH,EAAUlF,SAASnhB,QAAQ3vG,KAAK61H,OAMpD0D,EAAmB/uF,UAAU8xF,QAAU,SAAUvxD,EAAMthE,GACnD,IAAI+yH,EAAStzH,KAAKqzH,SAASxxD,EAAMthE,EAAKV,IAClCyzH,GAAU,GAAKA,EAASzxD,EAAKprE,OAC7BorE,EAAKyxD,GAAU/yH,EAGfshE,EAAK/qE,KAAKyJ,IAGlB8vH,EAAmB/uF,UAAU+xF,SAAW,SAAUxxD,EAAM0xD,GACpD,IAAID,GAAU,EACd,GAAY,MAARzxD,GAA6B,KAAb0xD,EAChB,IAAK,IAAI78H,EAAI,EAAG88H,EAAU3xD,EAAKprE,OAAQC,EAAI88H,EAAS98H,IAAK,CACrD,IAAIi2H,EAAS9qD,EAAKnrE,GAClB,GAAwB,oBAAYi2H,IAAW4G,EAAU,CACrDD,EAAS58H,EACT,MAEC,GAAc,MAAVi2H,GAAkBA,EAAO9sH,KAAO0zH,EAAU,CAC/CD,EAAS58H,EACT,OAIZ,OAAO48H,GAEXjD,EAAmB/uF,UAAUqxF,aAAe,SAAUpyH,GAClD,IAAIktH,EAAQztH,KAAK0tH,aACZD,EAAM7F,SAASkG,aAChBL,EAAM7F,SAASkG,eAEnB,IAAInB,EAASpsH,EACb,GAAa,MAATktH,EAAe,CACfA,EAAM7F,SAASkG,WAAWnB,EAAO9sH,IAAM8sH,EACvC,IAAI8G,EAAazzH,KAAK6wH,oBACJ,MAAd4C,GAAsBlzH,EAAKV,KAAO4zH,EAAW5zH,KAC7CG,KAAK6wH,oBAAsBlE,GAGnC,OAAOA,GAEX0D,EAAmB/uF,UAAU4wF,yBAA2B,SAAUvF,GAC9D,IAAI+G,GAAsB,EAU1B,OATa/G,EAAc,QAAExwF,OAAOwwF,EAAOj0E,UACjCjiD,OAAS,IACQ,MAAlBk2H,EAAOh0E,SAAqBg0E,EAAOh0E,QAAQliD,OAAS,IACrDi9H,EAAsB1zH,KAAK2zH,qBAAqBhH,EAAOh0E,QAAS,cAE9D+6E,GAA4C,MAAnB/G,EAAOj0E,UAAsBi0E,EAAOj0E,SAASjiD,OAAS,IACjFi9H,EAAsB1zH,KAAK2zH,qBAAqBhH,EAAOj0E,SAAU,YAGlEg7E,GAEXrD,EAAmB/uF,UAAUqyF,qBAAuB,SAAUC,EAAsBC,GAEhF,IAAK,IADDH,GAAsB,EACjBh9H,EAAI,EAAGA,EAAIk9H,EAAqBn9H,OAAS,EAAGC,IAAK,CACtD,IAAIq5E,EAAO/vE,KAAK4a,UAAUg5G,EAAqBl9H,IAC/C,GAAKsJ,KAAKiyH,QAAQliD,EAAM,aAGnBA,EAAK63C,SAAS+J,cAAyC,aAAxBkC,GAAuE,MAAjC7zH,KAAK4a,UAAUm1D,EAAKtuE,WAC9D,WAAxBoyH,GAAqE,MAAjC7zH,KAAK4a,UAAUm1D,EAAK39B,YAAqB,CACjFshF,GAAsB,EACtB,OAGR,OAAOA,GAEXrD,EAAmB/uF,UAAU0wF,iBAAmB,SAAUzxH,GACtD,IAAIuzH,EAAWvzH,EACf,GAAgB,MAAZuzH,IAAqBA,EAASlM,SAAS+J,aAAe3xH,KAAKiyH,QAAQ1xH,EAAM,UAAW,CACpFP,KAAKiyH,QAAQ1xH,EAAM,YACnB,IAAIuyH,EAAW9yH,KAAK4a,UAAUk5G,EAASryH,UACnCsxH,EAAS/yH,KAAK4a,UAAUk5G,EAAS1hF,UACrB,MAAZ0gF,EACA9yH,KAAK8xH,YAAYgB,GAEF,MAAVC,EACL/yH,KAAK8xH,YAAYiB,GAGjB/yH,KAAK0tH,aAAentH,IAIhC8vH,EAAmB/uF,UAAU2wF,QAAU,SAAU8B,EAAWC,GACxD,IACIzzH,EAAOwzH,EAMX,MALwB,WAApBC,GAAiCzzH,EAAK2tB,SACjCluB,KAAKuyH,mBAAmBvyH,KAAK2wH,YAAapwH,KAC3CP,KAAK2wH,YAAYpwH,EAAKV,IAAMU,KAG/BA,EAAK2tB,SAKdmiG,EAAmB/uF,UAAUiwF,oBAAsB,SAAUv4G,GAGzD,IAAK,IAFDi7G,KACAC,KACKn0G,EAAI,EAAGA,EAAI/G,EAAMviB,OAAQspB,IACQ,cAAhC/G,EAAM+G,GAAG6nG,SAASoJ,WACpBiD,EAAOn9H,KAAKkiB,EAAM+G,IAG1B,GAAIk0G,EAAOx9H,OAAS,EAGhB,IAFAy9H,EAAap9H,KAAKm9H,EAAO,IACzBj0H,KAAKwwH,aAAa15H,KAAKm9H,EAAO,IACvBC,EAAaz9H,OAAS,GAAG,CAC5B,IAAIsW,EAAQmnH,EAAaA,EAAaz9H,OAAS,GAC3Cs/B,EAAa/1B,KAAKm0H,uBAAuBpnH,GAC7C,GAAIgpB,EAAWt/B,OAAS,EAAG,CACvB,IAAImX,EAAQmoB,EAAW,GACnBq+F,EAAcr+F,EAAWA,EAAWt/B,OAAS,GAC7C2qC,GAAmBxzB,EAAM/N,GAAIG,KAAKwwH,eAClC4D,EAAYxM,SAAS+J,aAAc,EACnC3xH,KAAKywH,qBAAqB35H,KAAKs9H,KAG/BF,EAAap9H,KAAK8W,GAClB5N,KAAKwwH,aAAarqH,OAAO,EAAG,EAAGyH,SAInCsmH,EAAa/0D,QAK7BkxD,EAAmB/uF,UAAU6yF,uBAAyB,SAAUpxH,GAC5D,IAAIgzB,KACJ,GAAIhzB,EAAI21C,SAASjiD,OAAS,EAAG,CACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIqM,EAAI21C,SAASjiD,OAAQC,IAAK,CAC1C,IAAI29H,EAAMr0H,KAAK4a,UAAU7X,EAAI21C,SAAShiD,IACtC,IAAK0qC,GAAmBizF,EAAIx0H,GAAIG,KAAKwwH,cAAe,CAChD,IAAIuC,EAAS/yH,KAAK4a,UAAUy5G,EAAIjiF,UAMhC,OALc,MAAV2gF,GACAh9F,EAAWj/B,KAAKi8H,GAEpBh9F,EAAWj/B,KAAKu9H,GAChBr0H,KAAKwwH,aAAarqH,OAAO,EAAG,EAAGkuH,GACxBt+F,GAGf,OAAOA,EAEX,OAAOA,GAEJs6F,KoDhtBPiE,GAAyC,WAKzC,SAASA,KA0BT,OAlBAA,EAAwBhzF,UAAUsa,QAAU,aAQ5C04E,EAAwBhzF,UAAUqa,cAAgB,WAI9C,MAAO,2BAGX24E,EAAwBhzF,UAAUs5C,SAAW,SAAU5hE,EAAO4B,EAAW8P,EAAQ2kE,IAC7E,IAAIklC,IAAyB35C,SAAS5hE,EAAO4B,EAAW8P,EAAQ2kE,IAE7DilC,KAMPC,GAAwC,WACxC,SAASA,IACLv0H,KAAK4a,aACL5a,KAAKw0H,eAAiB,IAAIC,GAo1B9B,OA/0BAF,EAAuBjzF,UAAUozF,aAAe,SAAUn0H,EAAMgF,EAAOvO,EAAGC,EAAGsB,EAAOD,GAMhF,OAHIiN,MAAOA,EAAOovH,UAFD39H,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOA,EAAOD,OAAQA,GAEbigB,KAAMhT,EAAO0uH,QAAQ,EACvDt7E,QAASp4C,EAAKo4C,QAAQ7H,QAAS4H,SAAUn4C,EAAKm4C,SAAS5H,UAQ/DyjF,EAAuBjzF,UAAUszF,SAAW,SAAUr0H,GAClD,IAAIsvE,KACJ,GAAItvE,EAAM,CACN,IAAK,IAAI7J,EAAI,EAAG6J,EAAKo4C,QAAQliD,OAAS,GAAKC,EAAI6J,EAAKo4C,QAAQliD,OAAQC,IAChEm5E,EAAM/4E,KAAKkJ,KAAK4a,UAAUra,EAAKo4C,QAAQjiD,KAE3C,IAASA,EAAI,EAAG6J,EAAKm4C,SAASjiD,OAAS,GAAKC,EAAI6J,EAAKm4C,SAASjiD,OAAQC,IAClEm5E,EAAM/4E,KAAKkJ,KAAK4a,UAAUra,EAAKm4C,SAAShiD,KAGhD,OAAOm5E,GAKX0kD,EAAuBjzF,UAAUuzF,UAAY,SAAUC,GAInD,IAAK,IAHDC,KACAC,EAAO,KACPC,GAAW,IACNp4H,EAAK,EAAG6f,EAAKC,OAAOC,KAAKk4G,GAAWj4H,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAM/D,IAAK,IAJDw3C,EAAOygF,EADHp4G,EAAG7f,IAEPq4H,EAAQl1H,KAAK40H,SAASvgF,GACtBqE,EAAW,EACXC,EAAU,EACL54B,EAAI,EAAGA,EAAIm1G,EAAMz+H,OAAQspB,IAAK,CACzB/f,KAAKm1H,mBAAmBD,EAAMn1G,IAAI,GACpCxH,OAAS87B,EAAK97B,KAClBmgC,IAGAC,IAGQ,IAAZA,GAAiBD,EAAW,GAC5Bq8E,EAAMj+H,KAAKu9C,GAEf,IAAIoK,EAAO/F,EAAWC,EAClB8F,EAAOw2E,IACPA,EAAUx2E,EACVu2E,EAAO3gF,GAMf,OAHqB,IAAjB0gF,EAAMt+H,QAAwB,MAARu+H,GACtBD,EAAMj+H,KAAKk+H,GAERD,GAMXR,EAAuBjzF,UAAU6zF,mBAAqB,SAAUplD,EAAMxtE,GAClE,IAAI6yH,EAAgBp1H,KAAK4a,UAAUm1D,EAAK39B,UACpC7vC,IACA6yH,EAAgBp1H,KAAK4a,UAAUm1D,EAAKtuE,WAExC,IAAK,IAAI/K,EAAI,EAAGA,EAAIsJ,KAAK80H,SAASr+H,OAAQC,IACtC,GAAIsJ,KAAK80H,SAASp+H,GAAG6hB,OAAS68G,EAAcv1H,GACxC,OAAOG,KAAK80H,SAASp+H,GAG7B,OAAO,MAMX69H,EAAuBjzF,UAAU+zF,SAAW,SAAUpB,EAAQqB,EAAUvlD,EAAMwlD,EAAaC,EAAmBC,GAC1G,GAAc,MAAVxB,EAAgB,CAChB,IAAIyB,EAAWzB,EAAO17G,KACtB,GAAuB,MAAlBk9G,GAA4D,MAA5BA,EAAeC,GAAoB,CACvC,MAAzBH,EAAYG,KACZH,EAAYG,GAAYzB,GAEN,MAAlBwB,UACOA,EAAeC,GAI1B,IAAK,IAFD7lD,EAAQ7vE,KAAK40H,SAASX,GACtB0B,KACKj/H,EAAI,EAAGA,EAAIm5E,EAAMp5E,OAAQC,IAC9Bi/H,EAAaj/H,GAAKsJ,KAAKm1H,mBAAmBtlD,EAAMn5E,IAAI,KAAUu9H,EAElE,IAASv9H,EAAI,EAAGA,EAAIm5E,EAAMp5E,OAAQC,IAC9B,IAAK4+H,GAAYK,EAAaj/H,GAAI,CAG9B,IAAK,IAFD+B,EAAOuH,KAAKm1H,mBAAmBtlD,EAAMn5E,IAAKi/H,EAAaj/H,IACvDk/H,EAAW,EACNv/H,EAAI,EAAGA,EAAIw5E,EAAMp5E,OAAQJ,IAC9B,GAAIA,IAAMK,EAAV,CAII,IAAIm/H,EAAYF,EAAat/H,GACb2J,KAAKm1H,mBAAmBtlD,EAAMx5E,IAAKw/H,KACjCp9H,IACVo9H,EACAD,IAGAA,KAKZA,GAAY,IACZL,EAAcv1H,KAAKq1H,SAAS58H,EAAM68H,EAAUzlD,EAAMn5E,GAAI6+H,EAAaC,EAAmBC,UAMlG,GAA6B,MAAzBF,EAAYG,GAEZ,IAASh/H,EAAI,EAAGA,EAAI8+H,EAAkB/+H,OAAQC,IAAK,CAC/C,IAAIo/H,EAAON,EAAkB9+H,GAC7B,GAAsB,MAAlBo/H,EAAKJ,GAAmB,CACxB,IAAK,IAAI74H,EAAK,EAAG6f,EAAKC,OAAOC,KAAKk5G,GAAOj5H,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC3D,IAAIqwB,EAAMxQ,EAAG7f,GACb04H,EAAYroG,GAAO4oG,EAAK5oG,GAI5B,OADAsoG,EAAkBrvH,OAAOzP,EAAG,GACrB6+H,IAM3B,OAAOA,GAKXhB,EAAuBjzF,UAAUssF,eAAiB,SAAU50G,GACxDA,EAAQA,EAAM83B,QAGd,IAAK,IAFDz0B,EAAO,KACPonB,EAAQ,KACH/sC,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAE9B,GADA2lB,EAAOrD,EAAMtiB,GAAGi+H,SACZlxF,EAAO,CACP,IAAI5gC,EAAQpG,KAAK+I,IAAIi+B,EAAMzsC,EAAIysC,EAAMlrC,MAAO8jB,EAAKrlB,EAAIqlB,EAAK9jB,OACtDuK,EAASrG,KAAK+I,IAAIi+B,EAAMxsC,EAAIwsC,EAAMnrC,OAAQ+jB,EAAKplB,EAAIolB,EAAK/jB,QAC5DmrC,EAAMzsC,EAAIyF,KAAKqK,IAAI28B,EAAMzsC,EAAGqlB,EAAKrlB,GACjCysC,EAAMxsC,EAAIwF,KAAKqK,IAAI28B,EAAMxsC,EAAGolB,EAAKplB,GACjCwsC,EAAMlrC,MAAQsK,EAAQ4gC,EAAMzsC,EAC5BysC,EAAMnrC,OAASwK,EAAS2gC,EAAMxsC,OAG9BwsC,GAAUzsC,EAAGqlB,EAAKrlB,EAAGC,EAAGolB,EAAKplB,EAAGsB,MAAO8jB,EAAK9jB,MAAOD,OAAQ+jB,EAAK/jB,QAGxE,OAAOmrC,GAMX8wF,EAAuBjzF,UAAUs5C,SAAW,SAAU5hE,EAAO4B,EAAWgoG,EAAYvzB,GAChFrvF,KAAK4a,UAAYA,EACjB,IAAI8P,GACA44F,kBAAmBV,EAAWU,kBAAmBC,gBAAiBX,EAAWW,gBAC7EzyG,YAAa8xG,EAAW9xG,YAAailH,QAASnT,EAAWjgH,OAAOC,KAAMozH,QAASpT,EAAWjgH,OAAOI,KAE1E,gBAAvB2nB,EAAO5Z,YACP4Z,EAAOsrG,SAAWpT,EAAWjgH,OAAOI,IAER,gBAAvB2nB,EAAO5Z,cACZ4Z,EAAOqrG,SAAWnT,EAAWjgH,OAAOC,MAExC5C,KAAK80H,YAEL,IAAK,IADDmB,KACKv/H,EAAI,EAAGA,EAAIsiB,EAAMviB,OAAQC,IAAK,CACnC,IAAI6J,EAAOP,KAAK00H,aAAa17G,EAAMtiB,GAAIsiB,EAAMtiB,GAAGmJ,GAAI,EAAG,EAAGmZ,EAAMtiB,GAAGqX,WAAWxV,MAAOygB,EAAMtiB,GAAGqX,WAAWzV,QACzG0H,KAAK80H,SAASh+H,KAAKyJ,GACnB01H,EAAgB11H,EAAKgY,MAAQhY,EAEjC,IACI21H,EADAV,KAEJU,EAAiBl2H,KAAK60H,UAAUoB,GAChC,IAASv/H,EAAI,EAAGA,EAAIw/H,EAAez/H,OAAQC,IAAK,CAC5C,IAAIy/H,KACJX,EAAkB1+H,KAAKq/H,GACvBn2H,KAAKq1H,SAASa,EAAex/H,IAAI,EAAM,KAAMy/H,EAAWX,EAAmBS,GAG1E,IADDG,GAAUL,QAAS,EAAGC,QAAS,GACnC,IAASt/H,EAAI,EAAGA,EAAI8+H,EAAkB/+H,OAAQC,IAAK,CAC3Cy/H,EAAYX,EAAkB9+H,GAElC,IAAK,IADD2/H,KACKx5H,EAAK,EAAG6f,EAAKC,OAAOC,KAAKu5G,GAAYt5H,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAChE,IAAIqwB,EAAMxQ,EAAG7f,GACbw5H,EAAIv/H,KAAKq/H,EAAUjpG,IAEvB,IAAInX,EAAQ,IAAIugH,GAAiBt2H,KAAMq2H,EAAKH,EAAgBxrG,GAC5D1qB,KAAKu2H,WAAWxgH,GAChB/V,KAAKw2H,cAAczgH,GACnB/V,KAAKy2H,cAAc1gH,GACnBqgH,EAAQp2H,KAAK02H,eAAe3gH,EAAOqgH,EAAML,QAASK,EAAMJ,SAIvD,IAFD7E,EAAcnxH,KAAK4tH,eAAe5tH,KAAK80H,UACvC1D,GAAS/hC,EAASr4F,EAAIm6H,EAAY54H,OAAS,EAC/C,IAAS7B,EAAI,EAAGA,EAAIsJ,KAAK80H,SAASr+H,OAAQC,IAAK,CAC3C,IAAIigI,EAAS32H,KAAK80H,SAASp+H,GAC3B,GAAIigI,EAAQ,CACR,IAAIC,EAAQ52H,KAAK4a,UAAU+7G,EAAOp+G,MAClCq+G,EAAM76H,QAAU,EAChB66H,EAAM56H,QAAU,EAEhB,IAAIwuH,EAAMmM,EAAOhC,SAAS39H,GAAK4/H,EAAM76H,QAAW66H,EAAM7oH,WAAWxV,MAAQ,GAAOmyB,EAAOqrG,QACnFp/F,EAAMggG,EAAOhC,SAAS19H,GAAK2/H,EAAM56H,QAAW46H,EAAM7oH,WAAWzV,OAAS,GAAOoyB,EAAOsrG,QACpFh/H,EAAIwzH,EACJvzH,EAAI0/B,EACmB,gBAAvBjM,EAAO5Z,YACP7Z,EAAIk6H,EAAY74H,OAASq+B,EAEG,gBAAvBjM,EAAO5Z,cACZ9Z,EAAIm6H,EAAY54H,MAAQiyH,GAE5BxzH,GAAKo6H,EACLwF,EAAM76H,SAAW/E,EAAI4/H,EAAM76H,QAC3B66H,EAAM56H,SAAW/E,EAAI2/H,EAAM56H,WAOvCu4H,EAAuBjzF,UAAUo1F,eAAiB,SAAU3gH,EAAOggH,EAASC,GACxE,IAAIU,EAAiB12H,KAAK62H,qBAAqBd,EAASC,EAASh4G,OAAQjI,GAIzE,OAHA2gH,EAAe3gH,MAAQA,EACvB2gH,EAAeI,gBAAkB,KACjC92H,KAAK+2H,sBAAsBL,IAEvBX,QAASW,EAAeX,QAAUhgH,EAAM2U,OAAO44F,kBAC/C0S,QAASU,EAAeV,QAAUjgH,EAAM2U,OAAO64F,kBAMvDgR,EAAuBjzF,UAAUu1F,qBAAuB,SAAUd,EAASC,EAASh4G,EAAQjI,GACxF,IAAIihH,KAaJ,MAZiC,gBAA7BjhH,EAAM2U,OAAO5Z,aAA8D,gBAA7BiF,EAAM2U,OAAO5Z,aAC3DkmH,EAAgB1T,kBAAoBvtG,EAAM2U,OAAO44F,kBACjD0T,EAAgBzT,gBAAkBxtG,EAAM2U,OAAO64F,kBAG/CyT,EAAgB1T,kBAAoBvtG,EAAM2U,OAAO64F,gBACjDyT,EAAgBzT,gBAAkBxtG,EAAM2U,OAAO44F,mBAEnD0T,EAAgBlmH,YAAc,QAE9BkmH,EAAgBjB,QAAUiB,EAAgBjB,QAAUA,EACpDiB,EAAgBhB,QAAUgB,EAAgBhB,QAAUA,EAC7CgB,GAKXzC,EAAuBjzF,UAAU21F,oBAAsB,SAAUD,EAAiBvJ,EAAO13G,GACrF,IAAIsL,GAAe,EAC8B,gBAA7C21G,EAAgBjhH,MAAM2U,OAAO5Z,aAA8E,gBAA7CkmH,EAAgBjhH,MAAM2U,OAAO5Z,cAC3FuQ,GAAe,GAEnB,IAAI3R,GAAUsnH,EAAgBzT,gBAC1B2T,EAAsB,EAC1BF,EAAgBG,aAChBH,EAAgBI,cAChB,IAAK,IAAIC,EAAYthH,EAAMuhH,QAASD,GAAa,EAAGA,IAAa,CAI7D,IAAK,IAHDE,EAAc,EACdC,EAAOzhH,EAAM0hH,MAAMJ,GACnBK,EAAcr2G,EAAe21G,EAAgBhB,QAAUgB,EAAgBjB,QAClEr/H,EAAI,EAAGA,EAAI8gI,EAAK/gI,OAAQC,IAAK,CAClC,IAAI6J,EAAOi3H,EAAK9gI,GAChB,GAAIsJ,KAAKw0H,eAAemD,SAASp3H,GAAO,CACpC,IAAI0zH,EAAS1zH,EACb,GAAI0zH,EAAO5/E,OAAS4/E,EAAO5/E,KAAKsE,SAAWs7E,EAAO5/E,KAAKqE,UAAW,CAC9D,IAAIn+C,EAAMyF,KAAK4a,UAAUq5G,EAAO5/E,KAAK97B,MACrC07G,EAAO17H,MAAQgC,EAAIwT,WAAWxV,MAC9B07H,EAAO37H,OAASiC,EAAIwT,WAAWzV,OAC/Bi/H,EAAc96H,KAAK+I,IAAI+xH,EAAcl2G,EAAe4yG,EAAO17H,MAAQ07H,EAAO37H,cAI9E,GAAIiI,EAAM,CACN,IAAIwvE,EAAOxvE,EACPq3H,EAAW,EACG,MAAd7nD,EAAKF,QACL+nD,EAAW7nD,EAAKF,MAAMp5E,QAE1B8J,EAAKhI,MAAyB,IAAhBq/H,EAAW,GAG7Bv2G,IACK9gB,EAAKjI,SACNiI,EAAKjI,OAAS,IAItBo/H,IAAgBr2G,EAAe9gB,EAAKjI,OAASiI,EAAKhI,OAAS,EAC3DyH,KAAK63H,MAAMt3H,EAAM82H,EAAWK,IAAar2G,GACzCrhB,KAAK83H,gBAAgBv3H,EAAM82H,EAAWK,IACtCA,IAAiBr2G,EAAe9gB,EAAKjI,OAASiI,EAAKhI,OAAS,EAAOy+H,EAAgB1T,mBACjE0T,EAAgBF,kBAC9BE,EAAgBF,gBAAkBY,EAClCV,EAAgBe,WAAaV,GAEjCL,EAAgBG,UAAUE,GAAaK,EAE3CV,EAAgBI,WAAWC,GAAa3nH,EACxC,IAAIsoH,EAAqBT,EAAc,EAAML,EAAsB,EAAMF,EAAgBzT,gBACzF2T,EAAsBK,EACc,UAAhCP,EAAgBlmH,aAA2D,SAAhCkmH,EAAgBlmH,YAC3DpB,GAAUsoH,EAGVtoH,GAAUsoH,EAEd,IAASthI,EAAI,EAAGA,EAAI8gI,EAAK/gI,OAAQC,IAAK,CAClC,IAAI29C,EAAOmjF,EAAK9gI,GAChBsJ,KAAK63H,MAAMxjF,EAAMgjF,EAAW3nH,GAAQ2R,MAQhDkzG,EAAuBjzF,UAAUw2F,gBAAkB,SAAUv3H,EAAMwnE,EAAOxiE,GAClEvF,KAAKw0H,eAAemD,SAASp3H,GAC7BA,EAAK6P,KAAK,GAAK7K,EAGfhF,EAAK6P,KAAK23D,EAAQxnE,EAAK03H,QAAU,GAAK1yH,GAO9CgvH,EAAuBjzF,UAAUu2F,MAAQ,SAAUt3H,EAAMwnE,EAAOxiE,EAAO2yH,GAC/D33H,GAAQA,EAAK8zC,OACT9zC,EAAK8zC,KAAKsE,SAAWp4C,EAAK8zC,KAAKqE,SAC3Bw/E,EACA33H,EAAKtJ,EAAE,GAAKsO,EAGZhF,EAAKvJ,EAAE,GAAKuO,EAIZ2yH,EACA33H,EAAKtJ,EAAE8wE,EAAQxnE,EAAK03H,QAAU,GAAK1yH,EAGnChF,EAAKvJ,EAAE+wE,EAAQxnE,EAAK03H,QAAU,GAAK1yH,IAQnDgvH,EAAuBjzF,UAAU62F,gBAAkB,SAAUC,EAAOf,EAAW5J,EAAO13G,GAClF,IAAIsL,GAAe,EACoB,gBAAnC+2G,EAAMriH,MAAM2U,OAAO5Z,aAAoE,gBAAnCsnH,EAAMriH,MAAM2U,OAAO5Z,cACvEuQ,GAAe,GAKnB,IAAK,IAHDm2G,EAAOzhH,EAAM0hH,MAAMJ,GACnBgB,EAAY,EACZX,GAAer2G,EAAe+2G,EAAMpC,QAAUoC,EAAMrC,UAAYqC,EAAMtB,gBAAkBsB,EAAMjB,UAAUE,IAAc,EACjH3gI,EAAI,EAAGA,EAAI8gI,EAAK/gI,OAAQC,IAAK,CAClC,IAAI6J,EAAOi3H,EAAK9gI,GAChB,GAAIsJ,KAAKw0H,eAAemD,SAASp3H,GAAO,CACpC,IAAIhG,EAAMyF,KAAK4a,UAAUra,EAAK8zC,KAAK97B,MACnChY,EAAKhI,MAAQgC,EAAIwT,WAAWxV,MAC5BgI,EAAKjI,OAASiC,EAAIwT,WAAWzV,OAC7B+/H,EAAY57H,KAAK+I,IAAI6yH,EAAW93H,EAAKjI,YAEpC,CACD,IAAIy3E,EAAOxvE,EACPq3H,EAAW,EACG,MAAd7nD,EAAKF,QACL+nD,EAAW7nD,EAAKF,MAAMp5E,QAEtB4qB,EACA9gB,EAAKjI,OAA0B,IAAhBs/H,EAAW,GAG1Br3H,EAAKhI,MAAyB,IAAhBq/H,EAAW,GAGjC,IAAIrmG,GAAQlQ,EAAe9gB,EAAKjI,OAASiI,EAAKhI,OAAS,EACvDm/H,GAAenmG,EACfvxB,KAAK63H,MAAMt3H,EAAM82H,EAAWK,IAAar2G,GACzCrhB,KAAK83H,gBAAgBv3H,EAAM82H,EAAWK,GACtCA,GAAgBnmG,EAAO6mG,EAAM9U,oBAMrCiR,EAAuBjzF,UAAUg3F,cAAgB,SAAUtB,EAAiBuB,EAAQxiH,GAChF/V,KAAKi3H,oBAAoBD,EAAiBuB,EAAQxiH,GAElD,IAAK,IAAIrf,EAAIsgI,EAAgBe,WAAYrhI,GAAK,EAAGA,IACzCA,EAAIqf,EAAMuhH,SACVt3H,KAAKm4H,gBAAgBnB,EAAiBtgI,EAAG6hI,EAAQxiH,GAGzD,IAASrf,EAAIsgI,EAAgBe,WAAa,EAAGrhI,GAAKqf,EAAMuhH,QAAS5gI,IACzDA,EAAI,GACJsJ,KAAKm4H,gBAAgBnB,EAAiBtgI,EAAG6hI,EAAQxiH,IAQ7Dw+G,EAAuBjzF,UAAUk3F,WAAa,SAAUj4H,EAAMk4H,GAE1D,GAAiB,MAAbA,GAAsC,MAAjBl4H,EAAKm4H,UAA0C,MAAtBD,EAAUC,UACrDn4H,EAAKm4H,SAASjiI,OAASgiI,EAAUC,SAASjiI,OAAQ,CACrD,GAAI8J,EAAKm4H,WAAaD,EAAUC,SAC5B,OAAO,EAEX,GAAqB,MAAjBn4H,EAAKm4H,UAAqC,MAAjBn4H,EAAKm4H,SAC9B,OAAO,EAEX,IAAK,IAAIhiI,EAAI,EAAGA,EAAI6J,EAAKm4H,SAASjiI,OAAQC,IACtC,GAAI6J,EAAKm4H,SAAShiI,KAAO+hI,EAAUC,SAAShiI,GACxC,OAAO,EAGf,OAAO,EAEX,OAAO,GAKX69H,EAAuBjzF,UAAUq3F,mBAAqB,SAAUtkF,EAAMukF,GAClE,IAAID,KAKJ,OAJAA,EAAmBtkF,KAAOA,GAAc,KACxCskF,EAAmBC,cAAgBA,GAAgC,EACnED,EAAmB9O,SAAU,EAC7B8O,EAAmBE,UAAY,KACxBF,GAKXpE,EAAuBjzF,UAAUw3F,QAAU,SAAU9B,EAAiBjhH,GAIlE,IAAK,IAHDgjH,KACAjvG,GAAQA,QACR0tG,KACK9gI,EAAI,EAAGA,GAAKqf,EAAMuhH,QAAS5gI,IAAK,CACrC8gI,EAAK9gI,GAAKqf,EAAM0hH,MAAM/gI,GACtB,IAAK,IAAIL,EAAI,EAAGA,EAAImhI,EAAK9gI,GAAGD,OAAQJ,IAAK,CACrC,IAAIkK,EAAOi3H,EAAK9gI,GAAGL,GACf2iI,EAAch5H,KAAK24H,mBAAmBp4H,EAAM7J,GAChDsiI,EAAYH,UAAYxiI,EACxB2iI,EAAYnP,SAAU,EACtBkP,EAASjiI,KAAKkiI,GACdjjH,EAAMkjH,uBAAuBnvG,EAAKvpB,EAAMy4H,GAAa,IAM7D,IAHA,IAAIE,EAA6B,GAAlBH,EAAStiI,OACpBilC,EAAQ,EAELq9F,EAAStiI,OAAS,GAAKilC,GAASw9F,GAAU,CAC7C,IAAIC,EAAcJ,EAASK,QACvB/kF,EAAO8kF,EAAY9kF,KACnBgjF,EAAY8B,EAAYP,cACxBC,EAAYM,EAAYN,UACxBQ,EAA0Br5H,KAAKw0H,eAAe8E,yBAAyBjlF,EAAMgjF,GAC7EkC,EAA8Bv5H,KAAKw0H,eAAe8E,yBAAyBjlF,EAAMgjF,GAAW,GAC5FmC,EAAqBH,EAAwB5iI,OAC7CgjI,EAAqBF,EAA4B9iI,OACjDijI,EAAkB15H,KAAK25H,aAAa3C,EAAiBqC,EAAyBhC,EAAY,GAC1FuC,EAAsB55H,KAAK25H,aAAa3C,EAAiBuC,EAA6BlC,EAAY,GAClGwC,EAAyBL,EAAqBC,EAC9CtmE,EAAkBnzD,KAAKw0H,eAAesF,gBAAgBzlF,EAAMgjF,GAC5D0C,EAAa5mE,EACb0mE,EAAyB,IACzBE,GAAcL,EAAkBF,EAAqBI,EAAsBH,GAAsBI,GAErG,IAAIzY,GAAkB,EAClB4Y,OAAY//H,EAChB,GAAI8/H,EAAa5mE,EApBL,EAqBR,GAAkB,IAAd0lE,EACAmB,EAAYD,EACZ3Y,GAAkB,MAEjB,CACD,IAAI6Y,EAAWzC,EAAKH,GAAWwB,EAAY,GACvCqB,EAAYl6H,KAAKw0H,eAAesF,gBAAgBG,EAAU5C,IAC9D6C,EAAYA,EAAYD,EAAS1hI,MAAQ,EAAIy+H,EAAgBmD,iBAAmB9lF,EAAK97C,MAAQ,GAC7EwhI,GACZC,EAAYD,EACZ3Y,GAAkB,GAEb8Y,EAAYl6H,KAAKw0H,eAAesF,gBAAgBzlF,EAAMgjF,GAjC3D,IAkCA2C,EAAYE,EACZ9Y,GAAkB,QAIzB,GAAI2Y,EAAa5mE,EAvCV,EAuCuC,CAE/C,GAAI0lE,IADWrB,EAAKH,GAAW5gI,OACF,EACzBujI,EAAYD,EACZ3Y,GAAkB,MAEjB,CACD,IAAIgZ,EAAY5C,EAAKH,GAAWwB,EAAY,GACxCwB,EAAar6H,KAAKw0H,eAAesF,gBAAgBM,EAAW/C,IAChEgD,EAAaA,EAAaD,EAAU7hI,MAAQ,EAAIy+H,EAAgBmD,iBAAmB9lF,EAAK97C,MAAQ,GAC/EwhI,GACbC,EAAYD,EACZ3Y,GAAkB,GAEbiZ,EAAar6H,KAAKw0H,eAAesF,gBAAgBzlF,EAAMgjF,GArD5D,IAsDA2C,EAAYK,EACZjZ,GAAkB,IAI1BA,IACAphH,KAAK83H,gBAAgBzjF,EAAMgjF,EAAW2C,GAEtCh6H,KAAKs6H,eAAevB,EAAUjvG,EAAKuvG,EAAyBtjH,GAC5D/V,KAAKs6H,eAAevB,EAAUjvG,EAAKyvG,EAA6BxjH,IAEhE/V,KAAKw0H,eAAemD,SAASwB,EAAY9kF,QACzC8kF,EAAYtP,SAAU,GAE1BnuF,MAMR64F,EAAuBjzF,UAAUg5F,eAAiB,SAAUvB,EAAUjvG,EAAKxzB,EAAYyf,GACnF,IAAK,IAAIrf,EAAI,EAAGA,EAAIJ,EAAWG,OAAQC,IAAK,CACxC,IAAI6jI,EAAgBjkI,EAAWI,GAC3B8jI,EAAuBzkH,EAAM0kH,uBAAuB3wG,EAAKywG,GACjC,MAAxBC,IACqC,IAAjCA,EAAqB3Q,UACrB2Q,EAAqB3Q,SAAU,EAC/BkP,EAASjiI,KAAK0jI,MAQ9BjG,EAAuBjzF,UAAUq4F,aAAe,SAAU3C,EAAiB0D,EAAgBrD,GACvF,GAA8B,IAA1BqD,EAAejkI,OACf,OAAO,EAGX,IAAK,IADDkkI,KACKjkI,EAAI,EAAGA,EAAIgkI,EAAejkI,OAAQC,IACvCikI,EAAajkI,GAAKsJ,KAAKw0H,eAAesF,gBAAgBY,EAAehkI,GAAI2gI,GAK7E,GAHAsD,EAAazyG,KAAK,SAAUlY,EAAGC,GAC3B,OAAOD,EAAIC,IAEXyqH,EAAejkI,OAAS,GAAM,EAC9B,OAAOkkI,EAAal+H,KAAKm3B,MAAM8mG,EAAejkI,OAAS,IAGvD,IAAImkI,EAAcF,EAAejkI,OAAS,EAG1C,OAFiBkkI,EAAaC,EAAc,GAC1BD,EAAaC,IACM,GAM7CrG,EAAuBjzF,UAAUy1F,sBAAwB,SAAUC,GAC/D,IAAI31G,GAAe,EAC8B,gBAA7C21G,EAAgBjhH,MAAM2U,OAAO5Z,aAA8E,gBAA7CkmH,EAAgBjhH,MAAM2U,OAAO5Z,cAC3FuQ,GAAe,GAEnB21G,EAAgB6D,kBAChB,IAAI9kH,EAAQihH,EAAgBjhH,MAC5BsL,EAAe21G,EAAgB8D,cAAgB,EAAM9D,EAAgB+D,cAAgB,EACrF/6H,KAAKs4H,cAActB,GAAmBjhH,MAAOA,GAASA,GACtD/V,KAAK84H,QAAQ9B,EAAiBjhH,GAC9B,IAAIilH,EAAkB,IACjBhE,EAAgBiE,gBACjBjE,EAAgBiE,cAAgB,GAEpC,IAAK,IAAIvkI,EAAI,EAAGA,EAAIsgI,EAAgBiE,cAAevkI,IAAK,CAGpD,IAAK2qB,EAAe21G,EAAgB8D,cAAgB9D,EAAgB+D,eAAiBC,EAAiB,CAClG,IAAK,IAAI3kI,EAAI,EAAGA,EAAI0f,EAAM0hH,MAAMhhI,OAAQJ,IAEpC,IAAK,IADDmhI,EAAOzhH,EAAM0hH,MAAMphI,GACd0pB,EAAI,EAAGA,EAAIy3G,EAAK/gI,OAAQspB,IAAK,CAClC,IAAIs0B,EAAOmjF,EAAKz3G,GAChB/f,KAAK63H,MAAMxjF,EAAMh+C,EAAG2J,KAAKw0H,eAAesF,gBAAgBzlF,EAAMh+C,KAAIgrB,GAG1E25G,EAAkB35G,EAAe21G,EAAgB8D,cAAgB9D,EAAgB+D,cAErF15G,EAAe21G,EAAgB8D,cAAgB,EAAI9D,EAAgB+D,cAAgB,EAEvF/6H,KAAKk7H,iBAAiBlE,EAAiBjhH,IAK3Cw+G,EAAuBjzF,UAAU45F,iBAAmB,SAAUlE,EAAiBjhH,GAE3E,IAAK,IADD++G,EAAW90H,KAAKm7H,UAAUplH,EAAMqlH,cAC3B1kI,EAAI,EAAGA,EAAIo+H,EAASr+H,OAAQC,IACjCsJ,KAAKq7H,kBAAkBrE,EAAiBlC,EAASp+H,KAMzD69H,EAAuBjzF,UAAUg6F,4BAA8B,SAAUtE,EAAiB3iF,EAAMr9C,EAAGC,GACnF+/H,EAAgBjhH,MAA5B,IACI4+G,EAAWtgF,EAAKsgF,SAChBx3H,EAAS,KAOb,OANgB,MAAZw3H,IACAx3H,GAAWnG,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOo8H,EAASp8H,MAAOD,OAAQq8H,EAASr8H,QAC3Dq8H,EAAS39H,IAAMA,GAAK29H,EAAS19H,IAAMA,IACnCo9C,EAAKsgF,SAAWx3H,IAGjBA,GAKXo3H,EAAuBjzF,UAAU+5F,kBAAoB,SAAUrE,EAAiB3iF,GAC5E,IAAIhzB,GAAe,EAC8B,gBAA7C21G,EAAgBjhH,MAAM2U,OAAO5Z,aAA8E,gBAA7CkmH,EAAgBjhH,MAAM2U,OAAO5Z,cAC3FuQ,GAAe,GAEnB,IAAIk6G,EAAWlnF,EAAKA,KAChBmnF,EAAYnnF,EAAKr9C,EAAE,GAAKq9C,EAAK97C,MAAQ,EACrCkjI,EAAYpnF,EAAKp9C,EAAE,GAAKo9C,EAAK/7C,OAAS,EAC1C0H,KAAKs7H,4BAA4BtE,EAAiBuE,EAAUC,EAAWC,GACnEp6G,GACK21G,EAAgBhB,UACjBgB,EAAgBhB,QAAU,GAE9BgB,EAAgBhB,QAAUv5H,KAAK+I,IAAIwxH,EAAgBhB,QAASyF,EAAYpnF,EAAK/7C,UAGxE0+H,EAAgBjB,UACjBiB,EAAgBjB,QAAU,GAE9BiB,EAAgBjB,QAAUt5H,KAAK+I,IAAIwxH,EAAgBjB,QAASyF,EAAYnnF,EAAK97C,SAMrFg8H,EAAuBjzF,UAAU65F,UAAY,SAAUr1B,GACnD,IAAIjkC,KACJ,GAAIikC,EAAOh8E,IACP,IAAK,IAAIjtB,EAAK,EAAG6f,EAAKC,OAAOC,KAAKkpF,EAAOh8E,KAAMjtB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACjE,IAAIqwB,EAAMxQ,EAAG7f,GACbglE,EAAK/qE,KAAKgvG,EAAOh8E,IAAIoD,IAG7B,OAAO20C,GAKX0yD,EAAuBjzF,UAAUm1F,cAAgB,SAAU1gH,GACvD/V,KAAKw0H,eAAenqG,QAAQtU,IAKhCw+G,EAAuBjzF,UAAUk1F,cAAgB,SAAUzgH,GACvD/V,KAAK07H,YAAY3lH,GACjB/V,KAAK27H,SAAS5lH,IAKlBw+G,EAAuBjzF,UAAUo6F,YAAc,SAAU3lH,GAIrD,IAHA,IAAI6lH,EAAa7lH,EAAM6lH,WACnBC,EAAgB9lH,EAAM+lH,oBAAoB/lH,EAAMqlH,cAChDW,EAAiBH,EAAW9qF,QACzB8qF,EAAWnlI,OAAS,GAAG,CAM1B,IAAK,IAJDulI,GADAC,EAAeL,EAAW,IACWM,iBACrCC,EAAkBF,EAAaG,iBAC/BC,GAAkB,EAClBC,EAAe,IACV5lI,EAAI,EAAGA,EAAIslI,EAAsBvlI,OAAQC,IAAK,CAEnD,GAA6B,WADzB6lI,EAAeP,EAAsBtlI,IACxB0Z,KAAK,GAKjB,CACDisH,GAAkB,EAClB,MALA,IAAI5D,EAAY8D,EAAah6H,OAC7B+5H,EAAe7/H,KAAKqK,IAAIw1H,EAAc7D,EAAUroH,KAAK,GAAK,GAQlE,GAAIisH,EAAiB,CAMjB,GALAJ,EAAa7rH,KAAK,GAAKksH,EAClBvmH,EAAMuhH,UACPvhH,EAAMuhH,QAAU,KAEpBvhH,EAAMuhH,QAAU76H,KAAKqK,IAAIiP,EAAMuhH,QAASgF,GACjB,MAAnBH,EACA,IAASzlI,EAAI,EAAGA,EAAIylI,EAAgB1lI,OAAQC,IAAK,EACzC6lI,EAAeJ,EAAgBzlI,IACtB0Z,KAAK,GAAK,SAII,KAFvBqoH,EAAY8D,EAAav5H,QAEfoN,KAAK,KACfwrH,EAAW9kI,KAAK2hI,GAGhBA,EAAUroH,KAAK,IAAM,GAIjCwrH,EAAWxC,YAEV,CAED,IAAIoD,EAAcZ,EAAWxC,QAE7B,GADAwC,EAAW9kI,KAAKmlI,GACZO,IAAgBP,GAAsC,IAAtBL,EAAWnlI,OAG3C,OAIZ,IAASC,EAAI,EAAGA,EAAImlI,EAAcplI,OAAQC,IACtCmlI,EAAcnlI,GAAG0Z,KAAK,IAAM2F,EAAMuhH,QAEtC,IAAS5gI,EAAI,EAAGA,EAAIqlI,EAAetlI,OAAQC,IAIvC,IAAK,IAHDulI,EACAQ,EAAkB,EAEbpmI,GADL2lI,GAFAC,EAAeF,EAAerlI,IAEO0lI,iBAC5B,GAAG/lI,EAAI2lI,EAAsBvlI,OAAQJ,IAAK,CACnD,IAAIkmI,EACA9D,GADA8D,EAAeP,EAAsB3lI,IACZ2M,OAC7Bi5H,EAAa7rH,KAAK,GAAK3T,KAAK+I,IAAIi3H,EAAiBhE,EAAUroH,KAAK,GAAK,GACrEqsH,EAAkBR,EAAa7rH,KAAK,GAG5C2F,EAAMuhH,QAAU,IAAYvhH,EAAMuhH,SAKtC/C,EAAuBjzF,UAAUq6F,SAAW,SAAU5lH,GAClDA,EAAM4lH,YAKVpH,EAAuBjzF,UAAUi1F,WAAa,SAAUxgH,GACpD,IAAI2mH,KACJ3mH,EAAM6lH,cAGN,IAAK,IAFDe,EAAmB5mH,EAAM+lH,oBAAoB/lH,EAAMqlH,cACnDwB,KACKlmI,EAAI,EAAGA,EAAIimI,EAAiBlmI,OAAQC,IACzCimI,EAAiBjmI,GAAG0Z,KAAK,IAAM,EAC/BwsH,EAAYD,EAAiBjmI,GAAGmJ,IAAM88H,EAAiBjmI,GAE3D,IAAImmI,EAAa,KACjB,GAAmB,MAAf9mH,EAAMg/G,MAAe,CACrB,IAAI+H,EAAa/mH,EAAMg/G,MACvB8H,KACA,IAASnmI,EAAI,EAAGA,EAAIomI,EAAWrmI,OAAQC,IACnCmmI,EAAWnmI,GAAKqf,EAAMgnH,cAAchnH,EAAMqlH,aAAc0B,EAAWpmI,IAC9C,MAAjBmmI,EAAWnmI,IACXqf,EAAM6lH,WAAW9kI,KAAK+lI,EAAWnmI,IAI7Cqf,EAAMinH,MAAM,yBAA0BH,GAAY,EAAM,MAAQH,UAAWA,EAAWE,YAAaA,IACnG,IAAIK,EAAgBlnH,EAAMyrB,MAAMk7F,EAAW,MAAM,GACjD3mH,EAAMinH,MAAM,uBAAwBJ,GAAa,EAAMK,GAAiBP,UAAWA,EAAWE,YAAaA,KAM/GrI,EAAuBjzF,UAAUwa,OAAS,SAAUvhD,EAAKi2B,GACrD,IAAI9Q,EAAQ8Q,EAAMtS,QAAQ3jB,GAI1B,OAHe,IAAXmlB,GACA8Q,EAAMrqB,OAAOuZ,EAAO,GAEjBnlB,GAMXg6H,EAAuBjzF,UAAU47F,OAAS,SAAUC,EAAgBp1D,GAChE,IAAI33D,EAAO+sH,EAAe56H,OAC1B46H,EAAe56H,OAAS46H,EAAen6H,OACvCm6H,EAAen6H,OAASoN,EACxB+sH,EAAeC,YAAcD,EAAeC,YAMhD7I,EAAuBjzF,UAAU+7F,gBAAkB,SAAU96H,EAAQS,EAAQsyH,GACzEA,EAAwB,MAAZA,GAAoBA,EAGhC,IAAK,IAFDzlD,EAAQ7vE,KAAK40H,SAASryH,GACtBpF,KACKzG,EAAI,EAAGA,EAAIm5E,EAAMp5E,OAAQC,IAAK,CACnC,IAAI+R,EAAMzI,KAAKm1H,mBAAmBtlD,EAAMn5E,IAAI,GACxC4mI,EAAMt9H,KAAKm1H,mBAAmBtlD,EAAMn5E,IAAI,IACvC+R,IAAQlG,GAAU+6H,IAAQt6H,IAAasyH,GAAY7sH,IAAQzF,GAAUs6H,IAAQ/6H,IAC9EpF,EAAOrG,KAAK+4E,EAAMn5E,IAG1B,OAAOyG,GAEJo3H,KAKP+B,GAAkC,WAClC,SAASA,EAAiB5rG,EAAQoqG,EAAUC,EAAOwI,GAC/Cv9H,KAAKw9H,2BAA6B,EAElCx9H,KAAKy9H,SAAW,EAChBz9H,KAAK09H,iBAAmB,IAAInJ,GAC5Bv0H,KAAK+0H,MAAQA,EACb/0H,KAAKo7H,cAAiBtxG,QACtB,IAAI6zG,KACJ39H,KAAK0qB,OAAS6yG,EACdv9H,KAAKs3H,QAAU,IACft3H,KAAK49H,mBAAqBlzG,EAC1B1qB,KAAK69H,oBAAoBnzG,EAAQoqG,EAAU6I,GAC3C,IAAK,IAAIjnI,EAAI,EAAGA,EAAIo+H,EAASr+H,OAAQC,IAAK,CAEtC,IAAK,IADDm5E,EAAQ8tD,EAAiBjnI,GAAG0lI,iBACvB/lI,EAAI,EAAGA,EAAIw5E,EAAMp5E,OAAQJ,IAAK,CACnC,IAAIkmI,EAAe1sD,EAAMx5E,GACrBynI,EAAYvB,EAAa1sD,MAC7B,GAAiB,MAAbiuD,GAAqBA,EAAUrnI,OAAS,EAAG,CAC3C,IAAIsnI,EAAWD,EAAU,GACrBE,EAAatzG,EAAOyqG,mBAAmB4I,GAAU,GACjDE,EAAqBj+H,KAAK+8H,cAAc/8H,KAAKo7H,aAAc4C,GAC3DL,EAAiBjnI,KAAOunI,IACxBD,EAAatzG,EAAOyqG,mBAAmB4I,GAAU,GACjDE,EAAqBj+H,KAAK+8H,cAAc/8H,KAAKo7H,aAAc4C,IAErC,MAAtBC,GAA8BN,EAAiBjnI,KAAOunI,IACtD1B,EAAav5H,OAASi7H,EAC6B,IAA/CA,EAAmB/B,iBAAiBzlI,SACpCwnI,EAAmB/B,qBAEnB+B,EAAmB/B,iBAAiBh+G,QAAQq+G,GAAgB,GAC5D0B,EAAmB/B,iBAAiBplI,KAAKylI,KAKzDoB,EAAiBjnI,GAAG0Z,KAAK,GAAK,GAsVtC,OAhVAkmH,EAAiBh1F,UAAUu8F,oBAAsB,SAAUnzG,EAAQoqG,EAAU6I,GACzE,IAAK,IAAIjnI,EAAI,EAAGA,EAAIo+H,EAASr+H,OAAQC,IAAK,CACtCinI,EAAiBjnI,IACbM,KAAOC,KAAOmZ,QAAUikC,KAAMygF,EAASp+H,GACvCmJ,GAAIi1H,EAASp+H,GAAG6hB,KAAM2jH,oBAAsBE,qBAEhDp8H,KAAKk+H,cAAcl+H,KAAKo7H,aAActG,EAASp+H,GAAIinI,EAAiBjnI,IACpE,IAAIw+H,EAAQxqG,EAAOkqG,SAASE,EAASp+H,IACrCinI,EAAiBjnI,GAAG0lI,oBACpB,IAAK,IAAI/lI,EAAI,EAAGA,EAAI6+H,EAAMz+H,OAAQJ,IAAK,CACnC,IAAIg+C,EAAO3pB,EAAOyqG,mBAAmBD,EAAM7+H,IAAI,GAC/C,GAAIg+C,IAASygF,EAASp+H,GAAI,CACtB,IAAIynI,EAAkBzzG,EAAO2yG,gBAAgBvI,EAASp+H,GAAI29C,GAAM,GAC5D+pF,EAAgB1zG,EAAO2yG,gBAAgBvI,EAASp+H,GAAI29C,GAAM,GAC9D,GAAuB,MAAnB8pF,GAA2BA,EAAgB1nI,OAAS,GAA4B,EAAvB2nI,EAAc3nI,QAAc0nI,EAAgB1nI,OAAQ,CAE7G,IAAK,IADD8lI,GAAiBvlI,KAAOC,KAAOmZ,QAAUy/D,MAAOsuD,EAAiBE,QAC5DpsF,EAAI,EAAGA,EAAIksF,EAAgB1nI,OAAQw7C,IACxCsqF,EAAa8B,IAAIvnI,KAAKqnI,EAAgBlsF,GAAGpyC,IAE7C08H,EAAah6H,OAASo7H,EAAiBjnI,GAClCinI,EAAiBjnI,GAAG0lI,mBACrBuB,EAAiBjnI,GAAG0lI,qBAEpBuB,EAAiBjnI,GAAG0lI,iBAAiBl+G,QAAQq+G,GAAgB,GAC7DoB,EAAiBjnI,GAAG0lI,iBAAiBtlI,KAAKylI,KAK1DoB,EAAiBjnI,GAAG0Z,KAAK,GAAK,IAOtCkmH,EAAiBh1F,UAAUq6F,SAAW,WAClC,IAAI2C,KACJt+H,KAAKy3H,SACL,IAAK,IAAI/gI,EAAI,EAAGA,EAAIsJ,KAAKs3H,QAAU,EAAG5gI,IAClC4nI,EAAS5nI,MACTsJ,KAAKy3H,MAAM/gI,GAAK4nI,EAAS5nI,GAE7B,IAAImmI,EAAa,KACjB,GAAkB,MAAd78H,KAAK+0H,MAAe,CACpB,IAAIwJ,EAAgBv+H,KAAK+0H,MACzB8H,KACA,IAASnmI,EAAI,EAAGA,EAAI6nI,EAAc9nI,OAAQC,IAAK,CAC3C,IAAI29C,EAAOkqF,EAAc7nI,GACrBulI,EAAej8H,KAAK+8H,cAAc/8H,KAAKo7H,aAAc/mF,GACzDwoF,EAAWnmI,GAAKulI,GAGxBj8H,KAAKg9H,MAAM,mBAAoBH,GAAY,EAAO,MAAQH,UAAW,KAAME,YAAa,KAAM0B,SAAUA,KAK5GhI,EAAiBh1F,UAAUk9F,iBAAmB,SAAUz2D,EAAO02D,EAAMroI,GACjDA,EAAKsmI,UACHtmI,EAAKwmI,YADvB,IAEI5+G,EAAS5nB,EAAK4nB,OACdzd,EAAOnK,EAAKq5F,KACZ1f,EAAO35E,EAAK25E,KACZuuD,EAAWloI,EAAKkoI,SAapB,GAZK/9H,EAAK+2H,SAA4B,IAAjB/2H,EAAK+2H,UACtB/2H,EAAK+2H,SAAW,GAEf/2H,EAAK03H,SAA4B,IAAjB13H,EAAK03H,UACtB13H,EAAK03H,SAAW,GAEP,IAATwG,GAAcl+H,EAAK+2H,QAAU,GAAK/2H,EAAK03H,QAAU,IACjDqG,EAAS/9H,EAAK6P,KAAK,IAAItZ,KAAKyJ,GAC5BA,EAAK+2H,QAAU/2H,EAAK6P,KAAK,GACzB7P,EAAK03H,QAAU13H,EAAK6P,KAAK,GACzB7P,EAAK6P,KAAK,GAAKkuH,EAAS/9H,EAAK+2H,SAAS7gI,OAAS,GAErC,MAAVunB,GAA0B,MAAR+xD,EAAc,CAEhC,GADiC/xD,EAAOs5G,QAAU/2H,EAAK+2H,QACtB,EAAG,CAChCvnD,EAAKunD,QAAUt5G,EAAOs5G,QACtBvnD,EAAKkoD,QAAU13H,EAAK+2H,QACpBvnD,EAAK3/D,QACL2/D,EAAK/4E,KACL+4E,EAAK94E,KACL,IAAK,IAAIP,EAAIq5E,EAAKkoD,QAAU,EAAGvhI,EAAIq5E,EAAKunD,QAAS5gI,IAC7C4nI,EAAS5nI,GAAGI,KAAKi5E,GACjB/vE,KAAK09H,iBAAiB5F,gBAAgB/nD,EAAMr5E,EAAG4nI,EAAS5nI,GAAGD,OAAS,MAQpF6/H,EAAiBh1F,UAAU48F,cAAgB,SAAUQ,EAAKxxG,EAAK3nB,GAC3D,IAAI1F,EAAKqtB,EAAI3U,KAIT4lD,EAAWugE,EAAI50G,IAAIjqB,GAEvB,OADA6+H,EAAI50G,IAAIjqB,GAAM0F,EACP44D,GAMXm4D,EAAiBh1F,UAAU23F,uBAAyB,SAAUyF,EAAKxxG,EAAK3nB,EAAOo5H,GAC3E,IAAI9+H,EAAKqtB,EAAIrtB,GAITs+D,EAAWugE,EAAI50G,IAAIjqB,GAEvB,OADA6+H,EAAI50G,IAAIjqB,GAAM0F,EACP44D,GAMXm4D,EAAiBh1F,UAAUy7F,cAAgB,SAAU2B,EAAKxxG,GACjDltB,KAAKw9H,4BAAkE,IAApCx9H,KAAKw9H,6BACzCx9H,KAAKw9H,2BAA6B,GAEtC,IAAI39H,EAAKqtB,EAAI3U,KACb,OAAK1Y,EASE6+H,EAAI50G,IAAIjqB,GARNqtB,EAAI0xG,eAKEF,EAAI50G,IAAIoD,EAAI0xG,iBAJnB1xG,EAAI0xG,eAAiB,sBAAwB5+H,KAAKw9H,6BAC3CtwG,EAAI0xG,iBAYvBtI,EAAiBh1F,UAAUm5F,uBAAyB,SAAUiE,EAAKxxG,GAC1DltB,KAAKw9H,4BAAkE,IAApCx9H,KAAKw9H,6BACzCx9H,KAAKw9H,2BAA6B,GAEtC,IAAI39H,EAAKqtB,EAAIrtB,GACb,OAAKA,EASE6+H,EAAI50G,IAAIjqB,GARNqtB,EAAI0xG,eAKEF,EAAI50G,IAAIoD,EAAI0xG,iBAJnB1xG,EAAI0xG,eAAiB,sBAAwB5+H,KAAKw9H,6BAC3CtwG,EAAI0xG,iBAYvBtI,EAAiBh1F,UAAUw6F,oBAAsB,SAAU4C,GAEvD,IAAK,IADDvhI,KACKN,EAAK,EAAG6f,EAAKC,OAAOC,KAAK8hH,EAAI50G,KAAMjtB,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC9D,IAAIqwB,EAAMxQ,EAAG7f,GACbM,EAAOrG,KAAK4nI,EAAI50G,IAAIoD,IAExB,OAAO/vB,GAMXm5H,EAAiBh1F,UAAU07F,MAAQ,SAAU6B,EAASC,EAAUC,EAAgBrC,EAAWtmI,GACtEA,EAAKsmI,UACHtmI,EAAKwmI,YACTxmI,EAAKkoI,SAEpB,GAAgB,MAAZQ,EAAkB,CAClB,IAAK,IAAIpoI,EAAI,EAAGA,EAAIooI,EAASroI,OAAQC,IAAK,CACtC,IAAIulI,EAAe6C,EAASpoI,GACR,MAAhBulI,IACiB,MAAbS,IACAA,EAAY,IAAI//G,QAEpBvmB,EAAK4nB,OAAS,KACd5nB,EAAKq5F,KAAOwsC,EACZ7lI,EAAK25E,KAAO,KACRgvD,GAEA9C,EAAavD,YACbuD,EAAavD,SAAS,GAAK14H,KAAKy9H,SAChCxB,EAAavD,SAAS,GAAKhiI,EAC3BsJ,KAAKg/H,YAAYH,EAASnC,EAAWhmI,EAAG,EAAGN,IAG3C4J,KAAKi/H,iBAAiBJ,EAASnC,EAAW,EAAGtmI,IAIzD4J,KAAKy9H,aAMbnH,EAAiBh1F,UAAU29F,iBAAmB,SAAUJ,EAASJ,EAAM12D,EAAO3xE,GACzDA,EAAKsmI,UACHtmI,EAAKwmI,YACTxmI,EAAKkoI,SACPloI,EAAK4nB,OAHlB,IAIIyxE,EAAOr5F,EAAKq5F,KACLr5F,EAAK25E,KAChB,GAAY,MAAR0f,EAAc,CACd,IAAIyvC,EAASzvC,EAAK5vF,GAClB,GAAoB,MAAhB4+H,EAAKS,GAAiB,CACtBT,EAAKS,GAAUzvC,EACfzvF,KAAKm/H,qBAAqBN,EAAS92D,EAAO,EAAG3xE,GAG7C,IAAK,IADDgpI,EAAgB3vC,EAAK2sC,iBAAiBtrF,QACjCp6C,EAAI,EAAGA,EAAI0oI,EAAc3oI,OAAQC,IAAK,CAC3C,IAAI6lI,EAAe6C,EAAc1oI,GAC7ByL,EAAao6H,EAAav5H,OAE9B5M,EAAK4nB,OAASyxE,EACdr5F,EAAKq5F,KAAOttF,EACZ/L,EAAK25E,KAAOwsD,EACZv8H,KAAKi/H,iBAAiBJ,EAASJ,EAAM12D,EAAQ,EAAG3xE,SAIpD4J,KAAKm/H,qBAAqBN,EAAS92D,EAAO,EAAG3xE,KAOzDkgI,EAAiBh1F,UAAU69F,qBAAuB,SAAUN,EAAS92D,EAAO02D,EAAMY,GAC9E,IAAIrhH,EAASqhH,EAAcrhH,OACvByxE,EAAO4vC,EAAc5vC,KACrB1f,EAAOsvD,EAActvD,KACzB,GAAgB,2BAAZ8uD,GAAoD,yBAAZA,EAAoC,CAC5E,IAAI/iF,EAAqB,yBAAZ+iF,EACb7+H,KAAKs/H,qBAAqBthH,EAAQyxE,EAAM1f,EAAMhI,EAAOs3D,EAAevjF,GAExD,qBAAZ+iF,GACA7+H,KAAKw+H,iBAAiBz2D,EAAO02D,EAAMY,IAM3C/I,EAAiBh1F,UAAUg+F,qBAAuB,SAAUthH,EAAQzd,EAAMwvE,EAAMhI,EAAO3xE,EAAM0lD,GACzF,IAAI4gF,EAAYtmI,EAAKsmI,UACjBE,EAAcxmI,EAAKwmI,YACRxmI,EAAKkoI,SAChBt+H,KAAK09H,iBAAiBlF,WAAWj4H,EAAMyd,KACvChe,KAAK09H,iBAAiBR,OAAOntD,EAAM,GACnC/vE,KAAK09H,iBAAiB5hF,OAAOi0B,EAAM/xD,EAAOo+G,kBACtCtgF,GACAv7C,EAAK67H,iBAAiBtlI,KAAKi5E,GAC3B/xD,EAAOk+G,iBAAiBplI,KAAKi5E,GAC7B/vE,KAAK09H,iBAAiB5hF,OAAOi0B,EAAMxvE,EAAK27H,oBAGxCl+G,EAAOk+G,iBAAiBplI,KAAKi5E,GAC7B/vE,KAAK09H,iBAAiB5hF,OAAOi0B,EAAMxvE,EAAK27H,kBACxC37H,EAAK67H,iBAAiBtlI,KAAKi5E,KAGnC2sD,EAAUn8H,EAAKV,IAAMU,SACdq8H,EAAYr8H,EAAKV,KAK5By2H,EAAiBh1F,UAAU09F,YAAc,SAAUH,EAASJ,EAAMc,EAAOx3D,EAAO3xE,GAC5DA,EAAKsmI,UACHtmI,EAAKwmI,YACRxmI,EAAKkoI,SAFpB,IAGItgH,EAAS5nB,EAAK4nB,OACdyxE,EAAOr5F,EAAKq5F,KACLr5F,EAAK25E,KAChB,GAAY,MAAR0f,EAAc,CACd,GAAc,MAAVzxE,IACqB,MAAjByxE,EAAKipC,UACLjpC,EAAKipC,SAAS,KAAO16G,EAAO06G,SAAS,IAAI,CACzC,IAAI8G,EAAiBxhH,EAAO06G,SAASjiI,OAAS,EAC9Cg5F,EAAKipC,SAAW16G,EAAO06G,SAAS5nF,QAChC2+C,EAAKipC,SAAS8G,EAAiB,GAAKD,EAG5C,IAAIL,EAASzvC,EAAK5vF,GAClB,GAAoB,MAAhB4+H,EAAKS,GAAiB,CACtBT,EAAKS,GAAUzvC,EACfzvF,KAAKm/H,qBAAqBN,EAAS92D,EAAO,EAAG3xE,GAE7C,IAAK,IADDgpI,EAAgB3vC,EAAK2sC,iBAAiBtrF,QACjCp6C,EAAI,EAAGA,EAAI0oI,EAAc3oI,OAAQC,IAAK,CAC3C,IAAI6lI,EAAe6C,EAAc1oI,GAC7ByL,EAAao6H,EAAav5H,OAC9B5M,EAAK4nB,OAASyxE,EACdr5F,EAAKq5F,KAAOttF,EACZ/L,EAAK25E,KAAOwsD,EACZv8H,KAAKg/H,YAAYH,EAASJ,EAAM/nI,EAAGqxE,EAAQ,EAAG3xE,SAIlD4J,KAAKm/H,qBAAqBN,EAAS92D,EAAO,EAAG3xE,KAQzDkgI,EAAiBh1F,UAAUE,MAAQ,SAAUjnC,EAAKklI,EAAYC,GAE1D,GADAA,EAAsB,MAAXA,GAAmBA,EACnB,MAAPnlI,GAA4C,mBAArBA,EAAe,YAAkB,CAExD,IAAK,IADDm1E,EAAYn1E,EAAIwnC,cACXllC,EAAK,EAAG6f,EAAKC,OAAOC,KAAKriB,GAAMsC,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC1D,IAAInG,EAAIgmB,EAAG7f,GACD,mBAANnG,IAAyC,MAAd+oI,GAAsBA,EAAWvhH,QAAQxnB,GAAK,KACpEgpI,GAA+B,iBAAZnlI,EAAI7D,MAKxBg5E,EAAUh5E,GAAK6D,EAAI7D,IAI/B,OAAOg5E,EAEX,OAAO,MAEJ4mD,KAKP7B,GAAgC,WAChC,SAASA,KAwTT,OAlTAA,EAAenzF,UAAUq+F,mBAAqB,SAAU5pH,GAGpD,IAAK,IAFD6pH,EAAW7pH,EAAM0hH,MAAMhhI,OACvBopI,EAAiB,EACZnpI,EAAI,EAAGA,EAAIkpI,EAAUlpI,IAC1BmpI,GAAkB7/H,KAAK8/H,sBAAsBppI,EAAGqf,GAEpD,OAAO8pH,GAMXpL,EAAenzF,UAAUw4F,gBAAkB,SAAUv5H,EAAMwnE,GACvD,OAAIxnE,EACIP,KAAK23H,SAASp3H,GACPA,EAAK6P,KAAK,GAGV7P,EAAK6P,KAAK23D,EAAQxnE,EAAK03H,QAAU,GAGzC,GAKXxD,EAAenzF,UAAUw+F,sBAAwB,SAAUppI,EAAGqf,GAM1D,IAAK,IALD8pH,EAAiB,EACjBrI,EAAOzhH,EAAM0hH,MAAM/gI,GACnBqpI,EAAehqH,EAAM0hH,MAAM/gI,EAAI,GAC/BspI,KAEK3pI,EAAI,EAAGA,EAAImhI,EAAK/gI,OAAQJ,IAAK,CAMlC,IAAK,IALDkK,EAAOi3H,EAAKnhI,GACZ4pI,EAAejgI,KAAK85H,gBAAgBv5H,EAAM7J,GAC1CgkI,EAAiB16H,KAAKs5H,yBAAyB/4H,EAAM7J,GAAG,GAExDwpI,KACKngH,EAAI,EAAGA,EAAI26G,EAAejkI,OAAQspB,IAAK,CAC5C,IAAIogH,EAAgBzF,EAAe36G,GAC/BqgH,EAAwBpgI,KAAK85H,gBAAgBqG,EAAezpI,EAAI,GACpEwpI,EAAYppI,KAAKspI,GAErBF,EAAYh4G,KAAK,SAAUlxB,EAAGC,GAAK,OAAOD,EAAIC,IAC9C+oI,EAAWC,GAAgBC,EAG1B,IADDG,KACJ,IAAShqI,EAAI,EAAGA,EAAI2pI,EAAWvpI,OAAQJ,IACnCgqI,EAAUA,EAAQlkG,OAAO6jG,EAAW3pI,IAGxC,IADA,IAAIiqI,EAAa,EACVA,EAAaP,EAAatpI,QAC7B6pI,IAAe,EAEnB,IAAIC,EAAW,EAAID,EAAa,EAChCA,GAAc,EAET,IADD7c,KACJ,IAASptH,EAAI,EAAGA,EAAIkqI,IAAYlqI,EAC5BotH,EAAKptH,GAAK,EAEd,IAASA,EAAI,EAAGA,EAAIgqI,EAAQ5pI,OAAQJ,IAAK,CACrC,IACImqI,EADQH,EAAQhqI,GACIiqI,EAExB,MADE7c,EAAK+c,GACAA,EAAY,GACXA,EAAY,IACZX,GAAkBpc,EAAK+c,EAAY,MAGrC/c,EADF+c,EAAaA,EAAY,GAAM,GAIvC,OAAOX,GAMXpL,EAAenzF,UAAUjX,QAAU,SAAUtU,GAEzC/V,KAAKygI,mBACL,IAAK,IAAI/pI,EAAI,EAAGA,EAAIqf,EAAM0hH,MAAMhhI,OAAQC,IACpCsJ,KAAKygI,gBAAgB/pI,GAAKqf,EAAM0hH,MAAM/gI,GAAGo6C,QAIxC,IAFD4vF,EAA+B,EAC/BC,EAAuB3gI,KAAK2/H,mBAAmB5pH,GACnD,IAASrf,EAAI,EAAGA,EAAI,IAAMgqI,EAA+B,EAAGhqI,IAAK,CAC7DsJ,KAAK4gI,eAAelqI,EAAGqf,GACvB,IAAI8qH,EAAqB7gI,KAAK2/H,mBAAmB5pH,GACjD,GAAI8qH,EAAqBF,EAAsB,CAC3CA,EAAuBE,EACvBH,EAA+B,EAC/B,IAAK,IAAIrqI,EAAI,EAAGA,EAAI2J,KAAKygI,gBAAgBhqI,OAAQJ,IAE7C,IAAK,IADDmhI,EAAOzhH,EAAM0hH,MAAMphI,GACd0pB,EAAI,EAAGA,EAAIy3G,EAAK/gI,OAAQspB,IAAK,CAClC,IAAIs0B,EAAOmjF,EAAKz3G,GACZxlB,EAAMyF,KAAKygI,gBAAgBpqI,GAAGg+C,EAAKjkC,KAAK,IACxC7V,IAASA,EAAIsF,KAAOw0C,EAAKx0C,IAAQw0C,EAAKgqF,KAAO9jI,EAAI8jI,KACjD9jI,EAAI8jI,IAAI,KAAOhqF,EAAKgqF,IAAI,MACxBr+H,KAAKygI,gBAAgBpqI,GAAGg+C,EAAKjkC,KAAK,IAAMikC,QAKnD,CAEDqsF,IAEA,IAASrqI,EAAI,EAAGA,EAAI2J,KAAKygI,gBAAgBhqI,OAAQJ,IAE7C,IADImhI,EAAOzhH,EAAM0hH,MAAMphI,GACd0pB,EAAI,EAAGA,EAAIy3G,EAAK/gI,OAAQspB,IAAK,CAC9Bs0B,EAAOmjF,EAAKz3G,GAChB/f,KAAK83H,gBAAgBzjF,EAAMh+C,EAAG0pB,IAI1C,GAA6B,IAAzB4gH,EACA,MAMH,IAFDlJ,KACA6G,KACJ,IAAS5nI,EAAI,EAAGA,EAAIqf,EAAMuhH,QAAU,EAAG5gI,IACnC4nI,EAAS5nI,MACT+gI,EAAM/gI,GAAK4nI,EAAS5nI,GAExB,IAASA,EAAI,EAAGA,EAAIsJ,KAAKygI,gBAAgBhqI,OAAQC,IAC7C,IAASL,EAAI,EAAGA,EAAI2J,KAAKygI,gBAAgB/pI,GAAGD,OAAQJ,IAChDioI,EAAS5nI,GAAGI,KAAKkJ,KAAKygI,gBAAgB/pI,GAAGL,IAGjD0f,EAAM0hH,MAAQA,GAMlBhD,EAAenzF,UAAUq2F,SAAW,SAAUp3H,GAC1C,SAAIA,IAAQA,EAAK8zC,OAAS9zC,EAAK8zC,KAAKsE,UAAWp4C,EAAK8zC,KAAKqE,WAQ7D+7E,EAAenzF,UAAUs/F,eAAiB,SAAUE,EAAW/qH,GAE3D,IAAIgrH,EAAiBD,EAAY,GAAM,EACvC,GAAIC,EACA,IAAK,IAAI1qI,EAAI0f,EAAMuhH,QAAU,EAAGjhI,GAAK,EAAGA,IACpC2J,KAAKghI,WAAW3qI,EAAG0qI,QAIvB,IAAS1qI,EAAI,EAAGA,EAAI0f,EAAMuhH,QAASjhI,IAC/B2J,KAAKghI,WAAW3qI,EAAG0qI,IAQ/BtM,EAAenzF,UAAUg4F,yBAA2B,SAAUjlF,EAAM0zB,EAAOk5D,QACpD,IAAfA,IAAyBA,GAAa,GAC1C,IAAIC,EAAiB,0BACjBC,EAAc,mBAKlB,GAJIF,IACAC,EAAiB,8BACjBC,EAAc,oBAEd9sF,EAAM,CACN,GAAIr0C,KAAK23H,SAAStjF,GAAO,CACrB,GAA4B,MAAxBA,EAAK6sF,GAAyB,CAC9B7sF,EAAK6sF,MACL7sF,EAAK6sF,GAAgB,MACrB,IAAK,IAAIxqI,EAAI,EAAGA,EAAI29C,EAAK8sF,GAAa1qI,OAAQC,IAAK,CAC/C,IAAIq5E,EAAO17B,EAAK8sF,GAAazqI,QACRuD,IAAjB81E,EAAKunD,UACLvnD,EAAKunD,SAAW,IAEE,IAAlBvnD,EAAKunD,UAAmB2J,EAAclxD,EAAKkoD,UAAYlwD,EAAQ,EAAMgI,EAAKunD,UAAYvvD,EAAQ,GAE9F1zB,EAAK6sF,GAAgB,GAAGpqI,KAAKmqI,EAAalxD,EAAK/sE,OAAS+sE,EAAKxtE,QAI7D8xC,EAAK6sF,GAAgB,GAAGpqI,KAAKi5E,IAIzC,OAAO17B,EAAK6sF,GAAgB,GAG5B,GAA4B,MAAxB7sF,EAAK6sF,GAAyB,CAC9B7sF,EAAK6sF,MACL,IAASxqI,EAAI,EAAGA,EAAI29C,EAAKjkC,KAAK3Z,OAAQC,IAClC29C,EAAK6sF,GAAgBxqI,MACjBA,KAAOuqI,EAAa,EAAK5sF,EAAKjkC,KAAK3Z,OAAS,GAC5C49C,EAAK6sF,GAAgBxqI,GAAGI,KAAKmqI,EAAa5sF,EAAKrxC,OAASqxC,EAAK9xC,QAG7D8xC,EAAK6sF,GAAgBxqI,GAAGI,KAAKu9C,GAIzC,OAAOA,EAAK6sF,GAAgBn5D,EAAQ1zB,EAAK4jF,QAAU,GAG3D,OAAO,MAMXxD,EAAenzF,UAAU8/F,YAAc,SAAU1G,EAAgBrD,GAG7D,IAAK,IAFDsD,KACA0G,EAAa,EACR3qI,EAAI,EAAGA,EAAIgkI,EAAejkI,OAAQC,IAAK,CAC5C,IAAI29C,EAAOqmF,EAAehkI,GAC1BikI,EAAa0G,KAAgBrhI,KAAK85H,gBAAgBzlF,EAAMgjF,GAI5D,GADAsD,EAAazyG,KAAK,SAAUlY,EAAGC,GAAK,OAAOD,EAAIC,IAC3CoxH,EAAa,GAAM,EAEnB,OAAO1G,EAAal+H,KAAKm3B,MAAMytG,EAAa,IAE3C,GAAmB,IAAfA,EACL,OAAS1G,EAAa,GAAKA,EAAa,IAAM,EAG9C,IAAIC,EAAcyG,EAAa,EAC3BC,EAAa3G,EAAaC,EAAc,GAAKD,EAAa,GAC1D4G,EAAc5G,EAAa0G,EAAa,GACtC1G,EAAaC,GACnB,OAAQD,EAAaC,EAAc,GAAK2G,EAAc5G,EAAaC,GAAe0G,IAAeA,EAAaC,IAOtH9M,EAAenzF,UAAUw2F,gBAAkB,SAAUzjF,EAAM0zB,EAAOxiE,GAC1D8uC,IACAA,EAAKjkC,KAAK,GAAK7K,IAMvBkvH,EAAenzF,UAAU0/F,WAAa,SAAU3J,EAAW0J,GAIvD,IAAK,IAHDS,EAAkBxhI,KAAKygI,gBAAgBpJ,GAAW5gI,OAClDkkI,KACA8G,KACK/qI,EAAI,EAAGA,EAAI8qI,EAAiB9qI,IAAK,CACtC,IAAI29C,EAAOr0C,KAAKygI,gBAAgBpJ,GAAW3gI,GACvCgrI,GAAgBN,YAAa,GACjCM,EAAYrtF,KAAOA,EAGnB,IAAIstF,OAA0B,EAE1BA,EADAZ,EAC0B/gI,KAAKs5H,yBAAyBjlF,EAAMgjF,GAGpCr3H,KAAKs5H,yBAAyBjlF,EAAMgjF,GAAW,GAE7E,IAAIuK,OAAgB,EACJA,EAAhBb,EAAgC1J,EAAY,EAAoBA,EAAY,EAC7C,MAA3BsK,GAAsE,IAAnCA,EAAwBlrI,QAC3DirI,EAAYN,YAAcphI,KAAKohI,YAAYO,EAAyBC,GACpEjH,EAAa7jI,KAAK4qI,IAKlBD,EAAkBzhI,KAAK85H,gBAAgBzlF,EAAMgjF,KAAc,EAGnEsD,EAAazyG,KAAKloB,KAAK6hI,SAEvB,IAASnrI,EAAI,EAAGA,EAAI8qI,EAAiB9qI,IACjC,GAA4B,MAAxB+qI,EAAkB/qI,GAAY,CAC1B29C,EAAOsmF,EAAavB,QAAQ/kF,KAChCr0C,KAAK83H,gBAAgBzjF,EAAMgjF,EAAW3gI,KAQlD+9H,EAAenzF,UAAUugG,QAAU,SAAU7xH,EAAGC,GAC5C,GAAS,MAALD,GAAkB,MAALC,EAAW,CACxB,GAAIA,EAAEmxH,YAAcpxH,EAAEoxH,YAClB,OAAQ,EAEP,GAAInxH,EAAEmxH,YAAcpxH,EAAEoxH,YACvB,OAAO,EAGf,OAAO,GAEJ3M,KC7jDPhzF,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GAgB5D0P,GAAgB,SAAUviB,GAC1B,IAAI0kC,EAAO1kC,EACX,OAAI0kC,EAAKl+B,aAAek+B,EAAKp0B,aAAeo0B,EAAKx9B,UAAYw9B,EAAKmT,UAC3DnT,EAAKiB,cAAgBjB,EAAKoT,cAAgBpT,EAAKptB,iBAAmBotB,EAAKltB,gBACnEqB,IAEP7Y,EAAI6D,QAAU7D,EAAI6D,iBAAiBg5C,IAAS78C,EAAI6D,MAAMvC,MAC/C0Y,KAOXutH,GAAyB,SAAUp/F,GAEnC,SAASo/F,IACL,OAAkB,OAAXp/F,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAoB/D,OAtBAyhC,GAAUqgG,EAASp/F,GAInBT,IACImB,WAAS,KACV0+F,EAAQxgG,UAAW,UAAM,GAC5BW,IACImB,cACD0+F,EAAQxgG,UAAW,cAAU,GAChCW,IACImB,YAAS,IACV0+F,EAAQxgG,UAAW,gBAAY,GAClCW,IACImB,WAAS,KACV0+F,EAAQxgG,UAAW,eAAW,GACjCW,IACImB,WAAS,KACV0+F,EAAQxgG,UAAW,aAAS,GAC/BW,IACI0Q,oBAAkB71B,KACnBglH,EAAQxgG,UAAW,eAAW,GAC1BwgG,GACTz+F,iBAKE0+F,GAA+B,SAAUr/F,GAEzC,SAASq/F,IACL,OAAkB,OAAXr/F,GAAmBA,EAAOC,MAAM3iC,KAAMqiC,YAAcriC,KAW/D,OAbAyhC,GAAUsgG,EAAer/F,GAIzBT,IACImB,cACD2+F,EAAczgG,UAAW,aAAS,GACrCW,IACImB,cACD2+F,EAAczgG,UAAW,cAAU,GACtCW,IACI8H,aAAY5kC,KACb48H,EAAczgG,UAAW,cAAU,GAC/BygG,GACT1+F,iBAgBE2+F,GAA+B,SAAUt/F,GAOzC,SAASs/F,EAAc/pG,EAASr4B,GAC5B,IAAIymC,EAAQ3D,EAAO0E,KAAKpnC,KAAMi4B,EAASr4B,IAAYI,KAEnDqmC,EAAM47F,eAEN57F,EAAMuN,cACNvN,EAAMvQ,KAAO,OACbuQ,EAAM67F,aAMN77F,EAAMs4D,OAAS,SAAUxxF,GACrB,IAAIg1H,EACAtiI,EAAKsN,EAAEi1H,OAAOp/H,OAAOnD,GAAGyO,MAAM,cAAc,GAC5C+zH,EAASh8F,EAAM47F,YAAYpiI,GAC/B,GAAIwiI,GAAUh8F,EAAMq4D,eAAgB,CAChCr4D,EAAM04D,gBAAkB14D,EAAMq4D,eAAe7+F,KAAOwiI,EAAOxiI,GAAKwiI,EAASh8F,EAAMq4D,eAChEr4D,EAAMw6B,iBAAiB1zD,EAAEi1H,SACxCD,EAAgB97F,EAAMi8F,iBAAiBj8F,EAAM04D,gBAAiB5xF,EAAEi1H,OAAQ/7F,EAAMzmC,UAChEs2B,aAAa,YAAamQ,EAAMzmC,QAAQC,IAE1D,OAAOsiI,GAIX,IAAK,IAFDv0H,EACArN,EACK7J,EAAI,EAAG2vC,GAASA,EAAMnS,UAAYx9B,EAAI2vC,EAAMnS,SAASz9B,OAAQC,IAClE,IAAK,IAAIL,EAAI,EAAGA,EAAIgwC,EAAMnS,SAASx9B,GAAGy9B,QAAQ19B,OAAQJ,IAClDuX,EAAQy4B,EAAMnS,SAASx9B,GAAGy9B,QAAQ99B,GAClCkK,EAAO03B,EAAQ/D,SAASx9B,GAAGy9B,QAAQ99B,GAC/BuX,GAA8B,gBAArBA,EAAMxP,MAAMvC,MACrB8oB,GAAuBpkB,EAAMqN,GAIzC,OAAOy4B,EA0oCX,OAprCA5E,GAAUugG,EAAet/F,GAiDzBs/F,EAAc1gG,UAAU2a,kBAAoB,SAAUC,EAASC,GAE3D,IAAK,IADDlwB,GAAU,EACLpvB,EAAK,EAAG6f,EAAKC,OAAOC,KAAKs/B,GAAUr/C,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAE9D,OADW6f,EAAG7f,IAEV,IAAK,QACDmD,KAAKJ,QAAQM,MAAM3H,MAAQyH,KAAKzH,MAAM+F,WACtC,MACJ,IAAK,SACD0B,KAAKJ,QAAQM,MAAM5H,OAAS0H,KAAK1H,OAAOgG,WACxC,MACJ,IAAK,gBACD,MACJ,IAAK,cACL,IAAK,eACL,IAAK,gBACD2tB,GAAU,EACV,MACJ,IAAK,eACD,GAAIiwB,EAAQqmF,aACRviI,KAAKwiI,oBAEJ,CACD,IAAIpnG,EAAa7Z,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,WACvDu7B,GACAA,EAAW5d,WAAW8R,YAAY8L,GAG1C,MACJ,IAAK,WACD,IAAK,IAAI5P,EAAK,EAAGC,EAAK9O,OAAOC,KAAKs/B,EAAQhoB,UAAW1I,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACvE,IAAI90B,EAAI+0B,EAAGD,GACP9L,EAAQvnB,OAAOzB,GACdsJ,KAAKyiI,iBAAiBz7C,MAAMtnE,KAC7B1f,KAAKyiI,iBAAiBz7C,MAAMtnE,IACxBL,OAAQ68B,EAAQhoB,SAASxU,GAAOgjH,OAAS,GACzCC,SAAUzmF,EAAQhoB,SAASxU,GAAOijH,SAClCp4B,QAASruD,EAAQhoB,SAASxU,GAAO6qF,SAAW,UAGZtwG,IAApCiiD,EAAQhoB,SAASxU,GAAO6qF,UACxBvqG,KAAKyiI,iBAAiBz7C,MAAMtnE,GAAO6qF,QAAUruD,EAAQhoB,SAASxU,GAAO6qF,SAAW,GAChFt+E,GAAU,QAE2BhyB,IAArCiiD,EAAQhoB,SAASxU,GAAOijH,WACnB3iI,KAAKk0B,SAASxU,GAAOkjH,cAKtB5iI,KAAKk0B,SAASxU,GAAOkjH,eAAgB,GAJrC5iI,KAAKyiI,iBAAiBz7C,MAAMtnE,GAAOijH,SAAWzmF,EAAQhoB,SAASxU,GAAOijH,SACtE12G,GAAU,IAOtB,MACJ,IAAK,kBACIjsB,KAAKu6E,gBAINv6E,KAAKyiI,iBAAiB/hI,WAAc05E,QAAUjP,SAAU,KAAO03D,UAAY13D,SAAU,MAHrFnrE,KAAKyiI,iBAAiB/hI,WAAc05E,QAAUjP,SAAU,GAAK03D,UAAY13D,SAAU,IAKvF,MACJ,IAAK,aACDnrE,KAAKyiI,iBAAiBK,WAAa9iI,KAAK8iI,WACxC72G,GAAU,GAIlBA,GACAjsB,KAAK+iI,mBAObf,EAAc1gG,UAAUya,eAAiB,WAErC,OAAO/7C,KAAKg8C,cADK,YAMrBgmF,EAAc1gG,UAAUga,UAAY,WAChC,IAAIjV,EAAQrmC,KACZA,KAAKJ,QAAQM,MAAMw/E,SAAW,OAC9B1/E,KAAKJ,QAAQM,MAAM5H,OAAS0H,KAAK1H,OAAOgG,WACxC0B,KAAKJ,QAAQM,MAAM3H,MAAQyH,KAAKzH,MAAM+F,WAClC0B,KAAKuiI,cACLviI,KAAKwiI,gBAGT,IAAIQ,EAAenhH,GAAkB,OAAShiB,GAAIG,KAAKJ,QAAQC,GAAK,eACpEG,KAAKyiI,iBAAmB,IAAIQ,aACxBH,WAAY9iI,KAAK8iI,aAEhB9iI,KAAKu6E,kBACNv6E,KAAKyiI,iBAAiB/hI,WAAc05E,QAAUjP,SAAU,GAAK03D,UAAY13D,SAAU,KAEvFnrE,KAAKyiI,iBAAiBE,SAAW,SAAU5iI,GACvC,IAAI2f,EAAQ2mB,EAAMo8F,iBAAiBz7C,MAAM9oE,QAAQne,EAAK0wB,MACtD4V,EAAMnS,SAASxU,GAAOijH,SAAW5iI,EAAKo6C,WACtC9T,EAAMnS,SAASxU,GAAOkjH,eAAgB,GAE1C5iI,KAAKJ,QAAQ2vB,YAAYyzG,GAErB9tG,OAAqB,iBACrBA,OAAqB,eAAI,MAE7BgG,KACAl7B,KAAKu7C,eACLv7C,KAAKw7C,cAKTwmF,EAAc1gG,UAAUma,OAAS,WAC7Bz7C,KAAKye,gBAAkB,IAAIuqC,GAAgBhpD,KAAKJ,QAAQC,GAAI,IAAIomD,IAAe,GAC/EjmD,KAAKopD,YAAc,IAAIJ,GAAgBhpD,KAAKJ,QAAQC,GAAI,IAAIomD,IAAe,GAC3EjmD,KAAKkjI,iBACLljI,KAAKyiI,iBAAiB9iI,SAAS,IAAMK,KAAKJ,QAAQC,GAAK,eAM3DmiI,EAAc1gG,UAAUqa,cAAgB,WACpC,MAAO,iBAOXqmF,EAAc1gG,UAAU8oD,gBAAkB,WACtC,IAAIC,KAKJ,OAJAA,EAAQvzF,MACJmiB,OAAQ,OACRlZ,UAEGsqF,GAMX23C,EAAc1gG,UAAUsa,QAAU,WAC9B,GAAI57C,KAAKmjI,UAAW,CAChBnjI,KAAKojI,UAAUxnF,UACf57C,KAAKu7C,eACLv7C,KAAK67C,OAAO,cACZnZ,EAAOpB,UAAUsa,QAAQxU,KAAKpnC,MAC9B,IAAIC,EAAUshB,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,cACxD,GAAII,EAAS,CACTD,KAAKJ,QAAQ0vB,YAAYrvB,GACzB,IAAIojI,EAAgB,iBAChBnuG,OAAOmuG,KACPnuG,OAAOmuG,GAAeloG,YAAc,EACK,IAArCjG,OAAOmuG,GAAeloG,aACtBjG,OAAOmuG,GAAe7lH,WAAW8R,YAAY4F,OAAOmuG,IACpDnuG,OAAOmuG,GAAiB,QAIpCpjI,EAAUshB,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,aAEhDI,EAAQud,WAAW8R,YAAYrvB,GAEnCD,KAAKJ,QAAQusB,UAAU2vB,OAAO,qBAQtCkmF,EAAc1gG,UAAUgiG,YAAc,SAAUC,GAI5C,IAAK,IAHDn7E,KACAo7E,EAAa,EACbC,EAAY,EACP5mI,EAAK,EAAG6f,EAAK6mH,EAAYpvG,QAASt3B,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAE7D,GAA0B,cADtBwlI,EAAS3lH,EAAG7f,IACLuB,MAAMvC,KAAqB,CAClC,IAAIojG,EAAcojC,EACdqB,EAAgBrB,EAAOjkI,MACvBijB,EAA8C,eAA9BqiH,EAAc5yH,YAClC,GAAI4yH,EAAc9qF,OAAQ,CACtB4qF,EAAaniH,EAAerhB,KAAK2jI,aAAe3jI,KAAK2jI,aAAe,EAAI3jI,KAAK2jI,aAAe3jI,KAAK2jI,aAAe,EAChHF,EAAYpiH,EAAerhB,KAAK4jI,YAAc5jI,KAAK4jI,YAAc,EAAI5jI,KAAK4jI,YAAc5jI,KAAK4jI,YAAc,EAC3G5jI,KAAKkiI,UAAUG,EAAOxiI,KAAQvH,OAAQkrI,EAAYjrI,MAAOkrI,GACzD,IAAIpkH,EAASqkH,EAAc5jH,MAAM,GAAGT,OAChCwkH,EAAYH,EAAc5jH,MAAM,GAAG5f,MACnC4jI,EAAczkH,EAAOnf,MACrB6jI,GACAlkI,GAAI,SAAWyZ,KAAYlb,OAASvC,KAAM,QAASuC,MAAO,aAC1D7F,MAAO8oB,EAAehC,EAAO9mB,MAAQ0mG,EAAY1mG,MACjDD,OAAQ+oB,EAAe49E,EAAY3mG,OAAS+mB,EAAO/mB,OACnD4H,MAAO4jI,EACPxrH,cAAgBrY,QAASof,EAAOpf,QAAQA,WAE5C8jI,EAAUhoI,QAAUgoI,EAAUxrI,MAAQ,EACtCwrI,EAAU/nI,QAAU+nI,EAAUzrI,OAAS,EACvC0H,KAAKgkI,eAAeT,EAAY1jI,GAAIkkI,GACpC,IAAI7kC,GACAr/F,GAAI,OAASyZ,KAAYlb,OAASvC,KAAM,QAASuC,MAAO,aACxD7F,MAAO8oB,EAAgB49E,EAAY1mG,MAAQ8mB,EAAO9mB,MAAS0mG,EAAY1mG,MACvED,OAAQ+oB,EAAe49E,EAAY3mG,OAAU2mG,EAAY3mG,OAAS+mB,EAAO/mB,OACzE4H,MAAO2jI,GAEX3kC,EAAQnjG,QAAUslB,EAAgB0iH,EAAUxrI,MAAS2mG,EAAQ3mG,MAAQ,EAAM2mG,EAAQ3mG,MAAQ,EAC3F2mG,EAAQljG,QAAUqlB,EAAe69E,EAAQ5mG,OAAS,EAAKyrI,EAAUzrI,OAAU4mG,EAAQ5mG,OAAS,EAC5F0H,KAAKgkI,eAAeT,EAAY1jI,GAAIq/F,GACpCD,EAAYrtF,UAAYmyH,EAAUlkI,GAAIq/F,EAAQr/F,SAEzC6jI,EAAc7qF,UACnB2qF,EAAavkC,EAAY3mG,OAAS2mG,EAAY3mG,OAAS0H,KAAK2jI,aAC5DF,EAAYxkC,EAAY1mG,MAAQ0mG,EAAY1mG,MAAQyH,KAAK4jI,YACzDvB,EAAOjkI,MAAMvC,KAAO,OAEhBwmI,EAAOjkI,MAAMhI,KADbirB,EAEI,OAAkBmiH,EAAa,EAAK,MAAQC,EAAY,IAAM,IAAOD,EAAa,EAAK,IAIvF,IAAOC,EAAY,EAAK,QAAmBA,EAAY,EAAK,KAAOD,EAAa,IAAM,KAItG,GAAInB,aAAkB9tH,GAAM,CACxB,IAAIsW,EAAkBjH,GAAY5jB,KAAK6qB,iBACnCA,GACAA,EAAgBw3G,EAAQriI,WAG3B,GAAIqiI,aAAkBjvH,GAAW,CAClC,IAAI2X,EAAuBnH,GAAY5jB,KAAK+qB,sBACxCA,GACAA,EAAqBs3G,EAAQriI,MAGrCA,KAAKiiI,YAAYI,EAAOxiI,IAAMwiI,EAC1BA,aAAkB9tH,IAAQ8tH,EAAOzwH,UACjCw2C,EAAMtxD,KAAKurI,GAGnB,IAAK,IAAI3rI,EAAI,EAAGA,EAAI0xD,EAAM3xD,OAAQC,IAE9B,IAAK,IADD6J,OAAO,EACFlK,EAAI,EAAGA,EAAI+xD,EAAM1xD,GAAGkb,SAASnb,OAAQJ,KAC1CkK,EAAQP,KAAKiiI,YAAY75E,EAAM1xD,GAAGkb,SAASvb,OAEvC2J,KAAK4zC,WAAWrzC,EAAKV,IAAMU,EAC3BA,EAAKsa,SAAWutC,EAAM1xD,GAAGmJ,IAIrC,IAAK,IAAI2rB,EAAK,EAAGC,EAAK83G,EAAYpvG,QAAS3I,EAAKC,EAAGh1B,OAAQ+0B,IAAM,EACzD62G,EAAS52G,EAAGD,cACQjX,IAAQ8tH,EAAOzwH,UACnC5R,KAAKikI,cAAc5B,GAG3B,IAAK,IAAIxsF,EAAK,EAAGquF,EAAU97E,EAAOvS,EAAKquF,EAAQztI,OAAQo/C,IAAM,CACzD,IAAIwsF,EAAS6B,EAAQruF,GACrB71C,KAAKikI,cAAc5B,KAM3BL,EAAc1gG,UAAU6iG,cAAgB,SAAUZ,GAC9C,IAAIrjI,EAAQ,8BACRqjI,EAAYjrI,SACZ4H,GAAS,UAAYqjI,EAAYjrI,OAAS,MAE9C,IAAI8rI,EAAaviH,GAAkB,OAAShiB,GAAM0jI,EAAY1jI,GAAIK,MAAOA,IACzEF,KAAKJ,QAAQ2vB,YAAY60G,GACzB,IAAI3zG,GACApR,OAAQkkH,EAAYb,MAAOC,SAAUY,EAAYZ,SACjD1iI,QAAS,IAAMsjI,EAAY1jI,GAAI0qG,QAASg5B,EAAYh5B,SAExDvqG,KAAKyiI,iBAAiBz7C,MAAMlwF,KAAK25B,GACjCzwB,KAAKqkI,cAAcd,EAAaa,IAKpCpC,EAAc1gG,UAAU0iG,eAAiB,SAAUM,EAAaC,GAC5D,IACK,IAAI7tI,EAAI,EAAGA,EAAIsJ,KAAKk0B,SAASz9B,OAAQC,IAAK,CAC3C,IAAI8tI,EAAqBxkI,KAAKk0B,SAASx9B,GACvC,IAAoD,IAAhD8tI,EAAmB3kI,GAAGqe,QAAQomH,GAAqB,CAKnD,IAAK,IAHDG,QAASxqI,EAAWuqI,EAAoB,cAAe,GAEvDjqI,EAAM,IAAK6kH,SAAS99E,UAAUu1D,KAAKl0D,MAAM7lB,GAAcynH,GAAgBE,IAClEnuF,EAAM,EAAGA,EAAM35B,OAAOC,KAAK2nH,GAAe9tI,OAAQ6/C,IACvD/7C,EAAIoiB,OAAOC,KAAK2nH,GAAejuF,IAAQiuF,EAAc5nH,OAAOC,KAAK2nH,GAAejuF,IAEpFkuF,EAAmBrwG,QAAQr9B,KAAKyD,GAC3BA,EAAIqX,UACL5R,KAAKikI,cAAc1pI,GAEvByF,KAAKiiI,YAAY1nI,EAAIsF,IAAMtF,EAC3B,IAAI6pI,EAAa7iH,SAASC,eAAegjH,EAAmB3kI,IACxDukI,GACAA,EAAW70G,YAAYvvB,KAAK0kI,mBAAmBnqI,EAAK6pI,IAExD,SAOZpC,EAAc1gG,UAAUqjG,kBAAoB,SAAUL,EAAaM,GAE/D,IAAK,IADD34G,EACKv1B,EAAI,EAAGA,EAAIsJ,KAAKk0B,SAASz9B,OAAQC,IAAK,CAC3C,IAAI8tI,EAAqBxkI,KAAKk0B,SAASx9B,GACvC,IAAoD,IAAhD8tI,EAAmB3kI,GAAGqe,QAAQomH,GAC9B,IAAK,IAAIznI,EAAK,EAAG6f,EAAK8nH,EAAmBrwG,QAASt3B,EAAK6f,EAAGjmB,OAAQoG,IAAM,CACpE,IAAIwlI,EAAS3lH,EAAG7f,GAChB,IAAqC,IAAjCwlI,EAAOxiI,GAAGqe,QAAQ0mH,GAAkB,CACpC,IAAIllH,EAAQ8kH,EAAmBrwG,QAAQjW,QAAQmkH,GAE/C,GADAmC,EAAmBrwG,QAAQhuB,OAAOuZ,EAAO,GACrC2iH,EAAOzwH,SAEP,IAAK,IADD4L,EAAa6kH,EAAOzwH,SACfizH,EAAM,EAAGA,EAAMrnH,EAAW/mB,OAAQouI,WAChC7kI,KAAKiiI,YAAazkH,EAAWqnH,WAGrC7kI,KAAKiiI,YAAYI,EAAOxiI,IAC/B,IAAID,EAAU2hB,SAASC,eAAe6gH,EAAOxiI,GAAK,cAClDD,EAAQ4d,WAAW8R,YAAY1vB,GAC/BqsB,GAAU,EACV,OAIZ,GAAIA,EACA,QAOZ+1G,EAAc1gG,UAAU2iG,cAAgB,SAAU5B,GAC9C,IAAI9pI,EACAw6B,EACAz6B,EACA06B,EAGA/yB,EAFAm7F,EAAa,IAAIroD,GACjBx4C,EAAM8nI,EAENyC,EAAkB,IAAI90G,GACtBlY,EAAauqH,aAAkB9tH,GAAQ8tH,EAAO/uG,gBAAkB,KAChExb,IAAcA,EAAUlG,WACxBkG,EAAUlG,aAGd,IAAImzH,EAAoBnhH,GAAY5jB,KAAK+kI,mBAezC,GAdIA,IACA9kI,EAAU8kI,EAAkB1C,IAE3BpiI,IACG1F,EAAIqX,SACJ3R,EAAUD,KAAKglI,aAAazqI,EAAKud,IAGjC7X,EAAUoiI,EAAO9uG,KAAKvzB,MAClBqiI,aAAkB9tH,IAAQ8tH,EAAOxnH,UACjC/C,EAAUlG,SAAS9a,KAAKmJ,MAI/BoiI,EAAOxnH,SAAU,CAClB,IAAIoqH,GAAe1sI,MAAOyH,KAAK4jI,YAAatrI,OAAQ0H,KAAK2jI,cACrDuB,EAAgBthH,GAAY5jB,KAAKklI,eAgBrC,GAfIA,IACAD,EAAaC,EAAc7C,IAE/B4C,EAAaA,MAEbhlI,EAAQ+nB,aAAe,SACvB/nB,EAAQ6Y,oBAAsB7Y,EAAQ4Y,kBAAoB,SAC1DisH,EAAgB5kI,MAAMgY,YAAc4sH,EAAgB5kI,MAAM+X,KAAO,OACjE6sH,EAAgBlzH,UAAY3R,GAC5BA,EAAQ0d,QAAQ,IAAIC,IACpB3d,EAAQ4d,QAAQ5d,EAAQ6d,aACxBvlB,EAAQ0sI,EAAW1sI,MAAQ0sI,EAAW1sI,aACnB0B,IAAdM,EAAIhC,MAAsB0H,EAAQ8N,WAAWxV,WAAQ0B,IAAc+F,KAAK4jI,YAC7EtrI,EAAS2sI,EAAW3sI,OAAS2sI,EAAW3sI,cACpB2B,IAAfM,EAAIjC,OAAuB2H,EAAQ8N,WAAWzV,YAAS2B,IAAc+F,KAAK2jI,kBACjE1pI,IAAV1B,QAAkC0B,IAAX3B,EAAsB,CAC7C,IAAI6sI,EAAc5sI,EACd6sI,EAAe9sI,EACfsgD,IAASypF,EAAOjkI,MAAMw6C,YACD3+C,IAArB+F,KAAK4jI,YACLuB,EAAcvsF,EAAS54C,KAAKkiI,UAAU3nI,EAAIsF,IAAItH,MAC1CyH,KAAK4jI,YAAc5jI,KAAKqlI,aAAaziI,KAAO5C,KAAKqlI,aAAaxiI,MAGlEtK,GAASgC,EAAI2F,MAAMiY,iBAEGle,IAAtB+F,KAAK2jI,aACLyB,EAAexsF,EAAS54C,KAAKkiI,UAAU3nI,EAAIsF,IAAIvH,OAC3C0H,KAAK2jI,aAAe3jI,KAAKqlI,aAAatiI,IAAM/C,KAAKqlI,aAAaviI,OAGlExK,GAAUiC,EAAI2F,MAAMiY,YAEpB8sH,EAAW1sG,aAA+C,KAAhC0sG,EAAW1sG,YAAY5e,OACjDyrH,GAAgB,IAEpBryG,EAAKoyG,GAAellI,EAAQ1H,OAASA,GACrCy6B,EAAKoyG,GAAgBnlI,EAAQ3H,QAAUA,GACnC2sI,EAAWK,MACXvyG,EAAKoyG,EAAcF,EAAW1sI,MAC9By6B,EAAKoyG,EAAeH,EAAW3sI,QAEnCC,EAAQ4sI,EACR7sI,EAAS8sI,EACTryG,EAAKC,EAAKv2B,KAAKqK,IAAIisB,EAAIC,GACvB8xG,EAAgBvsI,MAAQA,EACxBusI,EAAgBxsI,OAASA,EACzB2H,EAAQ1H,MAAQ0sI,EAAW1sI,MAC3B0H,EAAQ3H,OAAS2sI,EAAW3sI,OAC5B0H,KAAKulI,YAAYlD,EAAQyC,EAAiB/xG,EAAIC,EAAIz6B,EAAOD,OAExD,CACD,IAAI6T,OAAc,EACdk2H,aAAkBjvH,KAClBjH,EAAcwF,GAAe0wH,IAEjCpiI,EAAQ1H,MAAQ8pI,EAAO9pI,SAAyB4T,EAAY5T,MAAQ0H,EAAQ8N,WAAWxV,MACvF0H,EAAQ3H,OAAS+pI,EAAO/pI,UAA0B6T,EAAY7T,OAAS2H,EAAQ8N,WAAWzV,OAE9F+pI,EAAOv0H,QAAUstF,EACjBA,EAAWxpF,UAAYkzH,GACvB7kI,EAAQuxB,MAAQ4pE,EAAW5pE,OAAUx6B,EAAG,EAAGC,EAAG,GAC9CmkG,EAAWv7F,GAAKI,EAAQJ,GAAK,UAC7Bu7F,EAAWl7F,MAAM+X,KAAOmjF,EAAWl7F,MAAMgY,YAAc,cACvDkjF,EAAWr/F,QAAUsmI,EAAOniI,MAAMiY,YAAc,EAChDijF,EAAWp/F,QAAUqmI,EAAOniI,MAAMiY,YAAc,EAEhDnY,KAAKwlI,qBAAqBP,EAAY1sI,EAAO6iG,GAC7CA,EAAWz9E,QAAQ,IAAIC,IACvBw9E,EAAWv9E,QAAQu9E,EAAWt9E,aAC9BmnH,EAAW1sI,MAAQ0sI,EAAW1sI,OAAS0H,EAAQ8N,WAAWxV,MAC1D0sI,EAAW3sI,OAAS2sI,EAAW3sI,QAAU2H,EAAQ8N,WAAWzV,OAC5D+pI,EAAOriI,KAAK81B,MAAQmvG,EAEpB5C,EAAOxnH,WACP/C,EAAU6F,QAAQ,IAAIC,GAAKrjB,EAAIhC,MAAOgC,EAAIjC,SAC1Cwf,EAAU+F,QAAQ/F,EAAUgG,eAGpCkkH,EAAc1gG,UAAU0jG,aAAe,SAAUzqI,EAAKud,GAClDA,EAAUyuB,iBAAkB,EAC5B,IAAI/kC,EACAoM,EAAQrT,EAAIqX,SAChBkG,EAAUlG,YACV,IAAK,IAAIlb,EAAI,EAAGA,EAAIkX,EAAMnX,OAAQC,IAC1BsJ,KAAKiiI,YAAYr0H,EAAMlX,KACvBohB,EAAUlG,SAAS9a,KAAKkJ,KAAKiiI,YAAYr0H,EAAMlX,IAAIoX,SAU3D,OAPAgK,EAAU6F,QAAQ,IAAIC,GAAKrjB,EAAIhC,MAAOgC,EAAIjC,SAC1Cwf,EAAU+F,QAAQ/F,EAAUgG,aACD,IAAvBhG,EAAUtW,OAAOxK,GAAkC,IAAvB8gB,EAAUtW,OAAOvK,IAE7Cm8B,GAAa74B,GADbiH,EAASsW,EAAUtW,QACMxK,EAAGwK,EAAOvK,EAAG+I,KAAKiiI,aAAa,EAAOjiI,MAC/D8X,EAAY9X,KAAKglI,aAAazqI,EAAKud,IAEhCA,GAOXkqH,EAAc1gG,UAAUkkG,qBAAuB,SAAUP,EAAY1sI,EAAOylB,GACxE,GAAIinH,GAAcA,EAAW1sG,aAAe0sG,EAAW1sG,YAAY5e,KAAM,CACrE,IAAI4S,EAAc,IAAImB,GAEtBu3G,EAAW1sG,YAAYmnD,SAAWulD,EAAW1sG,YAAYmnD,UAAY,WACrEulD,EAAW1sG,YAAYrB,KAAO+tG,EAAW1sG,YAAYrB,MAAQ,mBAC7D3K,EAAYtsB,QAAUglI,EAAW1sG,YAAY5e,KAC7C4S,EAAYh0B,MAAQA,EACpBg0B,EAAYj0B,OAAS,GACrBi0B,EAAYrsB,MAAMgY,YAAc,cAChCqU,EAAYrsB,MAAM+X,KAAO,cACzBsU,EAAYrsB,MAAMiY,YAAc,EAChCoU,EAAYrsB,MAAMyY,aAAessH,EAAW1sG,YAAYrB,KACxD3K,EAAYrsB,MAAMusB,aAAew4G,EAAW1sG,YAAYmnD,SACxDnzD,EAAY5pB,QAAWC,KAAM,EAAGC,MAAO,EAAGE,IAAK,EAAGD,OAAQ,GAC1Dkb,EAAOpM,SAAS9a,KAAKy1B,KAQ7By1G,EAAc1gG,UAAU+iG,cAAgB,SAAUd,EAAakC,GAC3D,IAAK,IAAI5oI,EAAK,EAAG6f,EAAK6mH,EAAYpvG,QAASt3B,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC7D,IAAIwlI,EAAS3lH,EAAG7f,GACXwlI,EAAOxnH,UACR7a,KAAK0kI,mBAAmBrC,EAAQoD,KAS5CzD,EAAc1gG,UAAUghG,iBAAmB,SAAUD,EAAQjhE,EAAKqkE,GAC9D,IAAI9rF,EACA5mB,EACAC,EACA0yG,EAAqBrD,EAAOv0H,QAAQ8D,SAAS,GAAGkM,YAAYvlB,MAAQ8pI,EAAOniI,MAAMiY,YACjFwtH,EAAsBtD,EAAOv0H,QAAQ8D,SAAS,GAAGkM,YAAYxlB,OAAS+pI,EAAOniI,MAAMiY,YACnFlY,EAAUoiI,EAAOv0H,QAAQ8D,SAAS,GAAGA,SAAS,GAClD,QAAiC3X,IAA7B+F,KAAK4lI,cAAcrtI,YAAqD0B,IAA9B+F,KAAK4lI,cAActtI,OAAsB,CACnFotI,GAAsB1lI,KAAK4lI,cAAcrtI,OAASmtI,GAAsBrD,EAAOniI,MAAMiY,YACrFwtH,GAAuB3lI,KAAK4lI,cAActtI,QAAUqtI,GAAuBtD,EAAOniI,MAAMiY,YACxF4a,EAAK2yG,EAAqBzlI,EAAQ8N,WAAWxV,MAC7Cy6B,EAAK2yG,EAAsB1lI,EAAQ8N,WAAWzV,OAC9Cy6B,EAAKC,EAAKv2B,KAAKqK,IAAIisB,EAAIC,GACvB,IAAI4wG,EAAc3jI,EAAQ8N,WAAWxV,MAAQw6B,EACzC4wG,EAAe1jI,EAAQ8N,WAAWzV,OAAS06B,EAC/CqvG,EAAOv0H,QAAQ8D,SAAS,GAAGrZ,MAAQmtI,EACnCrD,EAAOv0H,QAAQ8D,SAAS,GAAGtZ,OAASqtI,EACpC3lI,KAAK6lI,wBAAwB5lI,EAASoiI,aAAkB9tH,IACxDvU,KAAKulI,YAAYlD,EAAQA,EAAOv0H,QAAQ8D,SAAS,GAAImhB,EAAIC,EAAI4wG,EAAaD,GAAc,GACxF+B,EAAqB9B,EACrB+B,EAAsBhC,EAE1B,IAAIvwE,GAAiBp8D,EAAGiJ,EAAQlE,QAAS9E,EAAGgJ,EAAQjE,SACpDiE,EAAQlE,QAAUkE,EAAQjE,QAAUqmI,EAAOniI,MAAMiY,YAAc,EAC/DlY,EAAQuxB,OAAUx6B,EAAG,EAAGC,EAAG,GAC3B+I,KAAK6lI,wBAAwB5lI,EAASoiI,aAAkB9tH,IACxD,IACI+M,EADAwkH,EAAmBjkH,GAAkB,OAASuhH,UAAa,OAAQzrH,MAAS,cAAezX,MAAS,wBAExGqhB,SAASqW,KAAKrI,YAAYu2G,GAC1B,IAAI5lI,EAAQ,cACZ,GAA0B,WAAtBmiI,EAAOjkI,MAAMvC,KAAmB,CAChC89C,EAAS/f,GAAiB,OACtB/5B,GAAIwiI,EAAOxiI,GAAK,WAChBtH,MAAOkE,KAAKo6B,KAAK6uG,GAAsB,EACvCptI,OAAQmE,KAAKo6B,KAAK8uG,GAAuB,IAE7C,IAAI/+E,EAAWhtB,GAAiB,KAAO/5B,GAAIwiI,EAAOxiI,GAAK,OACvD85C,EAAOpqB,YAAYq3B,GACnBk/E,EAAiBv2G,YAAYoqB,GAC7B35C,KAAKopD,YAAYgB,cAAcnqD,EAAS2mD,OAAU3sD,OAAWA,EAAW0/C,QAEvE,GAA0B,SAAtB0oF,EAAOjkI,MAAMvC,KAClBylB,EAAMthB,KAAK+lI,cAAc1D,EAAQ1oF,EAAQmsF,EAAkBH,EAAqBD,GAAoB,QAGpG,GAAIrD,EAAOzwH,UACPywH,EAAOzwH,SAASnb,OAAS,GAAKgvB,GAAa48G,EAAQ,OAAQriI,KAAK4zC,YAChEtyB,EAAMthB,KAAKgmI,eAAe3D,EAAQ1oF,EAAQmsF,EAAkBzD,EAAOv0H,QAAQC,WAAWzV,OAAQ+pI,EAAOv0H,QAAQC,WAAWxV,OAAO,OAE9H,CACDohD,EAASgG,GAAeyB,aAAaihF,EAAOxiI,GAAK,WAA6E,GAAhEpD,KAAKo6B,KAAK6uG,GAAsBrD,EAAOniI,MAAMiY,YAAc,GAA0E,GAAjE1b,KAAKo6B,KAAK8uG,GAAuBtD,EAAOniI,MAAMiY,YAAc,IAC9L2tH,EAAiBv2G,YAAYoqB,GAC7Bz5C,GAAS,wBACTy5C,EAAOzjB,aAAa,mBAAoB,OACxC,IAAIxW,EAAQ,EACR2iH,aAAkBjvH,KAClBsM,EAAQ,KAEZi6B,EAAOiG,WAAW,MAAMu5C,aAAaz5E,EAAO,EAAG,EAAGA,EAAO,EAAG,GAC5D1f,KAAKye,gBAAgB2rC,cAAcnqD,EAAS05C,OAAQ1/C,GAO5D,OAJEqnB,IAA8B,SAAtB+gH,EAAOjkI,MAAMvC,MAAmBwmI,EAAOzwH,UAC1CywH,EAAOzwH,SAASnb,OAAS,GAAM6qB,EAAMq4B,GAAQzjB,aAAa,QAASh2B,GAC1ED,EAAQlE,QAAUq3D,EAAap8D,EAC/BiJ,EAAQjE,QAAUo3D,EAAan8D,EACxB6uI,GAEX9D,EAAc1gG,UAAUukG,wBAA0B,SAAU5lI,EAASmkE,GAC7DnkE,EAAQ2R,WAAawyD,IACrBnkE,EAAQ2R,SAAS,GAAGnM,UAAYw+B,YAAUU,MAE9C1kC,EAAQ0d,QAAQ,IAAIC,IACpB3d,EAAQ4d,QAAQ5d,EAAQ6d,aACpB7d,EAAQ2R,WACR3R,EAAQ2R,SAAS,GAAGnM,UAAYw+B,YAAUW,SAGlDo9F,EAAc1gG,UAAU2kG,iBAAmB,SAAU5D,EAAQ9pI,EAAOD,GAChE,IAAIsH,EAAUyiI,EAAOv0H,QAAQ8D,SAAS,GAAGA,SAAS,GAC9CuG,EAAckqH,EAAOniI,MAAMiY,YAC/BvY,EAAQrH,OAASA,GAASqH,EAAQrH,QAAU4f,EAAc,GAC1DvY,EAAQtH,QAAUA,GAAUsH,EAAQtH,SAAW6f,EAAc,GAC7DkqH,EAAOv0H,QAAQ6P,QAAQ,IAAIC,IAC3BykH,EAAOv0H,QAAQ+P,QAAQwkH,EAAOv0H,QAAQgQ,cAO1CkkH,EAAc1gG,UAAUojG,mBAAqB,SAAUrC,EAAQoD,EAAWS,GACtE,IAAIjB,EAAajlI,KAAKiiI,YAAYI,EAAOxiI,IAAIG,KAAK81B,MAC9CvE,EAAOvxB,KAAKmmI,cAAc9D,EAAQ4C,GAClC1sI,EAAQg5B,EAAKh5B,MAAQ,EACrBD,EAASi5B,EAAKj5B,OAAS,EACvBwf,EAAY+J,GAAkB,OAC9BhiB,GAAIwiI,EAAOxiI,GAAK,aAChBK,MAAO,SAAW3H,EAAQ,aAAeD,EAAS,gCAClDoqI,MAAOuC,EAAW1sG,YAAc0sG,EAAW1sG,YAAY5e,KAAO0oH,EAAOxiI,KAEzE4lI,EAAUl2G,YAAYzX,GACtB,IAAI6hC,EACAiN,EACAtlC,EACJ,GAA0B,WAAtB+gH,EAAOjkI,MAAMvC,KACb89C,EAAS/f,GAAiB,OACtB/5B,GAAIwiI,EAAOxiI,GACXtH,MAAOkE,KAAKo6B,KAAKwrG,EAAOv0H,QAAQC,WAAWxV,OAAS,EACpDD,OAAQmE,KAAKo6B,KAAKwrG,EAAOv0H,QAAQC,WAAWzV,QAAU,IAE1DsuD,EAAWhtB,GAAiB,KAAO/5B,GAAIwiI,EAAOxiI,GAAK,OACnD85C,EAAOpqB,YAAYq3B,GACnB9uC,EAAUyX,YAAYoqB,GACtB35C,KAAKimI,iBAAiB5D,GACtBriI,KAAKopD,YAAYgB,cAAci4E,EAAOv0H,QAAS84C,OAAU3sD,OAAWA,EAAW0/C,QAE9E,GAA0B,SAAtB0oF,EAAOjkI,MAAMvC,KAClBylB,EAAMthB,KAAK+lI,cAAc1D,EAAQ1oF,EAAQ7hC,EAAWuqH,EAAOv0H,QAAQC,WAAWzV,OAAQ+pI,EAAOv0H,QAAQC,WAAWxV,OAAO,QAGvH,GAAI8pI,EAAOzwH,UACPywH,EAAOzwH,SAASnb,OAAS,GAAKgvB,GAAa48G,EAAQ,OAAQriI,KAAK4zC,YAChEtyB,EAAMthB,KAAKgmI,eAAe3D,EAAQ1oF,EAAQ7hC,EAAWuqH,EAAOv0H,QAAQC,WAAWzV,OAAQ+pI,EAAOv0H,QAAQC,WAAWxV,OAAO,OAEvH,CACDohD,EAASgG,GAAeyB,aAAaihF,EAAOxiI,GAAIpD,KAAKo6B,KAAoE,GAA9DwrG,EAAOv0H,QAAQC,WAAWxV,MAAQ8pI,EAAOniI,MAAMiY,cAAoB,EAAG1b,KAAKo6B,KAAqE,GAA/DwrG,EAAOv0H,QAAQC,WAAWzV,OAAS+pI,EAAOniI,MAAMiY,cAAoB,GAChNL,EAAUyX,YAAYoqB,GACtB,IAAIj6B,EAAQ,EACR2iH,aAAkBjvH,KAClBsM,EAAQ,KAEZi6B,EAAOiG,WAAW,MAAMu5C,aAAaz5E,EAAO,EAAG,EAAGA,EAAO,EAAG,GAC5D1f,KAAKye,gBAAgB2rC,cAAci4E,EAAOv0H,QAAS84C,GAAYjN,OAAQ1/C,OAAWA,OAAWA,OAAWA,GAAW,GAG3H,IAAKisI,EAAS,CACV,IAAIf,EAAc9C,EAAOv0H,QAAQC,WAAWxV,MAAQ8pI,EAAOniI,MAAMiY,YAC7DitH,EAAe/C,EAAOv0H,QAAQC,WAAWzV,OAAS+pI,EAAOniI,MAAMiY,YAC/DjY,EAAQ,eACRzD,KAAK+I,IAAIxF,KAAKqlI,aAAaziI,MAAQrK,EAAQ4sI,GAAe,GACxD,iBAAmB1oI,KAAK+I,IAAIxF,KAAKqlI,aAAatiI,KAAOzK,EAAS8sI,GAAgB,GAC9E,+DAON,OANIzrF,aAAkBysF,oBAClBlmI,GAAS,4BAEXohB,IAA8B,SAAtB+gH,EAAOjkI,MAAMvC,MAAmBwmI,EAAOzwH,UAC7CywH,EAAOzwH,SAASnb,OAAS,GAAM6qB,EAAMq4B,GAAQzjB,aAAa,QAASh2B,GACvE4X,EAAUqU,UAAUC,IAAI,sBACjBtU,EAEX,OAAO6hC,GAEXqoF,EAAc1gG,UAAU0kG,eAAiB,SAAUv1G,EAAMkpB,EAAQ7hC,EAAWxf,EAAQC,EAAO8tI,GACvF,IAAI/kH,EAAMO,GAAkB,OAAShiB,GAAM4wB,EAAK5wB,IAAMwmI,EAAY,oBAAsB,eACpF/gH,EAAYzD,GAAkB,OAC9BhiB,GAAM4wB,EAAK5wB,IAAMwmI,EAAY,qBAAuB,cACpDnmI,MAAS,SAAWzD,KAAKo6B,KAAKt+B,EAAQ,GAAK,aAC3BkE,KAAKo6B,KAAKv+B,EAAS,GAAK,uBACxCqf,MAAS,iBAETm7E,EAAejxE,GAAkB,OACjChiB,GAAM4wB,EAAK5wB,IAAMwmI,EAAY,yBAA2B,kBACxDnmI,MAAS,SAAWzD,KAAKo6B,KAAKt+B,EAAQ,GAAK,aAC3BkE,KAAKo6B,KAAKv+B,EAAS,GAAK,yBAQ5C,OANAgtB,EAAUiK,YAAYujE,GACtBxxE,EAAIiO,YAAYjK,GAChBq0B,EAASgG,GAAeyB,aAAcilF,EAAa51G,EAAK5wB,GAAK,WAAc4wB,EAAK5wB,GAAKpD,KAAKo6B,KAAKt+B,GAAS,EAAGkE,KAAKo6B,KAAKv+B,GAAU,GAC/HgpB,EAAIiO,YAAYoqB,GAChB7hC,EAAUyX,YAAYjO,GACtBthB,KAAKye,gBAAgB2rC,cAAc35B,EAAK3iB,QAAQ8D,SAAS,GAAGA,SAAS,GAAI+nC,EAAQr0B,GAC1EhE,GAEX0gH,EAAc1gG,UAAUykG,cAAgB,SAAU1D,EAAQ1oF,EAAQ7hC,EAAWxf,EAAQC,EAAO8tI,GACxF,IAAI/kH,EAAMO,GAAkB,OACxBhiB,GAAMwiI,EAAOxiI,IAAMwmI,EAAY,oBAAsB,eAErD/gH,EAAYzD,GAAkB,OAC9BhiB,GAAMwiI,EAAOxiI,IAAMwmI,EAAY,qBAAuB,cACtDnmI,MAAS,SAAWzD,KAAKo6B,KAAKt+B,EAAQ,GAAK,aAC3BkE,KAAKo6B,KAAKv+B,EAAS,GAAK,uBACxCqf,MAAS,iBAETm7E,EAAejxE,GAAkB,OACjChiB,GAAMwiI,EAAOxiI,IAAMwmI,EAAY,yBAA2B,kBAC1DnmI,MAAS,SAAWzD,KAAKo6B,KAAKt+B,EAAQ,GAAK,aAC3BkE,KAAKo6B,KAAKv+B,EAAS,GAAK,yBAU5C,OARAgtB,EAAUiK,YAAYujE,GACtBxxE,EAAIiO,YAAYjK,GAChBq0B,EAASgG,GAAeyB,aAAaihF,EAAOxiI,GAAIpD,KAAKo6B,KAAoE,GAA9DwrG,EAAOv0H,QAAQC,WAAWxV,MAAQ8pI,EAAOniI,MAAMiY,cAAoB,EAAG1b,KAAKo6B,KAAqE,GAA/DwrG,EAAOv0H,QAAQC,WAAWzV,OAAS+pI,EAAOniI,MAAMiY,cAAoB,GAChNL,EAAUyX,YAAYoqB,GACtBA,EAAOiG,WAAW,MAAMu5C,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD73E,EAAIiO,YAAYoqB,GAChB7hC,EAAUyX,YAAYjO,GACtBthB,KAAKye,gBAAgB2rC,cAAci4E,EAAOv0H,QAAQ8D,SAAS,GAAGA,SAAS,GAAI+nC,EAAQr0B,GAC5EhE,GAEX0gH,EAAc1gG,UAAU6kG,cAAgB,SAAU9D,EAAQ4C,GACtD,IAAI1sI,EAAQ8pI,EAAOv0H,QAAQC,WAAWxV,MAClCD,EAAS+pI,EAAOv0H,QAAQC,WAAWzV,OASvC,OARK0H,KAAK4jI,aAAgB5jI,KAAK2jI,cAK3BprI,EAAQyH,KAAK4jI,YACbtrI,EAASmE,KAAK+I,IAAIxF,KAAK2jI,aAAcrrI,KALrCC,GAASyH,KAAKqlI,aAAaziI,KAAO5C,KAAKqlI,aAAaxiI,MAAQw/H,EAAOniI,MAAMiY,YACzE7f,GAAU0H,KAAKqlI,aAAatiI,IAAM/C,KAAKqlI,aAAaviI,OAASu/H,EAAOniI,MAAMiY,aAMvE,IAAIyF,GAAKrlB,EAAOD,IAI3B0pI,EAAc1gG,UAAUu/B,iBAAmB,SAAU1zD,GACjD,IAAInR,EACAD,EACA+kE,EACJ,IAAiC,IAA7B3zD,EAAEtR,KAAKqiB,QAAQ,SAAiB,CAEhC,IAAIwc,GADJomC,EAAW3zD,GACU4zD,eAAe,GAAGpmC,QACnCH,EAAQsmC,EAASC,eAAe,GAAGtmC,QACvCz+B,EAAU0+B,EAAQ16B,KAAKJ,QAAQ0mI,UAC/BvqI,EAAUy+B,EAAQx6B,KAAKJ,QAAQ2mI,gBAG/BvqI,EAAUmR,EAAEwtB,QAAU36B,KAAKJ,QAAQ0mI,UACnCvqI,EAAUoR,EAAEstB,QAAUz6B,KAAKJ,QAAQ2mI,WAEvC,OAASvvI,EAAG+E,EAAS9E,EAAG+E,IAE5BgmI,EAAc1gG,UAAUgyB,UAAY,SAAUnmD,EAAGotB,IACzCv6B,KAAKwmI,mBAAuBxmI,KAAK0+F,gBAC9B1+F,KAAK0+F,eAAe7+F,GAAK,eAAiBG,KAAKwmI,kBAAkB3mI,KACpEG,KAAKwmI,kBAAkBr6G,UAAU2vB,OAAO,kBACxC97C,KAAKwmI,kBAAkBtmI,MAAMwrB,gBAAkB,GAC/C1rB,KAAKwmI,kBAAoB,MAE7B,IAAI3mI,EAAKsN,EAAEnK,OAAOnD,GAAGyO,MAAM,cAAc,GACzC,GAAItO,KAAKiiI,YAAYpiI,GAAK,CACtB,IAAIiY,EAAYyJ,SAASC,eAAe3hB,EAAK,cAC7CiY,EAAUqU,UAAUC,IAAI,kBACxBpsB,KAAKwmI,kBAAoB1uH,EAE7B3K,EAAE+1D,kBAEN8+D,EAAc1gG,UAAUiyB,QAAU,SAAU6N,GACxC,GAAIA,GAAOA,EAAIp+D,OACX,GAA0B,eAAtBo+D,EAAIqlE,WAAW5mI,GAAqB,CACpC,IAAID,EAAU2hB,SAASC,eAAe,cAClC5hB,EAAQusB,UAAUuS,SAAS,wBAC3B9+B,EAAQu6B,UAAY,sCACpB5Y,SAASC,eAAe,aAAajc,MAAQ,GAC7CvF,KAAK0mI,cAAc,SAGtB,CACD,IAAI7mI,EAAKuhE,EAAIp+D,OAAOnD,GAAGyO,MAAM,cAAc,GAC3C,GAAIzO,GAAMG,KAAK0+F,eAAgB,CAC3B,IAAI3+F,GAASq2D,SAAUp2D,KAAK0+F,eAAe7+F,GAAIw2D,SAAUx2D,GAEzDG,KAAK43C,QADS,yBACQ73C,GACtBqhE,EAAI8B,oBAKpB8+D,EAAc1gG,UAAUqlG,MAAQ,SAAUvlE,GACtC,IAAI/6B,EAAQrmC,KACZ,GAAIA,KAAKuiI,aAAc,CACnB,IAAIqE,EAAY5mI,KACFuhB,SAASC,eAAe,cAC9B2Y,UAAY,iDAChBinC,GAAoB,UAAZA,EAAIl0C,KAAmC,KAAhBk0C,EAAI+E,SAM/BnmE,KAAK6mI,OACLvlE,aAAathE,KAAK6mI,OAEtB7mI,KAAK6mI,MAAQt/F,WAAW,WAChB65B,EAAIp+D,kBAAkB8jI,mBACtBF,EAAUF,cAActlE,EAAIp+D,OAAOuC,OACnC8gC,EAAMwgG,MAAQ,OAEnB,MAbCzlE,EAAIp+D,kBAAkB8jI,kBACtB9mI,KAAK0mI,cAActlE,EAAIp+D,OAAOuC,SAgB9Cy8H,EAAc1gG,UAAU2xB,UAAY,SAAUmO,GAC1C,IAAIvhE,EAAKuhE,EAAIp+D,OAAOnD,GAAGyO,MAAM,cAAc,GAC3C,GAAItO,KAAK0+F,eAAgB,CACrB,IAAIqoC,EAAYxlH,SAASC,eAAexhB,KAAK0+F,eAAe7+F,GAAK,cAC7DA,IAAOG,KAAK0+F,eAAe7+F,IAAMknI,GACjCA,EAAU56G,UAAU2vB,OAAO,sBAE3BhkC,EAAYyJ,SAASC,eAAexhB,KAAK0+F,eAAe7+F,GAAK,iBAE7DiY,EAAU5X,MAAMwrB,gBAAkB,IAEtC1rB,KAAK0+F,eAAiB,KAE1B,GAAI1+F,KAAKiiI,YAAYpiI,GAAK,CACtB,IAAIiY,GAAAA,EAAYyJ,SAASC,eAAe3hB,EAAK,eACnCssB,UAAUC,IAAI,qBACxBpsB,KAAK0+F,eAAiB1+F,KAAKiiI,YAAYpiI,GACvCuhE,EAAI8B,mBAKZ8+D,EAAc1gG,UAAU0lG,cAAgB,WAChChnI,KAAKmjI,YACLnjI,KACKojI,UAAY,IAAI6D,YAAUjnI,KAAKJ,SAChCsnI,WAAY,sBACZvoC,OAAQ3+F,KAAK2+F,OACbwoC,UAAWnnI,KAAKmnI,UAChBC,SAAUpnI,KAAKonI,SACfjsH,KAAM,SAAUpb,GACZ,IACIie,EAAS+b,GAAah6B,EAAW,OAAG,eACxC,GAAIie,GAAUA,EAAOmO,UAAUuS,SAAS,aAAc,CAElD1gB,EAAkB,cAAE,GAAGssE,UAAUkU,KAAKz+F,KAG9CsnI,UAAYzkI,KAAM5C,KAAK4lI,cAAcl2H,OAAO1Y,EAAG+L,IAAK/C,KAAK4lI,cAAcl2H,OAAOzY,OAI1F+qI,EAAc1gG,UAAU6lG,UAAY,SAAUh6H,GAC1C,IAAIvN,EAAUI,KAAK2+F,OAAO,GACtB/+F,GACAA,EAAQs2B,aAAa,YAAal2B,KAAKJ,QAAQC,KAGvDmiI,EAAc1gG,UAAU8lG,SAAW,SAAUj6H,GACpC4sB,GAAa5sB,EAAEnK,OAAQ,cACxB84C,SAAO3uC,EAAEwxF,SAKjBqjC,EAAc1gG,UAAUikG,YAAc,SAAUlD,EAAQyC,EAAiB/xG,EAAIC,EAAIz6B,EAAOD,EAAQ4tI,GAC5F,GAAI7D,aAAkBjvH,GAAW,CAC7B,IAAItF,EAAUu0H,EAAOv0H,QACrBu0H,EAAOv0H,QAAUg3H,EAAgBlzH,SAAS,GAI1C,IAAK,IAHDjW,EAAQ0mI,EAAOhnH,MAAM0X,EAAIC,EAAIz6B,EAAOD,EAAQwsI,EAAgBlzH,SAAS,IACrE7J,EAAOxP,EAAQ,EAAIusI,EAAgBlzH,SAAS,GAAGA,SAAS,GAAG7V,QAAUJ,EAAM3E,EAAI,EAC/E8kE,EAAOxjE,EAAS,EAAIwsI,EAAgBlzH,SAAS,GAAGA,SAAS,GAAG5V,QAAUL,EAAM1E,EAAI,EAC3E4F,EAAK,EAAG6f,EAAKooH,EAAgBlzH,SAAS,GAAGA,SAAU/U,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAC9E,IAAI+Q,EAAQ8O,EAAG7f,GACf+Q,EAAM7R,SAAWgM,EACjB6F,EAAM5R,SAAW8/D,EACjBluD,EAAMm3B,YAAa,EAEvBs9F,EAAOv0H,QAAUA,OAEhB,GAAIu0H,EAAOjkI,iBAAiB04C,IAAa92C,KAAKm5C,WAAY,CACvDrrC,EAAUu0H,EAAOv0H,QACrBu0H,EAAOv0H,QAAUg3H,EACjBA,EAAgBlzH,SAAS,GAAGrZ,MAAQA,EACpCusI,EAAgBlzH,SAAS,GAAGtZ,OAASA,EACrC0H,KAAKm5C,WAAWqjD,YAAajkG,MAAOA,EAAOD,OAAQA,GAAU+pI,EAAQA,EAAQ,MAC7EA,EAAOv0H,QAAUA,OAGjB,GAAIu0H,EAAOzwH,SAAU,CACjB,IAAI4L,EAAa6kH,EAAOzwH,SACpB8iB,EAAI,EACJC,EAAI,EACR,IAAKuxG,EAGD,IAAK,IAFD3lI,OAAO,EACPuX,OAAY,EACPphB,EAAI,EAAGA,EAAI8mB,EAAW/mB,OAAQC,KACnCohB,EAAYgtH,EAAgBlzH,SAAS,GAAGA,SAASlb,MAEzCohB,EAAUlG,SAAS,GAAGA,UACtB5R,KAAKsnI,aAAaxvH,GAEtBvX,EAAOP,KAAKiiI,YAAYnqH,EAAUjY,IAClCiY,EAAUvf,MAAQgI,EAAKhI,MACvBuf,EAAUxf,OAASiI,EAAKjI,OACxBwf,EAAU6F,QAAQ,IAAIC,IACtB9F,EAAU+F,QAAQ/F,EAAUlG,SAAS,GAAGkM,cAQpD,GAJA4W,EAAIn8B,EAAQusI,EAAgBlzH,SAAS,GAAGkM,YAAYvlB,MACpDo8B,EAAIr8B,EAASwsI,EAAgBlzH,SAAS,GAAGkM,YAAYxlB,OACrDwsI,EAAgBlzH,SAAS,GAAG+L,QAAQ,IAAIC,IACxCknH,EAAgBlzH,SAAS,GAAGiM,QAAQinH,EAAgBlzH,SAAS,GAAGkM,cAC3DooH,EAEI,CAAA,IADDt0H,OAAW,EACf,IAASlb,EAAI,EAAGA,EAAI8mB,EAAW/mB,OAAQC,KACnCkb,EAAWkzH,EAAgBlzH,SAAS,GAAGA,SAASlb,MAExCkb,EAASA,SAAS,GAAGA,UACrB5R,KAAKunI,cAAc31H,EAAU8iB,EAAGC,EAAG0tG,GAEvCriI,KAAKwnI,WAAW51H,EAAU8iB,EAAGC,EAAG0tG,IAI5C,GAAI6D,EAAS,CACL3lI,OAAO,EAIN,IAHD+gH,OAAa,EACbC,OAAc,EAElB,IADI3vG,OAAW,EACNlb,EAAI,EAAGA,EAAI8mB,EAAW/mB,OAAQC,IACnC6J,EAAOP,KAAKiiI,YAAYzkH,EAAW9mB,IACnC4qH,EAAa/oH,EAAQ8pI,EAAOv0H,QAAQ8D,SAAS,GAAGkM,YAAYvlB,MAC5DgpH,EAAcjpH,EAAS+pI,EAAOv0H,QAAQ8D,SAAS,GAAGkM,YAAYxlB,QAC9DsZ,EAAWkzH,EAAgBlzH,SAAS,GAAGA,SAASlb,MAExCkb,EAASA,SAAS,GAAGA,UACrB5R,KAAKunI,cAAc31H,EAAU0vG,EAAYC,EAAa8gB,GAAQ,GAElEriI,KAAKwnI,WAAW51H,EAAU0vG,EAAYC,EAAa8gB,GAAQ,IAGnEA,EAAOv0H,QAAQ8D,SAAS,GAAG+L,QAAQ,IAAIC,IACvCykH,EAAOv0H,QAAQ8D,SAAS,GAAGiM,QAAQwkH,EAAOv0H,QAAQ8D,SAAS,GAAGkM,mBAIlEgV,GAAagyG,EAAgBlzH,SAAS,GAAImhB,EAAIC,EAAI8xG,IAI9D9C,EAAc1gG,UAAUimG,cAAgB,SAAUzvH,EAAW4c,EAAGC,EAAG0tG,EAAQ6D,GAEvE,IAAK,IADDt4H,EACKlX,EAAI,EAAGA,EAAIohB,EAAUlG,SAASnb,OAAQC,KAC3CkX,EAAQkK,EAAUlG,SAASlb,IAChBkb,SAAS,GAAGA,SAInB5R,KAAKunI,cAAc35H,EAAO8mB,EAAGC,EAAG0tG,EAAQ6D,GAHxClmI,KAAKwnI,WAAW55H,EAAO8mB,EAAGC,EAAG0tG,EAAQ6D,IAOjDlE,EAAc1gG,UAAUgmG,aAAe,SAAUxvH,GAG7C,IAAK,IAFD2vH,EACAlnI,EACK7J,EAAI,EAAGA,EAAIohB,EAAUlG,SAASnb,OAAQC,KAC3C+wI,EAAiB3vH,EAAUlG,SAASlb,IAChBkb,SAAS,GAAGA,SAQ5B5R,KAAKsnI,aAAaG,IAPlBlnI,EAAOP,KAAKiiI,YAAYwF,EAAe5nI,IACvC4nI,EAAelvI,MAAQgI,EAAKhI,MAC5BkvI,EAAenvI,OAASiI,EAAKjI,OAC7BmvI,EAAe9pH,QAAQ,IAAIC,IAC3B6pH,EAAe5pH,QAAQ4pH,EAAe71H,SAAS,GAAGkM,eAO9DkkH,EAAc1gG,UAAUkmG,WAAa,SAAU55H,EAAO8mB,EAAGC,EAAG0tG,EAAQ6D,GAChEt4H,EAAMrV,MAAQqV,EAAMrV,MAAQm8B,EAC5B9mB,EAAMtV,OAAUsV,EAAMtV,OAASq8B,EAC/B/mB,EAAM7R,QAAUmqI,EAAWt4H,EAAM7R,QAAU24B,EAAK2tG,EAAOniI,MAAMiY,YAAevK,EAAM7R,QAAU24B,EAAK2tG,EAAOniI,MAAMiY,YAAc,EAC5HvK,EAAM5R,QAAUkqI,EAAWt4H,EAAM5R,QAAU24B,EAAK0tG,EAAOniI,MAAMiY,YAAevK,EAAM5R,QAAU24B,EAAK0tG,EAAOniI,MAAMiY,YAAc,EAC5HvK,EAAM+P,QAAQ,IAAIC,IAClBhQ,EAAMiQ,QAAQjQ,EAAMgE,SAAS,GAAGkM,cAEpCkkH,EAAc1gG,UAAUyhG,gBAAkB,WACtC/iI,KAAKyiI,iBAAiBz7C,SACtBhnF,KAAKkjI,iBACLljI,KAAKyiI,iBAAiB5+G,YAE1Bm+G,EAAc1gG,UAAU4hG,eAAiB,WACrC,IAAK,IAAIxsI,EAAI,EAAGA,EAAIsJ,KAAKk0B,SAASz9B,OAAQC,IAAK,CAC3C,IAAIgxI,EAAW1nI,KAAKk0B,SAASx9B,GAC7BsJ,KAAKsjI,YAAYoE,GACjB1nI,KAAKmkI,cAAcuD,KAG3B1F,EAAc1gG,UAAUkhG,cAAgB,WACpC,IAAImF,EAAY9lH,GAAkB,OAAShiB,GAAIG,KAAKJ,QAAQC,GAAK,YACjE8nI,EAAUzxG,aAAa,QAAS,qCAChCyxG,EAAUxtG,UAAY,gBACtBn6B,KAAKJ,QAAQ2vB,YAAYo4G,GACzB,IAAIC,EAAU/lH,GAAkB,YAChC+lH,EAAQC,YAAc,gBACtBD,EAAQ/nI,GAAK,YACb+nI,EAAQ1xG,aAAa,QAAS,0BAC9B0xG,EAAQztG,UAAY,UACpBwtG,EAAUp4G,YAAYq4G,GACtB,IAAIE,EAAOjmH,GAAkB,QAAUhiB,GAAI,aAAcs6B,UAAW,wCACpEwtG,EAAUp4G,YAAYu4G,IAE1B9F,EAAc1gG,UAAUolG,cAAgB,SAAUnhI,GAC9C,IAEI6+H,EAFAb,KACA3jI,EAAU2hB,SAASC,eAAe,iBAGtC,GAAI5hB,EACA,IAAK,IAAImgB,EAAIngB,EAAQgS,SAASnb,OAAS,EAAGspB,GAAK,EAAGA,IAC9CngB,EAAQ0vB,YAAY1vB,EAAQgS,SAASmO,IAI7C,IAAK,IAAIrpB,EAAI,EAAGA,EAAIsJ,KAAKk0B,SAASz9B,OAAQC,IAEtC,IAAK,IADD8tI,EAAqBxkI,KAAKk0B,SAASx9B,GAC9BL,EAAI,EAAGA,EAAImuI,EAAmBrwG,QAAQ19B,OAAQJ,IAAK,CACxD,IAAIo6B,EAAO+zG,EAAmBrwG,QAAQ99B,GACxB,KAAVkP,IAAwE,IAAxDkrB,EAAK5wB,GAAGhJ,cAAcqnB,QAAQ3Y,EAAM1O,gBACpD0sI,EAAYzsI,KAAK25B,GAI7B,IAAIs3G,EAAgBnkH,GAAY5jB,KAAK+nI,eAUrC,GATIA,IACAxE,EAAcwE,EAAcxE,QAG3B3jI,IAEDA,EADAwkI,EAAapkI,KAAKgoI,oBAAoB5D,IAItCb,EAAY9sI,OAAS,EACrB,IAAK,IAAIoG,EAAK,EAAGorI,EAAgB1E,EAAa1mI,EAAKorI,EAAcxxI,OAAQoG,IAAM,CAC3E,IAAIwlI,EAAS4F,EAAcprI,GAC3BmD,KAAK0kI,mBAAmBrC,EAAQziI,QAGnC,GAAc,KAAV2F,EAAc,CACnB,IAAI2iI,EAAWrmH,GAAkB,OAAShiB,GAAM,WAAYK,MAAS,wCACrEgoI,EAASziC,UAAY,sBACrB7lG,EAAQ2vB,YAAY24G,OAEnB,CACe3mH,SAASC,eAAe,cAC9B2Y,UAAY,sCACtBn6B,KAAKyiI,iBAAiBlyG,WAAW,KAGzCyxG,EAAc1gG,UAAU0mG,oBAAsB,SAAU5D,GACpDA,EAAaviH,GAAkB,OAAShiB,GAAM,gBAAiBK,MAAS,gCACxEF,KAAKJ,QAAQ2vB,YAAY60G,GAMzB,OADApkI,KAAKyiI,iBAAiB0F,SAHlB9oH,OAAQ,iBAAkBsjH,UAAU,EACpC1iI,QAAS,kBAEoC,GAC1CmkI,GAKXpC,EAAc1gG,UAAUka,WAAa,WACjC,IAAIgvC,EAAa30D,UAAQ40D,gBACrBC,EAAY70D,UAAQ80D,cACpBC,EAAY/0D,UAAQg1D,eAGxBK,eAAa9+D,IAAIpsB,KAAKJ,QAAS4qF,EAAYxqF,KAAKizD,UAAWjzD,MAC3DkrF,eAAa9+D,IAAIpsB,KAAKJ,QAASgrF,EAAW5qF,KAAKszD,UAAWtzD,MAC1DkrF,eAAa9+D,IAAIpsB,KAAKJ,QAAS8qF,EAAW1qF,KAAKuzD,QAASvzD,MACxDkrF,eAAa9+D,IAAIpsB,KAAKJ,QAJP,QAI0BI,KAAK2mI,MAAO3mI,MAErDA,KAAKgnI,iBAKThF,EAAc1gG,UAAUia,aAAe,WACnC,IAAIivC,EAAa30D,UAAQ40D,gBACrBC,EAAY70D,UAAQ80D,cACpBC,EAAY/0D,UAAQg1D,eACNh1D,UAAQk1D,UAE1BG,eAAapvC,OAAO97C,KAAKJ,QAAS4qF,EAAYxqF,KAAKizD,WACnDi4B,eAAapvC,OAAO97C,KAAKJ,QAASgrF,EAAW5qF,KAAKszD,WAClD43B,eAAapvC,OAAO97C,KAAKJ,QAAS8qF,EAAW1qF,KAAKuzD,SAClD23B,eAAapvC,OAAO97C,KAAKJ,QAJV,QAI6BI,KAAK2mI,QAErD1kG,IACImB,WAAS,MACV4+F,EAAc1gG,UAAW,iBAAa,GACzCW,IACImB,WAAS,SACV4+F,EAAc1gG,UAAW,aAAS,GACrCW,IACImB,WAAS,SACV4+F,EAAc1gG,UAAW,cAAU,GACtCW,IACIgE,gBAAe67F,KAChBE,EAAc1gG,UAAW,gBAAY,GACxCW,IACImB,cACD4+F,EAAc1gG,UAAW,qBAAiB,GAC7CW,IACImB,cACD4+F,EAAc1gG,UAAW,qBAAiB,GAC7CW,IACImB,cACD4+F,EAAc1gG,UAAW,yBAAqB,GACjDW,IACImB,cACD4+F,EAAc1gG,UAAW,mBAAe,GAC3CW,IACImB,cACD4+F,EAAc1gG,UAAW,oBAAgB,GAC5CW,IACI8H,WAAUnnC,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAAMgjC,KACvDk8F,EAAc1gG,UAAW,oBAAgB,GAC5CW,IACImB,YAAS,IACV4+F,EAAc1gG,UAAW,iBAAa,GACzCW,IACI8H,aAAYg4F,KACbC,EAAc1gG,UAAW,qBAAiB,GAC7CW,IACImB,YAAS,IACV4+F,EAAc1gG,UAAW,oBAAgB,GAC5CW,IACImB,YAAS,IACV4+F,EAAc1gG,UAAW,uBAAmB,GAC/CW,IACImB,WAAS,aACV4+F,EAAc1gG,UAAW,kBAAc,GAC1CW,IACIw+D,WACDuhC,EAAc1gG,UAAW,8BAA0B,GACtDW,IACImB,cACD4+F,EAAc1gG,UAAW,uBAAmB,GAC/CW,IACImB,cACD4+F,EAAc1gG,UAAW,4BAAwB,GAC7C0gG,GACTjjF,aCjyCEtd,GAAwC,WACxC,IAAIC,EAAgB,SAAUhb,EAAGzW,GAI7B,OAHAyxB,EAAgB/kB,OAAOglB,iBAChBC,wBAA2BjF,OAAS,SAAUjW,EAAGzW,GAAKyW,EAAEkb,UAAY3xB,IACvE,SAAUyW,EAAGzW,GAAK,IAAK,IAAI4xB,KAAK5xB,EAAOA,EAAEysB,eAAemF,KAAInb,EAAEmb,GAAK5xB,EAAE4xB,MACpDnb,EAAGzW,IAE5B,OAAO,SAAUyW,EAAGzW,GAEhB,SAAS6xB,IAAO9hC,KAAK+hC,YAAcrb,EADnCgb,EAAchb,EAAGzW,GAEjByW,EAAE4a,UAAkB,OAANrxB,EAAa0M,OAAOqlB,OAAO/xB,IAAM6xB,EAAGR,UAAYrxB,EAAEqxB,UAAW,IAAIQ,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYl/B,EAAQkqB,EAAKiV,GAC7E,IAA2Hzb,EAAvH0b,EAAIC,UAAU5rC,OAAQ2W,EAAIg1B,EAAI,EAAIp/B,EAAkB,OAATm/B,EAAgBA,EAAOxlB,OAAO2lB,yBAAyBt/B,EAAQkqB,GAAOiV,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBp1B,EAAIm1B,QAAQC,SAASN,EAAYl/B,EAAQkqB,EAAKiV,QACpH,IAAK,IAAIzrC,EAAIwrC,EAAWzrC,OAAS,EAAGC,GAAK,EAAGA,KAASgwB,EAAIwb,EAAWxrC,MAAI0W,GAAKg1B,EAAI,EAAI1b,EAAEtZ,GAAKg1B,EAAI,EAAI1b,EAAE1jB,EAAQkqB,EAAK9f,GAAKsZ,EAAE1jB,EAAQkqB,KAAS9f,GAChJ,OAAOg1B,EAAI,GAAKh1B,GAAKuP,OAAO8lB,eAAez/B,EAAQkqB,EAAK9f,GAAIA,GA+B5Dg7H,GAA0B,SAAU1lG,GAEpC,SAAS0lG,EAASnwG,EAASr4B,GACvB,IAAIymC,EAAQ3D,EAAO0E,KAAKpnC,KAAMi4B,EAASr4B,IAAYI,KAiBnD,OAfAqmC,EAAMza,KAAO,SAEbya,EAAMxmC,GAAK,WACXwmC,EAAMgiG,WAAa,GACnBhiG,EAAMh0B,WAAa,KACnBg0B,EAAMmY,aAAe,KACrBnY,EAAMiiG,UAAY,KAClBjiG,EAAMhrB,MAAQ,KACdgrB,EAAMqsB,UAAW,EACjBrsB,EAAMkiG,cAAgB,EACtBliG,EAAMzjB,iBAAmB,EACzByjB,EAAMvjB,eAAiB,EACvBujB,EAAMtwB,SACNswB,EAAMsR,OAAQ,EACdtR,EAAMtwB,OAAUxd,MAAO8tC,EAAM9tC,MAAOD,OAAQ+tC,EAAM/tC,QAC3C+tC,EAy0BX,OA51BA5E,GAAU2mG,EAAU1lG,GA0BpB0lG,EAAS9mG,UAAU2a,kBAAoB,SAAUC,EAASC,GACtD,IACK,IAAIt/C,EAAK,EAAG6f,EAAKC,OAAOC,KAAKs/B,GAAUr/C,EAAK6f,EAAGjmB,OAAQoG,IAAM,CAE9D,OADW6f,EAAG7f,IAEV,IAAK,WACDmD,KAAKwoI,UAAUtsF,EAAQz6C,UACvB,MACJ,IAAK,QACL,IAAK,SACDzB,KAAKyoI,eACLzoI,KAAKwoI,UAAUxoI,KAAKyB,aASpC2mI,EAAS9mG,UAAUya,eAAiB,WAEhC,OAAO/7C,KAAKg8C,cADK,YAMrBosF,EAAS9mG,UAAUga,UAAY,WAC3Bt7C,KAAKJ,QAAQM,MAAM2vD,WAAa,cAChC7vD,KAAKu7C,eACLv7C,KAAKw7C,cAET4sF,EAAS9mG,UAAUma,OAAS,WACxBz7C,KAAKye,gBAAkB,IAAIuqC,GAAgBhpD,KAAKJ,QAAQC,GAAI,IAAIomD,IAAe,GAC/EjmD,KAAKyoI,eACLzoI,KAAKwoI,UAAUxoI,KAAKyB,WAExB2mI,EAAS9mG,UAAUmgC,aAAe,SAAUuvB,GAQxC,OANIA,EAAK1yF,WAAW4f,QAAQ,MAAQ,GAAK8yE,EAAK1yF,WAAW4f,QAAQ,KAAO,EAC7D8yE,EAAK1yF,WAGL0yF,EAAK1yF,WAAa,MAIjC8pI,EAAS9mG,UAAUmnG,aAAe,SAAUxwG,GACxC,IAAI0hB,EAASp4B,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,WAClD85C,IACDA,EAAS93B,GAAkB,UAC3B7hB,KAAKJ,QAAQ2vB,YAAYoqB,IAQ7BhgB,GAAiBggB,GALb95C,GAAMG,KAAKJ,QAAQC,GAAK,UAAW8X,MAAS,UAC5CzX,MAAS,6BAA+BF,KAAKyhE,aAAazhE,KAAK+V,MAAMzd,QAAU,WAC3E0H,KAAKyhE,aAAazhE,KAAK+V,MAAMxd,OAC7B,sDAGRyH,KAAKJ,QAAQs2B,aAAa,WAAY4nE,OAAO,IAC7C99F,KAAKJ,QAAQM,MAAMw/E,SAAW,SAC9B1/E,KAAKJ,QAAQM,MAAM5H,OAASwlG,OAAO99F,KAAK+V,MAAMzd,QAC9C0H,KAAKJ,QAAQM,MAAM3H,MAAQulG,OAAO99F,KAAK+V,MAAMxd,OAC7CyH,KAAK25C,OAASA,GAElByuF,EAAS9mG,UAAUknG,UAAY,SAAU3oI,GACrC,IAAID,EAAU2hB,SAASC,eAAe3hB,GAEtC,GAAIG,KAAKge,OAAQ,CACb,IAAI0qH,EAAY1oI,KAAKge,OACrBhe,KAAKge,OAAS,KACd0qH,EAAUhuC,YAAY,KAAM16F,KAAKJ,QAAQC,IACzCG,KAAK2oI,eAAe3oI,MAExBA,KAAKge,OAAShe,KAAK4oI,WAAWhpI,EAPf,iBAQXI,KAAKge,QACLhe,KAAKge,OAAO08E,YAAY16F,OAGhCooI,EAAS9mG,UAAUsnG,WAAa,SAAUhpI,EAASo0B,GAG/C,IAAK,IAFD90B,EACAwyC,EAAI9xC,EAAQo0B,GAAUv9B,OACjBC,EAAI,EAAGA,EAAIg7C,EAAGh7C,IACnB,GAAI8uB,GAAS5lB,EAAQo0B,GAAUt9B,GAAGkJ,QAAS,aAAc,CACrDV,EAAUU,EAAQo0B,GAAUt9B,GAC5B,MAGR,OAAOwI,GAEXkpI,EAAS9mG,UAAUia,aAAe,WAC9B,IAAIx2B,EAAQ8Q,UAAQ40D,gBAChB5rC,EAAOhpB,UAAQg1D,eAEfv0B,EAASzgC,UAAQk1D,UAAY,eAAiB,aAC9CC,EAAgBn1D,UAAQk1D,UAGxBw3B,GAFa1sF,UAAQC,KAAKvd,KAEnBsd,UAAQ80D,eACnBO,eAAapvC,OAAO97C,KAAKJ,QAASmlB,EAAO/kB,KAAKizD,WAC9Ci4B,eAAapvC,OAAO97C,KAAKJ,QAASi/C,EAAM7+C,KAAKszD,WAC7C43B,eAAapvC,OAAO97C,KAAKJ,QAAS2iH,EAAMviH,KAAKuzD,SAC7C23B,eAAapvC,OAAO97C,KAAKJ,QAAS02D,EAAQt2D,KAAK6oI,iBAC/C39C,eAAapvC,OAAO5mB,OAAQ,SAAUl1B,KAAKmhE,cAC3C,IAAIrpD,EAAYyJ,SAASC,eAAexhB,KAAKyB,SAAW,WACpDqW,GACAozE,eAAapvC,OAAOhkC,EAAW,SAAU9X,KAAK4nE,WAGtDwgE,EAAS9mG,UAAUka,WAAa,WAC5B,IAAIz2B,EAAQ8Q,UAAQ40D,gBAChB83B,EAAO1sF,UAAQ80D,cACf9rC,EAAOhpB,UAAQg1D,eACfv0B,EAASzgC,UAAQk1D,UAAY,eAAiB,aAC9CC,EAAgBn1D,UAAQk1D,UACXl1D,UAAQC,KAAKvd,KAE9B2yE,eAAa9+D,IAAIpsB,KAAKJ,QAASmlB,EAAO/kB,KAAKizD,UAAWjzD,MACtDkrF,eAAa9+D,IAAIpsB,KAAKJ,QAASi/C,EAAM7+C,KAAKszD,UAAWtzD,MACrDkrF,eAAa9+D,IAAIpsB,KAAKJ,QAAS2iH,EAAMviH,KAAKuzD,QAASvzD,MACnDkrF,eAAa9+D,IAAIpsB,KAAKJ,QAAS02D,EAAQt2D,KAAK6oI,gBAAiB7oI,MAC7DkrF,eAAa9+D,IAAI8I,OAAQ,SAAUl1B,KAAKmhE,aAAcnhE,MACtD,IAAI8X,EAAYyJ,SAASC,eAAexhB,KAAKyB,SAAW,WACpDqW,GACAozE,eAAa9+D,IAAItU,EAAW,SAAU9X,KAAK4nE,SAAU5nE,OAS7DooI,EAAS9mG,UAAUs5D,eAAiB,SAAU7U,GAC1CA,EAAKpsC,OAAS35C,KAAK25C,OACnB,IAAIiE,EAAIr8B,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAK,QAC7C+9C,GACAA,EAAEpgC,WAAW8R,YAAYsuB,GAE7B,IAMI3iB,EAAMrB,GAAiB,OALvB/5B,GAAIG,KAAK25C,OAAO95C,GAAK,OACrBipI,QAAS,MACTC,MAAO,+BACPpxH,MAAS,iBAGb3X,KAAKi7B,IAAMA,EACX8qD,EAAK9qD,IAAMA,EACX8qD,EAAKpsC,OAAOpqB,YAAY0L,GACxB,IACIr7B,EADM2hB,SAASC,eAAexhB,KAAKJ,QAAQC,IAE3CmpI,EAASppI,EAAQ0jB,YACjB2lH,EAAUrpI,EAAQ2jB,aAClB2lH,EAAQtpI,EAAQioB,wBAEhBshH,EAAWj0G,OAAOi0G,QAAU,GAAuB,EAAlBj0G,OAAOi0G,QAAej0G,OAAOi0G,QAC9DC,EAAWl0G,OAAOk0G,QAAU,GAAuB,EAAlBl0G,OAAOk0G,QAAel0G,OAAOk0G,QACnD,IAAXJ,IACAA,EAASvsI,KAAKm3B,MAAQsB,OAAOm0G,WAAaF,EAAW1sI,KAAKm3B,MAAMs1G,EAAMtmI,QAE1D,IAAZqmI,IACAA,EAAUxsI,KAAKm3B,MAAQsB,OAAOo0G,YAAcF,EAAW3sI,KAAKm3B,MAAMs1G,EAAMnmI,OAE5Ek4B,EAAI/E,aAAa,QAAS4nE,OAAOkrC,IACjC/tG,EAAI/E,aAAa,SAAU4nE,OAAOmrC,IAClCjpI,KAAK+V,MAAMxd,MAAQywI,EACnBhpI,KAAK+V,MAAMzd,OAAS2wI,EACpB,IAAIxvH,EACJ,IAAKssE,EAAK6L,gBAAiB,CACvB7L,EAAK6L,gBAAkB/vE,GAAkB,UACzBN,SAASC,eAAexhB,KAAKJ,QAAQC,IACrDkmF,EAAK3S,aAAezzB,GAAeyB,aAAaphD,KAAKJ,QAAQC,GAAK,gBAAiBG,KAAK+V,MAAMxd,MAAOyH,KAAK+V,MAAMzd,QAChHytF,EAAK3S,aAAal9C,aAAa,QAAS,0CACxC6vD,EAAK6L,gBAAgBriE,YAAYw2D,EAAK3S,cACtC2S,EAAKpsC,OAAOpqB,YAAYw2D,EAAK6L,iBAEjCn4E,GACI5Z,GAAMG,KAAKJ,QAAQC,GAAK,oBACxBK,MAAS,SAAWF,KAAK+V,MAAMxd,MAAQ,cAAgByH,KAAK+V,MAAMzd,OAAS,yCAE/EqhC,GAAiBosD,EAAK6L,gBAAiBn4E,GACvCzZ,KAAKupI,gBAAgBxjD,EAAKpsC,QAC1B35C,KAAKuyF,kBAAkBxM,EAAKpsC,OAAQosC,GACpC/lF,KAAKwpI,qBAAqBzjD,IAG9BqiD,EAAS9mG,UAAUqnG,eAAiB,SAAU5iD,GAC1C,IAAI9qD,EAAM1Z,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAK,QACnDG,KAAK25C,OAAOrqB,YAAY2L,GACxB,IAAI3V,EAAY/D,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,cAC1DG,KAAK25C,OAAOrqB,YAAYhK,GACxB,IAAI8tD,EAAe7xD,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,qBAC7DG,KAAK25C,OAAOrqB,YAAY8jD,GACxB2S,EAAK6L,gBAAkB,KACvB7L,EAAK3S,aAAe,MAExBg1D,EAAS9mG,UAAUioG,gBAAkB,SAAU5vF,GAC3C,IAAIr0B,EAAYzD,GAAkB,OAC9BhiB,GAAMG,KAAKJ,QAAQC,GAAK,aAAc8X,MAAS,eAC/CzX,MAAS,4DAMTupI,EAAU5nH,GAAkB,OAH5BhiB,GAAMG,KAAKJ,QAAQC,GAAK,iBACxBK,MAAS,wCAKb,OAFAolB,EAAUiK,YAAYk6G,GACtB9vF,EAAOpqB,YAAYjK,GACZA,GAEX8iH,EAAS9mG,UAAUixD,kBAAoB,SAAU54C,EAAQosC,GACrD,IAAIgN,EAAiB/yF,KAAKge,OAAOuzE,UAAUvxF,KAAKJ,QAAQC,GAAK,mBAAoBG,KAAK+V,MAAMxd,MAAOyH,KAAK+V,MAAMzd,QAC1Gw2D,EAAcl1B,GAAiB,KAAO/5B,GAAMG,KAAKJ,QAAQC,GAAK,iBAClEkzF,EAAexjE,YAAYu/B,GAC3Bi3B,EAAK6L,gBAAgBriE,YAAYwjE,GACjCj5D,GAAgBi5D,GAAkBp7E,MAAS,oBAE/CywH,EAAS9mG,UAAUkoG,qBAAuB,SAAUzjD,GAChD,IAAI9qD,EAAM1Z,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAK,gBAC/Co7B,GACAA,EAAIzd,WAAW8R,YAAY2L,GAU/BA,EAAMrB,GAAiB,OAPnB/5B,GAAIG,KAAK25C,OAAO95C,GAAK,eACrBipI,QAAS,MACTC,MAAO,+BACP7oI,MAAS,oEACT3H,MAAOyH,KAAK+V,MAAMxd,MAClBD,OAAQ0H,KAAK+V,MAAMzd,SAGvBytF,EAAKpsC,OAAOpqB,YAAY0L,GACxB,IAAIyuG,EAAM9vG,GAAiB,KAAO/5B,GAAMG,KAAKJ,QAAQC,GAAK,iBAAkBK,MAAS,wBACrF+6B,EAAI1L,YAAYm6G,GAChB,IAAIrtH,EAAOud,GAAiB,QACxB3hB,KAAQ,cAAe1f,MAAS,OAAQD,OAAU,OAAQqf,MAAS,mBACnE9X,GAAMG,KAAK25C,OAAO95C,GAAK,qBAE3Bwc,EAAK6Z,aAAa,QAAS,2BAC3BwzG,EAAIn6G,YAAYlT,GAChB,IACIuhC,EAAIhkB,GAAiB,KAAO/5B,GAAMG,KAAK25C,OAAO95C,GAAK,iBAAkBK,MAAS,uBAClFwpI,EAAIn6G,YAAYquB,GAChB,IAAI+rF,EAAY/vG,GAAiB,QAAU/5B,GAAMG,KAAK25C,OAAO95C,GAAK,eAAgBoY,KAAQ,gBAC1F2lC,EAAEruB,YAAYo6G,GACd3pI,KAAK4pI,qBAAqB,OAAQhsF,GAClC59C,KAAK4pI,qBAAqB,QAAShsF,GACnC59C,KAAK4pI,qBAAqB,MAAOhsF,GACjC59C,KAAK4pI,qBAAqB,SAAUhsF,GACpC59C,KAAK4pI,qBAAqB,UAAWhsF,GACrC59C,KAAK4pI,qBAAqB,WAAYhsF,GACtC59C,KAAK4pI,qBAAqB,aAAchsF,GACxC59C,KAAK4pI,qBAAqB,cAAehsF,IAE7CwqF,EAAS9mG,UAAUsoG,qBAAuB,SAAUrxH,EAAMyF,GAC5Che,KAAKi7B,IAAf,IACI78B,EAOAurI,EAAY/vG,GALZx7B,EADS,QAATma,GAA2B,WAATA,GAA8B,UAATA,GAA6B,SAATA,EACnD,OAGA,UAE8B1Y,GAAMG,KAAK25C,OAAO95C,GAAK,UAAY0Y,IAC7EyF,EAAOuR,YAAYo6G,GACnB,IAAIE,EAAYjwG,GAAiBx7B,GAC7ByB,GAAMG,KAAK25C,OAAO95C,GAAK0Y,EAAMZ,MAAS,kBAAmBM,KAAQ,gBAErE+F,EAAOuR,YAAYs6G,IAEvBzB,EAAS9mG,UAAUwoG,wBAA0B,WACzC,IAAI71E,EAAOj0D,KAAKw+C,aAAaxnD,EAAIgJ,KAAKsoI,UAAUtxI,EAC5Ck9D,EAAOl0D,KAAKw+C,aAAavnD,EAAI+I,KAAKsoI,UAAUrxI,EAC5Cs6B,EAAO,IAAI3T,GACf2T,EAAKh5B,MAAQ,EACbg5B,EAAKj5B,OAAS,EACd,IAAItB,EAAI,EACJC,EAAI,EAGR,OAAQ+I,KAAK+pI,iBACT,IAAK,OACDx4G,EAAKh5B,OAAS07D,EACd1iC,EAAKj5B,QAAU27D,EAAOj0D,KAAKuoI,cAC3BvxI,EAAIi9D,EACJh9D,EAAIg9D,EAAOj0D,KAAKuoI,cAChBtxI,GAAK,EACL,MACJ,IAAK,QACDs6B,EAAKh5B,OAAS07D,EACd1iC,EAAKj5B,QAAU27D,EAAOj0D,KAAKuoI,cAC3BtxI,EAAIg9D,EAAOj0D,KAAKuoI,cAChBtxI,IAAM,EACN,MACJ,IAAK,MACDs6B,EAAKj5B,QAAU47D,EACf3iC,EAAKh5B,OAAS27D,EAAOl0D,KAAKuoI,cAC1BtxI,EAAIi9D,EACJl9D,EAAIk9D,EAAOl0D,KAAKuoI,cAChBvxI,GAAK,EACL,MACJ,IAAK,SACDu6B,EAAKj5B,QAAU47D,EACf3iC,EAAKh5B,OAAS27D,EAAOl0D,KAAKuoI,cAC1BvxI,EAAIk9D,EAAOl0D,KAAKuoI,cAChBvxI,IAAM,EACN,MACJ,IAAK,UACGyF,KAAK6G,IAAI4wD,GAAQz3D,KAAK6G,IAAI2wD,GAC1BA,EAAOC,EAAOl0D,KAAKuoI,cAGnBr0E,EAAOD,EAAOj0D,KAAKuoI,cAEvBh3G,EAAKh5B,OAAS07D,EACd1iC,EAAKj5B,QAAU47D,EACfl9D,EAAIi9D,EACJh9D,EAAIi9D,EACJ,MACJ,IAAK,WACGz3D,KAAK6G,IAAI4wD,GAAQz3D,KAAK6G,IAAI2wD,GAC1BA,GAAQC,EAAOl0D,KAAKuoI,cAGpBr0E,GAASD,EAAOj0D,KAAKuoI,cAEzBtxI,EAAIi9D,EACJ3iC,EAAKh5B,OAAS07D,EACd1iC,EAAKj5B,QAAU47D,EACf,MACJ,IAAK,aACGz3D,KAAK6G,IAAI4wD,GAAQz3D,KAAK6G,IAAI2wD,GAC1BA,GAAQC,EAAOl0D,KAAKuoI,cAGpBr0E,GAAQD,EAAOj0D,KAAKuoI,cAExBvxI,EAAIi9D,EACJ1iC,EAAKh5B,OAAS07D,EACd1iC,EAAKj5B,QAAU47D,EACf,MACJ,IAAK,cACGz3D,KAAK6G,IAAI4wD,GAAQz3D,KAAK6G,IAAI2wD,GAC1BA,EAAOC,EAAOl0D,KAAKuoI,cAGnBr0E,EAAOD,EAAOj0D,KAAKuoI,cAEvBh3G,EAAKh5B,OAAS07D,EACd1iC,EAAKj5B,QAAU47D,EAGvBl0D,KAAKgqI,aAAahzI,EAAGC,EAAGs6B,OA1EpBmD,OACAC,IA2ERyzG,EAAS9mG,UAAU0oG,aAAe,SAAU/1E,EAAMC,EAAM3iC,EAAMh5B,EAAOD,GACjE,IAAItB,EACAC,EACAuK,EAEA6a,EADMrc,KAAKJ,QAAQ++C,qBAAqB,OAAO,GACpCn9B,eAAe,UAC9B,GAAI+P,EAEAv6B,GADAwK,EAAS6a,EAAK8Z,WACHn/B,EAAIi9D,EACfh9D,EAAIuK,EAAOvK,EAAIi9D,EACf37D,EAAQiJ,EAAOjJ,MAAQg5B,EAAKh5B,MAC5BD,EAASkJ,EAAOlJ,OAASi5B,EAAKj5B,WAE7B,CACD,IAAI2xI,EAEAA,EADAjqI,KAAKw+C,aAAaxnD,EAAIgJ,KAAKqS,WAAWrb,EAC7BgJ,KAAKw+C,aAAaxnD,EAAIgJ,KAAKsoI,UAAUtxI,EAGrCgJ,KAAKsoI,UAAUtxI,EAAIgJ,KAAKw+C,aAAaxnD,EAElD,IAAIkzI,EAEAA,EADAlqI,KAAKw+C,aAAavnD,EAAI+I,KAAKqS,WAAWpb,EAC7B+I,KAAKw+C,aAAavnD,EAAI+I,KAAKsoI,UAAUrxI,EAGrC+I,KAAKsoI,UAAUrxI,EAAI+I,KAAKw+C,aAAavnD,EAI9CwF,KAAK6G,IAAI4mI,GAAUztI,KAAK6G,IAAI2mI,GAC5BA,EAASjqI,KAAKuoI,cAAgB2B,EAK9BA,EAASD,EAASjqI,KAAKuoI,cAI3B/mI,EAAS6a,EAAK8Z,UACdn/B,EAAMgJ,KAAKqS,WAAWrb,EAAIgJ,KAAKw+C,aAAaxnD,EACxCwK,EAAOxK,EAAIizI,EAASzoI,EAAOxK,EAC/BC,EAAM+I,KAAKqS,WAAWpb,EAAI+I,KAAKw+C,aAAavnD,EAAKuK,EAAOvK,EAAIizI,EAAS1oI,EAAOvK,EAC5EsB,EAAQiJ,EAAOjJ,MAAQ0xI,EACvB3xI,EAASkJ,EAAOlJ,OAAS4xI,EAE7BpwG,GAAgB95B,KAAK2+F,QACjB9+F,GAAMG,KAAK2+F,OAAO9+F,GAAI7I,EAAKA,EAAGC,EAAKA,EACnCsB,MAASkE,KAAK+I,IAAI,EAAGjN,GAAQD,OAAUmE,KAAK+I,IAAI,EAAGlN,MAG3D8vI,EAAS9mG,UAAU6oG,mBAAqB,SAAUnzI,EAAGC,EAAGsB,EAAOD,GAG3DqhC,GAFWpY,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAK,iBACvC7I,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOkE,KAAK+I,IAAI,EAAGjN,GAAQD,OAAQmE,KAAK+I,IAAI,EAAGlN,KAExE0H,KAAKoqI,qBAAqB,MAAOpzI,EAAI,EAAGC,EAAI,EAAGwF,KAAK+I,IAAI,EAAGjN,EAAQ,IAAK,GACxEyH,KAAKoqI,qBAAqB,SAAUpzI,EAAI,EAAGC,EAAIqB,EAAQmE,KAAK+I,IAAI,EAAGjN,EAAQ,IAAK,GAChFyH,KAAKoqI,qBAAqB,OAAQpzI,EAAI,EAAGC,EAAI,EAAG,EAAGwF,KAAK+I,IAAI,EAAGlN,EAAS,KACxE0H,KAAKoqI,qBAAqB,QAASpzI,EAAIuB,EAAOtB,EAAI,EAAG,EAAGwF,KAAK+I,IAAI,EAAGlN,EAAS,KAC7E0H,KAAKoqI,qBAAqB,UAAWpzI,EAAGC,EAAG,EAAG,GAC9C+I,KAAKoqI,qBAAqB,WAAYpzI,EAAIuB,EAAOtB,EAAG,EAAG,GACvD+I,KAAKoqI,qBAAqB,aAAcpzI,EAAGC,EAAIqB,EAAQ,EAAG,GAC1D0H,KAAKoqI,qBAAqB,cAAepzI,EAAIuB,EAAOtB,EAAIqB,EAAQ,EAAG,IAEvE8vI,EAAS9mG,UAAU8oG,qBAAuB,SAAU7xH,EAAMvhB,EAAGC,EAAGsB,EAAOD,GACnE,IAAIilD,EACA8sF,EACAC,EAAW,UAAY/xH,EACvB8D,EAAOkF,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAKyqI,GACvC,QAAT/xH,GAA2B,WAATA,GAA8B,UAATA,GAA6B,SAATA,GAC3DglC,GAASvmD,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOA,EAAOD,OAAQA,EAAQ2f,KAAM,WACzDoyH,GAAcrzI,EAAGA,EAAI,EAAGC,EAAGA,EAAI,EAAGsB,MAAiB,IAAVA,EAAc,EAAIA,EAAOD,OAAmB,IAAXA,EAAe,EAAIA,KAG7FilD,GAASpwB,GAAIn2B,EAAGo2B,GAAIn2B,EAAGmW,EAAK,EAAG6K,KAAM,WACrCoyH,GAAcl9G,GAAIn2B,EAAGo2B,GAAIn2B,EAAGmW,EAAK,EAAG6K,KAAM,gBAE9C0hB,GAAiBtd,EAAMkhC,GAEvB5jB,GADgBpY,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAK0Y,GAC7B8xH,IAEhCjC,EAAS9mG,UAAUipG,2BAA6B,WAC5C,IAAIC,EAAWryI,OAAO6H,KAAK+V,MAAMxd,OAC7BkyI,EAAYtyI,OAAO6H,KAAK+V,MAAMzd,QAC9B27D,EAAOj0D,KAAKw+C,aAAaxnD,EAAIgJ,KAAKsoI,UAAUtxI,EAC5Ck9D,EAAOl0D,KAAKw+C,aAAavnD,EAAI+I,KAAKsoI,UAAUrxI,EAM5CuK,GAJO/E,KAAKqK,IAAI9G,KAAKge,OAAOU,SAAS2E,cAAgBmnH,EAAUxqI,KAAKge,OAAOU,SAAS0E,eAAiBqnH,GAC/FzqI,KAAKJ,QAAQ++C,qBAAqB,OAAO,GACnCn9B,eAAexhB,KAAK25C,OAAO95C,GACrC,gBACas2B,WACfn/B,EAAIwK,EAAOxK,EAAIi9D,EACfh9D,EAAIuK,EAAOvK,EAAIi9D,EACf37D,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OACpB0H,KAAKmqI,mBAAmBnzI,EAAGC,EAAGsB,EAAOD,GACrC0H,KAAK0qI,iBAAiB1qI,KAAKge,OAAOU,SAASgF,YAAa1sB,EAAGC,EAAGsB,EAAOD,EAAQ,OAEjF8vI,EAAS9mG,UAAUqpG,mBAAqB,SAAU3zI,EAAGC,EAAGsB,EAAOD,GAC3D,IAAIkyI,EAAWryI,OAAO6H,KAAK+V,MAAMxd,OAC7BkyI,EAAYtyI,OAAO6H,KAAK+V,MAAMzd,QAE9BsyI,EAAaryI,EAAQiyI,EAAYxqI,KAAKkoD,aACtC2iF,EAAcvyI,EAASmyI,EAAazqI,KAAKmoD,cACzCgT,EAAO1+D,KAAK+I,IAAIxF,KAAKge,OAAOU,SAAS2E,cAAgBunH,EAAW5qI,KAAKge,OAAOU,SAAS0E,eAAiBynH,GAC1G,GAAI1vE,GAAQ,KAAQA,GAAQ,GAAI,CAE5Bn7D,KAAK0qI,iBAAiBvvE,EAAMnkE,EAAGC,EAAGsB,EAAOD,GAD3BtB,EAAG,EAAGC,EAAG,IAEvB,IAAIuK,EAASxB,KAAK8qI,mBAAmB9qI,KAAKge,OAAOU,SAASkE,iBAAkB5iB,KAAKge,OAAOU,SAASoE,eAAgB9iB,KAAKge,OAAOU,SAASgF,aAAa,GACnJ,GAAI1jB,KAAK2+F,OAAQ,CACb,IACIosC,EADQ/qI,KAAKJ,QAAQ++C,qBAAqB,QAAQ,IAClCxoB,UACpB30B,EAAOxK,EAAI+zI,EAAQ/zI,EACnBwK,EAAOvK,EAAI8zI,EAAQ9zI,EAEvB+I,KAAKmqI,mBAAmB3oI,EAAOxK,EAAGwK,EAAOvK,EAAGuK,EAAOjJ,MAAOiJ,EAAOlJ,UAGzE8vI,EAAS9mG,UAAUwpG,mBAAqB,SAAU7pD,EAASC,EAASx9D,EAAasnH,GAC7E,IAAMhrI,KAAe,YAAKgrI,EAAQ,CAC9B,IAAIR,EAAWryI,OAAO6H,KAAK+V,MAAMxd,OAC7BkyI,EAAYtyI,OAAO6H,KAAK+V,MAAMzd,QAC9B+iB,EAAQ5e,KAAKqK,IAAI9G,KAAKkoD,aAAesiF,EAAUxqI,KAAKmoD,cAAgBsiF,GACpEjpI,EAAS,IAAI8a,GACbtlB,EAAIwK,EAAOxK,EAAKiqF,EAAUv9D,EAAerI,EACzCpkB,EAAIuK,EAAOvK,EAAKiqF,EAAUx9D,EAAerI,EAEzC9iB,EAAQiJ,EAAOjJ,MAASyH,KAAKge,OAAOU,SAAS2E,cAAgBK,EAAerI,EAC5E/iB,EAASkJ,EAAOlJ,OAAU0H,KAAKge,OAAOU,SAAS0E,eAAiBM,EAAerI,EACvErb,KAAKge,OAAOU,SAAS2E,cAAgBrjB,KAAKge,OAAOU,SAAS0E,eACtE,GAAI4nH,EAAQ,CACR,IAAI3uH,EAAO,IAAIC,GAKf,OAJAD,EAAKrlB,EAAIA,EACTqlB,EAAKplB,EAAIA,EACTolB,EAAK9jB,MAAQA,EACb8jB,EAAK/jB,OAASA,EACP+jB,EAEXrc,KAAKmqI,oBAAoBnzI,GAAIC,EAAGsB,EAAOD,GAE3C,OAAO,MAEX8vI,EAAS9mG,UAAUopG,iBAAmB,SAAUvvE,EAAMnkE,EAAGC,EAAGsB,EAAOD,EAAQsjE,GACvE,IAMIqvE,EACAC,EAPAV,EAAWryI,OAAO6H,KAAK+V,MAAMxd,OAC7BkyI,EAAYtyI,OAAO6H,KAAK+V,MAAMzd,QAG9B2oF,EAAUjqF,GAFDgJ,KAAKkoD,aAAesiF,GAENrvE,EACvB+lB,EAAUjqF,GAFD+I,KAAKmoD,cAAgBsiF,GAEPtvE,EAGdn7D,KAAKge,OAAOU,SAASs/D,gBACrB,IAAT7iB,GAAkC,QAApBn7D,KAAKqoI,aACnB4C,GAAQhqD,EAAUjhF,KAAKge,OAAOU,SAASkE,iBACvCsoH,GAAQhqD,EAAUlhF,KAAKge,OAAOU,SAASoE,gBAEnB,UAApB9iB,KAAKqoI,YAA8C,SAApBroI,KAAKqoI,WACpCroI,KAAKge,OAAOU,SAASy8C,KAAKA,EAAOn7D,KAAKge,OAAOU,SAASgF,YAAaunH,EAAMC,EAAMtvE,GAG/E57D,KAAKge,OAAO++D,IAAIkuD,EAAMC,EAAMtvE,IAIpCwsE,EAAS9mG,UAAU0kD,WAAa,SAAUD,GACtC,IAAIxtF,EACAD,EACAkJ,EAASxB,KAAKge,OAAOU,SAASs/D,gBAClCzlF,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OAChB,IAEI+iB,EAFAmvH,EAAWryI,OAAO6H,KAAK+V,MAAMxd,OAC7BkyI,EAAYtyI,OAAO6H,KAAK+V,MAAMzd,QAE9Bo8B,EAAIj4B,KAAK+I,IAAIjN,EAAOyH,KAAKge,OAAOU,SAAS2E,eACzCsR,EAAIl4B,KAAK+I,IAAIlN,EAAQ0H,KAAKge,OAAOU,SAAS0E,gBAC9CpjB,KAAKkoD,aAAexzB,EAAIj4B,KAAK+I,IAAIkvB,EAAI81G,EAAWC,EAAa91G,GAC7D30B,KAAKmoD,cAAgBxzB,EAAIl4B,KAAK+I,IAAImvB,EAAI81G,EAAYD,EAAY91G,GAC9DrZ,EAAQ5e,KAAKqK,IAAI0jI,EAAW91G,EAAG+1G,EAAY91G,GAC3C,IAAIrP,EAAY/D,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,cAC1DylB,EAAUplB,MAAMirI,gBAAkB,SAAW9vH,EAAQ,gBAAkB7Z,EAAOxK,EAAI,OAAUwK,EAAOvK,EAAK,MACxGquB,EAAUplB,MAAMuF,UAAY,SAAW4V,EAAQ,gBAAkB7Z,EAAOxK,EAAI,OAAUwK,EAAOvK,EAAK,MACxFsqB,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,kBAChDq2B,aAAa,YAAa,cAAiB10B,EAAOxK,EAAIqkB,EAAS,KAAQ7Z,EAAOvK,EAAIokB,EAAS,KAC/Frb,KAAK4iB,iBAAmBphB,EAAOxK,EAAIqkB,EACnCrb,KAAK8iB,eAAiBthB,EAAOvK,EAAIokB,EACjC,IAAIs+B,EAASp4B,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,iBACnDivD,E1D5IZ,SAA+B/6B,GAI3B,OAFqBqF,GAAkBrF,GACVvS,eAAeuS,EAAY,gB0DyIlCq3G,CAAeprI,KAAKJ,QAAQC,IAC1C8jG,EAAUhqD,EAAOiG,WAAW,MAC5ByrF,EAAclzI,OAAO6H,KAAK+V,MAAMxd,OAASyH,KAAKkoD,aAC9CojF,EAAenzI,OAAO6H,KAAK+V,MAAMzd,QAAU0H,KAAKmoD,cACpDkjF,EAAa5uI,KAAKqK,IAAIukI,EAAYC,GAClCx8E,EAAY54B,aAAa,YAAa,wBAEhCm1G,EAAa,KACnB1nC,EAAQxK,aAAakyC,EAAY,EAAG,EAAGA,EAAY,EAAG,GACtD1nC,EAAQpjD,UAAY,MACpBvgD,KAAK8qI,mBAAmB9qI,KAAKge,OAAOU,SAASkE,iBAAkB5iB,KAAKge,OAAOU,SAASoE,eAAgB9iB,KAAKge,OAAOU,SAASgF,cAG7H0kH,EAAS9mG,UAAUsmC,SAAW,SAAUxG,GACpC,GAAIphE,KAAK23C,MAAO,CACZ,IAAIn2C,EAASxB,KAAK8qI,mBAAmB9qI,KAAKge,OAAOU,SAASkE,iBAAkB5iB,KAAKge,OAAOU,SAASoE,eAAgB9iB,KAAKge,OAAOU,SAASgF,aAAa,GACnJ1jB,KAAKmqI,oBAAoB3oI,EAAOxK,GAAIwK,EAAOvK,EAAGuK,EAAOjJ,MAAOiJ,EAAOlJ,UAG3E8vI,EAAS9mG,UAAUsgC,aAAe,SAAUR,GACxC,GAAI57C,GAAS47C,EAAIp+D,0BACb,OAAQo+D,EAAIp+D,OAAOnD,IACf,KAAKG,KAAK25C,OAAO95C,GAAK,OAClBG,KAAK25C,OAAOz5C,MAAMqgC,OAAS,WAC3B,MACJ,KAAKvgC,KAAK25C,OAAO95C,GAAK,QAClBG,KAAK25C,OAAOz5C,MAAMqgC,OAAS,WAC3B,MACJ,KAAKvgC,KAAK25C,OAAO95C,GAAK,MAClBG,KAAK25C,OAAOz5C,MAAMqgC,OAAS,WAC3B,MACJ,KAAKvgC,KAAK25C,OAAO95C,GAAK,SAClBG,KAAK25C,OAAOz5C,MAAMqgC,OAAS,WAC3B,MACJ,KAAKvgC,KAAK25C,OAAO95C,GAAK,UAClBG,KAAK25C,OAAOz5C,MAAMqgC,OAAS,YAC3B,MACJ,KAAKvgC,KAAK25C,OAAO95C,GAAK,WAClBG,KAAK25C,OAAOz5C,MAAMqgC,OAAS,YAC3B,MACJ,KAAKvgC,KAAK25C,OAAO95C,GAAK,aAClBG,KAAK25C,OAAOz5C,MAAMqgC,OAAS,YAC3B,MACJ,KAAKvgC,KAAK25C,OAAO95C,GAAK,cAClBG,KAAK25C,OAAOz5C,MAAMqgC,OAAS,iBAKnCvgC,KAAK25C,OAAOz5C,MAAMqgC,OAAS,WAGnC6nG,EAAS9mG,UAAUgyB,UAAY,SAAU8N,GAIrC,GAHAphE,KAAK23C,OAAQ,EACb33C,KAAK4hE,aAAaR,GAClBphE,KAAKw+C,aAAex+C,KAAKwnB,cAAc45C,GACnCphE,KAAKqoI,WACL,OAAQroI,KAAKqoI,YACT,IAAK,OACIroI,KAAK0yD,UAAa1yD,KAAKqS,WAAWrb,IAAMgJ,KAAKw+C,aAAaxnD,GAAKgJ,KAAKqS,WAAWpb,IAAM+I,KAAKw+C,aAAavnD,IACxG+I,KAAKurI,aACLvrI,KAAK0yD,UAAW,GAEhB1yD,KAAK0yD,UACL1yD,KAAKgqI,eAET,MACJ,IAAK,QACIhqI,KAAK0yD,WACN1yD,KAAKurI,aACLvrI,KAAK0yD,UAAW,GAEpB1yD,KAAK8pI,0BACL,MACJ,IAAK,OACI9pI,KAAKqS,WAAWrb,IAAMgJ,KAAKw+C,aAAaxnD,GAAKgJ,KAAKqS,WAAWpb,IAAM+I,KAAKw+C,aAAavnD,GAAM+I,KAAK0yD,YACjG1yD,KAAK0yD,UAAW,EAChB1yD,KAAKuqI,8BAKrBvqI,KAAKsoI,UAAYtoI,KAAKw+C,cAE1B4pF,EAAS9mG,UAAUunG,gBAAkB,SAAUznE,GAC3CphE,KAAK0yD,UAAW,EAChB1yD,KAAKqoI,WAAa,GACdroI,KAAK2+F,SACL3+F,KAAK2+F,OAAOnhF,WAAW8R,YAAYtvB,KAAK2+F,QACxC3+F,KAAK2+F,OAAS,MAElB3+F,KAAK23C,OAAQ,EACbp2B,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAK,kBAAkBK,MAAM+qE,cAAgB,OAErFm9D,EAAS9mG,UAAU6/B,aAAe,SAAUC,GACxC,IAAI/6B,EAAQrmC,KAYZ,OAXIA,KAAKqhE,UACLC,aAAathE,KAAKqhE,UAEtBrhE,KAAKqhE,SAAW95B,WAAW,WACvB,IACI2hG,EADU3nH,SAASC,eAAe6kB,EAAMzmC,QAAQC,IAChCgoB,wBACpBwe,EAAMtwB,MAAMxd,MAAQ2wI,EAAM3wI,MAC1B8tC,EAAMtwB,MAAMzd,OAAS4wI,EAAM5wI,OAC3B+tC,EAAMoiG,eACNpiG,EAAMmiG,UAAUniG,EAAM5kC,WACvB,KACI,GAGX2mI,EAAS9mG,UAAU2xB,UAAY,SAAUmO,GAOrC,GANIA,EAAIp+D,OAAOnD,KAAOG,KAAK25C,OAAO95C,GAAK,iBACnCG,KAAKqoI,WAAa,QAElBjnE,EAAIp+D,OAAOnD,KAAOG,KAAK25C,OAAO95C,GAAK,iBACnCG,KAAKqoI,WAAa,OAElB7iH,GAAS47C,EAAIp+D,OAAQ,mBAErB,OADAhD,KAAKqoI,WAAa,QACVjnE,EAAIp+D,OAAOnD,IACf,KAAKG,KAAK25C,OAAO95C,GAAK,OAClBG,KAAK+pI,gBAAkB,OACvB,MACJ,KAAK/pI,KAAK25C,OAAO95C,GAAK,QAClBG,KAAK+pI,gBAAkB,QACvB,MACJ,KAAK/pI,KAAK25C,OAAO95C,GAAK,MAClBG,KAAK+pI,gBAAkB,MACvB,MACJ,KAAK/pI,KAAK25C,OAAO95C,GAAK,SAClBG,KAAK+pI,gBAAkB,SACvB,MACJ,KAAK/pI,KAAK25C,OAAO95C,GAAK,UAClBG,KAAK+pI,gBAAkB,UACvB,MACJ,KAAK/pI,KAAK25C,OAAO95C,GAAK,WAClBG,KAAK+pI,gBAAkB,WACvB,MACJ,KAAK/pI,KAAK25C,OAAO95C,GAAK,aAClBG,KAAK+pI,gBAAkB,aACvB,MACJ,KAAK/pI,KAAK25C,OAAO95C,GAAK,cAClBG,KAAK+pI,gBAAkB,cAInC/pI,KAAKqS,WAAarS,KAAKsoI,UAAYtoI,KAAKwnB,cAAc45C,GACtDphE,KAAKuoI,cAAgBvoI,KAAKge,OAAOU,SAAS2E,cAAgBrjB,KAAKge,OAAOU,SAAS0E,eAC1D7B,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAK,kBAC/CK,MAAM+qE,cAAgB,QAEzCm9D,EAAS9mG,UAAUiyB,QAAU,SAAU6N,GACnCphE,KAAKw+C,aAAex+C,KAAKwnB,cAAc45C,GACxBjpE,OAAO6H,KAAK+V,MAAMxd,OACjBJ,OAAO6H,KAAK+V,MAAMzd,QAClC,GAAI0H,KAAKqoI,WACL,GAAKroI,KAAKqS,WAAWrb,IAAMgJ,KAAKw+C,aAAaxnD,GAAKgJ,KAAKqS,WAAWpb,IAAM+I,KAAKw+C,aAAavnD,GACtF,GAAwB,QAApB+I,KAAKqoI,iBAIL,GAAIroI,KAAK2+F,OAAQ,CACb,IAAIn9F,EAAUxB,KAAKJ,QAAQ++C,qBAAqB,QAAQ,IAAKxoB,UAC7Dn2B,KAAK+pI,gBAAkB/pI,KAAK+pI,iBAAmB,GAC/C,IAAI/yI,EAAIwK,EAAOxK,EACXC,EAAIuK,EAAOvK,EACXsB,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OACkB,YAAzB0H,KAAK+pI,iBAA0D,aAAzB/pI,KAAK+pI,iBAC3B,eAAzB/pI,KAAK+pI,iBAAoC/pI,KAAK+pI,gBAClD/pI,KAAK2qI,mBAAmB3zI,EAAGC,EAAGsB,EAAOD,SAK7C,GAAI8oE,EAAIp+D,OAAOnD,KAAOG,KAAK25C,OAAO95C,GAAK,gBAAoC,WAAlBuhE,EAAIp+D,OAAOnD,GAAiB,CAK7EtH,GADAiJ,EAHMxB,KAAKJ,QAAQ++C,qBAAqB,OAAO,GACvCn9B,eAAexhB,KAAK25C,OAAO95C,GACjC,gBACSs2B,WACI59B,MACfD,EAASkJ,EAAOlJ,OACpB0H,KAAK0yD,UAAW,EAChB1yD,KAAKqoI,WAAa,MAClBroI,KAAK2qI,mBAAmB3qI,KAAKw+C,aAAaxnD,EAAIuB,EAAQ,EAAGyH,KAAKw+C,aAAavnD,EAAIqB,EAAS,EAAGC,EAAOD,GAClG0H,KAAK0yD,UAAW,EAIxB1yD,KAAK2+F,SACL3+F,KAAK2+F,OAAOnhF,WAAW8R,YAAYtvB,KAAK2+F,QACxC3+F,KAAK2+F,OAAS,MAElB3+F,KAAKqoI,WAAa,GAClBroI,KAAKqS,WAAa,KAClBrS,KAAKw+C,aAAe,KACpBx+C,KAAKsoI,UAAY,KACjBtoI,KAAK2+F,OAAS,KACd3+F,KAAKuoI,cAAgB,EACrBvoI,KAAK+pI,gBAAkB,GACvB/pI,KAAK0yD,UAAW,EAChB1yD,KAAK23C,OAAQ,EACbp2B,SAASC,eAAexhB,KAAK25C,OAAO95C,GAAK,kBAAkBK,MAAM+qE,cAAgB,OAErFm9D,EAAS9mG,UAAUiqG,WAAa,WAC5B,IAAI3tF,EAAI59C,KAAKJ,QAAQ++C,qBAAqB,OAAO,GAE7C3nD,GADQgJ,KAAKge,OAAOU,SAASgF,YACzB1jB,KAAKqS,WAAWrb,GACpBC,EAAI+I,KAAKqS,WAAWpb,EACpBsB,EAAQ,EACRD,EAAS,EACb,GAAwB,UAApB0H,KAAKqoI,WAAwB,CAC7B,IAEI7mI,EAFOo8C,EACPp8B,eAAexhB,KAAK25C,OAAO95C,GAAK,gBAClBs2B,UAClBn/B,EAAIwK,EAAOxK,EACXC,EAAIuK,EAAOvK,EACXsB,EAAQiJ,EAAOjJ,MACfD,EAASkJ,EAAOlJ,OAEpB,IAAI+iG,EAAgBzhE,GAAiB,QACjC/5B,GAAM,SAAU7I,EAAGA,EAAGC,EAAGA,EAAGsB,MAAOA,EAAOD,OAAQA,EAClD2f,KAAQ,cAAeigB,OAAU,OAAQszG,mBAAoB,MAAOC,kBAAmB,eAEvE7tF,EAAEp8B,eAAexhB,KAAKJ,QAAQC,GAAK,kBACzC0vB,YAAY8rE,GAC1Br7F,KAAK2+F,OAAStD,GAElB+sC,EAAS9mG,UAAU9Z,cAAgB,SAAU45C,GACzC,IAAIN,EACA/kE,EACAC,EACJ,IAAmC,IAA/BolE,EAAIvlE,KAAKqiB,QAAQ,SAAiB,CAElC,IAAIsc,GADJsmC,EAAWM,GACUL,eAAe,GAAGtmC,QACnCC,EAAQomC,EAASC,eAAe,GAAGpmC,QACvC5+B,EAAUy+B,EAAQx6B,KAAKJ,QAAQ2mI,WAC/BvqI,EAAU0+B,EAAQ16B,KAAKJ,QAAQ0mI,eAG/BvqI,EAAUqlE,EAAI3mC,QACdz+B,EAAUolE,EAAIzmC,QAElB,IAAIqmC,EAAehhE,KAAKJ,QAAQioB,wBAGhC,OAFA9rB,GAAoBilE,EAAap+D,KACjC5G,GAAoBglE,EAAaj+D,KACxB/L,EAAG+E,EAAUiE,KAAK4iB,iBAAkB3rB,EAAG+E,EAAUgE,KAAK8iB,iBAQnEslH,EAAS9mG,UAAUsa,QAAU,WAIzB,GAHA57C,KAAKu7C,eACLv7C,KAAK67C,OAAO,cACZnZ,EAAOpB,UAAUsa,QAAQxU,KAAKpnC,MAC1BuhB,SAASC,eAAexhB,KAAKJ,QAAQC,IAAK,CAC1CG,KAAKJ,QAAQusB,UAAU2vB,OAAO,cAC9B,IAAI77C,EAAUshB,SAASC,eAAexhB,KAAKJ,QAAQC,GAAK,WACpDI,GACAD,KAAKJ,QAAQ0vB,YAAYrvB,GAGjCD,KAAKge,OAAOgO,MAAM7lB,OAAOnG,KAAKge,OAAOgO,MAAM9N,QAAQle,KAAKJ,QAAQC,IAAK,GACrEG,KAAK4xF,gBAAkB,KACvB5xF,KAAK25C,OAAS,KACd35C,KAAKge,OAAS,MAKlBoqH,EAAS9mG,UAAUqa,cAAgB,WAI/B,MAAO,YAEX1Z,IACImB,WAAS,SACVglG,EAAS9mG,UAAW,aAAS,GAChCW,IACImB,WAAS,SACVglG,EAAS9mG,UAAW,cAAU,GACjCW,IACImB,WAAS,KACVglG,EAAS9mG,UAAW,gBAAY,GACnCW,IACIw+D,WACD2nC,EAAS9mG,UAAW,eAAW,GAC3B8mG,GACTrpF"}