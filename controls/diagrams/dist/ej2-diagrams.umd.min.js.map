{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/utility/connector.js","../src/diagram/objects/tooltip.js","../src/diagram/objects/connector.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/constraints-util.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/uml-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/core/appearance.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/ruler/ruler.js","../src/diagram/interaction/selector.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/core/containers/grid.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/objects/node.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/interaction/line-routing.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.connectors.length === 0)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode) {\n    var laneIndex = findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane) {\n    var shape = swimLane.shape;\n    if (shape.lanes.length === 1) {\n        diagram.remove(swimLane);\n    }\n    else {\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        var row = void 0;\n        var i = void 0;\n        var cell = void 0;\n        var j = void 0;\n        var child = void 0;\n        var grid = swimLane.wrapper.children[0];\n        var laneIndex = findLaneIndex(swimLane, lane);\n        var undoObj = cloneObject(shape.lanes[laneIndex]);\n        removeLaneChildNode(diagram, swimLane, lane);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                redoObject: cloneObject(lane), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        shape.lanes.splice(laneIndex, 1);\n        if (shape.orientation === 'Horizontal') {\n            row = grid.rows[lane.rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeRow(lane.rowIndex);\n        }\n        else {\n            swimLane.width = (swimLane.width !== undefined) ?\n                swimLane.width - grid.rows[0].cells[lane.columnIndex].actualSize.width : swimLane.width;\n            for (i = 0; i < grid.rows.length; i++) {\n                cell = grid.rows[i].cells[lane.columnIndex];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeColumn(lane.columnIndex);\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        ChangeLaneIndex(diagram, swimLane, lane.rowIndex);\n        diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phase.columnIndex];\n            prevCell = (row.cells.length - 1 === phase.columnIndex) ? row.cells[phase.columnIndex - 1] :\n                row.cells[phase.columnIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phase.columnIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phase.columnIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    grid.removeColumn(phase.columnIndex);\n    if ((phase.columnIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phase.columnIndex].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phase.columnIndex - 1].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    row = grid.rows[phase.rowIndex];\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phase.rowIndex - 1] : grid.rows[phase.rowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    grid.removeRow(phase.rowIndex);\n    if ((phase.rowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phase.rowIndex].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phase.rowIndex - 1].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className) {\n    var elements = document.getElementsByClassName(className);\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        node.offsetX += offsetX;\n                        node.offsetY += offsetY;\n                        node.width += width;\n                        node.height += height;\n                        node.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(node, {}, {\n                            offsetX: node.offsetX, offsetY: node.offsetY,\n                            width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                        });\n                        objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.nodes[index],\n                                newValue: newProp.nodes[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.connectors[index],\n                                newValue: newProp.connectors[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = { element: this, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                var getDefaults = getFunction(this.getNodeDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(node, this);\n                    node.offsetX = (defaults && defaults.width) || node.offsetX / 2;\n                    node.offsetY = (defaults && defaults.height) || node.offsetY / 2;\n                }\n                node.offsetX = (node.width || 50) / 2;\n                node.offsetY = (node.height || 50) / 2;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                var laneId = swimLane + lane + i;\n                if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                    var laneNode = this.nameTable[laneId].wrapper.bounds;\n                    var focusPoint = {\n                        x: laneNode.x + (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                        y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                    };\n                    if (swimlaneNode.shape.orientation === 'Horizontal') {\n                        focusPoint.y = laneNode.y;\n                    }\n                    else {\n                        focusPoint.x = laneNode.x;\n                        var laneHeaderId = this.nameTable[laneId].parentId +\n                            swimlaneNode.shape.lanes[0].id + '_0_header';\n                        focusPoint.y = laneNode.y +\n                            (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                node.margin.top + (node.wrapper.bounds.height / 2));\n                    }\n                    if (laneNode.containsPoint(focusPoint) ||\n                        (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                        addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                        updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                        break;\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldObject, newValue: node };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ?\n                        this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'];\n        var top = diagram.spatialSearch['pageTop'];\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        this.updateNodesInVirtualRegion(diagram.nodes);\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.offsetX, y: this.startNode.offsetY } :\n                    { x: this.targetNode.offsetX, y: this.targetNode.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            if (!sourcePortID && this.startNode) {\n                for (var i = sourceLeft.gridX; i <= sourceRight.gridX; i++) {\n                    grid = this.gridCollection[i][sourceLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n                for (var i = sourceTop.gridY; i <= sourceBottom.gridY; i++) {\n                    grid = this.gridCollection[sourceTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.sourceGridCollection.indexOf(grid) === -1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n            }\n            else {\n                this.sourceGridCollection.push(this.startGrid);\n            }\n            if (!targetPortID && this.targetNode) {\n                for (var i = targetLeft.gridX; i <= targetRight.gridX; i++) {\n                    grid = this.gridCollection[i][targetLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                for (var i = targetTop.gridY; i <= targetBottom.gridY; i++) {\n                    grid = this.gridCollection[targetTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.targetGridCollection.indexOf(grid) === -1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                if (this.targetGridCollection.indexOf(this.targetGrid) === -1) {\n                    if (this.targetGrid.nodeId.length > 1 && this.targetGridCollection.length === 1) {\n                        this.targetGrid = this.targetGridCollection[0];\n                    }\n                }\n            }\n            else {\n                this.targetGridCollection.push(this.targetGrid);\n            }\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours);\n            this.neigbour(startGrid, 'right', neigbours);\n            this.neigbour(startGrid, 'bottom', neigbours);\n            this.neigbour(startGrid, 'left', neigbours);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && this.sourceGridCollection.indexOf(nearGrid) === -1) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.inEdges.length + node.outEdges.length > 0) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isCollapsed = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            this.isExpand = true;\n                            this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                            if (index === 0) {\n                                this.isCollapsed = true;\n                            }\n                            else {\n                                this.isCollapsed = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh && this.isCollapsed) {\n            this.refresh();\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette');\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","id","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","LineRouting","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","currentSymbol","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","totalHeight","phases","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","annotations","annotation","addObjectToGrid","addObject","headerDefine","randomId","phaseDefine","laneCollection","isPhase","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","ReadOnly","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeChildren","removePhase","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","removeColumn","removeHorizontalPhase","prevChild","removeRow","removeVerticalPhase","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","property","Array","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","getChildNode","Browser","info","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","allowDrag","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","imageSource","stretch","contentSize","measureImage","nativeSVG","measureNativeContent","templatePosition","getAvailableSize","measureNativeSvg","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","parentObj","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getWrapper","All","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelectedNodeProperties","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","content_1","openOn","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","isBlazor","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","addNodeToLane","getDefaults","defaults","laneId","hideTooltip","propertyChangeValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","PreventHistory","updateSvgNodes","updateProcesses","moveNode","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","removeSwimLane","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","removeLane","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","InheritLineRouting","canEnableRouting","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","startGridNode","getIntermediatePoints","updateConnectorSegments","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","neigbours","findNearestNeigbours","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","nodesCollection","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isCollapsed","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","measureElemnt","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","elements","removeElementsByClass","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}